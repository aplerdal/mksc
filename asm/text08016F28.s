.include "asm/macros.inc"

    .syntax unified
    .text

    thumb_func_start sub_8017170
    sub_8017170:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    movs r1, #0x8E
    lsls r1, r1, #0x01
    adds r7, r0, r1
    movs r1, #0xD4
    lsls r1, r1, #0x03
    adds r1, r1, r0
    mov r8, r1
    ldr r2, _08017224 @ =0x03002C80
    ldrh r1, [r2, #0x16]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _08017196
    movs r0, #0x00
    strh r0, [r2, #0x16]
    _08017196:
    movs r0, #0x01
    movs r1, #0xC1
    negs r1, r1
    bl irq_updateMask
    ldr r1, _08017228 @ =0x04000202
    movs r0, #0xC0
    strh r0, [r1, #0x00]
    ldr r4, _0801722C @ =0x08012255
    adds r1, r4, #0x0
    cmp r4, #0x00
    bne _080171B0
    ldr r1, _08017230 @ =0x0802D5F1
    _080171B0:
    movs r0, #0x06
    bl irq_setHandler
    adds r1, r4, #0x0
    cmp r1, #0x00
    bne _080171BE
    ldr r1, _08017230 @ =0x0802D5F1
    _080171BE:
    movs r0, #0x07
    bl irq_setHandler
    movs r4, #0x00
    ldr r6, _08017234 @ =0x03002E20
    movs r0, #0x01
    movs r1, #0x02
    negs r1, r1
    bl irq_updateMask
    str r4, [r6, #0x0C]
    movs r0, #0x02
    ldr r1, _08017238 @ =0x00010001
    bl irq_updateMask
    movs r0, #0x00
    ldr r1, _0801723C @ =0x00003EDC
    bl sub_8011DF0
    ldr r0, _08017240 @ =0x04000200
    ldrh r0, [r0, #0x00]
    movs r1, #0x80
    lsls r1, r1, #0x09
    orrs r1, r0
    movs r0, #0x00
    bl irq_updateMask
    ldr r5, _08017244 @ =0x0801C879
    movs r0, #0x01
    movs r1, #0x02
    negs r1, r1
    bl irq_updateMask
    str r5, [r6, #0x0C]
    movs r0, #0x02
    ldr r1, _08017238 @ =0x00010001
    bl irq_updateMask
    mov r0, r8
    strb r4, [r0, #0x02]
    str r4, [r7, #0x14]
    str r4, [r7, #0x00]
    str r4, [r7, #0x10]
    str r4, [r7, #0x0C]
    str r4, [r7, #0x18]
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _08017224: .4byte 0x03002C80
    _08017228: .4byte 0x04000202
    _0801722C: .4byte sub_8012254
    _08017230: .4byte main_dummyIrqHandler
    _08017234: .4byte 0x03002E20
    _08017238: .4byte 0x00010001
    _0801723C: .4byte 0x00003EDC
    _08017240: .4byte 0x04000200
    _08017244: .4byte sub_801C878
    thumb_func_start sub_8017248
    sub_8017248:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    mov r10, r0
    movs r5, #0x8E
    lsls r5, r5, #0x01
    add r5, r10
    movs r7, #0xD4
    lsls r7, r7, #0x03
    add r7, r10
    ldrb r0, [r7, #0x02]
    cmp r0, #0x00
    beq _0801726C
    subs r0, #0x01
    strb r0, [r7, #0x02]
    b _080173FA
    _0801726C:
    ldr r0, [r5, #0x00]
    cmp r0, #0x00
    bne _0801727C
    ldr r0, _08017278 @ =0x000037E7
    b _0801727E
    .byte 0x00, 0x00
    _08017278: .4byte 0x000037E7
    _0801727C:
    ldr r0, _080172F8 @ =0x0000B7E7
    _0801727E:
    strh r0, [r7, #0x04]
    adds r0, r7, #0x4
    adds r4, r7, #0x0
    adds r4, #0x0C
    adds r1, r4, #0x0
    movs r2, #0x00
    bl sub_8011EE0
    mov r8, r0
    ldr r0, _080172FC @ =0x04000200
    ldrh r0, [r0, #0x00]
    movs r1, #0x80
    lsls r1, r1, #0x09
    orrs r1, r0
    movs r0, #0x00
    bl irq_updateMask
    bl sub_8012370
    movs r6, #0x00
    mov r9, r6
    str r6, [r5, #0x0C]
    movs r0, #0xC0
    lsls r0, r0, #0x06
    mov r1, r8
    ands r0, r1
    mov r12, r4
    cmp r0, #0x00
    bne _0801732E
    movs r3, #0x00
    ldr r4, _08017300 @ =0x000037E7
    _080172BC:
    movs r0, #0x80
    lsls r0, r0, #0x01
    lsls r0, r3
    mov r1, r8
    ands r0, r1
    cmp r0, #0x00
    beq _08017310
    lsls r0, r3, #0x03
    add r0, r12
    ldrh r2, [r0, #0x00]
    adds r0, r4, #0x0
    ands r0, r2
    cmp r0, r4
    bne _0801730A
    adds r6, #0x01
    movs r1, #0x01
    lsls r1, r3
    mov r0, r8
    ands r0, r1
    cmp r0, #0x00
    beq _0801730A
    movs r0, #0x01
    add r9, r0
    ldr r0, _080172F8 @ =0x0000B7E7
    cmp r2, r0
    bne _08017304
    ldr r0, [r5, #0x10]
    orrs r0, r1
    b _08017308
    .byte 0x00, 0x00
    _080172F8: .4byte 0x0000B7E7
    _080172FC: .4byte 0x04000200
    _08017300: .4byte 0x000037E7
    _08017304:
    ldr r0, [r5, #0x10]
    bics r0, r1
    _08017308:
    str r0, [r5, #0x10]
    _0801730A:
    adds r3, #0x01
    cmp r3, #0x03
    ble _080172BC
    _08017310:
    movs r3, #0x00
    ldr r1, [r5, #0x10]
    movs r2, #0x01
    _08017316:
    adds r0, r1, #0x0
    asrs r0, r3
    ands r0, r2
    cmp r0, #0x00
    beq _08017326
    ldr r0, [r5, #0x0C]
    adds r0, #0x01
    str r0, [r5, #0x0C]
    _08017326:
    adds r3, #0x01
    cmp r3, #0x03
    ble _08017316
    b _0801733E
    _0801732E:
    bl sub_8012388
    ldr r1, _0801734C @ =0x00003EDC
    movs r0, #0x00
    bl sub_8011DF0
    movs r0, #0x1E
    strb r0, [r7, #0x02]
    _0801733E:
    movs r0, #0x9E
    lsls r0, r0, #0x02
    adds r1, r5, r0
    cmp r6, #0x02
    bgt _08017350
    str r6, [r1, #0x00]
    b _08017354
    _0801734C: .4byte 0x00003EDC
    _08017350:
    movs r0, #0x01
    str r0, [r1, #0x00]
    _08017354:
    ldr r0, _08017368 @ =0x04000128
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x1A
    lsrs r0, r0, #0x1E
    str r0, [r5, #0x04]
    cmp r6, #0x02
    bne _0801736C
    movs r0, #0x01
    b _0801736E
    .byte 0x00, 0x00
    _08017368: .4byte 0x04000128
    _0801736C:
    movs r0, #0x00
    _0801736E:
    str r0, [r5, #0x18]
    cmp r6, r9
    beq _0801737A
    ldr r0, [r5, #0x14]
    adds r0, #0x01
    b _0801737C
    _0801737A:
    movs r0, #0x00
    _0801737C:
    str r0, [r5, #0x14]
    ldr r0, [r5, #0x14]
    cmp r0, #0x08
    ble _080173AA
    movs r0, #0x9E
    lsls r0, r0, #0x02
    adds r1, r5, r0
    movs r0, #0x00
    str r0, [r1, #0x00]
    str r0, [r5, #0x04]
    movs r6, #0x00
    str r6, [r5, #0x18]
    str r6, [r5, #0x00]
    str r6, [r5, #0x10]
    str r6, [r5, #0x0C]
    bl sub_8012388
    ldr r1, _080173D8 @ =0x00003EDC
    movs r0, #0x00
    bl sub_8011DF0
    movs r0, #0x1E
    strb r0, [r7, #0x02]
    _080173AA:
    movs r0, #0x00
    str r0, [r5, #0x1C]
    ldr r0, [r5, #0x18]
    cmp r0, #0x00
    beq _080173FA
    movs r1, #0x80
    mov r0, r8
    ands r1, r0
    cmp r1, #0x00
    beq _080173DC
    movs r0, #0xD4
    lsls r0, r0, #0x03
    add r0, r10
    movs r4, #0x01
    strb r4, [r0, #0x00]
    movs r0, #0x09
    bl main_checkKeysTriggered
    cmp r0, #0x00
    beq _080173F0
    str r4, [r5, #0x00]
    b _080173F0
    .byte 0x00, 0x00
    _080173D8: .4byte 0x00003EDC
    _080173DC:
    movs r0, #0xD4
    lsls r0, r0, #0x03
    add r0, r10
    strb r1, [r0, #0x00]
    ldrh r1, [r7, #0x0C]
    ldr r0, _08017408 @ =0x0000B7E7
    cmp r1, r0
    bne _080173F0
    movs r0, #0x01
    str r0, [r5, #0x00]
    _080173F0:
    ldr r0, [r5, #0x0C]
    cmp r6, r0
    bne _080173FA
    movs r0, #0x09
    str r0, [r5, #0x1C]
    _080173FA:
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    _08017408: .4byte 0x0000B7E7
    thumb_func_start sub_801740C
    sub_801740C:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    mov r8, r0
    movs r4, #0x00
    movs r5, #0x00
    movs r3, #0xD4
    lsls r3, r3, #0x03
    add r3, r8
    movs r0, #0xC0
    lsls r0, r0, #0x06
    ands r0, r1
    cmp r0, #0x00
    bne _0801745A
    movs r2, #0x00
    movs r7, #0x80
    lsls r7, r7, #0x01
    movs r6, #0x01
    _08017430:
    adds r0, r7, #0x0
    lsls r0, r2
    ands r0, r1
    cmp r0, #0x00
    beq _08017448
    adds r4, #0x01
    adds r0, r6, #0x0
    lsls r0, r2
    ands r0, r1
    cmp r0, #0x00
    beq _08017448
    adds r5, #0x01
    _08017448:
    adds r2, #0x01
    cmp r2, #0x03
    ble _08017430
    cmp r4, r5
    bne _0801745A
    cmp r4, #0x02
    bne _0801745A
    movs r0, #0x00
    b _0801745E
    _0801745A:
    ldrb r0, [r3, #0x03]
    adds r0, #0x01
    _0801745E:
    strb r0, [r3, #0x03]
    ldrb r0, [r3, #0x03]
    cmp r0, #0x00
    bne _0801746A
    movs r0, #0x00
    b _08017494
    _0801746A:
    cmp r0, #0x78
    bls _08017492
    bl sub_8012388
    ldr r1, _080174A0 @ =0x000006A1
    add r1, r8
    movs r4, #0x00
    movs r0, #0x40
    strb r0, [r1, #0x00]
    movs r3, #0x0E
    ldr r2, _080174A4 @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x00]
    strb r0, [r1, #0x01]
    ldr r0, [r2, #0x00]
    strb r3, [r0, #0x00]
    ldr r0, [r2, #0x00]
    strb r4, [r0, #0x02]
    ldr r0, [r2, #0x00]
    str r4, [r0, #0x04]
    _08017492:
    movs r0, #0x01
    _08017494:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    _080174A0: .4byte 0x000006A1
    _080174A4: .4byte 0x03000190
    thumb_func_start sub_80174A8
    sub_80174A8:
    adds r2, r0, #0x0
    movs r3, #0x00
    movs r1, #0x03
    adds r0, #0x24
    _080174B0:
    strh r3, [r0, #0x00]
    subs r0, #0x08
    subs r1, #0x01
    cmp r1, #0x00
    bge _080174B0
    movs r1, #0x00
    movs r0, #0x40
    strb r0, [r2, #0x01]
    strb r1, [r2, #0x03]
    adds r0, r2, #0x0
    adds r0, #0x2D
    strb r1, [r0, #0x00]
    adds r0, #0x01
    strb r1, [r0, #0x00]
    adds r0, #0x01
    strb r1, [r0, #0x00]
    adds r0, #0x01
    strb r1, [r0, #0x00]
    adds r0, #0x01
    strb r1, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_80174DC
    sub_80174DC:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    adds r7, r0, #0x0
    movs r0, #0xD4
    lsls r0, r0, #0x03
    adds r4, r7, r0
    ldrb r1, [r4, #0x01]
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _080174FE
    movs r0, #0x80
    lsls r0, r0, #0x01
    b _08017556
    _080174FE:
    movs r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    beq _08017510
    ldr r0, _0801750C @ =0x00000201
    b _08017556
    .byte 0x00, 0x00
    _0801750C: .4byte 0x00000201
    _08017510:
    movs r0, #0x04
    ands r0, r1
    cmp r0, #0x00
    beq _08017520
    ldr r0, _0801751C @ =0x00000202
    b _08017556
    _0801751C: .4byte 0x00000202
    _08017520:
    movs r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _08017530
    ldr r0, _0801752C @ =0x00000401
    b _08017556
    _0801752C: .4byte 0x00000401
    _08017530:
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    beq _08017540
    ldr r0, _0801753C @ =0x00000402
    b _08017556
    _0801753C: .4byte 0x00000402
    _08017540:
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _0801754E
    movs r0, #0x80
    lsls r0, r0, #0x04
    b _08017556
    _0801754E:
    movs r0, #0x40
    ands r0, r1
    movs r0, #0x80
    lsls r0, r0, #0x06
    _08017556:
    strh r0, [r4, #0x04]
    adds r0, r4, #0x4
    adds r5, r4, #0x0
    adds r5, #0x0C
    adds r1, r5, #0x0
    movs r2, #0x00
    bl sub_8011EE0
    mov r10, r0
    ldr r0, _080175B0 @ =0x04000200
    ldrh r0, [r0, #0x00]
    movs r1, #0x80
    lsls r1, r1, #0x09
    orrs r1, r0
    movs r0, #0x00
    bl irq_updateMask
    bl sub_8012370
    adds r6, r4, #0x0
    adds r6, #0x31
    ldrb r0, [r6, #0x00]
    mov r9, r5
    mov r8, r6
    cmp r0, #0x00
    bne _0801758C
    b _08017730
    _0801758C:
    subs r0, #0x01
    strb r0, [r6, #0x00]
    lsls r0, r0, #0x18
    cmp r0, #0x00
    bne _0801767A
    ldrb r1, [r4, #0x01]
    movs r5, #0x01
    adds r0, r5, #0x0
    ands r0, r1
    cmp r0, #0x00
    bne _0801767A
    movs r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    beq _080175B4
    movs r0, #0x40
    b _08017678
    .byte 0x00, 0x00
    _080175B0: .4byte 0x04000200
    _080175B4:
    movs r0, #0x04
    ands r0, r1
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    cmp r3, #0x00
    beq _080175C4
    movs r0, #0x40
    b _08017678
    _080175C4:
    movs r0, #0x08
    ands r0, r1
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    cmp r2, #0x00
    beq _080175F0
    adds r0, r4, #0x0
    adds r0, #0x2F
    strb r5, [r0, #0x00]
    ldrb r1, [r4, #0x01]
    movs r0, #0xF7
    ands r0, r1
    strb r0, [r4, #0x01]
    ldrb r0, [r4, #0x00]
    cmp r0, #0x00
    beq _080175EC
    adds r0, r7, #0x0
    adds r0, #0x28
    strb r3, [r0, #0x00]
    b _08017646
    _080175EC:
    strb r0, [r7, #0x1C]
    b _0801760E
    _080175F0:
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    beq _0801766C
    adds r0, r4, #0x0
    adds r0, #0x30
    strb r5, [r0, #0x00]
    ldrb r1, [r4, #0x01]
    movs r0, #0xEF
    ands r0, r1
    strb r0, [r4, #0x01]
    ldrb r1, [r4, #0x00]
    cmp r1, #0x00
    beq _08017640
    strb r2, [r7, #0x1C]
    _0801760E:
    adds r0, r7, #0x0
    adds r0, #0x28
    ldrb r5, [r0, #0x00]
    cmp r5, #0x00
    bne _0801767A
    movs r0, #0x40
    strb r0, [r4, #0x01]
    movs r3, #0x12
    ldr r2, _0801763C @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x00]
    strb r0, [r1, #0x01]
    ldr r0, [r2, #0x00]
    strb r3, [r0, #0x00]
    ldr r0, [r2, #0x00]
    strb r5, [r0, #0x02]
    ldr r0, [r2, #0x00]
    str r5, [r0, #0x04]
    movs r0, #0x65
    bl m4aSongNumStart
    b _0801767A
    .byte 0x00, 0x00
    _0801763C: .4byte 0x03000190
    _08017640:
    adds r0, r7, #0x0
    adds r0, #0x28
    strb r1, [r0, #0x00]
    _08017646:
    ldrb r5, [r7, #0x1C]
    cmp r5, #0x00
    bne _0801767A
    movs r0, #0x40
    strb r0, [r4, #0x01]
    movs r3, #0x12
    ldr r2, _08017668 @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x00]
    strb r0, [r1, #0x01]
    ldr r0, [r2, #0x00]
    strb r3, [r0, #0x00]
    ldr r0, [r2, #0x00]
    strb r5, [r0, #0x02]
    ldr r0, [r2, #0x00]
    str r5, [r0, #0x04]
    b _0801767A
    _08017668: .4byte 0x03000190
    _0801766C:
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _0801767A
    movs r0, #0xDF
    ands r0, r1
    _08017678:
    strb r0, [r4, #0x01]
    _0801767A:
    adds r0, r7, #0x0
    mov r1, r10
    bl sub_801740C
    cmp r0, #0x00
    beq _08017688
    b _080178AE
    _08017688:
    ldrb r0, [r4, #0x00]
    movs r1, #0x01
    subs r1, r1, r0
    lsls r1, r1, #0x03
    add r1, r9
    lsls r0, r0, #0x03
    mov r3, r9
    adds r2, r3, r0
    ldrh r0, [r1, #0x00]
    ldrh r1, [r2, #0x00]
    cmp r0, r1
    bhi _080176A2
    b _080178AE
    _080176A2:
    ldrh r1, [r2, #0x00]
    ldr r0, _080176B8 @ =0x00000202
    cmp r1, r0
    beq _080176E2
    cmp r1, r0
    bgt _080176BC
    subs r0, #0x01
    cmp r1, r0
    beq _080176D0
    b _080178AE
    .byte 0x00, 0x00
    _080176B8: .4byte 0x00000202
    _080176BC:
    ldr r0, _080176CC @ =0x00000401
    cmp r1, r0
    beq _080176FC
    adds r0, #0x01
    cmp r1, r0
    beq _08017716
    b _080178AE
    .byte 0x00, 0x00
    _080176CC: .4byte 0x00000401
    _080176D0:
    adds r0, r4, #0x0
    adds r0, #0x2D
    ldrb r2, [r0, #0x00]
    cmp r2, #0x00
    beq _080176DC
    b _080178AE
    _080176DC:
    ldrb r1, [r4, #0x01]
    movs r0, #0x02
    b _08017726
    _080176E2:
    adds r0, r4, #0x0
    adds r0, #0x2E
    ldrb r2, [r0, #0x00]
    cmp r2, #0x00
    beq _080176EE
    b _080178AE
    _080176EE:
    ldrb r1, [r4, #0x01]
    movs r0, #0x04
    orrs r0, r1
    strb r0, [r4, #0x01]
    mov r0, r8
    strb r2, [r0, #0x00]
    b _080178AE
    _080176FC:
    adds r0, r4, #0x0
    adds r0, #0x2F
    ldrb r2, [r0, #0x00]
    cmp r2, #0x00
    beq _08017708
    b _080178AE
    _08017708:
    ldrb r1, [r4, #0x01]
    movs r0, #0x08
    orrs r0, r1
    strb r0, [r4, #0x01]
    mov r1, r8
    strb r2, [r1, #0x00]
    b _080178AE
    _08017716:
    adds r0, r4, #0x0
    adds r0, #0x30
    ldrb r2, [r0, #0x00]
    cmp r2, #0x00
    beq _08017722
    b _080178AE
    _08017722:
    ldrb r1, [r4, #0x01]
    movs r0, #0x10
    _08017726:
    orrs r0, r1
    strb r0, [r4, #0x01]
    mov r3, r8
    strb r2, [r3, #0x00]
    b _080178AE
    _08017730:
    adds r0, r7, #0x0
    mov r1, r10
    bl sub_801740C
    cmp r0, #0x00
    beq _0801773E
    b _080178AE
    _0801773E:
    ldrb r0, [r4, #0x00]
    movs r3, #0x01
    subs r1, r3, r0
    lsls r1, r1, #0x03
    adds r1, r5, r1
    lsls r0, r0, #0x03
    adds r2, r5, r0
    ldrh r0, [r1, #0x00]
    ldrh r1, [r2, #0x00]
    cmp r0, r1
    bls _080177F0
    ldrh r1, [r2, #0x00]
    ldr r0, _08017774 @ =0x00000401
    cmp r1, r0
    beq _080177CC
    cmp r1, r0
    bgt _08017788
    ldr r0, _08017778 @ =0x00000201
    cmp r1, r0
    beq _080177AA
    cmp r1, r0
    bgt _0801777C
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    beq _080177A4
    b _080178AE
    _08017774: .4byte 0x00000401
    _08017778: .4byte 0x00000201
    _0801777C:
    ldr r0, _08017784 @ =0x00000202
    cmp r1, r0
    beq _080177BC
    b _080178AE
    _08017784: .4byte 0x00000202
    _08017788:
    movs r0, #0x80
    lsls r0, r0, #0x04
    cmp r1, r0
    bne _08017792
    b _080178AE
    _08017792:
    cmp r1, r0
    ble _08017798
    b _080178AE
    _08017798:
    ldr r0, _080177A0 @ =0x00000402
    cmp r1, r0
    beq _080177DC
    b _080178AE
    _080177A0: .4byte 0x00000402
    _080177A4:
    ldrb r1, [r4, #0x01]
    movs r0, #0x01
    b _080177EA
    _080177AA:
    adds r0, r4, #0x0
    adds r0, #0x2D
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    beq _080177B6
    b _080178AE
    _080177B6:
    ldrb r1, [r4, #0x01]
    movs r0, #0x02
    b _080177EA
    _080177BC:
    adds r0, r4, #0x0
    adds r0, #0x2E
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    bne _080178AE
    ldrb r1, [r4, #0x01]
    movs r0, #0x04
    b _080177EA
    _080177CC:
    adds r0, r4, #0x0
    adds r0, #0x2F
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    bne _080178AE
    ldrb r1, [r4, #0x01]
    movs r0, #0x08
    b _080177EA
    _080177DC:
    adds r0, r4, #0x0
    adds r0, #0x30
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    bne _080178AE
    ldrb r1, [r4, #0x01]
    movs r0, #0x10
    _080177EA:
    orrs r0, r1
    strb r0, [r4, #0x01]
    b _080178AE
    _080177F0:
    ldrh r0, [r4, #0x0C]
    ldrh r1, [r4, #0x14]
    cmp r0, r1
    bne _080178AE
    adds r1, r0, #0x0
    ldr r0, _08017818 @ =0x00000401
    cmp r1, r0
    beq _0801788C
    cmp r1, r0
    bgt _08017820
    ldr r0, _0801781C @ =0x00000201
    cmp r1, r0
    beq _08017838
    cmp r1, r0
    ble _080178AE
    adds r0, #0x01
    cmp r1, r0
    beq _08017850
    b _080178AE
    .byte 0x00, 0x00
    _08017818: .4byte 0x00000401
    _0801781C: .4byte 0x00000201
    _08017820:
    movs r0, #0x80
    lsls r0, r0, #0x04
    cmp r1, r0
    beq _080178A4
    cmp r1, r0
    bgt _080178AE
    ldr r0, _08017834 @ =0x00000402
    cmp r1, r0
    beq _08017898
    b _080178AE
    _08017834: .4byte 0x00000402
    _08017838:
    adds r1, r4, #0x0
    adds r1, #0x2D
    ldrb r0, [r1, #0x00]
    cmp r0, #0x00
    bne _080178AE
    strb r3, [r1, #0x00]
    movs r0, #0x08
    strb r0, [r6, #0x00]
    ldrb r5, [r4, #0x00]
    cmp r5, #0x00
    bne _080178AE
    b _08017866
    _08017850:
    adds r0, r4, #0x0
    adds r0, #0x2E
    ldrb r5, [r0, #0x00]
    cmp r5, #0x00
    bne _080178AE
    strb r3, [r0, #0x00]
    movs r0, #0x08
    strb r0, [r6, #0x00]
    ldrb r0, [r4, #0x00]
    cmp r0, #0x00
    beq _080178AE
    _08017866:
    movs r0, #0x40
    strb r0, [r4, #0x01]
    movs r3, #0x11
    ldr r2, _08017888 @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x00]
    strb r0, [r1, #0x01]
    ldr r0, [r2, #0x00]
    strb r3, [r0, #0x00]
    ldr r0, [r2, #0x00]
    strb r5, [r0, #0x02]
    ldr r0, [r2, #0x00]
    str r5, [r0, #0x04]
    movs r0, #0x65
    bl m4aSongNumStart
    b _080178AE
    _08017888: .4byte 0x03000190
    _0801788C:
    adds r0, r4, #0x0
    adds r0, #0x2F
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    bne _080178AE
    b _080178AA
    _08017898:
    adds r0, r4, #0x0
    adds r0, #0x30
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    bne _080178AE
    b _080178AA
    _080178A4:
    movs r0, #0x65
    bl m4aSongNumStart
    _080178AA:
    movs r0, #0x08
    strb r0, [r6, #0x00]
    _080178AE:
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    thumb_func_start sub_80178BC
    sub_80178BC:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    movs r5, #0x00
    movs r2, #0x00
    ldr r0, _080178DC @ =0x03000190
    ldr r0, [r0, #0x00]
    adds r1, r0, #0x0
    adds r1, #0x34
    _080178CC:
    ldrb r0, [r1, #0x00]
    cmp r0, #0x00
    beq _080178E0
    adds r1, #0x0C
    adds r2, #0x01
    cmp r2, #0x01
    ble _080178CC
    b _0801790E
    _080178DC: .4byte 0x03000190
    _080178E0:
    movs r2, #0x00
    ldr r0, _08017908 @ =0x03000190
    ldr r0, [r0, #0x00]
    adds r3, r0, #0x0
    adds r3, #0x29
    adds r1, r0, #0x0
    adds r1, #0x34
    _080178EE:
    ldrb r0, [r1, #0x00]
    cmp r0, #0x00
    beq _080178FC
    ldrb r0, [r1, #0x01]
    ldrb r6, [r3, #0x00]
    cmp r0, r6
    beq _0801790C
    _080178FC:
    adds r1, #0x0C
    adds r2, #0x01
    cmp r2, #0x01
    ble _080178EE
    b _08017910
    .byte 0x00, 0x00
    _08017908: .4byte 0x03000190
    _0801790C:
    strb r2, [r4, #0x10]
    _0801790E:
    movs r5, #0x01
    _08017910:
    adds r0, r5, #0x0
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    thumb_func_start sub_8017918
    sub_8017918:
    push {r4, r5, r6, r7, lr}
    adds r7, r0, #0x0
    ldr r4, _08017B60 @ =0x080C3A8C
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl LZ77UnCompWram
    ldr r4, _08017B64 @ =0x080C3B68
    movs r0, #0x01
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl LZ77UnCompWram
    ldr r4, _08017B68 @ =0x0807CD48
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r1, #0xE0
    adds r0, r4, #0x0
    movs r2, #0x10
    bl CpuFastSet
    movs r6, #0x80
    lsls r6, r6, #0x01
    ldr r5, _08017B6C @ =0x08344600
    movs r4, #0x07
    _08017958:
    movs r0, #0x01
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r1, r1, r6
    adds r0, r5, #0x0
    movs r2, #0x08
    bl CpuFastSet
    adds r6, #0x20
    movs r0, #0x80
    lsls r0, r0, #0x02
    adds r5, r5, r0
    subs r4, #0x01
    cmp r4, #0x00
    bge _08017958
    movs r0, #0x01
    bl pltt_getBuffer
    movs r6, #0x00
    strh r6, [r0, #0x00]
    ldr r0, _08017B70 @ =0x0807D1E8
    ldr r4, _08017B74 @ =0x02010400
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08017B78 @ =0x06004000
    ldr r3, _08017B7C @ =0x80000600
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08017B80 @ =0x080A97F8
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08017B84 @ =0x06008000
    ldr r3, _08017B88 @ =0x80000C00
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08017B8C @ =0x080A9E2C
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08017B90 @ =0x06009800
    ldr r3, _08017B88 @ =0x80000C00
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08017B94 @ =0x080AA56C
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08017B98 @ =0x0600B000
    ldr r3, _08017B88 @ =0x80000C00
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08017B9C @ =0x080C3E08
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08017BA0 @ =0x0600C800
    ldr r3, _08017BA4 @ =0x80002400
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08017BA8 @ =0x080BB758
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08017BAC @ =0x0600F400
    ldr r3, _08017B7C @ =0x80000600
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08017BB0 @ =0x080C41BC
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08017BB4 @ =0x06010000
    ldr r3, _08017BB8 @ =0x80000A00
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08017BBC @ =0x080C2FA8
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08017BC0 @ =0x06011800
    ldr r3, _08017BC4 @ =0x80000800
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08017BC8 @ =0x080C5130
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08017BCC @ =0x06017000
    ldr r3, _08017BD0 @ =0x80000400
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08017BD4 @ =0x080C53CC
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08017BD8 @ =0x06017800
    ldr r3, _08017BD0 @ =0x80000400
    bl dmaq_enqueue
    bl main_frameProc
    bl dmaq_getVBlankDmaQueue
    ldr r1, _08017BDC @ =0x0203EC24
    ldr r2, _08017BE0 @ =0x06013C00
    ldr r3, _08017BE4 @ =0x81000040
    bl dmaq_enqueue
    movs r0, #0x00
    bl map_clearBuffer
    movs r0, #0x01
    bl map_clearBuffer
    ldr r4, _08017BE8 @ =0x080C4DAC
    movs r0, #0x01
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl LZ77UnCompWram
    ldr r0, _08017BEC @ =0x0807DA94
    ldr r4, _08017BF0 @ =0x02004400
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    ldr r0, _08017BF4 @ =0x0807DB98
    movs r1, #0x80
    lsls r1, r1, #0x07
    adds r5, r4, r1
    adds r1, r5, #0x0
    bl LZ77UnCompWram
    ldr r1, _08017BF8 @ =0x080DA688
    movs r0, #0x00
    bl sub_80142CC
    bl main_frameProc
    movs r0, #0x01
    bl map_setBufferDirty
    movs r0, #0x02
    bl map_setBufferDirty
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08017BFC @ =0x06001000
    ldr r3, _08017BD0 @ =0x80000400
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    adds r1, r5, #0x0
    ldr r2, _08017C00 @ =0x06002000
    ldr r3, _08017BD0 @ =0x80000400
    bl dmaq_enqueue
    movs r0, #0x01
    bl pltt_setDirtyFlag
    ldr r0, _08017C04 @ =0x000006D4
    adds r1, r7, r0
    ldrh r0, [r1, #0x00]
    movs r4, #0x00
    ldr r0, _08017C08 @ =0x00009F40
    strh r0, [r1, #0x00]
    ldr r0, _08017C0C @ =0x000006D6
    adds r1, r7, r0
    ldrh r0, [r1, #0x00]
    ldr r0, _08017C10 @ =0x00004008
    strh r0, [r1, #0x00]
    movs r0, #0xDB
    lsls r0, r0, #0x03
    adds r1, r7, r0
    ldrh r0, [r1, #0x00]
    ldr r0, _08017C14 @ =0x00004109
    strh r0, [r1, #0x00]
    ldr r0, _08017C18 @ =0x000006DA
    adds r1, r7, r0
    ldrh r0, [r1, #0x00]
    ldr r0, _08017C1C @ =0x00000206
    strh r0, [r1, #0x00]
    ldr r0, _08017C20 @ =0x000006DC
    adds r1, r7, r0
    ldrh r0, [r1, #0x00]
    ldr r0, _08017C24 @ =0x00000406
    strh r0, [r1, #0x00]
    ldr r0, _08017C28 @ =0x000006FE
    adds r1, r7, r0
    ldrh r0, [r1, #0x00]
    ldr r0, _08017C2C @ =0x0000303F
    strh r0, [r1, #0x00]
    bl oam_update
    bl main_frameProc
    strb r6, [r7, #0x0C]
    movs r0, #0x02
    str r0, [r7, #0x14]
    str r4, [r7, #0x18]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _08017B60: .4byte 0x080C3A8C
    _08017B64: .4byte 0x080C3B68
    _08017B68: .4byte 0x0807CD48
    _08017B6C: .4byte 0x08344600
    _08017B70: .4byte 0x0807D1E8
    _08017B74: .4byte 0x02010400
    _08017B78: .4byte 0x06004000
    _08017B7C: .4byte 0x80000600
    _08017B80: .4byte 0x080A97F8
    _08017B84: .4byte 0x06008000
    _08017B88: .4byte 0x80000C00
    _08017B8C: .4byte 0x080A9E2C
    _08017B90: .4byte 0x06009800
    _08017B94: .4byte 0x080AA56C
    _08017B98: .4byte 0x0600B000
    _08017B9C: .4byte 0x080C3E08
    _08017BA0: .4byte 0x0600C800
    _08017BA4: .4byte 0x80002400
    _08017BA8: .4byte 0x080BB758
    _08017BAC: .4byte 0x0600F400
    _08017BB0: .4byte 0x080C41BC
    _08017BB4: .4byte 0x06010000
    _08017BB8: .4byte 0x80000A00
    _08017BBC: .4byte 0x080C2FA8
    _08017BC0: .4byte 0x06011800
    _08017BC4: .4byte 0x80000800
    _08017BC8: .4byte 0x080C5130
    _08017BCC: .4byte 0x06017000
    _08017BD0: .4byte 0x80000400
    _08017BD4: .4byte 0x080C53CC
    _08017BD8: .4byte 0x06017800
    _08017BDC: .4byte 0x0203EC24
    _08017BE0: .4byte 0x06013C00
    _08017BE4: .4byte 0x81000040
    _08017BE8: .4byte 0x080C4DAC
    _08017BEC: .4byte 0x0807DA94
    _08017BF0: .4byte 0x02004400
    _08017BF4: .4byte 0x0807DB98
    _08017BF8: .4byte 0x080DA688
    _08017BFC: .4byte 0x06001000
    _08017C00: .4byte 0x06002000
    _08017C04: .4byte 0x000006D4
    _08017C08: .4byte 0x00009F40
    _08017C0C: .4byte 0x000006D6
    _08017C10: .4byte 0x00004008
    _08017C14: .4byte 0x00004109
    _08017C18: .4byte 0x000006DA
    _08017C1C: .4byte 0x00000206
    _08017C20: .4byte 0x000006DC
    _08017C24: .4byte 0x00000406
    _08017C28: .4byte 0x000006FE
    _08017C2C: .4byte 0x0000303F
    thumb_func_start sub_8017C30
    sub_8017C30:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    adds r6, r0, #0x0
    ldr r0, _08017FCC @ =0x00000504
    adds r7, r6, r0
    movs r0, #0x00
    bl map_clearBuffer
    movs r0, #0x01
    bl map_clearBuffer
    movs r0, #0x01
    bl map_setBufferDirty
    movs r0, #0x02
    bl map_setBufferDirty
    bl main_frameProc
    ldr r4, _08017FD0 @ =0x08076FF4
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl LZ77UnCompWram
    ldr r4, _08017FD4 @ =0x080B2068
    movs r0, #0x01
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl LZ77UnCompWram
    ldr r4, _08017FD8 @ =0x0807CD48
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r1, #0xE0
    adds r0, r4, #0x0
    movs r2, #0x10
    bl CpuFastSet
    movs r0, #0x00
    bl pltt_getBuffer
    adds r4, r0, #0x0
    movs r1, #0x90
    lsls r1, r1, #0x01
    adds r4, r4, r1
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r3, #0xC0
    lsls r3, r3, #0x01
    adds r1, r1, r3
    adds r0, r4, #0x0
    movs r2, #0x08
    bl CpuFastSet
    movs r0, #0x00
    bl pltt_getBuffer
    movs r1, #0x00
    mov r10, r1
    strh r1, [r0, #0x00]
    movs r0, #0x01
    bl pltt_setDirtyFlag
    bl main_frameProc
    ldr r0, _08017FDC @ =0x0807D1E8
    ldr r4, _08017FE0 @ =0x02010400
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08017FE4 @ =0x06004000
    ldr r3, _08017FE8 @ =0x80000600
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08017FEC @ =0x080B3718
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08017FF0 @ =0x06007C00
    ldr r3, _08017FE8 @ =0x80000600
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08017FF4 @ =0x080A97F8
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08017FF8 @ =0x06008000
    ldr r3, _08017FFC @ =0x80000C00
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08018000 @ =0x080A9E2C
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08018004 @ =0x06009800
    ldr r3, _08017FFC @ =0x80000C00
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08018008 @ =0x080AA56C
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _0801800C @ =0x0600B000
    ldr r3, _08017FFC @ =0x80000C00
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08018010 @ =0x08077184
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08018014 @ =0x0600C000
    ldr r3, _08018018 @ =0x80000800
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _0801801C @ =0x080776F8
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08018020 @ =0x0600F400
    ldr r3, _08017FE8 @ =0x80000600
    bl dmaq_enqueue
    bl main_frameProc
    bl dmaq_getVBlankDmaQueue
    ldr r1, _08018024 @ =0x080ACAFC
    ldr r2, _08018028 @ =0x0600D800
    ldr r3, _08017FE8 @ =0x80000600
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0801802C @ =0x080ABEFC
    ldr r2, _08018030 @ =0x0600E400
    ldr r3, _08018034 @ =0x80000400
    mov r8, r3
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _08018038 @ =0x08063834
    ldr r2, _0801803C @ =0x0600EC00
    ldr r5, _08018040 @ =0x80000200
    adds r3, r5, #0x0
    bl dmaq_enqueue
    bl main_frameProc
    bl sub_801AF80
    bl main_frameProc
    ldr r0, [r7, #0x00]
    bl sub_801CFD4
    bl main_frameProc
    ldr r0, _08018044 @ =0x03000190
    mov r9, r0
    ldr r0, [r0, #0x00]
    movs r1, #0x8C
    lsls r1, r1, #0x01
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    beq _08017DEA
    bl dmaq_getVBlankDmaQueue
    ldr r1, _08018048 @ =0x0807D694
    ldr r2, _0801804C @ =0x06004660
    ldr r3, _08018050 @ =0x80000100
    bl dmaq_enqueue
    bl main_frameProc
    _08017DEA:
    ldr r0, _08018054 @ =0x08078C5C
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08018058 @ =0x06011000
    mov r3, r8
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _0801805C @ =0x080B2F9C
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08018060 @ =0x06014C00
    ldr r3, _08018064 @ =0x80000070
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08018068 @ =0x080B25A0
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _0801806C @ =0x06015C00
    mov r3, r8
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08018070 @ =0x080B2770
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08018074 @ =0x06016400
    adds r3, r5, #0x0
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08018078 @ =0x080B2858
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _0801807C @ =0x06016C00
    adds r3, r5, #0x0
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08018080 @ =0x080B83A4
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08018084 @ =0x06014600
    adds r3, r5, #0x0
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08018088 @ =0x080B29C4
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _0801808C @ =0x06017000
    adds r3, r5, #0x0
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08018090 @ =0x080B2BC8
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08018094 @ =0x06017800
    adds r3, r5, #0x0
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08018098 @ =0x080B2C38
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _0801809C @ =0x06017C00
    adds r3, r5, #0x0
    bl dmaq_enqueue
    bl main_frameProc
    mov r3, r9
    ldr r0, [r3, #0x00]
    adds r0, #0x4C
    bl sub_801D1C4
    ldr r0, _080180A0 @ =0x0600C280
    ldr r1, _080180A4 @ =0x06007CC0
    movs r2, #0x10
    bl CpuFastSet
    bl main_frameProc
    ldr r4, _080180A8 @ =0x08079A68
    movs r0, #0x01
    movs r1, #0x01
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl LZ77UnCompWram
    ldr r0, [r7, #0x00]
    ldr r1, [r7, #0x04]
    bl sub_801D0E4
    bl main_frameProc
    ldr r0, [r7, #0x00]
    bl sub_801B048
    bl main_frameProc
    ldr r1, [r7, #0x00]
    ldr r0, [r7, #0x04]
    adds r0, r1, r0
    cmp r0, #0x00
    bge _08017F22
    adds r0, #0x03
    _08017F22:
    asrs r0, r0, #0x02
    bl sub_801D160
    bl main_frameProc
    ldr r0, [r7, #0x00]
    ldr r1, [r7, #0x04]
    adds r0, r0, r1
    subs r0, #0x01
    ldr r1, _080180AC @ =0x080DA76C
    bl sub_801D010
    movs r0, #0x01
    bl map_setBufferDirty
    movs r0, #0x02
    bl map_setBufferDirty
    bl dmaq_getVBlankDmaQueue
    ldr r4, _080180B0 @ =0x02004400
    adds r1, r4, #0x0
    ldr r2, _080180B4 @ =0x06001000
    mov r3, r8
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    movs r1, #0x80
    lsls r1, r1, #0x07
    adds r4, r4, r1
    adds r1, r4, #0x0
    ldr r2, _080180B8 @ =0x06002000
    mov r3, r8
    bl dmaq_enqueue
    movs r0, #0x01
    bl pltt_setDirtyFlag
    ldr r3, _080180BC @ =0x000006D6
    adds r1, r6, r3
    ldrh r0, [r1, #0x00]
    movs r2, #0x00
    ldr r0, _080180C0 @ =0x00004008
    strh r0, [r1, #0x00]
    movs r0, #0xDB
    lsls r0, r0, #0x03
    adds r1, r6, r0
    ldrh r0, [r1, #0x00]
    ldr r0, _080180C4 @ =0x00004105
    strh r0, [r1, #0x00]
    adds r3, #0x04
    adds r1, r6, r3
    ldrh r0, [r1, #0x00]
    ldr r0, _080180C8 @ =0x0000020A
    strh r0, [r1, #0x00]
    ldr r0, _080180CC @ =0x000006DC
    adds r1, r6, r0
    ldrh r0, [r1, #0x00]
    ldr r0, _080180D0 @ =0x00000406
    strh r0, [r1, #0x00]
    movs r0, #0x03
    str r0, [r6, #0x14]
    str r2, [r6, #0x18]
    ldr r1, _080180D4 @ =0x000006E6
    adds r0, r6, r1
    ldrh r1, [r0, #0x00]
    strh r2, [r0, #0x00]
    adds r3, #0x0E
    adds r0, r6, r3
    ldrh r1, [r0, #0x00]
    strh r2, [r0, #0x00]
    bl oam_update
    bl main_frameProc
    movs r0, #0x01
    strb r0, [r6, #0x0C]
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    _08017FCC: .4byte 0x00000504
    _08017FD0: .4byte 0x08076FF4
    _08017FD4: .4byte 0x080B2068
    _08017FD8: .4byte 0x0807CD48
    _08017FDC: .4byte 0x0807D1E8
    _08017FE0: .4byte 0x02010400
    _08017FE4: .4byte 0x06004000
    _08017FE8: .4byte 0x80000600
    _08017FEC: .4byte 0x080B3718
    _08017FF0: .4byte 0x06007C00
    _08017FF4: .4byte 0x080A97F8
    _08017FF8: .4byte 0x06008000
    _08017FFC: .4byte 0x80000C00
    _08018000: .4byte 0x080A9E2C
    _08018004: .4byte 0x06009800
    _08018008: .4byte 0x080AA56C
    _0801800C: .4byte 0x0600B000
    _08018010: .4byte 0x08077184
    _08018014: .4byte 0x0600C000
    _08018018: .4byte 0x80000800
    _0801801C: .4byte 0x080776F8
    _08018020: .4byte 0x0600F400
    _08018024: .4byte 0x080ACAFC
    _08018028: .4byte 0x0600D800
    _0801802C: .4byte 0x080ABEFC
    _08018030: .4byte 0x0600E400
    _08018034: .4byte 0x80000400
    _08018038: .4byte 0x08063834
    _0801803C: .4byte 0x0600EC00
    _08018040: .4byte 0x80000200
    _08018044: .4byte 0x03000190
    _08018048: .4byte 0x0807D694
    _0801804C: .4byte 0x06004660
    _08018050: .4byte 0x80000100
    _08018054: .4byte 0x08078C5C
    _08018058: .4byte 0x06011000
    _0801805C: .4byte 0x080B2F9C
    _08018060: .4byte 0x06014C00
    _08018064: .4byte 0x80000070
    _08018068: .4byte 0x080B25A0
    _0801806C: .4byte 0x06015C00
    _08018070: .4byte 0x080B2770
    _08018074: .4byte 0x06016400
    _08018078: .4byte 0x080B2858
    _0801807C: .4byte 0x06016C00
    _08018080: .4byte 0x080B83A4
    _08018084: .4byte 0x06014600
    _08018088: .4byte 0x080B29C4
    _0801808C: .4byte 0x06017000
    _08018090: .4byte 0x080B2BC8
    _08018094: .4byte 0x06017800
    _08018098: .4byte 0x080B2C38
    _0801809C: .4byte 0x06017C00
    _080180A0: .4byte 0x0600C280
    _080180A4: .4byte 0x06007CC0
    _080180A8: .4byte 0x08079A68
    _080180AC: .4byte 0x080DA76C
    _080180B0: .4byte 0x02004400
    _080180B4: .4byte 0x06001000
    _080180B8: .4byte 0x06002000
    _080180BC: .4byte 0x000006D6
    _080180C0: .4byte 0x00004008
    _080180C4: .4byte 0x00004105
    _080180C8: .4byte 0x0000020A
    _080180CC: .4byte 0x000006DC
    _080180D0: .4byte 0x00000406
    _080180D4: .4byte 0x000006E6
    thumb_func_start sub_80180D8
    sub_80180D8:
    push {r4, r5, r6, lr}
    mov r6, r8
    push {r6}
    adds r5, r0, #0x0
    ldr r4, _08018310 @ =0x08076FF4
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl LZ77UnCompWram
    movs r0, #0x00
    bl pltt_getBuffer
    movs r2, #0xCB
    lsls r2, r2, #0x01
    adds r1, r0, r2
    ldr r2, _08018314 @ =0x000083FF
    adds r0, r2, #0x0
    strh r0, [r1, #0x00]
    movs r0, #0x00
    bl pltt_getBuffer
    movs r1, #0xCC
    lsls r1, r1, #0x01
    adds r0, r0, r1
    ldr r2, _08018318 @ =0x000082DF
    adds r1, r2, #0x0
    strh r1, [r0, #0x00]
    movs r0, #0x00
    bl pltt_getBuffer
    movs r2, #0xCD
    lsls r2, r2, #0x01
    adds r1, r0, r2
    adds r2, #0x65
    adds r0, r2, #0x0
    strh r0, [r1, #0x00]
    movs r0, #0x00
    bl pltt_getBuffer
    movs r1, #0xCE
    lsls r1, r1, #0x01
    adds r0, r0, r1
    ldr r2, _0801831C @ =0x0000827F
    adds r1, r2, #0x0
    strh r1, [r0, #0x00]
    movs r0, #0x00
    bl pltt_getBuffer
    movs r2, #0xCF
    lsls r2, r2, #0x01
    adds r1, r0, r2
    subs r2, #0x45
    adds r0, r2, #0x0
    strh r0, [r1, #0x00]
    ldr r4, _08018320 @ =0x080B2068
    movs r0, #0x01
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl LZ77UnCompWram
    movs r0, #0x00
    bl map_clearBuffer
    movs r0, #0x01
    bl map_clearBuffer
    ldr r0, _08018324 @ =0x0807DA94
    ldr r6, _08018328 @ =0x02004400
    adds r1, r6, #0x0
    bl LZ77UnCompWram
    ldr r0, _0801832C @ =0x0807DB98
    movs r1, #0x80
    lsls r1, r1, #0x07
    adds r1, r1, r6
    mov r8, r1
    bl LZ77UnCompWram
    bl main_frameProc
    ldr r0, _08018330 @ =0x0807D1E8
    ldr r4, _08018334 @ =0x02010400
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08018338 @ =0x06004000
    ldr r3, _0801833C @ =0x80000600
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08018340 @ =0x080B3718
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08018344 @ =0x06007C00
    ldr r3, _0801833C @ =0x80000600
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08018348 @ =0x080A97F8
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _0801834C @ =0x06008000
    ldr r3, _08018350 @ =0x80000C00
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08018354 @ =0x080A9E2C
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08018358 @ =0x06009800
    ldr r3, _08018350 @ =0x80000C00
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _0801835C @ =0x080AA56C
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08018360 @ =0x0600B000
    ldr r3, _08018350 @ =0x80000C00
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08018364 @ =0x08077184
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08018368 @ =0x0600C000
    ldr r3, _0801836C @ =0x80000800
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08018370 @ =0x080776F8
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08018374 @ =0x0600F400
    ldr r3, _0801833C @ =0x80000600
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08018378 @ =0x080B83A4
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _0801837C @ =0x06014600
    ldr r3, _08018380 @ =0x80000200
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08018384 @ =0x080B29C4
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08018388 @ =0x06017000
    ldr r3, _08018380 @ =0x80000200
    bl dmaq_enqueue
    bl main_frameProc
    movs r0, #0x01
    bl map_setBufferDirty
    movs r0, #0x02
    bl map_setBufferDirty
    bl dmaq_getVBlankDmaQueue
    adds r1, r6, #0x0
    ldr r2, _0801838C @ =0x06001000
    ldr r3, _08018390 @ =0x80000400
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    mov r1, r8
    ldr r2, _08018394 @ =0x06002000
    ldr r3, _08018390 @ =0x80000400
    bl dmaq_enqueue
    movs r0, #0x01
    bl pltt_setDirtyFlag
    ldr r2, _08018398 @ =0x000006D6
    adds r1, r5, r2
    ldrh r0, [r1, #0x00]
    movs r6, #0x00
    ldr r0, _0801839C @ =0x00004008
    strh r0, [r1, #0x00]
    movs r0, #0xDB
    lsls r0, r0, #0x03
    adds r1, r5, r0
    ldrh r0, [r1, #0x00]
    ldr r0, _080183A0 @ =0x00004109
    strh r0, [r1, #0x00]
    adds r2, #0x04
    adds r1, r5, r2
    ldrh r0, [r1, #0x00]
    ldr r0, _080183A4 @ =0x00000206
    strh r0, [r1, #0x00]
    ldr r0, _080183A8 @ =0x000006DC
    adds r1, r5, r0
    ldrh r0, [r1, #0x00]
    ldr r0, _080183AC @ =0x00000406
    strh r0, [r1, #0x00]
    bl oam_update
    bl main_frameProc
    ldr r4, _080183B0 @ =0x08078F8C
    movs r0, #0x01
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl LZ77UnCompWram
    ldr r1, _080183B4 @ =0x080DAB70
    movs r0, #0x00
    bl sub_80142CC
    movs r0, #0x01
    bl map_setBufferDirty
    movs r0, #0x02
    bl map_setBufferDirty
    bl main_frameProc
    movs r0, #0x02
    strb r0, [r5, #0x0C]
    str r0, [r5, #0x14]
    str r6, [r5, #0x18]
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _08018310: .4byte 0x08076FF4
    _08018314: .4byte 0x000083FF
    _08018318: .4byte 0x000082DF
    _0801831C: .4byte 0x0000827F
    _08018320: .4byte 0x080B2068
    _08018324: .4byte 0x0807DA94
    _08018328: .4byte 0x02004400
    _0801832C: .4byte 0x0807DB98
    _08018330: .4byte 0x0807D1E8
    _08018334: .4byte 0x02010400
    _08018338: .4byte 0x06004000
    _0801833C: .4byte 0x80000600
    _08018340: .4byte 0x080B3718
    _08018344: .4byte 0x06007C00
    _08018348: .4byte 0x080A97F8
    _0801834C: .4byte 0x06008000
    _08018350: .4byte 0x80000C00
    _08018354: .4byte 0x080A9E2C
    _08018358: .4byte 0x06009800
    _0801835C: .4byte 0x080AA56C
    _08018360: .4byte 0x0600B000
    _08018364: .4byte 0x08077184
    _08018368: .4byte 0x0600C000
    _0801836C: .4byte 0x80000800
    _08018370: .4byte 0x080776F8
    _08018374: .4byte 0x0600F400
    _08018378: .4byte 0x080B83A4
    _0801837C: .4byte 0x06014600
    _08018380: .4byte 0x80000200
    _08018384: .4byte 0x080B29C4
    _08018388: .4byte 0x06017000
    _0801838C: .4byte 0x06001000
    _08018390: .4byte 0x80000400
    _08018394: .4byte 0x06002000
    _08018398: .4byte 0x000006D6
    _0801839C: .4byte 0x00004008
    _080183A0: .4byte 0x00004109
    _080183A4: .4byte 0x00000206
    _080183A8: .4byte 0x000006DC
    _080183AC: .4byte 0x00000406
    _080183B0: .4byte 0x08078F8C
    _080183B4: .4byte 0x080DAB70
    thumb_func_start sub_80183B8
    sub_80183B8:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r7, r0, #0x0
    ldr r0, _0801854C @ =0x00000524
    adds r0, r0, r7
    mov r8, r0
    ldr r4, _08018550 @ =0x080BDF90
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl LZ77UnCompWram
    ldr r4, _08018554 @ =0x080BE0C4
    movs r0, #0x01
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl LZ77UnCompWram
    bl main_frameProc
    ldr r0, _08018558 @ =0x080A97F8
    ldr r4, _0801855C @ =0x02010400
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08018560 @ =0x06008000
    ldr r3, _08018564 @ =0x80000C00
    bl dmaq_enqueue
    bl main_frameProc
    bl dmaq_getVBlankDmaQueue
    ldr r1, _08018568 @ =0x080ACAFC
    ldr r2, _0801856C @ =0x0600D800
    ldr r3, _08018570 @ =0x80000600
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _08018574 @ =0x080ABEFC
    ldr r2, _08018578 @ =0x0600E400
    ldr r6, _0801857C @ =0x80000400
    adds r3, r6, #0x0
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _08018580 @ =0x08063834
    ldr r2, _08018584 @ =0x0600EC00
    ldr r3, _08018588 @ =0x80000200
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _0801858C @ =0x080BE41C
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _08018590 @ =0x06009800
    ldr r3, _08018594 @ =0x80000E00
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _08018598 @ =0x080BC960
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _0801859C @ =0x06010800
    ldr r3, _080185A0 @ =0x80002600
    bl dmaq_enqueue
    bl main_frameProc
    movs r0, #0x00
    bl map_clearBuffer
    ldr r4, _080185A4 @ =0x080BEDDC
    movs r0, #0x01
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl LZ77UnCompWram
    ldr r0, _080185A8 @ =0x080BEF24
    ldr r4, _080185AC @ =0x02004400
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    ldr r0, _080185B0 @ =0x080BF478
    movs r1, #0x80
    lsls r1, r1, #0x07
    adds r5, r4, r1
    adds r1, r5, #0x0
    bl LZ77UnCompWram
    ldr r1, _080185B4 @ =0x080DAE50
    movs r0, #0x00
    bl sub_80142CC
    bl main_frameProc
    movs r0, #0x01
    bl map_setBufferDirty
    movs r0, #0x02
    bl map_setBufferDirty
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _080185B8 @ =0x06001000
    adds r3, r6, #0x0
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    adds r1, r5, #0x0
    ldr r2, _080185BC @ =0x06002000
    adds r3, r6, #0x0
    bl dmaq_enqueue
    movs r0, #0x01
    bl pltt_setDirtyFlag
    bl main_frameProc
    ldr r0, _080185C0 @ =0x080BF1CC
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    ldr r2, _080185C4 @ =0x06001800
    adds r3, r6, #0x0
    bl dmaq_enqueue
    bl main_frameProc
    ldr r2, _080185C8 @ =0x000006D6
    adds r1, r7, r2
    ldrh r0, [r1, #0x00]
    movs r4, #0x00
    movs r0, #0x08
    strh r0, [r1, #0x00]
    movs r0, #0xDB
    lsls r0, r0, #0x03
    adds r1, r7, r0
    ldrh r0, [r1, #0x00]
    ldr r0, _080185CC @ =0x00000109
    strh r0, [r1, #0x00]
    adds r2, #0x04
    adds r1, r7, r2
    ldrh r0, [r1, #0x00]
    ldr r0, _080185D0 @ =0x0000420A
    strh r0, [r1, #0x00]
    ldr r0, _080185D4 @ =0x000006DC
    adds r1, r7, r0
    ldrh r0, [r1, #0x00]
    ldr r0, _080185D8 @ =0x0000040B
    strh r0, [r1, #0x00]
    adds r2, #0x16
    adds r1, r7, r2
    ldrh r0, [r1, #0x00]
    ldr r0, _080185DC @ =0x00001008
    strh r0, [r1, #0x00]
    bl oam_update
    bl main_frameProc
    movs r0, #0x04
    str r0, [r7, #0x14]
    str r4, [r7, #0x18]
    mov r1, r8
    ldrb r0, [r1, #0x00]
    cmp r0, #0x00
    bne _080185E8
    ldr r2, _080185E0 @ =0x000006E6
    adds r1, r7, r2
    ldrh r0, [r1, #0x00]
    ldr r0, _080185E4 @ =0x0000FFF0
    b _080185F2
    .byte 0x00, 0x00
    _0801854C: .4byte 0x00000524
    _08018550: .4byte 0x080BDF90
    _08018554: .4byte 0x080BE0C4
    _08018558: .4byte 0x080A97F8
    _0801855C: .4byte 0x02010400
    _08018560: .4byte 0x06008000
    _08018564: .4byte 0x80000C00
    _08018568: .4byte 0x080ACAFC
    _0801856C: .4byte 0x0600D800
    _08018570: .4byte 0x80000600
    _08018574: .4byte 0x080ABEFC
    _08018578: .4byte 0x0600E400
    _0801857C: .4byte 0x80000400
    _08018580: .4byte 0x08063834
    _08018584: .4byte 0x0600EC00
    _08018588: .4byte 0x80000200
    _0801858C: .4byte 0x080BE41C
    _08018590: .4byte 0x06009800
    _08018594: .4byte 0x80000E00
    _08018598: .4byte 0x080BC960
    _0801859C: .4byte 0x06010800
    _080185A0: .4byte 0x80002600
    _080185A4: .4byte 0x080BEDDC
    _080185A8: .4byte 0x080BEF24
    _080185AC: .4byte 0x02004400
    _080185B0: .4byte 0x080BF478
    _080185B4: .4byte 0x080DAE50
    _080185B8: .4byte 0x06001000
    _080185BC: .4byte 0x06002000
    _080185C0: .4byte 0x080BF1CC
    _080185C4: .4byte 0x06001800
    _080185C8: .4byte 0x000006D6
    _080185CC: .4byte 0x00000109
    _080185D0: .4byte 0x0000420A
    _080185D4: .4byte 0x000006DC
    _080185D8: .4byte 0x0000040B
    _080185DC: .4byte 0x00001008
    _080185E0: .4byte 0x000006E6
    _080185E4: .4byte 0x0000FFF0
    _080185E8:
    ldr r2, _08018624 @ =0x000006E6
    adds r1, r7, r2
    ldrh r0, [r1, #0x00]
    movs r0, #0x88
    lsls r0, r0, #0x01
    _080185F2:
    strh r0, [r1, #0x00]
    movs r0, #0xDD
    lsls r0, r0, #0x03
    adds r1, r7, r0
    ldrh r0, [r1, #0x00]
    movs r0, #0x48
    strh r0, [r1, #0x00]
    ldr r1, _08018628 @ =0x000006EA
    adds r0, r7, r1
    ldrh r1, [r0, #0x00]
    movs r1, #0x00
    strh r1, [r0, #0x00]
    ldr r2, _0801862C @ =0x000006EC
    adds r0, r7, r2
    ldrh r2, [r0, #0x00]
    strh r1, [r0, #0x00]
    bl main_frameProc
    movs r0, #0x03
    strb r0, [r7, #0x0C]
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    _08018624: .4byte 0x000006E6
    _08018628: .4byte 0x000006EA
    _0801862C: .4byte 0x000006EC
    thumb_func_start sub_8018630
    sub_8018630:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    add sp, #-0x00C
    adds r6, r0, #0x0
    mov r8, r1
    adds r7, r2, #0x0
    ldrb r4, [r6, #0x02]
    cmp r4, #0x01
    beq _080186CC
    cmp r4, #0x01
    bgt _0801864E
    cmp r4, #0x00
    beq _08018658
    b _0801874C
    _0801864E:
    cmp r4, #0x02
    beq _080186FC
    cmp r4, #0x03
    beq _0801872C
    b _0801874C
    _08018658:
    bl sub_8012388
    ldrb r5, [r6, #0x0C]
    cmp r5, #0x02
    beq _080186AC
    cmp r7, #0x01
    bne _0801867A
    ldr r0, _0801869C @ =0x000006EE
    adds r1, r6, r0
    ldrh r0, [r1, #0x00]
    movs r0, #0xBF
    strh r0, [r1, #0x00]
    ldr r0, _080186A0 @ =0x000006F2
    adds r1, r6, r0
    ldrh r0, [r1, #0x00]
    movs r0, #0x10
    strh r0, [r1, #0x00]
    _0801867A:
    adds r0, r6, #0x0
    bl sub_80180D8
    movs r0, #0x03
    mov r1, r8
    bl sub_80142CC
    ldr r0, _080186A4 @ =0x00000844
    bl sub_801D240
    ldr r2, _080186A8 @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x02]
    adds r0, #0x01
    strb r0, [r1, #0x02]
    ldr r0, [r2, #0x00]
    b _080186BC
    _0801869C: .4byte 0x000006EE
    _080186A0: .4byte 0x000006F2
    _080186A4: .4byte 0x00000844
    _080186A8: .4byte 0x03000190
    _080186AC:
    movs r0, #0x03
    mov r1, r8
    bl sub_80142CC
    ldr r0, _080186C8 @ =0x03000190
    ldr r1, [r0, #0x00]
    strb r5, [r1, #0x02]
    ldr r0, [r0, #0x00]
    _080186BC:
    str r4, [r0, #0x04]
    ldr r0, _080186C8 @ =0x03000190
    ldr r1, [r0, #0x00]
    movs r0, #0x00
    strb r0, [r1, #0x12]
    b _0801874C
    _080186C8: .4byte 0x03000190
    _080186CC:
    bl sub_801D28C
    adds r3, r0, #0x0
    cmp r3, #0x00
    bne _0801874C
    ldr r0, _080186F0 @ =0x000006EE
    adds r1, r6, r0
    ldrh r0, [r1, #0x00]
    ldr r0, _080186F4 @ =0x00000844
    strh r0, [r1, #0x00]
    ldr r2, _080186F8 @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x02]
    adds r0, #0x01
    strb r0, [r1, #0x02]
    ldr r0, [r2, #0x00]
    str r3, [r0, #0x04]
    b _0801874C
    _080186F0: .4byte 0x000006EE
    _080186F4: .4byte 0x00000844
    _080186F8: .4byte 0x03000190
    _080186FC:
    bl main_getTriggerKeys
    movs r1, #0x09
    ands r1, r0
    cmp r1, #0x00
    beq _0801874C
    movs r0, #0x8F
    bl m4aSongNumStart
    bl sub_801D274
    ldr r3, _08018728 @ =0x03000190
    ldr r1, [r3, #0x00]
    ldrb r0, [r1, #0x02]
    adds r0, #0x01
    movs r2, #0x00
    strb r0, [r1, #0x02]
    ldr r0, [r3, #0x00]
    str r2, [r0, #0x04]
    strb r2, [r6, #0x12]
    b _0801874C
    .byte 0x00, 0x00
    _08018728: .4byte 0x03000190
    _0801872C:
    bl sub_801D28C
    adds r4, r0, #0x0
    cmp r4, #0x00
    bne _0801874C
    movs r3, #0x13
    ldr r2, _08018784 @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x00]
    strb r0, [r1, #0x01]
    ldr r0, [r2, #0x00]
    strb r3, [r0, #0x00]
    ldr r0, [r2, #0x00]
    strb r4, [r0, #0x02]
    ldr r0, [r2, #0x00]
    str r4, [r0, #0x04]
    _0801874C:
    ldrb r0, [r6, #0x12]
    adds r0, #0x01
    movs r1, #0x00
    strb r0, [r6, #0x12]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x1E
    bls _0801875E
    strb r1, [r6, #0x12]
    _0801875E:
    ldrb r0, [r6, #0x12]
    cmp r0, #0x13
    bhi _08018778
    ldr r0, _08018788 @ =0x009000D8
    str r0, [sp, #0x008]
    ldr r0, _0801878C @ =0x080C9520
    str r1, [sp, #0x000]
    str r1, [sp, #0x004]
    add r1, sp, #0x008
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    _08018778:
    add sp, #0x00C
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    _08018784: .4byte 0x03000190
    _08018788: .4byte 0x009000D8
    _0801878C: .4byte 0x080C9520
    thumb_func_start sub_8018790
    sub_8018790:
    push {r4, lr}
    ldrb r4, [r0, #0x02]
    cmp r4, #0x01
    beq _080187D0
    cmp r4, #0x01
    bgt _080187A2
    cmp r4, #0x00
    beq _080187A8
    b _0801880C
    _080187A2:
    cmp r4, #0x02
    beq _080187F0
    b _0801880C
    _080187A8:
    movs r0, #0x00
    bl sub_805D9B8
    strh r4, [r0, #0x0A]
    movs r0, #0x01
    bl sub_805D9B8
    strh r4, [r0, #0x0A]
    bl sub_801D25C
    ldr r2, _080187CC @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x02]
    adds r0, #0x01
    strb r0, [r1, #0x02]
    ldr r0, [r2, #0x00]
    str r4, [r0, #0x04]
    b _0801880C
    _080187CC: .4byte 0x03000190
    _080187D0:
    bl sub_801D28C
    adds r3, r0, #0x0
    cmp r3, #0x00
    bne _0801880C
    ldr r2, _080187EC @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x02]
    adds r0, #0x01
    strb r0, [r1, #0x02]
    ldr r0, [r2, #0x00]
    str r3, [r0, #0x04]
    b _0801880C
    .byte 0x00, 0x00
    _080187EC: .4byte 0x03000190
    _080187F0:
    ldr r0, _08018804 @ =0x08016B99
    ldr r2, _08018808 @ =0x03002E20
    str r0, [r2, #0x00]
    ldrb r0, [r2, #0x08]
    adds r0, #0x01
    movs r1, #0x07
    ands r0, r1
    strb r0, [r2, #0x08]
    movs r0, #0x01
    b _0801880E
    _08018804: .4byte error_main
    _08018808: .4byte 0x03002E20
    _0801880C:
    movs r0, #0x00
    _0801880E:
    pop {r4}
    pop {r1}
    bx r1
    thumb_func_start sub_8018814
    sub_8018814:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    add sp, #-0x008
    adds r6, r0, #0x0
    movs r0, #0xD4
    lsls r0, r0, #0x03
    adds r0, r0, r6
    mov r8, r0
    ldrb r4, [r6, #0x02]
    cmp r4, #0x01
    beq _08018890
    cmp r4, #0x01
    bgt _08018836
    cmp r4, #0x00
    beq _0801883C
    b _08018962
    _08018836:
    cmp r4, #0x02
    beq _080188B0
    b _08018962
    _0801883C:
    ldrb r5, [r6, #0x0C]
    cmp r5, #0x02
    beq _08018870
    adds r0, r6, #0x0
    bl sub_80180D8
    ldr r1, _08018864 @ =0x080DABB4
    movs r0, #0x03
    bl sub_80142CC
    ldr r0, _08018868 @ =0x00000844
    bl sub_801D240
    ldr r2, _0801886C @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x02]
    adds r0, #0x01
    strb r0, [r1, #0x02]
    ldr r0, [r2, #0x00]
    b _08018880
    _08018864: .4byte 0x080DABB4
    _08018868: .4byte 0x00000844
    _0801886C: .4byte 0x03000190
    _08018870:
    ldr r1, _08018888 @ =0x080DABB4
    movs r0, #0x03
    bl sub_80142CC
    ldr r1, _0801888C @ =0x03000190
    ldr r0, [r1, #0x00]
    strb r5, [r0, #0x02]
    ldr r0, [r1, #0x00]
    _08018880:
    str r4, [r0, #0x04]
    movs r0, #0x00
    strb r0, [r6, #0x0D]
    b _08018962
    _08018888: .4byte 0x080DABB4
    _0801888C: .4byte 0x03000190
    _08018890:
    bl sub_801D28C
    adds r3, r0, #0x0
    cmp r3, #0x00
    bne _08018962
    ldr r2, _080188AC @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x02]
    adds r0, #0x01
    strb r0, [r1, #0x02]
    ldr r0, [r2, #0x00]
    str r3, [r0, #0x04]
    b _08018962
    .byte 0x00, 0x00
    _080188AC: .4byte 0x03000190
    _080188B0:
    bl main_getTriggerKeys
    movs r7, #0x30
    ands r7, r0
    cmp r7, #0x00
    beq _080188CC
    movs r0, #0x8D
    bl m4aSongNumStart
    ldrb r1, [r6, #0x0D]
    movs r0, #0x01
    subs r0, r0, r1
    strb r0, [r6, #0x0D]
    b _08018962
    _080188CC:
    bl main_getTriggerKeys
    movs r5, #0x09
    ands r5, r0
    cmp r5, #0x00
    beq _0801893C
    ldrb r0, [r6, #0x0D]
    cmp r0, #0x00
    bne _08018918
    movs r0, #0x8E
    bl m4aSongNumStart
    mov r2, r8
    ldrb r1, [r2, #0x01]
    ldrb r0, [r2, #0x00]
    cmp r0, #0x00
    beq _080188F2
    movs r0, #0x08
    b _080188F4
    _080188F2:
    movs r0, #0x10
    _080188F4:
    orrs r0, r1
    movs r4, #0x00
    mov r1, r8
    strb r0, [r1, #0x01]
    movs r3, #0x09
    ldr r2, _08018914 @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x00]
    strb r0, [r1, #0x01]
    ldr r0, [r2, #0x00]
    strb r3, [r0, #0x00]
    ldr r0, [r2, #0x00]
    strb r4, [r0, #0x02]
    ldr r0, [r2, #0x00]
    str r4, [r0, #0x04]
    b _08018962
    _08018914: .4byte 0x03000190
    _08018918:
    movs r0, #0x8E
    bl m4aSongNumStart
    ldrb r3, [r6, #0x01]
    ldr r2, _08018938 @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x00]
    strb r0, [r1, #0x01]
    ldr r0, [r2, #0x00]
    strb r3, [r0, #0x00]
    ldr r0, [r2, #0x00]
    strb r7, [r0, #0x02]
    ldr r0, [r2, #0x00]
    str r7, [r0, #0x04]
    b _08018962
    .byte 0x00, 0x00
    _08018938: .4byte 0x03000190
    _0801893C:
    bl main_getTriggerKeys
    ands r4, r0
    cmp r4, #0x00
    beq _08018962
    movs r0, #0x90
    bl m4aSongNumStart
    ldrb r3, [r6, #0x01]
    ldr r2, _080189A0 @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x00]
    strb r0, [r1, #0x01]
    ldr r0, [r2, #0x00]
    strb r3, [r0, #0x00]
    ldr r0, [r2, #0x00]
    strb r5, [r0, #0x02]
    ldr r0, [r2, #0x00]
    str r5, [r0, #0x04]
    _08018962:
    ldr r0, _080189A4 @ =0x080C9488
    ldr r7, _080189A8 @ =0x080DA3A4
    movs r4, #0x00
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    adds r1, r7, #0x0
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    ldr r0, _080189AC @ =0x080C9490
    ldr r5, _080189B0 @ =0x080DA3A8
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    adds r1, r5, #0x0
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    ldrb r3, [r6, #0x0D]
    adds r6, r3, #0x0
    ldr r0, _080189A0 @ =0x03000190
    ldr r0, [r0, #0x00]
    ldr r1, [r0, #0x08]
    movs r0, #0x1F
    ands r0, r1
    cmp r0, #0x13
    bgt _080189B8
    ldr r0, _080189B4 @ =0x080C9498
    b _080189C2
    .byte 0x00, 0x00
    _080189A0: .4byte 0x03000190
    _080189A4: .4byte 0x080C9488
    _080189A8: .4byte 0x080DA3A4
    _080189AC: .4byte 0x080C9490
    _080189B0: .4byte 0x080DA3A8
    _080189B4: .4byte 0x080C9498
    _080189B8:
    movs r2, #0x20
    ands r2, r1
    cmp r2, #0x00
    beq _080189DC
    ldr r0, _080189D8 @ =0x080C94A8
    _080189C2:
    adds r1, r5, #0x0
    cmp r3, #0x00
    bne _080189CA
    adds r1, r7, #0x0
    _080189CA:
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    b _080189F2
    _080189D8: .4byte 0x080C94A8
    _080189DC:
    ldr r0, _08018A00 @ =0x080C94B8
    adds r1, r5, #0x0
    cmp r6, #0x00
    bne _080189E6
    adds r1, r7, #0x0
    _080189E6:
    str r2, [sp, #0x000]
    str r2, [sp, #0x004]
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    _080189F2:
    add sp, #0x008
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _08018A00: .4byte 0x080C94B8
    thumb_func_start sub_8018A04
    sub_8018A04:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    add sp, #-0x008
    adds r7, r0, #0x0
    ldrb r4, [r7, #0x02]
    cmp r4, #0x01
    beq _08018A80
    cmp r4, #0x01
    bgt _08018A1E
    cmp r4, #0x00
    beq _08018A2A
    b _08018B60
    _08018A1E:
    cmp r4, #0x02
    beq _08018AA0
    cmp r4, #0x03
    bne _08018A28
    b _08018B3C
    _08018A28:
    b _08018B60
    _08018A2A:
    ldrb r5, [r7, #0x0C]
    cmp r5, #0x02
    beq _08018A60
    adds r0, r7, #0x0
    bl sub_80180D8
    ldr r1, _08018A54 @ =0x080DB048
    movs r0, #0x03
    bl sub_80142CC
    ldr r0, _08018A58 @ =0x00000844
    bl sub_801D240
    ldr r2, _08018A5C @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x02]
    adds r0, #0x01
    strb r0, [r1, #0x02]
    ldr r0, [r2, #0x00]
    b _08018A70
    .byte 0x00, 0x00
    _08018A54: .4byte 0x080DB048
    _08018A58: .4byte 0x00000844
    _08018A5C: .4byte 0x03000190
    _08018A60:
    ldr r1, _08018A78 @ =0x080DB048
    movs r0, #0x03
    bl sub_80142CC
    ldr r1, _08018A7C @ =0x03000190
    ldr r0, [r1, #0x00]
    strb r5, [r0, #0x02]
    ldr r0, [r1, #0x00]
    _08018A70:
    str r4, [r0, #0x04]
    movs r0, #0x01
    strb r0, [r7, #0x0D]
    b _08018B60
    _08018A78: .4byte 0x080DB048
    _08018A7C: .4byte 0x03000190
    _08018A80:
    bl sub_801D28C
    adds r3, r0, #0x0
    cmp r3, #0x00
    bne _08018B60
    ldr r2, _08018A9C @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x02]
    adds r0, #0x01
    strb r0, [r1, #0x02]
    ldr r0, [r2, #0x00]
    str r3, [r0, #0x04]
    b _08018B60
    .byte 0x00, 0x00
    _08018A9C: .4byte 0x03000190
    _08018AA0:
    bl main_getTriggerKeys
    movs r6, #0x30
    ands r6, r0
    cmp r6, #0x00
    beq _08018ABC
    movs r0, #0x8D
    bl m4aSongNumStart
    ldrb r1, [r7, #0x0D]
    movs r0, #0x01
    subs r0, r0, r1
    strb r0, [r7, #0x0D]
    b _08018B60
    _08018ABC:
    bl main_getTriggerKeys
    movs r5, #0x09
    ands r5, r0
    cmp r5, #0x00
    beq _08018B10
    ldrb r0, [r7, #0x0D]
    cmp r0, #0x00
    bne _08018AEC
    movs r0, #0x8F
    bl m4aSongNumStart
    ldr r2, _08018AE8 @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x02]
    adds r0, #0x01
    strb r0, [r1, #0x02]
    ldr r0, [r2, #0x00]
    str r6, [r0, #0x04]
    bl sub_801D25C
    b _08018B60
    _08018AE8: .4byte 0x03000190
    _08018AEC:
    movs r0, #0x8E
    bl m4aSongNumStart
    movs r3, #0x10
    ldr r2, _08018B0C @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x00]
    strb r0, [r1, #0x01]
    ldr r0, [r2, #0x00]
    strb r3, [r0, #0x00]
    ldr r0, [r2, #0x00]
    strb r6, [r0, #0x02]
    ldr r0, [r2, #0x00]
    str r6, [r0, #0x04]
    b _08018B60
    .byte 0x00, 0x00
    _08018B0C: .4byte 0x03000190
    _08018B10:
    bl main_getTriggerKeys
    ands r4, r0
    cmp r4, #0x00
    beq _08018B60
    movs r0, #0x90
    bl m4aSongNumStart
    movs r3, #0x10
    ldr r2, _08018B38 @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x00]
    strb r0, [r1, #0x01]
    ldr r0, [r2, #0x00]
    strb r3, [r0, #0x00]
    ldr r0, [r2, #0x00]
    strb r5, [r0, #0x02]
    ldr r0, [r2, #0x00]
    str r5, [r0, #0x04]
    b _08018B60
    _08018B38: .4byte 0x03000190
    _08018B3C:
    bl sub_801D28C
    adds r4, r0, #0x0
    cmp r4, #0x00
    bne _08018B60
    movs r0, #0x8E
    bl m4aSongNumStart
    ldr r2, _08018B9C @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x00]
    strb r0, [r1, #0x01]
    ldr r0, [r2, #0x00]
    strb r4, [r0, #0x00]
    ldr r0, [r2, #0x00]
    strb r4, [r0, #0x02]
    ldr r0, [r2, #0x00]
    str r4, [r0, #0x04]
    _08018B60:
    ldr r0, _08018BA0 @ =0x080C9488
    ldr r1, _08018BA4 @ =0x080DA3A4
    mov r8, r1
    movs r4, #0x00
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    ldr r0, _08018BA8 @ =0x080C9490
    ldr r5, _08018BAC @ =0x080DA3A8
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    adds r1, r5, #0x0
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    ldrb r3, [r7, #0x0D]
    adds r6, r3, #0x0
    ldr r0, _08018B9C @ =0x03000190
    ldr r0, [r0, #0x00]
    ldr r1, [r0, #0x08]
    movs r0, #0x1F
    ands r0, r1
    cmp r0, #0x13
    bgt _08018BB4
    ldr r0, _08018BB0 @ =0x080C9498
    b _08018BBE
    _08018B9C: .4byte 0x03000190
    _08018BA0: .4byte 0x080C9488
    _08018BA4: .4byte 0x080DA3A4
    _08018BA8: .4byte 0x080C9490
    _08018BAC: .4byte 0x080DA3A8
    _08018BB0: .4byte 0x080C9498
    _08018BB4:
    movs r2, #0x20
    ands r2, r1
    cmp r2, #0x00
    beq _08018BD8
    ldr r0, _08018BD4 @ =0x080C94A8
    _08018BBE:
    adds r1, r5, #0x0
    cmp r3, #0x00
    bne _08018BC6
    mov r1, r8
    _08018BC6:
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    b _08018BEE
    _08018BD4: .4byte 0x080C94A8
    _08018BD8:
    ldr r0, _08018BFC @ =0x080C94B8
    adds r1, r5, #0x0
    cmp r6, #0x00
    bne _08018BE2
    mov r1, r8
    _08018BE2:
    str r2, [sp, #0x000]
    str r2, [sp, #0x004]
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    _08018BEE:
    add sp, #0x008
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _08018BFC: .4byte 0x080C94B8
    thumb_func_start sub_8018C00
    sub_8018C00:
    push {r4, r5, r6, r7, lr}
    adds r7, r0, #0x0
    ldrb r4, [r7, #0x02]
    cmp r4, #0x01
    beq _08018C4C
    cmp r4, #0x01
    bgt _08018C14
    cmp r4, #0x00
    beq _08018C1A
    b _08018D4A
    _08018C14:
    cmp r4, #0x02
    beq _08018C68
    b _08018D4A
    _08018C1A:
    adds r0, r7, #0x0
    bl sub_80180D8
    ldr r1, _08018C40 @ =0x080DAEE4
    movs r0, #0x03
    bl sub_80142CC
    ldr r0, _08018C44 @ =0x00000844
    bl sub_801D240
    ldr r2, _08018C48 @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x02]
    adds r0, #0x01
    strb r0, [r1, #0x02]
    ldr r0, [r2, #0x00]
    str r4, [r0, #0x04]
    b _08018D4A
    .byte 0x00, 0x00
    _08018C40: .4byte 0x080DAEE4
    _08018C44: .4byte 0x00000844
    _08018C48: .4byte 0x03000190
    _08018C4C:
    bl sub_801D28C
    adds r3, r0, #0x0
    cmp r3, #0x00
    bne _08018D4A
    ldr r2, _08018C64 @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x02]
    adds r0, #0x01
    strb r0, [r1, #0x02]
    ldr r0, [r2, #0x00]
    b _08018D48
    _08018C64: .4byte 0x03000190
    _08018C68:
    bl save_getSavePointer_805D9B0
    adds r4, r0, #0x0
    movs r0, #0x00
    bl sub_805D9B8
    adds r5, r0, #0x0
    ldr r0, _08018D08 @ =0x02021400
    ldr r2, _08018D0C @ =0xFFFFF000
    adds r1, r0, r2
    movs r2, #0x80
    lsls r2, r2, #0x04
    bl CpuSet
    ldrb r1, [r5, #0x08]
    movs r0, #0x20
    movs r6, #0x00
    orrs r0, r1
    strb r0, [r5, #0x08]
    movs r3, #0xBF
    lsls r3, r3, #0x04
    adds r4, r4, r3
    movs r0, #0x01
    ldrb r1, [r7, #0x11]
    lsls r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r1
    strh r0, [r4, #0x00]
    bl oam_update
    bl main_frameProc
    bl save_getSavePointer_805D9B0
    movs r2, #0xBF
    lsls r2, r2, #0x04
    adds r0, r0, r2
    ldrh r2, [r0, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x08
    adds r1, r3, #0x0
    orrs r1, r2
    strh r1, [r0, #0x00]
    bl sub_805D12C
    adds r4, r0, #0x0
    bl save_getSavePointer_805D9B0
    movs r1, #0xBF
    lsls r1, r1, #0x04
    adds r0, r0, r1
    ldrh r2, [r0, #0x00]
    ldr r1, _08018D10 @ =0x00007FFF
    ands r1, r2
    strh r1, [r0, #0x00]
    movs r0, #0x00
    bl sub_805D9B8
    adds r0, #0x08
    strh r6, [r0, #0x02]
    movs r0, #0x01
    bl sub_805D9B8
    adds r0, #0x08
    strh r6, [r0, #0x02]
    str r6, [r7, #0x08]
    _08018CEC:
    bl main_frameProc
    ldr r0, [r7, #0x08]
    adds r0, #0x01
    str r0, [r7, #0x08]
    cmp r0, #0x3B
    ble _08018CEC
    cmp r4, #0x00
    beq _08018D18
    ldr r1, _08018D14 @ =0x080DAF98
    movs r0, #0x03
    bl sub_80142CC
    b _08018D20
    _08018D08: .4byte 0x02021400
    _08018D0C: .4byte 0xFFFFF000
    _08018D10: .4byte 0x00007FFF
    _08018D14: .4byte 0x080DAF98
    _08018D18:
    ldr r1, _08018D50 @ =0x080DAFEC
    movs r0, #0x03
    bl sub_80142CC
    _08018D20:
    movs r0, #0x00
    str r0, [r7, #0x08]
    _08018D24:
    bl main_frameProc
    ldr r0, [r7, #0x08]
    adds r0, #0x01
    str r0, [r7, #0x08]
    cmp r0, #0x77
    ble _08018D24
    movs r4, #0x0C
    ldr r1, _08018D54 @ =0x03000190
    ldr r0, [r1, #0x00]
    ldrb r2, [r0, #0x00]
    movs r3, #0x00
    strb r2, [r0, #0x01]
    ldr r0, [r1, #0x00]
    strb r4, [r0, #0x00]
    ldr r0, [r1, #0x00]
    strb r3, [r0, #0x02]
    ldr r0, [r1, #0x00]
    _08018D48:
    str r3, [r0, #0x04]
    _08018D4A:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    _08018D50: .4byte 0x080DAFEC
    _08018D54: .4byte 0x03000190
    thumb_func_start sub_8018D58
    sub_8018D58:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x004
    movs r6, #0x00
    ldr r1, _08018E08 @ =0x080DA530
    mov r10, r1
    ldr r7, [r1, #0x00]
    str r7, [sp, #0x000]
    ldr r1, _08018E0C @ =0x000001FF
    mov r9, r1
    movs r7, #0x80
    lsls r7, r7, #0x01
    mov r12, r7
    movs r1, #0xFF
    mov r8, r1
    ldr r7, _08018E10 @ =0x0000058C
    adds r5, r0, r7
    ldr r1, _08018E14 @ =0x00000524
    adds r3, r0, r1
    _08018D84:
    movs r1, #0x16
    subs r1, r1, r6
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r2, r0, #0x01
    ldr r7, [sp, #0x000]
    adds r4, r2, r7
    ldrh r0, [r4, #0x04]
    mov r1, r9
    ands r1, r0
    adds r0, r1, #0x0
    mov r7, r12
    ands r0, r7
    cmp r0, #0x00
    beq _08018DA8
    movs r0, #0xFE
    lsls r0, r0, #0x08
    orrs r1, r0
    _08018DA8:
    adds r0, r1, #0x0
    adds r0, #0x80
    strh r0, [r5, #0x00]
    mov r1, r10
    ldr r0, [r1, #0x04]
    adds r2, r2, r0
    ldrh r0, [r2, #0x04]
    mov r1, r9
    ands r1, r0
    adds r0, r1, #0x0
    mov r7, r12
    ands r0, r7
    cmp r0, #0x00
    beq _08018DCA
    movs r0, #0xFE
    lsls r0, r0, #0x08
    orrs r1, r0
    _08018DCA:
    adds r1, #0x80
    adds r0, r3, #0x0
    adds r0, #0x6C
    strh r1, [r0, #0x00]
    ldrh r1, [r4, #0x02]
    mov r0, r8
    ands r0, r1
    adds r0, #0x58
    adds r1, r3, #0x0
    adds r1, #0x6A
    strh r0, [r1, #0x00]
    ldrh r1, [r2, #0x02]
    mov r0, r8
    ands r0, r1
    adds r0, #0x58
    adds r1, r3, #0x0
    adds r1, #0x6E
    strh r0, [r1, #0x00]
    adds r5, #0x0C
    adds r3, #0x0C
    adds r6, #0x01
    cmp r6, #0x16
    ble _08018D84
    add sp, #0x004
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    _08018E08: .4byte 0x080DA530
    _08018E0C: .4byte 0x000001FF
    _08018E10: .4byte 0x0000058C
    _08018E14: .4byte 0x00000524
    thumb_func_start sub_8018E18
    sub_8018E18:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x004
    movs r6, #0x00
    ldr r1, _08018EC8 @ =0x080DA530
    mov r10, r1
    ldr r7, [r1, #0x04]
    str r7, [sp, #0x000]
    ldr r1, _08018ECC @ =0x000001FF
    mov r9, r1
    movs r7, #0x80
    lsls r7, r7, #0x01
    mov r12, r7
    movs r1, #0xFF
    mov r8, r1
    ldr r7, _08018ED0 @ =0x0000058C
    adds r5, r0, r7
    ldr r1, _08018ED4 @ =0x00000524
    adds r3, r0, r1
    _08018E44:
    movs r1, #0x16
    subs r1, r1, r6
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r2, r0, #0x01
    ldr r7, [sp, #0x000]
    adds r4, r2, r7
    ldrh r0, [r4, #0x04]
    mov r1, r9
    ands r1, r0
    adds r0, r1, #0x0
    mov r7, r12
    ands r0, r7
    cmp r0, #0x00
    beq _08018E68
    movs r0, #0xFE
    lsls r0, r0, #0x08
    orrs r1, r0
    _08018E68:
    adds r0, r1, #0x0
    adds r0, #0x80
    strh r0, [r5, #0x00]
    mov r1, r10
    ldr r0, [r1, #0x08]
    adds r2, r2, r0
    ldrh r0, [r2, #0x04]
    mov r1, r9
    ands r1, r0
    adds r0, r1, #0x0
    mov r7, r12
    ands r0, r7
    cmp r0, #0x00
    beq _08018E8A
    movs r0, #0xFE
    lsls r0, r0, #0x08
    orrs r1, r0
    _08018E8A:
    adds r1, #0x80
    adds r0, r3, #0x0
    adds r0, #0x6C
    strh r1, [r0, #0x00]
    ldrh r1, [r4, #0x02]
    mov r0, r8
    ands r0, r1
    adds r0, #0x58
    adds r1, r3, #0x0
    adds r1, #0x6A
    strh r0, [r1, #0x00]
    ldrh r1, [r2, #0x02]
    mov r0, r8
    ands r0, r1
    adds r0, #0x58
    adds r1, r3, #0x0
    adds r1, #0x6E
    strh r0, [r1, #0x00]
    adds r5, #0x0C
    adds r3, #0x0C
    adds r6, #0x01
    cmp r6, #0x16
    ble _08018E44
    add sp, #0x004
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    _08018EC8: .4byte 0x080DA530
    _08018ECC: .4byte 0x000001FF
    _08018ED0: .4byte 0x0000058C
    _08018ED4: .4byte 0x00000524
    thumb_func_start sub_8018ED8
    sub_8018ED8:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x018
    str r1, [sp, #0x008]
    ldr r1, _08018FA8 @ =0x00000524
    adds r1, r0, r1
    str r1, [sp, #0x010]
    movs r2, #0x16
    str r2, [sp, #0x00C]
    ldr r3, _08018FAC @ =0x00000694
    adds r4, r0, r3
    ldr r1, _08018FB0 @ =0x0000062C
    adds r6, r0, r1
    adds r2, #0xF2
    str r2, [sp, #0x014]
    _08018EFC:
    ldr r1, _08018FB4 @ =0x080DA530
    ldr r0, [sp, #0x00C]
    adds r0, #0x03
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov r10, r0
    cmp r0, #0x00
    beq _08018F82
    ldr r3, [sp, #0x010]
    ldr r0, [r3, #0x64]
    adds r0, #0x01
    movs r1, #0x00
    ldsh r5, [r4, r1]
    movs r3, #0x02
    ldsh r2, [r4, r3]
    mov r8, r2
    movs r1, #0x04
    ldsh r7, [r4, r1]
    movs r3, #0x06
    ldsh r2, [r4, r3]
    mov r9, r2
    lsls r0, r0, #0x0E
    ldr r1, [sp, #0x008]
    bl __divsi3
    ldr r1, _08018FB8 @ =0x080E645C
    lsls r0, r0, #0x10
    asrs r2, r0, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08018F3E
    adds r0, #0x3F
    _08018F3E:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r3, r0, r1
    ldr r1, [r3, #0x00]
    subs r0, r7, r5
    muls r0, r1
    asrs r0, r0, #0x0F
    adds r0, r5, r0
    adds r1, r6, #0x0
    adds r1, #0x70
    movs r5, #0x00
    strh r0, [r1, #0x00]
    ldr r1, [r3, #0x00]
    mov r2, r9
    mov r3, r8
    subs r0, r2, r3
    muls r0, r1
    asrs r0, r0, #0x0F
    add r0, r8
    adds r2, r6, #0x0
    adds r2, #0x72
    strh r0, [r2, #0x00]
    ldr r0, [sp, #0x014]
    ldr r2, [sp, #0x010]
    adds r1, r0, r2
    adds r1, #0x70
    str r5, [sp, #0x000]
    str r5, [sp, #0x004]
    mov r0, r10
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    _08018F82:
    subs r4, #0x0C
    subs r6, #0x0C
    ldr r3, [sp, #0x014]
    subs r3, #0x0C
    str r3, [sp, #0x014]
    ldr r0, [sp, #0x00C]
    subs r0, #0x01
    str r0, [sp, #0x00C]
    cmp r0, #0x00
    bge _08018EFC
    add sp, #0x018
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _08018FA8: .4byte 0x00000524
    _08018FAC: .4byte 0x00000694
    _08018FB0: .4byte 0x0000062C
    _08018FB4: .4byte 0x080DA530
    _08018FB8: .4byte gSinTable
    thumb_func_start sub_8018FBC
    sub_8018FBC:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    add sp, #-0x008
    mov r9, r0
    ldr r5, _08018FDC @ =0x00000524
    add r5, r9
    ldr r4, [r5, #0x60]
    cmp r4, #0x01
    beq _08019004
    cmp r4, #0x01
    bgt _08018FE0
    cmp r4, #0x00
    beq _08018FEA
    b _0801907E
    _08018FDC: .4byte 0x00000524
    _08018FE0:
    cmp r4, #0x02
    beq _08019050
    cmp r4, #0x03
    beq _0801906C
    b _0801907E
    _08018FEA:
    mov r0, r9
    movs r1, #0x10
    bl sub_8018ED8
    ldr r0, [r5, #0x64]
    adds r0, #0x01
    str r0, [r5, #0x64]
    cmp r0, #0x10
    ble _0801907E
    movs r0, #0x01
    str r0, [r5, #0x60]
    str r4, [r5, #0x64]
    b _0801907E
    _08019004:
    movs r7, #0x16
    ldr r0, _08019048 @ =0x080DA530
    ldr r4, _0801904C @ =0x0000069C
    add r4, r9
    adds r6, r0, #0x0
    adds r6, #0x64
    movs r0, #0x00
    mov r8, r0
    _08019014:
    ldr r0, [r6, #0x00]
    cmp r0, #0x00
    beq _0801902A
    mov r1, r8
    str r1, [sp, #0x000]
    str r1, [sp, #0x004]
    adds r1, r4, #0x0
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    _0801902A:
    subs r4, #0x0C
    subs r6, #0x04
    subs r7, #0x01
    cmp r7, #0x00
    bge _08019014
    ldr r0, [r5, #0x64]
    adds r0, #0x01
    str r0, [r5, #0x64]
    cmp r0, #0x04
    ble _0801907E
    mov r0, r9
    bl sub_8018E18
    movs r0, #0x02
    b _08019064
    _08019048: .4byte 0x080DA530
    _0801904C: .4byte 0x0000069C
    _08019050:
    mov r0, r9
    movs r1, #0x08
    bl sub_8018ED8
    ldr r0, [r5, #0x64]
    adds r0, #0x01
    str r0, [r5, #0x64]
    cmp r0, #0x08
    ble _0801907E
    movs r0, #0x03
    _08019064:
    str r0, [r5, #0x60]
    movs r0, #0x00
    str r0, [r5, #0x64]
    b _0801907E
    _0801906C:
    ldr r0, _08019090 @ =0x080DA530
    ldr r0, [r0, #0x08]
    ldr r1, _08019094 @ =0x080DA598
    movs r2, #0x00
    str r2, [sp, #0x000]
    str r2, [sp, #0x004]
    movs r3, #0x00
    bl oam_renderCellData
    _0801907E:
    movs r0, #0x00
    add sp, #0x008
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    _08019090: .4byte 0x080DA530
    _08019094: .4byte 0x080DA598
    thumb_func_start sub_8019098
    sub_8019098:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    add sp, #-0x00C
    adds r6, r0, #0x0
    adds r5, r1, #0x0
    ldr r0, _080190EC @ =0x00000524
    adds r3, r6, r0
    ldr r0, [r6, #0x08]
    ldr r2, _080190F0 @ =0x080E645C
    lsls r0, r0, #0x1C
    asrs r1, r0, #0x10
    adds r0, r1, #0x0
    cmp r1, #0x00
    bge _080190B8
    adds r0, #0x3F
    _080190B8:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x05
    asrs r2, r0, #0x0F
    adds r7, r2, #0x0
    adds r7, #0xE0
    movs r0, #0x90
    lsls r0, r0, #0x01
    subs r0, r0, r2
    mov r8, r0
    ldrb r0, [r6, #0x02]
    cmp r0, #0x09
    beq _080190F4
    cmp r0, #0x09
    bge _080190DE
    b _0801928E
    _080190DE:
    cmp r0, #0x0A
    beq _080191B0
    cmp r0, #0x0B
    bne _080190E8
    b _080191E8
    _080190E8:
    b _0801928E
    .byte 0x00, 0x00
    _080190EC: .4byte 0x00000524
    _080190F0: .4byte gSinTable
    _080190F4:
    movs r1, #0xDD
    lsls r1, r1, #0x03
    adds r0, r6, r1
    ldrh r0, [r0, #0x00]
    movs r1, #0x48
    subs r1, r1, r0
    lsls r1, r1, #0x10
    movs r0, #0x78
    orrs r0, r1
    str r0, [sp, #0x008]
    ldrb r1, [r3, #0x00]
    cmp r1, #0x00
    bne _08019128
    ldr r0, _08019124 @ =0x080CAA94
    movs r3, #0x80
    lsls r3, r3, #0x01
    str r1, [sp, #0x000]
    str r1, [sp, #0x004]
    add r1, sp, #0x008
    adds r2, r7, #0x0
    bl oam_renderCellData
    b _0801913C
    .byte 0x00, 0x00
    _08019124: .4byte 0x080CAA94
    _08019128:
    ldr r0, _080191A4 @ =0x080CA8E4
    movs r3, #0x80
    lsls r3, r3, #0x01
    movs r1, #0x00
    str r1, [sp, #0x000]
    str r1, [sp, #0x004]
    add r1, sp, #0x008
    adds r2, r7, #0x0
    bl oam_renderCellData
    _0801913C:
    lsls r0, r5, #0x01
    adds r0, r0, r5
    lsls r1, r0, #0x04
    adds r4, r0, r1
    adds r0, r4, #0x0
    cmp r4, #0x00
    bge _0801914C
    adds r0, #0x3F
    _0801914C:
    asrs r0, r0, #0x06
    ldr r1, [r6, #0x04]
    cmp r1, r0
    bgt _08019156
    b _0801928E
    _08019156:
    subs r5, r5, r0
    adds r2, r7, #0x0
    muls r2, r5
    subs r6, r1, r0
    adds r0, r2, #0x0
    adds r1, r6, #0x0
    bl __divsi3
    adds r7, r0, #0x0
    mov r0, r8
    muls r0, r5
    adds r1, r6, #0x0
    bl __divsi3
    mov r8, r0
    movs r4, #0x00
    movs r1, #0x78
    add r0, sp, #0x008
    strh r1, [r0, #0x00]
    adds r1, r0, #0x0
    movs r0, #0x54
    strh r0, [r1, #0x02]
    ldr r0, _080191A8 @ =0x080CA8EC
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    mov r2, r8
    adds r3, r7, #0x0
    bl oam_renderCellData
    ldr r0, _080191AC @ =0x080CA8DC
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    add r1, sp, #0x008
    mov r2, r8
    adds r3, r7, #0x0
    bl oam_renderCellData
    b _0801928E
    .byte 0x00, 0x00
    _080191A4: .4byte 0x080CA8E4
    _080191A8: .4byte 0x080CA8EC
    _080191AC: .4byte 0x080CA8DC
    _080191B0:
    movs r4, #0x00
    movs r1, #0x78
    add r0, sp, #0x008
    strh r1, [r0, #0x00]
    adds r1, r0, #0x0
    movs r0, #0x54
    strh r0, [r1, #0x02]
    ldr r0, _080191E0 @ =0x080CA8EC
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    adds r2, r7, #0x0
    mov r3, r8
    bl oam_renderCellData
    ldr r0, _080191E4 @ =0x080CA8DC
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    add r1, sp, #0x008
    adds r2, r7, #0x0
    mov r3, r8
    bl oam_renderCellData
    b _0801928E
    .byte 0x00, 0x00
    _080191E0: .4byte 0x080CA8EC
    _080191E4: .4byte 0x080CA8DC
    _080191E8:
    movs r2, #0x00
    movs r1, #0x78
    add r0, sp, #0x008
    strh r1, [r0, #0x00]
    movs r1, #0xDD
    lsls r1, r1, #0x03
    adds r0, r6, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x48
    subs r0, r0, r1
    add r1, sp, #0x008
    strh r0, [r1, #0x02]
    ldrb r0, [r3, #0x00]
    cmp r0, #0x00
    bne _0801921C
    ldr r0, _08019218 @ =0x080CA8E4
    movs r3, #0x80
    lsls r3, r3, #0x01
    str r2, [sp, #0x000]
    str r2, [sp, #0x004]
    adds r2, r7, #0x0
    bl oam_renderCellData
    b _0801922E
    _08019218: .4byte 0x080CA8E4
    _0801921C:
    ldr r0, _0801929C @ =0x080CAA94
    movs r3, #0x80
    lsls r3, r3, #0x01
    str r2, [sp, #0x000]
    str r2, [sp, #0x004]
    add r1, sp, #0x008
    adds r2, r7, #0x0
    bl oam_renderCellData
    _0801922E:
    lsls r0, r5, #0x01
    adds r0, r0, r5
    lsls r1, r0, #0x04
    adds r4, r0, r1
    adds r0, r4, #0x0
    cmp r4, #0x00
    bge _0801923E
    adds r0, #0x3F
    _0801923E:
    asrs r0, r0, #0x06
    subs r5, r5, r0
    ldr r1, [r6, #0x04]
    cmp r1, r5
    bge _0801928E
    adds r0, r7, #0x0
    muls r0, r5
    subs r6, r5, r1
    adds r1, r6, #0x0
    bl __divsi3
    adds r7, r0, #0x0
    mov r0, r8
    muls r0, r5
    adds r1, r6, #0x0
    bl __divsi3
    mov r8, r0
    movs r4, #0x00
    movs r1, #0x78
    add r0, sp, #0x008
    strh r1, [r0, #0x00]
    adds r1, r0, #0x0
    movs r0, #0x54
    strh r0, [r1, #0x02]
    ldr r0, _080192A0 @ =0x080CA8EC
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    mov r2, r8
    adds r3, r7, #0x0
    bl oam_renderCellData
    ldr r0, _080192A4 @ =0x080CA8DC
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    add r1, sp, #0x008
    mov r2, r8
    adds r3, r7, #0x0
    bl oam_renderCellData
    _0801928E:
    add sp, #0x00C
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _0801929C: .4byte 0x080CAA94
    _080192A0: .4byte 0x080CA8EC
    _080192A4: .4byte 0x080CA8DC
    thumb_func_start sub_80192A8
    sub_80192A8:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    add sp, #-0x008
    adds r2, r0, #0x0
    ldr r0, _0801930C @ =0x00000524
    adds r7, r2, r0
    ldrb r0, [r2, #0x02]
    cmp r0, #0x03
    bge _080192BE
    b _080193CC
    _080192BE:
    cmp r0, #0x08
    ble _080192CE
    cmp r0, #0x10
    ble _080192C8
    b _080193CC
    _080192C8:
    cmp r0, #0x0C
    bge _080192CE
    b _080193CC
    _080192CE:
    ldr r1, [r7, #0x24]
    ldr r0, [r7, #0x20]
    adds r1, r1, r0
    str r1, [r7, #0x24]
    ldr r3, [r7, #0x2C]
    ldr r0, _08019310 @ =0x00000554
    adds r0, r0, r2
    mov r8, r0
    cmp r1, #0x7F
    ble _080192EA
    _080192E2:
    subs r1, #0x7F
    cmp r1, #0x7F
    bgt _080192E2
    str r1, [r7, #0x24]
    _080192EA:
    ldr r1, [r7, #0x24]
    cmp r1, #0x00
    bge _080192FC
    _080192F0:
    adds r0, r1, #0x0
    adds r0, #0x7F
    adds r1, r0, #0x0
    cmp r0, #0x00
    blt _080192F0
    str r0, [r7, #0x24]
    _080192FC:
    ldr r1, [r7, #0x24]
    cmp r3, r1
    beq _08019360
    cmp r1, #0x3F
    ble _08019314
    movs r0, #0x7F
    subs r0, r0, r1
    b _08019316
    _0801930C: .4byte 0x00000524
    _08019310: .4byte 0x00000554
    _08019314:
    adds r0, r1, #0x0
    _08019316:
    bl sub_8008600
    ldr r5, [r7, #0x38]
    lsls r4, r5, #0x01
    adds r4, r4, r5
    lsls r4, r4, #0x02
    subs r4, r4, r5
    lsls r4, r4, #0x0D
    lsls r0, r0, #0x0B
    ldr r1, _08019398 @ =0x08345800
    adds r0, r0, r1
    adds r4, r4, r0
    ldr r6, _0801939C @ =0x06010000
    bl dmaq_getVBlankDmaQueue
    ldr r3, _080193A0 @ =0x80000400
    adds r1, r4, #0x0
    adds r2, r6, #0x0
    bl dmaq_enqueue
    ldr r0, [r7, #0x24]
    str r0, [r7, #0x2C]
    lsls r5, r5, #0x09
    ldr r2, _080193A4 @ =0x08344600
    adds r5, r5, r2
    movs r0, #0x01
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r1, #0x80
    adds r0, r5, #0x0
    movs r2, #0x08
    bl CpuFastSet
    movs r0, #0x01
    bl pltt_setDirtyFlag
    _08019360:
    ldr r3, _080193A8 @ =0x080CA8D4
    mov r1, r8
    movs r2, #0x03
    _08019366:
    ldrh r0, [r3, #0x00]
    strh r0, [r1, #0x00]
    adds r3, #0x02
    adds r1, #0x02
    subs r2, #0x01
    cmp r2, #0x00
    bge _08019366
    ldrh r1, [r7, #0x36]
    movs r2, #0xC0
    lsls r2, r2, #0x04
    adds r0, r2, #0x0
    movs r2, #0x00
    orrs r0, r1
    strh r0, [r7, #0x36]
    ldr r0, [r7, #0x24]
    movs r1, #0x40
    ands r0, r1
    cmp r0, #0x00
    beq _080193AC
    ldrh r0, [r7, #0x34]
    movs r2, #0x80
    lsls r2, r2, #0x05
    adds r1, r2, #0x0
    orrs r0, r1
    b _080193B2
    _08019398: .4byte 0x08345800
    _0801939C: .4byte 0x06010000
    _080193A0: .4byte 0x80000400
    _080193A4: .4byte 0x08344600
    _080193A8: .4byte 0x080CA8D4
    _080193AC:
    ldrh r1, [r7, #0x34]
    ldr r0, _080193D8 @ =0x0000EFFF
    ands r0, r1
    _080193B2:
    strh r0, [r7, #0x34]
    ldr r3, [r7, #0x3C]
    cmp r3, #0x00
    beq _080193CC
    adds r1, r7, #0x0
    adds r1, #0x40
    movs r0, #0x00
    str r0, [sp, #0x000]
    str r0, [sp, #0x004]
    mov r0, r8
    adds r2, r3, #0x0
    bl oam_renderCellData
    _080193CC:
    add sp, #0x008
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    _080193D8: .4byte 0x0000EFFF
    thumb_func_start sub_80193DC
    sub_80193DC:
    push {r4, r5, r6, lr}
    mov r6, r10
    mov r5, r9
    mov r4, r8
    push {r4, r5, r6}
    add sp, #-0x00C
    adds r6, r0, #0x0
    ldr r0, _0801945C @ =0x000006E6
    adds r0, r0, r6
    mov r9, r0
    ldrh r1, [r0, #0x00]
    movs r0, #0x68
    subs r0, r0, r1
    lsls r0, r0, #0x10
    movs r1, #0xDD
    lsls r1, r1, #0x03
    adds r6, r6, r1
    ldrh r1, [r6, #0x00]
    movs r5, #0x98
    subs r1, r5, r1
    lsls r1, r1, #0x10
    lsrs r0, r0, #0x10
    orrs r0, r1
    str r0, [sp, #0x008]
    ldr r2, _08019460 @ =0x080CAB28
    mov r8, r2
    add r0, sp, #0x008
    mov r10, r0
    movs r4, #0x00
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    mov r0, r8
    add r1, sp, #0x008
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    mov r2, r9
    ldrh r1, [r2, #0x00]
    movs r2, #0xC4
    lsls r2, r2, #0x01
    adds r0, r2, #0x0
    subs r0, r0, r1
    add r1, sp, #0x008
    strh r0, [r1, #0x00]
    ldrh r0, [r6, #0x00]
    subs r5, r5, r0
    mov r0, r10
    strh r5, [r0, #0x02]
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    mov r0, r8
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    add sp, #0x00C
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    _0801945C: .4byte 0x000006E6
    _08019460: .4byte 0x080CAB28
    thumb_func_start sub_8019464
    sub_8019464:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    mov r8, r0
    ldr r4, _080194BC @ =0x00000524
    add r4, r8
    ldr r0, _080194C0 @ =0x02010400
    mov r9, r0
    ldr r0, _080194C4 @ =0x080BDF90
    mov r1, r9
    bl LZ77UnCompWram
    mov r1, r8
    ldr r0, [r1, #0x08]
    movs r1, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _08019498
    ldr r0, [r4, #0x5C]
    adds r0, #0x01
    str r0, [r4, #0x5C]
    cmp r0, #0x06
    ble _08019498
    movs r0, #0x00
    str r0, [r4, #0x5C]
    _08019498:
    ldr r7, [r4, #0x5C]
    movs r4, #0x00
    adds r6, r7, #0x0
    adds r6, #0x30
    adds r5, r7, #0x0
    adds r5, #0x37
    _080194A4:
    movs r0, #0x00
    bl pltt_getBuffer
    movs r1, #0x3D
    subs r1, r1, r4
    lsls r1, r1, #0x01
    adds r1, r1, r0
    adds r0, r4, r7
    cmp r0, #0x06
    bgt _080194C8
    lsls r0, r5, #0x01
    b _080194CA
    _080194BC: .4byte 0x00000524
    _080194C0: .4byte 0x02010400
    _080194C4: .4byte 0x080BDF90
    _080194C8:
    lsls r0, r6, #0x01
    _080194CA:
    add r0, r9
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    adds r6, #0x01
    adds r5, #0x01
    adds r4, #0x01
    cmp r4, #0x06
    ble _080194A4
    movs r0, #0x01
    bl pltt_setDirtyFlag
    ldr r0, _08019510 @ =0x000006E6
    add r0, r8
    ldrh r0, [r0, #0x00]
    adds r0, #0x10
    ldr r1, _08019514 @ =0x000006EA
    add r1, r8
    ldrh r2, [r1, #0x00]
    strh r0, [r1, #0x00]
    movs r0, #0xDD
    lsls r0, r0, #0x03
    add r0, r8
    ldrh r0, [r0, #0x00]
    subs r0, #0x48
    ldr r1, _08019518 @ =0x000006EC
    add r1, r8
    ldrh r2, [r1, #0x00]
    strh r0, [r1, #0x00]
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _08019510: .4byte 0x000006E6
    _08019514: .4byte 0x000006EA
    _08019518: .4byte 0x000006EC
    thumb_func_start sub_801951C
    sub_801951C:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    add sp, #-0x004
    mov r9, r0
    ldr r0, [r0, #0x08]
    asrs r7, r0, #0x01
    movs r0, #0x07
    ands r7, r0
    ldr r0, _08019560 @ =0x02010400
    mov r8, r0
    ldr r0, _08019564 @ =0x080BE0C4
    mov r1, r8
    bl LZ77UnCompWram
    movs r4, #0x00
    adds r6, r7, #0x0
    adds r6, #0x5F
    adds r5, r7, #0x0
    adds r5, #0x67
    _08019546:
    movs r0, #0x01
    bl pltt_getBuffer
    movs r1, #0x6E
    subs r1, r1, r4
    lsls r1, r1, #0x01
    adds r1, r1, r0
    adds r0, r4, r7
    cmp r0, #0x07
    bgt _08019568
    lsls r0, r5, #0x01
    b _0801956A
    .byte 0x00, 0x00
    _08019560: .4byte 0x02010400
    _08019564: .4byte 0x080BE0C4
    _08019568:
    lsls r0, r6, #0x01
    _0801956A:
    add r0, r8
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    adds r6, #0x01
    adds r5, #0x01
    adds r4, #0x01
    cmp r4, #0x07
    ble _08019546
    mov r1, r9
    ldrb r0, [r1, #0x02]
    cmp r0, #0x0B
    bgt _080195FE
    cmp r0, #0x09
    blt _080195FE
    movs r0, #0x00
    bl pltt_getBuffer
    adds r2, r0, #0x0
    adds r2, #0x40
    mov r0, r8
    adds r0, #0x40
    movs r1, #0xC0
    lsls r1, r1, #0x01
    add r1, r8
    mov r4, r9
    ldr r3, [r4, #0x08]
    movs r4, #0x10
    str r4, [sp, #0x000]
    bl sub_8005E04
    movs r0, #0x00
    bl pltt_getBuffer
    adds r2, r0, #0x0
    adds r2, #0x80
    mov r0, r8
    adds r0, #0x60
    movs r1, #0xA0
    lsls r1, r1, #0x01
    add r1, r8
    mov r5, r9
    ldr r3, [r5, #0x08]
    str r4, [sp, #0x000]
    bl sub_8005E04
    movs r0, #0x00
    bl pltt_getBuffer
    adds r4, r0, #0x0
    adds r4, #0x40
    movs r0, #0x01
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r1, #0x40
    adds r0, r4, #0x0
    movs r2, #0x08
    bl CpuFastSet
    movs r0, #0x00
    bl pltt_getBuffer
    adds r4, r0, #0x0
    adds r4, #0x80
    movs r0, #0x01
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r1, #0x60
    adds r0, r4, #0x0
    movs r2, #0x08
    bl CpuFastSet
    b _08019670
    _080195FE:
    movs r0, #0x00
    bl pltt_getBuffer
    adds r2, r0, #0x0
    adds r2, #0x40
    mov r0, r8
    adds r0, #0x40
    movs r1, #0xC0
    lsls r1, r1, #0x01
    add r1, r8
    movs r4, #0x10
    str r4, [sp, #0x000]
    movs r3, #0x00
    bl sub_8005E04
    movs r0, #0x00
    bl pltt_getBuffer
    adds r2, r0, #0x0
    adds r2, #0x80
    mov r0, r8
    adds r0, #0x60
    movs r1, #0xA0
    lsls r1, r1, #0x01
    add r1, r8
    str r4, [sp, #0x000]
    movs r3, #0x00
    bl sub_8005E04
    movs r0, #0x00
    bl pltt_getBuffer
    adds r4, r0, #0x0
    adds r4, #0x40
    movs r0, #0x01
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r1, #0x40
    adds r0, r4, #0x0
    movs r2, #0x08
    bl CpuFastSet
    movs r0, #0x00
    bl pltt_getBuffer
    adds r4, r0, #0x0
    adds r4, #0x80
    movs r0, #0x01
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r1, #0x60
    adds r0, r4, #0x0
    movs r2, #0x08
    bl CpuFastSet
    _08019670:
    add sp, #0x004
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_8019680
    sub_8019680:
    push {r4, r5, lr}
    add sp, #-0x00C
    adds r5, r0, #0x0
    ldr r0, _080196AC @ =0x00000524
    adds r4, r5, r0
    ldr r0, [r4, #0x48]
    ldr r1, [r4, #0x44]
    cmp r0, r1
    beq _0801969A
    str r1, [r4, #0x48]
    movs r0, #0x00
    str r0, [r4, #0x4C]
    str r0, [r4, #0x50]
    _0801969A:
    ldr r1, [r4, #0x44]
    cmp r1, #0x01
    beq _080196B0
    cmp r1, #0x01
    ble _080196E6
    cmp r1, #0x02
    beq _080196D0
    b _080196E6
    .byte 0x00, 0x00
    _080196AC: .4byte 0x00000524
    _080196B0:
    ldr r0, [r4, #0x50]
    cmp r0, #0x27
    bgt _080196C8
    adds r0, #0x01
    str r0, [r4, #0x50]
    cmp r0, #0x28
    bne _080196E6
    movs r0, #0xC7
    lsls r0, r0, #0x01
    bl m4aSongNumStart
    b _080196E6
    _080196C8:
    str r1, [r4, #0x4C]
    movs r0, #0x0A
    str r0, [r4, #0x58]
    b _080196E6
    _080196D0:
    ldr r0, [r4, #0x50]
    adds r0, #0x01
    str r0, [r4, #0x50]
    cmp r0, #0x28
    ble _080196E6
    movs r0, #0x00
    str r0, [r4, #0x50]
    ldr r1, [r4, #0x4C]
    movs r0, #0x01
    subs r0, r0, r1
    str r0, [r4, #0x4C]
    _080196E6:
    ldr r0, [r4, #0x44]
    cmp r0, #0x01
    beq _08019770
    cmp r0, #0x01
    bgt _080196F6
    cmp r0, #0x00
    beq _080196FA
    b _08019778
    _080196F6:
    cmp r0, #0x02
    bne _08019778
    _080196FA:
    ldr r0, [r5, #0x08]
    ldr r2, _08019764 @ =0x080E645C
    lsls r0, r0, #0x1A
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _08019708
    adds r0, #0x3F
    _08019708:
    asrs r1, r0, #0x06
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r1
    ldr r1, _08019768 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    subs r0, r0, r1
    lsls r1, r0, #0x01
    adds r1, r1, r0
    asrs r1, r1, #0x0F
    movs r0, #0x7F
    subs r0, r0, r1
    adds r2, r4, #0x0
    adds r2, #0x56
    strh r0, [r2, #0x00]
    ldr r2, [r4, #0x58]
    cmp r2, #0x00
    ble _08019744
    ldr r0, [r5, #0x08]
    movs r1, #0x1F
    ands r0, r1
    cmp r0, #0x00
    bne _08019744
    subs r0, r2, #0x1
    str r0, [r4, #0x58]
    _08019744:
    ldr r1, [r4, #0x58]
    adds r1, #0x7C
    lsls r1, r1, #0x10
    movs r0, #0xDA
    orrs r0, r1
    str r0, [sp, #0x008]
    ldr r0, _0801976C @ =0x080CA9BC
    movs r1, #0x00
    str r1, [sp, #0x000]
    str r1, [sp, #0x004]
    add r1, sp, #0x008
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    b _08019778
    _08019764: .4byte gSinTable
    _08019768: .4byte 0x000003FF
    _0801976C: .4byte 0x080CA9BC
    _08019770:
    adds r1, r4, #0x0
    adds r1, #0x56
    movs r0, #0x7F
    strh r0, [r1, #0x00]
    _08019778:
    ldr r2, _080197A0 @ =0x080DA5A0
    ldr r0, [r4, #0x4C]
    lsls r0, r0, #0x02
    ldr r1, [r4, #0x44]
    lsls r1, r1, #0x03
    adds r0, r0, r1
    adds r0, r0, r2
    ldr r0, [r0, #0x00]
    adds r1, r4, #0x0
    adds r1, #0x54
    movs r2, #0x00
    str r2, [sp, #0x000]
    str r2, [sp, #0x004]
    movs r3, #0x00
    bl oam_renderCellData
    add sp, #0x00C
    pop {r4, r5}
    pop {r0}
    bx r0
    _080197A0: .4byte 0x080DA5A0
    thumb_func_start sub_80197A4
    sub_80197A4:
    push {r4, lr}
    add sp, #-0x00C
    ldrb r1, [r0, #0x02]
    cmp r1, #0x03
    beq _08019840
    cmp r1, #0x03
    blt _08019840
    cmp r1, #0x0B
    bgt _08019840
    cmp r1, #0x09
    blt _08019840
    ldr r0, [r0, #0x08]
    asrs r4, r0, #0x04
    movs r0, #0x03
    ands r4, r0
    cmp r4, #0x01
    beq _080197F0
    cmp r4, #0x01
    bgt _080197D0
    cmp r4, #0x00
    beq _080197DA
    b _08019862
    _080197D0:
    cmp r4, #0x02
    beq _08019804
    cmp r4, #0x03
    beq _08019818
    b _08019862
    _080197DA:
    movs r0, #0x00
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r3, r0, #0x0
    ldr r2, _080197EC @ =0x080DA5B8
    str r4, [sp, #0x000]
    b _0801982A
    _080197EC: .4byte 0x080DA5B8
    _080197F0:
    movs r0, #0x00
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r3, r0, #0x0
    ldr r2, _08019800 @ =0x080DA5D0
    b _08019826
    _08019800: .4byte 0x080DA5D0
    _08019804:
    movs r0, #0x00
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r3, r0, #0x0
    ldr r2, _08019814 @ =0x080DA5E8
    b _08019826
    _08019814: .4byte 0x080DA5E8
    _08019818:
    movs r0, #0x00
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r3, r0, #0x0
    ldr r2, _0801983C @ =0x080DA600
    _08019826:
    movs r0, #0x00
    str r0, [sp, #0x000]
    _0801982A:
    movs r0, #0x0F
    str r0, [sp, #0x004]
    movs r0, #0x0A
    str r0, [sp, #0x008]
    movs r0, #0x02
    movs r1, #0x03
    bl sub_801445C
    b _08019862
    _0801983C: .4byte 0x080DA600
    _08019840:
    movs r0, #0x00
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r3, r0, #0x0
    ldr r2, _08019870 @ =0x080DA618
    movs r0, #0x00
    str r0, [sp, #0x000]
    movs r0, #0x0F
    str r0, [sp, #0x004]
    movs r0, #0x0A
    str r0, [sp, #0x008]
    movs r0, #0x02
    movs r1, #0x03
    bl sub_801445C
    _08019862:
    movs r0, #0x01
    bl map_setBufferDirty
    add sp, #0x00C
    pop {r4}
    pop {r0}
    bx r0
    _08019870: .4byte 0x080DA618
    thumb_func_start sub_8019874
    sub_8019874:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x014
    adds r6, r0, #0x0
    ldr r0, _080198B4 @ =0x00000524
    adds r0, r0, r6
    mov r8, r0
    ldr r3, _080198B8 @ =0x080DA3B0
    ldrb r0, [r0, #0x1C]
    subs r0, #0x01
    lsls r0, r0, #0x03
    ldrb r2, [r6, #0x02]
    lsls r1, r2, #0x04
    adds r0, r0, r1
    adds r0, r0, r3
    mov r3, r8
    ldrh r1, [r3, #0x1E]
    ldr r0, [r0, #0x00]
    adds r0, r0, r1
    mov r9, r0
    str r2, [sp, #0x010]
    cmp r2, #0x17
    bhi _08019960
    lsls r0, r2, #0x02
    ldr r1, _080198BC @ =0x080198C0
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
    _080198B4: .4byte 0x00000524
    _080198B8: .4byte 0x080DA3B0
    _080198BC: .4byte 0x080198C0
    .byte 0x60, 0x99, 0x01, 0x08, 0x20, 0x99, 0x01, 0x08, 0x20, 0x99, 0x01, 0x08, 0x20, 0x99, 0x01, 0x08
    .byte 0x20, 0x99, 0x01, 0x08, 0x20, 0x99, 0x01, 0x08, 0x20, 0x99, 0x01, 0x08, 0x20, 0x99, 0x01, 0x08
    .byte 0x20, 0x99, 0x01, 0x08, 0x20, 0x99, 0x01, 0x08, 0x20, 0x99, 0x01, 0x08, 0x20, 0x99, 0x01, 0x08
    .byte 0x20, 0x99, 0x01, 0x08, 0x20, 0x99, 0x01, 0x08, 0x20, 0x99, 0x01, 0x08, 0x20, 0x99, 0x01, 0x08
    .byte 0x20, 0x99, 0x01, 0x08, 0x20, 0x99, 0x01, 0x08, 0x20, 0x99, 0x01, 0x08, 0x20, 0x99, 0x01, 0x08
    .byte 0x60, 0x99, 0x01, 0x08, 0x60, 0x99, 0x01, 0x08, 0x60, 0x99, 0x01, 0x08, 0x60, 0x99, 0x01, 0x08
    .byte 0xF8, 0xF7, 0x5A, 0xFD, 0x01, 0x1C, 0x01, 0x29, 0x02, 0xD0, 0x02, 0x29, 0x08, 0xD0, 0x17, 0xE0
    .byte 0x02, 0x4C, 0x30, 0x19, 0x01, 0x70, 0xF8, 0xF7, 0x27, 0xFD, 0x11, 0xE0, 0xCC, 0x06, 0x00, 0x00
    .byte 0x0E, 0x24, 0x06, 0x49, 0x08, 0x68, 0x02, 0x78, 0x00, 0x23, 0x42, 0x70, 0x08, 0x68, 0x04, 0x70
    .byte 0x08, 0x68, 0x83, 0x70, 0x08, 0x68, 0x43, 0x60, 0x00, 0xF0, 0x6F, 0xFD, 0x90, 0x01, 0x00, 0x03
    _08019960:
    ldrb r0, [r6, #0x02]
    ldr r1, _08019978 @ =0x00000524
    adds r7, r6, r1
    cmp r0, #0x17
    bls _0801996E
    bl def_8019976
    _0801996E:
    lsls r0, r0, #0x02
    ldr r1, _0801997C @ =0x08019980
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    _08019978: .4byte 0x00000524
    _0801997C: .4byte 0x08019980
    .byte 0xE0, 0x99, 0x01, 0x08, 0xF4, 0x9A, 0x01, 0x08, 0x04, 0x9B, 0x01, 0x08, 0x84, 0x9B, 0x01, 0x08
    .byte 0xB0, 0x9B, 0x01, 0x08, 0x04, 0x9C, 0x01, 0x08, 0x40, 0x9C, 0x01, 0x08, 0xB8, 0x9C, 0x01, 0x08
    .byte 0x04, 0x9D, 0x01, 0x08, 0x94, 0x9D, 0x01, 0x08, 0xD0, 0x9D, 0x01, 0x08, 0x28, 0x9E, 0x01, 0x08
    .byte 0x88, 0x9E, 0x01, 0x08, 0x54, 0x9F, 0x01, 0x08, 0xC0, 0x9F, 0x01, 0x08, 0x58, 0xA0, 0x01, 0x08
    .byte 0x8C, 0xA0, 0x01, 0x08, 0xF4, 0xA0, 0x01, 0x08, 0x98, 0xA1, 0x01, 0x08, 0xC8, 0xA1, 0x01, 0x08
    .byte 0xFC, 0xA1, 0x01, 0x08, 0x1A, 0xA2, 0x01, 0x08, 0x64, 0xA2, 0x01, 0x08, 0x90, 0xA2, 0x01, 0x08
    .byte 0xD4, 0x22, 0xD2, 0x00, 0xB0, 0x18, 0x00, 0x78, 0x00, 0x28, 0x0A, 0xD0, 0x41, 0x46, 0x04, 0x31
    .byte 0x30, 0x1C, 0x1C, 0x30, 0x1C, 0xC8, 0x1C, 0xC1, 0x41, 0x46, 0x10, 0x31, 0x30, 0x1C, 0x28, 0x30
    .byte 0x09, 0xE0, 0x41, 0x46, 0x04, 0x31, 0x30, 0x1C, 0x28, 0x30, 0x1C, 0xC8, 0x1C, 0xC1, 0x41, 0x46
    .byte 0x10, 0x31, 0x30, 0x1C, 0x1C, 0x30, 0x1C, 0xC8, 0x1C, 0xC1, 0x43, 0x46, 0x18, 0x79, 0x01, 0x1C
    .byte 0x00, 0x29, 0x05, 0xD0, 0x18, 0x7C, 0x00, 0x28, 0x02, 0xD0, 0x02, 0x20, 0x18, 0x77, 0x02, 0xE0
    .byte 0x01, 0x20, 0x44, 0x46, 0x20, 0x77, 0x00, 0x27, 0x40, 0x46, 0x07, 0x70, 0x08, 0x06, 0x00, 0x28
    .byte 0x02, 0xD1, 0x01, 0x20, 0x41, 0x46, 0x08, 0x70, 0x30, 0x1C, 0xFE, 0xF7, 0xB5, 0xFC, 0x23, 0x4A
    .byte 0xB4, 0x18, 0x40, 0x20, 0x60, 0x62, 0xA7, 0x62, 0x27, 0x62, 0x01, 0x22, 0x52, 0x42, 0xE2, 0x62
    .byte 0xA7, 0x63, 0x1F, 0x4B, 0xF1, 0x18, 0x00, 0x25, 0x78, 0x20, 0x08, 0x80, 0x1D, 0x48, 0x31, 0x18
    .byte 0x50, 0x20, 0x08, 0x80, 0xE7, 0x63, 0x67, 0x64, 0xA2, 0x64, 0xE7, 0x64, 0x27, 0x65, 0xAF, 0x22
    .byte 0xD2, 0x00, 0xB1, 0x18, 0xCC, 0x20, 0x08, 0x80, 0x16, 0x33, 0xF1, 0x18, 0x7F, 0x20, 0x08, 0x80
    .byte 0xA7, 0x65, 0x27, 0x66, 0x67, 0x66, 0x30, 0x1C, 0xFF, 0xF7, 0x5E, 0xF9, 0xE7, 0x65, 0x3F, 0x20
    .byte 0x03, 0xF0, 0xCE, 0xFB, 0x10, 0x4A, 0x11, 0x68, 0x88, 0x78, 0x01, 0x30, 0x88, 0x70, 0x10, 0x68
    .byte 0x47, 0x60, 0x0E, 0x49, 0x70, 0x18, 0x05, 0x70, 0x42, 0x46, 0xD7, 0x83, 0x30, 0x1C, 0x24, 0x30
    .byte 0x00, 0x78, 0x00, 0x21, 0x44, 0xF0, 0x34, 0xF8, 0x09, 0x48, 0x80, 0x23, 0x5B, 0x01, 0xC1, 0x18
    .byte 0x1A, 0x1C, 0xF8, 0xF7, 0x57, 0xFD, 0x27, 0x1C, 0x00, 0xF0, 0x07, 0xFC, 0x24, 0x05, 0x00, 0x00
    .byte 0x64, 0x05, 0x00, 0x00, 0x66, 0x05, 0x00, 0x00, 0x90, 0x01, 0x00, 0x03, 0xCC, 0x06, 0x00, 0x00
    .byte 0x00, 0x04, 0x02, 0x02, 0x03, 0xF0, 0xCA, 0xFB, 0x03, 0x1C, 0x01, 0x4C, 0x37, 0x19, 0xB9, 0xE3
    .byte 0x24, 0x05, 0x00, 0x00, 0x70, 0x68, 0x01, 0x30, 0x70, 0x60, 0x1D, 0x49, 0x77, 0x18, 0x48, 0x45
    .byte 0x01, 0xDC, 0x00, 0xF0, 0xEA, 0xFB, 0x39, 0x78, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x04, 0x30
    .byte 0x38, 0x18, 0x84, 0x78, 0x45, 0x68, 0x00, 0x20, 0x0B, 0x21, 0x0F, 0x22, 0x14, 0xF0, 0xC0, 0xFD
    .byte 0x01, 0x1C, 0xB0, 0x20, 0x80, 0x00, 0x00, 0x90, 0x0F, 0x20, 0x01, 0x90, 0x20, 0x1C, 0xD8, 0x22
    .byte 0x92, 0x00, 0x09, 0x23, 0xF4, 0xF7, 0xF0, 0xFD, 0x00, 0x2D, 0x0D, 0xD0, 0x2C, 0x04, 0x24, 0x0C
    .byte 0x00, 0x20, 0x0D, 0x21, 0x0F, 0x22, 0x14, 0xF0, 0xAB, 0xFD, 0x01, 0x1C, 0x20, 0x1C, 0xC8, 0x22
    .byte 0x92, 0x00, 0x0F, 0x23, 0xF2, 0xF7, 0xB6, 0xFD, 0x01, 0x20, 0x14, 0xF0, 0xC7, 0xFD, 0x42, 0x46
    .byte 0x11, 0x78, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x44, 0x80, 0x79, 0x90, 0x63, 0x77, 0xE2
    .byte 0x24, 0x05, 0x00, 0x00, 0x70, 0x68, 0x01, 0x30, 0x70, 0x60, 0x07, 0x4B, 0xF7, 0x18, 0x48, 0x45
    .byte 0x00, 0xDC, 0xAA, 0xE3, 0x44, 0x46, 0x20, 0x7F, 0x02, 0x28, 0x00, 0xD0, 0x68, 0xE2, 0x03, 0x48
    .byte 0x46, 0xF0, 0xBE, 0xF9, 0x64, 0xE2, 0x00, 0x00, 0x24, 0x05, 0x00, 0x00, 0x8B, 0x01, 0x00, 0x00
    .byte 0x70, 0x68, 0x41, 0x1C, 0x71, 0x60, 0x49, 0x45, 0x18, 0xDC, 0x42, 0x46, 0x10, 0x7F, 0x01, 0x28
    .byte 0x06, 0xD1, 0x4B, 0x46, 0x58, 0x1A, 0x20, 0x28, 0x02, 0xD1, 0x07, 0x48, 0x46, 0xF0, 0xA8, 0xF9
    .byte 0x71, 0x68, 0xC8, 0x00, 0x40, 0x1A, 0x00, 0x02, 0x40, 0x42, 0x49, 0x46, 0x48, 0xF0, 0x68, 0xF9
    .byte 0x80, 0x24, 0x24, 0x01, 0x9C, 0xE1, 0x00, 0x00, 0x8B, 0x01, 0x00, 0x00, 0x04, 0x4B, 0x19, 0x68
    .byte 0x88, 0x78, 0x01, 0x30, 0x00, 0x22, 0x88, 0x70, 0x18, 0x68, 0x42, 0x60, 0x59, 0xE3, 0x00, 0x00
    .byte 0x90, 0x01, 0x00, 0x03, 0x70, 0x68, 0x01, 0x30, 0x70, 0x60, 0x0B, 0x4C, 0x37, 0x19, 0x48, 0x45
    .byte 0x00, 0xDC, 0x6A, 0xE3, 0x00, 0x23, 0x40, 0x46, 0x03, 0x62, 0x40, 0x6A, 0x41, 0x46, 0x88, 0x62
    .byte 0x06, 0x4A, 0x11, 0x68, 0x88, 0x78, 0x01, 0x30, 0x88, 0x70, 0x10, 0x68, 0x43, 0x60, 0x01, 0x20
    .byte 0x42, 0x46, 0x50, 0x64, 0x59, 0xE3, 0x00, 0x00, 0x24, 0x05, 0x00, 0x00, 0x90, 0x01, 0x00, 0x03
    .byte 0x70, 0x68, 0x01, 0x30, 0x70, 0x60, 0x18, 0x4B, 0xF7, 0x18, 0x48, 0x45, 0x00, 0xDC, 0x4C, 0xE3
    .byte 0x00, 0x20, 0x0A, 0x21, 0x0F, 0x22, 0x14, 0xF0, 0x2B, 0xFD, 0x04, 0x1C, 0x00, 0x21, 0x00, 0x23
    .byte 0x88, 0x01, 0x4A, 0x1C, 0x09, 0x21, 0x20, 0x18, 0x12, 0x30, 0x03, 0x80, 0x02, 0x38, 0x01, 0x39
    .byte 0x00, 0x29, 0xFA, 0xDA, 0x11, 0x1C, 0x01, 0x29, 0xF2, 0xDD, 0x01, 0x20, 0x14, 0xF0, 0x3E, 0xFD
    .byte 0x0A, 0x4B, 0x19, 0x68, 0x88, 0x78, 0x01, 0x30, 0x00, 0x22, 0x88, 0x70, 0x18, 0x68, 0x42, 0x60
    .byte 0x44, 0x46, 0x20, 0x7F, 0x06, 0x4A, 0x11, 0x1C, 0x01, 0x28, 0x01, 0xD1, 0x05, 0x4B, 0x19, 0x1C
    .byte 0x08, 0x1C, 0x46, 0xF0, 0x3D, 0xF9, 0x20, 0xE3, 0x24, 0x05, 0x00, 0x00, 0x90, 0x01, 0x00, 0x03
    .byte 0x89, 0x01, 0x00, 0x00, 0x8F, 0x01, 0x00, 0x00, 0x70, 0x68, 0x01, 0x30, 0x70, 0x60, 0x48, 0x45
    .byte 0x1C, 0xDC, 0x80, 0x03, 0x4C, 0x46, 0x61, 0x00, 0x48, 0xF0, 0xF2, 0xF8, 0x0A, 0x49, 0x00, 0x04
    .byte 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18
    .byte 0x02, 0x68, 0x40, 0x46, 0x81, 0x6A, 0x8F, 0x20, 0x80, 0x00, 0x40, 0x1A, 0x50, 0x43, 0xC0, 0x13
    .byte 0x09, 0x18, 0x42, 0x46, 0x51, 0x62, 0xDC, 0xE2, 0x5C, 0x64, 0x0E, 0x08, 0x0A, 0x20, 0x44, 0x46
    .byte 0xA0, 0x65, 0x4E, 0xE1, 0x70, 0x68, 0x01, 0x30, 0x70, 0x60, 0x48, 0x45, 0x30, 0xDC, 0x80, 0x01
    .byte 0x40, 0x42, 0x49, 0x46, 0x48, 0xF0, 0xCC, 0xF8, 0x50, 0x30, 0x41, 0x46, 0x42, 0x31, 0x08, 0x80
    .byte 0x70, 0x68, 0x48, 0x44, 0x80, 0x03, 0x4A, 0x46, 0x51, 0x00, 0x48, 0xF0, 0xC1, 0xF8, 0x0F, 0x49
    .byte 0x00, 0x04, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00
    .byte 0x40, 0x18, 0x02, 0x68, 0x43, 0x46, 0x99, 0x6A, 0x8F, 0x20, 0x80, 0x00, 0x40, 0x1A, 0x50, 0x43
    .byte 0xC0, 0x13, 0x09, 0x18, 0x59, 0x62, 0x71, 0x68, 0x48, 0x00, 0x40, 0x18, 0x00, 0x02, 0x49, 0x46
    .byte 0x48, 0xF0, 0xA6, 0xF8, 0x80, 0x24, 0x64, 0x00, 0xDA, 0xE0, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08
    .byte 0x00, 0x23, 0x44, 0x46, 0x63, 0x64, 0x05, 0x4A, 0x11, 0x68, 0x88, 0x78, 0x01, 0x30, 0x88, 0x70
    .byte 0x10, 0x68, 0x43, 0x60, 0x02, 0x48, 0x46, 0xF0, 0xCB, 0xF8, 0x12, 0xE1, 0x90, 0x01, 0x00, 0x03
    .byte 0x8D, 0x01, 0x00, 0x00, 0x70, 0x68, 0x41, 0x1C, 0x71, 0x60, 0x49, 0x45, 0x0D, 0xDC, 0x08, 0x01
    .byte 0x40, 0x1A, 0xC0, 0x00, 0x40, 0x42, 0x49, 0x46, 0x48, 0xF0, 0x82, 0xF8, 0x48, 0x30, 0xDD, 0x22
    .byte 0xD2, 0x00, 0xB1, 0x18, 0x0A, 0x88, 0x08, 0x80, 0x7B, 0xE2, 0x04, 0x4B, 0x19, 0x68, 0x88, 0x78
    .byte 0x01, 0x30, 0x00, 0x22, 0x88, 0x70, 0x18, 0x68, 0x42, 0x60, 0x8C, 0xE2, 0x90, 0x01, 0x00, 0x03
    .byte 0x70, 0x68, 0x41, 0x1C, 0x71, 0x60, 0x49, 0x45, 0x1A, 0xDC, 0x40, 0x46, 0x02, 0x78, 0x88, 0x24
    .byte 0x64, 0x00, 0x00, 0x2A, 0x01, 0xD1, 0x10, 0x24, 0x64, 0x42, 0x10, 0x20, 0x40, 0x42, 0x00, 0x2A
    .byte 0x01, 0xD1, 0x88, 0x20, 0x40, 0x00, 0x00, 0x1B, 0x48, 0x43, 0x49, 0x46, 0x48, 0xF0, 0x58, 0xF8
    .byte 0x20, 0x18, 0x02, 0x4A, 0xB1, 0x18, 0x0A, 0x88, 0x08, 0x80, 0x52, 0xE2, 0xE6, 0x06, 0x00, 0x00
    .byte 0x04, 0x4B, 0x19, 0x68, 0x88, 0x78, 0x01, 0x30, 0x00, 0x22, 0x88, 0x70, 0x18, 0x68, 0x42, 0x60
    .byte 0x61, 0xE2, 0x00, 0x00, 0x90, 0x01, 0x00, 0x03, 0x70, 0x68, 0x41, 0x1C, 0x71, 0x60, 0x49, 0x45
    .byte 0x0C, 0xDC, 0x08, 0x01, 0x40, 0x1A, 0xC0, 0x00, 0x49, 0x46, 0x48, 0xF0, 0x39, 0xF8, 0x30, 0x38
    .byte 0xDD, 0x22, 0xD2, 0x00, 0xB1, 0x18, 0x0A, 0x88, 0x08, 0x80, 0x32, 0xE2, 0x44, 0x46, 0x20, 0x7F
    .byte 0xC5, 0x22, 0x52, 0x00, 0x11, 0x1C, 0x01, 0x28, 0x02, 0xD1, 0xC8, 0x23, 0x5B, 0x00, 0x19, 0x1C
    .byte 0x08, 0x1C, 0x46, 0xF0, 0x5D, 0xF8, 0x06, 0x48, 0x46, 0xF0, 0xC0, 0xF8, 0x05, 0x4B, 0x19, 0x68
    .byte 0x88, 0x78, 0x01, 0x30, 0x00, 0x22, 0x88, 0x70, 0x18, 0x68, 0x42, 0x60, 0x33, 0xE2, 0x00, 0x00
    .byte 0x8D, 0x01, 0x00, 0x00, 0x90, 0x01, 0x00, 0x03, 0x70, 0x68, 0x01, 0x30, 0x70, 0x60, 0x48, 0x45
    .byte 0x54, 0xDC, 0x48, 0x46, 0xC5, 0x0F, 0x4D, 0x44, 0x6D, 0x10, 0x24, 0x4C, 0x24, 0x48, 0x21, 0x1C
    .byte 0x47, 0xF0, 0x60, 0xFA, 0x00, 0x20, 0x14, 0xF0, 0xC3, 0xFB, 0x02, 0x1C, 0x20, 0x32, 0x20, 0x1C
    .byte 0x20, 0x30, 0xB0, 0x21, 0x49, 0x00, 0x64, 0x18, 0x73, 0x68, 0x00, 0x95, 0x21, 0x1C, 0xEB, 0xF7
    .byte 0xA1, 0xFF, 0x70, 0x68, 0x80, 0x01, 0x40, 0x42, 0x49, 0x46, 0x47, 0xF0, 0xF1, 0xFF, 0x10, 0x21
    .byte 0x09, 0x1A, 0x40, 0x46, 0x42, 0x30, 0x01, 0x80, 0x70, 0x68, 0x80, 0x03, 0x4A, 0x46, 0x51, 0x00
    .byte 0x47, 0xF0, 0xE6, 0xFF, 0x13, 0x49, 0x00, 0x04, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30
    .byte 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x02, 0x68, 0x43, 0x46, 0x99, 0x6A, 0x8F, 0x20
    .byte 0x80, 0x00, 0x40, 0x1A, 0x50, 0x43, 0xC0, 0x13, 0x09, 0x18, 0x59, 0x62, 0x71, 0x68, 0x48, 0x00
    .byte 0x40, 0x18, 0x00, 0x02, 0x40, 0x42, 0x49, 0x46, 0x47, 0xF0, 0xCA, 0xFF, 0x80, 0x24, 0xE4, 0x00
    .byte 0x00, 0x19, 0x41, 0x46, 0xC8, 0x63, 0x04, 0x4A, 0xB7, 0x18, 0xDE, 0xE1, 0x00, 0x04, 0x01, 0x02
    .byte 0x90, 0xDF, 0x0B, 0x08, 0x5C, 0x64, 0x0E, 0x08, 0x24, 0x05, 0x00, 0x00, 0x04, 0x4B, 0x19, 0x68
    .byte 0x88, 0x78, 0x01, 0x30, 0x00, 0x22, 0x88, 0x70, 0x18, 0x68, 0x42, 0x60, 0xB1, 0xE1, 0x00, 0x00
    .byte 0x90, 0x01, 0x00, 0x03, 0x70, 0x68, 0x01, 0x30, 0x70, 0x60, 0x48, 0x45, 0x1E, 0xDC, 0x48, 0x44
    .byte 0x80, 0x03, 0x4C, 0x46, 0x61, 0x00, 0x47, 0xF0, 0xA3, 0xFF, 0x0B, 0x49, 0x00, 0x04, 0x00, 0x14
    .byte 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x02, 0x68
    .byte 0x40, 0x46, 0x81, 0x6A, 0x8F, 0x20, 0x80, 0x00, 0x40, 0x1A, 0x50, 0x43, 0xC0, 0x13, 0x09, 0x18
    .byte 0x42, 0x46, 0x51, 0x62, 0x8D, 0xE1, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0x02, 0x20, 0x44, 0x46
    .byte 0x20, 0x62, 0x05, 0x4B, 0x19, 0x68, 0x88, 0x78, 0x01, 0x30, 0x00, 0x22, 0x88, 0x70, 0x18, 0x68
    .byte 0x42, 0x60, 0x02, 0x48, 0x37, 0x18, 0x98, 0xE1, 0x90, 0x01, 0x00, 0x03, 0x24, 0x05, 0x00, 0x00
    .byte 0x70, 0x68, 0x01, 0x30, 0x70, 0x60, 0x22, 0x49, 0x77, 0x18, 0x48, 0x45, 0x00, 0xDC, 0x8C, 0xE1
    .byte 0x42, 0x46, 0x50, 0x6A, 0x40, 0x28, 0x00, 0xD0, 0x87, 0xE1, 0x00, 0x23, 0x9A, 0x46, 0x13, 0x62
    .byte 0x39, 0x78, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x04, 0x30, 0x38, 0x18, 0x84, 0x78, 0x45, 0x68
    .byte 0x00, 0x20, 0x0B, 0x21, 0x0F, 0x22, 0x14, 0xF0, 0x5B, 0xFB, 0x01, 0x1C, 0xB0, 0x20, 0x80, 0x00
    .byte 0x00, 0x90, 0x0F, 0x20, 0x01, 0x90, 0x20, 0x1C, 0xD8, 0x22, 0x92, 0x00, 0x09, 0x23, 0xF4, 0xF7
    .byte 0x8B, 0xFB, 0x00, 0x2D, 0x0D, 0xD0, 0x2C, 0x04, 0x24, 0x0C, 0x00, 0x20, 0x0D, 0x21, 0x0F, 0x22
    .byte 0x14, 0xF0, 0x46, 0xFB, 0x01, 0x1C, 0x20, 0x1C, 0xC8, 0x22, 0x92, 0x00, 0x0F, 0x23, 0xF2, 0xF7
    .byte 0x51, 0xFB, 0x01, 0x20, 0x14, 0xF0, 0x62, 0xFB, 0x54, 0x46, 0x40, 0x46, 0x04, 0x62, 0x05, 0x4A
    .byte 0x11, 0x68, 0x88, 0x78, 0x01, 0x30, 0x88, 0x70, 0x10, 0x68, 0x44, 0x60, 0x4D, 0xE1, 0x00, 0x00
    .byte 0x24, 0x05, 0x00, 0x00, 0x90, 0x01, 0x00, 0x03, 0x70, 0x68, 0x01, 0x30, 0x70, 0x60, 0x09, 0x49
    .byte 0x77, 0x18, 0x48, 0x45, 0x00, 0xDC, 0x40, 0xE1, 0xC6, 0x20, 0x40, 0x00, 0x45, 0xF0, 0x58, 0xFF
    .byte 0x05, 0x4B, 0x19, 0x68, 0x88, 0x78, 0x01, 0x30, 0x00, 0x22, 0x88, 0x70, 0x18, 0x68, 0x42, 0x60
    .byte 0x33, 0xE1, 0x00, 0x00, 0x24, 0x05, 0x00, 0x00, 0x90, 0x01, 0x00, 0x03, 0x70, 0x68, 0x41, 0x1C
    .byte 0x71, 0x60, 0x49, 0x45, 0x0C, 0xDC, 0xC8, 0x00, 0x40, 0x1A, 0x00, 0x02, 0x40, 0x42, 0x49, 0x46
    .byte 0x47, 0xF0, 0x06, 0xFF, 0x80, 0x21, 0x49, 0x00, 0x09, 0x1A, 0x42, 0x46, 0xD1, 0x63, 0x00, 0xE1
    .byte 0x0D, 0x4C, 0x31, 0x19, 0x40, 0x20, 0x48, 0x62, 0x00, 0x23, 0x8B, 0x62, 0x0B, 0x62, 0x41, 0x38
    .byte 0xC8, 0x62, 0x8B, 0x63, 0x09, 0x48, 0x32, 0x18, 0x78, 0x20, 0x10, 0x80, 0x42, 0x34, 0x32, 0x19
    .byte 0x50, 0x20, 0x10, 0x80, 0xCB, 0x63, 0x06, 0x4C, 0x22, 0x68, 0x90, 0x78, 0x01, 0x30, 0x90, 0x70
    .byte 0x20, 0x68, 0x43, 0x60, 0x0F, 0x1C, 0x00, 0xE1, 0x24, 0x05, 0x00, 0x00, 0x64, 0x05, 0x00, 0x00
    .byte 0x90, 0x01, 0x00, 0x03, 0x70, 0x68, 0x01, 0x30, 0x70, 0x60, 0x13, 0x49, 0x77, 0x18, 0x48, 0x45
    .byte 0x00, 0xDC, 0xF2, 0xE0, 0x42, 0x46, 0x10, 0x78, 0x00, 0x28, 0x1F, 0xD1, 0x10, 0x7C, 0x00, 0x28
    .byte 0x1C, 0xD0, 0x00, 0x20, 0x0A, 0x21, 0x0F, 0x22, 0x14, 0xF0, 0xCA, 0xFA, 0x04, 0x1C, 0x00, 0x21
    .byte 0x00, 0x23, 0x88, 0x01, 0x4A, 0x1C, 0x09, 0x21, 0x20, 0x18, 0x12, 0x30, 0x03, 0x80, 0x02, 0x38
    .byte 0x01, 0x39, 0x00, 0x29, 0xFA, 0xDA, 0x11, 0x1C, 0x01, 0x29, 0xF2, 0xDD, 0x01, 0x20, 0x14, 0xF0
    .byte 0xDD, 0xFA, 0x12, 0x23, 0x1D, 0xE0, 0x00, 0x00, 0x24, 0x05, 0x00, 0x00, 0x00, 0x20, 0x0A, 0x21
    .byte 0x0F, 0x22, 0x14, 0xF0, 0xAD, 0xFA, 0x04, 0x1C, 0x00, 0x21, 0x0D, 0x4B, 0xF7, 0x18, 0x00, 0x23
    .byte 0x88, 0x01, 0x4A, 0x1C, 0x09, 0x21, 0x20, 0x18, 0x12, 0x30, 0x03, 0x80, 0x02, 0x38, 0x01, 0x39
    .byte 0x00, 0x29, 0xFA, 0xDA, 0x11, 0x1C, 0x01, 0x29, 0xF2, 0xDD, 0x01, 0x20, 0x14, 0xF0, 0xBE, 0xFA
    .byte 0x13, 0x23, 0x04, 0x49, 0x08, 0x68, 0x00, 0x22, 0x83, 0x70, 0x08, 0x68, 0x42, 0x60, 0xAC, 0xE0
    .byte 0x24, 0x05, 0x00, 0x00, 0x90, 0x01, 0x00, 0x03, 0x70, 0x68, 0x01, 0x30, 0x70, 0x60, 0x08, 0x4C
    .byte 0x37, 0x19, 0x48, 0x45, 0x00, 0xDC, 0xA0, 0xE0, 0x41, 0x46, 0x08, 0x78, 0x01, 0x30, 0x00, 0x23
    .byte 0x08, 0x70, 0x02, 0x22, 0x03, 0x49, 0x08, 0x68, 0x82, 0x70, 0x08, 0x68, 0x43, 0x60, 0x94, 0xE0
    .byte 0x24, 0x05, 0x00, 0x00, 0x90, 0x01, 0x00, 0x03, 0x09, 0x4A, 0xB0, 0x18, 0x00, 0x78, 0x09, 0x4B
    .byte 0xF7, 0x18, 0x00, 0x28, 0x00, 0xD1, 0x88, 0xE0, 0x14, 0x23, 0x07, 0x49, 0x08, 0x68, 0x00, 0x22
    .byte 0x83, 0x70, 0x08, 0x68, 0x42, 0x60, 0x14, 0x20, 0x45, 0xF0, 0x9A, 0xFE, 0x7D, 0xE0, 0x00, 0x00
    .byte 0xCC, 0x06, 0x00, 0x00, 0x24, 0x05, 0x00, 0x00, 0x90, 0x01, 0x00, 0x03, 0x70, 0x68, 0x01, 0x30
    .byte 0x70, 0x60, 0x78, 0x28, 0x09, 0xDD, 0x25, 0x20, 0x45, 0xF0, 0x8A, 0xFE, 0x15, 0x23, 0x13, 0x49
    .byte 0x08, 0x68, 0x00, 0x22, 0x83, 0x70, 0x08, 0x68, 0x42, 0x60, 0x30, 0x1C, 0xFE, 0xF7, 0xCE, 0xFE
    .byte 0x13, 0xF0, 0x2C, 0xF9, 0x09, 0x21, 0x01, 0x40, 0x0D, 0x4C, 0x37, 0x19, 0x00, 0x29, 0x5C, 0xD0
    .byte 0x15, 0x21, 0x0A, 0x4C, 0x20, 0x68, 0x00, 0x25, 0x81, 0x70, 0x20, 0x68, 0x45, 0x60, 0x03, 0x20
    .byte 0x41, 0x46, 0x08, 0x66, 0x03, 0xF0, 0x0A, 0xF8, 0x8F, 0x20, 0x45, 0xF0, 0x69, 0xFE, 0x16, 0x21
    .byte 0x20, 0x68, 0x81, 0x70, 0x20, 0x68, 0x45, 0x60, 0x47, 0xE0, 0x00, 0x00, 0x90, 0x01, 0x00, 0x03
    .byte 0x24, 0x05, 0x00, 0x00, 0x30, 0x1C, 0xFE, 0xF7, 0xA9, 0xFE, 0x03, 0xF0, 0x0F, 0xF8, 0x03, 0x1C
    .byte 0x05, 0x4A, 0xB7, 0x18, 0x00, 0x2B, 0x38, 0xD1, 0x04, 0x4A, 0x11, 0x68, 0x88, 0x78, 0x01, 0x30
    .byte 0x88, 0x70, 0x10, 0x68, 0x43, 0x60, 0x30, 0xE0, 0x24, 0x05, 0x00, 0x00, 0x90, 0x01, 0x00, 0x03
    .byte 0x30, 0x1C, 0x28, 0x30, 0x04, 0x78, 0x00, 0x2C, 0x12, 0xD0, 0x0B, 0x24, 0x06, 0x49, 0x08, 0x68
    .byte 0x02, 0x78, 0x00, 0x23, 0x42, 0x70, 0x08, 0x68, 0x04, 0x70, 0x08, 0x68, 0x83, 0x70, 0x08, 0x68
    .byte 0x43, 0x60, 0x02, 0x4B, 0xF7, 0x18, 0x18, 0xE0, 0x90, 0x01, 0x00, 0x03, 0x24, 0x05, 0x00, 0x00
    .byte 0x0C, 0x23, 0x3F, 0x4A, 0x11, 0x68, 0x08, 0x78, 0x48, 0x70, 0x10, 0x68, 0x03, 0x70, 0x10, 0x68
    .byte 0x84, 0x70, 0x10, 0x68, 0x44, 0x60, 0x00, 0x20, 0x43, 0xF0, 0x6E, 0xFB, 0x44, 0x81, 0x01, 0x20
    .byte 0x43, 0xF0, 0x6A, 0xFB, 0x44, 0x81, 0x37, 0x4C, 0x37, 0x19
    non_word_aligned_thumb_func_start def_8019976
    def_8019976: @ 0801A2EA
    ldrb r0, [r7, #0x00]
    ldr r2, _0801A3C8 @ =0x080CA91C
    cmp r0, #0x00
    bne _0801A2F4
    ldr r2, _0801A3CC @ =0x080CA95C
    _0801A2F4:
    ldr r1, _0801A3D0 @ =0x080DA59C
    movs r4, #0x00
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    adds r0, r2, #0x0
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    ldrb r0, [r6, #0x02]
    cmp r0, #0x16
    bgt _0801A33A
    cmp r0, #0x15
    blt _0801A33A
    ldrb r0, [r6, #0x12]
    adds r0, #0x01
    strb r0, [r6, #0x12]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x1E
    bls _0801A320
    strb r4, [r6, #0x12]
    _0801A320:
    ldrb r0, [r6, #0x12]
    cmp r0, #0x13
    bhi _0801A33A
    ldr r0, _0801A3D4 @ =0x009000D8
    str r0, [sp, #0x008]
    ldr r0, _0801A3D8 @ =0x080CAC5C
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    add r1, sp, #0x008
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    _0801A33A:
    movs r3, #0x00
    ldr r0, _0801A3DC @ =0x007A0078
    str r0, [sp, #0x00C]
    ldrb r0, [r6, #0x02]
    cmp r0, #0x03
    blt _0801A374
    cmp r0, #0x06
    ble _0801A352
    cmp r0, #0x11
    bgt _0801A374
    cmp r0, #0x0F
    blt _0801A374
    _0801A352:
    movs r1, #0xD4
    lsls r1, r1, #0x03
    adds r0, r6, r1
    ldrb r0, [r0, #0x00]
    ldr r2, _0801A3E0 @ =0x080CA908
    ldrb r7, [r7, #0x00]
    cmp r0, r7
    beq _0801A364
    ldr r2, _0801A3E4 @ =0x080CA8F4
    _0801A364:
    add r1, sp, #0x00C
    str r3, [sp, #0x000]
    str r3, [sp, #0x004]
    adds r0, r2, #0x0
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    _0801A374:
    adds r0, r6, #0x0
    bl sub_80192A8
    adds r0, r6, #0x0
    bl sub_8019680
    adds r0, r6, #0x0
    mov r1, r9
    bl sub_8019098
    adds r0, r6, #0x0
    bl sub_80193DC
    adds r0, r6, #0x0
    bl sub_8019464
    adds r0, r6, #0x0
    bl sub_801951C
    adds r0, r6, #0x0
    bl sub_80197A4
    ldr r2, [sp, #0x010]
    ldrb r3, [r6, #0x02]
    cmp r2, r3
    beq sub_801A43A
    mov r4, r8
    ldrb r0, [r4, #0x1C]
    cmp r0, #0x01
    bne _0801A3EC
    bl sub_8012578
    ldr r2, _0801A3E8 @ =0x080DA3B0
    ldrb r1, [r6, #0x02]
    lsls r1, r1, #0x04
    adds r2, #0x04
    adds r1, r1, r2
    b _0801A41A
    .byte 0x90, 0x01, 0x00, 0x03, 0x24, 0x05, 0x00, 0x00
    _0801A3C8: .4byte 0x080CA91C
    _0801A3CC: .4byte 0x080CA95C
    _0801A3D0: .4byte 0x080DA59C
    _0801A3D4: .4byte 0x009000D8
    _0801A3D8: .4byte 0x080CAC5C
    _0801A3DC: .4byte 0x007A0078
    _0801A3E0: .4byte 0x080CA908
    _0801A3E4: .4byte 0x080CA8F4
    _0801A3E8: .4byte 0x080DA3B0
    _0801A3EC:
    mov r1, r8
    ldrb r0, [r1, #0x00]
    cmp r0, #0x00
    bne _0801A408
    bl sub_8012578
    ldr r2, _0801A404 @ =0x080DA3B0
    ldrb r1, [r6, #0x02]
    lsls r1, r1, #0x04
    adds r2, #0x0C
    adds r1, r1, r2
    b _0801A41A
    _0801A404: .4byte 0x080DA3B0
    _0801A408:
    bl sub_8012578
    ldr r2, _0801A42C @ =0x080DA3B0
    ldrb r1, [r6, #0x02]
    lsls r1, r1, #0x04
    adds r2, #0x0C
    adds r1, r1, r2
    ldr r2, _0801A430 @ =0xFFFFF800
    adds r0, r0, r2
    _0801A41A:
    ldr r1, [r1, #0x00]
    subs r0, r1, r0
    cmp r0, #0x00
    ble _0801A434
    movs r1, #0x06
    bl __divsi3
    b _0801A436
    .byte 0x00, 0x00
    _0801A42C: .4byte 0x080DA3B0
    _0801A430: .4byte 0xFFFFF800
    _0801A434:
    movs r0, #0x00
    _0801A436:
    mov r3, r8
    strh r0, [r3, #0x1E]
    non_word_aligned_thumb_func_start sub_801A43A
    sub_801A43A:
    add sp, #0x014
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_801A44C
    sub_801A44C:
    push {r4, r5, lr}
    movs r1, #0xD4
    lsls r1, r1, #0x03
    adds r5, r0, r1
    ldrb r4, [r0, #0x02]
    cmp r4, #0x01
    beq _0801A490
    cmp r4, #0x01
    bgt _0801A464
    cmp r4, #0x00
    beq _0801A46A
    b _0801A4CC
    _0801A464:
    cmp r4, #0x02
    beq _0801A4AC
    b _0801A4CC
    _0801A46A:
    ldr r1, _0801A488 @ =0x080DAE28
    movs r0, #0x03
    bl sub_80142CC
    ldrb r1, [r5, #0x01]
    movs r0, #0x20
    orrs r0, r1
    strb r0, [r5, #0x01]
    ldr r2, _0801A48C @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x02]
    adds r0, #0x01
    strb r0, [r1, #0x02]
    b _0801A4C8
    .byte 0x00, 0x00
    _0801A488: .4byte 0x080DAE28
    _0801A48C: .4byte 0x03000190
    _0801A490:
    bl sub_801D25C
    ldr r3, _0801A4A8 @ =0x03000190
    ldr r1, [r3, #0x00]
    ldrb r0, [r1, #0x02]
    adds r0, #0x01
    movs r2, #0x00
    strb r0, [r1, #0x02]
    ldr r0, [r3, #0x00]
    str r2, [r0, #0x04]
    b _0801A4CC
    .byte 0x00, 0x00
    _0801A4A8: .4byte 0x03000190
    _0801A4AC:
    bl sub_801D28C
    adds r4, r0, #0x0
    cmp r4, #0x00
    bne _0801A4CC
    movs r3, #0x0A
    ldr r2, _0801A4D4 @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x00]
    strb r0, [r1, #0x01]
    ldr r0, [r2, #0x00]
    strb r3, [r0, #0x00]
    ldr r0, [r2, #0x00]
    strb r4, [r0, #0x02]
    _0801A4C8:
    ldr r0, [r2, #0x00]
    str r4, [r0, #0x04]
    _0801A4CC:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _0801A4D4: .4byte 0x03000190
    thumb_func_start sub_801A4D8
    sub_801A4D8:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x010
    adds r6, r0, #0x0
    ldrb r0, [r6, #0x02]
    cmp r0, #0x00
    beq _0801A4F6
    cmp r0, #0x01
    bne _0801A4F2
    b _0801A694
    _0801A4F2:
    add r7, sp, #0x00C
    b _0801A76C
    _0801A4F6:
    ldr r1, _0801A67C @ =0x080DAD54
    movs r0, #0x03
    bl sub_80142CC
    ldrb r1, [r6, #0x10]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r6, r0
    adds r0, #0x35
    ldrb r4, [r0, #0x00]
    bl dmaq_getVBlankDmaQueue
    adds r4, #0x01
    lsls r1, r4, #0x01
    adds r1, r1, r4
    lsls r1, r1, #0x08
    ldr r5, _0801A680 @ =0x02025400
    adds r1, r1, r5
    ldr r2, _0801A684 @ =0x0600F000
    ldr r3, _0801A688 @ =0x80000180
    bl dmaq_enqueue
    adds r0, r6, #0x0
    adds r0, #0x29
    ldrb r4, [r0, #0x00]
    bl dmaq_getVBlankDmaQueue
    adds r4, #0x01
    lsls r1, r4, #0x01
    adds r1, r1, r4
    lsls r1, r1, #0x08
    adds r1, r1, r5
    ldr r2, _0801A68C @ =0x0600F300
    ldr r3, _0801A688 @ =0x80000180
    bl dmaq_enqueue
    movs r0, #0x00
    movs r1, #0x03
    movs r2, #0x03
    bl map_getBufferPtr2d
    movs r4, #0xB0
    lsls r4, r4, #0x08
    movs r3, #0x00
    movs r1, #0x38
    adds r1, r1, r6
    mov r8, r1
    movs r5, #0x2A
    adds r5, r5, r6
    mov r10, r5
    add r7, sp, #0x00C
    movs r1, #0xE0
    lsls r1, r1, #0x02
    mov r12, r1
    movs r5, #0xE3
    lsls r5, r5, #0x02
    mov r9, r5
    adds r2, r0, #0x0
    adds r2, #0x40
    adds r1, r0, #0x0
    _0801A570:
    mov r5, r12
    adds r0, r3, r5
    orrs r0, r4
    strh r0, [r1, #0x00]
    mov r5, r9
    adds r0, r3, r5
    orrs r0, r4
    strh r0, [r2, #0x00]
    adds r2, #0x02
    adds r1, #0x02
    adds r3, #0x01
    cmp r3, #0x0B
    ble _0801A570
    movs r0, #0x00
    movs r1, #0x0F
    movs r2, #0x03
    bl map_getBufferPtr2d
    movs r4, #0xB0
    lsls r4, r4, #0x08
    movs r3, #0x00
    movs r1, #0xE6
    lsls r1, r1, #0x02
    mov r12, r1
    movs r5, #0xE9
    lsls r5, r5, #0x02
    mov r9, r5
    adds r2, r0, #0x0
    adds r2, #0x40
    adds r1, r0, #0x0
    _0801A5AC:
    mov r5, r12
    adds r0, r3, r5
    orrs r0, r4
    strh r0, [r1, #0x00]
    mov r5, r9
    adds r0, r3, r5
    orrs r0, r4
    strh r0, [r2, #0x00]
    adds r2, #0x02
    adds r1, #0x02
    adds r3, #0x01
    cmp r3, #0x0B
    ble _0801A5AC
    ldrb r0, [r6, #0x10]
    lsls r1, r0, #0x01
    adds r1, r1, r0
    lsls r1, r1, #0x02
    adds r0, r6, r1
    adds r0, #0x36
    ldrb r4, [r0, #0x00]
    add r1, r8
    ldr r5, [r1, #0x00]
    movs r0, #0x00
    movs r1, #0x05
    movs r2, #0x07
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    movs r0, #0xB0
    lsls r0, r0, #0x02
    mov r9, r0
    str r0, [sp, #0x000]
    movs r0, #0x0F
    mov r8, r0
    str r0, [sp, #0x004]
    adds r0, r4, #0x0
    movs r2, #0xD8
    lsls r2, r2, #0x02
    movs r3, #0x09
    bl sub_800E728
    cmp r5, #0x00
    beq _0801A61E
    lsls r4, r5, #0x10
    lsrs r4, r4, #0x10
    movs r0, #0x00
    movs r1, #0x07
    movs r2, #0x07
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    movs r2, #0xC8
    lsls r2, r2, #0x02
    movs r3, #0x0F
    bl sub_800C6D4
    _0801A61E:
    mov r1, r10
    ldrb r4, [r1, #0x00]
    ldr r5, [r6, #0x2C]
    movs r0, #0x00
    movs r1, #0x11
    movs r2, #0x07
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    mov r0, r9
    str r0, [sp, #0x000]
    mov r0, r8
    str r0, [sp, #0x004]
    adds r0, r4, #0x0
    movs r2, #0xD8
    lsls r2, r2, #0x02
    movs r3, #0x09
    bl sub_800E728
    cmp r5, #0x00
    beq _0801A664
    lsls r4, r5, #0x10
    lsrs r4, r4, #0x10
    movs r0, #0x00
    movs r1, #0x13
    movs r2, #0x07
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    movs r2, #0xC8
    lsls r2, r2, #0x02
    movs r3, #0x0F
    bl sub_800C6D4
    _0801A664:
    movs r3, #0x00
    movs r0, #0x01
    strb r0, [r6, #0x0D]
    ldr r2, _0801A690 @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x02]
    adds r0, #0x01
    strb r0, [r1, #0x02]
    ldr r0, [r2, #0x00]
    str r3, [r0, #0x04]
    b _0801A76C
    .byte 0x00, 0x00
    _0801A67C: .4byte 0x080DAD54
    _0801A680: .4byte 0x02025400
    _0801A684: .4byte 0x0600F000
    _0801A688: .4byte 0x80000180
    _0801A68C: .4byte 0x0600F300
    _0801A690: .4byte 0x03000190
    _0801A694:
    bl main_getTriggerKeys
    movs r4, #0x30
    ands r4, r0
    cmp r4, #0x00
    beq _0801A6B2
    movs r0, #0x8D
    bl m4aSongNumStart
    ldrb r1, [r6, #0x0D]
    movs r0, #0x01
    subs r0, r0, r1
    strb r0, [r6, #0x0D]
    add r7, sp, #0x00C
    b _0801A76C
    _0801A6B2:
    bl main_getTriggerKeys
    movs r1, #0x09
    ands r1, r0
    cmp r1, #0x00
    beq _0801A714
    ldrb r0, [r6, #0x0D]
    cmp r0, #0x00
    bne _0801A6F0
    movs r0, #0x8E
    bl m4aSongNumStart
    ldrb r1, [r6, #0x10]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r6, r0
    adds r0, #0x3C
    ldrb r0, [r0, #0x00]
    strb r0, [r6, #0x11]
    ldr r2, _0801A6EC @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x00]
    strb r0, [r1, #0x01]
    ldr r1, [r2, #0x00]
    movs r0, #0x09
    strb r0, [r1, #0x00]
    b _0801A704
    .byte 0x00, 0x00
    _0801A6EC: .4byte 0x03000190
    _0801A6F0:
    movs r0, #0x8E
    bl m4aSongNumStart
    movs r3, #0x0D
    ldr r2, _0801A710 @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x00]
    strb r0, [r1, #0x01]
    ldr r0, [r2, #0x00]
    strb r3, [r0, #0x00]
    _0801A704:
    ldr r0, [r2, #0x00]
    strb r4, [r0, #0x02]
    ldr r0, [r2, #0x00]
    str r4, [r0, #0x04]
    add r7, sp, #0x00C
    b _0801A76C
    _0801A710: .4byte 0x03000190
    _0801A714:
    bl main_getTriggerKeys
    movs r1, #0x02
    ands r1, r0
    add r7, sp, #0x00C
    cmp r1, #0x00
    beq _0801A76C
    movs r0, #0x90
    bl m4aSongNumStart
    movs r2, #0x00
    ldr r0, _0801A750 @ =0x03000190
    ldr r1, [r0, #0x00]
    adds r4, r0, #0x0
    adds r3, r1, #0x0
    adds r3, #0x29
    adds r1, #0x34
    _0801A736:
    ldrb r0, [r1, #0x00]
    cmp r0, #0x00
    beq _0801A744
    ldrb r0, [r1, #0x01]
    ldrb r5, [r3, #0x00]
    cmp r0, r5
    beq _0801A754
    _0801A744:
    adds r1, #0x0C
    adds r2, #0x01
    cmp r2, #0x01
    ble _0801A736
    movs r3, #0x07
    b _0801A758
    _0801A750: .4byte 0x03000190
    _0801A754:
    strb r2, [r6, #0x10]
    movs r3, #0x06
    _0801A758:
    ldr r0, [r4, #0x00]
    ldrb r1, [r0, #0x00]
    movs r2, #0x00
    strb r1, [r0, #0x01]
    ldr r0, [r4, #0x00]
    strb r3, [r0, #0x00]
    ldr r0, [r4, #0x00]
    strb r2, [r0, #0x02]
    ldr r0, [r4, #0x00]
    str r2, [r0, #0x04]
    _0801A76C:
    ldr r0, [r6, #0x08]
    bl sub_801D0AC
    ldr r0, _0801A7D8 @ =0x00390048
    str r0, [sp, #0x008]
    ldr r4, _0801A7DC @ =0x080C93F8
    movs r5, #0x00
    str r5, [sp, #0x000]
    str r5, [sp, #0x004]
    adds r0, r4, #0x0
    add r1, sp, #0x008
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    ldr r0, _0801A7E0 @ =0x003900A8
    str r0, [sp, #0x00C]
    str r5, [sp, #0x000]
    str r5, [sp, #0x004]
    adds r0, r4, #0x0
    adds r1, r7, #0x0
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    ldr r0, _0801A7E4 @ =0x080C9488
    ldr r7, _0801A7E8 @ =0x080DA3A4
    str r5, [sp, #0x000]
    str r5, [sp, #0x004]
    adds r1, r7, #0x0
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    ldr r0, _0801A7EC @ =0x080C9490
    ldr r4, _0801A7F0 @ =0x080DA3A8
    str r5, [sp, #0x000]
    str r5, [sp, #0x004]
    adds r1, r4, #0x0
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    ldrb r3, [r6, #0x0D]
    adds r6, r3, #0x0
    ldr r0, _0801A7F4 @ =0x03000190
    ldr r0, [r0, #0x00]
    ldr r1, [r0, #0x08]
    movs r0, #0x1F
    ands r0, r1
    cmp r0, #0x13
    bgt _0801A7FC
    ldr r0, _0801A7F8 @ =0x080C9498
    b _0801A806
    _0801A7D8: .4byte 0x00390048
    _0801A7DC: .4byte 0x080C93F8
    _0801A7E0: .4byte 0x003900A8
    _0801A7E4: .4byte 0x080C9488
    _0801A7E8: .4byte 0x080DA3A4
    _0801A7EC: .4byte 0x080C9490
    _0801A7F0: .4byte 0x080DA3A8
    _0801A7F4: .4byte 0x03000190
    _0801A7F8: .4byte 0x080C9498
    _0801A7FC:
    movs r2, #0x20
    ands r2, r1
    cmp r2, #0x00
    beq _0801A820
    ldr r0, _0801A81C @ =0x080C94A8
    _0801A806:
    adds r1, r4, #0x0
    cmp r3, #0x00
    bne _0801A80E
    adds r1, r7, #0x0
    _0801A80E:
    str r5, [sp, #0x000]
    str r5, [sp, #0x004]
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    b _0801A836
    _0801A81C: .4byte 0x080C94A8
    _0801A820:
    ldr r0, _0801A848 @ =0x080C94B8
    adds r1, r4, #0x0
    cmp r6, #0x00
    bne _0801A82A
    adds r1, r7, #0x0
    _0801A82A:
    str r2, [sp, #0x000]
    str r2, [sp, #0x004]
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    _0801A836:
    add sp, #0x010
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _0801A848: .4byte 0x080C94B8
    thumb_func_start sub_801A84C
    sub_801A84C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x018
    adds r6, r0, #0x0
    ldrb r0, [r6, #0x02]
    cmp r0, #0x00
    beq _0801A86E
    cmp r0, #0x01
    bne _0801A866
    b _0801A9F8
    _0801A866:
    add r7, sp, #0x00C
    add r0, sp, #0x010
    mov r8, r0
    b _0801AA82
    _0801A86E:
    ldr r1, _0801A9E0 @ =0x080DAD00
    movs r0, #0x03
    bl sub_80142CC
    adds r0, r6, #0x0
    adds r0, #0x35
    ldrb r4, [r0, #0x00]
    bl dmaq_getVBlankDmaQueue
    adds r4, #0x01
    lsls r1, r4, #0x01
    adds r1, r1, r4
    lsls r1, r1, #0x08
    ldr r5, _0801A9E4 @ =0x02025400
    adds r1, r1, r5
    ldr r2, _0801A9E8 @ =0x0600F000
    ldr r3, _0801A9EC @ =0x80000180
    bl dmaq_enqueue
    adds r0, r6, #0x0
    adds r0, #0x41
    ldrb r4, [r0, #0x00]
    bl dmaq_getVBlankDmaQueue
    adds r4, #0x01
    lsls r1, r4, #0x01
    adds r1, r1, r4
    lsls r1, r1, #0x08
    adds r1, r1, r5
    ldr r2, _0801A9F0 @ =0x0600F300
    ldr r3, _0801A9EC @ =0x80000180
    bl dmaq_enqueue
    movs r0, #0x00
    movs r1, #0x03
    movs r2, #0x03
    bl map_getBufferPtr2d
    movs r4, #0xB0
    lsls r4, r4, #0x08
    movs r3, #0x00
    movs r1, #0x36
    adds r1, r1, r6
    mov r9, r1
    adds r5, r6, #0x0
    adds r5, #0x42
    str r5, [sp, #0x014]
    add r7, sp, #0x00C
    add r1, sp, #0x010
    mov r8, r1
    movs r5, #0xE0
    lsls r5, r5, #0x02
    mov r12, r5
    movs r1, #0xE3
    lsls r1, r1, #0x02
    mov r10, r1
    adds r2, r0, #0x0
    adds r2, #0x40
    adds r1, r0, #0x0
    _0801A8E4:
    mov r5, r12
    adds r0, r3, r5
    orrs r0, r4
    strh r0, [r1, #0x00]
    mov r5, r10
    adds r0, r3, r5
    orrs r0, r4
    strh r0, [r2, #0x00]
    adds r2, #0x02
    adds r1, #0x02
    adds r3, #0x01
    cmp r3, #0x0B
    ble _0801A8E4
    movs r0, #0x00
    movs r1, #0x0F
    movs r2, #0x03
    bl map_getBufferPtr2d
    movs r4, #0xB0
    lsls r4, r4, #0x08
    movs r3, #0x00
    movs r1, #0xE6
    lsls r1, r1, #0x02
    mov r12, r1
    movs r5, #0xE9
    lsls r5, r5, #0x02
    mov r10, r5
    adds r2, r0, #0x0
    adds r2, #0x40
    adds r1, r0, #0x0
    _0801A920:
    mov r5, r12
    adds r0, r3, r5
    orrs r0, r4
    strh r0, [r1, #0x00]
    mov r5, r10
    adds r0, r3, r5
    orrs r0, r4
    strh r0, [r2, #0x00]
    adds r2, #0x02
    adds r1, #0x02
    adds r3, #0x01
    cmp r3, #0x0B
    ble _0801A920
    mov r0, r9
    ldrb r4, [r0, #0x00]
    ldr r5, [r6, #0x38]
    movs r0, #0x00
    movs r1, #0x05
    movs r2, #0x07
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    movs r0, #0xB0
    lsls r0, r0, #0x02
    mov r10, r0
    str r0, [sp, #0x000]
    movs r0, #0x0F
    mov r9, r0
    str r0, [sp, #0x004]
    adds r0, r4, #0x0
    movs r2, #0xD8
    lsls r2, r2, #0x02
    movs r3, #0x09
    bl sub_800E728
    cmp r5, #0x00
    beq _0801A986
    lsls r4, r5, #0x10
    lsrs r4, r4, #0x10
    movs r0, #0x00
    movs r1, #0x07
    movs r2, #0x07
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    movs r2, #0xC8
    lsls r2, r2, #0x02
    movs r3, #0x0F
    bl sub_800C6D4
    _0801A986:
    ldr r1, [sp, #0x014]
    ldrb r4, [r1, #0x00]
    ldr r5, [r6, #0x44]
    movs r0, #0x00
    movs r1, #0x11
    movs r2, #0x07
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    mov r0, r10
    str r0, [sp, #0x000]
    mov r0, r9
    str r0, [sp, #0x004]
    adds r0, r4, #0x0
    movs r2, #0xD8
    lsls r2, r2, #0x02
    movs r3, #0x09
    bl sub_800E728
    cmp r5, #0x00
    beq _0801A9CC
    lsls r4, r5, #0x10
    lsrs r4, r4, #0x10
    movs r0, #0x00
    movs r1, #0x13
    movs r2, #0x07
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    movs r2, #0xC8
    lsls r2, r2, #0x02
    movs r3, #0x0F
    bl sub_800C6D4
    _0801A9CC:
    movs r3, #0x00
    strb r3, [r6, #0x0E]
    ldr r2, _0801A9F4 @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x02]
    adds r0, #0x01
    strb r0, [r1, #0x02]
    ldr r0, [r2, #0x00]
    str r3, [r0, #0x04]
    b _0801AA82
    _0801A9E0: .4byte 0x080DAD00
    _0801A9E4: .4byte 0x02025400
    _0801A9E8: .4byte 0x0600F000
    _0801A9EC: .4byte 0x80000180
    _0801A9F0: .4byte 0x0600F300
    _0801A9F4: .4byte 0x03000190
    _0801A9F8:
    bl main_getTriggerKeys
    movs r4, #0x30
    ands r4, r0
    cmp r4, #0x00
    beq _0801AA1A
    movs r0, #0x8D
    bl m4aSongNumStart
    ldrb r1, [r6, #0x0E]
    movs r0, #0x01
    subs r0, r0, r1
    strb r0, [r6, #0x0E]
    add r7, sp, #0x00C
    add r1, sp, #0x010
    mov r8, r1
    b _0801AA82
    _0801AA1A:
    bl main_getTriggerKeys
    movs r5, #0x09
    ands r5, r0
    cmp r5, #0x00
    beq _0801AA54
    movs r0, #0x8E
    bl m4aSongNumStart
    ldrb r0, [r6, #0x0E]
    strb r0, [r6, #0x10]
    movs r3, #0x08
    ldr r2, _0801AA50 @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x00]
    strb r0, [r1, #0x01]
    ldr r0, [r2, #0x00]
    strb r3, [r0, #0x00]
    ldr r0, [r2, #0x00]
    strb r4, [r0, #0x02]
    ldr r0, [r2, #0x00]
    str r4, [r0, #0x04]
    add r7, sp, #0x00C
    add r5, sp, #0x010
    mov r8, r5
    b _0801AA82
    .byte 0x00, 0x00
    _0801AA50: .4byte 0x03000190
    _0801AA54:
    bl main_getTriggerKeys
    movs r1, #0x02
    ands r1, r0
    add r7, sp, #0x00C
    add r0, sp, #0x010
    mov r8, r0
    cmp r1, #0x00
    beq _0801AA82
    movs r0, #0x90
    bl m4aSongNumStart
    movs r3, #0x06
    ldr r2, _0801AABC @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x00]
    strb r0, [r1, #0x01]
    ldr r0, [r2, #0x00]
    strb r3, [r0, #0x00]
    ldr r0, [r2, #0x00]
    strb r5, [r0, #0x02]
    ldr r0, [r2, #0x00]
    str r5, [r0, #0x04]
    _0801AA82:
    ldr r0, [r6, #0x08]
    bl sub_801D0AC
    ldrb r1, [r6, #0x0E]
    ldr r0, _0801AABC @ =0x03000190
    ldr r0, [r0, #0x00]
    ldr r2, [r0, #0x08]
    ldr r0, _0801AAC0 @ =0x080DA3AC
    lsls r1, r1, #0x01
    adds r1, r1, r0
    ldrh r0, [r1, #0x00]
    movs r1, #0xE4
    lsls r1, r1, #0x0E
    orrs r0, r1
    str r0, [sp, #0x008]
    movs r0, #0x10
    ands r2, r0
    cmp r2, #0x00
    beq _0801AAC8
    ldr r0, _0801AAC4 @ =0x080C962C
    movs r1, #0x00
    str r1, [sp, #0x000]
    str r1, [sp, #0x004]
    add r1, sp, #0x008
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    b _0801AAD8
    _0801AABC: .4byte 0x03000190
    _0801AAC0: .4byte 0x080DA3AC
    _0801AAC4: .4byte 0x080C962C
    _0801AAC8:
    ldr r0, _0801AB14 @ =0x080C9648
    str r2, [sp, #0x000]
    str r2, [sp, #0x004]
    add r1, sp, #0x008
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    _0801AAD8:
    ldr r0, _0801AB18 @ =0x00390048
    str r0, [sp, #0x00C]
    ldr r5, _0801AB1C @ =0x080C93F8
    movs r4, #0x00
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    adds r0, r5, #0x0
    adds r1, r7, #0x0
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    ldr r0, _0801AB20 @ =0x003900A8
    str r0, [sp, #0x010]
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    adds r0, r5, #0x0
    mov r1, r8
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    add sp, #0x018
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    _0801AB14: .4byte 0x080C9648
    _0801AB18: .4byte 0x00390048
    _0801AB1C: .4byte 0x080C93F8
    _0801AB20: .4byte 0x003900A8
    thumb_func_start sub_801AB24
    sub_801AB24:
    push {r4, r5, r6, lr}
    add sp, #-0x00C
    adds r5, r0, #0x0
    ldrb r4, [r5, #0x02]
    cmp r4, #0x00
    beq _0801AB36
    cmp r4, #0x01
    beq _0801AB54
    b _0801ABD6
    _0801AB36:
    ldr r1, _0801AB4C @ =0x080DAC8C
    movs r0, #0x03
    bl sub_80142CC
    ldr r2, _0801AB50 @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x02]
    adds r0, #0x01
    strb r0, [r1, #0x02]
    b _0801ABD2
    .byte 0x00, 0x00
    _0801AB4C: .4byte 0x080DAC8C
    _0801AB50: .4byte 0x03000190
    _0801AB54:
    bl main_getTriggerKeys
    movs r4, #0x09
    ands r4, r0
    cmp r4, #0x00
    beq _0801ABAE
    movs r0, #0x8E
    bl m4aSongNumStart
    movs r2, #0x00
    ldr r0, _0801AB90 @ =0x03000190
    ldr r1, [r0, #0x00]
    adds r4, r0, #0x0
    adds r3, r1, #0x0
    adds r3, #0x29
    adds r1, #0x34
    _0801AB74:
    ldrb r0, [r1, #0x00]
    cmp r0, #0x00
    beq _0801AB82
    ldrb r0, [r1, #0x01]
    ldrb r6, [r3, #0x00]
    cmp r0, r6
    beq _0801AB94
    _0801AB82:
    adds r1, #0x0C
    adds r2, #0x01
    cmp r2, #0x01
    ble _0801AB74
    movs r3, #0x07
    b _0801AB98
    .byte 0x00, 0x00
    _0801AB90: .4byte 0x03000190
    _0801AB94:
    strb r2, [r5, #0x10]
    movs r3, #0x08
    _0801AB98:
    ldr r0, [r4, #0x00]
    ldrb r1, [r0, #0x00]
    movs r2, #0x00
    strb r1, [r0, #0x01]
    ldr r0, [r4, #0x00]
    strb r3, [r0, #0x00]
    ldr r0, [r4, #0x00]
    strb r2, [r0, #0x02]
    ldr r0, [r4, #0x00]
    str r2, [r0, #0x04]
    b _0801ABD6
    _0801ABAE:
    bl main_getTriggerKeys
    movs r1, #0x02
    ands r1, r0
    cmp r1, #0x00
    beq _0801ABD6
    movs r0, #0x90
    bl m4aSongNumStart
    movs r3, #0x05
    ldr r2, _0801AC0C @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x00]
    strb r0, [r1, #0x01]
    ldr r0, [r2, #0x00]
    strb r3, [r0, #0x00]
    ldr r0, [r2, #0x00]
    strb r4, [r0, #0x02]
    _0801ABD2:
    ldr r0, [r2, #0x00]
    str r4, [r0, #0x04]
    _0801ABD6:
    ldrb r0, [r5, #0x12]
    adds r0, #0x01
    movs r1, #0x00
    strb r0, [r5, #0x12]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x1E
    bls _0801ABE8
    strb r1, [r5, #0x12]
    _0801ABE8:
    ldrb r0, [r5, #0x12]
    cmp r0, #0x13
    bhi _0801AC02
    ldr r0, _0801AC10 @ =0x009000D8
    str r0, [sp, #0x008]
    ldr r0, _0801AC14 @ =0x080C9520
    str r1, [sp, #0x000]
    str r1, [sp, #0x004]
    add r1, sp, #0x008
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    _0801AC02:
    add sp, #0x00C
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _0801AC0C: .4byte 0x03000190
    _0801AC10: .4byte 0x009000D8
    _0801AC14: .4byte 0x080C9520
    thumb_func_start sub_801AC18
    sub_801AC18:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    add sp, #-0x00C
    adds r6, r0, #0x0
    ldrb r0, [r6, #0x02]
    cmp r0, #0x00
    beq _0801AC2E
    cmp r0, #0x01
    beq _0801AD04
    b _0801ADA4
    _0801AC2E:
    adds r0, r6, #0x0
    adds r0, #0x29
    ldrb r4, [r0, #0x00]
    bl dmaq_getVBlankDmaQueue
    adds r4, #0x01
    lsls r1, r4, #0x01
    adds r1, r1, r4
    lsls r1, r1, #0x08
    ldr r2, _0801ACF0 @ =0x02025400
    adds r1, r1, r2
    ldr r2, _0801ACF4 @ =0x0600F000
    ldr r3, _0801ACF8 @ =0x80000180
    bl dmaq_enqueue
    ldr r1, _0801ACFC @ =0x080DAC24
    movs r0, #0x03
    bl sub_80142CC
    movs r0, #0x00
    movs r1, #0x08
    movs r2, #0x03
    bl map_getBufferPtr2d
    movs r4, #0xB0
    lsls r4, r4, #0x08
    movs r3, #0x00
    movs r1, #0x2A
    adds r1, r1, r6
    mov r8, r1
    movs r5, #0xE0
    lsls r5, r5, #0x02
    mov r12, r5
    movs r7, #0xE3
    lsls r7, r7, #0x02
    adds r2, r0, #0x0
    adds r2, #0x40
    adds r1, r0, #0x0
    _0801AC7A:
    mov r5, r12
    adds r0, r3, r5
    orrs r0, r4
    strh r0, [r1, #0x00]
    adds r0, r3, r7
    orrs r0, r4
    strh r0, [r2, #0x00]
    adds r2, #0x02
    adds r1, #0x02
    adds r3, #0x01
    cmp r3, #0x0B
    ble _0801AC7A
    mov r0, r8
    ldrb r4, [r0, #0x00]
    ldr r5, [r6, #0x2C]
    movs r0, #0x00
    movs r1, #0x0A
    movs r2, #0x07
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    movs r0, #0xB0
    lsls r0, r0, #0x02
    str r0, [sp, #0x000]
    movs r0, #0x0F
    str r0, [sp, #0x004]
    adds r0, r4, #0x0
    movs r2, #0xD8
    lsls r2, r2, #0x02
    movs r3, #0x09
    bl sub_800E728
    cmp r5, #0x00
    beq _0801ACDA
    lsls r4, r5, #0x10
    lsrs r4, r4, #0x10
    movs r0, #0x00
    movs r1, #0x0C
    movs r2, #0x07
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    movs r2, #0xC8
    lsls r2, r2, #0x02
    movs r3, #0x0F
    bl sub_800C6D4
    _0801ACDA:
    ldr r3, _0801AD00 @ =0x03000190
    ldr r1, [r3, #0x00]
    ldrb r0, [r1, #0x02]
    adds r0, #0x01
    movs r2, #0x00
    strb r0, [r1, #0x02]
    ldr r0, [r3, #0x00]
    str r2, [r0, #0x04]
    strb r2, [r6, #0x0D]
    b _0801ADA4
    .byte 0x00, 0x00
    _0801ACF0: .4byte 0x02025400
    _0801ACF4: .4byte 0x0600F000
    _0801ACF8: .4byte 0x80000180
    _0801ACFC: .4byte 0x080DAC24
    _0801AD00: .4byte 0x03000190
    _0801AD04:
    bl main_getTriggerKeys
    movs r4, #0x30
    ands r4, r0
    cmp r4, #0x00
    beq _0801AD20
    movs r0, #0x8D
    bl m4aSongNumStart
    ldrb r1, [r6, #0x0D]
    movs r0, #0x01
    subs r0, r0, r1
    strb r0, [r6, #0x0D]
    b _0801ADA4
    _0801AD20:
    bl main_getTriggerKeys
    movs r5, #0x09
    ands r5, r0
    cmp r5, #0x00
    beq _0801AD7C
    movs r0, #0x8E
    bl m4aSongNumStart
    ldrb r0, [r6, #0x0D]
    cmp r0, #0x00
    bne _0801AD60
    adds r0, r6, #0x0
    bl sub_80178BC
    cmp r0, #0x00
    beq _0801AD46
    movs r3, #0x06
    b _0801AD62
    _0801AD46:
    bl sub_805DC94
    strb r0, [r6, #0x11]
    ldr r2, _0801AD5C @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x00]
    strb r0, [r1, #0x01]
    ldr r1, [r2, #0x00]
    movs r0, #0x09
    strb r0, [r1, #0x00]
    b _0801AD6E
    _0801AD5C: .4byte 0x03000190
    _0801AD60:
    movs r3, #0x0D
    _0801AD62:
    ldr r2, _0801AD78 @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x00]
    strb r0, [r1, #0x01]
    ldr r0, [r2, #0x00]
    strb r3, [r0, #0x00]
    _0801AD6E:
    ldr r0, [r2, #0x00]
    strb r4, [r0, #0x02]
    ldr r0, [r2, #0x00]
    str r4, [r0, #0x04]
    b _0801ADA4
    _0801AD78: .4byte 0x03000190
    _0801AD7C:
    bl main_getTriggerKeys
    movs r1, #0x02
    ands r1, r0
    cmp r1, #0x00
    beq _0801ADA4
    movs r0, #0x90
    bl m4aSongNumStart
    movs r3, #0x0D
    ldr r2, _0801ADFC @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x00]
    strb r0, [r1, #0x01]
    ldr r0, [r2, #0x00]
    strb r3, [r0, #0x00]
    ldr r0, [r2, #0x00]
    strb r5, [r0, #0x02]
    ldr r0, [r2, #0x00]
    str r5, [r0, #0x04]
    _0801ADA4:
    ldr r0, [r6, #0x08]
    bl sub_801D0AC
    ldr r0, _0801AE00 @ =0x00390070
    str r0, [sp, #0x008]
    ldr r0, _0801AE04 @ =0x080C93F8
    movs r4, #0x00
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    add r1, sp, #0x008
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    ldr r0, _0801AE08 @ =0x080C9488
    ldr r7, _0801AE0C @ =0x080DA3A4
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    adds r1, r7, #0x0
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    ldr r0, _0801AE10 @ =0x080C9490
    ldr r5, _0801AE14 @ =0x080DA3A8
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    adds r1, r5, #0x0
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    ldrb r3, [r6, #0x0D]
    adds r6, r3, #0x0
    ldr r0, _0801ADFC @ =0x03000190
    ldr r0, [r0, #0x00]
    ldr r1, [r0, #0x08]
    movs r0, #0x1F
    ands r0, r1
    cmp r0, #0x13
    bgt _0801AE1C
    ldr r0, _0801AE18 @ =0x080C9498
    b _0801AE26
    .byte 0x00, 0x00
    _0801ADFC: .4byte 0x03000190
    _0801AE00: .4byte 0x00390070
    _0801AE04: .4byte 0x080C93F8
    _0801AE08: .4byte 0x080C9488
    _0801AE0C: .4byte 0x080DA3A4
    _0801AE10: .4byte 0x080C9490
    _0801AE14: .4byte 0x080DA3A8
    _0801AE18: .4byte 0x080C9498
    _0801AE1C:
    movs r2, #0x20
    ands r2, r1
    cmp r2, #0x00
    beq _0801AE40
    ldr r0, _0801AE3C @ =0x080C94A8
    _0801AE26:
    adds r1, r5, #0x0
    cmp r3, #0x00
    bne _0801AE2E
    adds r1, r7, #0x0
    _0801AE2E:
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    b _0801AE56
    _0801AE3C: .4byte 0x080C94A8
    _0801AE40:
    ldr r0, _0801AE64 @ =0x080C94B8
    adds r1, r5, #0x0
    cmp r6, #0x00
    bne _0801AE4A
    adds r1, r7, #0x0
    _0801AE4A:
    str r2, [sp, #0x000]
    str r2, [sp, #0x004]
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    _0801AE56:
    add sp, #0x00C
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _0801AE64: .4byte 0x080C94B8
    thumb_func_start sub_801AE68
    sub_801AE68:
    push {r4, lr}
    adds r4, r0, #0x0
    bl sub_80123D8
    cmp r0, #0x01
    beq _0801AE7A
    cmp r0, #0x02
    beq _0801AEB8
    b _0801AED0
    _0801AE7A:
    ldrb r0, [r4, #0x1C]
    cmp r0, #0x00
    bne _0801AE8E
    adds r0, r4, #0x0
    adds r0, #0x28
    ldrb r4, [r0, #0x00]
    cmp r4, #0x00
    bne _0801AEB4
    movs r3, #0x0F
    b _0801AE9A
    _0801AE8E:
    adds r0, r4, #0x0
    adds r0, #0x28
    ldrb r4, [r0, #0x00]
    cmp r4, #0x00
    bne _0801AEB4
    movs r3, #0x09
    _0801AE9A:
    ldr r2, _0801AEB0 @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x00]
    strb r0, [r1, #0x01]
    ldr r0, [r2, #0x00]
    strb r3, [r0, #0x00]
    ldr r0, [r2, #0x00]
    strb r4, [r0, #0x02]
    ldr r0, [r2, #0x00]
    str r4, [r0, #0x04]
    b _0801AED0
    _0801AEB0: .4byte 0x03000190
    _0801AEB4:
    movs r4, #0x05
    b _0801AEBA
    _0801AEB8:
    movs r4, #0x0E
    _0801AEBA:
    ldr r1, _0801AED8 @ =0x03000190
    ldr r0, [r1, #0x00]
    ldrb r2, [r0, #0x00]
    movs r3, #0x00
    strb r2, [r0, #0x01]
    ldr r0, [r1, #0x00]
    strb r4, [r0, #0x00]
    ldr r0, [r1, #0x00]
    strb r3, [r0, #0x02]
    ldr r0, [r1, #0x00]
    str r3, [r0, #0x04]
    _0801AED0:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _0801AED8: .4byte 0x03000190
    thumb_func_start sub_801AEDC
    sub_801AEDC:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    movs r0, #0xD4
    lsls r0, r0, #0x03
    adds r6, r5, r0
    ldrb r4, [r5, #0x02]
    cmp r4, #0x01
    beq _0801AF28
    cmp r4, #0x01
    bgt _0801AEF6
    cmp r4, #0x00
    beq _0801AEFC
    b _0801AF76
    _0801AEF6:
    cmp r4, #0x02
    beq _0801AF50
    b _0801AF76
    _0801AEFC:
    adds r0, r5, #0x0
    bl sub_80180D8
    adds r0, r5, #0x0
    bl sub_8017170
    ldr r0, _0801AF20 @ =0x00000844
    bl sub_801D240
    ldr r2, _0801AF24 @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x02]
    adds r0, #0x01
    strb r0, [r1, #0x02]
    ldr r0, [r2, #0x00]
    str r4, [r0, #0x04]
    b _0801AF76
    .byte 0x00, 0x00
    _0801AF20: .4byte 0x00000844
    _0801AF24: .4byte 0x03000190
    _0801AF28:
    bl sub_801D28C
    adds r3, r0, #0x0
    cmp r3, #0x00
    bne _0801AF76
    ldr r2, _0801AF4C @ =0x03000190
    ldr r1, [r2, #0x00]
    ldrb r0, [r1, #0x02]
    adds r0, #0x01
    strb r0, [r1, #0x02]
    ldr r0, [r2, #0x00]
    str r3, [r0, #0x04]
    ldrb r1, [r6, #0x01]
    movs r0, #0x20
    orrs r0, r1
    strb r0, [r6, #0x01]
    b _0801AF76
    .byte 0x00, 0x00
    _0801AF4C: .4byte 0x03000190
    _0801AF50:
    movs r4, #0x04
    ldr r1, _0801AF7C @ =0x03000190
    ldr r0, [r1, #0x00]
    ldrb r2, [r0, #0x00]
    movs r3, #0x00
    strb r2, [r0, #0x01]
    ldr r0, [r1, #0x00]
    strb r4, [r0, #0x00]
    ldr r0, [r1, #0x00]
    strb r3, [r0, #0x02]
    ldr r0, [r1, #0x00]
    str r3, [r0, #0x04]
    adds r0, r5, #0x0
    adds r0, #0x1C
    adds r1, r5, #0x0
    adds r1, #0x28
    movs r2, #0x0C
    bl sub_8012584
    _0801AF76:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    _0801AF7C: .4byte 0x03000190
    thumb_func_start sub_801AF80
    sub_801AF80:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    movs r2, #0x00
    _0801AF88:
    ldr r0, _0801AFC4 @ =0x03000190
    ldr r0, [r0, #0x00]
    lsls r1, r2, #0x02
    movs r3, #0x82
    lsls r3, r3, #0x01
    adds r0, r0, r3
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    adds r6, r1, #0x0
    cmp r0, #0x00
    beq _0801AFD0
    adds r7, r2, #0x1
    adds r0, r6, #0x1
    ldr r2, _0801AFC8 @ =0x02025400
    movs r5, #0x03
    lsls r1, r0, #0x01
    adds r1, r1, r0
    lsls r1, r1, #0x08
    adds r4, r1, r2
    _0801AFAE:
    ldr r0, _0801AFCC @ =0x080A28C8
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    movs r0, #0xC0
    lsls r0, r0, #0x02
    adds r4, r4, r0
    subs r5, #0x01
    cmp r5, #0x00
    bge _0801AFAE
    b _0801B002
    _0801AFC4: .4byte 0x03000190
    _0801AFC8: .4byte 0x02025400
    _0801AFCC: .4byte 0x080A28C8
    _0801AFD0:
    movs r5, #0x00
    adds r7, r2, #0x1
    ldr r1, _0801B038 @ =0x080E7FEC
    mov r8, r1
    adds r1, r6, #0x1
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r4, r0, #0x08
    _0801AFE0:
    adds r0, r6, r5
    bl track_getMKSCTrack
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x30]
    ldr r1, _0801B03C @ =0x02025400
    adds r1, r4, r1
    bl LZ77UnCompWram
    movs r3, #0xC0
    lsls r3, r3, #0x02
    adds r4, r4, r3
    adds r5, #0x01
    cmp r5, #0x03
    ble _0801AFE0
    _0801B002:
    bl main_frameProc
    adds r2, r7, #0x0
    cmp r2, #0x04
    ble _0801AF88
    ldr r0, _0801B040 @ =0x080BE200
    ldr r4, _0801B03C @ =0x02025400
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl main_frameProc
    ldr r0, _0801B044 @ =0x080BE344
    movs r1, #0xFC
    lsls r1, r1, #0x06
    adds r4, r4, r1
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl main_frameProc
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _0801B038: .4byte 0x080E7FEC
    _0801B03C: .4byte 0x02025400
    _0801B040: .4byte 0x080BE200
    _0801B044: .4byte 0x080BE344
    thumb_func_start sub_801B048
    sub_801B048:
    push {r4, r5, r6, r7, lr}
    add sp, #-0x008
    adds r5, r0, #0x0
    ldr r0, _0801B1AC @ =0x08079F18
    ldr r4, _0801B1B0 @ =0x02004400
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    movs r0, #0x01
    ands r0, r5
    cmp r0, #0x00
    beq _0801B120
    movs r0, #0x00
    str r0, [sp, #0x004]
    ldr r0, [sp, #0x004]
    cmp r0, #0x06
    bgt _0801B0DC
    movs r0, #0x80
    adds r0, r0, r4
    mov r12, r0
    movs r7, #0xA0
    lsls r7, r7, #0x01
    adds r6, r4, r7
    _0801B076:
    movs r0, #0x0C
    str r0, [sp, #0x000]
    ldr r0, [sp, #0x000]
    cmp r0, #0x1C
    bgt _0801B0D0
    mov r3, r12
    adds r4, r6, #0x0
    _0801B084:
    ldr r2, [sp, #0x004]
    ldr r0, [sp, #0x000]
    lsls r2, r2, #0x06
    adds r2, r2, r0
    lsls r2, r2, #0x01
    adds r2, r2, r3
    ldr r0, [sp, #0x004]
    ldr r1, [sp, #0x000]
    lsls r0, r0, #0x06
    adds r0, r0, r1
    lsls r0, r0, #0x01
    adds r1, r3, #0x0
    adds r1, #0x80
    adds r0, r0, r1
    ldrh r0, [r0, #0x00]
    strh r0, [r2, #0x00]
    ldr r1, [sp, #0x004]
    ldr r0, [sp, #0x000]
    lsls r1, r1, #0x06
    adds r1, r1, r0
    lsls r1, r1, #0x01
    adds r0, r3, #0x0
    adds r0, #0x40
    adds r1, r1, r0
    ldr r0, [sp, #0x004]
    ldr r2, [sp, #0x000]
    lsls r0, r0, #0x06
    adds r0, r0, r2
    lsls r0, r0, #0x01
    adds r0, r0, r4
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    ldr r0, [sp, #0x000]
    adds r0, #0x01
    str r0, [sp, #0x000]
    ldr r0, [sp, #0x000]
    cmp r0, #0x1C
    ble _0801B084
    _0801B0D0:
    ldr r0, [sp, #0x004]
    adds r0, #0x01
    str r0, [sp, #0x004]
    ldr r0, [sp, #0x004]
    cmp r0, #0x06
    ble _0801B076
    _0801B0DC:
    movs r0, #0x0C
    str r0, [sp, #0x000]
    ldr r0, [sp, #0x000]
    cmp r0, #0x1C
    bgt _0801B120
    ldr r2, _0801B1B4 @ =0x02004800
    adds r4, r2, #0x0
    subs r4, #0xC0
    ldr r0, _0801B1B8 @ =0xFFFFFF00
    adds r3, r2, r0
    _0801B0F0:
    ldr r1, [sp, #0x000]
    lsls r1, r1, #0x01
    adds r1, r1, r2
    ldr r0, [sp, #0x000]
    lsls r0, r0, #0x01
    adds r0, r0, r3
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    ldr r1, [sp, #0x000]
    lsls r1, r1, #0x01
    adds r0, r2, #0x0
    adds r0, #0x40
    adds r1, r1, r0
    ldr r0, [sp, #0x000]
    lsls r0, r0, #0x01
    adds r0, r0, r4
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    ldr r0, [sp, #0x000]
    adds r0, #0x01
    str r0, [sp, #0x000]
    ldr r0, [sp, #0x000]
    cmp r0, #0x1C
    ble _0801B0F0
    _0801B120:
    movs r0, #0x00
    str r0, [sp, #0x004]
    ldr r0, [sp, #0x004]
    cmp r0, #0x07
    bgt _0801B1A2
    ldr r6, _0801B1BC @ =0x02004480
    movs r7, #0x88
    lsls r7, r7, #0x03
    adds r7, r7, r6
    mov r12, r7
    _0801B134:
    ldr r0, [sp, #0x004]
    adds r0, r5, r0
    subs r0, #0x01
    cmp r0, #0x00
    blt _0801B146
    ldr r0, [sp, #0x004]
    adds r0, r5, r0
    cmp r0, #0x14
    ble _0801B196
    _0801B146:
    movs r0, #0x19
    str r0, [sp, #0x000]
    ldr r0, [sp, #0x000]
    cmp r0, #0x1C
    bgt _0801B196
    adds r3, r6, #0x0
    mov r4, r12
    _0801B154:
    ldr r2, [sp, #0x004]
    ldr r0, [sp, #0x000]
    lsls r2, r2, #0x06
    adds r2, r2, r0
    lsls r2, r2, #0x01
    adds r2, r2, r3
    ldr r0, [sp, #0x000]
    lsls r0, r0, #0x01
    movs r7, #0x80
    lsls r7, r7, #0x03
    adds r1, r3, r7
    adds r0, r0, r1
    ldrh r0, [r0, #0x00]
    strh r0, [r2, #0x00]
    ldr r1, [sp, #0x004]
    ldr r0, [sp, #0x000]
    lsls r1, r1, #0x06
    adds r1, r1, r0
    lsls r1, r1, #0x01
    adds r0, r3, #0x0
    adds r0, #0x40
    adds r1, r1, r0
    ldr r0, [sp, #0x000]
    lsls r0, r0, #0x01
    adds r0, r0, r4
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    ldr r0, [sp, #0x000]
    adds r0, #0x01
    str r0, [sp, #0x000]
    ldr r0, [sp, #0x000]
    cmp r0, #0x1C
    ble _0801B154
    _0801B196:
    ldr r0, [sp, #0x004]
    adds r0, #0x01
    str r0, [sp, #0x004]
    ldr r0, [sp, #0x004]
    cmp r0, #0x07
    ble _0801B134
    _0801B1A2:
    add sp, #0x008
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _0801B1AC: .4byte 0x08079F18
    _0801B1B0: .4byte 0x02004400
    _0801B1B4: .4byte 0x02004800
    _0801B1B8: .4byte 0xFFFFFF00
    _0801B1BC: .4byte 0x02004480
    thumb_func_start sub_801B1C0
    sub_801B1C0:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x01C
    adds r5, r0, #0x0
    str r1, [sp, #0x00C]
    str r2, [sp, #0x010]
    str r3, [sp, #0x014]
    ldr r0, [r5, #0x0C]
    adds r0, #0x01
    str r0, [r5, #0x0C]
    ldr r2, _0801B25C @ =0x080D9694
    ldr r3, [r5, #0x08]
    lsls r1, r3, #0x03
    adds r1, r1, r2
    ldrh r1, [r1, #0x04]
    cmp r0, r1
    ble _0801B1F6
    movs r1, #0x00
    str r1, [r5, #0x0C]
    adds r0, r3, #0x1
    str r0, [r5, #0x08]
    cmp r0, #0x07
    bls _0801B1F6
    str r1, [r5, #0x08]
    _0801B1F6:
    ldr r0, [r5, #0x14]
    adds r0, #0x01
    str r0, [r5, #0x14]
    ldr r2, _0801B260 @ =0x080D9684
    ldr r3, [r5, #0x10]
    lsls r1, r3, #0x03
    adds r1, r1, r2
    ldrh r1, [r1, #0x04]
    cmp r0, r1
    ble _0801B218
    movs r1, #0x00
    str r1, [r5, #0x14]
    adds r0, r3, #0x1
    str r0, [r5, #0x10]
    cmp r0, #0x01
    bls _0801B218
    str r1, [r5, #0x10]
    _0801B218:
    movs r0, #0x00
    mov r8, r0
    _0801B21C:
    ldr r0, [sp, #0x010]
    add r0, r8
    subs r0, #0x01
    mov r9, r0
    mov r1, r8
    adds r1, #0x01
    str r1, [sp, #0x018]
    cmp r0, #0x00
    blt _0801B2E6
    cmp r0, #0x13
    bgt _0801B2E6
    lsls r0, r0, #0x02
    ldr r1, [sp, #0x00C]
    adds r0, r1, r0
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0801B27E
    mov r0, r8
    lsls r1, r0, #0x14
    movs r0, #0xC0
    lsls r0, r0, #0x0D
    adds r1, r1, r0
    movs r0, #0xD0
    orrs r0, r1
    str r0, [sp, #0x008]
    ldr r1, [sp, #0x014]
    cmp r8, r1
    beq _0801B264
    ldr r0, [r5, #0x08]
    lsls r0, r0, #0x03
    ldr r1, _0801B25C @ =0x080D9694
    b _0801B26A
    _0801B25C: .4byte 0x080D9694
    _0801B260: .4byte 0x080D9684
    _0801B264:
    ldr r0, [r5, #0x10]
    lsls r0, r0, #0x03
    ldr r1, _0801B2BC @ =0x080D9684
    _0801B26A:
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    movs r1, #0x00
    str r1, [sp, #0x000]
    str r1, [sp, #0x004]
    add r1, sp, #0x008
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    _0801B27E:
    movs r7, #0x00
    mov r0, r8
    adds r0, #0x01
    str r0, [sp, #0x018]
    add r6, sp, #0x008
    mov r1, r8
    lsls r0, r1, #0x04
    adds r0, #0x18
    mov r10, r0
    ldr r4, [sp, #0x00C]
    adds r4, #0x8C
    _0801B294:
    ldr r0, [r4, #0x00]
    cmp r0, #0x00
    beq _0801B2DE
    ldr r0, [sp, #0x00C]
    adds r0, #0x94
    adds r0, r0, r7
    ldrb r0, [r0, #0x00]
    cmp r0, r9
    bne _0801B2DE
    movs r0, #0xE0
    strh r0, [r6, #0x00]
    mov r0, r10
    strh r0, [r6, #0x02]
    ldr r1, [sp, #0x014]
    cmp r8, r1
    beq _0801B2C4
    ldr r0, [r5, #0x08]
    lsls r0, r0, #0x03
    ldr r1, _0801B2C0 @ =0x080D96E4
    b _0801B2CA
    _0801B2BC: .4byte 0x080D9684
    _0801B2C0: .4byte 0x080D96E4
    _0801B2C4:
    ldr r0, [r5, #0x10]
    lsls r0, r0, #0x03
    ldr r1, _0801B300 @ =0x080D96D4
    _0801B2CA:
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    movs r1, #0x00
    str r1, [sp, #0x000]
    str r1, [sp, #0x004]
    add r1, sp, #0x008
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    _0801B2DE:
    adds r4, #0x04
    adds r7, #0x01
    cmp r7, #0x01
    ble _0801B294
    _0801B2E6:
    ldr r0, [sp, #0x018]
    mov r8, r0
    cmp r0, #0x07
    ble _0801B21C
    add sp, #0x01C
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _0801B300: .4byte 0x080D96D4
    thumb_func_start sub_801B304
    sub_801B304:
    push {r4, lr}
    adds r2, r0, #0x0
    movs r4, #0x00
    ldr r0, [r2, #0x18]
    adds r0, #0x01
    str r0, [r2, #0x18]
    cmp r0, #0x07
    ble _0801B322
    str r4, [r2, #0x18]
    ldr r0, [r2, #0x1C]
    adds r0, #0x01
    str r0, [r2, #0x1C]
    cmp r0, #0x06
    ble _0801B322
    str r4, [r2, #0x1C]
    _0801B322:
    ldr r1, [r2, #0x00]
    ldr r0, [r2, #0x04]
    adds r1, r1, r0
    subs r0, r1, #0x1
    cmp r0, #0x00
    bge _0801B330
    adds r0, r1, #0x2
    _0801B330:
    asrs r0, r0, #0x02
    cmp r0, #0x04
    bhi _0801B390
    lsls r0, r0, #0x02
    ldr r1, _0801B340 @ =0x0801B344
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    _0801B340: .4byte 0x0801B344
    .byte 0x58, 0xB3, 0x01, 0x08, 0x64, 0xB3, 0x01, 0x08, 0x70, 0xB3, 0x01, 0x08, 0x7C, 0xB3, 0x01, 0x08
    .byte 0x88, 0xB3, 0x01, 0x08, 0xD0, 0x69, 0x40, 0x01, 0x00, 0x49, 0x16, 0xE0, 0x88, 0xCD, 0x07, 0x08
    .byte 0xD0, 0x69, 0x40, 0x01, 0x00, 0x49, 0x10, 0xE0, 0x68, 0xCE, 0x07, 0x08, 0xD0, 0x69, 0x40, 0x01
    .byte 0x00, 0x49, 0x0A, 0xE0, 0x48, 0xCF, 0x07, 0x08, 0xD0, 0x69, 0x40, 0x01, 0x00, 0x49, 0x04, 0xE0
    .byte 0x28, 0xD0, 0x07, 0x08, 0xD0, 0x69, 0x40, 0x01, 0x08, 0x49, 0x44, 0x18
    _0801B390:
    cmp r4, #0x00
    beq _0801B3AA
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r0, #0x90
    lsls r0, r0, #0x01
    adds r1, r1, r0
    adds r0, r4, #0x0
    movs r2, #0x08
    bl CpuFastSet
    _0801B3AA:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x08, 0xD1, 0x07, 0x08
    thumb_func_start sub_801B3B4
    sub_801B3B4:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    add sp, #-0x00C
    adds r4, r0, #0x0
    adds r6, r1, #0x0
    adds r7, r2, #0x0
    adds r5, r3, #0x0
    cmp r5, #0x00
    beq _0801B412
    lsls r0, r6, #0x10
    lsrs r0, r0, #0x10
    ldr r1, _0801B4A0 @ =0xFFFF0000
    ldr r2, [sp, #0x008]
    ands r2, r1
    orrs r2, r0
    str r2, [sp, #0x008]
    lsls r0, r4, #0x02
    adds r0, r0, r4
    ldr r1, _0801B4A4 @ =0x080E645C
    lsls r0, r0, #0x19
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0801B3E6
    adds r0, #0x3F
    _0801B3E6:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x01
    asrs r0, r0, #0x0F
    adds r0, r7, r0
    lsls r0, r0, #0x10
    ldr r1, _0801B4A8 @ =0x0000FFFF
    ands r2, r1
    orrs r2, r0
    str r2, [sp, #0x008]
    ldr r0, _0801B4AC @ =0x080C94F8
    movs r1, #0x00
    str r1, [sp, #0x000]
    str r1, [sp, #0x004]
    add r1, sp, #0x008
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    _0801B412:
    ldr r0, [sp, #0x024]
    subs r0, #0x01
    mov r8, r0
    cmp r5, r8
    beq _0801B456
    movs r2, #0x00
    add r0, sp, #0x008
    strh r6, [r0, #0x00]
    lsls r0, r4, #0x02
    adds r0, r0, r4
    ldr r1, _0801B4A4 @ =0x080E645C
    lsls r0, r0, #0x19
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0801B432
    adds r0, #0x3F
    _0801B432:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x01
    negs r0, r0
    asrs r0, r0, #0x0F
    adds r0, r7, r0
    add r1, sp, #0x008
    strh r0, [r1, #0x02]
    ldr r0, _0801B4B0 @ =0x080C9500
    str r2, [sp, #0x000]
    str r2, [sp, #0x004]
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    _0801B456:
    movs r4, #0x00
    add r0, sp, #0x008
    strh r6, [r0, #0x00]
    movs r0, #0x2C
    muls r0, r5
    mov r1, r8
    bl __divsi3
    subs r0, #0x16
    adds r0, r7, r0
    add r5, sp, #0x008
    strh r0, [r5, #0x02]
    ldr r0, _0801B4B4 @ =0x080C9318
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    adds r1, r5, #0x0
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    add r0, sp, #0x008
    strh r6, [r0, #0x00]
    strh r7, [r5, #0x02]
    ldr r0, _0801B4B8 @ =0x080C92E8
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    add r1, sp, #0x008
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    add sp, #0x00C
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    _0801B4A0: .4byte 0xFFFF0000
    _0801B4A4: .4byte gSinTable
    _0801B4A8: .4byte 0x0000FFFF
    _0801B4AC: .4byte 0x080C94F8
    _0801B4B0: .4byte 0x080C9500
    _0801B4B4: .4byte 0x080C9318
    _0801B4B8: .4byte 0x080C92E8
    thumb_func_start sub_801B4BC
    sub_801B4BC:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x014
    str r0, [sp, #0x008]
    ldr r1, _0801B584 @ =0x00000504
    adds r0, r0, r1
    mov r8, r0
    bl main_getRepeatTriggerKeys
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    bl main_getTriggerKeys
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    str r0, [sp, #0x00C]
    mov r2, r8
    ldr r4, [r2, #0x00]
    ldr r5, [r2, #0x04]
    adds r1, r5, r4
    subs r0, r1, #0x1
    cmp r0, #0x00
    bge _0801B4F2
    adds r0, r1, #0x2
    _0801B4F2:
    asrs r0, r0, #0x02
    str r0, [sp, #0x010]
    ldr r0, [sp, #0x008]
    movs r2, #0xA1
    lsls r2, r2, #0x03
    adds r1, r0, r2
    mov r0, r8
    adds r2, r6, #0x0
    movs r3, #0x16
    bl sub_800E4D0
    mov r1, r8
    ldr r0, [r1, #0x00]
    cmp r4, r0
    bne _0801B518
    ldr r0, [r1, #0x04]
    cmp r5, r0
    bne _0801B518
    b _0801B6A0
    _0801B518:
    movs r0, #0x8D
    bl m4aSongNumStart
    movs r0, #0x00
    bl map_clearBuffer
    mov r2, r8
    ldr r1, [r2, #0x00]
    ldr r6, _0801B588 @ =0x06005800
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r4, r0, #0x08
    movs r5, #0x07
    _0801B532:
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0801B58C @ =0x02025400
    adds r1, r4, r1
    adds r2, r6, #0x0
    ldr r3, _0801B590 @ =0x80000180
    bl dmaq_enqueue
    movs r0, #0xC0
    lsls r0, r0, #0x02
    adds r6, r6, r0
    adds r4, r4, r0
    subs r5, #0x01
    cmp r5, #0x00
    bge _0801B532
    mov r1, r8
    ldr r1, [r1, #0x00]
    mov r10, r1
    mov r2, r8
    ldr r2, [r2, #0x04]
    mov r9, r2
    movs r4, #0x00
    _0801B55E:
    lsls r2, r4, #0x01
    movs r0, #0x01
    movs r1, #0x0D
    bl map_getBufferPtr2d
    mov r12, r0
    cmp r4, r9
    beq _0801B594
    mov r0, r10
    adds r1, r4, r0
    movs r0, #0x01
    ands r1, r0
    movs r0, #0xA0
    lsls r0, r0, #0x07
    cmp r1, #0x00
    beq _0801B598
    movs r0, #0xC0
    lsls r0, r0, #0x07
    b _0801B598
    _0801B584: .4byte 0x00000504
    _0801B588: .4byte 0x06005800
    _0801B58C: .4byte 0x02025400
    _0801B590: .4byte 0x80000180
    _0801B594:
    movs r0, #0xB0
    lsls r0, r0, #0x08
    _0801B598:
    adds r2, r0, #0x0
    movs r1, #0x00
    adds r6, r4, #0x1
    ldr r7, _0801B658 @ =0x00000FFF
    _0801B5A0:
    lsls r0, r1, #0x06
    adds r5, r1, #0x1
    adds r0, #0x80
    mov r1, r12
    adds r3, r1, r0
    movs r4, #0x0B
    _0801B5AC:
    ldrh r1, [r3, #0x00]
    adds r0, r7, #0x0
    ands r0, r1
    orrs r0, r2
    strh r0, [r3, #0x00]
    adds r3, #0x02
    subs r4, #0x01
    cmp r4, #0x00
    bge _0801B5AC
    adds r1, r5, #0x0
    cmp r1, #0x01
    ble _0801B5A0
    adds r4, r6, #0x0
    cmp r4, #0x07
    ble _0801B55E
    mov r2, r8
    ldr r0, [r2, #0x00]
    bl sub_801B048
    mov r0, r8
    ldr r1, [r0, #0x00]
    ldr r0, [r0, #0x04]
    adds r0, r1, r0
    subs r0, #0x01
    ldr r6, _0801B65C @ =0x080DA76C
    cmp r0, #0x13
    bhi _0801B668
    bl track_getMKSCTrack
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    bl sub_805CE3C
    lsls r0, r0, #0x18
    asrs r4, r0, #0x18
    movs r0, #0x01
    negs r0, r0
    cmp r4, r0
    beq _0801B660
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    adds r0, r4, #0x0
    bl sub_805DE90
    adds r5, r0, #0x0
    lsls r5, r5, #0x18
    asrs r5, r5, #0x18
    adds r0, r4, #0x0
    bl sub_805DEB8
    lsls r0, r0, #0x10
    asrs r4, r0, #0x10
    movs r0, #0x00
    movs r1, #0x02
    movs r2, #0x07
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    movs r0, #0xB0
    lsls r0, r0, #0x02
    str r0, [sp, #0x000]
    movs r0, #0x0F
    str r0, [sp, #0x004]
    adds r0, r5, #0x0
    movs r2, #0xD8
    lsls r2, r2, #0x02
    movs r3, #0x0C
    bl sub_800E728
    cmp r4, #0x00
    beq _0801B668
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    movs r0, #0x00
    movs r1, #0x04
    movs r2, #0x07
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    movs r2, #0xC8
    lsls r2, r2, #0x02
    movs r3, #0x0F
    bl sub_800C6D4
    b _0801B668
    _0801B658: .4byte 0x00000FFF
    _0801B65C: .4byte 0x080DA76C
    _0801B660:
    ldr r1, _0801B6CC @ =0x080DA88C
    movs r0, #0x00
    bl sub_80142CC
    _0801B668:
    movs r0, #0x00
    adds r1, r6, #0x0
    bl sub_80142CC
    movs r0, #0x01
    bl map_setBufferDirty
    movs r0, #0x02
    bl map_setBufferDirty
    bl dmaq_getVBlankDmaQueue
    ldr r4, _0801B6D0 @ =0x02004400
    adds r1, r4, #0x0
    ldr r2, _0801B6D4 @ =0x06001000
    ldr r3, _0801B6D8 @ =0x80000400
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    movs r1, #0x80
    lsls r1, r1, #0x07
    adds r4, r4, r1
    adds r1, r4, #0x0
    ldr r2, _0801B6DC @ =0x06002000
    ldr r3, _0801B6D8 @ =0x80000400
    bl dmaq_enqueue
    _0801B6A0:
    mov r2, r8
    ldr r1, [r2, #0x04]
    ldr r0, [r2, #0x00]
    adds r1, r1, r0
    subs r2, r1, #0x1
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _0801B6B2
    adds r0, r1, #0x2
    _0801B6B2:
    asrs r0, r0, #0x02
    ldr r1, [sp, #0x010]
    cmp r1, r0
    beq _0801B734
    movs r2, #0x00
    cmp r0, #0x04
    bhi _0801B71A
    lsls r0, r0, #0x02
    ldr r1, _0801B6E0 @ =0x0801B6E4
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
    _0801B6CC: .4byte 0x080DA88C
    _0801B6D0: .4byte 0x02004400
    _0801B6D4: .4byte 0x06001000
    _0801B6D8: .4byte 0x80000400
    _0801B6DC: .4byte 0x06002000
    _0801B6E0: .4byte 0x0801B6E4
    .byte 0xF8, 0xB6, 0x01, 0x08, 0x00, 0xB7, 0x01, 0x08, 0x08, 0xB7, 0x01, 0x08, 0x10, 0xB7, 0x01, 0x08
    .byte 0x18, 0xB7, 0x01, 0x08, 0x00, 0x4A, 0x0E, 0xE0, 0xB4, 0xDC, 0x07, 0x08, 0x00, 0x4A, 0x0A, 0xE0
    .byte 0xC8, 0xDD, 0x07, 0x08, 0x00, 0x4A, 0x06, 0xE0, 0xDC, 0xDE, 0x07, 0x08, 0x00, 0x4A, 0x02, 0xE0
    .byte 0xF8, 0xDF, 0x07, 0x08, 0x11, 0x4A
    _0801B71A:
    cmp r2, #0x00
    beq _0801B726
    ldr r1, _0801B764 @ =0x02008400
    adds r0, r2, #0x0
    bl LZ77UnCompWram
    _0801B726:
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0801B764 @ =0x02008400
    ldr r2, _0801B768 @ =0x06002000
    ldr r3, _0801B76C @ =0x80000400
    bl dmaq_enqueue
    _0801B734:
    movs r0, #0x02
    ldr r2, [sp, #0x00C]
    ands r0, r2
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    cmp r5, #0x00
    beq _0801B774
    movs r0, #0x90
    bl m4aSongNumStart
    movs r3, #0x00
    movs r2, #0x04
    ldr r0, [sp, #0x008]
    strb r2, [r0, #0x0F]
    ldr r1, _0801B770 @ =0x03000190
    ldr r0, [r1, #0x00]
    strb r2, [r0, #0x02]
    ldr r0, [r1, #0x00]
    str r3, [r0, #0x04]
    bl sub_801D25C
    b _0801B8C6
    .byte 0x0C, 0xE1, 0x07, 0x08
    _0801B764: .4byte 0x02008400
    _0801B768: .4byte 0x06002000
    _0801B76C: .4byte 0x80000400
    _0801B770: .4byte 0x03000190
    _0801B774:
    movs r0, #0x09
    ldr r1, [sp, #0x00C]
    ands r0, r1
    cmp r0, #0x00
    bne _0801B780
    b _0801B8C6
    _0801B780:
    mov r2, r8
    ldr r1, [r2, #0x00]
    ldr r0, [r2, #0x04]
    adds r4, r1, r0
    cmp r4, #0x00
    bne _0801B7B0
    movs r0, #0x8E
    bl m4aSongNumStart
    ldr r1, _0801B7AC @ =0x03000190
    ldr r0, [r1, #0x00]
    strb r4, [r0, #0x12]
    movs r2, #0x03
    ldr r0, [r1, #0x00]
    strb r2, [r0, #0x02]
    ldr r0, [r1, #0x00]
    str r4, [r0, #0x04]
    movs r0, #0x01
    ldr r1, [sp, #0x008]
    strb r0, [r1, #0x0F]
    b _0801B8C6
    .byte 0x00, 0x00
    _0801B7AC: .4byte 0x03000190
    _0801B7B0:
    cmp r4, #0x15
    bne _0801B7D8
    movs r0, #0x8E
    bl m4aSongNumStart
    movs r2, #0x04
    ldr r1, _0801B7D4 @ =0x03000190
    ldr r0, [r1, #0x00]
    strb r2, [r0, #0x02]
    ldr r0, [r1, #0x00]
    str r5, [r0, #0x04]
    movs r0, #0x01
    ldr r2, [sp, #0x008]
    strb r0, [r2, #0x0F]
    bl sub_801D25C
    b _0801B8C6
    .byte 0x00, 0x00
    _0801B7D4: .4byte 0x03000190
    _0801B7D8:
    subs r1, r4, #0x1
    cmp r1, #0x13
    bhi _0801B7F0
    ldr r0, _0801B7EC @ =0x03000190
    ldr r0, [r0, #0x00]
    lsls r1, r1, #0x02
    adds r0, #0x4C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    b _0801B7F2
    _0801B7EC: .4byte 0x03000190
    _0801B7F0:
    movs r0, #0x00
    _0801B7F2:
    cmp r0, #0x00
    beq _0801B8C0
    movs r0, #0x8E
    bl m4aSongNumStart
    movs r0, #0x00
    bl map_clearBuffer
    mov r0, r8
    ldr r1, [r0, #0x00]
    ldr r0, [r0, #0x04]
    adds r0, r1, r0
    subs r0, #0x01
    ldr r6, _0801B888 @ =0x080DA7F8
    cmp r0, #0x13
    bhi _0801B894
    bl track_getMKSCTrack
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    bl sub_805CE3C
    lsls r0, r0, #0x18
    asrs r4, r0, #0x18
    movs r0, #0x01
    negs r0, r0
    cmp r4, r0
    beq _0801B88C
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    adds r0, r4, #0x0
    bl sub_805DE90
    adds r5, r0, #0x0
    lsls r5, r5, #0x18
    asrs r5, r5, #0x18
    adds r0, r4, #0x0
    bl sub_805DEB8
    lsls r0, r0, #0x10
    asrs r4, r0, #0x10
    movs r0, #0x00
    movs r1, #0x02
    movs r2, #0x07
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    movs r0, #0xB0
    lsls r0, r0, #0x02
    str r0, [sp, #0x000]
    movs r0, #0x0F
    str r0, [sp, #0x004]
    adds r0, r5, #0x0
    movs r2, #0xD8
    lsls r2, r2, #0x02
    movs r3, #0x0C
    bl sub_800E728
    cmp r4, #0x00
    beq _0801B894
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    movs r0, #0x00
    movs r1, #0x04
    movs r2, #0x07
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    movs r2, #0xC8
    lsls r2, r2, #0x02
    movs r3, #0x0F
    bl sub_800C6D4
    b _0801B894
    _0801B888: .4byte 0x080DA7F8
    _0801B88C:
    ldr r1, _0801B8B8 @ =0x080DA88C
    movs r0, #0x00
    bl sub_80142CC
    _0801B894:
    movs r0, #0x00
    adds r1, r6, #0x0
    bl sub_80142CC
    movs r0, #0x01
    bl map_setBufferDirty
    movs r3, #0x00
    ldr r1, [sp, #0x008]
    strb r3, [r1, #0x12]
    movs r2, #0x03
    ldr r1, _0801B8BC @ =0x03000190
    ldr r0, [r1, #0x00]
    strb r2, [r0, #0x02]
    ldr r0, [r1, #0x00]
    str r3, [r0, #0x04]
    b _0801B8C6
    .byte 0x00, 0x00
    _0801B8B8: .4byte 0x080DA88C
    _0801B8BC: .4byte 0x03000190
    _0801B8C0:
    movs r0, #0x91
    bl m4aSongNumStart
    _0801B8C6:
    add sp, #0x014
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_801B8D8
    sub_801B8D8:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    add sp, #-0x014
    adds r6, r0, #0x0
    ldr r0, _0801B900 @ =0x00000504
    adds r7, r6, r0
    movs r1, #0xD4
    lsls r1, r1, #0x03
    adds r2, r6, r1
    ldrb r0, [r6, #0x02]
    cmp r0, #0x05
    bls _0801B8F4
    b _0801BBA4
    _0801B8F4:
    lsls r0, r0, #0x02
    ldr r1, _0801B904 @ =0x0801B908
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
    _0801B900: .4byte 0x00000504
    _0801B904: .4byte 0x0801B908
    .byte 0x20, 0xB9, 0x01, 0x08, 0x54, 0xB9, 0x01, 0x08, 0x78, 0xB9, 0x01, 0x08, 0x80, 0xB9, 0x01, 0x08
    .byte 0xB8, 0xBA, 0x01, 0x08, 0xD8, 0xBA, 0x01, 0x08, 0x0A, 0x49, 0x70, 0x18, 0x00, 0x24, 0x04, 0x60
    .byte 0x44, 0x60, 0x84, 0x60, 0xC4, 0x60, 0x04, 0x61, 0x44, 0x61, 0x30, 0x1C, 0xFC, 0xF7, 0x7C, 0xF9
    .byte 0x3F, 0x20, 0x01, 0xF0, 0x81, 0xFC, 0x04, 0x4A, 0x11, 0x68, 0x88, 0x78, 0x01, 0x30, 0x88, 0x70
    .byte 0x2A, 0xE1, 0x00, 0x00, 0x04, 0x05, 0x00, 0x00, 0x90, 0x01, 0x00, 0x03, 0x01, 0xF0, 0x9A, 0xFC
    .byte 0x04, 0x1C, 0x00, 0x2C, 0x00, 0xD0, 0x21, 0xE1, 0x25, 0x20, 0x44, 0xF0, 0xDD, 0xFA, 0x03, 0x4A
    .byte 0x11, 0x68, 0x88, 0x78, 0x01, 0x30, 0x88, 0x70, 0x16, 0xE1, 0x00, 0x00, 0x90, 0x01, 0x00, 0x03
    .byte 0x30, 0x1C, 0xFF, 0xF7, 0x9F, 0xFD, 0x11, 0xE1, 0x11, 0xF0, 0x7C, 0xFD, 0x09, 0x24, 0x04, 0x40
    .byte 0x00, 0x2C, 0x11, 0xD0, 0x00, 0x23, 0x03, 0x20, 0xF0, 0x73, 0x04, 0x22, 0x05, 0x49, 0x08, 0x68
    .byte 0x82, 0x70, 0x08, 0x68, 0x43, 0x60, 0x01, 0xF0, 0x5D, 0xFC, 0x8F, 0x20, 0x44, 0xF0, 0xBC, 0xFA
    .byte 0x67, 0xE0, 0x00, 0x00, 0x90, 0x01, 0x00, 0x03, 0x11, 0xF0, 0x64, 0xFD, 0x02, 0x21, 0x01, 0x40
    .byte 0x00, 0x29, 0x5E, 0xD0, 0x27, 0x4A, 0x11, 0x68, 0x02, 0x20, 0x88, 0x70, 0x10, 0x68, 0x44, 0x60
    .byte 0x90, 0x20, 0x44, 0xF0, 0xA9, 0xFA, 0x00, 0x20, 0x12, 0xF0, 0x80, 0xFE, 0x39, 0x68, 0x78, 0x68
    .byte 0x08, 0x18, 0x01, 0x38, 0x20, 0x49, 0x88, 0x46, 0x13, 0x28, 0x43, 0xD8, 0x18, 0xF0, 0xE2, 0xF8
    .byte 0x00, 0x06, 0x00, 0x0E, 0x41, 0xF0, 0x26, 0xFA, 0x00, 0x06, 0x04, 0x16, 0x01, 0x20, 0x40, 0x42
    .byte 0x84, 0x42, 0x33, 0xD0, 0x24, 0x06, 0x24, 0x0E, 0x20, 0x1C, 0x42, 0xF0, 0x45, 0xFA, 0x05, 0x1C
    .byte 0x2D, 0x06, 0x2D, 0x16, 0x20, 0x1C, 0x42, 0xF0, 0x53, 0xFA, 0x00, 0x04, 0x04, 0x14, 0x00, 0x20
    .byte 0x02, 0x21, 0x07, 0x22, 0x12, 0xF0, 0x48, 0xFE, 0x01, 0x1C, 0xB0, 0x20, 0x80, 0x00, 0x00, 0x90
    .byte 0x0F, 0x20, 0x01, 0x90, 0x28, 0x1C, 0xD8, 0x22, 0x92, 0x00, 0x0C, 0x23, 0xF2, 0xF7, 0x78, 0xFE
    .byte 0x00, 0x2C, 0x17, 0xD0, 0x24, 0x04, 0x24, 0x0C, 0x00, 0x20, 0x04, 0x21, 0x07, 0x22, 0x12, 0xF0
    .byte 0x33, 0xFE, 0x01, 0x1C, 0x20, 0x1C, 0xC8, 0x22, 0x92, 0x00, 0x0F, 0x23, 0xF0, 0xF7, 0x3E, 0xFE
    .byte 0x08, 0xE0, 0x00, 0x00, 0x90, 0x01, 0x00, 0x03, 0x6C, 0xA7, 0x0D, 0x08, 0x11, 0x49, 0x00, 0x20
    .byte 0xF8, 0xF7, 0x30, 0xFC, 0x00, 0x20, 0x41, 0x46, 0xF8, 0xF7, 0x2C, 0xFC, 0x01, 0x20, 0x12, 0xF0
    .byte 0x41, 0xFE, 0xB0, 0x7C, 0x01, 0x30, 0x00, 0x21, 0xB0, 0x74, 0x00, 0x06, 0x00, 0x0E, 0x1E, 0x28
    .byte 0x00, 0xD9, 0xB1, 0x74, 0xB0, 0x7C, 0x13, 0x28, 0x00, 0xD9, 0x87, 0xE0, 0x06, 0x48, 0x02, 0x90
    .byte 0x06, 0x48, 0x00, 0x91, 0x01, 0x91, 0x02, 0xA9, 0x00, 0x22, 0x00, 0x23, 0x13, 0xF0, 0xBA, 0xFF
    .byte 0x7C, 0xE0, 0x00, 0x00, 0x8C, 0xA8, 0x0D, 0x08, 0xD8, 0x00, 0x90, 0x00, 0x20, 0x95, 0x0C, 0x08
    .byte 0x01, 0xF0, 0xE8, 0xFB, 0x03, 0x1C, 0x00, 0x2B, 0x70, 0xD1, 0x04, 0x4A, 0x11, 0x68, 0x88, 0x78
    .byte 0x01, 0x30, 0x88, 0x70, 0x10, 0x68, 0x43, 0x60, 0x68, 0xE0, 0x00, 0x00, 0x90, 0x01, 0x00, 0x03
    .byte 0xF4, 0x7B, 0x01, 0x2C, 0x0B, 0xD0, 0x01, 0x2C, 0x02, 0xDC, 0x00, 0x2C, 0x05, 0xD0, 0x5D, 0xE0
    .byte 0x03, 0x2C, 0x10, 0xD0, 0x04, 0x2C, 0x43, 0xD0, 0x58, 0xE0, 0x13, 0x23, 0x4C, 0xE0, 0x51, 0x78
    .byte 0x10, 0x78, 0x00, 0x28, 0x01, 0xD0, 0x02, 0x20, 0x00, 0xE0, 0x04, 0x20, 0x08, 0x43, 0x00, 0x24
    .byte 0x50, 0x70, 0x10, 0x23, 0x40, 0xE0, 0x18, 0x49, 0x08, 0x68, 0x02, 0x78, 0x00, 0x23, 0x42, 0x70
    .byte 0x08, 0x68, 0x04, 0x70, 0x08, 0x68, 0x83, 0x70, 0x08, 0x68, 0x43, 0x60, 0x38, 0x68, 0x79, 0x68
    .byte 0x40, 0x18, 0x44, 0x1E, 0x13, 0x2C, 0x21, 0xD8, 0x20, 0x1C, 0x18, 0xF0, 0x3B, 0xF8, 0x00, 0x06
    .byte 0x00, 0x0E, 0x41, 0xF0, 0x7F, 0xF9, 0x00, 0x06, 0x05, 0x16, 0x01, 0x20, 0x40, 0x42, 0x85, 0x42
    .byte 0x2C, 0xD0, 0x01, 0x20, 0x30, 0x77, 0x74, 0x77, 0x2C, 0x06, 0x24, 0x0E, 0x20, 0x1C, 0x42, 0xF0
    .byte 0x9B, 0xF9, 0xB0, 0x77, 0x20, 0x1C, 0x42, 0xF0, 0xAB, 0xF9, 0x00, 0x04, 0x00, 0x14, 0x30, 0x62
    .byte 0x30, 0x1C, 0x24, 0x30, 0x05, 0x70, 0x19, 0xE0, 0x90, 0x01, 0x00, 0x03, 0x33, 0x77, 0x15, 0xE0
    .byte 0x51, 0x78, 0x10, 0x78, 0x00, 0x28, 0x02, 0xD0, 0x02, 0x20, 0x08, 0x43, 0x01, 0xE0, 0x08, 0x1C
    .byte 0x20, 0x43, 0x00, 0x24, 0x50, 0x70, 0x01, 0x23, 0x1A, 0x4A, 0x11, 0x68, 0x08, 0x78, 0x48, 0x70
    .byte 0x10, 0x68, 0x03, 0x70, 0x10, 0x68, 0x84, 0x70, 0x10, 0x68, 0x44, 0x60
    _0801BBA4:
    ldr r4, [r6, #0x08]
    movs r0, #0x00
    bl pltt_getBuffer
    adds r2, r0, #0x0
    movs r0, #0xB0
    lsls r0, r0, #0x01
    adds r2, r2, r0
    ldr r0, _0801BC00 @ =0x080B23B0
    adds r1, r0, #0x0
    adds r1, #0x20
    movs r3, #0x10
    str r3, [sp, #0x000]
    adds r3, r4, #0x0
    bl sub_8005E04
    movs r0, #0x01
    bl pltt_setDirtyFlag
    adds r0, r7, #0x0
    bl sub_801B304
    ldr r0, [r6, #0x08]
    ldr r3, [r7, #0x00]
    movs r1, #0x0F
    str r1, [sp, #0x000]
    movs r1, #0xEE
    movs r2, #0x60
    bl sub_801B3B4
    ldr r1, [r7, #0x00]
    ldr r0, [r7, #0x04]
    adds r1, r1, r0
    subs r1, #0x01
    cmp r1, #0x13
    bhi _0801BC04
    ldr r0, _0801BBFC @ =0x03000190
    ldr r0, [r0, #0x00]
    lsls r1, r1, #0x02
    adds r0, #0x4C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    b _0801BC06
    .byte 0x00, 0x00
    _0801BBFC: .4byte 0x03000190
    _0801BC00: .4byte 0x080B23B0
    _0801BC04:
    movs r0, #0x00
    _0801BC06:
    cmp r0, #0x00
    beq _0801BC1E
    ldr r0, _0801BC4C @ =0x00390032
    str r0, [sp, #0x00C]
    ldr r0, _0801BC50 @ =0x080C95BC
    add r1, sp, #0x00C
    movs r2, #0x00
    str r2, [sp, #0x000]
    str r2, [sp, #0x004]
    movs r3, #0x00
    bl oam_renderCellData
    _0801BC1E:
    adds r1, r6, #0x0
    adds r1, #0x4C
    ldr r2, [r7, #0x00]
    ldr r3, [r7, #0x04]
    adds r0, r7, #0x0
    bl sub_801B1C0
    ldr r0, _0801BC54 @ =0x000B00D8
    str r0, [sp, #0x010]
    ldr r0, _0801BC58 @ =0x080C96D4
    add r1, sp, #0x010
    movs r2, #0x00
    str r2, [sp, #0x000]
    str r2, [sp, #0x004]
    movs r3, #0x00
    bl oam_renderCellData
    add sp, #0x014
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    _0801BC4C: .4byte 0x00390032
    _0801BC50: .4byte 0x080C95BC
    _0801BC54: .4byte 0x000B00D8
    _0801BC58: .4byte 0x080C96D4
    thumb_func_start sub_801BC5C
    sub_801BC5C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x018
    adds r5, r0, #0x0
    movs r0, #0x8E
    lsls r0, r0, #0x01
    adds r6, r5, r0
    movs r1, #0xE5
    lsls r1, r1, #0x02
    adds r0, r5, r1
    ldr r0, [r0, #0x00]
    mov r8, r0
    ldr r0, [r6, #0x08]
    cmp r0, r8
    beq _0801BCE6
    mov r2, r8
    cmp r2, #0x01
    bgt _0801BCA4
    movs r0, #0x00
    str r0, [sp, #0x008]
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    ldr r2, _0801BCA0 @ =0x01000080
    add r0, sp, #0x008
    bl CpuFastSet
    b _0801BCC2
    .byte 0x00, 0x00
    _0801BCA0: .4byte 0x01000080
    _0801BCA4:
    ldr r1, _0801BD80 @ =0x080D9E44
    mov r0, r8
    subs r0, #0x02
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    movs r0, #0x00
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl LZ77UnCompWram
    _0801BCC2:
    movs r0, #0x01
    bl map_setBufferDirty
    mov r3, r8
    str r3, [r6, #0x08]
    movs r4, #0x9F
    lsls r4, r4, #0x02
    adds r1, r6, r4
    movs r0, #0x00
    str r0, [r1, #0x00]
    movs r0, #0xA1
    lsls r0, r0, #0x02
    adds r1, r6, r0
    movs r2, #0xA0
    lsls r2, r2, #0x02
    adds r0, r6, r2
    ldr r0, [r0, #0x00]
    str r0, [r1, #0x00]
    _0801BCE6:
    movs r3, #0x9E
    lsls r3, r3, #0x02
    adds r0, r6, r3
    ldr r0, [r0, #0x00]
    cmp r0, #0x01
    bgt _0801BD90
    movs r1, #0x80
    lsls r1, r1, #0x01
    ldr r2, [r5, #0x08]
    movs r0, #0x0B
    str r0, [sp, #0x000]
    movs r0, #0x80
    movs r3, #0x10
    bl sub_800E930
    adds r5, r0, #0x0
    movs r4, #0x9F
    lsls r4, r4, #0x02
    adds r1, r6, r4
    ldr r0, [r1, #0x00]
    adds r0, #0x01
    str r0, [r1, #0x00]
    cmp r0, #0x10
    bgt _0801BD52
    ldr r1, _0801BD84 @ =0x080E645C
    lsls r0, r0, #0x1A
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0801BD22
    adds r0, #0x3F
    _0801BD22:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r3, [r0, #0x00]
    movs r0, #0xA1
    lsls r0, r0, #0x02
    adds r2, r6, r0
    movs r4, #0x00
    ldsh r1, [r2, r4]
    movs r0, #0x78
    subs r0, r0, r1
    muls r0, r3
    asrs r0, r0, #0x0F
    ldrh r2, [r2, #0x00]
    adds r0, r0, r2
    movs r2, #0xA0
    lsls r2, r2, #0x02
    adds r1, r6, r2
    strh r0, [r1, #0x00]
    ldr r3, _0801BD88 @ =0x00000282
    adds r1, r6, r3
    movs r0, #0x45
    strh r0, [r1, #0x00]
    _0801BD52:
    movs r0, #0xA0
    lsls r0, r0, #0x02
    adds r4, r6, r0
    movs r1, #0xA2
    lsls r1, r1, #0x02
    adds r0, r6, r1
    movs r2, #0x00
    ldsh r1, [r4, r2]
    movs r3, #0x02
    ldsh r2, [r4, r3]
    adds r3, r5, #0x0
    bl sub_801404C
    ldr r0, _0801BD8C @ =0x080CA6E8
    movs r1, #0x00
    str r1, [sp, #0x000]
    str r1, [sp, #0x004]
    adds r1, r4, #0x0
    adds r2, r5, #0x0
    adds r3, r5, #0x0
    bl oam_renderCellData
    b _0801BEE4
    _0801BD80: .4byte 0x080D9E44
    _0801BD84: .4byte gSinTable
    _0801BD88: .4byte 0x00000282
    _0801BD8C: .4byte 0x080CA6E8
    _0801BD90:
    movs r7, #0x00
    cmp r7, r8
    blt _0801BD98
    b _0801BEE4
    _0801BD98:
    ldr r4, _0801BE10 @ =0xFFFF0000
    mov r10, r4
    ldr r0, _0801BE14 @ =0x0000FFFF
    mov r9, r0
    _0801BDA0:
    ldr r0, _0801BE18 @ =0x080D9F5C
    mov r1, r8
    subs r1, #0x02
    adds r1, r1, r0
    lsls r0, r7, #0x04
    subs r0, r0, r7
    lsls r0, r0, #0x02
    ldrb r1, [r1, #0x00]
    adds r3, r0, r1
    ldr r2, [r6, #0x04]
    cmp r7, r2
    bne _0801BE24
    movs r2, #0x9F
    lsls r2, r2, #0x02
    adds r1, r6, r2
    ldr r0, [r1, #0x00]
    adds r0, #0x01
    str r0, [r1, #0x00]
    cmp r0, #0x10
    bgt _0801BE02
    ldr r1, _0801BE1C @ =0x080E645C
    lsls r0, r0, #0x1A
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0801BDD4
    adds r0, #0x3F
    _0801BDD4:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r2, [r0, #0x00]
    movs r4, #0xA1
    lsls r4, r4, #0x02
    adds r1, r6, r4
    movs r4, #0x00
    ldsh r0, [r1, r4]
    subs r0, r3, r0
    muls r0, r2
    asrs r0, r0, #0x0F
    ldrh r1, [r1, #0x00]
    adds r0, r0, r1
    movs r2, #0xA0
    lsls r2, r2, #0x02
    adds r1, r6, r2
    strh r0, [r1, #0x00]
    ldr r3, _0801BE20 @ =0x00000282
    adds r1, r6, r3
    movs r0, #0x45
    strh r0, [r1, #0x00]
    _0801BE02:
    movs r4, #0xA0
    lsls r4, r4, #0x02
    adds r0, r6, r4
    ldr r0, [r0, #0x00]
    str r0, [sp, #0x014]
    ldr r2, [r6, #0x04]
    b _0801BE3C
    _0801BE10: .4byte 0xFFFF0000
    _0801BE14: .4byte 0x0000FFFF
    _0801BE18: .4byte 0x080D9F5C
    _0801BE1C: .4byte gSinTable
    _0801BE20: .4byte 0x00000282
    _0801BE24:
    lsls r0, r3, #0x10
    lsrs r0, r0, #0x10
    ldr r1, [sp, #0x014]
    mov r3, r10
    ands r1, r3
    orrs r1, r0
    mov r4, r9
    ands r1, r4
    movs r0, #0x8A
    lsls r0, r0, #0x0F
    orrs r1, r0
    str r1, [sp, #0x014]
    _0801BE3C:
    add r5, sp, #0x014
    cmp r7, r2
    bne _0801BE74
    ldrh r0, [r5, #0x00]
    ldr r1, [sp, #0x00C]
    mov r2, r10
    ands r1, r2
    orrs r1, r0
    ldr r0, [sp, #0x014]
    asrs r0, r0, #0x10
    adds r0, #0x10
    lsls r0, r0, #0x10
    mov r3, r9
    ands r1, r3
    orrs r1, r0
    str r1, [sp, #0x00C]
    ldr r1, _0801BEC0 @ =0x080D9F60
    lsls r0, r7, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    movs r1, #0x00
    str r1, [sp, #0x000]
    str r1, [sp, #0x004]
    add r1, sp, #0x00C
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    _0801BE74:
    ldrh r0, [r5, #0x00]
    subs r0, #0x01
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    ldr r1, [sp, #0x010]
    mov r4, r10
    ands r1, r4
    orrs r1, r0
    ldr r0, [sp, #0x014]
    asrs r0, r0, #0x10
    adds r0, #0x01
    lsls r0, r0, #0x10
    mov r2, r9
    ands r1, r2
    orrs r1, r0
    str r1, [sp, #0x010]
    movs r4, #0x00
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    ldr r0, _0801BEC4 @ =0x080D9E3C
    add r1, sp, #0x010
    movs r2, #0xAA
    movs r3, #0xCC
    bl oam_renderCellData
    ldr r0, [r6, #0x04]
    cmp r7, r0
    bne _0801BECC
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    ldr r0, _0801BEC8 @ =0x080D9E2C
    adds r1, r5, #0x0
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    b _0801BEDC
    .byte 0x00, 0x00
    _0801BEC0: .4byte 0x080D9F60
    _0801BEC4: .4byte 0x080D9E3C
    _0801BEC8: .4byte 0x080D9E2C
    _0801BECC:
    str r4, [sp, #0x000]
    str r4, [sp, #0x004]
    ldr r0, _0801BEF4 @ =0x080D9E34
    adds r1, r5, #0x0
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    _0801BEDC:
    adds r7, #0x01
    cmp r7, r8
    bge _0801BEE4
    b _0801BDA0
    _0801BEE4:
    add sp, #0x018
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    _0801BEF4: .4byte 0x080D9E34
    thumb_func_start sub_801BEF8
    sub_801BEF8:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x014
    str r0, [sp, #0x008]
    movs r1, #0x8E
    lsls r1, r1, #0x01
    adds r0, r0, r1
    mov r9, r0
    movs r2, #0x01
    str r2, [sp, #0x00C]
    ldr r0, _0801BF58 @ =0x080C3D6A
    str r0, [sp, #0x010]
    movs r1, #0x00
    mov r8, r1
    ldr r2, [sp, #0x008]
    movs r0, #0xF0
    lsls r0, r0, #0x02
    adds r7, r2, r0
    movs r1, #0xB1
    lsls r1, r1, #0x01
    mov r10, r1
    _0801BF28:
    movs r0, #0x9E
    lsls r0, r0, #0x02
    add r0, r9
    ldr r0, [r0, #0x00]
    ldr r2, [sp, #0x00C]
    cmp r2, r0
    bge _0801BF90
    ldr r0, [r7, #0x00]
    cmp r0, #0x00
    bne _0801BF42
    movs r0, #0x8E
    bl m4aSongNumStart
    _0801BF42:
    ldr r1, [r7, #0x00]
    adds r0, r1, #0x1
    str r0, [r7, #0x00]
    cmp r0, #0x10
    bgt _0801BF60
    adds r5, r0, #0x0
    ldr r6, _0801BF58 @ =0x080C3D6A
    add r6, r8
    ldr r4, _0801BF5C @ =0x080C3D7E
    b _0801BF6A
    .byte 0x00, 0x00
    _0801BF58: .4byte 0x080C3D6A
    _0801BF5C: .4byte 0x080C3D7E
    _0801BF60:
    adds r5, r1, #0x0
    subs r5, #0x0F
    ldr r6, _0801BF88 @ =0x080C3D7E
    add r6, r8
    ldr r4, _0801BF8C @ =0x080C3D74
    _0801BF6A:
    add r4, r8
    movs r0, #0x00
    bl pltt_getBuffer
    adds r2, r0, #0x0
    add r2, r10
    str r5, [sp, #0x000]
    movs r0, #0x10
    str r0, [sp, #0x004]
    adds r0, r6, #0x0
    adds r1, r4, #0x0
    movs r3, #0x05
    bl sub_800F2D8
    b _0801BFB8
    _0801BF88: .4byte 0x080C3D7E
    _0801BF8C: .4byte 0x080C3D74
    _0801BF90:
    ldr r1, [sp, #0x008]
    ldrb r0, [r1, #0x02]
    cmp r0, #0x04
    beq _0801BFA4
    ldr r0, [r7, #0x00]
    cmp r0, #0x00
    ble _0801BFA4
    movs r0, #0x90
    bl m4aSongNumStart
    _0801BFA4:
    movs r0, #0x00
    str r0, [r7, #0x00]
    bl pltt_getBuffer
    adds r1, r0, #0x0
    add r1, r10
    ldr r0, [sp, #0x010]
    movs r2, #0x05
    bl CpuSet
    _0801BFB8:
    ldr r2, [sp, #0x010]
    adds r2, #0x20
    str r2, [sp, #0x010]
    movs r0, #0x20
    add r8, r0
    adds r7, #0x04
    add r10, r0
    ldr r1, [sp, #0x00C]
    adds r1, #0x01
    str r1, [sp, #0x00C]
    cmp r1, #0x03
    ble _0801BF28
    movs r1, #0xAB
    lsls r1, r1, #0x02
    add r1, r9
    movs r0, #0x9E
    lsls r0, r0, #0x02
    add r0, r9
    ldr r0, [r0, #0x00]
    cmp r0, #0x01
    ble _0801C040
    mov r2, r9
    ldr r0, [r2, #0x04]
    cmp r0, #0x01
    bgt _0801BFF0
    movs r0, #0xA9
    lsls r0, r0, #0x02
    b _0801BFF8
    _0801BFF0:
    cmp r0, #0x02
    bgt _0801BFFE
    movs r0, #0xAA
    lsls r0, r0, #0x02
    _0801BFF8:
    add r0, r9
    ldr r0, [r0, #0x00]
    b _0801C000
    _0801BFFE:
    ldr r0, [r1, #0x00]
    _0801C000:
    cmp r0, #0x10
    bgt _0801C014
    adds r4, r0, #0x0
    ldr r6, _0801C00C @ =0x080C3DC8
    ldr r5, _0801C010 @ =0x080C3DE8
    b _0801C01C
    _0801C00C: .4byte 0x080C3DC8
    _0801C010: .4byte 0x080C3DE8
    _0801C014:
    adds r4, r0, #0x0
    subs r4, #0x10
    ldr r6, _0801C038 @ =0x080C3DE8
    ldr r5, _0801C03C @ =0x080C3DC8
    _0801C01C:
    movs r0, #0x01
    bl pltt_getBuffer
    adds r2, r0, #0x0
    adds r2, #0xC0
    str r4, [sp, #0x000]
    movs r0, #0x10
    str r0, [sp, #0x004]
    adds r0, r6, #0x0
    adds r1, r5, #0x0
    movs r3, #0x10
    bl sub_800F2D8
    b _0801C054
    _0801C038: .4byte 0x080C3DE8
    _0801C03C: .4byte 0x080C3DC8
    _0801C040:
    ldr r4, _0801C06C @ =0x080C3DC8
    movs r0, #0x01
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r1, #0xC0
    adds r0, r4, #0x0
    movs r2, #0x08
    bl CpuFastSet
    _0801C054:
    movs r0, #0x01
    bl pltt_setDirtyFlag
    add sp, #0x014
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _0801C06C: .4byte 0x080C3DC8
    thumb_func_start sub_801C070
    sub_801C070:
    push {lr}
    add sp, #-0x00C
    movs r1, #0xF3
    lsls r1, r1, #0x02
    adds r3, r0, r1
    movs r0, #0x0E
    ldsb r0, [r3, r0]
    cmp r0, #0x05
    bhi _0801C166
    lsls r0, r0, #0x02
    ldr r1, _0801C08C @ =0x0801C090
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    _0801C08C: .4byte 0x0801C090
    .byte 0x66, 0xC1, 0x01, 0x08, 0xA8, 0xC0, 0x01, 0x08, 0xB0, 0xC0, 0x01, 0x08, 0xEC, 0xC0, 0x01, 0x08
    .byte 0x0C, 0xC1, 0x01, 0x08, 0x1E, 0xC1, 0x01, 0x08, 0x00, 0x20, 0x18, 0x82, 0x02, 0x20, 0x30, 0xE0
    .byte 0x18, 0x8A, 0x01, 0x30, 0x18, 0x82, 0x00, 0x04, 0x00, 0x14, 0x10, 0x28, 0x12, 0xDC, 0x10, 0x22
    .byte 0x98, 0x5E, 0x07, 0x49, 0x80, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04
    .byte 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x02, 0x68, 0x04, 0x20, 0x19, 0x5E, 0xF0, 0x20, 0x36, 0xE0
    .byte 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x20, 0x18, 0x82, 0x03, 0x20, 0x3B, 0xE0, 0x18, 0x8A, 0x01, 0x30
    .byte 0x00, 0x21, 0x18, 0x82, 0x00, 0x04, 0x00, 0x14, 0x1E, 0x28, 0x00, 0xDD, 0x19, 0x82, 0x10, 0x22
    .byte 0x98, 0x5E, 0x09, 0x28, 0x06, 0xDC, 0x59, 0x81, 0x19, 0x81, 0x2C, 0xE0, 0x00, 0x20, 0x18, 0x82
    .byte 0x05, 0x20, 0x98, 0x73, 0x80, 0x20, 0x40, 0x00, 0x58, 0x81, 0x18, 0x81, 0x23, 0xE0, 0x18, 0x8A
    .byte 0x01, 0x30, 0x18, 0x82, 0x00, 0x04, 0x00, 0x14, 0x10, 0x28, 0x19, 0xDC, 0x10, 0x21, 0x58, 0x5E
    .byte 0x0A, 0x49, 0x80, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D
    .byte 0x80, 0x00, 0x40, 0x18, 0x02, 0x68, 0x04, 0x20, 0x19, 0x5E, 0x94, 0x20, 0x40, 0x00, 0x40, 0x1A
    .byte 0x50, 0x43, 0xC0, 0x13, 0x99, 0x88, 0x40, 0x18, 0x98, 0x80, 0x04, 0xE0, 0x5C, 0x64, 0x0E, 0x08
    .byte 0x00, 0x20, 0x18, 0x82, 0x98, 0x73
    _0801C166:
    movs r2, #0x08
    ldsh r0, [r3, r2]
    cmp r0, #0x00
    beq _0801C192
    movs r1, #0x0A
    ldsh r0, [r3, r1]
    cmp r0, #0x00
    beq _0801C192
    ldrh r1, [r3, #0x06]
    lsls r1, r1, #0x10
    ldrh r0, [r3, #0x04]
    orrs r0, r1
    str r0, [sp, #0x008]
    ldr r0, [r3, #0x00]
    movs r1, #0x00
    str r1, [sp, #0x000]
    str r1, [sp, #0x004]
    add r1, sp, #0x008
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    _0801C192:
    add sp, #0x00C
    pop {r0}
    bx r0
    thumb_func_start sub_801C198
    sub_801C198:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    adds r3, r0, #0x0
    movs r0, #0x8E
    lsls r0, r0, #0x01
    adds r0, r0, r3
    mov r9, r0
    movs r4, #0x00
    movs r6, #0x80
    lsls r6, r6, #0x01
    movs r5, #0x00
    mov r12, r5
    _0801C1B4:
    movs r0, #0xB2
    lsls r0, r0, #0x02
    add r0, r12
    mov r7, r9
    adds r2, r7, r0
    ldr r0, [r2, #0x1C]
    cmp r0, #0x01
    beq _0801C1FC
    cmp r0, #0x01
    bgt _0801C1CE
    cmp r0, #0x00
    beq _0801C1D8
    b _0801C27A
    _0801C1CE:
    cmp r0, #0x02
    beq _0801C20C
    cmp r0, #0x03
    beq _0801C248
    b _0801C27A
    _0801C1D8:
    ldr r0, _0801C1F8 @ =0x0000FFF0
    strh r0, [r2, #0x00]
    movs r0, #0x58
    strh r0, [r2, #0x02]
    movs r0, #0x60
    str r0, [r2, #0x04]
    subs r0, #0x61
    str r0, [r2, #0x08]
    str r4, [r2, #0x14]
    movs r0, #0x01
    str r0, [r2, #0x1C]
    str r5, [r2, #0x18]
    movs r0, #0x03
    str r0, [r2, #0x20]
    b _0801C27A
    .byte 0x00, 0x00
    _0801C1F8: .4byte 0x0000FFF0
    _0801C1FC:
    ldr r0, [r2, #0x18]
    subs r0, #0x01
    str r0, [r2, #0x18]
    cmp r0, #0x00
    bge _0801C27A
    movs r0, #0x00
    str r0, [r2, #0x18]
    b _0801C276
    _0801C20C:
    ldr r0, [r3, #0x08]
    movs r1, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _0801C22A
    ldrh r0, [r2, #0x00]
    adds r0, #0x01
    strh r0, [r2, #0x00]
    ldr r0, [r3, #0x08]
    ands r0, r1
    cmp r0, #0x00
    beq _0801C22A
    ldrh r0, [r2, #0x02]
    adds r0, #0x01
    b _0801C22E
    _0801C22A:
    ldrh r0, [r2, #0x02]
    subs r0, #0x01
    _0801C22E:
    strh r0, [r2, #0x02]
    ldrh r1, [r2, #0x00]
    movs r7, #0x00
    ldsh r0, [r2, r7]
    cmp r0, r6
    ble _0801C27A
    ldr r7, _0801C244 @ =0xFFFFFEF0
    adds r0, r1, r7
    strh r0, [r2, #0x00]
    movs r0, #0x03
    b _0801C278
    _0801C244: .4byte 0xFFFFFEF0
    _0801C248:
    ldr r0, [r3, #0x08]
    movs r1, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _0801C258
    ldrh r0, [r2, #0x00]
    adds r0, #0x01
    strh r0, [r2, #0x00]
    _0801C258:
    ldr r0, [r2, #0x04]
    adds r0, #0x02
    movs r1, #0x7F
    ands r0, r1
    str r0, [r2, #0x04]
    ldrh r1, [r2, #0x00]
    movs r7, #0x00
    ldsh r0, [r2, r7]
    cmp r0, r6
    ble _0801C27A
    ldr r7, _0801C294 @ =0xFFFFFEF0
    adds r0, r1, r7
    strh r0, [r2, #0x00]
    movs r0, #0x60
    str r0, [r2, #0x04]
    _0801C276:
    movs r0, #0x02
    _0801C278:
    str r0, [r2, #0x1C]
    _0801C27A:
    adds r5, #0x42
    movs r0, #0x24
    add r12, r0
    adds r4, #0x01
    cmp r4, #0x07
    ble _0801C1B4
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _0801C294: .4byte 0xFFFFFEF0
    thumb_func_start sub_801C298
    sub_801C298:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x00C
    movs r1, #0x8E
    lsls r1, r1, #0x01
    adds r1, r1, r0
    mov r9, r1
    bl sub_801C198
    movs r7, #0x00
    movs r2, #0x80
    lsls r2, r2, #0x01
    mov r10, r2
    movs r4, #0x00
    mov r8, r4
    _0801C2BC:
    lsls r0, r7, #0x03
    adds r0, r0, r7
    lsls r0, r0, #0x02
    movs r1, #0xB2
    lsls r1, r1, #0x02
    adds r0, r0, r1
    mov r2, r9
    adds r6, r2, r0
    ldr r0, [r6, #0x08]
    ldr r1, [r6, #0x04]
    cmp r0, r1
    beq _0801C316
    cmp r1, #0x3F
    ble _0801C2DE
    movs r0, #0x7F
    subs r0, r0, r1
    b _0801C2E0
    _0801C2DE:
    adds r0, r1, #0x0
    _0801C2E0:
    bl sub_8008600
    ldr r1, [r6, #0x14]
    lsls r4, r1, #0x01
    adds r4, r4, r1
    lsls r4, r4, #0x02
    subs r4, r4, r1
    lsls r4, r4, #0x0D
    lsls r0, r0, #0x09
    ldr r1, _0801C350 @ =0x08356800
    adds r0, r0, r1
    adds r4, r4, r0
    lsls r5, r7, #0x0A
    ldr r2, _0801C354 @ =0x06014000
    adds r5, r5, r2
    bl dmaq_getVBlankDmaQueue
    movs r3, #0x80
    lsls r3, r3, #0x18
    adds r1, r4, #0x0
    adds r2, r5, #0x0
    mov r4, r10
    orrs r3, r4
    bl dmaq_enqueue
    ldr r0, [r6, #0x04]
    str r0, [r6, #0x08]
    _0801C316:
    ldr r1, _0801C358 @ =0x080DA668
    lsls r0, r7, #0x02
    adds r0, r0, r1
    adds r4, r6, #0x0
    adds r4, #0x0C
    ldr r5, [sp, #0x008]
    adds r7, #0x01
    ldr r2, [r0, #0x00]
    adds r1, r4, #0x0
    movs r3, #0x03
    _0801C32A:
    ldrh r0, [r2, #0x00]
    strh r0, [r1, #0x00]
    adds r2, #0x02
    adds r1, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _0801C32A
    ldr r0, [r6, #0x04]
    movs r1, #0x40
    ands r0, r1
    cmp r0, #0x00
    beq _0801C35C
    ldrh r1, [r6, #0x10]
    movs r2, #0x80
    lsls r2, r2, #0x05
    adds r0, r2, #0x0
    orrs r0, r1
    b _0801C364
    .byte 0x00, 0x00
    _0801C350: .4byte 0x08356800
    _0801C354: .4byte 0x06014000
    _0801C358: .4byte 0x080DA668
    _0801C35C:
    ldrh r0, [r6, #0x10]
    ldr r2, _0801C3A8 @ =0x0000EFFF
    adds r1, r2, #0x0
    ands r0, r1
    _0801C364:
    strh r0, [r6, #0x10]
    ldrh r1, [r6, #0x12]
    ldr r2, _0801C3AC @ =0x0000F3FF
    adds r0, r2, #0x0
    ands r1, r0
    ldr r0, [r6, #0x20]
    lsls r0, r0, #0x0A
    orrs r1, r0
    strh r1, [r6, #0x12]
    ldrh r1, [r6, #0x02]
    lsls r1, r1, #0x10
    ldrh r0, [r6, #0x00]
    orrs r0, r1
    str r0, [sp, #0x008]
    mov r0, r8
    str r0, [sp, #0x000]
    str r0, [sp, #0x004]
    adds r0, r4, #0x0
    add r1, sp, #0x008
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    cmp r7, #0x07
    ble _0801C2BC
    add sp, #0x00C
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _0801C3A8: .4byte 0x0000EFFF
    _0801C3AC: .4byte 0x0000F3FF
    thumb_func_start sub_801C3B0
    sub_801C3B0:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    movs r1, #0x8E
    lsls r1, r1, #0x01
    adds r0, r5, r1
    movs r4, #0x00
    str r4, [r0, #0x04]
    str r4, [r0, #0x08]
    movs r3, #0x9E
    lsls r3, r3, #0x01
    adds r2, r5, r3
    ldr r3, _0801C484 @ =0x080DA630
    movs r0, #0x70
    movs r1, #0x14
    bl sub_8003FD0
    movs r1, #0xE5
    lsls r1, r1, #0x02
    adds r0, r5, r1
    str r4, [r0, #0x00]
    movs r3, #0xE6
    lsls r3, r3, #0x02
    adds r0, r5, r3
    str r4, [r0, #0x00]
    movs r0, #0xE7
    lsls r0, r0, #0x02
    adds r2, r5, r0
    movs r0, #0x78
    strh r0, [r2, #0x00]
    adds r3, #0x06
    adds r1, r5, r3
    movs r0, #0x45
    strh r0, [r1, #0x00]
    movs r0, #0xE8
    lsls r0, r0, #0x02
    adds r1, r5, r0
    ldr r0, [r2, #0x00]
    str r0, [r1, #0x00]
    movs r1, #0xE9
    lsls r1, r1, #0x02
    adds r0, r5, r1
    bl sub_8014044
    movs r2, #0x00
    movs r1, #0x03
    movs r3, #0xF2
    lsls r3, r3, #0x02
    adds r0, r5, r3
    _0801C410:
    str r2, [r0, #0x00]
    subs r0, #0x04
    subs r1, #0x01
    cmp r1, #0x00
    bge _0801C410
    movs r0, #0xF3
    lsls r0, r0, #0x02
    adds r1, r5, r0
    ldr r0, _0801C488 @ =0x080CA728
    str r0, [r1, #0x00]
    movs r3, #0x00
    movs r2, #0x00
    movs r0, #0x94
    lsls r0, r0, #0x01
    strh r0, [r1, #0x04]
    movs r0, #0x90
    strh r0, [r1, #0x06]
    adds r0, #0x70
    strh r0, [r1, #0x0A]
    strh r0, [r1, #0x08]
    strh r2, [r1, #0x0C]
    strb r3, [r1, #0x0E]
    strh r2, [r1, #0x10]
    movs r1, #0x07
    movs r3, #0x9C
    lsls r3, r3, #0x03
    adds r0, r5, r3
    _0801C446:
    str r2, [r0, #0x1C]
    subs r0, #0x24
    subs r1, #0x01
    cmp r1, #0x00
    bge _0801C446
    movs r1, #0x00
    _0801C452:
    adds r6, r1, #0x1
    movs r4, #0xFF
    _0801C456:
    ldr r0, [r5, #0x08]
    adds r0, #0x01
    str r0, [r5, #0x08]
    adds r0, r5, #0x0
    bl sub_801C198
    subs r4, #0x01
    cmp r4, #0x00
    bge _0801C456
    bl main_frameProc
    adds r1, r6, #0x0
    cmp r1, #0x01
    ble _0801C452
    adds r0, r5, #0x0
    bl sub_8017918
    adds r0, r5, #0x0
    bl sub_8017170
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    _0801C484: .4byte 0x080DA630
    _0801C488: .4byte 0x080CA728
    thumb_func_start sub_801C48C
    sub_801C48C:
    push {r4, r5, r6, r7, lr}
    add sp, #-0x00C
    adds r6, r0, #0x0
    movs r0, #0x8E
    lsls r0, r0, #0x01
    adds r4, r6, r0
    ldrb r0, [r6, #0x02]
    cmp r0, #0x05
    bls _0801C4A0
    b _0801C704
    _0801C4A0:
    lsls r0, r0, #0x02
    ldr r1, _0801C4AC @ =0x0801C4B0
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
    _0801C4AC: .4byte 0x0801C4B0
    .byte 0xC8, 0xC4, 0x01, 0x08, 0x98, 0xC6, 0x01, 0x08, 0xF4, 0xC4, 0x01, 0x08, 0xB8, 0xC5, 0x01, 0x08
    .byte 0x98, 0xC6, 0x01, 0x08, 0xBC, 0xC6, 0x01, 0x08, 0x30, 0x1C, 0xFF, 0xF7, 0x71, 0xFF, 0x07, 0x48
    .byte 0x00, 0xF0, 0xB6, 0xFE, 0x28, 0x20, 0x43, 0xF0, 0x23, 0xFD, 0x05, 0x4B, 0x19, 0x68, 0x88, 0x78
    .byte 0x01, 0x30, 0x00, 0x22, 0x88, 0x70, 0x18, 0x68, 0x42, 0x60, 0x0B, 0xE1, 0x44, 0x08, 0x00, 0x00
    .byte 0x90, 0x01, 0x00, 0x03, 0x30, 0x1C, 0xFA, 0xF7, 0xA7, 0xFE, 0x1B, 0x4A, 0xA1, 0x18, 0x00, 0x20
    .byte 0x08, 0x56, 0x03, 0x28, 0x01, 0xD1, 0x04, 0x20, 0x08, 0x70, 0x9E, 0x23, 0x9B, 0x00, 0xE5, 0x18
    .byte 0x28, 0x68, 0x02, 0x28, 0x2E, 0xD1, 0x03, 0x22, 0x14, 0x49, 0x08, 0x68, 0x00, 0x23, 0x82, 0x70
    .byte 0x08, 0x68, 0x43, 0x60, 0x28, 0x68, 0xA0, 0x60, 0x9F, 0x21, 0x89, 0x00, 0x60, 0x18, 0x03, 0x60
    .byte 0xA1, 0x22, 0x92, 0x00, 0xA1, 0x18, 0xA0, 0x23, 0x9B, 0x00, 0xE0, 0x18, 0x00, 0x68, 0x08, 0x60
    .byte 0x0B, 0x49, 0x28, 0x68, 0x02, 0x38, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68, 0x00, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x12, 0xF0, 0xAD, 0xF8, 0x01, 0x1C, 0x20, 0x1C, 0x44, 0xF0, 0x03, 0xFF, 0x01, 0x20
    .byte 0x12, 0xF0, 0xCC, 0xF8, 0xCE, 0xE0, 0x00, 0x00, 0xBE, 0x02, 0x00, 0x00, 0x90, 0x01, 0x00, 0x03
    .byte 0x44, 0x9E, 0x0D, 0x08, 0x0D, 0x48, 0x00, 0x88, 0x02, 0x21, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD1
    .byte 0xC0, 0xE0, 0x00, 0x20, 0xF0, 0x73, 0x00, 0x21, 0x11, 0x22, 0x9E, 0x24, 0x64, 0x00, 0x30, 0x19
    .byte 0x82, 0x73, 0x18, 0x30, 0x01, 0x31, 0x0C, 0x29, 0xFA, 0xD9, 0x00, 0xF0, 0x6B, 0xFE, 0x04, 0x4A
    .byte 0x04, 0x48, 0xA0, 0x21, 0x49, 0x00, 0x40, 0x18, 0x5B, 0xE0, 0x00, 0x00, 0xA0, 0x4E, 0x00, 0x03
    .byte 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08, 0x30, 0x1C, 0xFA, 0xF7, 0x45, 0xFE, 0x9E, 0x22
    .byte 0x92, 0x00, 0xA0, 0x18, 0x05, 0x68, 0x02, 0x2D, 0x01, 0xD0, 0x02, 0x23, 0x56, 0xE0, 0x15, 0x4B
    .byte 0xE1, 0x18, 0x00, 0x20, 0x08, 0x56, 0x00, 0x28, 0x01, 0xD1, 0x01, 0x20, 0x08, 0x70, 0xE4, 0x69
    .byte 0x09, 0x20, 0x04, 0x40, 0x00, 0x2C, 0x23, 0xD0, 0xF5, 0x73, 0x00, 0x21, 0x11, 0x22, 0x9E, 0x24
    .byte 0x64, 0x00, 0x30, 0x19, 0x82, 0x73, 0x18, 0x30, 0x01, 0x31, 0x0C, 0x29, 0xFA, 0xD9, 0x00, 0xF0
    .byte 0x39, 0xFE, 0x09, 0x4A, 0x09, 0x48, 0xA0, 0x21, 0x49, 0x00, 0x40, 0x18, 0x81, 0x88, 0x48, 0x00
    .byte 0x40, 0x18, 0x80, 0x00, 0x80, 0x18, 0x00, 0x68, 0x02, 0x21, 0x43, 0xF0, 0x4D, 0xFD, 0x8F, 0x20
    .byte 0x29, 0xE0, 0x00, 0x00, 0xBE, 0x02, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08
    .byte 0x00, 0x20, 0x10, 0xF0, 0x23, 0xFF, 0x05, 0x40, 0x28, 0x04, 0x00, 0x28, 0x62, 0xD0, 0xF4, 0x73
    .byte 0x00, 0x21, 0x11, 0x22, 0x9E, 0x23, 0x5B, 0x00, 0xF0, 0x18, 0x82, 0x73, 0x18, 0x30, 0x01, 0x31
    .byte 0x0C, 0x29, 0xFA, 0xD9, 0x00, 0xF0, 0x0E, 0xFE, 0x0C, 0x4A, 0x0D, 0x48, 0xA0, 0x24, 0x64, 0x00
    .byte 0x00, 0x19, 0x81, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x80, 0x18, 0x00, 0x68, 0x02, 0x21
    .byte 0x43, 0xF0, 0x22, 0xFD, 0x90, 0x20, 0x43, 0xF0, 0x53, 0xFC, 0x04, 0x23, 0x05, 0x49, 0x08, 0x68
    .byte 0x00, 0x22, 0x83, 0x70, 0x08, 0x68, 0x42, 0x60, 0x3C, 0xE0, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08
    .byte 0x98, 0x24, 0x10, 0x08, 0x90, 0x01, 0x00, 0x03, 0x30, 0x1C, 0xFA, 0xF7, 0xD5, 0xFD, 0x00, 0xF0
    .byte 0xF5, 0xFD, 0x03, 0x1C, 0x00, 0x2B, 0x2D, 0xD1, 0x03, 0x4A, 0x11, 0x68, 0x88, 0x78, 0x01, 0x30
    .byte 0x88, 0x70, 0x10, 0x68, 0x43, 0x60, 0x25, 0xE0, 0x90, 0x01, 0x00, 0x03, 0xF4, 0x7B, 0x00, 0x2C
    .byte 0x02, 0xD0, 0x02, 0x2C, 0x0E, 0xD0, 0x1D, 0xE0, 0x13, 0x23, 0x05, 0x4A, 0x11, 0x68, 0x08, 0x78
    .byte 0x48, 0x70, 0x10, 0x68, 0x03, 0x70, 0x10, 0x68, 0x84, 0x70, 0x10, 0x68, 0x44, 0x60, 0x11, 0xE0
    .byte 0x90, 0x01, 0x00, 0x03, 0x25, 0x49, 0x08, 0x68, 0x02, 0x78, 0x00, 0x23, 0x42, 0x70, 0x08, 0x68
    .byte 0x04, 0x70, 0x08, 0x68, 0x83, 0x70, 0x08, 0x68, 0x43, 0x60, 0xD4, 0x21, 0xC9, 0x00, 0x70, 0x18
    .byte 0xFA, 0xF7, 0xD2, 0xFE
    _0801C704:
    movs r2, #0x8E
    lsls r2, r2, #0x01
    adds r7, r6, r2
    movs r5, #0x00
    movs r3, #0x9E
    lsls r3, r3, #0x01
    adds r4, r6, r3
    _0801C712:
    adds r0, r4, #0x0
    bl sub_8003BB8
    adds r4, #0x18
    adds r5, #0x01
    cmp r5, #0x0C
    bls _0801C712
    movs r5, #0x00
    _0801C722:
    movs r0, #0x0C
    subs r0, r0, r5
    lsls r1, r0, #0x01
    adds r1, r1, r0
    lsls r1, r1, #0x03
    adds r1, #0x20
    adds r1, r7, r1
    ldrh r2, [r1, #0x06]
    lsls r2, r2, #0x10
    ldrh r0, [r1, #0x04]
    orrs r0, r2
    str r0, [sp, #0x008]
    ldr r0, [r1, #0x00]
    movs r4, #0x08
    ldsh r2, [r1, r4]
    movs r4, #0x0A
    ldsh r3, [r1, r4]
    movs r4, #0x0C
    ldsh r1, [r1, r4]
    str r1, [sp, #0x000]
    movs r1, #0x00
    str r1, [sp, #0x004]
    add r1, sp, #0x008
    bl oam_renderCellData
    adds r5, #0x01
    cmp r5, #0x0C
    bls _0801C722
    adds r0, r6, #0x0
    bl sub_801BC5C
    adds r0, r6, #0x0
    bl sub_801BEF8
    adds r0, r6, #0x0
    bl sub_801C070
    adds r0, r6, #0x0
    bl sub_801C298
    add sp, #0x00C
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00, 0x90, 0x01, 0x00, 0x03
    thumb_func_start sub_801C780
    sub_801C780:
    ldr r1, _0801C79C @ =0x03000190
    ldr r0, [r1, #0x00]
    movs r2, #0xE0
    lsls r2, r2, #0x03
    adds r3, r0, r2
    ldrb r0, [r3, #0x00]
    cmp r0, #0x02
    beq _0801C81C
    cmp r0, #0x02
    bgt _0801C7A0
    cmp r0, #0x01
    beq _0801C7A6
    b _0801C86E
    .byte 0x00, 0x00
    _0801C79C: .4byte 0x03000190
    _0801C7A0:
    cmp r0, #0x03
    beq _0801C804
    b _0801C86E
    _0801C7A6:
    ldrb r0, [r3, #0x01]
    adds r0, #0x01
    strb r0, [r3, #0x01]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x10
    bhi _0801C7E0
    ldr r2, [r1, #0x00]
    ldr r0, _0801C7D8 @ =0x000006EE
    adds r1, r2, r0
    ldrh r0, [r1, #0x00]
    movs r0, #0xBF
    strh r0, [r1, #0x00]
    ldrb r0, [r3, #0x01]
    lsls r0, r0, #0x04
    negs r0, r0
    cmp r0, #0x00
    bge _0801C7CC
    adds r0, #0x0F
    _0801C7CC:
    asrs r0, r0, #0x04
    adds r0, #0x10
    ldr r3, _0801C7DC @ =0x000006F2
    adds r1, r2, r3
    b _0801C83C
    .byte 0x00, 0x00
    _0801C7D8: .4byte 0x000006EE
    _0801C7DC: .4byte 0x000006F2
    _0801C7E0:
    ldr r1, [r1, #0x00]
    ldrh r2, [r3, #0x02]
    ldr r3, _0801C7FC @ =0x000006EE
    adds r0, r1, r3
    ldrh r3, [r0, #0x00]
    movs r3, #0x00
    strh r2, [r0, #0x00]
    movs r0, #0xDE
    lsls r0, r0, #0x03
    adds r2, r1, r0
    ldrh r0, [r2, #0x00]
    ldr r0, _0801C800 @ =0x00001008
    b _0801C862
    .byte 0x00, 0x00
    _0801C7FC: .4byte 0x000006EE
    _0801C800: .4byte 0x00001008
    _0801C804:
    ldrb r0, [r3, #0x01]
    adds r0, #0x01
    strb r0, [r3, #0x01]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x0F
    bls _0801C86E
    movs r0, #0x02
    strb r0, [r3, #0x00]
    movs r0, #0x00
    strb r0, [r3, #0x01]
    b _0801C86E
    _0801C81C:
    ldrb r0, [r3, #0x01]
    adds r0, #0x01
    strb r0, [r3, #0x01]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x10
    bhi _0801C84C
    ldr r1, [r1, #0x00]
    ldr r0, _0801C844 @ =0x000006EE
    adds r2, r1, r0
    ldrh r0, [r2, #0x00]
    movs r0, #0xBF
    strh r0, [r2, #0x00]
    ldrb r0, [r3, #0x01]
    ldr r2, _0801C848 @ =0x000006F2
    adds r1, r1, r2
    _0801C83C:
    ldrh r2, [r1, #0x00]
    strh r0, [r1, #0x00]
    b _0801C86E
    .byte 0x00, 0x00
    _0801C844: .4byte 0x000006EE
    _0801C848: .4byte 0x000006F2
    _0801C84C:
    ldr r1, [r1, #0x00]
    ldr r3, _0801C870 @ =0x000006EE
    adds r2, r1, r3
    ldrh r0, [r2, #0x00]
    movs r3, #0x00
    movs r0, #0xBF
    strh r0, [r2, #0x00]
    ldr r0, _0801C874 @ =0x000006F2
    adds r2, r1, r0
    ldrh r0, [r2, #0x00]
    movs r0, #0x10
    _0801C862:
    strh r0, [r2, #0x00]
    movs r2, #0xE0
    lsls r2, r2, #0x03
    adds r1, r1, r2
    strb r3, [r1, #0x00]
    strb r3, [r1, #0x01]
    _0801C86E:
    bx lr
    _0801C870: .4byte 0x000006EE
    _0801C874: .4byte 0x000006F2
    thumb_func_start sub_801C878
    sub_801C878:
    ldr r0, _0801C890 @ =0x03000190
    ldr r3, [r0, #0x00]
    ldr r0, [r3, #0x18]
    adds r0, #0x01
    str r0, [r3, #0x18]
    ldr r1, [r3, #0x14]
    cmp r1, #0x02
    beq _0801C894
    cmp r1, #0x03
    beq _0801C8B0
    b _0801C8C8
    .byte 0x00, 0x00
    _0801C890: .4byte 0x03000190
    _0801C894:
    asrs r1, r0, #0x02
    ldr r2, _0801C8AC @ =0x000006E6
    adds r0, r3, r2
    ldrh r2, [r0, #0x00]
    strh r1, [r0, #0x00]
    ldr r0, [r3, #0x18]
    negs r0, r0
    asrs r0, r0, #0x02
    movs r2, #0xDD
    lsls r2, r2, #0x03
    b _0801C8C2
    .byte 0x00, 0x00
    _0801C8AC: .4byte 0x000006E6
    _0801C8B0:
    asrs r1, r0, #0x02
    ldr r2, _0801C9A8 @ =0x000006EA
    adds r0, r3, r2
    ldrh r2, [r0, #0x00]
    strh r1, [r0, #0x00]
    ldr r0, [r3, #0x18]
    negs r0, r0
    asrs r0, r0, #0x02
    ldr r2, _0801C9AC @ =0x000006EC
    _0801C8C2:
    adds r1, r3, r2
    ldrh r2, [r1, #0x00]
    strh r0, [r1, #0x00]
    _0801C8C8:
    movs r1, #0x80
    lsls r1, r1, #0x13
    ldr r2, _0801C9B0 @ =0x000006D4
    adds r0, r3, r2
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    adds r1, #0x08
    adds r2, #0x02
    adds r0, r3, r2
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    adds r1, #0x08
    adds r2, #0x08
    adds r0, r3, r2
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    adds r1, #0x02
    adds r2, #0x02
    adds r0, r3, r2
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    subs r1, #0x08
    subs r2, #0x08
    adds r0, r3, r2
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    adds r1, #0x0A
    adds r2, #0x0A
    adds r0, r3, r2
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    adds r1, #0x02
    adds r2, #0x02
    adds r0, r3, r2
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    subs r1, #0x0A
    subs r2, #0x0A
    adds r0, r3, r2
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    adds r1, #0x0C
    adds r2, #0x0C
    adds r0, r3, r2
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    adds r1, #0x02
    adds r2, #0x02
    adds r0, r3, r2
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    subs r1, #0x0C
    subs r2, #0x0C
    adds r0, r3, r2
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    adds r1, #0x0E
    adds r2, #0x0E
    adds r0, r3, r2
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    adds r1, #0x02
    adds r2, #0x02
    adds r0, r3, r2
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    adds r1, #0x32
    adds r2, #0x02
    adds r0, r3, r2
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    adds r1, #0x02
    adds r2, #0x02
    adds r0, r3, r2
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    adds r1, #0x02
    adds r2, #0x02
    adds r0, r3, r2
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    subs r1, #0x14
    adds r2, #0x02
    adds r0, r3, r2
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    adds r1, #0x04
    adds r2, #0x02
    adds r0, r3, r2
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    subs r1, #0x02
    adds r2, #0x02
    adds r0, r3, r2
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    adds r1, #0x04
    adds r2, #0x02
    adds r0, r3, r2
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    adds r1, #0x02
    adds r2, #0x02
    adds r0, r3, r2
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    adds r1, #0x02
    adds r2, #0x02
    adds r0, r3, r2
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
    bx lr
    _0801C9A8: .4byte 0x000006EA
    _0801C9AC: .4byte 0x000006EC
    _0801C9B0: .4byte 0x000006D4
    thumb_func_start sub_801C9B4
    sub_801C9B4:
    ldr r1, _0801CA78 @ =0x000006D6
    adds r2, r0, r1
    ldrh r1, [r2, #0x00]
    movs r3, #0x00
    ldr r1, _0801CA7C @ =0x00004008
    strh r1, [r2, #0x00]
    movs r1, #0xDB
    lsls r1, r1, #0x03
    adds r2, r0, r1
    ldrh r1, [r2, #0x00]
    ldr r1, _0801CA80 @ =0x00004105
    strh r1, [r2, #0x00]
    ldr r1, _0801CA84 @ =0x000006DA
    adds r2, r0, r1
    ldrh r1, [r2, #0x00]
    ldr r1, _0801CA88 @ =0x0000020A
    strh r1, [r2, #0x00]
    ldr r1, _0801CA8C @ =0x000006DC
    adds r2, r0, r1
    ldrh r1, [r2, #0x00]
    ldr r1, _0801CA90 @ =0x00000406
    strh r1, [r2, #0x00]
    ldr r1, _0801CA94 @ =0x000006D4
    adds r2, r0, r1
    ldrh r1, [r2, #0x00]
    movs r1, #0xFA
    lsls r1, r1, #0x05
    strh r1, [r2, #0x00]
    ldr r1, _0801CA98 @ =0x000006EE
    adds r2, r0, r1
    ldrh r1, [r2, #0x00]
    movs r1, #0xBF
    strh r1, [r2, #0x00]
    ldr r1, _0801CA9C @ =0x000006F2
    adds r2, r0, r1
    ldrh r1, [r2, #0x00]
    movs r1, #0x10
    strh r1, [r2, #0x00]
    ldr r2, _0801CAA0 @ =0x000006DE
    adds r1, r0, r2
    ldrh r2, [r1, #0x00]
    strh r3, [r1, #0x00]
    movs r2, #0xDC
    lsls r2, r2, #0x03
    adds r1, r0, r2
    ldrh r2, [r1, #0x00]
    strh r3, [r1, #0x00]
    ldr r2, _0801CAA4 @ =0x000006E2
    adds r1, r0, r2
    ldrh r2, [r1, #0x00]
    strh r3, [r1, #0x00]
    ldr r2, _0801CAA8 @ =0x000006E4
    adds r1, r0, r2
    ldrh r2, [r1, #0x00]
    strh r3, [r1, #0x00]
    ldr r2, _0801CAAC @ =0x000006E6
    adds r1, r0, r2
    ldrh r2, [r1, #0x00]
    strh r3, [r1, #0x00]
    movs r2, #0xDD
    lsls r2, r2, #0x03
    adds r1, r0, r2
    ldrh r2, [r1, #0x00]
    strh r3, [r1, #0x00]
    ldr r2, _0801CAB0 @ =0x000006EA
    adds r1, r0, r2
    ldrh r2, [r1, #0x00]
    strh r3, [r1, #0x00]
    ldr r2, _0801CAB4 @ =0x000006EC
    adds r1, r0, r2
    ldrh r2, [r1, #0x00]
    strh r3, [r1, #0x00]
    ldr r2, _0801CAB8 @ =0x000006F4
    adds r1, r0, r2
    ldrh r2, [r1, #0x00]
    strh r3, [r1, #0x00]
    ldr r2, _0801CABC @ =0x000006F6
    adds r1, r0, r2
    ldrh r2, [r1, #0x00]
    strh r3, [r1, #0x00]
    movs r2, #0xDF
    lsls r2, r2, #0x03
    adds r1, r0, r2
    ldrh r2, [r1, #0x00]
    strh r3, [r1, #0x00]
    ldr r2, _0801CAC0 @ =0x000006FA
    adds r1, r0, r2
    ldrh r2, [r1, #0x00]
    strh r3, [r1, #0x00]
    ldr r2, _0801CAC4 @ =0x000006FC
    adds r1, r0, r2
    ldrh r2, [r1, #0x00]
    strh r3, [r1, #0x00]
    ldr r1, _0801CAC8 @ =0x000006FE
    adds r0, r0, r1
    ldrh r1, [r0, #0x00]
    strh r3, [r0, #0x00]
    bx lr
    _0801CA78: .4byte 0x000006D6
    _0801CA7C: .4byte 0x00004008
    _0801CA80: .4byte 0x00004105
    _0801CA84: .4byte 0x000006DA
    _0801CA88: .4byte 0x0000020A
    _0801CA8C: .4byte 0x000006DC
    _0801CA90: .4byte 0x00000406
    _0801CA94: .4byte 0x000006D4
    _0801CA98: .4byte 0x000006EE
    _0801CA9C: .4byte 0x000006F2
    _0801CAA0: .4byte 0x000006DE
    _0801CAA4: .4byte 0x000006E2
    _0801CAA8: .4byte 0x000006E4
    _0801CAAC: .4byte 0x000006E6
    _0801CAB0: .4byte 0x000006EA
    _0801CAB4: .4byte 0x000006EC
    _0801CAB8: .4byte 0x000006F4
    _0801CABC: .4byte 0x000006F6
    _0801CAC0: .4byte 0x000006FA
    _0801CAC4: .4byte 0x000006FC
    _0801CAC8: .4byte 0x000006FE
    thumb_func_start sub_801CACC
    sub_801CACC:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x004
    adds r7, r0, #0x0
    adds r0, #0xB0
    movs r1, #0x00
    str r1, [r0, #0x00]
    adds r0, #0x04
    str r1, [r0, #0x00]
    subs r0, #0x68
    _0801CAE6:
    str r1, [r0, #0x00]
    subs r0, #0x04
    cmp r0, r7
    bge _0801CAE6
    movs r6, #0x00
    movs r0, #0x8C
    adds r0, r0, r7
    mov r10, r0
    movs r1, #0xB0
    adds r1, r1, r7
    mov r8, r1
    adds r5, r7, #0x0
    _0801CAFE:
    adds r0, r6, #0x0
    bl track_getMKSCTrack
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    bl sub_805CE3C
    lsls r0, r0, #0x18
    asrs r4, r0, #0x18
    movs r0, #0x01
    negs r0, r0
    cmp r4, r0
    beq _0801CB46
    mov r1, r8
    ldr r0, [r1, #0x00]
    adds r0, #0x01
    str r0, [r1, #0x00]
    movs r0, #0x01
    str r0, [r5, #0x00]
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    adds r0, r4, #0x0
    bl sub_805DE90
    adds r1, r7, #0x0
    adds r1, #0x50
    adds r1, r1, r6
    strb r0, [r1, #0x00]
    adds r0, r4, #0x0
    bl sub_805DEB8
    lsls r2, r6, #0x01
    adds r1, r7, #0x0
    adds r1, #0x64
    adds r1, r1, r2
    strh r0, [r1, #0x00]
    _0801CB46:
    adds r5, #0x04
    adds r6, #0x01
    cmp r6, #0x13
    ble _0801CAFE
    mov r1, r10
    movs r2, #0x00
    mov r0, r10
    adds r0, #0x04
    _0801CB56:
    str r2, [r0, #0x00]
    subs r0, #0x04
    cmp r0, r1
    bge _0801CB56
    movs r6, #0x00
    _0801CB60:
    lsls r0, r6, #0x18
    lsrs r0, r0, #0x18
    bl sub_805DC28
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    mov r8, r0
    movs r0, #0x01
    negs r0, r0
    adds r1, r6, #0x1
    mov r9, r1
    cmp r8, r0
    beq _0801CBF8
    adds r1, r7, #0x0
    adds r1, #0xB4
    ldr r0, [r1, #0x00]
    adds r0, #0x01
    str r0, [r1, #0x00]
    lsls r0, r6, #0x02
    add r0, r10
    movs r1, #0x01
    str r1, [r0, #0x00]
    mov r0, r8
    lsls r4, r0, #0x18
    lsrs r4, r4, #0x18
    adds r0, r4, #0x0
    bl sub_805DE90
    adds r1, r7, #0x0
    adds r1, #0x96
    adds r1, r1, r6
    strb r0, [r1, #0x00]
    adds r0, r4, #0x0
    bl sub_805DEB8
    lsls r2, r6, #0x01
    adds r1, r7, #0x0
    adds r1, #0x98
    adds r1, r1, r2
    strh r0, [r1, #0x00]
    adds r0, r4, #0x0
    bl sub_805DF18
    adds r5, r7, #0x0
    adds r5, #0x9C
    adds r1, r5, r6
    strb r0, [r1, #0x00]
    adds r0, r7, #0x0
    adds r0, #0xAE
    adds r0, r0, r6
    mov r1, r8
    strb r1, [r0, #0x00]
    lsls r1, r6, #0x03
    adds r1, #0x9E
    adds r1, r7, r1
    adds r0, r4, #0x0
    bl sub_805DEE0
    movs r4, #0x00
    adds r2, r7, #0x0
    adds r2, #0x94
    b _0801CBDE
    _0801CBDC:
    adds r4, #0x01
    _0801CBDE:
    cmp r4, #0x13
    bgt _0801CBF4
    adds r0, r4, #0x0
    str r2, [sp, #0x000]
    bl track_getMKSCTrack
    adds r1, r5, r6
    ldr r2, [sp, #0x000]
    ldrb r1, [r1, #0x00]
    cmp r0, r1
    bne _0801CBDC
    _0801CBF4:
    adds r0, r2, r6
    strb r4, [r0, #0x00]
    _0801CBF8:
    mov r6, r9
    cmp r6, #0x01
    ble _0801CB60
    add sp, #0x004
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_801CC10
    sub_801CC10:
    push {r4, r5, r6, lr}
    adds r3, r0, #0x0
    movs r4, #0x00
    adds r2, r3, #0x0
    adds r2, #0x34
    movs r6, #0x00
    movs r5, #0x00
    _0801CC1E:
    lsls r1, r4, #0x02
    adds r0, r3, #0x0
    adds r0, #0xD8
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0801CC60
    movs r0, #0x01
    strb r0, [r2, #0x00]
    adds r0, r3, #0x0
    adds r0, #0xE0
    adds r0, r0, r4
    ldrb r0, [r0, #0x00]
    strb r0, [r2, #0x01]
    adds r1, r3, #0x0
    adds r1, #0x38
    adds r1, r1, r6
    adds r0, r3, #0x0
    adds r0, #0xE4
    adds r0, r0, r5
    ldrh r0, [r0, #0x00]
    str r0, [r1, #0x00]
    adds r0, r3, #0x0
    adds r0, #0xE2
    adds r0, r0, r4
    ldrb r0, [r0, #0x00]
    strb r0, [r2, #0x02]
    adds r0, r3, #0x0
    adds r0, #0xFA
    adds r0, r0, r4
    ldrb r0, [r0, #0x00]
    strb r0, [r2, #0x08]
    b _0801CC62
    _0801CC60:
    strb r0, [r2, #0x00]
    _0801CC62:
    adds r2, #0x0C
    adds r6, #0x0C
    adds r5, #0x02
    adds r4, #0x01
    cmp r4, #0x01
    ble _0801CC1E
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    thumb_func_start sub_801CC74
    sub_801CC74:
    push {r4, r5, r6, r7, lr}
    add sp, #-0x004
    adds r6, r0, #0x0
    mov r0, sp
    movs r5, #0x00
    strh r5, [r0, #0x00]
    ldr r1, _0801CD40 @ =0x040000D4
    str r0, [r1, #0x00]
    movs r4, #0xC0
    lsls r4, r4, #0x13
    str r4, [r1, #0x04]
    ldr r0, _0801CD44 @ =0x8100C000
    str r0, [r1, #0x08]
    ldr r0, [r1, #0x08]
    bl oam_init
    movs r0, #0x00
    adds r1, r4, #0x0
    bl map_setBufferDestination
    ldr r1, _0801CD48 @ =0x06000800
    movs r0, #0x01
    bl map_setBufferDestination
    bl main_frameProc
    adds r0, r6, #0x0
    bl sub_801C9B4
    ldr r0, _0801CD4C @ =0x03000190
    ldr r0, [r0, #0x00]
    movs r1, #0xE0
    lsls r1, r1, #0x03
    adds r0, r0, r1
    strb r5, [r0, #0x00]
    strb r5, [r0, #0x01]
    ldr r5, _0801CD50 @ =0x0801C879
    ldr r4, _0801CD54 @ =0x03002E20
    movs r0, #0x01
    movs r1, #0x02
    negs r1, r1
    bl irq_updateMask
    str r5, [r4, #0x0C]
    movs r0, #0x02
    ldr r1, _0801CD58 @ =0x00010001
    bl irq_updateMask
    bl main_frameProc
    movs r3, #0x82
    lsls r3, r3, #0x01
    adds r5, r6, r3
    movs r4, #0x02
    movs r2, #0x00
    movs r1, #0x04
    adds r3, #0x10
    adds r0, r6, r3
    _0801CCE8:
    str r2, [r0, #0x00]
    subs r0, #0x04
    subs r1, #0x01
    cmp r1, #0x00
    bge _0801CCE8
    lsls r0, r4, #0x18
    lsrs r0, r0, #0x18
    bl sub_805DE68
    negs r1, r0
    orrs r1, r0
    lsrs r1, r1, #0x1F
    str r1, [r5, #0x10]
    movs r0, #0x01
    str r0, [r5, #0x14]
    movs r4, #0x00
    adds r7, r6, #0x0
    adds r7, #0x4C
    _0801CD0C:
    lsls r0, r4, #0x18
    lsrs r0, r0, #0x18
    bl sub_805DE68
    cmp r0, #0x00
    bne _0801CD1A
    str r0, [r5, #0x14]
    _0801CD1A:
    adds r4, #0x01
    cmp r4, #0x02
    ble _0801CD0C
    adds r0, r7, #0x0
    bl sub_801CACC
    adds r0, r6, #0x0
    bl sub_801CC10
    movs r1, #0xD4
    lsls r1, r1, #0x03
    adds r0, r6, r1
    bl sub_80174A8
    add sp, #0x004
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _0801CD40: .4byte 0x040000D4
    _0801CD44: .4byte 0x8100C000
    _0801CD48: .4byte 0x06000800
    _0801CD4C: .4byte 0x03000190
    _0801CD50: .4byte sub_801C878
    _0801CD54: .4byte 0x03002E20
    _0801CD58: .4byte 0x00010001
    thumb_func_start sub_801CD5C
    sub_801CD5C:
    push {r4, r5, lr}
    adds r2, r0, #0x0
    ldrb r0, [r2, #0x00]
    cmp r0, #0x13
    bls _0801CD68
    b _0801CEC8
    _0801CD68:
    lsls r0, r0, #0x02
    ldr r1, _0801CD74 @ =0x0801CD78
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
    _0801CD74: .4byte 0x0801CD78
    .byte 0xC8, 0xCD, 0x01, 0x08, 0xEC, 0xCD, 0x01, 0x08, 0xF4, 0xCD, 0x01, 0x08, 0xFC, 0xCD, 0x01, 0x08
    .byte 0x04, 0xCE, 0x01, 0x08, 0x0C, 0xCE, 0x01, 0x08, 0x14, 0xCE, 0x01, 0x08, 0x1C, 0xCE, 0x01, 0x08
    .byte 0x24, 0xCE, 0x01, 0x08, 0x2C, 0xCE, 0x01, 0x08, 0x34, 0xCE, 0x01, 0x08, 0x3C, 0xCE, 0x01, 0x08
    .byte 0x44, 0xCE, 0x01, 0x08, 0x4C, 0xCE, 0x01, 0x08, 0x54, 0xCE, 0x01, 0x08, 0x62, 0xCE, 0x01, 0x08
    .byte 0x6C, 0xCE, 0x01, 0x08, 0x74, 0xCE, 0x01, 0x08, 0x84, 0xCE, 0x01, 0x08, 0x94, 0xCE, 0x01, 0x08
    .byte 0x10, 0x1C, 0xFF, 0xF7, 0x53, 0xFF, 0x01, 0x24, 0x05, 0x49, 0x08, 0x68, 0x02, 0x78, 0x00, 0x23
    .byte 0x42, 0x70, 0x08, 0x68, 0x04, 0x70, 0x08, 0x68, 0x83, 0x70, 0x08, 0x68, 0x43, 0x60, 0x6F, 0xE0
    .byte 0x90, 0x01, 0x00, 0x03, 0x10, 0x1C, 0xFF, 0xF7, 0x4D, 0xFB, 0x69, 0xE0, 0x10, 0x1C, 0xFE, 0xF7
    .byte 0x6F, 0xFD, 0x65, 0xE0, 0x10, 0x1C, 0xFE, 0xF7, 0x6D, 0xF8, 0x61, 0xE0, 0x10, 0x1C, 0xFE, 0xF7
    .byte 0x2F, 0xF8, 0x5D, 0xE0, 0x10, 0x1C, 0xFD, 0xF7, 0x03, 0xFF, 0x59, 0xE0, 0x10, 0x1C, 0xFD, 0xF7
    .byte 0x85, 0xFE, 0x55, 0xE0, 0x10, 0x1C, 0xFD, 0xF7, 0x15, 0xFD, 0x51, 0xE0, 0x10, 0x1C, 0xFD, 0xF7
    .byte 0x57, 0xFB, 0x4D, 0xE0, 0x10, 0x1C, 0xFD, 0xF7, 0x0D, 0xFB, 0x49, 0xE0, 0x10, 0x1C, 0xFC, 0xF7
    .byte 0x1D, 0xFD, 0x45, 0xE0, 0x10, 0x1C, 0xFB, 0xF7, 0xDF, 0xFE, 0x41, 0xE0, 0x10, 0x1C, 0xFB, 0xF7
    .byte 0xDD, 0xFD, 0x3D, 0xE0, 0x10, 0x1C, 0xFB, 0xF7, 0xE1, 0xFC, 0x39, 0xE0, 0x10, 0x1C, 0xFB, 0xF7
    .byte 0x9B, 0xFC, 0x00, 0x28, 0x34, 0xD0, 0x01, 0x20, 0x33, 0xE0, 0x01, 0x49, 0x0F, 0xE0, 0x00, 0x00
    .byte 0xE8, 0xA8, 0x0D, 0x08, 0x00, 0x49, 0x0A, 0xE0, 0xDC, 0xA9, 0x0D, 0x08, 0x02, 0x49, 0x10, 0x1C
    .byte 0x01, 0x22, 0xFB, 0xF7, 0xD9, 0xFB, 0x23, 0xE0, 0x4C, 0xAA, 0x0D, 0x08, 0x02, 0x49, 0x10, 0x1C
    .byte 0x00, 0x22, 0xFB, 0xF7, 0xD1, 0xFB, 0x1B, 0xE0, 0x0C, 0xAB, 0x0D, 0x08, 0x09, 0x48, 0x0A, 0x4C
    .byte 0x20, 0x60, 0x20, 0x7A, 0x01, 0x30, 0x00, 0x25, 0x07, 0x21, 0x08, 0x40, 0x20, 0x72, 0x01, 0x20
    .byte 0x09, 0x39, 0x45, 0xF0, 0xB7, 0xFB, 0xE5, 0x60, 0x02, 0x20, 0x04, 0x49, 0x45, 0xF0, 0xB2, 0xFB
    .byte 0x01, 0x20, 0x06, 0xE0, 0x6D, 0x0E, 0x00, 0x08, 0x20, 0x2E, 0x00, 0x03, 0x01, 0x00, 0x01, 0x00
    _0801CEC8:
    movs r0, #0x00
    pop {r4, r5}
    pop {r1}
    bx r1
    thumb_func_start ghost_main
    ghost_main: @ 0801CED0
    push {r4, r5, lr}
    ldr r4, _0801CF28 @ =0x03002E20
    ldr r0, _0801CF2C @ =0x00000704
    adds r4, r4, r0
    ldr r1, _0801CF30 @ =0x0202A400
    adds r0, r4, #0x0
    movs r2, #0x80
    lsls r2, r2, #0x08
    bl frmheap_init
    adds r0, r4, #0x0
    movs r1, #0x01
    ldr r2, _0801CF2C @ =0x00000704
    bl frmheap_calloc
    ldr r2, _0801CF34 @ =0x03000190
    str r0, [r2, #0x00]
    adds r4, r0, #0x0
    movs r0, #0xD4
    lsls r0, r0, #0x03
    adds r5, r4, r0
    movs r1, #0x00
    ldrb r0, [r4, #0x00]
    strb r0, [r4, #0x01]
    ldr r0, [r2, #0x00]
    strb r1, [r0, #0x00]
    ldr r0, [r2, #0x00]
    strb r1, [r0, #0x02]
    ldr r0, [r2, #0x00]
    str r1, [r0, #0x04]
    adds r0, r5, #0x0
    bl sub_80174A8
    _0801CF12:
    ldrb r1, [r5, #0x01]
    movs r0, #0x3F
    ands r0, r1
    cmp r0, #0x00
    bne _0801CF38
    adds r0, r4, #0x0
    bl sub_801CD5C
    cmp r0, #0x00
    bne _0801CFCA
    b _0801CF4A
    _0801CF28: .4byte 0x03002E20
    _0801CF2C: .4byte 0x00000704
    _0801CF30: .4byte 0x0202A400
    _0801CF34: .4byte 0x03000190
    _0801CF38:
    adds r0, r4, #0x0
    bl sub_80174DC
    ldr r0, [r4, #0x08]
    adds r0, #0x01
    str r0, [r4, #0x08]
    bl main_frameProc
    b _0801CF12
    _0801CF4A:
    ldrb r0, [r4, #0x00]
    cmp r0, #0x13
    bhi _0801CFB0
    lsls r0, r0, #0x02
    ldr r1, _0801CF5C @ =0x0801CF60
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
    _0801CF5C: .4byte 0x0801CF60
    .byte 0xB6, 0xCF, 0x01, 0x08, 0xB6, 0xCF, 0x01, 0x08, 0xB0, 0xCF, 0x01, 0x08, 0xB0, 0xCF, 0x01, 0x08
    .byte 0xB6, 0xCF, 0x01, 0x08, 0xB0, 0xCF, 0x01, 0x08, 0xB0, 0xCF, 0x01, 0x08, 0xB0, 0xCF, 0x01, 0x08
    .byte 0xB0, 0xCF, 0x01, 0x08, 0xB0, 0xCF, 0x01, 0x08, 0xB6, 0xCF, 0x01, 0x08, 0xB6, 0xCF, 0x01, 0x08
    .byte 0xB6, 0xCF, 0x01, 0x08, 0xB0, 0xCF, 0x01, 0x08, 0xB6, 0xCF, 0x01, 0x08, 0xB6, 0xCF, 0x01, 0x08
    .byte 0xB6, 0xCF, 0x01, 0x08, 0xB6, 0xCF, 0x01, 0x08, 0xB6, 0xCF, 0x01, 0x08, 0xB6, 0xCF, 0x01, 0x08
    _0801CFB0:
    adds r0, r4, #0x0
    bl sub_80174DC
    ldr r0, [r4, #0x08]
    adds r0, #0x01
    str r0, [r4, #0x08]
    bl sub_801C780
    bl oam_update
    bl main_frameProc
    b _0801CF12
    _0801CFCA:
    movs r0, #0x01
    pop {r4, r5}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_801CFD4
    sub_801CFD4:
    push {r4, r5, r6, lr}
    ldr r6, _0801D004 @ =0x06005800
    lsls r1, r0, #0x01
    adds r1, r1, r0
    lsls r4, r1, #0x08
    movs r5, #0x07
    _0801CFE0:
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0801D008 @ =0x02025400
    adds r1, r4, r1
    adds r2, r6, #0x0
    ldr r3, _0801D00C @ =0x80000180
    bl dmaq_enqueue
    movs r0, #0xC0
    lsls r0, r0, #0x02
    adds r6, r6, r0
    adds r4, r4, r0
    subs r5, #0x01
    cmp r5, #0x00
    bge _0801CFE0
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    _0801D004: .4byte 0x06005800
    _0801D008: .4byte 0x02025400
    _0801D00C: .4byte 0x80000180
    thumb_func_start sub_801D010
    sub_801D010:
    push {r4, r5, r6, lr}
    add sp, #-0x008
    adds r6, r1, #0x0
    cmp r0, #0x13
    bhi _0801D098
    bl track_getMKSCTrack
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    bl sub_805CE3C
    lsls r0, r0, #0x18
    asrs r4, r0, #0x18
    movs r0, #0x01
    negs r0, r0
    cmp r4, r0
    beq _0801D090
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    adds r0, r4, #0x0
    bl sub_805DE90
    adds r5, r0, #0x0
    lsls r5, r5, #0x18
    asrs r5, r5, #0x18
    adds r0, r4, #0x0
    bl sub_805DEB8
    lsls r0, r0, #0x10
    asrs r4, r0, #0x10
    movs r0, #0x00
    movs r1, #0x02
    movs r2, #0x07
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    movs r0, #0xB0
    lsls r0, r0, #0x02
    str r0, [sp, #0x000]
    movs r0, #0x0F
    str r0, [sp, #0x004]
    adds r0, r5, #0x0
    movs r2, #0xD8
    lsls r2, r2, #0x02
    movs r3, #0x0C
    bl sub_800E728
    cmp r4, #0x00
    beq _0801D098
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    movs r0, #0x00
    movs r1, #0x04
    movs r2, #0x07
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    movs r2, #0xC8
    lsls r2, r2, #0x02
    movs r3, #0x0F
    bl sub_800C6D4
    b _0801D098
    _0801D090:
    ldr r1, _0801D0A8 @ =0x080DA88C
    movs r0, #0x00
    bl sub_80142CC
    _0801D098:
    movs r0, #0x00
    adds r1, r6, #0x0
    bl sub_80142CC
    add sp, #0x008
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    _0801D0A8: .4byte 0x080DA88C
    thumb_func_start sub_801D0AC
    sub_801D0AC:
    push {r4, lr}
    add sp, #-0x004
    adds r4, r0, #0x0
    movs r0, #0x00
    bl pltt_getBuffer
    adds r2, r0, #0x0
    movs r0, #0xB0
    lsls r0, r0, #0x01
    adds r2, r2, r0
    ldr r0, _0801D0E0 @ =0x080B23B0
    adds r1, r0, #0x0
    adds r1, #0x20
    movs r3, #0x10
    str r3, [sp, #0x000]
    adds r3, r4, #0x0
    bl sub_8005E04
    movs r0, #0x01
    bl pltt_setDirtyFlag
    add sp, #0x004
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _0801D0E0: .4byte 0x080B23B0
    thumb_func_start sub_801D0E4
    sub_801D0E4:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    mov r9, r0
    mov r8, r1
    movs r4, #0x00
    _0801D0F2:
    lsls r2, r4, #0x01
    movs r0, #0x01
    movs r1, #0x0D
    bl map_getBufferPtr2d
    mov r12, r0
    cmp r4, r8
    beq _0801D118
    mov r0, r9
    adds r1, r4, r0
    movs r0, #0x01
    ands r1, r0
    movs r0, #0xA0
    lsls r0, r0, #0x07
    cmp r1, #0x00
    beq _0801D11C
    movs r0, #0xC0
    lsls r0, r0, #0x07
    b _0801D11C
    _0801D118:
    movs r0, #0xB0
    lsls r0, r0, #0x08
    _0801D11C:
    adds r5, r0, #0x0
    movs r1, #0x00
    adds r6, r4, #0x1
    ldr r7, _0801D15C @ =0x00000FFF
    _0801D124:
    lsls r0, r1, #0x06
    adds r4, r1, #0x1
    adds r0, #0x80
    mov r1, r12
    adds r3, r1, r0
    movs r2, #0x0B
    _0801D130:
    ldrh r1, [r3, #0x00]
    adds r0, r7, #0x0
    ands r0, r1
    orrs r0, r5
    strh r0, [r3, #0x00]
    adds r3, #0x02
    subs r2, #0x01
    cmp r2, #0x00
    bge _0801D130
    adds r1, r4, #0x0
    cmp r1, #0x01
    ble _0801D124
    adds r4, r6, #0x0
    cmp r4, #0x07
    ble _0801D0F2
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _0801D15C: .4byte 0x00000FFF
    thumb_func_start sub_801D160
    sub_801D160:
    push {lr}
    adds r1, r0, #0x0
    movs r0, #0x00
    cmp r1, #0x04
    bhi _0801D1AE
    lsls r0, r1, #0x02
    ldr r1, _0801D174 @ =0x0801D178
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    _0801D174: .4byte 0x0801D178
    .byte 0x8C, 0xD1, 0x01, 0x08, 0x94, 0xD1, 0x01, 0x08, 0x9C, 0xD1, 0x01, 0x08, 0xA4, 0xD1, 0x01, 0x08
    .byte 0xAC, 0xD1, 0x01, 0x08, 0x00, 0x48, 0x0E, 0xE0, 0xB4, 0xDC, 0x07, 0x08, 0x00, 0x48, 0x0A, 0xE0
    .byte 0xC8, 0xDD, 0x07, 0x08, 0x00, 0x48, 0x06, 0xE0, 0xDC, 0xDE, 0x07, 0x08, 0x00, 0x48, 0x02, 0xE0
    .byte 0xF8, 0xDF, 0x07, 0x08, 0x03, 0x48
    _0801D1AE:
    cmp r0, #0x00
    beq _0801D1B8
    ldr r1, _0801D1C0 @ =0x02008400
    bl LZ77UnCompWram
    _0801D1B8:
    pop {r0}
    bx r0
    .byte 0x0C, 0xE1, 0x07, 0x08
    _0801D1C0: .4byte 0x02008400
    thumb_func_start sub_801D1C4
    sub_801D1C4:
    push {r4, r5, r6, r7, lr}
    adds r6, r0, #0x0
    ldr r5, _0801D228 @ =0x02010400
    ldr r0, _0801D22C @ =0x080B3424
    adds r1, r5, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    ldr r7, _0801D230 @ =0x06017400
    ldr r3, _0801D234 @ =0x80000060
    adds r1, r5, #0x0
    adds r2, r7, #0x0
    bl dmaq_enqueue
    adds r4, r6, #0x0
    adds r4, #0xB0
    ldr r0, [r4, #0x00]
    cmp r0, #0x00
    beq _0801D200
    bl dmaq_getVBlankDmaQueue
    ldr r1, [r4, #0x00]
    adds r1, #0x05
    lsls r1, r1, #0x05
    adds r1, r1, r5
    ldr r3, _0801D238 @ =0x80000010
    adds r2, r7, #0x0
    bl dmaq_enqueue
    _0801D200:
    adds r4, r6, #0x0
    adds r4, #0xB4
    ldr r0, [r4, #0x00]
    cmp r0, #0x00
    beq _0801D21E
    bl dmaq_getVBlankDmaQueue
    ldr r1, [r4, #0x00]
    adds r1, #0x0F
    lsls r1, r1, #0x05
    adds r1, r1, r5
    ldr r2, _0801D23C @ =0x06017460
    ldr r3, _0801D238 @ =0x80000010
    bl dmaq_enqueue
    _0801D21E:
    bl main_frameProc
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    _0801D228: .4byte 0x02010400
    _0801D22C: .4byte 0x080B3424
    _0801D230: .4byte 0x06017400
    _0801D234: .4byte 0x80000060
    _0801D238: .4byte 0x80000010
    _0801D23C: .4byte 0x06017460
    thumb_func_start sub_801D240
    sub_801D240:
    ldr r1, _0801D258 @ =0x03000190
    ldr r1, [r1, #0x00]
    movs r2, #0xE0
    lsls r2, r2, #0x03
    adds r1, r1, r2
    movs r3, #0x00
    movs r2, #0x01
    strb r2, [r1, #0x00]
    strb r3, [r1, #0x01]
    strh r0, [r1, #0x02]
    bx lr
    .byte 0x00, 0x00
    _0801D258: .4byte 0x03000190
    thumb_func_start sub_801D25C
    sub_801D25C:
    ldr r0, _0801D270 @ =0x03000190
    ldr r0, [r0, #0x00]
    movs r1, #0xE0
    lsls r1, r1, #0x03
    adds r0, r0, r1
    movs r2, #0x00
    movs r1, #0x02
    strb r1, [r0, #0x00]
    strb r2, [r0, #0x01]
    bx lr
    _0801D270: .4byte 0x03000190
    thumb_func_start sub_801D274
    sub_801D274:
    ldr r0, _0801D288 @ =0x03000190
    ldr r0, [r0, #0x00]
    movs r1, #0xE0
    lsls r1, r1, #0x03
    adds r0, r0, r1
    movs r2, #0x00
    movs r1, #0x03
    strb r1, [r0, #0x00]
    strb r2, [r0, #0x01]
    bx lr
    _0801D288: .4byte 0x03000190
    thumb_func_start sub_801D28C
    sub_801D28C:
    ldr r0, _0801D2A0 @ =0x03000190
    ldr r0, [r0, #0x00]
    movs r1, #0xE0
    lsls r1, r1, #0x03
    adds r0, r0, r1
    ldrb r1, [r0, #0x00]
    negs r0, r1
    orrs r0, r1
    lsrs r0, r0, #0x1F
    bx lr
    _0801D2A0: .4byte 0x03000190
    thumb_func_start sub_801D2A4
    sub_801D2A4:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    adds r7, r0, #0x0
    bl sub_800EDDC
    adds r2, r0, #0x0
    movs r6, #0x00
    ldr r0, _0801D334 @ =0x03002E20
    ldr r3, _0801D338 @ =0x00000814
    adds r1, r0, r3
    ldrb r3, [r1, #0x00]
    cmp r6, r3
    bge _0801D326
    mov r10, r0
    movs r0, #0x01
    negs r0, r0
    mov r9, r0
    mov r8, r1
    adds r4, r2, #0x0
    adds r4, #0x34
    movs r5, #0x00
    _0801D2D4:
    lsls r1, r6, #0x18
    lsrs r1, r1, #0x18
    mov r0, r10
    adds r0, #0x24
    bl sub_804AED4
    adds r2, r0, #0x0
    ldr r0, [r2, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _0801D326
    movs r1, #0x06
    ldsh r0, [r4, r1]
    cmp r0, r9
    bne _0801D318
    adds r1, r5, #0x0
    adds r1, #0x23
    cmp r6, #0x03
    ble _0801D2FE
    adds r1, #0x05
    _0801D2FE:
    movs r0, #0x00
    strh r1, [r4, #0x00]
    strh r0, [r4, #0x02]
    cmp r7, #0x00
    beq _0801D30A
    adds r0, r5, #0x0
    _0801D30A:
    strh r0, [r4, #0x04]
    adds r0, r2, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    strh r0, [r4, #0x06]
    _0801D318:
    adds r4, #0x08
    adds r5, #0x03
    adds r6, #0x01
    mov r3, r8
    ldrb r3, [r3, #0x00]
    cmp r6, r3
    blt _0801D2D4
    _0801D326:
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    _0801D334: .4byte 0x03002E20
    _0801D338: .4byte 0x00000814
    thumb_func_start sub_801D33C
    sub_801D33C:
    push {r4, r5, r6, lr}
    bl sub_800EDDC
    adds r1, r0, #0x0
    movs r4, #0x00
    ldr r0, _0801D374 @ =0x03002E20
    ldr r2, _0801D378 @ =0x00000814
    adds r3, r0, r2
    ldrb r0, [r3, #0x00]
    cmp r4, r0
    bge _0801D3C8
    adds r2, r1, #0x0
    adds r2, #0x34
    movs r1, #0x06
    ldsh r0, [r2, r1]
    movs r1, #0x01
    negs r1, r1
    cmp r0, r1
    beq _0801D3C8
    adds r6, r3, #0x0
    adds r5, r1, #0x0
    mov r12, r4
    _0801D368:
    ldrh r0, [r2, #0x04]
    cmp r0, #0x00
    beq _0801D37C
    subs r0, #0x01
    strh r0, [r2, #0x04]
    b _0801D3B2
    _0801D374: .4byte 0x03002E20
    _0801D378: .4byte 0x00000814
    _0801D37C:
    mov r3, r12
    adds r3, #0x23
    cmp r4, #0x03
    ble _0801D386
    adds r3, #0x05
    _0801D386:
    mov r1, r12
    cmp r4, #0x03
    ble _0801D38E
    adds r1, #0x05
    _0801D38E:
    ldrh r0, [r2, #0x02]
    adds r0, #0x01
    strh r0, [r2, #0x02]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0x20
    bls _0801D3A0
    movs r0, #0x20
    strh r0, [r2, #0x02]
    _0801D3A0:
    subs r1, r1, r3
    ldrh r0, [r2, #0x02]
    muls r0, r1
    cmp r0, #0x00
    bge _0801D3AC
    adds r0, #0x1F
    _0801D3AC:
    asrs r0, r0, #0x05
    adds r0, r3, r0
    strh r0, [r2, #0x00]
    _0801D3B2:
    adds r2, #0x08
    movs r0, #0x03
    add r12, r0
    adds r4, #0x01
    ldrb r1, [r6, #0x00]
    cmp r4, r1
    bge _0801D3C8
    movs r1, #0x06
    ldsh r0, [r2, r1]
    cmp r0, r5
    bne _0801D368
    _0801D3C8:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_801D3D0
    sub_801D3D0:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x004
    bl sub_800EDDC
    mov r10, r0
    movs r7, #0x00
    b _0801D540
    _0801D3E6:
    ldr r4, _0801D464 @ =0x03002E20
    adds r0, r4, #0x0
    adds r0, #0x24
    lsls r1, r7, #0x18
    lsrs r1, r1, #0x18
    bl sub_804AED4
    adds r3, r0, #0x0
    lsls r0, r7, #0x03
    adds r0, #0x34
    mov r6, r10
    adds r2, r6, r0
    movs r0, #0x06
    ldsh r1, [r2, r0]
    movs r0, #0x01
    negs r0, r0
    cmp r1, r0
    bne _0801D40C
    b _0801D54E
    _0801D40C:
    ldr r1, _0801D468 @ =0x00000838
    adds r0, r4, r1
    ldr r0, [r0, #0x00]
    cmp r3, r0
    bne _0801D418
    b _0801D53E
    _0801D418:
    ldrh r0, [r2, #0x00]
    cmp r0, #0x1C
    bls _0801D420
    b _0801D53E
    _0801D420:
    lsls r0, r7, #0x01
    adds r0, r0, r7
    cmp r7, #0x03
    ble _0801D42A
    adds r0, #0x05
    _0801D42A:
    ldrh r6, [r2, #0x00]
    cmp r6, r0
    beq _0801D474
    movs r3, #0x06
    ldsh r4, [r2, r3]
    ldr r5, _0801D46C @ =0x080DB0B2
    movs r0, #0x00
    adds r1, r6, #0x0
    movs r2, #0x0A
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r5, #0x0
    bl sub_804F6F4
    ldr r0, _0801D470 @ =0x080DB234
    lsls r4, r4, #0x02
    adds r4, r4, r0
    ldr r4, [r4, #0x00]
    adds r1, r6, #0x1
    movs r0, #0x00
    movs r2, #0x0B
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    b _0801D53E
    _0801D464: .4byte 0x03002E20
    _0801D468: .4byte 0x00000838
    _0801D46C: .4byte 0x080DB0B2
    _0801D470: .4byte 0x080DB234
    _0801D474:
    adds r1, r0, #0x0
    movs r6, #0x06
    ldsh r2, [r2, r6]
    movs r0, #0x00
    cmp r7, #0x00
    beq _0801D486
    cmp r7, #0x04
    beq _0801D486
    movs r0, #0x03
    _0801D486:
    adds r5, r1, #0x0
    adds r6, r2, #0x0
    movs r4, #0x00
    cmp r0, #0x0D
    bhi _0801D512
    lsls r0, r0, #0x02
    ldr r1, _0801D49C @ =0x0801D4A0
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
    _0801D49C: .4byte 0x0801D4A0
    .byte 0xD8, 0xD4, 0x01, 0x08, 0xE0, 0xD4, 0x01, 0x08, 0xE8, 0xD4, 0x01, 0x08, 0xF0, 0xD4, 0x01, 0x08
    .byte 0x12, 0xD5, 0x01, 0x08, 0x12, 0xD5, 0x01, 0x08, 0x12, 0xD5, 0x01, 0x08, 0x12, 0xD5, 0x01, 0x08
    .byte 0x12, 0xD5, 0x01, 0x08, 0x12, 0xD5, 0x01, 0x08, 0xF8, 0xD4, 0x01, 0x08, 0x00, 0xD5, 0x01, 0x08
    .byte 0x08, 0xD5, 0x01, 0x08, 0x10, 0xD5, 0x01, 0x08, 0x00, 0x4C, 0x1A, 0xE0, 0xB2, 0xB0, 0x0D, 0x08
    .byte 0x00, 0x4C, 0x16, 0xE0, 0xD6, 0xB0, 0x0D, 0x08, 0x00, 0x4C, 0x12, 0xE0, 0xFA, 0xB0, 0x0D, 0x08
    .byte 0x00, 0x4C, 0x0E, 0xE0, 0x1E, 0xB1, 0x0D, 0x08, 0x00, 0x4C, 0x0A, 0xE0, 0x42, 0xB1, 0x0D, 0x08
    .byte 0x00, 0x4C, 0x06, 0xE0, 0x66, 0xB1, 0x0D, 0x08, 0x00, 0x4C, 0x02, 0xE0, 0x8A, 0xB1, 0x0D, 0x08
    .byte 0x11, 0x4C
    _0801D512:
    movs r0, #0x00
    adds r1, r5, #0x0
    movs r2, #0x0A
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    ldr r1, _0801D55C @ =0x080DB234
    lsls r0, r6, #0x02
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    adds r1, r5, #0x1
    movs r0, #0x00
    movs r2, #0x0B
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    _0801D53E:
    adds r7, #0x01
    _0801D540:
    ldr r0, _0801D560 @ =0x03002E20
    ldr r1, _0801D564 @ =0x00000814
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r7, r0
    bge _0801D54E
    b _0801D3E6
    _0801D54E:
    movs r7, #0x00
    ldr r0, _0801D560 @ =0x03002E20
    ldr r2, _0801D564 @ =0x00000814
    adds r1, r0, r2
    b _0801D9AE
    .byte 0xAE, 0xB1, 0x0D, 0x08
    _0801D55C: .4byte 0x080DB234
    _0801D560: .4byte 0x03002E20
    _0801D564: .4byte 0x00000814
    _0801D568:
    adds r0, r2, #0x0
    adds r0, #0x24
    lsls r1, r7, #0x18
    lsrs r1, r1, #0x18
    str r2, [sp, #0x000]
    bl sub_804AED4
    adds r6, r0, #0x0
    lsls r0, r7, #0x03
    adds r0, #0x34
    mov r3, r10
    adds r4, r3, r0
    ldr r2, [sp, #0x000]
    ldr r0, [r2, #0x10]
    movs r1, #0x0C
    bl __umodsi3
    movs r5, #0x00
    ldr r2, [sp, #0x000]
    cmp r0, #0x05
    ble _0801D594
    movs r5, #0x01
    _0801D594:
    movs r1, #0x06
    ldsh r0, [r4, r1]
    movs r3, #0x01
    negs r3, r3
    mov r8, r3
    cmp r0, r8
    bne _0801D5A4
    b _0801D9B8
    _0801D5A4:
    ldr r1, _0801D5EC @ =0x00000838
    adds r0, r2, r1
    ldr r0, [r0, #0x00]
    adds r3, r7, #0x1
    mov r9, r3
    cmp r6, r0
    beq _0801D5B4
    b _0801D9A6
    _0801D5B4:
    ldrh r0, [r4, #0x00]
    cmp r0, #0x1C
    bls _0801D5BC
    b _0801D9A6
    _0801D5BC:
    lsls r0, r7, #0x01
    adds r0, r0, r7
    cmp r7, #0x03
    ble _0801D5C6
    adds r0, #0x05
    _0801D5C6:
    ldrh r1, [r4, #0x00]
    cmp r1, r0
    beq _0801D6A4
    adds r6, r1, #0x0
    movs r1, #0x06
    ldsh r0, [r4, r1]
    mov r8, r0
    lsls r0, r5, #0x02
    adds r1, r0, r5
    lsls r0, r1, #0x01
    movs r4, #0x00
    cmp r0, #0x0D
    bhi _0801D666
    lsls r0, r1, #0x03
    ldr r1, _0801D5F0 @ =0x0801D5F4
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
    _0801D5EC: .4byte 0x00000838
    _0801D5F0: .4byte 0x0801D5F4
    .byte 0x2C, 0xD6, 0x01, 0x08, 0x34, 0xD6, 0x01, 0x08, 0x3C, 0xD6, 0x01, 0x08, 0x44, 0xD6, 0x01, 0x08
    .byte 0x66, 0xD6, 0x01, 0x08, 0x66, 0xD6, 0x01, 0x08, 0x66, 0xD6, 0x01, 0x08, 0x66, 0xD6, 0x01, 0x08
    .byte 0x66, 0xD6, 0x01, 0x08, 0x66, 0xD6, 0x01, 0x08, 0x4C, 0xD6, 0x01, 0x08, 0x54, 0xD6, 0x01, 0x08
    .byte 0x5C, 0xD6, 0x01, 0x08, 0x64, 0xD6, 0x01, 0x08, 0x00, 0x4C, 0x1A, 0xE0, 0xB2, 0xB0, 0x0D, 0x08
    .byte 0x00, 0x4C, 0x16, 0xE0, 0xD6, 0xB0, 0x0D, 0x08, 0x00, 0x4C, 0x12, 0xE0, 0xFA, 0xB0, 0x0D, 0x08
    .byte 0x00, 0x4C, 0x0E, 0xE0, 0x1E, 0xB1, 0x0D, 0x08, 0x00, 0x4C, 0x0A, 0xE0, 0x42, 0xB1, 0x0D, 0x08
    .byte 0x00, 0x4C, 0x06, 0xE0, 0x66, 0xB1, 0x0D, 0x08, 0x00, 0x4C, 0x02, 0xE0, 0x8A, 0xB1, 0x0D, 0x08
    .byte 0x0D, 0x4C
    _0801D666:
    movs r0, #0x00
    adds r1, r6, #0x0
    movs r2, #0x0A
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    ldr r1, _0801D6A0 @ =0x080DB234
    mov r2, r8
    lsls r0, r2, #0x02
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    adds r1, r6, #0x1
    movs r0, #0x00
    movs r2, #0x0B
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    adds r7, #0x01
    mov r9, r7
    b _0801D9A6
    .byte 0x00, 0x00, 0xAE, 0xB1, 0x0D, 0x08
    _0801D6A0: .4byte 0x080DB234
    _0801D6A4:
    movs r3, #0x00
    mov r12, r3
    mov r6, r9
    lsls r0, r6, #0x01
    adds r3, r0, r6
    cmp r6, #0x03
    ble _0801D6B4
    adds r3, #0x05
    _0801D6B4:
    ldr r6, _0801D708 @ =0x00000814
    adds r0, r2, r6
    ldrb r0, [r0, #0x00]
    subs r0, #0x01
    cmp r7, r0
    bge _0801D6E0
    mov r2, r9
    lsls r0, r2, #0x03
    mov r6, r10
    adds r2, r6, r0
    movs r6, #0x3A
    ldsh r0, [r2, r6]
    cmp r0, r8
    beq _0801D6E0
    ldrh r0, [r2, #0x34]
    cmp r0, r3
    beq _0801D6DA
    movs r0, #0x01
    mov r12, r0
    _0801D6DA:
    mov r2, r12
    cmp r2, #0x00
    beq _0801D7A4
    _0801D6E0:
    cmp r7, #0x00
    beq _0801D6E8
    cmp r7, #0x04
    bne _0801D748
    _0801D6E8:
    adds r6, r1, #0x0
    movs r3, #0x06
    ldsh r7, [r4, r3]
    lsls r0, r5, #0x02
    adds r1, r0, r5
    lsls r0, r1, #0x01
    movs r4, #0x00
    cmp r0, #0x0D
    bls _0801D6FC
    b _0801D8AE
    _0801D6FC:
    lsls r0, r1, #0x03
    ldr r1, _0801D70C @ =0x0801D710
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
    _0801D708: .4byte 0x00000814
    _0801D70C: .4byte 0x0801D710
    .byte 0x74, 0xD8, 0x01, 0x08, 0x7C, 0xD8, 0x01, 0x08, 0x84, 0xD8, 0x01, 0x08, 0x8C, 0xD8, 0x01, 0x08
    .byte 0xAE, 0xD8, 0x01, 0x08, 0xAE, 0xD8, 0x01, 0x08, 0xAE, 0xD8, 0x01, 0x08, 0xAE, 0xD8, 0x01, 0x08
    .byte 0xAE, 0xD8, 0x01, 0x08, 0xAE, 0xD8, 0x01, 0x08, 0x94, 0xD8, 0x01, 0x08, 0x9C, 0xD8, 0x01, 0x08
    .byte 0xA4, 0xD8, 0x01, 0x08, 0xAC, 0xD8, 0x01, 0x08
    _0801D748:
    adds r6, r1, #0x0
    movs r0, #0x06
    ldsh r7, [r4, r0]
    lsls r0, r5, #0x02
    adds r0, r0, r5
    lsls r0, r0, #0x01
    adds r0, #0x03
    movs r4, #0x00
    cmp r0, #0x0D
    bls _0801D75E
    b _0801D8AE
    _0801D75E:
    lsls r0, r0, #0x02
    ldr r1, _0801D768 @ =0x0801D76C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    _0801D768: .4byte 0x0801D76C
    .byte 0x74, 0xD8, 0x01, 0x08, 0x7C, 0xD8, 0x01, 0x08, 0x84, 0xD8, 0x01, 0x08, 0x8C, 0xD8, 0x01, 0x08
    .byte 0xAE, 0xD8, 0x01, 0x08, 0xAE, 0xD8, 0x01, 0x08, 0xAE, 0xD8, 0x01, 0x08, 0xAE, 0xD8, 0x01, 0x08
    .byte 0xAE, 0xD8, 0x01, 0x08, 0xAE, 0xD8, 0x01, 0x08, 0x94, 0xD8, 0x01, 0x08, 0x9C, 0xD8, 0x01, 0x08
    .byte 0xA4, 0xD8, 0x01, 0x08, 0xAC, 0xD8, 0x01, 0x08
    _0801D7A4:
    cmp r7, #0x03
    beq _0801D818
    cmp r7, #0x03
    bgt _0801D7B2
    cmp r7, #0x00
    beq _0801D7BC
    b _0801D8E4
    _0801D7B2:
    cmp r7, #0x04
    beq _0801D7BC
    cmp r7, #0x07
    beq _0801D818
    b _0801D8E4
    _0801D7BC:
    adds r6, r1, #0x0
    movs r1, #0x06
    ldsh r7, [r4, r1]
    lsls r0, r5, #0x02
    adds r0, r0, r5
    lsls r0, r0, #0x01
    adds r0, #0x01
    movs r4, #0x00
    cmp r0, #0x0D
    bls _0801D7D2
    b _0801D8AE
    _0801D7D2:
    lsls r0, r0, #0x02
    ldr r1, _0801D7DC @ =0x0801D7E0
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    _0801D7DC: .4byte 0x0801D7E0
    .byte 0x74, 0xD8, 0x01, 0x08, 0x7C, 0xD8, 0x01, 0x08, 0x84, 0xD8, 0x01, 0x08, 0x8C, 0xD8, 0x01, 0x08
    .byte 0xAE, 0xD8, 0x01, 0x08, 0xAE, 0xD8, 0x01, 0x08, 0xAE, 0xD8, 0x01, 0x08, 0xAE, 0xD8, 0x01, 0x08
    .byte 0xAE, 0xD8, 0x01, 0x08, 0xAE, 0xD8, 0x01, 0x08, 0x94, 0xD8, 0x01, 0x08, 0x9C, 0xD8, 0x01, 0x08
    .byte 0xA4, 0xD8, 0x01, 0x08, 0xAC, 0xD8, 0x01, 0x08
    _0801D818:
    adds r6, r1, #0x0
    movs r2, #0x06
    ldsh r7, [r4, r2]
    lsls r0, r5, #0x02
    adds r0, r0, r5
    lsls r0, r0, #0x01
    adds r0, #0x03
    movs r4, #0x00
    cmp r0, #0x0D
    bhi _0801D8AE
    lsls r0, r0, #0x02
    ldr r1, _0801D838 @ =0x0801D83C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
    _0801D838: .4byte 0x0801D83C
    .byte 0x74, 0xD8, 0x01, 0x08, 0x7C, 0xD8, 0x01, 0x08, 0x84, 0xD8, 0x01, 0x08, 0x8C, 0xD8, 0x01, 0x08
    .byte 0xAE, 0xD8, 0x01, 0x08, 0xAE, 0xD8, 0x01, 0x08, 0xAE, 0xD8, 0x01, 0x08, 0xAE, 0xD8, 0x01, 0x08
    .byte 0xAE, 0xD8, 0x01, 0x08, 0xAE, 0xD8, 0x01, 0x08, 0x94, 0xD8, 0x01, 0x08, 0x9C, 0xD8, 0x01, 0x08
    .byte 0xA4, 0xD8, 0x01, 0x08, 0xAC, 0xD8, 0x01, 0x08, 0x00, 0x4C, 0x1A, 0xE0, 0xB2, 0xB0, 0x0D, 0x08
    .byte 0x00, 0x4C, 0x16, 0xE0, 0xD6, 0xB0, 0x0D, 0x08, 0x00, 0x4C, 0x12, 0xE0, 0xFA, 0xB0, 0x0D, 0x08
    .byte 0x00, 0x4C, 0x0E, 0xE0, 0x1E, 0xB1, 0x0D, 0x08, 0x00, 0x4C, 0x0A, 0xE0, 0x42, 0xB1, 0x0D, 0x08
    .byte 0x00, 0x4C, 0x06, 0xE0, 0x66, 0xB1, 0x0D, 0x08, 0x00, 0x4C, 0x02, 0xE0, 0x8A, 0xB1, 0x0D, 0x08
    .byte 0x0B, 0x4C
    _0801D8AE:
    movs r0, #0x00
    adds r1, r6, #0x0
    movs r2, #0x0A
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    ldr r1, _0801D8E0 @ =0x080DB234
    lsls r0, r7, #0x02
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    adds r1, r6, #0x1
    movs r0, #0x00
    movs r2, #0x0B
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    b _0801D9A6
    .byte 0xAE, 0xB1, 0x0D, 0x08
    _0801D8E0: .4byte 0x080DB234
    _0801D8E4:
    adds r6, r1, #0x0
    movs r3, #0x06
    ldsh r7, [r4, r3]
    lsls r0, r5, #0x02
    adds r0, r0, r5
    lsls r0, r0, #0x01
    adds r0, #0x02
    movs r4, #0x00
    cmp r0, #0x0D
    bhi _0801D97A
    lsls r0, r0, #0x02
    ldr r1, _0801D904 @ =0x0801D908
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
    _0801D904: .4byte 0x0801D908
    .byte 0x40, 0xD9, 0x01, 0x08, 0x48, 0xD9, 0x01, 0x08, 0x50, 0xD9, 0x01, 0x08, 0x58, 0xD9, 0x01, 0x08
    .byte 0x7A, 0xD9, 0x01, 0x08, 0x7A, 0xD9, 0x01, 0x08, 0x7A, 0xD9, 0x01, 0x08, 0x7A, 0xD9, 0x01, 0x08
    .byte 0x7A, 0xD9, 0x01, 0x08, 0x7A, 0xD9, 0x01, 0x08, 0x60, 0xD9, 0x01, 0x08, 0x68, 0xD9, 0x01, 0x08
    .byte 0x70, 0xD9, 0x01, 0x08, 0x78, 0xD9, 0x01, 0x08, 0x00, 0x4C, 0x1A, 0xE0, 0xB2, 0xB0, 0x0D, 0x08
    .byte 0x00, 0x4C, 0x16, 0xE0, 0xD6, 0xB0, 0x0D, 0x08, 0x00, 0x4C, 0x12, 0xE0, 0xFA, 0xB0, 0x0D, 0x08
    .byte 0x00, 0x4C, 0x0E, 0xE0, 0x1E, 0xB1, 0x0D, 0x08, 0x00, 0x4C, 0x0A, 0xE0, 0x42, 0xB1, 0x0D, 0x08
    .byte 0x00, 0x4C, 0x06, 0xE0, 0x66, 0xB1, 0x0D, 0x08, 0x00, 0x4C, 0x02, 0xE0, 0x8A, 0xB1, 0x0D, 0x08
    .byte 0x13, 0x4C
    _0801D97A:
    movs r0, #0x00
    adds r1, r6, #0x0
    movs r2, #0x0A
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    ldr r1, _0801D9CC @ =0x080DB234
    lsls r0, r7, #0x02
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    adds r1, r6, #0x1
    movs r0, #0x00
    movs r2, #0x0B
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    _0801D9A6:
    mov r7, r9
    ldr r0, _0801D9D0 @ =0x03002E20
    ldr r6, _0801D9D4 @ =0x00000814
    adds r1, r0, r6
    _0801D9AE:
    adds r2, r0, #0x0
    ldrb r1, [r1, #0x00]
    cmp r7, r1
    bge _0801D9B8
    b _0801D568
    _0801D9B8:
    add sp, #0x004
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0xAE, 0xB1, 0x0D, 0x08
    _0801D9CC: .4byte 0x080DB234
    _0801D9D0: .4byte 0x03002E20
    _0801D9D4: .4byte 0x00000814
    thumb_func_start sub_801D9D8
    sub_801D9D8:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x010
    bl sub_800EDDC
    str r0, [sp, #0x000]
    ldr r0, _0801DA9C @ =0x03002E20
    ldr r1, _0801DAA0 @ =0x00000814
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    str r0, [sp, #0x004]
    movs r1, #0x00
    cmp r1, r0
    bge _0801DA8A
    _0801D9FA:
    lsls r0, r1, #0x04
    adds r0, #0x34
    ldr r3, [sp, #0x000]
    adds r2, r3, r0
    ldrh r0, [r2, #0x0C]
    adds r7, r1, #0x1
    str r7, [sp, #0x008]
    cmp r0, #0x00
    bne _0801DA82
    ldr r0, [sp, #0x004]
    subs r0, #0x01
    movs r3, #0x02
    cmp r1, r0
    bne _0801DA18
    movs r3, #0x03
    _0801DA18:
    lsls r0, r1, #0x01
    adds r0, #0x03
    mov r10, r0
    mov r8, r3
    ldrh r6, [r2, #0x0A]
    movs r0, #0x01
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    mov r9, r0
    movs r0, #0x00
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    mov r12, r0
    movs r0, #0x00
    cmp r0, r8
    bge _0801DA82
    _0801DA40:
    movs r4, #0x00
    mov r1, r10
    adds r5, r1, r0
    adds r0, #0x01
    str r0, [sp, #0x00C]
    adds r3, r5, #0x0
    lsls r0, r3, #0x06
    mov r7, r9
    adds r2, r0, r7
    lsls r0, r3, #0x05
    adds r0, r6, r0
    lsls r0, r0, #0x01
    mov r7, r12
    adds r1, r0, r7
    _0801DA5C:
    adds r0, r4, r6
    cmp r0, #0x00
    blt _0801DA72
    cmp r5, #0x00
    blt _0801DA72
    cmp r0, #0x1D
    bgt _0801DA72
    cmp r3, #0x13
    bgt _0801DA72
    ldrh r0, [r2, #0x00]
    strh r0, [r1, #0x00]
    _0801DA72:
    adds r2, #0x02
    adds r1, #0x02
    adds r4, #0x01
    cmp r4, #0x20
    blt _0801DA5C
    ldr r0, [sp, #0x00C]
    cmp r0, r8
    blt _0801DA40
    _0801DA82:
    ldr r1, [sp, #0x008]
    ldr r0, [sp, #0x004]
    cmp r1, r0
    blt _0801D9FA
    _0801DA8A:
    add sp, #0x010
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _0801DA9C: .4byte 0x03002E20
    _0801DAA0: .4byte 0x00000814
    thumb_func_start sub_801DAA4
    sub_801DAA4:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    add sp, #-0x004
    ldr r4, _0801DBF8 @ =0x0809A9AC
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r0, #0xC0
    lsls r0, r0, #0x01
    adds r1, r1, r0
    adds r0, r4, #0x0
    movs r2, #0x20
    bl CpuFastSet
    ldr r4, _0801DBFC @ =0x080AACF0
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r0, #0xE0
    lsls r0, r0, #0x01
    adds r1, r1, r0
    adds r0, r4, #0x0
    movs r2, #0x10
    bl CpuFastSet
    movs r0, #0x01
    bl pltt_setDirtyFlag
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0801DC00 @ =0x080ACAFC
    ldr r2, _0801DC04 @ =0x06001400
    ldr r3, _0801DC08 @ =0x80000600
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0801DC0C @ =0x080ABEFC
    ldr r2, _0801DC10 @ =0x06002000
    ldr r3, _0801DC14 @ =0x80000400
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0801DC18 @ =0x0809AA2C
    movs r2, #0xC0
    lsls r2, r2, #0x13
    ldr r3, _0801DC1C @ =0x80000200
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0801DC20 @ =0x0809AE2C
    ldr r2, _0801DC24 @ =0x06001000
    ldr r3, _0801DC28 @ =0x80000240
    bl dmaq_enqueue
    ldr r4, _0801DC2C @ =0x0809B2AC
    movs r0, #0x00
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl LZ77UnCompWram
    movs r0, #0x00
    str r0, [sp, #0x000]
    movs r1, #0x00
    movs r2, #0x03
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    ldr r2, _0801DC30 @ =0x01000110
    mov r0, sp
    bl CpuFastSet
    ldr r0, _0801DC34 @ =0x03002E20
    movs r1, #0x80
    lsls r1, r1, #0x04
    adds r0, r0, r1
    ldrb r1, [r0, #0x00]
    movs r7, #0x00
    lsls r0, r1, #0x01
    adds r0, r0, r1
    mov r8, r0
    _0801DB58:
    adds r6, r7, #0x0
    adds r6, #0x0F
    movs r0, #0x00
    adds r1, r6, #0x0
    movs r2, #0x01
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    mov r0, r8
    adds r5, r0, r7
    movs r0, #0x00
    adds r1, r5, #0x0
    movs r2, #0x1C
    bl map_getBufferPtr2d
    ldrh r0, [r0, #0x00]
    strh r0, [r4, #0x00]
    movs r0, #0x00
    adds r1, r6, #0x0
    movs r2, #0x02
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    movs r0, #0x00
    adds r1, r5, #0x0
    movs r2, #0x1D
    bl map_getBufferPtr2d
    ldrh r0, [r0, #0x00]
    strh r0, [r4, #0x00]
    adds r7, #0x01
    cmp r7, #0x02
    ble _0801DB58
    ldr r6, _0801DC34 @ =0x03002E20
    ldr r1, _0801DC38 @ =0x00000801
    adds r5, r6, r1
    ldrb r0, [r5, #0x00]
    bl track_getCup
    lsls r0, r0, #0x18
    ldr r1, _0801DC3C @ =0x080DB254
    lsrs r0, r0, #0x16
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    ldr r1, _0801DC40 @ =0x06000800
    bl LZ77UnCompVram
    ldrb r0, [r5, #0x00]
    bl track_getCup
    adds r4, r0, #0x0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    ldrb r0, [r5, #0x00]
    bl track_getCupIndex
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    lsls r4, r4, #0x02
    adds r5, r4, r0
    ldr r0, _0801DC44 @ =0x0000059C
    adds r6, r6, r0
    ldr r0, [r6, #0x00]
    ldr r0, [r0, #0x0C]
    bl sub_8032BC8
    cmp r0, #0x00
    beq _0801DC50
    ldr r4, _0801DC48 @ =0x080E7FEC
    adds r0, r5, #0x0
    bl track_getRetroTrack
    lsls r0, r0, #0x02
    adds r0, r0, r4
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x30]
    ldr r1, _0801DC4C @ =0x06000400
    bl LZ77UnCompVram
    b _0801DC66
    _0801DBF8: .4byte 0x0809A9AC
    _0801DBFC: .4byte 0x080AACF0
    _0801DC00: .4byte 0x080ACAFC
    _0801DC04: .4byte 0x06001400
    _0801DC08: .4byte 0x80000600
    _0801DC0C: .4byte 0x080ABEFC
    _0801DC10: .4byte 0x06002000
    _0801DC14: .4byte 0x80000400
    _0801DC18: .4byte 0x0809AA2C
    _0801DC1C: .4byte 0x80000200
    _0801DC20: .4byte 0x0809AE2C
    _0801DC24: .4byte 0x06001000
    _0801DC28: .4byte 0x80000240
    _0801DC2C: .4byte 0x0809B2AC
    _0801DC30: .4byte 0x01000110
    _0801DC34: .4byte 0x03002E20
    _0801DC38: .4byte 0x00000801
    _0801DC3C: .4byte 0x080DB254
    _0801DC40: .4byte 0x06000800
    _0801DC44: .4byte 0x0000059C
    _0801DC48: .4byte 0x080E7FEC
    _0801DC4C: .4byte 0x06000400
    _0801DC50:
    ldr r4, _0801DC74 @ =0x080E7FEC
    adds r0, r5, #0x0
    bl track_getMKSCTrack
    lsls r0, r0, #0x02
    adds r0, r0, r4
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x30]
    ldr r1, _0801DC78 @ =0x06000400
    bl LZ77UnCompVram
    _0801DC66:
    add sp, #0x004
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _0801DC74: .4byte 0x080E7FEC
    _0801DC78: .4byte 0x06000400
    thumb_func_start sub_801DC7C
    sub_801DC7C:
    push {r4, lr}
    movs r4, #0x00
    bl sub_802DC88
    cmp r0, #0x00
    beq _0801DC90
    bl sub_802DCB4
    cmp r0, #0x00
    bne _0801DC92
    _0801DC90:
    movs r4, #0x01
    _0801DC92:
    cmp r4, #0x00
    beq _0801DCE4
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0801DCC8 @ =0x080AAE3C
    ldr r2, _0801DCCC @ =0x06002000
    ldr r3, _0801DCD0 @ =0x80000400
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0801DCD4 @ =0x080ADA7C
    ldr r2, _0801DCD8 @ =0x06002800
    ldr r3, _0801DCDC @ =0x80000200
    bl dmaq_enqueue
    ldr r4, _0801DCE0 @ =0x080DB268
    movs r0, #0x01
    movs r1, #0x09
    movs r2, #0x0E
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    b _0801DD14
    _0801DCC8: .4byte 0x080AAE3C
    _0801DCCC: .4byte 0x06002000
    _0801DCD0: .4byte 0x80000400
    _0801DCD4: .4byte 0x080ADA7C
    _0801DCD8: .4byte 0x06002800
    _0801DCDC: .4byte 0x80000200
    _0801DCE0: .4byte 0x080DB268
    _0801DCE4:
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0801DD38 @ =0x080AAE3C
    ldr r2, _0801DD3C @ =0x06002000
    ldr r3, _0801DD40 @ =0x80000400
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0801DD44 @ =0x080AD8BC
    ldr r2, _0801DD48 @ =0x06002080
    ldr r3, _0801DD4C @ =0x800000E0
    bl dmaq_enqueue
    ldr r4, _0801DD50 @ =0x080DB2FC
    movs r0, #0x01
    movs r1, #0x0A
    movs r2, #0x0F
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    _0801DD14:
    ldr r4, _0801DD54 @ =0x080AACF0
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r0, #0xE0
    lsls r0, r0, #0x01
    adds r1, r1, r0
    adds r0, r4, #0x0
    movs r2, #0x10
    bl CpuFastSet
    movs r0, #0x01
    bl pltt_setDirtyFlag
    pop {r4}
    pop {r0}
    bx r0
    _0801DD38: .4byte 0x080AAE3C
    _0801DD3C: .4byte 0x06002000
    _0801DD40: .4byte 0x80000400
    _0801DD44: .4byte 0x080AD8BC
    _0801DD48: .4byte 0x06002080
    _0801DD4C: .4byte 0x800000E0
    _0801DD50: .4byte 0x080DB2FC
    _0801DD54: .4byte 0x080AACF0
    thumb_func_start sub_801DD58
    sub_801DD58:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x024
    str r0, [sp, #0x00C]
    mov r8, r1
    str r2, [sp, #0x010]
    mov r10, r3
    ldr r0, _0801DE08 @ =0x03002E20
    ldr r1, _0801DE0C @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov r2, r8
    movs r3, #0x02
    ldsh r4, [r2, r3]
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    bl sub_800EDB0
    movs r7, #0xF0
    lsls r7, r7, #0x08
    cmp r4, r0
    bne _0801DD92
    movs r7, #0xE0
    lsls r7, r7, #0x08
    _0801DD92:
    ldr r4, [sp, #0x00C]
    lsls r3, r4, #0x07
    mov r5, r10
    adds r1, r3, r5
    adds r2, r1, #0x0
    adds r2, #0xC2
    ldr r6, _0801DE10 @ =0x00000101
    adds r0, r6, #0x0
    mov r4, r8
    ldrh r4, [r4, #0x00]
    adds r0, r0, r4
    orrs r0, r7
    strh r0, [r2, #0x00]
    movs r5, #0x81
    lsls r5, r5, #0x01
    adds r1, r1, r5
    adds r6, #0x20
    adds r0, r6, #0x0
    mov r2, r8
    ldrh r2, [r2, #0x00]
    adds r0, r0, r2
    orrs r0, r7
    strh r0, [r1, #0x00]
    ldr r0, _0801DE14 @ =0x080DB3DC
    mov r4, r8
    movs r5, #0x02
    ldsh r1, [r4, r5]
    lsls r2, r1, #0x03
    adds r2, r2, r0
    lsls r1, r1, #0x01
    adds r1, #0x01
    lsls r1, r1, #0x02
    adds r1, r1, r0
    movs r6, #0x00
    mov r9, r6
    str r3, [sp, #0x018]
    ldr r5, [r0, #0x40]
    mov r12, r6
    movs r0, #0x83
    lsls r0, r0, #0x01
    add r0, r10
    adds r4, r3, r0
    ldr r2, [r2, #0x00]
    mov r0, r10
    adds r0, #0xC6
    adds r6, r3, r0
    ldr r3, [r1, #0x00]
    movs r0, #0xE0
    lsls r0, r0, #0x02
    add r0, r10
    str r0, [sp, #0x014]
    _0801DDF8:
    mov r1, r9
    cmp r1, #0x03
    bgt _0801DE18
    ldrh r0, [r2, #0x00]
    strh r0, [r6, #0x00]
    ldrh r0, [r3, #0x00]
    b _0801DE2A
    .byte 0x00, 0x00
    _0801DE08: .4byte 0x03002E20
    _0801DE0C: .4byte 0x00000838
    _0801DE10: .4byte 0x00000101
    _0801DE14: .4byte 0x080DB3DC
    _0801DE18:
    ldrh r1, [r2, #0x00]
    ldr r0, _0801DE6C @ =0x00000FFF
    ands r0, r1
    orrs r0, r7
    strh r0, [r6, #0x00]
    ldrh r1, [r3, #0x00]
    ldr r0, _0801DE6C @ =0x00000FFF
    ands r0, r1
    orrs r0, r7
    _0801DE2A:
    strh r0, [r4, #0x00]
    ldr r0, [sp, #0x00C]
    cmp r0, #0x07
    bne _0801DE40
    ldr r0, [sp, #0x014]
    add r0, r12
    movs r1, #0xA3
    lsls r1, r1, #0x01
    adds r1, r0, r1
    ldrh r0, [r5, #0x00]
    strh r0, [r1, #0x00]
    _0801DE40:
    adds r5, #0x02
    movs r0, #0x02
    add r12, r0
    adds r4, #0x02
    adds r2, #0x02
    adds r6, #0x02
    adds r3, #0x02
    movs r1, #0x01
    add r9, r1
    mov r0, r9
    cmp r0, #0x08
    ble _0801DDF8
    ldr r1, [sp, #0x010]
    cmp r1, #0x01
    bne _0801DE60
    b _0801DF7C
    _0801DE60:
    cmp r1, #0x01
    bgt _0801DE70
    cmp r1, #0x00
    beq _0801DE7A
    b _0801E0A8
    .byte 0x00, 0x00
    _0801DE6C: .4byte 0x00000FFF
    _0801DE70:
    ldr r2, [sp, #0x010]
    cmp r2, #0x02
    bne _0801DE78
    b _0801E03E
    _0801DE78:
    b _0801E0A8
    _0801DE7A:
    mov r3, r8
    ldrh r0, [r3, #0x04]
    add r2, sp, #0x004
    add r3, sp, #0x008
    mov r1, sp
    bl sub_804EFBC
    ldr r4, [sp, #0x018]
    add r4, r10
    mov r12, r4
    mov r1, r12
    adds r1, #0xEC
    ldr r5, [sp, #0x000]
    movs r6, #0x0F
    mov r9, r6
    movs r0, #0x0F
    mov r8, r0
    ands r5, r0
    str r5, [sp, #0x020]
    movs r3, #0x80
    lsls r3, r3, #0x01
    adds r2, r3, #0x0
    adds r0, r5, r2
    orrs r0, r7
    strh r0, [r1, #0x00]
    mov r3, r12
    adds r3, #0xEE
    movs r4, #0x85
    lsls r4, r4, #0x01
    adds r1, r4, #0x0
    adds r0, r7, #0x0
    orrs r0, r1
    strh r0, [r3, #0x00]
    adds r3, #0x02
    ldr r1, [sp, #0x004]
    lsrs r5, r1, #0x04
    mov r6, r9
    ands r5, r6
    adds r0, r5, r2
    orrs r0, r7
    strh r0, [r3, #0x00]
    adds r3, #0x02
    mov r4, r8
    ands r4, r1
    adds r0, r4, r2
    orrs r0, r7
    strh r0, [r3, #0x00]
    adds r3, #0x02
    ldr r0, _0801DF74 @ =0x0000010B
    adds r1, r0, #0x0
    adds r0, r7, #0x0
    orrs r0, r1
    strh r0, [r3, #0x00]
    movs r1, #0xF6
    add r1, r12
    mov r10, r1
    ldr r1, [sp, #0x008]
    lsrs r3, r1, #0x04
    ands r3, r6
    adds r0, r3, r2
    orrs r0, r7
    mov r6, r10
    strh r0, [r6, #0x00]
    movs r0, #0xF8
    add r0, r12
    mov r6, r8
    ands r6, r1
    mov r8, r6
    add r2, r8
    orrs r2, r7
    strh r2, [r0, #0x00]
    movs r0, #0x96
    lsls r0, r0, #0x01
    add r0, r12
    movs r1, #0x90
    lsls r1, r1, #0x01
    mov r9, r1
    ldr r6, [sp, #0x020]
    add r6, r9
    orrs r6, r7
    strh r6, [r0, #0x00]
    movs r2, #0x97
    lsls r2, r2, #0x01
    add r2, r12
    movs r6, #0x95
    lsls r6, r6, #0x01
    adds r1, r6, #0x0
    adds r0, r7, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    movs r0, #0x98
    lsls r0, r0, #0x01
    add r0, r12
    add r5, r9
    orrs r5, r7
    strh r5, [r0, #0x00]
    movs r0, #0x99
    lsls r0, r0, #0x01
    add r0, r12
    add r4, r9
    orrs r4, r7
    strh r4, [r0, #0x00]
    movs r2, #0x9A
    lsls r2, r2, #0x01
    add r2, r12
    ldr r0, _0801DF78 @ =0x0000012B
    adds r1, r0, #0x0
    adds r0, r7, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    movs r0, #0x9B
    lsls r0, r0, #0x01
    add r0, r12
    add r3, r9
    orrs r3, r7
    strh r3, [r0, #0x00]
    movs r0, #0x9C
    lsls r0, r0, #0x01
    add r0, r12
    add r8, r9
    mov r1, r8
    orrs r7, r1
    strh r7, [r0, #0x00]
    b _0801E0A8
    .byte 0x00, 0x00
    _0801DF74: .4byte 0x0000010B
    _0801DF78: .4byte 0x0000012B
    _0801DF7C:
    ldr r6, [sp, #0x018]
    add r6, r10
    adds r4, r6, #0x0
    adds r4, #0xEE
    mov r2, r8
    movs r3, #0x06
    ldsh r0, [r2, r3]
    movs r1, #0x0A
    bl __divsi3
    movs r5, #0x80
    lsls r5, r5, #0x01
    mov r10, r5
    add r0, r10
    orrs r0, r7
    strh r0, [r4, #0x00]
    adds r4, #0x02
    mov r1, r8
    movs r2, #0x06
    ldsh r0, [r1, r2]
    movs r1, #0x0A
    bl __modsi3
    add r0, r10
    orrs r0, r7
    strh r0, [r4, #0x00]
    adds r0, r6, #0x0
    adds r0, #0xF2
    movs r5, #0x00
    strh r5, [r0, #0x00]
    movs r3, #0x97
    lsls r3, r3, #0x01
    adds r4, r6, r3
    mov r1, r8
    movs r2, #0x06
    ldsh r0, [r1, r2]
    movs r1, #0x0A
    bl __divsi3
    movs r3, #0x90
    lsls r3, r3, #0x01
    mov r9, r3
    add r0, r9
    orrs r0, r7
    strh r0, [r4, #0x00]
    movs r0, #0x98
    lsls r0, r0, #0x01
    adds r4, r6, r0
    mov r1, r8
    movs r2, #0x06
    ldsh r0, [r1, r2]
    movs r1, #0x0A
    bl __modsi3
    add r0, r9
    orrs r0, r7
    strh r0, [r4, #0x00]
    movs r3, #0x99
    lsls r3, r3, #0x01
    adds r0, r6, r3
    strh r5, [r0, #0x00]
    mov r4, r8
    movs r5, #0x00
    ldsh r0, [r4, r5]
    cmp r0, #0x03
    bgt _0801E0A8
    adds r2, r6, #0x0
    adds r2, #0xF4
    movs r0, #0x86
    lsls r0, r0, #0x01
    adds r1, r0, #0x0
    adds r0, r7, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    adds r1, r6, #0x0
    adds r1, #0xF6
    ldrh r0, [r4, #0x08]
    add r0, r10
    orrs r0, r7
    strh r0, [r1, #0x00]
    movs r1, #0x9A
    lsls r1, r1, #0x01
    adds r2, r6, r1
    subs r3, #0x06
    adds r1, r3, #0x0
    adds r0, r7, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    movs r4, #0x9B
    lsls r4, r4, #0x01
    adds r1, r6, r4
    mov r5, r8
    ldrh r0, [r5, #0x08]
    add r0, r9
    orrs r7, r0
    strh r7, [r1, #0x00]
    b _0801E0A8
    _0801E03E:
    ldr r6, [sp, #0x018]
    add r6, r10
    adds r5, r6, #0x0
    adds r5, #0xEE
    mov r1, r8
    movs r2, #0x06
    ldsh r0, [r1, r2]
    movs r1, #0x0A
    bl __divsi3
    movs r3, #0x80
    lsls r3, r3, #0x01
    adds r4, r3, #0x0
    adds r0, r0, r4
    orrs r0, r7
    strh r0, [r5, #0x00]
    adds r5, #0x02
    mov r1, r8
    movs r2, #0x06
    ldsh r0, [r1, r2]
    movs r1, #0x0A
    bl __modsi3
    adds r0, r0, r4
    orrs r0, r7
    strh r0, [r5, #0x00]
    movs r3, #0x97
    lsls r3, r3, #0x01
    adds r5, r6, r3
    mov r4, r8
    movs r1, #0x06
    ldsh r0, [r4, r1]
    movs r1, #0x0A
    bl __divsi3
    movs r2, #0x90
    lsls r2, r2, #0x01
    adds r4, r2, #0x0
    adds r0, r0, r4
    orrs r0, r7
    strh r0, [r5, #0x00]
    movs r3, #0x98
    lsls r3, r3, #0x01
    adds r5, r6, r3
    mov r6, r8
    movs r1, #0x06
    ldsh r0, [r6, r1]
    movs r1, #0x0A
    bl __modsi3
    adds r0, r0, r4
    orrs r7, r0
    strh r7, [r5, #0x00]
    _0801E0A8:
    add sp, #0x024
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    thumb_func_start sub_801E0B8
    sub_801E0B8:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x040
    bl sub_800EDDC
    str r0, [sp, #0x030]
    ldr r0, _0801E180 @ =0x03002E20
    movs r1, #0x24
    adds r1, r1, r0
    mov r8, r1
    ldr r2, _0801E184 @ =0x00000814
    adds r0, r0, r2
    ldrb r0, [r0, #0x00]
    str r0, [sp, #0x034]
    movs r5, #0x00
    cmp r5, r0
    bge _0801E114
    mov r7, sp
    ldr r6, [sp, #0x030]
    adds r6, #0x36
    _0801E0E6:
    lsls r1, r5, #0x02
    ldr r0, _0801E188 @ =0x000007F4
    add r0, r8
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    adds r0, r4, #0x0
    adds r0, #0xC4
    ldrb r0, [r0, #0x00]
    strh r0, [r6, #0x04]
    adds r0, r4, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    bl sub_800EDB0
    strh r0, [r6, #0x00]
    stm r7!, {r4}
    adds r6, #0x10
    adds r5, #0x01
    ldr r3, [sp, #0x034]
    cmp r5, r3
    blt _0801E0E6
    _0801E114:
    movs r5, #0x00
    ldr r4, [sp, #0x034]
    subs r4, #0x01
    str r4, [sp, #0x038]
    cmp r5, r4
    bge _0801E1F6
    _0801E120:
    adds r6, r5, #0x1
    mov r12, r6
    ldr r7, [sp, #0x034]
    cmp r12, r7
    bge _0801E1EE
    lsls r0, r5, #0x04
    ldr r1, [sp, #0x030]
    adds r1, r1, r0
    mov r8, r1
    lsls r0, r5, #0x02
    add r0, sp
    str r0, [sp, #0x03C]
    add r2, sp, #0x020
    mov r10, r2
    lsls r0, r6, #0x04
    ldr r3, [sp, #0x030]
    adds r5, r0, r3
    lsls r0, r6, #0x02
    mov r6, sp
    adds r4, r0, r6
    mov r0, r12
    subs r6, r7, r0
    _0801E14C:
    movs r1, #0x00
    mov r9, r1
    mov r2, r8
    movs r3, #0x3A
    ldsh r1, [r2, r3]
    movs r7, #0x3A
    ldsh r0, [r5, r7]
    cmp r1, r0
    blt _0801E1AE
    cmp r1, r0
    bne _0801E1A8
    ldr r0, [sp, #0x03C]
    ldr r2, [r0, #0x00]
    ldr r0, [r2, #0x48]
    movs r3, #0x80
    lsls r3, r3, #0x08
    ands r0, r3
    cmp r0, #0x00
    bne _0801E18C
    ldr r0, [r4, #0x00]
    ldr r0, [r0, #0x48]
    ands r0, r3
    cmp r0, #0x00
    beq _0801E1A8
    b _0801E1AE
    .byte 0x00, 0x00
    _0801E180: .4byte 0x03002E20
    _0801E184: .4byte 0x00000814
    _0801E188: .4byte 0x000007F4
    _0801E18C:
    ldr r1, [r4, #0x00]
    ldr r0, [r1, #0x48]
    ands r0, r3
    cmp r0, #0x00
    beq _0801E1A8
    adds r0, r2, #0x0
    adds r0, #0xEC
    adds r1, #0xEC
    ldrb r0, [r0, #0x00]
    ldrb r1, [r1, #0x00]
    cmp r0, r1
    bls _0801E1A8
    movs r1, #0x01
    mov r9, r1
    _0801E1A8:
    mov r2, r9
    cmp r2, #0x00
    beq _0801E1E4
    _0801E1AE:
    mov r1, r10
    adds r0, r5, #0x0
    adds r0, #0x34
    ldm r0!, {r2, r3, r7}
    stm r1!, {r2, r3, r7}
    ldr r0, [r0, #0x00]
    str r0, [r1, #0x00]
    adds r1, r5, #0x0
    adds r1, #0x34
    mov r0, r8
    adds r0, #0x34
    ldm r0!, {r2, r3, r7}
    stm r1!, {r2, r3, r7}
    ldr r0, [r0, #0x00]
    str r0, [r1, #0x00]
    mov r1, r8
    adds r1, #0x34
    mov r0, r10
    ldm r0!, {r2, r3, r7}
    stm r1!, {r2, r3, r7}
    ldr r0, [r0, #0x00]
    str r0, [r1, #0x00]
    ldr r1, [r4, #0x00]
    ldr r3, [sp, #0x03C]
    ldr r0, [r3, #0x00]
    str r0, [r4, #0x00]
    str r1, [r3, #0x00]
    _0801E1E4:
    adds r5, #0x10
    adds r4, #0x04
    subs r6, #0x01
    cmp r6, #0x00
    bne _0801E14C
    _0801E1EE:
    mov r5, r12
    ldr r4, [sp, #0x038]
    cmp r5, r4
    blt _0801E120
    _0801E1F6:
    ldr r6, [sp, #0x030]
    movs r7, #0x3A
    ldsh r2, [r6, r7]
    movs r3, #0x00
    movs r5, #0x00
    ldr r1, _0801E224 @ =0x03002E20
    ldr r4, _0801E228 @ =0x00000814
    adds r0, r1, r4
    ldrb r6, [r0, #0x00]
    cmp r5, r6
    bge _0801E238
    adds r4, r0, #0x0
    ldr r1, [sp, #0x030]
    adds r1, #0x34
    _0801E212:
    movs r7, #0x06
    ldsh r0, [r1, r7]
    cmp r2, r0
    beq _0801E22C
    strh r5, [r1, #0x00]
    adds r3, r5, #0x0
    adds r2, r0, #0x0
    b _0801E22E
    .byte 0x00, 0x00
    _0801E224: .4byte 0x03002E20
    _0801E228: .4byte 0x00000814
    _0801E22C:
    strh r3, [r1, #0x00]
    _0801E22E:
    adds r1, #0x10
    adds r5, #0x01
    ldrb r6, [r4, #0x00]
    cmp r5, r6
    blt _0801E212
    _0801E238:
    add sp, #0x040
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    thumb_func_start sub_801E248
    sub_801E248:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x014
    adds r4, r0, #0x0
    bl sub_800EDDC
    str r0, [sp, #0x008]
    ldr r0, _0801E2AC @ =0x03002E20
    movs r5, #0x00
    ldr r1, _0801E2B0 @ =0x00000838
    adds r2, r0, r1
    lsls r1, r4, #0x02
    ldr r3, _0801E2B4 @ =0x00000818
    adds r0, r0, r3
    adds r1, r1, r0
    ldr r2, [r2, #0x00]
    ldr r0, [r1, #0x00]
    cmp r2, r0
    bne _0801E276
    movs r5, #0x01
    _0801E276:
    lsls r0, r4, #0x01
    ldr r1, [sp, #0x008]
    adds r1, #0x14
    adds r3, r1, r0
    movs r6, #0x00
    ldsh r2, [r3, r6]
    mov r9, r0
    mov r10, r1
    cmp r2, #0x04
    beq _0801E296
    ldr r1, [sp, #0x008]
    adds r1, #0x2C
    add r1, r9
    ldrh r0, [r1, #0x00]
    adds r0, #0x01
    strh r0, [r1, #0x00]
    _0801E296:
    movs r7, #0x00
    ldsh r0, [r3, r7]
    cmp r0, #0x04
    bls _0801E2A0
    b _0801E7A6
    _0801E2A0:
    lsls r0, r0, #0x02
    ldr r1, _0801E2B8 @ =0x0801E2BC
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
    _0801E2AC: .4byte 0x03002E20
    _0801E2B0: .4byte 0x00000838
    _0801E2B4: .4byte 0x00000818
    _0801E2B8: .4byte 0x0801E2BC
    .byte 0xD0, 0xE2, 0x01, 0x08, 0x18, 0xE3, 0x01, 0x08, 0xD4, 0xE3, 0x01, 0x08, 0x7A, 0xE6, 0x01, 0x08
    .byte 0x7A, 0xE6, 0x01, 0x08, 0x00, 0x2D, 0x0D, 0xD0, 0x0F, 0x4C, 0x24, 0x34, 0x20, 0x1C, 0x2F, 0xF0
    .byte 0x37, 0xFB, 0x20, 0x1C, 0x2F, 0xF0, 0x30, 0xFF, 0x20, 0x1C, 0x30, 0xF0, 0xEB, 0xFF, 0x20, 0x1C
    .byte 0x31, 0xF0, 0x28, 0xF8, 0x02, 0x98, 0x2C, 0x30, 0x48, 0x44, 0x00, 0x21, 0x40, 0x5E, 0xB4, 0x28
    .byte 0x00, 0xDC, 0x52, 0xE2, 0x51, 0x46, 0x49, 0x44, 0x00, 0x22, 0x01, 0x20, 0x08, 0x80, 0x02, 0x98
    .byte 0x1C, 0x30, 0x48, 0x44, 0x02, 0x80, 0x48, 0xE2, 0x20, 0x2E, 0x00, 0x03, 0x02, 0x9E, 0x1C, 0x36
    .byte 0x02, 0x9F, 0x24, 0x37, 0x00, 0x2D, 0x3E, 0xD0, 0xF0, 0xF7, 0x5A, 0xFD, 0x01, 0x1C, 0x00, 0x22
    .byte 0x22, 0x48, 0x23, 0x4B, 0xC0, 0x18, 0x04, 0x78, 0xA2, 0x42, 0x0B, 0xDA, 0x21, 0x4B, 0x1C, 0x1C
    .byte 0x03, 0x1C, 0x3A, 0x31, 0x08, 0x88, 0x20, 0x43, 0x08, 0x80, 0x08, 0x31, 0x01, 0x32, 0x18, 0x78
    .byte 0x82, 0x42, 0xF7, 0xDB, 0x12, 0xF0, 0x70, 0xF8, 0x04, 0x1C, 0x1B, 0x4D, 0x01, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x10, 0xF0, 0xA7, 0xF9, 0x02, 0x1C, 0x18, 0x4B, 0x20, 0x1C, 0x29, 0x1C, 0x12, 0xF0
    .byte 0x3B, 0xF8, 0x00, 0x20, 0x00, 0x90, 0x00, 0x21, 0x00, 0x22, 0x10, 0xF0, 0x9B, 0xF9, 0x01, 0x1C
    .byte 0x13, 0x4A, 0x68, 0x46, 0x42, 0xF0, 0xE4, 0xFF, 0x12, 0x4C, 0x00, 0x20, 0x10, 0xF0, 0x52, 0xF9
    .byte 0x01, 0x1C, 0xB9, 0x22, 0x52, 0x00, 0x89, 0x18, 0x20, 0x1C, 0x02, 0x22, 0x42, 0xF0, 0xDA, 0xFF
    .byte 0x01, 0x20, 0x10, 0xF0, 0x63, 0xF9, 0x51, 0x46, 0x49, 0x44, 0x00, 0x22, 0x02, 0x20, 0x08, 0x80
    .byte 0x4B, 0x46, 0xF0, 0x18, 0x02, 0x80, 0xF8, 0x18, 0x02, 0x80, 0xF6, 0xE1, 0x20, 0x2E, 0x00, 0x03
    .byte 0x14, 0x08, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x38, 0x00, 0x06, 0x80, 0x02, 0x00, 0x80
    .byte 0x40, 0x01, 0x00, 0x01, 0x90, 0x4C, 0x06, 0x08, 0x02, 0x98, 0x24, 0x30, 0x4C, 0x46, 0x01, 0x19
    .byte 0x08, 0x88, 0x01, 0x30, 0x00, 0x23, 0x08, 0x80, 0x00, 0x04, 0x00, 0x14, 0x01, 0x28, 0x00, 0xDC
    .byte 0xDB, 0xE1, 0x0B, 0x80, 0x02, 0x98, 0x1C, 0x30, 0x02, 0x19, 0x11, 0x88, 0x00, 0x26, 0x90, 0x5F
    .byte 0x07, 0x28, 0x00, 0xDD, 0x35, 0xE1, 0x48, 0x1C, 0x10, 0x80, 0x00, 0x2D, 0x00, 0xD1, 0xCC, 0xE1
    .byte 0x00, 0x27, 0xD6, 0x5F, 0x01, 0x93, 0x01, 0xAC, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x10, 0xF0
    .byte 0x49, 0xF9, 0x01, 0x1C, 0x0E, 0x4A, 0x20, 0x1C, 0x42, 0xF0, 0x92, 0xFF, 0x0D, 0x48, 0x0E, 0x49
    .byte 0x40, 0x18, 0x00, 0x88, 0x01, 0x0A, 0x0F, 0x20, 0x01, 0x40, 0x01, 0x22, 0x91, 0x46, 0x03, 0x29
    .byte 0x01, 0xDD, 0x02, 0x23, 0x99, 0x46, 0x02, 0x24, 0xA0, 0x46, 0x03, 0x29, 0x01, 0xDD, 0x01, 0x27
    .byte 0xB8, 0x46, 0x00, 0x24, 0xF5, 0x00, 0x4F, 0x1C, 0x70, 0x42, 0x82, 0x46, 0x14, 0xE0, 0x00, 0x00
    .byte 0x40, 0x01, 0x00, 0x01, 0x20, 0x2E, 0x00, 0x03, 0x0A, 0x08, 0x00, 0x00, 0xA9, 0x19, 0x00, 0x29
    .byte 0x00, 0xDA, 0x07, 0x31, 0xC9, 0x10, 0x12, 0x20, 0x40, 0x1A, 0x41, 0x46, 0x61, 0x43, 0x49, 0x44
    .byte 0x22, 0x1C, 0x03, 0xF0, 0xC1, 0xFD, 0x01, 0x34, 0x38, 0x1C, 0x70, 0x43, 0x00, 0x28, 0x00, 0xDA
    .byte 0x07, 0x30, 0xC0, 0x10, 0x84, 0x42, 0xE9, 0xDB, 0xA9, 0x19, 0x00, 0x29, 0x00, 0xDA, 0x07, 0x31
    .byte 0xC9, 0x10, 0x12, 0x20, 0x40, 0x1A, 0x00, 0x22, 0x07, 0x2E, 0x00, 0xDD, 0x01, 0x22, 0x31, 0x1C
    .byte 0x03, 0xF0, 0xDA, 0xFE, 0xD0, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x10, 0xF0, 0xFA, 0xF8
    .byte 0x03, 0x90, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x10, 0xF0, 0xF4, 0xF8, 0x81, 0x46, 0x00, 0x20
    .byte 0x00, 0x24, 0x85, 0x1C, 0x01, 0x30, 0x84, 0x46, 0x2B, 0x1C, 0x98, 0x01, 0x03, 0x99, 0x42, 0x18
    .byte 0x58, 0x01, 0x40, 0x44, 0x40, 0x00, 0x4F, 0x46, 0xC1, 0x19, 0x47, 0x46, 0xE0, 0x19, 0x00, 0x28
    .byte 0x07, 0xDB, 0x00, 0x2D, 0x05, 0xDB, 0x1D, 0x28, 0x03, 0xDC, 0x13, 0x2B, 0x01, 0xDC, 0x10, 0x88
    .byte 0x08, 0x80, 0x02, 0x32, 0x02, 0x31, 0x01, 0x34, 0x04, 0x2C, 0xEE, 0xDB, 0x60, 0x46, 0x0D, 0x28
    .byte 0xDE, 0xDB, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x10, 0xF0, 0xCC, 0xF8, 0x80, 0x46, 0x00, 0x20
    .byte 0x00, 0x21, 0x00, 0x22, 0x10, 0xF0, 0xC6, 0xF8, 0x81, 0x46, 0x00, 0x20, 0x00, 0x23, 0x51, 0x46
    .byte 0x45, 0x18, 0x47, 0x1C, 0x2C, 0x1C, 0x61, 0x01, 0x04, 0x31, 0x40, 0x01, 0x02, 0x1D, 0x49, 0x00
    .byte 0x49, 0x44, 0x18, 0x1D, 0x00, 0x28, 0x09, 0xDB, 0x00, 0x2D, 0x07, 0xDB, 0x1D, 0x28, 0x05, 0xDC
    .byte 0x13, 0x2C, 0x03, 0xDC, 0x50, 0x00, 0x40, 0x44, 0x00, 0x88, 0x08, 0x80, 0x02, 0x31, 0x01, 0x32
    .byte 0x01, 0x33, 0x0D, 0x2B, 0xED, 0xDB, 0x38, 0x1C, 0x04, 0x28, 0xDF, 0xDB, 0x01, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x10, 0xF0, 0x9F, 0xF8, 0x81, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x10, 0xF0
    .byte 0x99, 0xF8, 0x80, 0x46, 0x00, 0x20, 0x01, 0x1C, 0x0C, 0x31, 0x01, 0x30, 0x82, 0x46, 0x8C, 0x19
    .byte 0x60, 0x01, 0x49, 0x01, 0x16, 0x31, 0x16, 0x30, 0x30, 0x18, 0x32, 0x1C, 0x16, 0x32, 0x08, 0x25
    .byte 0x40, 0x00, 0x47, 0x46, 0xC3, 0x19, 0x49, 0x00, 0x49, 0x44, 0x00, 0x2A, 0x07, 0xDB, 0x00, 0x2C
    .byte 0x05, 0xDB, 0x1D, 0x2A, 0x03, 0xDC, 0x13, 0x2C, 0x01, 0xDC, 0x08, 0x88, 0x18, 0x80, 0x02, 0x31
    .byte 0x02, 0x33, 0x01, 0x32, 0x01, 0x3D, 0x00, 0x2D, 0xEF, 0xDA, 0x50, 0x46, 0x09, 0x28, 0xDA, 0xDB
    .byte 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x10, 0xF0, 0x6D, 0xF8, 0x80, 0x46, 0x00, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x10, 0xF0, 0x67, 0xF8, 0x07, 0x1C, 0x00, 0x20, 0x00, 0x21, 0x04, 0x1C, 0x10, 0x34
    .byte 0x46, 0x1C, 0x23, 0x1C, 0x5D, 0x01, 0x4A, 0x1C, 0x00, 0x2A, 0x0B, 0xDB, 0x00, 0x2C, 0x09, 0xDB
    .byte 0x1D, 0x2A, 0x07, 0xDC, 0x13, 0x2B, 0x05, 0xDC, 0xA8, 0x18, 0x40, 0x00, 0xC1, 0x19, 0x40, 0x44
    .byte 0x00, 0x88, 0x08, 0x80, 0x11, 0x1C, 0x05, 0x29, 0xED, 0xDB, 0x30, 0x1C, 0x03, 0x28, 0xE4, 0xDB
    .byte 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x10, 0xF0, 0x45, 0xF8, 0x07, 0x1C, 0x00, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x10, 0xF0, 0x3F, 0xF8, 0x06, 0x1C, 0x00, 0x20, 0x00, 0x24, 0x43, 0x1C, 0x1D, 0x1C
    .byte 0x98, 0x01, 0xC2, 0x19, 0x81, 0x19, 0x00, 0x2C, 0x07, 0xDB, 0x00, 0x2B, 0x05, 0xDB, 0x1D, 0x2C
    .byte 0x03, 0xDC, 0x13, 0x2D, 0x01, 0xDC, 0x10, 0x88, 0x08, 0x80, 0x02, 0x32, 0x02, 0x31, 0x01, 0x34
    .byte 0x03, 0x2C, 0xF0, 0xDB, 0x18, 0x1C, 0x01, 0x28, 0xE7, 0xDB, 0x01, 0x20, 0x02, 0x99, 0x08, 0x61
    .byte 0x9B, 0xE0, 0x51, 0x46, 0x49, 0x44, 0x03, 0x20, 0x08, 0x80, 0x13, 0x80, 0x95, 0xE0, 0xA4, 0x00
    .byte 0x04, 0x94, 0x00, 0x2D, 0x00, 0xD1, 0x84, 0xE0, 0x00, 0x20, 0x01, 0x90, 0x01, 0xAC, 0x00, 0x21
    .byte 0x00, 0x22, 0x10, 0xF0, 0x0F, 0xF8, 0x01, 0x1C, 0x48, 0x4A, 0x20, 0x1C, 0x42, 0xF0, 0x58, 0xFE
    .byte 0x01, 0x20, 0xFE, 0xF7, 0x01, 0xFE, 0xFE, 0xF7, 0x4B, 0xFE, 0xFE, 0xF7, 0x93, 0xFE, 0x44, 0x48
    .byte 0x44, 0x4A, 0x80, 0x18, 0x00, 0x88, 0x02, 0x0A, 0x0F, 0x20, 0x02, 0x40, 0x01, 0x21, 0x03, 0x2A
    .byte 0x00, 0xDD, 0x02, 0x21, 0x02, 0x27, 0x03, 0x2A, 0x00, 0xDD, 0x01, 0x27, 0x00, 0x25, 0x56, 0x1C
    .byte 0xB5, 0x42, 0x09, 0xDA, 0x0C, 0x1C, 0x09, 0x20, 0x21, 0x1C, 0x2A, 0x1C, 0x03, 0xF0, 0x94, 0xFC
    .byte 0xE4, 0x19, 0x01, 0x35, 0xB5, 0x42, 0xF6, 0xDB, 0x09, 0x20, 0x08, 0x21, 0x01, 0x22, 0x03, 0xF0
    .byte 0xBB, 0xFD, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0F, 0xF0, 0xDC, 0xFF, 0x80, 0x46, 0x00, 0x20
    .byte 0x00, 0x21, 0x00, 0x22, 0x0F, 0xF0, 0xD6, 0xFF, 0x07, 0x1C, 0x00, 0x20, 0x00, 0x21, 0x04, 0x1C
    .byte 0x10, 0x34, 0x46, 0x1C, 0x23, 0x1C, 0x5D, 0x01, 0x4A, 0x1C, 0x00, 0x2A, 0x0B, 0xDB, 0x00, 0x2C
    .byte 0x09, 0xDB, 0x1D, 0x2A, 0x07, 0xDC, 0x13, 0x2B, 0x05, 0xDC, 0xA8, 0x18, 0x40, 0x00, 0xC1, 0x19
    .byte 0x40, 0x44, 0x00, 0x88, 0x08, 0x80, 0x11, 0x1C, 0x05, 0x29, 0xED, 0xDB, 0x30, 0x1C, 0x03, 0x28
    .byte 0xE4, 0xDB, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0F, 0xF0, 0xB4, 0xFF, 0x07, 0x1C, 0x00, 0x20
    .byte 0x00, 0x21, 0x00, 0x22, 0x0F, 0xF0, 0xAE, 0xFF, 0x06, 0x1C, 0x00, 0x20, 0x00, 0x24, 0x43, 0x1C
    .byte 0x1D, 0x1C, 0x98, 0x01, 0xC2, 0x19, 0x81, 0x19, 0x00, 0x2C, 0x07, 0xDB, 0x00, 0x2B, 0x05, 0xDB
    .byte 0x1D, 0x2C, 0x03, 0xDC, 0x13, 0x2D, 0x01, 0xDC, 0x10, 0x88, 0x08, 0x80, 0x02, 0x32, 0x02, 0x31
    .byte 0x01, 0x34, 0x03, 0x2C, 0xF0, 0xDB, 0x18, 0x1C, 0x01, 0x28, 0xE7, 0xDB, 0x01, 0x20, 0x02, 0x9B
    .byte 0x18, 0x61, 0x0D, 0x48, 0x04, 0x9C, 0x20, 0x18, 0x01, 0x68, 0x87, 0x20, 0x80, 0x00, 0x81, 0x42
    .byte 0x03, 0xDD, 0x51, 0x46, 0x49, 0x44, 0x04, 0x20, 0x08, 0x80
    _0801E7A6:
    add sp, #0x014
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00, 0x40, 0x01, 0x00, 0x01, 0x20, 0x2E, 0x00, 0x03, 0x0A, 0x08, 0x00, 0x00, 0x60, 0x5C
    .byte 0x00, 0x03
    thumb_func_start sub_801E7C8
    sub_801E7C8:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x084
    ldr r0, _0801E7F8 @ =0x03002E20
    adds r0, #0x24
    mov r8, r0
    bl sub_800EDDC
    adds r7, r0, #0x0
    movs r0, #0x00
    str r0, [r7, #0x10]
    ldr r0, [r7, #0x04]
    cmp r0, #0x27
    bls _0801E7EE
    bl def_801E7F6
    _0801E7EE:
    lsls r0, r0, #0x02
    ldr r1, _0801E7FC @ =0x0801E800
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    _0801E7F8: .4byte 0x03002E20
    _0801E7FC: .4byte 0x0801E800
    .byte 0xA0, 0xE8, 0x01, 0x08, 0x34, 0xE9, 0x01, 0x08, 0xA6, 0xE9, 0x01, 0x08, 0x3C, 0xEA, 0x01, 0x08
    .byte 0x60, 0xEA, 0x01, 0x08, 0xEC, 0xEA, 0x01, 0x08, 0x64, 0xEB, 0x01, 0x08, 0x88, 0xEB, 0x01, 0x08
    .byte 0xCE, 0xEB, 0x01, 0x08, 0xE8, 0xEB, 0x01, 0x08, 0x54, 0xEC, 0x01, 0x08, 0x18, 0xED, 0x01, 0x08
    .byte 0x4C, 0xED, 0x01, 0x08, 0x00, 0xEE, 0x01, 0x08, 0x24, 0xEE, 0x01, 0x08, 0x7E, 0xEE, 0x01, 0x08
    .byte 0x98, 0xEE, 0x01, 0x08, 0x70, 0xEF, 0x01, 0x08, 0x08, 0xF0, 0x01, 0x08, 0x3C, 0xF0, 0x01, 0x08
    .byte 0x64, 0xF0, 0x01, 0x08, 0xAC, 0xF0, 0x01, 0x08, 0x50, 0xF1, 0x01, 0x08, 0x18, 0xF2, 0x01, 0x08
    .byte 0x40, 0xF2, 0x01, 0x08, 0x82, 0xF2, 0x01, 0x08, 0xA8, 0xF2, 0x01, 0x08, 0xE4, 0xF2, 0x01, 0x08
    .byte 0x00, 0xF3, 0x01, 0x08, 0x12, 0xF5, 0x01, 0x08, 0x38, 0xF8, 0x01, 0x08, 0x54, 0xFD, 0x01, 0x08
    .byte 0xCC, 0xFD, 0x01, 0x08, 0x78, 0xFC, 0x01, 0x08, 0x68, 0xF8, 0x01, 0x08, 0xA8, 0xF8, 0x01, 0x08
    .byte 0xBE, 0xF9, 0x01, 0x08, 0x44, 0xFB, 0x01, 0x08, 0x5E, 0xFC, 0x01, 0x08, 0xEE, 0xFD, 0x01, 0x08
    .byte 0x00, 0x26, 0x0D, 0xE0, 0xB1, 0x00, 0x21, 0x48, 0x40, 0x44, 0x40, 0x18, 0x00, 0x68, 0x80, 0x6C
    .byte 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x02, 0xD0, 0x30, 0x1C, 0xFF, 0xF7, 0xC5, 0xFC, 0x01, 0x36
    .byte 0x1B, 0x48, 0x40, 0x44, 0x00, 0x78, 0x86, 0x42, 0xEC, 0xDB, 0x01, 0x24, 0x01, 0x21, 0x18, 0x48
    .byte 0x40, 0x44, 0x00, 0x78, 0x00, 0x28, 0x0D, 0xD0, 0x20, 0x23, 0x14, 0x4A, 0x42, 0x44, 0x06, 0x1C
    .byte 0x10, 0x68, 0x80, 0x6C, 0x18, 0x40, 0x00, 0x28, 0x00, 0xD1, 0x00, 0x24, 0x04, 0x32, 0x01, 0x3E
    .byte 0x00, 0x2E, 0xF5, 0xD1, 0x0E, 0x48, 0x40, 0x44, 0x00, 0x78, 0x00, 0x28, 0x0B, 0xD0, 0x3A, 0x1C
    .byte 0x14, 0x32, 0x06, 0x1C, 0x00, 0x23, 0xD0, 0x5E, 0x04, 0x28, 0x00, 0xD0, 0x00, 0x21, 0x02, 0x32
    .byte 0x01, 0x3E, 0x00, 0x2E, 0xF6, 0xD1, 0x01, 0x2C, 0x01, 0xD0, 0x01, 0xF0, 0x68, 0xFA, 0x01, 0x29
    .byte 0x01, 0xD0, 0x01, 0xF0, 0x64, 0xFA, 0x79, 0x60, 0x01, 0xF0, 0x61, 0xFA, 0xF4, 0x07, 0x00, 0x00
    .byte 0xD7, 0x07, 0x00, 0x00, 0x00, 0x24, 0x17, 0x48, 0x40, 0x44, 0x00, 0x78, 0x00, 0x28, 0x13, 0xD0
    .byte 0x15, 0x4A, 0x42, 0x44, 0x20, 0x23, 0x06, 0x1C, 0x11, 0x68, 0x88, 0x6C, 0x18, 0x40, 0x00, 0x28
    .byte 0x06, 0xD0, 0x08, 0x1C, 0xBA, 0x30, 0x00, 0x88, 0x40, 0x08, 0x03, 0x28, 0x00, 0xD8, 0x01, 0x24
    .byte 0x04, 0x32, 0x01, 0x3E, 0x00, 0x2E, 0xEF, 0xD1, 0x0C, 0x48, 0x40, 0x44, 0x00, 0x68, 0xBA, 0x30
    .byte 0x00, 0x88, 0x41, 0x08, 0x10, 0x20, 0x03, 0x29, 0x03, 0xD8, 0x0E, 0x20, 0x00, 0x29, 0x00, 0xD0
    .byte 0x0F, 0x20, 0x41, 0xF0, 0xCD, 0xFA, 0x00, 0x20, 0xB8, 0x60, 0x01, 0x2C, 0x08, 0xD1, 0x02, 0x20
    .byte 0x01, 0xF0, 0x2C, 0xFA, 0xD7, 0x07, 0x00, 0x00, 0xF4, 0x07, 0x00, 0x00, 0x14, 0x08, 0x00, 0x00
    .byte 0x1B, 0x20, 0x01, 0xF0, 0x23, 0xFA, 0x00, 0x20, 0x00, 0x90, 0x00, 0x21, 0x00, 0x22, 0x0F, 0xF0
    .byte 0x7F, 0xFE, 0x01, 0x1C, 0x11, 0x4A, 0x68, 0x46, 0x42, 0xF0, 0xC8, 0xFC, 0x00, 0x26, 0xFE, 0x20
    .byte 0xC0, 0x00, 0x40, 0x44, 0x00, 0x78, 0x86, 0x42, 0x33, 0xDA, 0x3D, 0x1C, 0x34, 0x35, 0x31, 0x06
    .byte 0x09, 0x0E, 0x40, 0x46, 0x2C, 0xF0, 0x7E, 0xFA, 0x04, 0x1C, 0x2E, 0x80, 0x4C, 0x30, 0x01, 0x78
    .byte 0x07, 0x20, 0x08, 0x40, 0xF0, 0xF7, 0xE4, 0xF9, 0x68, 0x80, 0xA0, 0x6C, 0x20, 0x21, 0x08, 0x40
    .byte 0x00, 0x28, 0x05, 0xD0, 0x20, 0x1C, 0x1F, 0xF0, 0x65, 0xF8, 0x05, 0xE0, 0x40, 0x01, 0x00, 0x01
    .byte 0x20, 0x1C, 0x41, 0x46, 0x1E, 0xF0, 0xD8, 0xFE, 0xA8, 0x80, 0x22, 0x1C, 0xC4, 0x32, 0x10, 0x78
    .byte 0xE8, 0x80, 0x09, 0x48, 0x73, 0x1C, 0x18, 0x18, 0x01, 0x78, 0x29, 0x81, 0x10, 0x78, 0x40, 0x18
    .byte 0x10, 0x70, 0x10, 0x35, 0x1E, 0x1C, 0xFE, 0x20, 0xC0, 0x00, 0x40, 0x44, 0x00, 0x78, 0x86, 0x42
    .byte 0xCD, 0xDB, 0x03, 0x20, 0x01, 0xF0, 0xDA, 0xF9, 0xA8, 0xB0, 0x0D, 0x08, 0x00, 0x20, 0x01, 0x90
    .byte 0x01, 0xAC, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0F, 0xF0, 0x32, 0xFE, 0x01, 0x1C, 0x03, 0x4A
    .byte 0x20, 0x1C, 0x42, 0xF0, 0x7B, 0xFC, 0x04, 0x20, 0x01, 0xF0, 0xC8, 0xF9, 0x40, 0x01, 0x00, 0x01
    .byte 0xFF, 0xF7, 0x20, 0xF8, 0x00, 0x26, 0xFE, 0x20, 0xC0, 0x00, 0x40, 0x44, 0x1C, 0x4D, 0x45, 0x44
    .byte 0x00, 0x78, 0x86, 0x42, 0x14, 0xDA, 0x3C, 0x1C, 0x34, 0x34, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x0F, 0xF0, 0x16, 0xFE, 0x03, 0x1C, 0x30, 0x1C, 0x21, 0x1C, 0x00, 0x22, 0xFF, 0xF7, 0x64, 0xF9
    .byte 0x10, 0x34, 0x01, 0x36, 0xFE, 0x20, 0xC0, 0x00, 0x40, 0x44, 0x00, 0x78, 0x86, 0x42, 0xEC, 0xDB
    .byte 0x0F, 0x20, 0x28, 0x60, 0xF0, 0xF7, 0x9A, 0xF9, 0x03, 0x1C, 0x00, 0x22, 0x0D, 0x48, 0x0E, 0x4E
    .byte 0x80, 0x19, 0x01, 0x78, 0x8A, 0x42, 0x0C, 0xDA, 0x20, 0x25, 0x04, 0x1C, 0x00, 0x21, 0x18, 0x1C
    .byte 0x3E, 0x30, 0x05, 0x80, 0x41, 0x80, 0x03, 0x31, 0x10, 0x30, 0x01, 0x32, 0x23, 0x78, 0x9A, 0x42
    .byte 0xF7, 0xDB, 0x01, 0x20, 0x38, 0x61, 0x00, 0x20, 0xB8, 0x60, 0x05, 0x20, 0x01, 0xF0, 0x86, 0xF9
    .byte 0xE4, 0x0B, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03, 0x14, 0x08, 0x00, 0x00, 0xF0, 0xF7, 0x76, 0xF9
    .byte 0x01, 0x1C, 0x00, 0x22, 0x06, 0x48, 0x07, 0x4E, 0x80, 0x19, 0x03, 0x78, 0x9A, 0x42, 0x15, 0xDA
    .byte 0x03, 0x1C, 0x3E, 0x31, 0x48, 0x88, 0x00, 0x28, 0x06, 0xD0, 0x01, 0x38, 0x48, 0x80, 0x08, 0xE0
    .byte 0x20, 0x2E, 0x00, 0x03, 0x14, 0x08, 0x00, 0x00, 0x08, 0x88, 0x00, 0x28, 0x01, 0xD0, 0x01, 0x38
    .byte 0x08, 0x80, 0x10, 0x31, 0x01, 0x32, 0x1E, 0x78, 0xB2, 0x42, 0xEB, 0xDB, 0xFE, 0xF7, 0x54, 0xFF
    .byte 0x01, 0x20, 0x38, 0x61, 0xB8, 0x68, 0x01, 0x30, 0xB8, 0x60, 0x3C, 0x28, 0x03, 0xDD, 0x00, 0x20
    .byte 0xB8, 0x60, 0x06, 0x20, 0x78, 0x60, 0x09, 0x21, 0x05, 0x48, 0x00, 0x88, 0x08, 0x40, 0x00, 0x28
    .byte 0x01, 0xD1, 0x01, 0xF0, 0x4C, 0xF9, 0x00, 0x20, 0xB8, 0x60, 0x06, 0x20, 0x01, 0xF0, 0x46, 0xF9
    .byte 0xA0, 0x4E, 0x00, 0x03, 0x00, 0x20, 0x02, 0x90, 0x02, 0xAC, 0x00, 0x21, 0x03, 0x22, 0x0F, 0xF0
    .byte 0x9F, 0xFD, 0x01, 0x1C, 0x03, 0x4A, 0x20, 0x1C, 0x42, 0xF0, 0xE8, 0xFB, 0x07, 0x20, 0x01, 0xF0
    .byte 0x35, 0xF9, 0x00, 0x00, 0x10, 0x01, 0x00, 0x01, 0x00, 0x26, 0xFE, 0x20, 0xC0, 0x00, 0x40, 0x44
    .byte 0x00, 0x78, 0x86, 0x42, 0x14, 0xDA, 0x3C, 0x1C, 0x34, 0x34, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x0F, 0xF0, 0x86, 0xFD, 0x03, 0x1C, 0x30, 0x1C, 0x21, 0x1C, 0x00, 0x22, 0xFF, 0xF7, 0xD4, 0xF8
    .byte 0x10, 0x34, 0x01, 0x36, 0xFE, 0x20, 0xC0, 0x00, 0x40, 0x44, 0x00, 0x78, 0x86, 0x42, 0xEC, 0xDB
    .byte 0x01, 0x20, 0x38, 0x61, 0x00, 0x20, 0xB8, 0x60, 0x08, 0x20, 0x01, 0xF0, 0x0F, 0xF9, 0xB8, 0x68
    .byte 0x01, 0x30, 0xB8, 0x60, 0x3C, 0x28, 0x01, 0xDC, 0x01, 0xF0, 0x09, 0xF9, 0x00, 0x20, 0xF8, 0x60
    .byte 0xB8, 0x60, 0x09, 0x20, 0x01, 0xF0, 0x02, 0xF9, 0xF8, 0x68, 0x01, 0x30, 0xF8, 0x60, 0x02, 0x28
    .byte 0x21, 0xDD, 0x00, 0x21, 0xF9, 0x60, 0xB8, 0x68, 0x01, 0x30, 0xB8, 0x60, 0x04, 0x28, 0x17, 0xDC
    .byte 0x00, 0x25, 0x00, 0x26, 0xB9, 0x68, 0x14, 0x31, 0xEC, 0x1C, 0x00, 0x20, 0x22, 0x1C, 0x0F, 0xF0
    .byte 0x4F, 0xFD, 0x06, 0x80, 0xB8, 0x68, 0x1D, 0x21, 0x09, 0x1A, 0x00, 0x20, 0x22, 0x1C, 0x0F, 0xF0
    .byte 0x47, 0xFD, 0x06, 0x80, 0x01, 0x35, 0x0F, 0x2D, 0xEC, 0xDD, 0x01, 0x20, 0x38, 0x61, 0x02, 0xE0
    .byte 0xB9, 0x60, 0x0A, 0x20, 0x78, 0x60, 0x09, 0x21, 0x05, 0x48, 0x00, 0x88, 0x08, 0x40, 0x00, 0x28
    .byte 0x01, 0xD1, 0x01, 0xF0, 0xD4, 0xF8, 0x00, 0x20, 0xB8, 0x60, 0x0D, 0x20, 0x01, 0xF0, 0xCE, 0xF8
    .byte 0xA0, 0x4E, 0x00, 0x03, 0x00, 0x26, 0xFE, 0x20, 0xC0, 0x00, 0x40, 0x44, 0x00, 0x78, 0x86, 0x42
    .byte 0x14, 0xDA, 0x3C, 0x1C, 0x34, 0x34, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0F, 0xF0, 0x20, 0xFD
    .byte 0x03, 0x1C, 0x30, 0x1C, 0x21, 0x1C, 0x01, 0x22, 0xFF, 0xF7, 0x6E, 0xF8, 0x10, 0x34, 0x01, 0x36
    .byte 0xFE, 0x20, 0xC0, 0x00, 0x40, 0x44, 0x00, 0x78, 0x86, 0x42, 0xEC, 0xDB, 0xF8, 0x68, 0x01, 0x30
    .byte 0xF8, 0x60, 0x02, 0x28, 0x30, 0xDD, 0x00, 0x21, 0xF9, 0x60, 0xB8, 0x68, 0x01, 0x30, 0xB8, 0x60
    .byte 0x03, 0x28, 0x26, 0xDC, 0x00, 0x22, 0x04, 0x20, 0x81, 0x46, 0x00, 0x24, 0xB8, 0x68, 0x49, 0x46
    .byte 0x08, 0x1A, 0x53, 0x1C, 0x98, 0x46, 0x84, 0x42, 0x15, 0xDA, 0xD5, 0x1C, 0x00, 0x26, 0x21, 0x1C
    .byte 0x14, 0x31, 0x00, 0x20, 0x2A, 0x1C, 0x0F, 0xF0, 0xF3, 0xFC, 0x06, 0x80, 0x1D, 0x21, 0x09, 0x1B
    .byte 0x00, 0x20, 0x2A, 0x1C, 0x0F, 0xF0, 0xEC, 0xFC, 0x06, 0x80, 0x01, 0x34, 0xB8, 0x68, 0x49, 0x46
    .byte 0x08, 0x1A, 0x84, 0x42, 0xEB, 0xDB, 0x42, 0x46, 0x0F, 0x2A, 0xDE, 0xDD, 0x01, 0x20, 0x38, 0x61
    .byte 0x02, 0xE0, 0xB9, 0x60, 0x0B, 0x20, 0x78, 0x60, 0x09, 0x21, 0x06, 0x48, 0x00, 0x88, 0x08, 0x40
    .byte 0x00, 0x28, 0x01, 0xD1, 0x01, 0xF0, 0x73, 0xF8, 0x00, 0x20, 0xB8, 0x60, 0x0D, 0x20, 0x01, 0xF0
    .byte 0x6D, 0xF8, 0x00, 0x00, 0xA0, 0x4E, 0x00, 0x03, 0xB8, 0x68, 0x01, 0x30, 0xB8, 0x60, 0x1E, 0x28
    .byte 0x04, 0xDD, 0x00, 0x20, 0xF8, 0x60, 0xB8, 0x60, 0x0C, 0x20, 0x78, 0x60, 0x09, 0x21, 0x06, 0x48
    .byte 0x00, 0x88, 0x08, 0x40, 0x00, 0x28, 0x01, 0xD1, 0x01, 0xF0, 0x59, 0xF8, 0x00, 0x20, 0xB8, 0x60
    .byte 0x0D, 0x20, 0x01, 0xF0, 0x53, 0xF8, 0x00, 0x00, 0xA0, 0x4E, 0x00, 0x03, 0xFE, 0x23, 0xDB, 0x00
    .byte 0x43, 0x44, 0x1A, 0x78, 0x50, 0x1E, 0xB9, 0x68, 0x81, 0x42, 0x3D, 0xDC, 0x01, 0x31, 0x50, 0x1A
    .byte 0x00, 0x01, 0x34, 0x30, 0x3D, 0x18, 0x08, 0x22, 0xA8, 0x5E, 0x00, 0x28, 0x02, 0xD1, 0xB9, 0x60
    .byte 0xF8, 0x60, 0x35, 0xE0, 0xF8, 0x68, 0x01, 0x30, 0xF8, 0x60, 0x03, 0x28, 0x30, 0xD1, 0x28, 0x89
    .byte 0x01, 0x38, 0x28, 0x81, 0xE8, 0x88, 0x01, 0x30, 0xE8, 0x80, 0xBC, 0x68, 0xE4, 0x43, 0x1B, 0x78
    .byte 0xE4, 0x18, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0F, 0xF0, 0x8A, 0xFC, 0x03, 0x1C, 0x20, 0x1C
    .byte 0x29, 0x1C, 0x01, 0x22, 0xFE, 0xF7, 0xD8, 0xFF, 0x01, 0x20, 0x38, 0x61, 0x09, 0x48, 0x40, 0x44
    .byte 0x00, 0x68, 0x4C, 0x30, 0x01, 0x78, 0x07, 0x20, 0x08, 0x40, 0xEF, 0xF7, 0xF9, 0xFF, 0x02, 0x23
    .byte 0xE9, 0x5E, 0x81, 0x42, 0x02, 0xD1, 0x65, 0x20, 0x41, 0xF0, 0xAA, 0xF8, 0x00, 0x20, 0xF8, 0x60
    .byte 0x06, 0xE0, 0x00, 0x00, 0x14, 0x08, 0x00, 0x00, 0x00, 0x20, 0xB8, 0x60, 0x0D, 0x20, 0x78, 0x60
    .byte 0x09, 0x21, 0x06, 0x48, 0x00, 0x88, 0x08, 0x40, 0x00, 0x28, 0x01, 0xD1, 0x00, 0xF0, 0xFF, 0xFF
    .byte 0x00, 0x20, 0xB8, 0x60, 0x0D, 0x20, 0x00, 0xF0, 0xF9, 0xFF, 0x00, 0x00, 0xA0, 0x4E, 0x00, 0x03
    .byte 0x00, 0x20, 0x03, 0x90, 0x03, 0xAC, 0x00, 0x21, 0x03, 0x22, 0x0F, 0xF0, 0x51, 0xFC, 0x01, 0x1C
    .byte 0x03, 0x4A, 0x20, 0x1C, 0x42, 0xF0, 0x9A, 0xFA, 0x0E, 0x20, 0x00, 0xF0, 0xE7, 0xFF, 0x00, 0x00
    .byte 0x10, 0x01, 0x00, 0x01, 0x00, 0x26, 0xFE, 0x20, 0xC0, 0x00, 0x40, 0x44, 0x00, 0x78, 0x86, 0x42
    .byte 0x1E, 0xDA, 0xB1, 0x46, 0x3C, 0x1C, 0x3A, 0x34, 0x3D, 0x1C, 0x34, 0x35, 0x60, 0x88, 0x21, 0x88
    .byte 0x40, 0x18, 0x20, 0x80, 0x4A, 0x46, 0x62, 0x80, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0F, 0xF0
    .byte 0x2F, 0xFC, 0x03, 0x1C, 0x30, 0x1C, 0x29, 0x1C, 0x01, 0x22, 0xFE, 0xF7, 0x7D, 0xFF, 0x10, 0x34
    .byte 0x10, 0x35, 0x01, 0x36, 0xFE, 0x20, 0xC0, 0x00, 0x40, 0x44, 0x00, 0x78, 0x86, 0x42, 0xE5, 0xDB
    .byte 0x01, 0x20, 0x38, 0x61, 0x00, 0x20, 0xB8, 0x60, 0x0F, 0x20, 0x00, 0xF0, 0xB7, 0xFF, 0xB8, 0x68
    .byte 0x01, 0x30, 0xB8, 0x60, 0x3C, 0x28, 0x01, 0xDC, 0x00, 0xF0, 0xB1, 0xFF, 0x00, 0x20, 0xF8, 0x60
    .byte 0xB8, 0x60, 0x10, 0x20, 0x00, 0xF0, 0xAA, 0xFF, 0xF8, 0x68, 0x01, 0x30, 0xF8, 0x60, 0x02, 0x28
    .byte 0x52, 0xDD, 0x00, 0x26, 0xFE, 0x60, 0xBA, 0x68, 0x0D, 0x2A, 0x39, 0xDC, 0x01, 0x20, 0x10, 0x40
    .byte 0x00, 0x28, 0x21, 0xD1, 0x03, 0x32, 0x00, 0x20, 0x00, 0x21, 0x0F, 0xF0, 0xF9, 0xFB, 0x04, 0x1C
    .byte 0xBA, 0x68, 0x04, 0x32, 0x00, 0x20, 0x00, 0x21, 0x0F, 0xF0, 0xF2, 0xFB, 0x01, 0x1C, 0x20, 0x1C
    .byte 0x10, 0x22, 0x42, 0xF0, 0x3B, 0xFA, 0x04, 0x96, 0x04, 0xAC, 0xBA, 0x68, 0x03, 0x32, 0x00, 0x20
    .byte 0x00, 0x21, 0x0F, 0xF0, 0xE5, 0xFB, 0x01, 0x1C, 0x02, 0x4A, 0x20, 0x1C, 0x42, 0xF0, 0x2E, 0xFA
    .byte 0x0E, 0xE0, 0x00, 0x00, 0x10, 0x00, 0x00, 0x01, 0x04, 0x96, 0x04, 0xAC, 0x03, 0x32, 0x00, 0x20
    .byte 0x00, 0x21, 0x0F, 0xF0, 0xD5, 0xFB, 0x01, 0x1C, 0x04, 0x4A, 0x20, 0x1C, 0x42, 0xF0, 0x1E, 0xFA
    .byte 0x01, 0x20, 0x38, 0x61, 0xB8, 0x68, 0x01, 0x30, 0xB8, 0x60, 0x15, 0xE0, 0x10, 0x00, 0x00, 0x01
    .byte 0x11, 0xF0, 0x88, 0xFA, 0x04, 0x1C, 0x0F, 0x4D, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0F, 0xF0
    .byte 0xBF, 0xFB, 0x02, 0x1C, 0x0C, 0x4B, 0x20, 0x1C, 0x29, 0x1C, 0x11, 0xF0, 0x53, 0xFA, 0xBE, 0x60
    .byte 0x03, 0x20, 0xF8, 0x60, 0x11, 0x20, 0x78, 0x60, 0x09, 0x21, 0x08, 0x48, 0x00, 0x88, 0x08, 0x40
    .byte 0x00, 0x28, 0x01, 0xD1, 0x00, 0xF0, 0x4B, 0xFF, 0x00, 0x20, 0xF8, 0x60, 0xB8, 0x60, 0x17, 0x20
    .byte 0x00, 0xF0, 0x44, 0xFF, 0x00, 0x38, 0x00, 0x06, 0x80, 0x02, 0x00, 0x80, 0xA0, 0x4E, 0x00, 0x03
    .byte 0xF8, 0x68, 0x01, 0x30, 0xF8, 0x60, 0x02, 0x28, 0x36, 0xDD, 0x00, 0x21, 0xF9, 0x60, 0xB8, 0x68
    .byte 0x01, 0x30, 0xB8, 0x60, 0x05, 0x28, 0x2C, 0xDC, 0x81, 0x46, 0x01, 0x20, 0x00, 0x22, 0x0F, 0xF0
    .byte 0x8F, 0xFB, 0x80, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0F, 0xF0, 0x89, 0xFB, 0x06, 0x1C
    .byte 0x00, 0x21, 0x00, 0x24, 0x08, 0x1C, 0x10, 0x30, 0x4D, 0x1C, 0x49, 0x46, 0x43, 0x18, 0x80, 0x01
    .byte 0x41, 0x46, 0x42, 0x18, 0x98, 0x01, 0x81, 0x19, 0x00, 0x2C, 0x07, 0xDB, 0x00, 0x2B, 0x05, 0xDB
    .byte 0x1D, 0x2C, 0x03, 0xDC, 0x13, 0x2B, 0x01, 0xDC, 0x10, 0x88, 0x08, 0x80, 0x02, 0x32, 0x02, 0x31
    .byte 0x01, 0x34, 0x1E, 0x2C, 0xF0, 0xDB, 0x29, 0x1C, 0x04, 0x29, 0xE2, 0xDB, 0x01, 0x20, 0x38, 0x61
    .byte 0x02, 0xE0, 0xB9, 0x60, 0x12, 0x20, 0x78, 0x60, 0x09, 0x21, 0x06, 0x48, 0x00, 0x88, 0x08, 0x40
    .byte 0x00, 0x28, 0x01, 0xD1, 0x00, 0xF0, 0xFB, 0xFE, 0x00, 0x20, 0xF8, 0x60, 0xB8, 0x60, 0x17, 0x20
    .byte 0x00, 0xF0, 0xF4, 0xFE, 0xA0, 0x4E, 0x00, 0x03, 0xB8, 0x68, 0x01, 0x1C, 0x01, 0x30, 0xB8, 0x60
    .byte 0x0F, 0x29, 0x03, 0xDD, 0x00, 0x20, 0xB8, 0x60, 0x13, 0x20, 0x78, 0x60, 0x09, 0x21, 0x06, 0x48
    .byte 0x00, 0x88, 0x08, 0x40, 0x00, 0x28, 0x01, 0xD1, 0x00, 0xF0, 0xE1, 0xFE, 0x00, 0x20, 0xF8, 0x60
    .byte 0xB8, 0x60, 0x17, 0x20, 0x00, 0xF0, 0xDA, 0xFE, 0xA0, 0x4E, 0x00, 0x03, 0xFF, 0xF7, 0x3C, 0xF8
    .byte 0x00, 0x20, 0x04, 0x90, 0x04, 0xAC, 0x01, 0x20, 0x00, 0x21, 0x03, 0x22, 0x0F, 0xF0, 0x30, 0xFB
    .byte 0x01, 0x1C, 0x03, 0x4A, 0x20, 0x1C, 0x42, 0xF0, 0x79, 0xF9, 0x14, 0x20, 0x00, 0xF0, 0xC6, 0xFE
    .byte 0x10, 0x01, 0x00, 0x01, 0x00, 0x26, 0xFE, 0x20, 0xC0, 0x00, 0x40, 0x44, 0x00, 0x78, 0x86, 0x42
    .byte 0x14, 0xDA, 0x3C, 0x1C, 0x34, 0x34, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0F, 0xF0, 0x18, 0xFB
    .byte 0x03, 0x1C, 0x30, 0x1C, 0x21, 0x1C, 0x02, 0x22, 0xFE, 0xF7, 0x66, 0xFE, 0x10, 0x34, 0x01, 0x36
    .byte 0xFE, 0x20, 0xC0, 0x00, 0x40, 0x44, 0x00, 0x78, 0x86, 0x42, 0xEC, 0xDB, 0x01, 0x20, 0x38, 0x61
    .byte 0x00, 0x20, 0xF8, 0x60, 0xB8, 0x60, 0x15, 0x20, 0x00, 0xF0, 0xA0, 0xFE, 0xF8, 0x68, 0x01, 0x30
    .byte 0xF8, 0x60, 0x02, 0x28, 0x3C, 0xDD, 0x00, 0x20, 0xF8, 0x60, 0xB8, 0x68, 0x41, 0x1C, 0xB9, 0x60
    .byte 0x05, 0x29, 0x2F, 0xDC, 0x05, 0x20, 0x40, 0x1A, 0x81, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x0F, 0xF0, 0xEE, 0xFA, 0x80, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0F, 0xF0, 0xE8, 0xFA
    .byte 0x06, 0x1C, 0x00, 0x21, 0x00, 0x24, 0x08, 0x1C, 0x11, 0x30, 0x4D, 0x1C, 0x4A, 0x46, 0x83, 0x18
    .byte 0x80, 0x01, 0x41, 0x46, 0x42, 0x18, 0x98, 0x01, 0x81, 0x19, 0x00, 0x2C, 0x07, 0xDB, 0x00, 0x2B
    .byte 0x05, 0xDB, 0x1D, 0x2C, 0x03, 0xDC, 0x13, 0x2B, 0x01, 0xDC, 0x10, 0x88, 0x08, 0x80, 0x02, 0x32
    .byte 0x02, 0x31, 0x01, 0x34, 0x1E, 0x2C, 0xF0, 0xDB, 0x29, 0x1C, 0x03, 0x29, 0xE2, 0xDB, 0x01, 0x20
    .byte 0x38, 0x61, 0x05, 0xE0, 0x04, 0x20, 0xB8, 0x60, 0x03, 0x20, 0xF8, 0x60, 0x16, 0x20, 0x78, 0x60
    .byte 0x09, 0x21, 0x06, 0x48, 0x00, 0x88, 0x08, 0x40, 0x00, 0x28, 0x01, 0xD1, 0x00, 0xF0, 0x57, 0xFE
    .byte 0x00, 0x20, 0xF8, 0x60, 0xB8, 0x60, 0x17, 0x20, 0x00, 0xF0, 0x50, 0xFE, 0xA0, 0x4E, 0x00, 0x03
    .byte 0xF8, 0x68, 0x01, 0x30, 0xF8, 0x60, 0x02, 0x28, 0x4D, 0xDD, 0x00, 0x20, 0xF8, 0x60, 0xB9, 0x68
    .byte 0x11, 0x29, 0x44, 0xDC, 0x01, 0x20, 0x08, 0x40, 0x00, 0x28, 0x13, 0xD1, 0x13, 0x22, 0x52, 0x1A
    .byte 0x01, 0x20, 0x00, 0x21, 0x0F, 0xF0, 0x9C, 0xFA, 0x04, 0x1C, 0xB8, 0x68, 0x14, 0x22, 0x12, 0x1A
    .byte 0x00, 0x20, 0x00, 0x21, 0x0F, 0xF0, 0x94, 0xFA, 0x01, 0x1C, 0x20, 0x1C, 0x10, 0x22, 0x42, 0xF0
    .byte 0xDD, 0xF8, 0x26, 0xE0, 0x14, 0x24, 0x62, 0x1A, 0x01, 0x20, 0x00, 0x21, 0x0F, 0xF0, 0x88, 0xFA
    .byte 0x05, 0x1C, 0xB8, 0x68, 0x24, 0x1A, 0x00, 0x20, 0x00, 0x21, 0x22, 0x1C, 0x0F, 0xF0, 0x80, 0xFA
    .byte 0x01, 0x1C, 0x28, 0x1C, 0x10, 0x22, 0x42, 0xF0, 0xC9, 0xF8, 0xBA, 0x68, 0x15, 0x24, 0xA2, 0x1A
    .byte 0x01, 0x20, 0x00, 0x21, 0x0F, 0xF0, 0x74, 0xFA, 0x05, 0x1C, 0xB8, 0x68, 0x24, 0x1A, 0x00, 0x20
    .byte 0x00, 0x21, 0x22, 0x1C, 0x0F, 0xF0, 0x6C, 0xFA, 0x01, 0x1C, 0x28, 0x1C, 0x10, 0x22, 0x42, 0xF0
    .byte 0xB5, 0xF8, 0x01, 0x20, 0x38, 0x61, 0xB8, 0x68, 0x01, 0x30, 0xB8, 0x60, 0x03, 0xE0, 0xF8, 0x60
    .byte 0xB8, 0x60, 0x17, 0x20, 0x78, 0x60, 0x09, 0x21, 0x06, 0x48, 0x00, 0x88, 0x08, 0x40, 0x00, 0x28
    .byte 0x01, 0xD1, 0x00, 0xF0, 0xF4, 0xFD, 0x00, 0x20, 0xF8, 0x60, 0xB8, 0x60, 0x17, 0x20, 0x00, 0xF0
    .byte 0xED, 0xFD, 0x00, 0x00, 0xA0, 0x4E, 0x00, 0x03, 0xFE, 0xF7, 0x4E, 0xFF, 0x00, 0x20, 0x05, 0x90
    .byte 0x05, 0xAC, 0x00, 0x21, 0x03, 0x22, 0x0F, 0xF0, 0x43, 0xFA, 0x01, 0x1C, 0x03, 0x4A, 0x20, 0x1C
    .byte 0x42, 0xF0, 0x8C, 0xF8, 0x18, 0x20, 0x00, 0xF0, 0xD9, 0xFD, 0x00, 0x00, 0x10, 0x01, 0x00, 0x01
    .byte 0x00, 0x26, 0xFE, 0x20, 0xC0, 0x00, 0x40, 0x44, 0x00, 0x78, 0x86, 0x42, 0x14, 0xDA, 0x3C, 0x1C
    .byte 0x34, 0x34, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0F, 0xF0, 0x2A, 0xFA, 0x03, 0x1C, 0x30, 0x1C
    .byte 0x21, 0x1C, 0x02, 0x22, 0xFE, 0xF7, 0x78, 0xFD, 0x10, 0x34, 0x01, 0x36, 0xFE, 0x20, 0xC0, 0x00
    .byte 0x40, 0x44, 0x00, 0x78, 0x86, 0x42, 0xEC, 0xDB, 0x01, 0x20, 0x38, 0x61, 0x19, 0x20, 0x00, 0xF0
    .byte 0xB5, 0xFD, 0x09, 0x21, 0x07, 0x48, 0x00, 0x88, 0x08, 0x40, 0x00, 0x28, 0x01, 0xD1, 0x00, 0xF0
    .byte 0xAE, 0xFD, 0x8F, 0x20, 0x40, 0xF0, 0x44, 0xFE, 0x00, 0x20, 0xB8, 0x60, 0x1A, 0x20, 0x00, 0xF0
    .byte 0xA5, 0xFD, 0x00, 0x00, 0xA0, 0x4E, 0x00, 0x03, 0x3D, 0xF0, 0x52, 0xFD, 0x05, 0x48, 0x40, 0x44
    .byte 0x00, 0x78, 0x14, 0xF0, 0xFF, 0xFC, 0x00, 0x06, 0x00, 0x0E, 0x02, 0x28, 0x04, 0xDC, 0x08, 0x21
    .byte 0x03, 0xE0, 0x00, 0x00, 0xDD, 0x07, 0x00, 0x00, 0x07, 0x21, 0xFD, 0x20, 0xC0, 0x00, 0x40, 0x44
    .byte 0x01, 0x70, 0x03, 0x48, 0x01, 0x21, 0x01, 0x60, 0x27, 0x20, 0x00, 0xF0, 0x87, 0xFD, 0x00, 0x00
    .byte 0x50, 0x5C, 0x00, 0x03, 0xFE, 0xF7, 0xCA, 0xFC, 0x00, 0x20, 0xB8, 0x60, 0xE3, 0xF7, 0xA6, 0xFC
    .byte 0x00, 0x28, 0x02, 0xD0, 0x1C, 0x20, 0x00, 0xF0, 0x79, 0xFD, 0x1F, 0x20, 0x00, 0xF0, 0x76, 0xFD
    .byte 0x00, 0x20, 0x06, 0x90, 0x06, 0xAC, 0x00, 0x21, 0x00, 0x22, 0x0F, 0xF0, 0xD1, 0xF9, 0x01, 0x1C
    .byte 0x5F, 0x4A, 0x20, 0x1C, 0x42, 0xF0, 0x1A, 0xF8, 0x00, 0x20, 0xFD, 0xF7, 0xC3, 0xFF, 0xFE, 0xF7
    .byte 0x0D, 0xF8, 0xFE, 0xF7, 0x55, 0xF8, 0x5B, 0x48, 0x5B, 0x4A, 0x80, 0x18, 0x00, 0x88, 0x02, 0x0A
    .byte 0x0F, 0x20, 0x02, 0x40, 0x01, 0x21, 0x03, 0x2A, 0x00, 0xDD, 0x02, 0x21, 0x02, 0x23, 0x98, 0x46
    .byte 0x03, 0x2A, 0x01, 0xDD, 0x01, 0x26, 0xB0, 0x46, 0x00, 0x25, 0x56, 0x1C, 0xB5, 0x42, 0x09, 0xDA
    .byte 0x0C, 0x1C, 0x09, 0x20, 0x21, 0x1C, 0x2A, 0x1C, 0x02, 0xF0, 0x54, 0xFE, 0x44, 0x44, 0x01, 0x35
    .byte 0xB5, 0x42, 0xF6, 0xDB, 0x09, 0x20, 0x08, 0x21, 0x01, 0x22, 0x02, 0xF0, 0x7B, 0xFF, 0x01, 0x20
    .byte 0x00, 0x21, 0x00, 0x22, 0x0F, 0xF0, 0x9C, 0xF9, 0x81, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x0F, 0xF0, 0x96, 0xF9, 0x80, 0x46, 0x00, 0x20, 0x00, 0x21, 0x04, 0x1C, 0x10, 0x34, 0x01, 0x30
    .byte 0x82, 0x46, 0x23, 0x1C, 0x5D, 0x01, 0x4A, 0x1C, 0x00, 0x2A, 0x0C, 0xDB, 0x00, 0x2C, 0x0A, 0xDB
    .byte 0x1D, 0x2A, 0x08, 0xDC, 0x13, 0x2B, 0x06, 0xDC, 0xA8, 0x18, 0x40, 0x00, 0x46, 0x46, 0x81, 0x19
    .byte 0x48, 0x44, 0x00, 0x88, 0x08, 0x80, 0x11, 0x1C, 0x05, 0x29, 0xEC, 0xDB, 0x50, 0x46, 0x03, 0x28
    .byte 0xE2, 0xDB, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0F, 0xF0, 0x72, 0xF9, 0x81, 0x46, 0x00, 0x20
    .byte 0x00, 0x21, 0x00, 0x22, 0x0F, 0xF0, 0x6C, 0xF9, 0x06, 0x1C, 0x00, 0x20, 0xB9, 0x68, 0x88, 0x46
    .byte 0x00, 0x24, 0x43, 0x1C, 0x1D, 0x1C, 0x98, 0x01, 0x49, 0x46, 0x42, 0x18, 0x81, 0x19, 0x00, 0x2C
    .byte 0x07, 0xDB, 0x00, 0x2B, 0x05, 0xDB, 0x1D, 0x2C, 0x03, 0xDC, 0x13, 0x2D, 0x01, 0xDC, 0x10, 0x88
    .byte 0x08, 0x80, 0x02, 0x32, 0x02, 0x31, 0x01, 0x34, 0x03, 0x2C, 0xF0, 0xDB, 0x18, 0x1C, 0x01, 0x28
    .byte 0xE6, 0xDB, 0x42, 0x46, 0x04, 0x2A, 0x77, 0xDC, 0x40, 0x46, 0x01, 0x30, 0xB8, 0x60, 0x80, 0x46
    .byte 0xC1, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0F, 0xF0, 0x42, 0xF9, 0x10, 0x90, 0x00, 0x20
    .byte 0x00, 0x21, 0x00, 0x22, 0x0F, 0xF0, 0x3C, 0xF9, 0x11, 0x90, 0x43, 0x46, 0x00, 0x2B, 0x04, 0xDA
    .byte 0x00, 0x26, 0xB1, 0x46, 0x00, 0x2B, 0x00, 0xDA, 0xB0, 0x46, 0x48, 0x46, 0x05, 0x28, 0x01, 0xDD
    .byte 0x05, 0x21, 0x89, 0x46, 0x42, 0x46, 0x03, 0x2A, 0x01, 0xDD, 0x03, 0x23, 0x98, 0x46, 0x00, 0x25
    .byte 0x46, 0x46, 0x70, 0x00, 0x85, 0x42, 0x00, 0xDB, 0xF1, 0xE3, 0x49, 0x46, 0x49, 0x00, 0x17, 0x91
    .byte 0x82, 0x46, 0x00, 0x24, 0x6A, 0x1C, 0x1A, 0x92, 0x17, 0x9B, 0x9C, 0x42, 0x40, 0xDA, 0x1F, 0x93
    .byte 0x56, 0x46, 0xAE, 0x1B, 0xB4, 0x46, 0x4C, 0x45, 0x08, 0xDA, 0x23, 0x1C, 0x0A, 0x33, 0x09, 0xE0
    .byte 0x40, 0x01, 0x00, 0x01, 0x20, 0x2E, 0x00, 0x03, 0x0A, 0x08, 0x00, 0x00, 0x1F, 0x99, 0x60, 0x1A
    .byte 0x03, 0x1C, 0x14, 0x33, 0x61, 0x46, 0x14, 0x31, 0x45, 0x45, 0x01, 0xDA, 0x29, 0x1C, 0x0E, 0x31
    .byte 0x00, 0x2B, 0x21, 0xDB, 0x00, 0x29, 0x1F, 0xDB, 0x1D, 0x2B, 0x1D, 0xDC, 0x13, 0x29, 0x1B, 0xDC
    .byte 0x0F, 0x22, 0x4E, 0x46, 0x90, 0x1B, 0x02, 0x19, 0x46, 0x46, 0x11, 0x20, 0x86, 0x1B, 0x70, 0x19
    .byte 0x00, 0x2A, 0x11, 0xDB, 0x00, 0x28, 0x0F, 0xDB, 0x1D, 0x2A, 0x0D, 0xDC, 0x13, 0x28, 0x0B, 0xDC
    .byte 0x40, 0x01, 0x80, 0x18, 0x40, 0x00, 0x11, 0x9A, 0x80, 0x18, 0x49, 0x01, 0xC9, 0x18, 0x49, 0x00
    .byte 0x10, 0x9B, 0xC9, 0x18, 0x09, 0x88, 0x01, 0x80, 0x01, 0x34, 0x1F, 0x9E, 0xB4, 0x42, 0xC2, 0xDB
    .byte 0x1A, 0x9D, 0x55, 0x45, 0xB5, 0xDB, 0xA2, 0xE3, 0x00, 0x20, 0xB8, 0x60, 0x1D, 0x20, 0x00, 0xF0
    .byte 0x6D, 0xFC, 0x00, 0x20, 0x07, 0x90, 0x07, 0xAC, 0x00, 0x21, 0x00, 0x22, 0x0F, 0xF0, 0xC8, 0xF8
    .byte 0x01, 0x1C, 0x60, 0x4A, 0x20, 0x1C, 0x41, 0xF0, 0x11, 0xFF, 0x00, 0x20, 0xFD, 0xF7, 0xBA, 0xFE
    .byte 0xFD, 0xF7, 0x04, 0xFF, 0xFD, 0xF7, 0x4C, 0xFF, 0x5B, 0x48, 0x5C, 0x49, 0x40, 0x18, 0x00, 0x88
    .byte 0x02, 0x0A, 0x0F, 0x20, 0x02, 0x40, 0x01, 0x21, 0x03, 0x2A, 0x00, 0xDD, 0x02, 0x21, 0x02, 0x23
    .byte 0x98, 0x46, 0x03, 0x2A, 0x01, 0xDD, 0x01, 0x26, 0xB0, 0x46, 0x00, 0x25, 0x56, 0x1C, 0xB5, 0x42
    .byte 0x09, 0xDA, 0x0C, 0x1C, 0x09, 0x20, 0x21, 0x1C, 0x2A, 0x1C, 0x02, 0xF0, 0x4B, 0xFD, 0x44, 0x44
    .byte 0x01, 0x35, 0xB5, 0x42, 0xF6, 0xDB, 0x09, 0x20, 0x08, 0x21, 0x01, 0x22, 0x02, 0xF0, 0x72, 0xFE
    .byte 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0F, 0xF0, 0x93, 0xF8, 0x81, 0x46, 0x00, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x0F, 0xF0, 0x8D, 0xF8, 0x80, 0x46, 0x00, 0x20, 0x00, 0x23, 0x05, 0x1C, 0x0E, 0x35
    .byte 0x01, 0x30, 0x82, 0x46, 0x2C, 0x1C, 0x60, 0x01, 0x0A, 0x30, 0x40, 0x00, 0x49, 0x46, 0x42, 0x18
    .byte 0x46, 0x46, 0x81, 0x19, 0x18, 0x1C, 0x0A, 0x30, 0x00, 0x28, 0x07, 0xDB, 0x00, 0x2D, 0x05, 0xDB
    .byte 0x1D, 0x28, 0x03, 0xDC, 0x13, 0x2C, 0x01, 0xDC, 0x10, 0x88, 0x08, 0x80, 0x02, 0x32, 0x02, 0x31
    .byte 0x01, 0x33, 0x0A, 0x2B, 0xEE, 0xDB, 0x50, 0x46, 0x06, 0x28, 0xDE, 0xDB, 0x01, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x0F, 0xF0, 0x65, 0xF8, 0x81, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0F, 0xF0
    .byte 0x5F, 0xF8, 0x80, 0x46, 0x00, 0x20, 0x00, 0x21, 0x04, 0x1C, 0x10, 0x34, 0x01, 0x30, 0x82, 0x46
    .byte 0x23, 0x1C, 0x5D, 0x01, 0x4A, 0x1C, 0x00, 0x2A, 0x0C, 0xDB, 0x00, 0x2C, 0x0A, 0xDB, 0x1D, 0x2A
    .byte 0x08, 0xDC, 0x13, 0x2B, 0x06, 0xDC, 0xA8, 0x18, 0x40, 0x00, 0x46, 0x46, 0x81, 0x19, 0x48, 0x44
    .byte 0x00, 0x88, 0x08, 0x80, 0x11, 0x1C, 0x05, 0x29, 0xEC, 0xDB, 0x50, 0x46, 0x03, 0x28, 0xE2, 0xDB
    .byte 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0F, 0xF0, 0x3B, 0xF8, 0x80, 0x46, 0x00, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x0F, 0xF0, 0x35, 0xF8, 0x06, 0x1C, 0x00, 0x20, 0x39, 0x68, 0x89, 0x46, 0x00, 0x24
    .byte 0x43, 0x1C, 0x1D, 0x1C, 0x98, 0x01, 0x41, 0x46, 0x42, 0x18, 0x81, 0x19, 0x00, 0x2C, 0x07, 0xDB
    .byte 0x00, 0x2B, 0x05, 0xDB, 0x1D, 0x2C, 0x03, 0xDC, 0x13, 0x2D, 0x01, 0xDC, 0x10, 0x88, 0x08, 0x80
    .byte 0x02, 0x32, 0x02, 0x31, 0x01, 0x34, 0x03, 0x2C, 0xF0, 0xDB, 0x18, 0x1C, 0x01, 0x28, 0xE6, 0xDB
    .byte 0x01, 0x20, 0x38, 0x61, 0x00, 0x22, 0x12, 0x92, 0x0E, 0xF0, 0xFE, 0xFA, 0x00, 0x28, 0x03, 0xD0
    .byte 0x0E, 0xF0, 0x10, 0xFB, 0x00, 0x28, 0x01, 0xD1, 0x01, 0x23, 0x12, 0x93, 0x00, 0x26, 0xB0, 0x46
    .byte 0x2E, 0xE0, 0x00, 0x00, 0x40, 0x01, 0x00, 0x01, 0x20, 0x2E, 0x00, 0x03, 0x0A, 0x08, 0x00, 0x00
    .byte 0x40, 0x46, 0x46, 0x00, 0x1B, 0x25, 0xAD, 0x1B, 0x00, 0x20, 0x29, 0x1C, 0x12, 0x22, 0x0E, 0xF0
    .byte 0xF7, 0xFF, 0x55, 0x4A, 0x11, 0x1C, 0x01, 0x80, 0x1C, 0x24, 0xA4, 0x1B, 0x00, 0x20, 0x21, 0x1C
    .byte 0x12, 0x22, 0x0E, 0xF0, 0xED, 0xFF, 0x51, 0x4B, 0x19, 0x1C, 0x01, 0x80, 0x00, 0x20, 0x29, 0x1C
    .byte 0x13, 0x22, 0x0E, 0xF0, 0xE5, 0xFF, 0x4E, 0x4E, 0x31, 0x1C, 0x01, 0x80, 0x00, 0x20, 0x21, 0x1C
    .byte 0x13, 0x22, 0x0E, 0xF0, 0xDD, 0xFF, 0x4B, 0x4A, 0x11, 0x1C, 0x01, 0x80, 0x01, 0x23, 0x98, 0x44
    .byte 0xE3, 0xF7, 0x9C, 0xFA, 0x80, 0x45, 0xD3, 0xDB, 0x12, 0x9E, 0x00, 0x2E, 0x3A, 0xD0, 0x3A, 0x68
    .byte 0x52, 0x00, 0x0F, 0x32, 0x00, 0x20, 0x0B, 0x21, 0x0E, 0xF0, 0xCA, 0xFF, 0x42, 0x4A, 0x11, 0x1C
    .byte 0x01, 0x80, 0x3A, 0x68, 0x52, 0x00, 0x10, 0x32, 0x00, 0x20, 0x0B, 0x21, 0x0E, 0xF0, 0xC0, 0xFF
    .byte 0x3E, 0x4B, 0x19, 0x1C, 0x01, 0x80, 0x00, 0x21, 0x00, 0x26, 0x48, 0x1C, 0x80, 0x46, 0x0D, 0x1C
    .byte 0x0C, 0x35, 0x3A, 0x68, 0x52, 0x00, 0x34, 0x1C, 0x0F, 0x34, 0x12, 0x19, 0x00, 0x20, 0x29, 0x1C
    .byte 0x0E, 0xF0, 0xAE, 0xFF, 0x01, 0x88, 0x36, 0x4B, 0x1A, 0x1C, 0x11, 0x40, 0x01, 0x80, 0x3A, 0x68
    .byte 0x52, 0x00, 0x12, 0x19, 0x00, 0x20, 0x29, 0x1C, 0x0E, 0xF0, 0xA2, 0xFF, 0x01, 0x88, 0xE0, 0x23
    .byte 0x1B, 0x02, 0x1A, 0x1C, 0x11, 0x43, 0x01, 0x80, 0x01, 0x36, 0x01, 0x2E, 0xE1, 0xDD, 0x41, 0x46
    .byte 0x06, 0x29, 0xD9, 0xDD, 0xC0, 0x21, 0x2B, 0x48, 0x00, 0x88, 0x08, 0x40, 0x00, 0x28, 0x03, 0xD0
    .byte 0x39, 0x68, 0x01, 0x20, 0x40, 0x1A, 0x38, 0x60, 0x38, 0x68, 0x81, 0x45, 0x32, 0xD0, 0x4E, 0x46
    .byte 0x75, 0x00, 0x2A, 0x1C, 0x0F, 0x32, 0x00, 0x20, 0x0B, 0x21, 0x0E, 0xF0, 0x81, 0xFF, 0x00, 0x24
    .byte 0x04, 0x80, 0x2A, 0x1C, 0x10, 0x32, 0x00, 0x20, 0x0B, 0x21, 0x0E, 0xF0, 0x79, 0xFF, 0x04, 0x80
    .byte 0x00, 0x20, 0xAA, 0x46, 0xF0, 0x21, 0x09, 0x02, 0x89, 0x46, 0x06, 0x1C, 0x0C, 0x36, 0x01, 0x30
    .byte 0x80, 0x46, 0x54, 0x46, 0x0F, 0x34, 0x01, 0x25, 0x00, 0x20, 0x31, 0x1C, 0x22, 0x1C, 0x0E, 0xF0
    .byte 0x67, 0xFF, 0x01, 0x88, 0x4A, 0x46, 0x11, 0x43, 0x01, 0x80, 0x01, 0x34, 0x01, 0x3D, 0x00, 0x2D
    .byte 0xF2, 0xDA, 0x40, 0x46, 0x06, 0x28, 0xE8, 0xDD, 0x12, 0x9B, 0x00, 0x2B, 0x02, 0xD0, 0x8D, 0x20
    .byte 0x40, 0xF0, 0x8E, 0xFB, 0x09, 0x21, 0x0B, 0x48, 0x00, 0x88, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD1
    .byte 0xED, 0xE2, 0x1E, 0x20, 0xEA, 0xE2, 0x00, 0x00, 0xA0, 0xB0, 0x00, 0x00, 0xA1, 0xB0, 0x00, 0x00
    .byte 0xA2, 0xB0, 0x00, 0x00, 0xA3, 0xB0, 0x00, 0x00, 0x03, 0xF1, 0x00, 0x00, 0x03, 0xF9, 0x00, 0x00
    .byte 0xFF, 0x0F, 0x00, 0x00, 0xA0, 0x4E, 0x00, 0x03, 0x3C, 0x68, 0x00, 0x2C, 0x02, 0xD0, 0x01, 0x2C
    .byte 0x0D, 0xD0, 0xD4, 0xE2, 0x8F, 0x20, 0x40, 0xF0, 0x6B, 0xFB, 0xE3, 0xF7, 0x03, 0xFA, 0x01, 0x20
    .byte 0xFD, 0x21, 0xC9, 0x00, 0x41, 0x44, 0x08, 0x70, 0xBC, 0x60, 0x21, 0x20, 0xC6, 0xE2, 0x8E, 0x20
    .byte 0x40, 0xF0, 0x5E, 0xFB, 0x22, 0x20, 0xC1, 0xE2, 0xFD, 0xF7, 0xB2, 0xFD, 0x01, 0x20, 0x38, 0x61
    .byte 0x00, 0x24, 0x0E, 0xF0, 0x09, 0xFA, 0x00, 0x28, 0x03, 0xD0, 0x0E, 0xF0, 0x1B, 0xFA, 0x00, 0x28
    .byte 0x00, 0xD1, 0x01, 0x24, 0x00, 0x2C, 0x09, 0xD0, 0x06, 0x4C, 0x01, 0x20, 0x09, 0x21, 0x0E, 0x22
    .byte 0x0E, 0xF0, 0x0E, 0xFF, 0x01, 0x1C, 0x20, 0x1C, 0x2F, 0xF0, 0x2C, 0xFF, 0x00, 0x20, 0xB8, 0x60
    .byte 0x23, 0x20, 0xA3, 0xE2, 0x48, 0xB3, 0x0D, 0x08, 0xFD, 0xF7, 0x92, 0xFD, 0x01, 0x21, 0x39, 0x61
    .byte 0xB8, 0x68, 0x05, 0x28, 0x7E, 0xDC, 0x00, 0x24, 0x0E, 0xF0, 0xE6, 0xF9, 0x00, 0x28, 0x03, 0xD0
    .byte 0x0E, 0xF0, 0xF8, 0xF9, 0x00, 0x28, 0x00, 0xD1, 0x01, 0x24, 0xB8, 0x68, 0x01, 0x30, 0xB8, 0x60
    .byte 0x00, 0x2C, 0x00, 0xD1, 0x8B, 0xE2, 0x80, 0x46, 0xC1, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x0E, 0xF0, 0xE6, 0xFE, 0x13, 0x90, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0E, 0xF0, 0xE0, 0xFE
    .byte 0x14, 0x90, 0x46, 0x46, 0x00, 0x2E, 0x04, 0xDA, 0x00, 0x20, 0x81, 0x46, 0x00, 0x2E, 0x00, 0xDA
    .byte 0x80, 0x46, 0x49, 0x46, 0x06, 0x29, 0x01, 0xDD, 0x06, 0x22, 0x91, 0x46, 0x43, 0x46, 0x03, 0x2B
    .byte 0x01, 0xDD, 0x03, 0x26, 0xB0, 0x46, 0x00, 0x25, 0x41, 0x46, 0x48, 0x00, 0x85, 0x42, 0x00, 0xDB
    .byte 0x95, 0xE1, 0x4A, 0x46, 0x52, 0x00, 0x18, 0x92, 0x82, 0x46, 0x00, 0x24, 0x6B, 0x1C, 0x1C, 0x93
    .byte 0x18, 0x9E, 0xB4, 0x42, 0x3A, 0xDA, 0x1F, 0x96, 0x50, 0x46, 0x28, 0x1A, 0x84, 0x46, 0x4C, 0x45
    .byte 0x02, 0xDA, 0x23, 0x1C, 0x09, 0x33, 0x03, 0xE0, 0x1F, 0x99, 0x60, 0x1A, 0x03, 0x1C, 0x15, 0x33
    .byte 0x61, 0x46, 0x14, 0x31, 0x45, 0x45, 0x01, 0xDA, 0x29, 0x1C, 0x0E, 0x31, 0x00, 0x2B, 0x21, 0xDB
    .byte 0x00, 0x29, 0x1F, 0xDB, 0x1D, 0x2B, 0x1D, 0xDC, 0x13, 0x29, 0x1B, 0xDC, 0x0F, 0x22, 0x4E, 0x46
    .byte 0x90, 0x1B, 0x02, 0x19, 0x46, 0x46, 0x11, 0x20, 0x86, 0x1B, 0x70, 0x19, 0x00, 0x2A, 0x11, 0xDB
    .byte 0x00, 0x28, 0x0F, 0xDB, 0x1D, 0x2A, 0x0D, 0xDC, 0x13, 0x28, 0x0B, 0xDC, 0x40, 0x01, 0x80, 0x18
    .byte 0x40, 0x00, 0x14, 0x9A, 0x80, 0x18, 0x49, 0x01, 0xC9, 0x18, 0x49, 0x00, 0x13, 0x9B, 0xC9, 0x18
    .byte 0x09, 0x88, 0x01, 0x80, 0x01, 0x34, 0x1F, 0x9E, 0xB4, 0x42, 0xC8, 0xDB, 0x1C, 0x9D, 0x55, 0x45
    .byte 0xBB, 0xDB, 0x4C, 0xE1, 0x00, 0x20, 0xB8, 0x60, 0x39, 0x60, 0x24, 0x20, 0x16, 0xE2, 0xFD, 0xF7
    .byte 0x07, 0xFD, 0x01, 0x20, 0x38, 0x61, 0x38, 0x68, 0x81, 0x46, 0x00, 0x24, 0x0E, 0xF0, 0x5C, 0xF9
    .byte 0x00, 0x28, 0x03, 0xD0, 0x0E, 0xF0, 0x6E, 0xF9, 0x00, 0x28, 0x00, 0xD1, 0x01, 0x24, 0x30, 0x22
    .byte 0x53, 0x49, 0x08, 0x88, 0x10, 0x40, 0x0A, 0x1C, 0x00, 0x28, 0x03, 0xD0, 0x39, 0x68, 0x01, 0x20
    .byte 0x40, 0x1A, 0x38, 0x60, 0x00, 0x2C, 0x73, 0xD0, 0x38, 0x68, 0x81, 0x00, 0x09, 0x18, 0x0A, 0x31
    .byte 0x00, 0x20, 0x11, 0x22, 0x0E, 0xF0, 0x54, 0xFE, 0x4A, 0x4A, 0x11, 0x1C, 0x01, 0x80, 0x38, 0x68
    .byte 0x81, 0x00, 0x09, 0x18, 0x0A, 0x31, 0x00, 0x20, 0x12, 0x22, 0x0E, 0xF0, 0x49, 0xFE, 0x46, 0x4B
    .byte 0x19, 0x1C, 0x01, 0x80, 0x00, 0x20, 0x00, 0x26, 0x41, 0x1C, 0x88, 0x46, 0x05, 0x1C, 0x0B, 0x35
    .byte 0x38, 0x68, 0x81, 0x00, 0x09, 0x18, 0x49, 0x19, 0x34, 0x1C, 0x11, 0x34, 0x00, 0x20, 0x22, 0x1C
    .byte 0x0E, 0xF0, 0x36, 0xFE, 0x01, 0x88, 0x3D, 0x4B, 0x1A, 0x1C, 0x11, 0x40, 0x01, 0x80, 0x38, 0x68
    .byte 0x81, 0x00, 0x09, 0x18, 0x49, 0x19, 0x00, 0x20, 0x22, 0x1C, 0x0E, 0xF0, 0x29, 0xFE, 0x01, 0x88
    .byte 0xE0, 0x23, 0x1B, 0x02, 0x1A, 0x1C, 0x11, 0x43, 0x01, 0x80, 0x01, 0x36, 0x01, 0x2E, 0xDF, 0xDD
    .byte 0x40, 0x46, 0x02, 0x28, 0xD7, 0xDD, 0x38, 0x68, 0x81, 0x45, 0x2E, 0xD0, 0x8D, 0x20, 0x40, 0xF0
    .byte 0x4F, 0xFA, 0x4E, 0x46, 0xB5, 0x00, 0x4D, 0x44, 0x2E, 0x1C, 0x0A, 0x36, 0x00, 0x20, 0x31, 0x1C
    .byte 0x11, 0x22, 0x0E, 0xF0, 0x0D, 0xFE, 0xF0, 0x21, 0x09, 0x02, 0x0C, 0x1C, 0x04, 0x80, 0x00, 0x20
    .byte 0x31, 0x1C, 0x12, 0x22, 0x0E, 0xF0, 0x04, 0xFE, 0x04, 0x80, 0x00, 0x20, 0xA8, 0x46, 0xA1, 0x46
    .byte 0x00, 0x26, 0x04, 0x1C, 0x0B, 0x34, 0x45, 0x1C, 0x32, 0x1C, 0x11, 0x32, 0x00, 0x20, 0x43, 0x46
    .byte 0x19, 0x19, 0x0E, 0xF0, 0xF5, 0xFD, 0x01, 0x88, 0x4A, 0x46, 0x11, 0x43, 0x01, 0x80, 0x01, 0x36
    .byte 0x01, 0x2E, 0xF1, 0xDD, 0x28, 0x1C, 0x02, 0x28, 0xEA, 0xDD, 0x01, 0x20, 0x38, 0x61, 0x14, 0x4A
    .byte 0x09, 0x21, 0x10, 0x88, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD1, 0x80, 0xE1, 0x38, 0x68, 0x00, 0x28
    .byte 0x00, 0xD1, 0x77, 0xE1, 0x8E, 0x20, 0x40, 0xF0, 0x13, 0xFA, 0x00, 0x24, 0x0E, 0xF0, 0xC4, 0xF8
    .byte 0x00, 0x28, 0x03, 0xD0, 0x0E, 0xF0, 0xD6, 0xF8, 0x00, 0x28, 0x00, 0xD1, 0x01, 0x24, 0x00, 0x2C
    .byte 0x09, 0xD0, 0x0B, 0x4C, 0x01, 0x20, 0x09, 0x21, 0x0E, 0x22, 0x0E, 0xF0, 0xC9, 0xFD, 0x01, 0x1C
    .byte 0x20, 0x1C, 0x2F, 0xF0, 0xE7, 0xFD, 0x00, 0x20, 0xB8, 0x60, 0x25, 0x20, 0x5E, 0xE1, 0x00, 0x00
    .byte 0xA0, 0x4E, 0x00, 0x03, 0x03, 0xF1, 0x00, 0x00, 0x03, 0xF9, 0x00, 0x00, 0xFF, 0x0F, 0x00, 0x00
    .byte 0x68, 0xB2, 0x0D, 0x08, 0xFD, 0xF7, 0x44, 0xFC, 0x01, 0x21, 0x39, 0x61, 0xB8, 0x68, 0x05, 0x28
    .byte 0x00, 0xDD, 0x7F, 0xE0, 0x00, 0x24, 0x0E, 0xF0, 0x97, 0xF8, 0x00, 0x28, 0x03, 0xD0, 0x0E, 0xF0
    .byte 0xA9, 0xF8, 0x00, 0x28, 0x00, 0xD1, 0x01, 0x24, 0xB8, 0x68, 0x01, 0x30, 0xB8, 0x60, 0x00, 0x2C
    .byte 0x00, 0xD1, 0x3C, 0xE1, 0x80, 0x46, 0xC1, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0E, 0xF0
    .byte 0x97, 0xFD, 0x15, 0x90, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0E, 0xF0, 0x91, 0xFD, 0x16, 0x90
    .byte 0x43, 0x46, 0x00, 0x2B, 0x04, 0xDA, 0x00, 0x26, 0xB1, 0x46, 0x00, 0x2B, 0x00, 0xDA, 0xB0, 0x46
    .byte 0x48, 0x46, 0x06, 0x28, 0x01, 0xDD, 0x06, 0x21, 0x89, 0x46, 0x42, 0x46, 0x03, 0x2A, 0x01, 0xDD
    .byte 0x03, 0x23, 0x98, 0x46, 0x00, 0x25, 0x46, 0x46, 0x70, 0x00, 0x85, 0x42, 0x47, 0xDA, 0x49, 0x46
    .byte 0x49, 0x00, 0x19, 0x91, 0x82, 0x46, 0x00, 0x24, 0x6A, 0x1C, 0x1D, 0x92, 0x19, 0x9B, 0x9C, 0x42
    .byte 0x3A, 0xDA, 0x1F, 0x93, 0x56, 0x46, 0xAE, 0x1B, 0xB4, 0x46, 0x4C, 0x45, 0x02, 0xDA, 0x23, 0x1C
    .byte 0x09, 0x33, 0x03, 0xE0, 0x1F, 0x99, 0x60, 0x1A, 0x03, 0x1C, 0x15, 0x33, 0x61, 0x46, 0x14, 0x31
    .byte 0x45, 0x45, 0x01, 0xDA, 0x29, 0x1C, 0x0E, 0x31, 0x00, 0x2B, 0x21, 0xDB, 0x00, 0x29, 0x1F, 0xDB
    .byte 0x1D, 0x2B, 0x1D, 0xDC, 0x13, 0x29, 0x1B, 0xDC, 0x0F, 0x22, 0x4E, 0x46, 0x90, 0x1B, 0x02, 0x19
    .byte 0x46, 0x46, 0x11, 0x20, 0x86, 0x1B, 0x70, 0x19, 0x00, 0x2A, 0x11, 0xDB, 0x00, 0x28, 0x0F, 0xDB
    .byte 0x1D, 0x2A, 0x0D, 0xDC, 0x13, 0x28, 0x0B, 0xDC, 0x40, 0x01, 0x80, 0x18, 0x40, 0x00, 0x16, 0x9A
    .byte 0x80, 0x18, 0x49, 0x01, 0xC9, 0x18, 0x49, 0x00, 0x15, 0x9B, 0xC9, 0x18, 0x09, 0x88, 0x01, 0x80
    .byte 0x01, 0x34, 0x1F, 0x9E, 0xB4, 0x42, 0xC8, 0xDB, 0x1D, 0x9D, 0x55, 0x45, 0xBB, 0xDB, 0x01, 0x20
    .byte 0x38, 0x61, 0xCC, 0xE0, 0x00, 0x20, 0xB8, 0x60, 0x39, 0x60, 0x1D, 0x20, 0xC6, 0xE0, 0x04, 0x21
    .byte 0xFD, 0x20, 0xC0, 0x00, 0x40, 0x44, 0x01, 0x70, 0x02, 0x49, 0x01, 0x20, 0x08, 0x60, 0x27, 0x20
    .byte 0xBC, 0xE0, 0x00, 0x00, 0x50, 0x5C, 0x00, 0x03, 0xFD, 0xF7, 0xAA, 0xFB, 0x01, 0x22, 0x3A, 0x61
    .byte 0xB9, 0x68, 0x27, 0x29, 0x5C, 0xDC, 0x04, 0x20, 0x01, 0x40, 0x00, 0x29, 0x25, 0xD0, 0xE2, 0xF7
    .byte 0xD5, 0xFF, 0x04, 0x1C, 0x64, 0x00, 0x1B, 0x26, 0x36, 0x1B, 0x00, 0x20, 0x31, 0x1C, 0x12, 0x22
    .byte 0x0E, 0xF0, 0x06, 0xFD, 0x00, 0x21, 0x88, 0x46, 0x01, 0x80, 0x1C, 0x25, 0x2D, 0x1B, 0x00, 0x20
    .byte 0x29, 0x1C, 0x12, 0x22, 0x0E, 0xF0, 0xFC, 0xFC, 0x42, 0x46, 0x02, 0x80, 0x00, 0x20, 0x31, 0x1C
    .byte 0x13, 0x22, 0x0E, 0xF0, 0xF5, 0xFC, 0x43, 0x46, 0x03, 0x80, 0x00, 0x20, 0x29, 0x1C, 0x13, 0x22
    .byte 0x0E, 0xF0, 0xEE, 0xFC, 0x46, 0x46, 0x06, 0x80, 0x27, 0xE0, 0xE2, 0xF7, 0xAF, 0xFF, 0x04, 0x1C
    .byte 0x64, 0x00, 0x1B, 0x26, 0x36, 0x1B, 0x00, 0x20, 0x31, 0x1C, 0x12, 0x22, 0x0E, 0xF0, 0xE0, 0xFC
    .byte 0x0F, 0x4A, 0x11, 0x1C, 0x01, 0x80, 0x1C, 0x25, 0x2D, 0x1B, 0x00, 0x20, 0x29, 0x1C, 0x12, 0x22
    .byte 0x0E, 0xF0, 0xD6, 0xFC, 0x0B, 0x4B, 0x19, 0x1C, 0x01, 0x80, 0x00, 0x20, 0x31, 0x1C, 0x13, 0x22
    .byte 0x0E, 0xF0, 0xCE, 0xFC, 0x08, 0x4E, 0x31, 0x1C, 0x01, 0x80, 0x00, 0x20, 0x29, 0x1C, 0x13, 0x22
    .byte 0x0E, 0xF0, 0xC6, 0xFC, 0x05, 0x4A, 0x11, 0x1C, 0x01, 0x80, 0x01, 0x20, 0x38, 0x61, 0x0D, 0xE0
    .byte 0xA0, 0xB0, 0x00, 0x00, 0xA1, 0xB0, 0x00, 0x00, 0xA2, 0xB0, 0x00, 0x00, 0xA3, 0xB0, 0x00, 0x00
    .byte 0x2F, 0x29, 0x03, 0xDD, 0x02, 0x48, 0x02, 0x60, 0x27, 0x20, 0x78, 0x60, 0xB8, 0x68, 0x40, 0xE0
    .byte 0x50, 0x5C, 0x00, 0x03, 0xB8, 0x68, 0x00, 0x28, 0x06, 0xD1, 0x00, 0x20, 0x0E, 0xF0, 0xBA, 0xFC
    .byte 0x01, 0x20, 0x0E, 0xF0, 0xCB, 0xFC, 0x2B, 0xE0, 0x01, 0x28, 0x09, 0xD1, 0x02, 0x48, 0x03, 0x49
    .byte 0x41, 0xF0, 0xF6, 0xFA, 0x24, 0xE0, 0x00, 0x00, 0xA8, 0x2F, 0x0C, 0x08, 0x00, 0x10, 0x00, 0x06
    .byte 0x02, 0x28, 0x1D, 0xD1, 0x0F, 0x4C, 0x00, 0x20, 0x0E, 0xF0, 0x8C, 0xFC, 0x01, 0x1C, 0x20, 0x1C
    .byte 0x41, 0xF0, 0xE8, 0xFA, 0x01, 0x20, 0x0E, 0xF0, 0xB1, 0xFC, 0x0B, 0x4C, 0x00, 0x20, 0x0E, 0xF0
    .byte 0x47, 0xFC, 0x01, 0x1C, 0xA0, 0x23, 0x5B, 0x00, 0xC9, 0x18, 0x20, 0x1C, 0x08, 0x22, 0x41, 0xF0
    .byte 0xCD, 0xFA, 0x01, 0x20, 0x0E, 0xF0, 0x58, 0xFC, 0x00, 0x20, 0xB8, 0x60, 0x20, 0x20, 0x78, 0x60
    .byte 0xB8, 0x68, 0x06, 0xE0, 0x54, 0x39, 0x0C, 0x08, 0x34, 0x39, 0x0C, 0x08, 0xB8, 0x68, 0x3B, 0x28
    .byte 0x02, 0xDC, 0x01, 0x30, 0xB8, 0x60, 0x0A, 0xE0, 0x09, 0x21, 0x16, 0x48, 0x00, 0x88, 0x08, 0x40
    .byte 0x00, 0x28, 0x04, 0xD0, 0x8F, 0x20, 0x40, 0xF0, 0x9B, 0xF8, 0x26, 0x20
    thumb_func_start sub_801FDEC
    sub_801FDEC:
    str r0, [r7, #0x04]
    non_word_aligned_thumb_func_start def_801E7F6
    def_801E7F6: @ 0801FDEE
    ldr r0, [r7, #0x10]
    cmp r0, #0x00
    beq _0801FDFA
    movs r0, #0x01
    bl map_setBufferDirty
    _0801FDFA:
    ldr r1, [r7, #0x04]
    subs r0, r1, #0x3
    cmp r0, #0x17
    bhi _0801FE64
    ldr r0, _0801FE38 @ =0x03002E20
    ldr r0, [r0, #0x10]
    movs r1, #0x0C
    bl __umodsi3
    movs r1, #0x00
    cmp r0, #0x05
    ble _0801FE14
    movs r1, #0x01
    _0801FE14:
    cmp r1, #0x00
    beq _0801FE40
    ldr r4, _0801FE3C @ =0x080AACF0
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r6, #0xE0
    lsls r6, r6, #0x01
    adds r1, r1, r6
    adds r0, r4, #0x0
    movs r2, #0x08
    bl CpuFastSet
    b _0801FE58
    .byte 0x00, 0x00, 0xA0, 0x4E, 0x00, 0x03
    _0801FE38: .4byte 0x03002E20
    _0801FE3C: .4byte 0x080AACF0
    _0801FE40:
    ldr r4, _0801FE60 @ =0x080AAD10
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r0, #0xE0
    lsls r0, r0, #0x01
    adds r1, r1, r0
    adds r0, r4, #0x0
    movs r2, #0x08
    bl CpuFastSet
    _0801FE58:
    movs r0, #0x01
    bl pltt_setDirtyFlag
    b _0801FF4E
    _0801FE60: .4byte 0x080AAD10
    _0801FE64:
    cmp r1, #0x1A
    ble _0801FF4E
    ldr r0, _0801FF60 @ =0x03002E20
    ldr r0, [r0, #0x10]
    ldr r2, _0801FF64 @ =0x080E645C
    lsls r0, r0, #0x1A
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0801FE78
    adds r0, #0x3F
    _0801FE78:
    asrs r1, r0, #0x06
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r1
    ldr r1, _0801FF68 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    subs r0, r0, r1
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r0, r0, #0x01
    mov r9, r0
    movs r1, #0x00
    mov r12, r1
    mov r2, sp
    adds r2, #0x20
    str r2, [sp, #0x06C]
    ldr r0, _0801FF6C @ =0x080AAD3C
    movs r3, #0x1F
    mov r8, r3
    movs r7, #0x1F
    adds r6, r0, #0x0
    adds r6, #0x40
    str r6, [sp, #0x078]
    mov r10, r0
    _0801FEB2:
    mov r0, r12
    lsls r0, r0, #0x01
    str r0, [sp, #0x07C]
    mov r2, r10
    ldrh r1, [r2, #0x00]
    adds r2, r1, #0x0
    ands r2, r7
    lsrs r4, r1, #0x05
    mov r3, r8
    ands r4, r3
    lsrs r1, r1, #0x0A
    ands r1, r3
    ldr r6, [sp, #0x078]
    ldrh r3, [r6, #0x00]
    adds r0, r3, #0x0
    ands r0, r7
    lsrs r5, r3, #0x05
    mov r6, r8
    ands r5, r6
    lsrs r3, r3, #0x0A
    ands r3, r6
    subs r0, r0, r2
    mov r6, r9
    muls r6, r0
    adds r0, r6, #0x0
    asrs r0, r0, #0x0F
    adds r2, r2, r0
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    subs r5, r5, r4
    mov r0, r9
    muls r0, r5
    asrs r0, r0, #0x0F
    adds r4, r4, r0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    subs r3, r3, r1
    mov r0, r9
    muls r0, r3
    asrs r0, r0, #0x0F
    adds r1, r1, r0
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    ldr r0, [sp, #0x06C]
    ldr r3, [sp, #0x07C]
    adds r6, r0, r3
    ands r2, r7
    ands r4, r7
    lsls r4, r4, #0x05
    orrs r2, r4
    ands r1, r7
    lsls r1, r1, #0x0A
    orrs r2, r1
    strh r2, [r6, #0x00]
    ldr r6, [sp, #0x078]
    adds r6, #0x02
    str r6, [sp, #0x078]
    movs r0, #0x02
    add r10, r0
    movs r1, #0x01
    add r12, r1
    mov r2, r12
    cmp r2, #0x0F
    ble _0801FEB2
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r3, #0xE0
    lsls r3, r3, #0x01
    adds r1, r1, r3
    ldr r0, [sp, #0x06C]
    movs r2, #0x08
    bl CpuFastSet
    movs r0, #0x01
    bl pltt_setDirtyFlag
    _0801FF4E:
    add sp, #0x084
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _0801FF60: .4byte 0x03002E20
    _0801FF64: .4byte gSinTable
    _0801FF68: .4byte 0x000003FF
    _0801FF6C: .4byte 0x080AAD3C
    thumb_func_start sub_801FF70
    sub_801FF70:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    adds r7, r0, #0x0
    bl sub_800EDDC
    adds r2, r0, #0x0
    movs r6, #0x00
    ldr r0, _08020000 @ =0x03002E20
    ldr r3, _08020004 @ =0x00000814
    adds r1, r0, r3
    ldrb r3, [r1, #0x00]
    cmp r6, r3
    bge _0801FFF2
    mov r10, r0
    movs r0, #0x01
    negs r0, r0
    mov r9, r0
    mov r8, r1
    adds r4, r2, #0x0
    adds r4, #0x34
    movs r5, #0x00
    _0801FFA0:
    lsls r1, r6, #0x18
    lsrs r1, r1, #0x18
    mov r0, r10
    adds r0, #0x24
    bl sub_804AED4
    adds r2, r0, #0x0
    ldr r0, [r2, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _0801FFF2
    movs r1, #0x06
    ldsh r0, [r4, r1]
    cmp r0, r9
    bne _0801FFE4
    adds r1, r5, #0x0
    adds r1, #0x23
    cmp r6, #0x03
    ble _0801FFCA
    adds r1, #0x05
    _0801FFCA:
    movs r0, #0x00
    strh r1, [r4, #0x00]
    strh r0, [r4, #0x02]
    cmp r7, #0x00
    beq _0801FFD6
    adds r0, r5, #0x0
    _0801FFD6:
    strh r0, [r4, #0x04]
    adds r0, r2, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    strh r0, [r4, #0x06]
    _0801FFE4:
    adds r4, #0x08
    adds r5, #0x03
    adds r6, #0x01
    mov r3, r8
    ldrb r3, [r3, #0x00]
    cmp r6, r3
    blt _0801FFA0
    _0801FFF2:
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    _08020000: .4byte 0x03002E20
    _08020004: .4byte 0x00000814
    thumb_func_start sub_8020008
    sub_8020008:
    push {r4, r5, r6, lr}
    bl sub_800EDDC
    adds r1, r0, #0x0
    movs r4, #0x00
    ldr r0, _08020040 @ =0x03002E20
    ldr r2, _08020044 @ =0x00000814
    adds r3, r0, r2
    ldrb r0, [r3, #0x00]
    cmp r4, r0
    bge _08020094
    adds r2, r1, #0x0
    adds r2, #0x34
    movs r1, #0x06
    ldsh r0, [r2, r1]
    movs r1, #0x01
    negs r1, r1
    cmp r0, r1
    beq _08020094
    adds r6, r3, #0x0
    adds r5, r1, #0x0
    mov r12, r4
    _08020034:
    ldrh r0, [r2, #0x04]
    cmp r0, #0x00
    beq _08020048
    subs r0, #0x01
    strh r0, [r2, #0x04]
    b _0802007E
    _08020040: .4byte 0x03002E20
    _08020044: .4byte 0x00000814
    _08020048:
    mov r3, r12
    adds r3, #0x23
    cmp r4, #0x03
    ble _08020052
    adds r3, #0x05
    _08020052:
    mov r1, r12
    cmp r4, #0x03
    ble _0802005A
    adds r1, #0x05
    _0802005A:
    ldrh r0, [r2, #0x02]
    adds r0, #0x01
    strh r0, [r2, #0x02]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0x20
    bls _0802006C
    movs r0, #0x20
    strh r0, [r2, #0x02]
    _0802006C:
    subs r1, r1, r3
    ldrh r0, [r2, #0x02]
    muls r0, r1
    cmp r0, #0x00
    bge _08020078
    adds r0, #0x1F
    _08020078:
    asrs r0, r0, #0x05
    adds r0, r3, r0
    strh r0, [r2, #0x00]
    _0802007E:
    adds r2, #0x08
    movs r0, #0x03
    add r12, r0
    adds r4, #0x01
    ldrb r1, [r6, #0x00]
    cmp r4, r1
    bge _08020094
    movs r1, #0x06
    ldsh r0, [r2, r1]
    cmp r0, r5
    bne _08020034
    _08020094:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_802009C
    sub_802009C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x004
    bl sub_800EDDC
    mov r10, r0
    movs r7, #0x00
    b _0802020C
    _080200B2:
    ldr r4, _08020130 @ =0x03002E20
    adds r0, r4, #0x0
    adds r0, #0x24
    lsls r1, r7, #0x18
    lsrs r1, r1, #0x18
    bl sub_804AED4
    adds r3, r0, #0x0
    lsls r0, r7, #0x03
    adds r0, #0x34
    mov r6, r10
    adds r2, r6, r0
    movs r0, #0x06
    ldsh r1, [r2, r0]
    movs r0, #0x01
    negs r0, r0
    cmp r1, r0
    bne _080200D8
    b _0802021A
    _080200D8:
    ldr r1, _08020134 @ =0x00000838
    adds r0, r4, r1
    ldr r0, [r0, #0x00]
    cmp r3, r0
    bne _080200E4
    b _0802020A
    _080200E4:
    ldrh r0, [r2, #0x00]
    cmp r0, #0x1C
    bls _080200EC
    b _0802020A
    _080200EC:
    lsls r0, r7, #0x01
    adds r0, r0, r7
    cmp r7, #0x03
    ble _080200F6
    adds r0, #0x05
    _080200F6:
    ldrh r6, [r2, #0x00]
    cmp r6, r0
    beq _08020140
    movs r3, #0x06
    ldsh r4, [r2, r3]
    ldr r5, _08020138 @ =0x080DB420
    movs r0, #0x00
    adds r1, r6, #0x0
    movs r2, #0x0A
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r5, #0x0
    bl sub_804F6F4
    ldr r0, _0802013C @ =0x080DB5A0
    lsls r4, r4, #0x02
    adds r4, r4, r0
    ldr r4, [r4, #0x00]
    adds r1, r6, #0x1
    movs r0, #0x00
    movs r2, #0x0B
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    b _0802020A
    _08020130: .4byte 0x03002E20
    _08020134: .4byte 0x00000838
    _08020138: .4byte 0x080DB420
    _0802013C: .4byte 0x080DB5A0
    _08020140:
    adds r1, r0, #0x0
    movs r6, #0x06
    ldsh r2, [r2, r6]
    movs r0, #0x00
    cmp r7, #0x00
    beq _08020152
    cmp r7, #0x04
    beq _08020152
    movs r0, #0x03
    _08020152:
    adds r5, r1, #0x0
    adds r6, r2, #0x0
    movs r4, #0x00
    cmp r0, #0x0D
    bhi _080201DE
    lsls r0, r0, #0x02
    ldr r1, _08020168 @ =0x0802016C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
    _08020168: .4byte 0x0802016C
    .byte 0xA4, 0x01, 0x02, 0x08, 0xAC, 0x01, 0x02, 0x08, 0xB4, 0x01, 0x02, 0x08, 0xBC, 0x01, 0x02, 0x08
    .byte 0xDE, 0x01, 0x02, 0x08, 0xDE, 0x01, 0x02, 0x08, 0xDE, 0x01, 0x02, 0x08, 0xDE, 0x01, 0x02, 0x08
    .byte 0xDE, 0x01, 0x02, 0x08, 0xDE, 0x01, 0x02, 0x08, 0xC4, 0x01, 0x02, 0x08, 0xCC, 0x01, 0x02, 0x08
    .byte 0xD4, 0x01, 0x02, 0x08, 0xDC, 0x01, 0x02, 0x08, 0x00, 0x4C, 0x1A, 0xE0, 0x20, 0xB4, 0x0D, 0x08
    .byte 0x00, 0x4C, 0x16, 0xE0, 0x44, 0xB4, 0x0D, 0x08, 0x00, 0x4C, 0x12, 0xE0, 0x68, 0xB4, 0x0D, 0x08
    .byte 0x00, 0x4C, 0x0E, 0xE0, 0x8C, 0xB4, 0x0D, 0x08, 0x00, 0x4C, 0x0A, 0xE0, 0xB0, 0xB4, 0x0D, 0x08
    .byte 0x00, 0x4C, 0x06, 0xE0, 0xD4, 0xB4, 0x0D, 0x08, 0x00, 0x4C, 0x02, 0xE0, 0xF8, 0xB4, 0x0D, 0x08
    .byte 0x11, 0x4C
    _080201DE:
    movs r0, #0x00
    adds r1, r5, #0x0
    movs r2, #0x0A
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    ldr r1, _08020228 @ =0x080DB5A0
    lsls r0, r6, #0x02
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    adds r1, r5, #0x1
    movs r0, #0x00
    movs r2, #0x0B
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    _0802020A:
    adds r7, #0x01
    _0802020C:
    ldr r0, _0802022C @ =0x03002E20
    ldr r1, _08020230 @ =0x00000814
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r7, r0
    bge _0802021A
    b _080200B2
    _0802021A:
    movs r7, #0x00
    ldr r0, _0802022C @ =0x03002E20
    ldr r2, _08020230 @ =0x00000814
    adds r1, r0, r2
    b _0802067A
    .byte 0x1C, 0xB5, 0x0D, 0x08
    _08020228: .4byte 0x080DB5A0
    _0802022C: .4byte 0x03002E20
    _08020230: .4byte 0x00000814
    _08020234:
    adds r0, r2, #0x0
    adds r0, #0x24
    lsls r1, r7, #0x18
    lsrs r1, r1, #0x18
    str r2, [sp, #0x000]
    bl sub_804AED4
    adds r6, r0, #0x0
    lsls r0, r7, #0x03
    adds r0, #0x34
    mov r3, r10
    adds r4, r3, r0
    ldr r2, [sp, #0x000]
    ldr r0, [r2, #0x10]
    movs r1, #0x0C
    bl __umodsi3
    movs r5, #0x00
    ldr r2, [sp, #0x000]
    cmp r0, #0x05
    ble _08020260
    movs r5, #0x01
    _08020260:
    movs r1, #0x06
    ldsh r0, [r4, r1]
    movs r3, #0x01
    negs r3, r3
    mov r8, r3
    cmp r0, r8
    bne _08020270
    b _08020684
    _08020270:
    ldr r1, _080202B8 @ =0x00000838
    adds r0, r2, r1
    ldr r0, [r0, #0x00]
    adds r3, r7, #0x1
    mov r9, r3
    cmp r6, r0
    beq _08020280
    b _08020672
    _08020280:
    ldrh r0, [r4, #0x00]
    cmp r0, #0x1C
    bls _08020288
    b _08020672
    _08020288:
    lsls r0, r7, #0x01
    adds r0, r0, r7
    cmp r7, #0x03
    ble _08020292
    adds r0, #0x05
    _08020292:
    ldrh r1, [r4, #0x00]
    cmp r1, r0
    beq _08020370
    adds r6, r1, #0x0
    movs r1, #0x06
    ldsh r0, [r4, r1]
    mov r8, r0
    lsls r0, r5, #0x02
    adds r1, r0, r5
    lsls r0, r1, #0x01
    movs r4, #0x00
    cmp r0, #0x0D
    bhi _08020332
    lsls r0, r1, #0x03
    ldr r1, _080202BC @ =0x080202C0
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
    _080202B8: .4byte 0x00000838
    _080202BC: .4byte 0x080202C0
    .byte 0xF8, 0x02, 0x02, 0x08, 0x00, 0x03, 0x02, 0x08, 0x08, 0x03, 0x02, 0x08, 0x10, 0x03, 0x02, 0x08
    .byte 0x32, 0x03, 0x02, 0x08, 0x32, 0x03, 0x02, 0x08, 0x32, 0x03, 0x02, 0x08, 0x32, 0x03, 0x02, 0x08
    .byte 0x32, 0x03, 0x02, 0x08, 0x32, 0x03, 0x02, 0x08, 0x18, 0x03, 0x02, 0x08, 0x20, 0x03, 0x02, 0x08
    .byte 0x28, 0x03, 0x02, 0x08, 0x30, 0x03, 0x02, 0x08, 0x00, 0x4C, 0x1A, 0xE0, 0x20, 0xB4, 0x0D, 0x08
    .byte 0x00, 0x4C, 0x16, 0xE0, 0x44, 0xB4, 0x0D, 0x08, 0x00, 0x4C, 0x12, 0xE0, 0x68, 0xB4, 0x0D, 0x08
    .byte 0x00, 0x4C, 0x0E, 0xE0, 0x8C, 0xB4, 0x0D, 0x08, 0x00, 0x4C, 0x0A, 0xE0, 0xB0, 0xB4, 0x0D, 0x08
    .byte 0x00, 0x4C, 0x06, 0xE0, 0xD4, 0xB4, 0x0D, 0x08, 0x00, 0x4C, 0x02, 0xE0, 0xF8, 0xB4, 0x0D, 0x08
    .byte 0x0D, 0x4C
    _08020332:
    movs r0, #0x00
    adds r1, r6, #0x0
    movs r2, #0x0A
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    ldr r1, _0802036C @ =0x080DB5A0
    mov r2, r8
    lsls r0, r2, #0x02
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    adds r1, r6, #0x1
    movs r0, #0x00
    movs r2, #0x0B
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    adds r7, #0x01
    mov r9, r7
    b _08020672
    .byte 0x00, 0x00, 0x1C, 0xB5, 0x0D, 0x08
    _0802036C: .4byte 0x080DB5A0
    _08020370:
    movs r3, #0x00
    mov r12, r3
    mov r6, r9
    lsls r0, r6, #0x01
    adds r3, r0, r6
    cmp r6, #0x03
    ble _08020380
    adds r3, #0x05
    _08020380:
    ldr r6, _080203D4 @ =0x00000814
    adds r0, r2, r6
    ldrb r0, [r0, #0x00]
    subs r0, #0x01
    cmp r7, r0
    bge _080203AC
    mov r2, r9
    lsls r0, r2, #0x03
    mov r6, r10
    adds r2, r6, r0
    movs r6, #0x3A
    ldsh r0, [r2, r6]
    cmp r0, r8
    beq _080203AC
    ldrh r0, [r2, #0x34]
    cmp r0, r3
    beq _080203A6
    movs r0, #0x01
    mov r12, r0
    _080203A6:
    mov r2, r12
    cmp r2, #0x00
    beq _08020470
    _080203AC:
    cmp r7, #0x00
    beq _080203B4
    cmp r7, #0x04
    bne _08020414
    _080203B4:
    adds r6, r1, #0x0
    movs r3, #0x06
    ldsh r7, [r4, r3]
    lsls r0, r5, #0x02
    adds r1, r0, r5
    lsls r0, r1, #0x01
    movs r4, #0x00
    cmp r0, #0x0D
    bls _080203C8
    b _0802057A
    _080203C8:
    lsls r0, r1, #0x03
    ldr r1, _080203D8 @ =0x080203DC
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
    _080203D4: .4byte 0x00000814
    _080203D8: .4byte 0x080203DC
    .byte 0x40, 0x05, 0x02, 0x08, 0x48, 0x05, 0x02, 0x08, 0x50, 0x05, 0x02, 0x08, 0x58, 0x05, 0x02, 0x08
    .byte 0x7A, 0x05, 0x02, 0x08, 0x7A, 0x05, 0x02, 0x08, 0x7A, 0x05, 0x02, 0x08, 0x7A, 0x05, 0x02, 0x08
    .byte 0x7A, 0x05, 0x02, 0x08, 0x7A, 0x05, 0x02, 0x08, 0x60, 0x05, 0x02, 0x08, 0x68, 0x05, 0x02, 0x08
    .byte 0x70, 0x05, 0x02, 0x08, 0x78, 0x05, 0x02, 0x08
    _08020414:
    adds r6, r1, #0x0
    movs r0, #0x06
    ldsh r7, [r4, r0]
    lsls r0, r5, #0x02
    adds r0, r0, r5
    lsls r0, r0, #0x01
    adds r0, #0x03
    movs r4, #0x00
    cmp r0, #0x0D
    bls _0802042A
    b _0802057A
    _0802042A:
    lsls r0, r0, #0x02
    ldr r1, _08020434 @ =0x08020438
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    _08020434: .4byte 0x08020438
    .byte 0x40, 0x05, 0x02, 0x08, 0x48, 0x05, 0x02, 0x08, 0x50, 0x05, 0x02, 0x08, 0x58, 0x05, 0x02, 0x08
    .byte 0x7A, 0x05, 0x02, 0x08, 0x7A, 0x05, 0x02, 0x08, 0x7A, 0x05, 0x02, 0x08, 0x7A, 0x05, 0x02, 0x08
    .byte 0x7A, 0x05, 0x02, 0x08, 0x7A, 0x05, 0x02, 0x08, 0x60, 0x05, 0x02, 0x08, 0x68, 0x05, 0x02, 0x08
    .byte 0x70, 0x05, 0x02, 0x08, 0x78, 0x05, 0x02, 0x08
    _08020470:
    cmp r7, #0x03
    beq _080204E4
    cmp r7, #0x03
    bgt _0802047E
    cmp r7, #0x00
    beq _08020488
    b _080205B0
    _0802047E:
    cmp r7, #0x04
    beq _08020488
    cmp r7, #0x07
    beq _080204E4
    b _080205B0
    _08020488:
    adds r6, r1, #0x0
    movs r1, #0x06
    ldsh r7, [r4, r1]
    lsls r0, r5, #0x02
    adds r0, r0, r5
    lsls r0, r0, #0x01
    adds r0, #0x01
    movs r4, #0x00
    cmp r0, #0x0D
    bls _0802049E
    b _0802057A
    _0802049E:
    lsls r0, r0, #0x02
    ldr r1, _080204A8 @ =0x080204AC
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    _080204A8: .4byte 0x080204AC
    .byte 0x40, 0x05, 0x02, 0x08, 0x48, 0x05, 0x02, 0x08, 0x50, 0x05, 0x02, 0x08, 0x58, 0x05, 0x02, 0x08
    .byte 0x7A, 0x05, 0x02, 0x08, 0x7A, 0x05, 0x02, 0x08, 0x7A, 0x05, 0x02, 0x08, 0x7A, 0x05, 0x02, 0x08
    .byte 0x7A, 0x05, 0x02, 0x08, 0x7A, 0x05, 0x02, 0x08, 0x60, 0x05, 0x02, 0x08, 0x68, 0x05, 0x02, 0x08
    .byte 0x70, 0x05, 0x02, 0x08, 0x78, 0x05, 0x02, 0x08
    _080204E4:
    adds r6, r1, #0x0
    movs r2, #0x06
    ldsh r7, [r4, r2]
    lsls r0, r5, #0x02
    adds r0, r0, r5
    lsls r0, r0, #0x01
    adds r0, #0x03
    movs r4, #0x00
    cmp r0, #0x0D
    bhi _0802057A
    lsls r0, r0, #0x02
    ldr r1, _08020504 @ =0x08020508
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
    _08020504: .4byte 0x08020508
    .byte 0x40, 0x05, 0x02, 0x08, 0x48, 0x05, 0x02, 0x08, 0x50, 0x05, 0x02, 0x08, 0x58, 0x05, 0x02, 0x08
    .byte 0x7A, 0x05, 0x02, 0x08, 0x7A, 0x05, 0x02, 0x08, 0x7A, 0x05, 0x02, 0x08, 0x7A, 0x05, 0x02, 0x08
    .byte 0x7A, 0x05, 0x02, 0x08, 0x7A, 0x05, 0x02, 0x08, 0x60, 0x05, 0x02, 0x08, 0x68, 0x05, 0x02, 0x08
    .byte 0x70, 0x05, 0x02, 0x08, 0x78, 0x05, 0x02, 0x08, 0x00, 0x4C, 0x1A, 0xE0, 0x20, 0xB4, 0x0D, 0x08
    .byte 0x00, 0x4C, 0x16, 0xE0, 0x44, 0xB4, 0x0D, 0x08, 0x00, 0x4C, 0x12, 0xE0, 0x68, 0xB4, 0x0D, 0x08
    .byte 0x00, 0x4C, 0x0E, 0xE0, 0x8C, 0xB4, 0x0D, 0x08, 0x00, 0x4C, 0x0A, 0xE0, 0xB0, 0xB4, 0x0D, 0x08
    .byte 0x00, 0x4C, 0x06, 0xE0, 0xD4, 0xB4, 0x0D, 0x08, 0x00, 0x4C, 0x02, 0xE0, 0xF8, 0xB4, 0x0D, 0x08
    .byte 0x0B, 0x4C
    _0802057A:
    movs r0, #0x00
    adds r1, r6, #0x0
    movs r2, #0x0A
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    ldr r1, _080205AC @ =0x080DB5A0
    lsls r0, r7, #0x02
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    adds r1, r6, #0x1
    movs r0, #0x00
    movs r2, #0x0B
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    b _08020672
    .byte 0x1C, 0xB5, 0x0D, 0x08
    _080205AC: .4byte 0x080DB5A0
    _080205B0:
    adds r6, r1, #0x0
    movs r3, #0x06
    ldsh r7, [r4, r3]
    lsls r0, r5, #0x02
    adds r0, r0, r5
    lsls r0, r0, #0x01
    adds r0, #0x02
    movs r4, #0x00
    cmp r0, #0x0D
    bhi _08020646
    lsls r0, r0, #0x02
    ldr r1, _080205D0 @ =0x080205D4
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
    _080205D0: .4byte 0x080205D4
    .byte 0x0C, 0x06, 0x02, 0x08, 0x14, 0x06, 0x02, 0x08, 0x1C, 0x06, 0x02, 0x08, 0x24, 0x06, 0x02, 0x08
    .byte 0x46, 0x06, 0x02, 0x08, 0x46, 0x06, 0x02, 0x08, 0x46, 0x06, 0x02, 0x08, 0x46, 0x06, 0x02, 0x08
    .byte 0x46, 0x06, 0x02, 0x08, 0x46, 0x06, 0x02, 0x08, 0x2C, 0x06, 0x02, 0x08, 0x34, 0x06, 0x02, 0x08
    .byte 0x3C, 0x06, 0x02, 0x08, 0x44, 0x06, 0x02, 0x08, 0x00, 0x4C, 0x1A, 0xE0, 0x20, 0xB4, 0x0D, 0x08
    .byte 0x00, 0x4C, 0x16, 0xE0, 0x44, 0xB4, 0x0D, 0x08, 0x00, 0x4C, 0x12, 0xE0, 0x68, 0xB4, 0x0D, 0x08
    .byte 0x00, 0x4C, 0x0E, 0xE0, 0x8C, 0xB4, 0x0D, 0x08, 0x00, 0x4C, 0x0A, 0xE0, 0xB0, 0xB4, 0x0D, 0x08
    .byte 0x00, 0x4C, 0x06, 0xE0, 0xD4, 0xB4, 0x0D, 0x08, 0x00, 0x4C, 0x02, 0xE0, 0xF8, 0xB4, 0x0D, 0x08
    .byte 0x13, 0x4C
    _08020646:
    movs r0, #0x00
    adds r1, r6, #0x0
    movs r2, #0x0A
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    ldr r1, _08020698 @ =0x080DB5A0
    lsls r0, r7, #0x02
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    adds r1, r6, #0x1
    movs r0, #0x00
    movs r2, #0x0B
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    _08020672:
    mov r7, r9
    ldr r0, _0802069C @ =0x03002E20
    ldr r6, _080206A0 @ =0x00000814
    adds r1, r0, r6
    _0802067A:
    adds r2, r0, #0x0
    ldrb r1, [r1, #0x00]
    cmp r7, r1
    bge _08020684
    b _08020234
    _08020684:
    add sp, #0x004
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x1C, 0xB5, 0x0D, 0x08
    _08020698: .4byte 0x080DB5A0
    _0802069C: .4byte 0x03002E20
    _080206A0: .4byte 0x00000814
    thumb_func_start sub_80206A4
    sub_80206A4:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x010
    bl sub_800EDDC
    str r0, [sp, #0x000]
    ldr r0, _08020768 @ =0x03002E20
    ldr r1, _0802076C @ =0x00000814
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    str r0, [sp, #0x004]
    movs r1, #0x00
    cmp r1, r0
    bge _08020756
    _080206C6:
    lsls r0, r1, #0x04
    adds r0, #0x34
    ldr r3, [sp, #0x000]
    adds r2, r3, r0
    ldrh r0, [r2, #0x0C]
    adds r7, r1, #0x1
    str r7, [sp, #0x008]
    cmp r0, #0x00
    bne _0802074E
    ldr r0, [sp, #0x004]
    subs r0, #0x01
    movs r3, #0x02
    cmp r1, r0
    bne _080206E4
    movs r3, #0x03
    _080206E4:
    lsls r0, r1, #0x01
    adds r0, #0x03
    mov r10, r0
    mov r8, r3
    ldrh r6, [r2, #0x0A]
    movs r0, #0x01
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    mov r9, r0
    movs r0, #0x00
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    mov r12, r0
    movs r0, #0x00
    cmp r0, r8
    bge _0802074E
    _0802070C:
    movs r4, #0x00
    mov r1, r10
    adds r5, r1, r0
    adds r0, #0x01
    str r0, [sp, #0x00C]
    adds r3, r5, #0x0
    lsls r0, r3, #0x06
    mov r7, r9
    adds r2, r0, r7
    lsls r0, r3, #0x05
    adds r0, r6, r0
    lsls r0, r0, #0x01
    mov r7, r12
    adds r1, r0, r7
    _08020728:
    adds r0, r4, r6
    cmp r0, #0x00
    blt _0802073E
    cmp r5, #0x00
    blt _0802073E
    cmp r0, #0x1D
    bgt _0802073E
    cmp r3, #0x13
    bgt _0802073E
    ldrh r0, [r2, #0x00]
    strh r0, [r1, #0x00]
    _0802073E:
    adds r2, #0x02
    adds r1, #0x02
    adds r4, #0x01
    cmp r4, #0x20
    blt _08020728
    ldr r0, [sp, #0x00C]
    cmp r0, r8
    blt _0802070C
    _0802074E:
    ldr r1, [sp, #0x008]
    ldr r0, [sp, #0x004]
    cmp r1, r0
    blt _080206C6
    _08020756:
    add sp, #0x010
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _08020768: .4byte 0x03002E20
    _0802076C: .4byte 0x00000814
    thumb_func_start sub_8020770
    sub_8020770:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    add sp, #-0x004
    ldr r4, _080208CC @ =0x0809A9AC
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r0, #0xC0
    lsls r0, r0, #0x01
    adds r1, r1, r0
    adds r0, r4, #0x0
    movs r2, #0x20
    bl CpuFastSet
    ldr r4, _080208D0 @ =0x080AACF0
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r0, #0xE0
    lsls r0, r0, #0x01
    adds r1, r1, r0
    adds r0, r4, #0x0
    movs r2, #0x10
    bl CpuFastSet
    movs r0, #0x01
    bl pltt_setDirtyFlag
    bl dmaq_getVBlankDmaQueue
    ldr r1, _080208D4 @ =0x080ACAFC
    ldr r2, _080208D8 @ =0x06001400
    ldr r3, _080208DC @ =0x80000600
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _080208E0 @ =0x080ABEFC
    ldr r2, _080208E4 @ =0x06002000
    ldr r4, _080208E8 @ =0x80000400
    adds r3, r4, #0x0
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _080208EC @ =0x0809AA2C
    ldr r2, _080208F0 @ =0x060009A0
    ldr r3, _080208F4 @ =0x80000130
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _080208F8 @ =0x080AAE3C
    movs r2, #0xC0
    lsls r2, r2, #0x13
    adds r3, r4, #0x0
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _080208FC @ =0x080AB7FC
    ldr r2, _08020900 @ =0x06000800
    ldr r3, _08020904 @ =0x800000E0
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _08020908 @ =0x0809AE2C
    ldr r2, _0802090C @ =0x06001000
    ldr r3, _08020910 @ =0x80000240
    bl dmaq_enqueue
    ldr r4, _08020914 @ =0x0809B4CC
    movs r0, #0x00
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl LZ77UnCompWram
    movs r0, #0x00
    str r0, [sp, #0x000]
    movs r1, #0x00
    movs r2, #0x03
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    ldr r2, _08020918 @ =0x01000110
    mov r0, sp
    bl CpuFastSet
    ldr r0, _0802091C @ =0x03002E20
    movs r1, #0x80
    lsls r1, r1, #0x04
    adds r0, r0, r1
    ldrb r1, [r0, #0x00]
    movs r7, #0x00
    lsls r0, r1, #0x01
    adds r0, r0, r1
    mov r8, r0
    _08020842:
    adds r6, r7, #0x0
    adds r6, #0x0D
    movs r0, #0x00
    adds r1, r6, #0x0
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    mov r0, r8
    adds r5, r0, r7
    movs r0, #0x00
    adds r1, r5, #0x0
    movs r2, #0x1C
    bl map_getBufferPtr2d
    ldrh r0, [r0, #0x00]
    strh r0, [r4, #0x00]
    movs r0, #0x00
    adds r1, r6, #0x0
    movs r2, #0x01
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    movs r0, #0x00
    adds r1, r5, #0x0
    movs r2, #0x1D
    bl map_getBufferPtr2d
    ldrh r0, [r0, #0x00]
    strh r0, [r4, #0x00]
    adds r7, #0x01
    cmp r7, #0x02
    ble _08020842
    ldr r5, _0802091C @ =0x03002E20
    ldr r1, _08020920 @ =0x00000801
    adds r6, r5, r1
    ldrb r0, [r6, #0x00]
    bl track_getCup
    adds r4, r0, #0x0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    ldrb r0, [r6, #0x00]
    bl track_getCupIndex
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    lsls r4, r4, #0x02
    adds r6, r4, r0
    ldr r0, _08020924 @ =0x0000059C
    adds r5, r5, r0
    ldr r0, [r5, #0x00]
    ldr r0, [r0, #0x0C]
    bl sub_8032BC8
    cmp r0, #0x00
    beq _08020930
    ldr r4, _08020928 @ =0x080E7FEC
    adds r0, r6, #0x0
    bl track_getRetroTrack
    lsls r0, r0, #0x02
    adds r0, r0, r4
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x30]
    ldr r1, _0802092C @ =0x06000C00
    bl LZ77UnCompVram
    b _08020946
    _080208CC: .4byte 0x0809A9AC
    _080208D0: .4byte 0x080AACF0
    _080208D4: .4byte 0x080ACAFC
    _080208D8: .4byte 0x06001400
    _080208DC: .4byte 0x80000600
    _080208E0: .4byte 0x080ABEFC
    _080208E4: .4byte 0x06002000
    _080208E8: .4byte 0x80000400
    _080208EC: .4byte 0x0809AA2C
    _080208F0: .4byte 0x060009A0
    _080208F4: .4byte 0x80000130
    _080208F8: .4byte 0x080AAE3C
    _080208FC: .4byte 0x080AB7FC
    _08020900: .4byte 0x06000800
    _08020904: .4byte 0x800000E0
    _08020908: .4byte 0x0809AE2C
    _0802090C: .4byte 0x06001000
    _08020910: .4byte 0x80000240
    _08020914: .4byte 0x0809B4CC
    _08020918: .4byte 0x01000110
    _0802091C: .4byte 0x03002E20
    _08020920: .4byte 0x00000801
    _08020924: .4byte 0x0000059C
    _08020928: .4byte 0x080E7FEC
    _0802092C: .4byte 0x06000C00
    _08020930:
    ldr r4, _08020954 @ =0x080E7FEC
    adds r0, r6, #0x0
    bl track_getMKSCTrack
    lsls r0, r0, #0x02
    adds r0, r0, r4
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x30]
    ldr r1, _08020958 @ =0x06000C00
    bl LZ77UnCompVram
    _08020946:
    add sp, #0x004
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _08020954: .4byte 0x080E7FEC
    _08020958: .4byte 0x06000C00
    thumb_func_start sub_802095C
    sub_802095C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x024
    str r0, [sp, #0x00C]
    mov r8, r1
    str r2, [sp, #0x010]
    mov r10, r3
    ldr r0, _08020A0C @ =0x03002E20
    ldr r1, _08020A10 @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov r2, r8
    movs r3, #0x02
    ldsh r4, [r2, r3]
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    bl sub_800EDB0
    movs r7, #0xF0
    lsls r7, r7, #0x08
    cmp r4, r0
    bne _08020996
    movs r7, #0xE0
    lsls r7, r7, #0x08
    _08020996:
    ldr r4, [sp, #0x00C]
    lsls r3, r4, #0x07
    mov r5, r10
    adds r1, r3, r5
    adds r2, r1, #0x0
    adds r2, #0xC2
    ldr r6, _08020A14 @ =0x00000101
    adds r0, r6, #0x0
    mov r4, r8
    ldrh r4, [r4, #0x00]
    adds r0, r0, r4
    orrs r0, r7
    strh r0, [r2, #0x00]
    movs r5, #0x81
    lsls r5, r5, #0x01
    adds r1, r1, r5
    adds r6, #0x20
    adds r0, r6, #0x0
    mov r2, r8
    ldrh r2, [r2, #0x00]
    adds r0, r0, r2
    orrs r0, r7
    strh r0, [r1, #0x00]
    ldr r0, _08020A18 @ =0x080DB69C
    mov r4, r8
    movs r5, #0x02
    ldsh r1, [r4, r5]
    lsls r2, r1, #0x03
    adds r2, r2, r0
    lsls r1, r1, #0x01
    adds r1, #0x01
    lsls r1, r1, #0x02
    adds r1, r1, r0
    movs r6, #0x00
    mov r9, r6
    str r3, [sp, #0x018]
    ldr r5, [r0, #0x40]
    mov r12, r6
    movs r0, #0x83
    lsls r0, r0, #0x01
    add r0, r10
    adds r4, r3, r0
    ldr r2, [r2, #0x00]
    mov r0, r10
    adds r0, #0xC6
    adds r6, r3, r0
    ldr r3, [r1, #0x00]
    movs r0, #0xE0
    lsls r0, r0, #0x02
    add r0, r10
    str r0, [sp, #0x014]
    _080209FC:
    mov r1, r9
    cmp r1, #0x03
    bgt _08020A1C
    ldrh r0, [r2, #0x00]
    strh r0, [r6, #0x00]
    ldrh r0, [r3, #0x00]
    b _08020A2E
    .byte 0x00, 0x00
    _08020A0C: .4byte 0x03002E20
    _08020A10: .4byte 0x00000838
    _08020A14: .4byte 0x00000101
    _08020A18: .4byte 0x080DB69C
    _08020A1C:
    ldrh r1, [r2, #0x00]
    ldr r0, _08020A70 @ =0x00000FFF
    ands r0, r1
    orrs r0, r7
    strh r0, [r6, #0x00]
    ldrh r1, [r3, #0x00]
    ldr r0, _08020A70 @ =0x00000FFF
    ands r0, r1
    orrs r0, r7
    _08020A2E:
    strh r0, [r4, #0x00]
    ldr r0, [sp, #0x00C]
    cmp r0, #0x07
    bne _08020A44
    ldr r0, [sp, #0x014]
    add r0, r12
    movs r1, #0xA3
    lsls r1, r1, #0x01
    adds r1, r0, r1
    ldrh r0, [r5, #0x00]
    strh r0, [r1, #0x00]
    _08020A44:
    adds r5, #0x02
    movs r0, #0x02
    add r12, r0
    adds r4, #0x02
    adds r2, #0x02
    adds r6, #0x02
    adds r3, #0x02
    movs r1, #0x01
    add r9, r1
    mov r0, r9
    cmp r0, #0x08
    ble _080209FC
    ldr r1, [sp, #0x010]
    cmp r1, #0x01
    bne _08020A64
    b _08020B84
    _08020A64:
    cmp r1, #0x01
    bgt _08020A74
    cmp r1, #0x00
    beq _08020A7E
    b _08020CB0
    .byte 0x00, 0x00
    _08020A70: .4byte 0x00000FFF
    _08020A74:
    ldr r2, [sp, #0x010]
    cmp r2, #0x02
    bne _08020A7C
    b _08020C46
    _08020A7C:
    b _08020CB0
    _08020A7E:
    mov r3, r8
    ldrh r0, [r3, #0x04]
    add r2, sp, #0x004
    add r3, sp, #0x008
    mov r1, sp
    bl sub_804EFBC
    ldr r4, [sp, #0x018]
    add r4, r10
    mov r12, r4
    mov r1, r12
    adds r1, #0xDA
    ldr r5, [sp, #0x000]
    movs r6, #0x0F
    mov r10, r6
    movs r0, #0x0F
    mov r8, r0
    ands r5, r0
    str r5, [sp, #0x020]
    movs r3, #0x80
    lsls r3, r3, #0x01
    adds r2, r3, #0x0
    adds r0, r5, r2
    orrs r0, r7
    strh r0, [r1, #0x00]
    mov r3, r12
    adds r3, #0xDC
    movs r4, #0x85
    lsls r4, r4, #0x01
    adds r1, r4, #0x0
    adds r0, r7, #0x0
    orrs r0, r1
    strh r0, [r3, #0x00]
    mov r1, r12
    adds r1, #0xDE
    ldr r3, [sp, #0x004]
    lsrs r5, r3, #0x04
    mov r6, r10
    ands r5, r6
    adds r0, r5, r2
    orrs r0, r7
    strh r0, [r1, #0x00]
    adds r1, #0x02
    mov r4, r8
    ands r4, r3
    adds r0, r4, r2
    orrs r0, r7
    strh r0, [r1, #0x00]
    mov r3, r12
    adds r3, #0xE2
    ldr r0, _08020B7C @ =0x0000010B
    adds r1, r0, #0x0
    adds r0, r7, #0x0
    orrs r0, r1
    strh r0, [r3, #0x00]
    movs r1, #0xE4
    add r1, r12
    mov r9, r1
    ldr r1, [sp, #0x008]
    lsrs r3, r1, #0x04
    ands r3, r6
    adds r0, r3, r2
    orrs r0, r7
    mov r6, r9
    strh r0, [r6, #0x00]
    movs r0, #0xE6
    add r0, r12
    mov r6, r8
    ands r6, r1
    mov r8, r6
    add r2, r8
    orrs r2, r7
    strh r2, [r0, #0x00]
    movs r0, #0x8D
    lsls r0, r0, #0x01
    add r0, r12
    movs r1, #0x90
    lsls r1, r1, #0x01
    mov r9, r1
    ldr r6, [sp, #0x020]
    add r6, r9
    orrs r6, r7
    strh r6, [r0, #0x00]
    movs r2, #0x8E
    lsls r2, r2, #0x01
    add r2, r12
    movs r6, #0x95
    lsls r6, r6, #0x01
    adds r1, r6, #0x0
    adds r0, r7, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    movs r0, #0x8F
    lsls r0, r0, #0x01
    add r0, r12
    add r5, r9
    orrs r5, r7
    strh r5, [r0, #0x00]
    movs r2, #0x90
    lsls r2, r2, #0x01
    mov r1, r12
    adds r0, r1, r2
    adds r4, r4, r2
    orrs r4, r7
    strh r4, [r0, #0x00]
    movs r4, #0x91
    lsls r4, r4, #0x01
    add r4, r12
    ldr r5, _08020B80 @ =0x0000012B
    adds r1, r5, #0x0
    adds r0, r7, #0x0
    orrs r0, r1
    strh r0, [r4, #0x00]
    movs r0, #0x92
    lsls r0, r0, #0x01
    add r0, r12
    adds r3, r3, r2
    orrs r3, r7
    strh r3, [r0, #0x00]
    movs r0, #0x93
    lsls r0, r0, #0x01
    add r0, r12
    add r8, r2
    mov r6, r8
    orrs r7, r6
    strh r7, [r0, #0x00]
    b _08020CB0
    _08020B7C: .4byte 0x0000010B
    _08020B80: .4byte 0x0000012B
    _08020B84:
    ldr r6, [sp, #0x018]
    add r6, r10
    adds r4, r6, #0x0
    adds r4, #0xEE
    mov r1, r8
    movs r2, #0x06
    ldsh r0, [r1, r2]
    movs r1, #0x0A
    bl __divsi3
    movs r3, #0x80
    lsls r3, r3, #0x01
    mov r10, r3
    add r0, r10
    orrs r0, r7
    strh r0, [r4, #0x00]
    adds r4, #0x02
    mov r5, r8
    movs r1, #0x06
    ldsh r0, [r5, r1]
    movs r1, #0x0A
    bl __modsi3
    add r0, r10
    orrs r0, r7
    strh r0, [r4, #0x00]
    adds r0, r6, #0x0
    adds r0, #0xF2
    movs r5, #0x00
    strh r5, [r0, #0x00]
    movs r2, #0x97
    lsls r2, r2, #0x01
    adds r4, r6, r2
    mov r3, r8
    movs r1, #0x06
    ldsh r0, [r3, r1]
    movs r1, #0x0A
    bl __divsi3
    movs r2, #0x90
    lsls r2, r2, #0x01
    mov r9, r2
    add r0, r9
    orrs r0, r7
    strh r0, [r4, #0x00]
    movs r3, #0x98
    lsls r3, r3, #0x01
    adds r4, r6, r3
    mov r1, r8
    movs r2, #0x06
    ldsh r0, [r1, r2]
    movs r1, #0x0A
    bl __modsi3
    add r0, r9
    orrs r0, r7
    strh r0, [r4, #0x00]
    movs r3, #0x99
    lsls r3, r3, #0x01
    adds r0, r6, r3
    strh r5, [r0, #0x00]
    mov r4, r8
    movs r5, #0x00
    ldsh r0, [r4, r5]
    cmp r0, #0x03
    bgt _08020CB0
    adds r2, r6, #0x0
    adds r2, #0xF4
    movs r0, #0x86
    lsls r0, r0, #0x01
    adds r1, r0, #0x0
    adds r0, r7, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    adds r1, r6, #0x0
    adds r1, #0xF6
    ldrh r0, [r4, #0x08]
    add r0, r10
    orrs r0, r7
    strh r0, [r1, #0x00]
    movs r1, #0x9A
    lsls r1, r1, #0x01
    adds r2, r6, r1
    subs r3, #0x06
    adds r1, r3, #0x0
    adds r0, r7, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    movs r4, #0x9B
    lsls r4, r4, #0x01
    adds r1, r6, r4
    mov r5, r8
    ldrh r0, [r5, #0x08]
    add r0, r9
    orrs r7, r0
    strh r7, [r1, #0x00]
    b _08020CB0
    _08020C46:
    ldr r6, [sp, #0x018]
    add r6, r10
    adds r5, r6, #0x0
    adds r5, #0xEE
    mov r1, r8
    movs r2, #0x06
    ldsh r0, [r1, r2]
    movs r1, #0x0A
    bl __divsi3
    movs r3, #0x80
    lsls r3, r3, #0x01
    adds r4, r3, #0x0
    adds r0, r0, r4
    orrs r0, r7
    strh r0, [r5, #0x00]
    adds r5, #0x02
    mov r1, r8
    movs r2, #0x06
    ldsh r0, [r1, r2]
    movs r1, #0x0A
    bl __modsi3
    adds r0, r0, r4
    orrs r0, r7
    strh r0, [r5, #0x00]
    movs r3, #0x97
    lsls r3, r3, #0x01
    adds r5, r6, r3
    mov r4, r8
    movs r1, #0x06
    ldsh r0, [r4, r1]
    movs r1, #0x0A
    bl __divsi3
    movs r2, #0x90
    lsls r2, r2, #0x01
    adds r4, r2, #0x0
    adds r0, r0, r4
    orrs r0, r7
    strh r0, [r5, #0x00]
    movs r3, #0x98
    lsls r3, r3, #0x01
    adds r5, r6, r3
    mov r6, r8
    movs r1, #0x06
    ldsh r0, [r6, r1]
    movs r1, #0x0A
    bl __modsi3
    adds r0, r0, r4
    orrs r7, r0
    strh r7, [r5, #0x00]
    _08020CB0:
    add sp, #0x024
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    thumb_func_start sub_8020CC0
    sub_8020CC0:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x014
    adds r4, r0, #0x0
    bl sub_800EDDC
    str r0, [sp, #0x008]
    ldr r0, _08020D24 @ =0x03002E20
    movs r5, #0x00
    ldr r1, _08020D28 @ =0x00000838
    adds r2, r0, r1
    lsls r1, r4, #0x02
    ldr r3, _08020D2C @ =0x00000818
    adds r0, r0, r3
    adds r1, r1, r0
    ldr r2, [r2, #0x00]
    ldr r0, [r1, #0x00]
    cmp r2, r0
    bne _08020CEE
    movs r5, #0x01
    _08020CEE:
    lsls r0, r4, #0x01
    ldr r1, [sp, #0x008]
    adds r1, #0x14
    adds r3, r1, r0
    movs r4, #0x00
    ldsh r2, [r3, r4]
    mov r9, r0
    mov r10, r1
    cmp r2, #0x04
    beq _08020D0E
    ldr r1, [sp, #0x008]
    adds r1, #0x2C
    add r1, r9
    ldrh r0, [r1, #0x00]
    adds r0, #0x01
    strh r0, [r1, #0x00]
    _08020D0E:
    movs r7, #0x00
    ldsh r0, [r3, r7]
    cmp r0, #0x04
    bls _08020D18
    b _08021220
    _08020D18:
    lsls r0, r0, #0x02
    ldr r1, _08020D30 @ =0x08020D34
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
    _08020D24: .4byte 0x03002E20
    _08020D28: .4byte 0x00000838
    _08020D2C: .4byte 0x00000818
    _08020D30: .4byte 0x08020D34
    .byte 0x48, 0x0D, 0x02, 0x08, 0x90, 0x0D, 0x02, 0x08, 0x4C, 0x0E, 0x02, 0x08, 0xF2, 0x10, 0x02, 0x08
    .byte 0xF2, 0x10, 0x02, 0x08, 0x00, 0x2D, 0x0D, 0xD0, 0x0F, 0x4C, 0x24, 0x34, 0x20, 0x1C, 0x2C, 0xF0
    .byte 0xFB, 0xFD, 0x20, 0x1C, 0x2D, 0xF0, 0xF4, 0xF9, 0x20, 0x1C, 0x2E, 0xF0, 0xAF, 0xFA, 0x20, 0x1C
    .byte 0x2E, 0xF0, 0xEC, 0xFA, 0x02, 0x98, 0x2C, 0x30, 0x48, 0x44, 0x00, 0x21, 0x40, 0x5E, 0xB4, 0x28
    .byte 0x00, 0xDC, 0x53, 0xE2, 0x51, 0x46, 0x49, 0x44, 0x00, 0x22, 0x01, 0x20, 0x08, 0x80, 0x02, 0x98
    .byte 0x1C, 0x30, 0x48, 0x44, 0x02, 0x80, 0x49, 0xE2, 0x20, 0x2E, 0x00, 0x03, 0x02, 0x9E, 0x1C, 0x36
    .byte 0x02, 0x9F, 0x24, 0x37, 0x00, 0x2D, 0x3E, 0xD0, 0xEE, 0xF7, 0x1E, 0xF8, 0x01, 0x1C, 0x00, 0x22
    .byte 0x22, 0x48, 0x23, 0x4B, 0xC0, 0x18, 0x04, 0x78, 0xA2, 0x42, 0x0B, 0xDA, 0x21, 0x4B, 0x1C, 0x1C
    .byte 0x03, 0x1C, 0x3A, 0x31, 0x08, 0x88, 0x20, 0x43, 0x08, 0x80, 0x08, 0x31, 0x01, 0x32, 0x18, 0x78
    .byte 0x82, 0x42, 0xF7, 0xDB, 0x0F, 0xF0, 0x34, 0xFB, 0x04, 0x1C, 0x1B, 0x4D, 0x01, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x0D, 0xF0, 0x6B, 0xFC, 0x02, 0x1C, 0x18, 0x4B, 0x20, 0x1C, 0x29, 0x1C, 0x0F, 0xF0
    .byte 0xFF, 0xFA, 0x00, 0x20, 0x00, 0x90, 0x00, 0x21, 0x00, 0x22, 0x0D, 0xF0, 0x5F, 0xFC, 0x01, 0x1C
    .byte 0x13, 0x4A, 0x68, 0x46, 0x40, 0xF0, 0xA8, 0xFA, 0x12, 0x4C, 0x00, 0x20, 0x0D, 0xF0, 0x16, 0xFC
    .byte 0x01, 0x1C, 0xB9, 0x22, 0x52, 0x00, 0x89, 0x18, 0x20, 0x1C, 0x02, 0x22, 0x40, 0xF0, 0x9E, 0xFA
    .byte 0x01, 0x20, 0x0D, 0xF0, 0x27, 0xFC, 0x51, 0x46, 0x49, 0x44, 0x00, 0x22, 0x02, 0x20, 0x08, 0x80
    .byte 0x4B, 0x46, 0xF0, 0x18, 0x02, 0x80, 0xF8, 0x18, 0x02, 0x80, 0xF7, 0xE1, 0x20, 0x2E, 0x00, 0x03
    .byte 0x14, 0x08, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x38, 0x00, 0x06, 0x80, 0x02, 0x00, 0x80
    .byte 0x40, 0x01, 0x00, 0x01, 0x90, 0x4C, 0x06, 0x08, 0x02, 0x98, 0x24, 0x30, 0x4C, 0x46, 0x01, 0x19
    .byte 0x08, 0x88, 0x01, 0x30, 0x00, 0x23, 0x08, 0x80, 0x00, 0x04, 0x00, 0x14, 0x01, 0x28, 0x00, 0xDC
    .byte 0xDC, 0xE1, 0x0B, 0x80, 0x02, 0x98, 0x1C, 0x30, 0x02, 0x19, 0x11, 0x88, 0x00, 0x27, 0xD0, 0x5F
    .byte 0x07, 0x28, 0x00, 0xDD, 0x35, 0xE1, 0x48, 0x1C, 0x10, 0x80, 0x00, 0x2D, 0x00, 0xD1, 0xCD, 0xE1
    .byte 0x00, 0x20, 0x16, 0x5E, 0x01, 0x93, 0x01, 0xAC, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0D, 0xF0
    .byte 0x0D, 0xFC, 0x01, 0x1C, 0x0E, 0x4A, 0x20, 0x1C, 0x40, 0xF0, 0x56, 0xFA, 0x0D, 0x48, 0x0E, 0x49
    .byte 0x40, 0x18, 0x00, 0x88, 0x01, 0x0A, 0x0F, 0x20, 0x01, 0x40, 0x01, 0x22, 0x91, 0x46, 0x03, 0x29
    .byte 0x01, 0xDD, 0x02, 0x23, 0x99, 0x46, 0x02, 0x24, 0xA0, 0x46, 0x03, 0x29, 0x01, 0xDD, 0x01, 0x27
    .byte 0xB8, 0x46, 0x00, 0x24, 0xF5, 0x00, 0x4F, 0x1C, 0x70, 0x42, 0x82, 0x46, 0x14, 0xE0, 0x00, 0x00
    .byte 0x40, 0x01, 0x00, 0x01, 0x20, 0x2E, 0x00, 0x03, 0x0A, 0x08, 0x00, 0x00, 0xA9, 0x19, 0x00, 0x29
    .byte 0x00, 0xDA, 0x07, 0x31, 0xC9, 0x10, 0x12, 0x20, 0x40, 0x1A, 0x41, 0x46, 0x61, 0x43, 0x49, 0x44
    .byte 0x22, 0x1C, 0x01, 0xF0, 0x85, 0xF8, 0x01, 0x34, 0x38, 0x1C, 0x70, 0x43, 0x00, 0x28, 0x00, 0xDA
    .byte 0x07, 0x30, 0xC0, 0x10, 0x84, 0x42, 0xE9, 0xDB, 0xA9, 0x19, 0x00, 0x29, 0x00, 0xDA, 0x07, 0x31
    .byte 0xC9, 0x10, 0x12, 0x20, 0x40, 0x1A, 0x00, 0x22, 0x07, 0x2E, 0x00, 0xDD, 0x01, 0x22, 0x31, 0x1C
    .byte 0x01, 0xF0, 0x9E, 0xF9, 0xD0, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0D, 0xF0, 0xBE, 0xFB
    .byte 0x03, 0x90, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0D, 0xF0, 0xB8, 0xFB, 0x81, 0x46, 0x00, 0x20
    .byte 0x00, 0x24, 0x85, 0x1C, 0x01, 0x30, 0x84, 0x46, 0x2B, 0x1C, 0x98, 0x01, 0x03, 0x99, 0x42, 0x18
    .byte 0x58, 0x01, 0x40, 0x44, 0x40, 0x00, 0x4F, 0x46, 0xC1, 0x19, 0x47, 0x46, 0xE0, 0x19, 0x00, 0x28
    .byte 0x07, 0xDB, 0x00, 0x2D, 0x05, 0xDB, 0x1D, 0x28, 0x03, 0xDC, 0x13, 0x2B, 0x01, 0xDC, 0x10, 0x88
    .byte 0x08, 0x80, 0x02, 0x32, 0x02, 0x31, 0x01, 0x34, 0x04, 0x2C, 0xEE, 0xDB, 0x60, 0x46, 0x0D, 0x28
    .byte 0xDE, 0xDB, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0D, 0xF0, 0x90, 0xFB, 0x80, 0x46, 0x00, 0x20
    .byte 0x00, 0x21, 0x00, 0x22, 0x0D, 0xF0, 0x8A, 0xFB, 0x81, 0x46, 0x00, 0x20, 0x00, 0x23, 0x51, 0x46
    .byte 0x45, 0x18, 0x47, 0x1C, 0x2C, 0x1C, 0x61, 0x01, 0x04, 0x31, 0x40, 0x01, 0x02, 0x1D, 0x49, 0x00
    .byte 0x49, 0x44, 0x18, 0x1D, 0x00, 0x28, 0x09, 0xDB, 0x00, 0x2D, 0x07, 0xDB, 0x1D, 0x28, 0x05, 0xDC
    .byte 0x13, 0x2C, 0x03, 0xDC, 0x50, 0x00, 0x40, 0x44, 0x00, 0x88, 0x08, 0x80, 0x02, 0x31, 0x01, 0x32
    .byte 0x01, 0x33, 0x0D, 0x2B, 0xED, 0xDB, 0x38, 0x1C, 0x04, 0x28, 0xDF, 0xDB, 0x01, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x0D, 0xF0, 0x63, 0xFB, 0x81, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0D, 0xF0
    .byte 0x5D, 0xFB, 0x80, 0x46, 0x00, 0x20, 0x01, 0x1C, 0x0C, 0x31, 0x01, 0x30, 0x82, 0x46, 0x8C, 0x19
    .byte 0x60, 0x01, 0x49, 0x01, 0x16, 0x31, 0x16, 0x30, 0x30, 0x18, 0x32, 0x1C, 0x16, 0x32, 0x08, 0x25
    .byte 0x40, 0x00, 0x47, 0x46, 0xC3, 0x19, 0x49, 0x00, 0x49, 0x44, 0x00, 0x2A, 0x07, 0xDB, 0x00, 0x2C
    .byte 0x05, 0xDB, 0x1D, 0x2A, 0x03, 0xDC, 0x13, 0x2C, 0x01, 0xDC, 0x08, 0x88, 0x18, 0x80, 0x02, 0x31
    .byte 0x02, 0x33, 0x01, 0x32, 0x01, 0x3D, 0x00, 0x2D, 0xEF, 0xDA, 0x50, 0x46, 0x09, 0x28, 0xDA, 0xDB
    .byte 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0D, 0xF0, 0x31, 0xFB, 0x80, 0x46, 0x00, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x0D, 0xF0, 0x2B, 0xFB, 0x07, 0x1C, 0x00, 0x20, 0x00, 0x21, 0x04, 0x1C, 0x10, 0x34
    .byte 0x46, 0x1C, 0x23, 0x1C, 0x5D, 0x01, 0x4A, 0x1C, 0x00, 0x2A, 0x0B, 0xDB, 0x00, 0x2C, 0x09, 0xDB
    .byte 0x1D, 0x2A, 0x07, 0xDC, 0x13, 0x2B, 0x05, 0xDC, 0xA8, 0x18, 0x40, 0x00, 0xC1, 0x19, 0x40, 0x44
    .byte 0x00, 0x88, 0x08, 0x80, 0x11, 0x1C, 0x05, 0x29, 0xED, 0xDB, 0x30, 0x1C, 0x03, 0x28, 0xE4, 0xDB
    .byte 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0D, 0xF0, 0x09, 0xFB, 0x07, 0x1C, 0x00, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x0D, 0xF0, 0x03, 0xFB, 0x06, 0x1C, 0x00, 0x20, 0x00, 0x24, 0x43, 0x1C, 0x1D, 0x1C
    .byte 0x98, 0x01, 0xC2, 0x19, 0x81, 0x19, 0x00, 0x2C, 0x07, 0xDB, 0x00, 0x2B, 0x05, 0xDB, 0x1D, 0x2C
    .byte 0x03, 0xDC, 0x13, 0x2D, 0x01, 0xDC, 0x10, 0x88, 0x08, 0x80, 0x02, 0x32, 0x02, 0x31, 0x01, 0x34
    .byte 0x03, 0x2C, 0xF0, 0xDB, 0x18, 0x1C, 0x01, 0x28, 0xE7, 0xDB, 0x01, 0x20, 0x02, 0x99, 0x08, 0x61
    .byte 0x9C, 0xE0, 0x51, 0x46, 0x49, 0x44, 0x03, 0x20, 0x08, 0x80, 0x13, 0x80, 0x96, 0xE0, 0x02, 0x9A
    .byte 0x2C, 0x32, 0x04, 0x92, 0x00, 0x2D, 0x00, 0xD1, 0x84, 0xE0, 0x00, 0x20, 0x01, 0x90, 0x01, 0xAC
    .byte 0x00, 0x21, 0x00, 0x22, 0x0D, 0xF0, 0xD2, 0xFA, 0x01, 0x1C, 0x48, 0x4A, 0x20, 0x1C, 0x40, 0xF0
    .byte 0x1B, 0xF9, 0x01, 0x20, 0xFE, 0xF7, 0x2A, 0xFF, 0xFE, 0xF7, 0x74, 0xFF, 0xFE, 0xF7, 0xBC, 0xFF
    .byte 0x43, 0x48, 0x44, 0x4B, 0xC0, 0x18, 0x00, 0x88, 0x02, 0x0A, 0x0F, 0x20, 0x02, 0x40, 0x01, 0x21
    .byte 0x03, 0x2A, 0x00, 0xDD, 0x02, 0x21, 0x02, 0x27, 0x03, 0x2A, 0x00, 0xDD, 0x01, 0x27, 0x00, 0x25
    .byte 0x56, 0x1C, 0xB5, 0x42, 0x09, 0xDA, 0x0C, 0x1C, 0x09, 0x20, 0x21, 0x1C, 0x2A, 0x1C, 0x00, 0xF0
    .byte 0x57, 0xFF, 0xE4, 0x19, 0x01, 0x35, 0xB5, 0x42, 0xF6, 0xDB, 0x09, 0x20, 0x08, 0x21, 0x01, 0x22
    .byte 0x01, 0xF0, 0x7E, 0xF8, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0D, 0xF0, 0x9F, 0xFA, 0x80, 0x46
    .byte 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0D, 0xF0, 0x99, 0xFA, 0x07, 0x1C, 0x00, 0x20, 0x00, 0x21
    .byte 0x04, 0x1C, 0x10, 0x34, 0x46, 0x1C, 0x23, 0x1C, 0x5D, 0x01, 0x4A, 0x1C, 0x00, 0x2A, 0x0B, 0xDB
    .byte 0x00, 0x2C, 0x09, 0xDB, 0x1D, 0x2A, 0x07, 0xDC, 0x13, 0x2B, 0x05, 0xDC, 0xA8, 0x18, 0x40, 0x00
    .byte 0xC1, 0x19, 0x40, 0x44, 0x00, 0x88, 0x08, 0x80, 0x11, 0x1C, 0x05, 0x29, 0xED, 0xDB, 0x30, 0x1C
    .byte 0x03, 0x28, 0xE4, 0xDB, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0D, 0xF0, 0x77, 0xFA, 0x07, 0x1C
    .byte 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0D, 0xF0, 0x71, 0xFA, 0x06, 0x1C, 0x00, 0x20, 0x00, 0x24
    .byte 0x43, 0x1C, 0x1D, 0x1C, 0x98, 0x01, 0xC2, 0x19, 0x81, 0x19, 0x00, 0x2C, 0x07, 0xDB, 0x00, 0x2B
    .byte 0x05, 0xDB, 0x1D, 0x2C, 0x03, 0xDC, 0x13, 0x2D, 0x01, 0xDC, 0x10, 0x88, 0x08, 0x80, 0x02, 0x32
    .byte 0x02, 0x31, 0x01, 0x34, 0x03, 0x2C, 0xF0, 0xDB, 0x18, 0x1C, 0x01, 0x28, 0xE7, 0xDB, 0x01, 0x20
    .byte 0x02, 0x9C, 0x20, 0x61, 0x04, 0x98, 0x48, 0x44, 0x00, 0x27, 0xC1, 0x5F, 0x87, 0x20, 0x80, 0x00
    .byte 0x81, 0x42, 0x03, 0xDD, 0x51, 0x46, 0x49, 0x44, 0x04, 0x20, 0x08, 0x80
    _08021220:
    add sp, #0x014
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x40, 0x01, 0x00, 0x01, 0x20, 0x2E, 0x00, 0x03, 0x0A, 0x08, 0x00, 0x00
    thumb_func_start sub_802123C
    sub_802123C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x038
    ldr r0, _0802126C @ =0x03002E20
    adds r0, #0x24
    mov r10, r0
    bl sub_800EDDC
    mov r9, r0
    movs r0, #0x00
    mov r1, r9
    str r0, [r1, #0x10]
    ldr r0, [r1, #0x04]
    cmp r0, #0x0C
    bls _08021262
    b _080219F2
    _08021262:
    lsls r0, r0, #0x02
    ldr r1, _08021270 @ =0x08021274
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    _0802126C: .4byte 0x03002E20
    _08021270: .4byte 0x08021274
    .byte 0xA8, 0x12, 0x02, 0x08, 0x38, 0x13, 0x02, 0x08, 0x60, 0x13, 0x02, 0x08, 0xDA, 0x13, 0x02, 0x08
    .byte 0xFC, 0x13, 0x02, 0x08, 0x8C, 0x14, 0x02, 0x08, 0x08, 0x15, 0x02, 0x08, 0x28, 0x15, 0x02, 0x08
    .byte 0x56, 0x17, 0x02, 0x08, 0x28, 0x16, 0x02, 0x08, 0xA4, 0x17, 0x02, 0x08, 0x7A, 0x19, 0x02, 0x08
    .byte 0xF2, 0x19, 0x02, 0x08, 0x00, 0x25, 0x0D, 0xE0, 0xA9, 0x00, 0x20, 0x48, 0x50, 0x44, 0x40, 0x18
    .byte 0x00, 0x68, 0x80, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x02, 0xD0, 0x28, 0x1C, 0xFF, 0xF7
    .byte 0xFD, 0xFC, 0x01, 0x35, 0x1A, 0x48, 0x50, 0x44, 0x00, 0x78, 0x85, 0x42, 0xEC, 0xDB, 0x01, 0x24
    .byte 0x01, 0x21, 0x17, 0x48, 0x50, 0x44, 0x00, 0x78, 0x00, 0x28, 0x0D, 0xD0, 0x20, 0x23, 0x13, 0x4A
    .byte 0x52, 0x44, 0x05, 0x1C, 0x10, 0x68, 0x80, 0x6C, 0x18, 0x40, 0x00, 0x28, 0x00, 0xD1, 0x00, 0x24
    .byte 0x04, 0x32, 0x01, 0x3D, 0x00, 0x2D, 0xF5, 0xD1, 0x0D, 0x48, 0x50, 0x44, 0x00, 0x78, 0x00, 0x28
    .byte 0x0B, 0xD0, 0x4A, 0x46, 0x14, 0x32, 0x05, 0x1C, 0x00, 0x23, 0xD0, 0x5E, 0x04, 0x28, 0x00, 0xD0
    .byte 0x00, 0x21, 0x02, 0x32, 0x01, 0x3D, 0x00, 0x2D, 0xF6, 0xD1, 0x01, 0x2C, 0x00, 0xD0, 0x66, 0xE3
    .byte 0x01, 0x29, 0x00, 0xD0, 0x63, 0xE3, 0x4E, 0x46, 0x71, 0x60, 0x60, 0xE3, 0xF4, 0x07, 0x00, 0x00
    .byte 0xD7, 0x07, 0x00, 0x00, 0x08, 0x48, 0x50, 0x44, 0x00, 0x78, 0x00, 0x28, 0x03, 0xD0, 0x05, 0x1C
    .byte 0x01, 0x3D, 0x00, 0x2D, 0xFC, 0xD1, 0x11, 0x20, 0x3E, 0xF0, 0xE8, 0xFD, 0x00, 0x20, 0x49, 0x46
    .byte 0x88, 0x60, 0x02, 0x20, 0x4A, 0xE3, 0x00, 0x00, 0xD7, 0x07, 0x00, 0x00, 0x00, 0x20, 0x00, 0x90
    .byte 0x00, 0x21, 0x00, 0x22, 0x0D, 0xF0, 0xA2, 0xF9, 0x01, 0x1C, 0x12, 0x4A, 0x68, 0x46, 0x3F, 0xF0
    .byte 0xEB, 0xFF, 0x00, 0x25, 0xFE, 0x20, 0xC0, 0x00, 0x50, 0x44, 0x00, 0x78, 0x85, 0x42, 0x28, 0xDA
    .byte 0x4E, 0x46, 0x34, 0x36, 0x29, 0x06, 0x09, 0x0E, 0x50, 0x46, 0x29, 0xF0, 0xA1, 0xFD, 0x04, 0x1C
    .byte 0x35, 0x80, 0x4C, 0x30, 0x01, 0x78, 0x07, 0x20, 0x08, 0x40, 0xED, 0xF7, 0x07, 0xFD, 0x70, 0x80
    .byte 0xA0, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x06, 0xD0, 0x20, 0x1C, 0x1C, 0xF0, 0x88, 0xFB
    .byte 0x06, 0xE0, 0x00, 0x00, 0x40, 0x01, 0x00, 0x01, 0x20, 0x1C, 0x51, 0x46, 0x1C, 0xF0, 0xFA, 0xF9
    .byte 0xB0, 0x80, 0x10, 0x36, 0x01, 0x35, 0xFE, 0x20, 0xC0, 0x00, 0x50, 0x44, 0x00, 0x78, 0x85, 0x42
    .byte 0xD8, 0xDB, 0x03, 0x20, 0xCC, 0xE2, 0x00, 0x20, 0x01, 0x90, 0x01, 0xAC, 0x01, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x0D, 0xF0, 0x63, 0xF9, 0x01, 0x1C, 0x02, 0x4A, 0x20, 0x1C, 0x3F, 0xF0, 0xAC, 0xFF
    .byte 0x04, 0x20, 0xAB, 0xE1, 0x40, 0x01, 0x00, 0x01, 0xFF, 0xF7, 0xB8, 0xF9, 0x00, 0x25, 0xFE, 0x20
    .byte 0xC0, 0x00, 0x50, 0x44, 0x1D, 0x4E, 0x56, 0x44, 0x00, 0x78, 0x85, 0x42, 0x14, 0xDA, 0x4C, 0x46
    .byte 0x34, 0x34, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0D, 0xF0, 0x48, 0xF9, 0x03, 0x1C, 0x28, 0x1C
    .byte 0x21, 0x1C, 0x00, 0x22, 0xFF, 0xF7, 0x98, 0xFA, 0x10, 0x34, 0x01, 0x35, 0xFE, 0x20, 0xC0, 0x00
    .byte 0x50, 0x44, 0x00, 0x78, 0x85, 0x42, 0xEC, 0xDB, 0x0F, 0x20, 0x30, 0x60, 0xED, 0xF7, 0xCC, 0xFC
    .byte 0x03, 0x1C, 0x00, 0x22, 0x0E, 0x48, 0x0F, 0x4E, 0x80, 0x19, 0x01, 0x78, 0x8A, 0x42, 0x0C, 0xDA
    .byte 0x20, 0x25, 0x04, 0x1C, 0x00, 0x21, 0x18, 0x1C, 0x3E, 0x30, 0x05, 0x80, 0x41, 0x80, 0x03, 0x31
    .byte 0x10, 0x30, 0x01, 0x32, 0x23, 0x78, 0x9A, 0x42, 0xF7, 0xDB, 0x01, 0x20, 0x4E, 0x46, 0x30, 0x61
    .byte 0x00, 0x20, 0xB0, 0x60, 0x05, 0x20, 0x70, 0x60, 0xB9, 0xE2, 0x00, 0x00, 0xE4, 0x0B, 0x00, 0x00
    .byte 0x20, 0x2E, 0x00, 0x03, 0x14, 0x08, 0x00, 0x00, 0xED, 0xF7, 0xA6, 0xFC, 0x01, 0x1C, 0x00, 0x22
    .byte 0x06, 0x48, 0x07, 0x4B, 0xC0, 0x18, 0x06, 0x78, 0xB2, 0x42, 0x15, 0xDA, 0x03, 0x1C, 0x3E, 0x31
    .byte 0x48, 0x88, 0x00, 0x28, 0x06, 0xD0, 0x01, 0x38, 0x48, 0x80, 0x08, 0xE0, 0x20, 0x2E, 0x00, 0x03
    .byte 0x14, 0x08, 0x00, 0x00, 0x08, 0x88, 0x00, 0x28, 0x01, 0xD0, 0x01, 0x38, 0x08, 0x80, 0x10, 0x31
    .byte 0x01, 0x32, 0x18, 0x78, 0x82, 0x42, 0xEB, 0xDB, 0xFF, 0xF7, 0xEA, 0xF8, 0x01, 0x20, 0x49, 0x46
    .byte 0x08, 0x61, 0x88, 0x68, 0x01, 0x30, 0x88, 0x60, 0x3C, 0x28, 0x03, 0xDD, 0x00, 0x20, 0x88, 0x60
    .byte 0x06, 0x20, 0x48, 0x60, 0x09, 0x21, 0x06, 0x48, 0x00, 0x88, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD1
    .byte 0x7D, 0xE2, 0x00, 0x20, 0x4A, 0x46, 0x90, 0x60, 0x06, 0x20, 0x50, 0x60, 0x77, 0xE2, 0x00, 0x00
    .byte 0xA0, 0x4E, 0x00, 0x03, 0x00, 0x20, 0x02, 0x90, 0x02, 0xAC, 0x00, 0x21, 0x03, 0x22, 0x0D, 0xF0
    .byte 0xCD, 0xF8, 0x01, 0x1C, 0x02, 0x4A, 0x20, 0x1C, 0x3F, 0xF0, 0x16, 0xFF, 0x07, 0x20, 0x15, 0xE1
    .byte 0x10, 0x01, 0x00, 0x01, 0x00, 0x25, 0xFE, 0x20, 0xC0, 0x00, 0x50, 0x44, 0x38, 0x4E, 0x56, 0x44
    .byte 0x00, 0x78, 0x85, 0x42, 0x14, 0xDA, 0x4C, 0x46, 0x34, 0x34, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x0D, 0xF0, 0xB4, 0xF8, 0x03, 0x1C, 0x28, 0x1C, 0x21, 0x1C, 0x00, 0x22, 0xFF, 0xF7, 0x04, 0xFA
    .byte 0x10, 0x34, 0x01, 0x35, 0xFE, 0x20, 0xC0, 0x00, 0x50, 0x44, 0x00, 0x78, 0x85, 0x42, 0xEC, 0xDB
    .byte 0x01, 0x24, 0x48, 0x46, 0x04, 0x61, 0x2B, 0x49, 0x8D, 0x68, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x0D, 0xF0, 0x9C, 0xF8, 0x01, 0x1C, 0x28, 0x1C, 0x3F, 0xF0, 0xF2, 0xFE, 0x26, 0x4D, 0x00, 0x20
    .byte 0x00, 0x21, 0x14, 0x22, 0x0D, 0xF0, 0x92, 0xF8, 0x01, 0x1C, 0x28, 0x1C, 0x3F, 0xF0, 0xE8, 0xFE
    .byte 0x30, 0x88, 0x40, 0x08, 0x84, 0x43, 0x00, 0x2C, 0x33, 0xD1, 0x1E, 0x4A, 0x50, 0x78, 0x40, 0x00
    .byte 0x13, 0x21, 0x09, 0x1A, 0x8A, 0x46, 0x00, 0x21, 0x1C, 0x4B, 0x98, 0x46, 0x4F, 0x1C, 0x0D, 0x1C
    .byte 0x16, 0x35, 0x54, 0x46, 0x02, 0x34, 0x01, 0x26, 0x01, 0x20, 0x29, 0x1C, 0x22, 0x1C, 0x0D, 0xF0
    .byte 0x75, 0xF8, 0x01, 0x88, 0x42, 0x46, 0x11, 0x40, 0x01, 0x80, 0x01, 0x20, 0x29, 0x1C, 0x22, 0x1C
    .byte 0x0D, 0xF0, 0x6C, 0xF8, 0x01, 0x88, 0x80, 0x23, 0xDB, 0x01, 0x1A, 0x1C, 0x11, 0x43, 0x01, 0x80
    .byte 0x01, 0x34, 0x01, 0x3E, 0x00, 0x2E, 0xE7, 0xDA, 0x39, 0x1C, 0x06, 0x29, 0xDE, 0xDD, 0x0C, 0x4C
    .byte 0x00, 0x20, 0x0D, 0xF0, 0x1B, 0xF8, 0x01, 0x1C, 0x80, 0x31, 0x20, 0x1C, 0x08, 0x22, 0x3F, 0xF0
    .byte 0xA3, 0xFE, 0x00, 0x20, 0x4E, 0x46, 0xB0, 0x60, 0x09, 0x20, 0x70, 0x60, 0xEF, 0xE1, 0x00, 0x00
    .byte 0xEE, 0x0B, 0x00, 0x00, 0xFC, 0xB6, 0x0D, 0x08, 0x7C, 0xBD, 0x09, 0x08, 0xFF, 0x0F, 0x00, 0x00
    .byte 0x7C, 0xAD, 0x0A, 0x08, 0x24, 0x48, 0x41, 0x78, 0x4B, 0x46, 0x9A, 0x68, 0x8A, 0x42, 0x00, 0xDB
    .byte 0x80, 0xE0, 0x49, 0x00, 0x13, 0x20, 0x40, 0x1A, 0x01, 0x32, 0x9A, 0x60, 0x1E, 0x4E, 0x71, 0x78
    .byte 0x40, 0x18, 0x82, 0x46, 0x01, 0x31, 0x03, 0x91, 0x17, 0x1C, 0xB8, 0x46, 0x01, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x0D, 0xF0, 0x2B, 0xF8, 0x04, 0x90, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0D, 0xF0
    .byte 0x25, 0xF8, 0x05, 0x90, 0x00, 0x2F, 0x04, 0xDA, 0x00, 0x20, 0x80, 0x46, 0x00, 0x2F, 0x00, 0xDA
    .byte 0x00, 0x27, 0x41, 0x46, 0x05, 0x29, 0x01, 0xDD, 0x05, 0x22, 0x90, 0x46, 0x03, 0x9B, 0x9F, 0x42
    .byte 0x00, 0xDD, 0x1F, 0x1C, 0x00, 0x25, 0x78, 0x00, 0x85, 0x42, 0x4F, 0xDA, 0x46, 0x46, 0x76, 0x00
    .byte 0x08, 0x96, 0x07, 0x90, 0x00, 0x24, 0x68, 0x1C, 0x09, 0x90, 0x08, 0x99, 0x8C, 0x42, 0x41, 0xDA
    .byte 0x0C, 0x91, 0x03, 0x9A, 0x52, 0x44, 0x06, 0x92, 0x07, 0x9B, 0xEB, 0x1A, 0x9C, 0x46, 0x44, 0x45
    .byte 0x04, 0xDA, 0x23, 0x1C, 0x14, 0x33, 0x05, 0xE0, 0xFC, 0xB6, 0x0D, 0x08, 0x0C, 0x9E, 0xA0, 0x1B
    .byte 0x03, 0x1C, 0x1E, 0x33, 0xBD, 0x42, 0x04, 0xDA, 0x51, 0x46, 0x03, 0x9A, 0x88, 0x1A, 0x41, 0x19
    .byte 0x01, 0xE0, 0x06, 0x99, 0x61, 0x44, 0x00, 0x2B, 0x20, 0xDB, 0x00, 0x29, 0x1E, 0xDB, 0x1D, 0x2B
    .byte 0x1C, 0xDC, 0x13, 0x29, 0x1A, 0xDC, 0x19, 0x26, 0x42, 0x46, 0xB0, 0x1A, 0x02, 0x19, 0x56, 0x46
    .byte 0xF0, 0x1B, 0x40, 0x19, 0x00, 0x2A, 0x11, 0xDB, 0x00, 0x28, 0x0F, 0xDB, 0x1D, 0x2A, 0x0D, 0xDC
    .byte 0x13, 0x28, 0x0B, 0xDC, 0x40, 0x01, 0x80, 0x18, 0x40, 0x00, 0x05, 0x9A, 0x80, 0x18, 0x49, 0x01
    .byte 0xC9, 0x18, 0x49, 0x00, 0x04, 0x9B, 0xC9, 0x18, 0x09, 0x88, 0x01, 0x80, 0x01, 0x34, 0x0C, 0x9E
    .byte 0xB4, 0x42, 0xC4, 0xDB, 0x09, 0x9D, 0x07, 0x98, 0x85, 0x42, 0xB3, 0xDB, 0x01, 0x20, 0x49, 0x46
    .byte 0x08, 0x61, 0x04, 0xE0, 0x08, 0x20, 0x4A, 0x46, 0x50, 0x60, 0x00, 0x20, 0x90, 0x60, 0x09, 0x20
    .byte 0x0B, 0xF0, 0xD2, 0xFE, 0x00, 0x28, 0x00, 0xD1, 0x51, 0xE1, 0x08, 0x20, 0x4B, 0x46, 0x58, 0x60
    .byte 0x4D, 0xE1, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0C, 0xF0, 0xA8, 0xFF, 0x06, 0x1C, 0x00, 0x20
    .byte 0x00, 0x21, 0x00, 0x22, 0x0C, 0xF0, 0xA2, 0xFF, 0x05, 0x1C, 0x08, 0x21, 0x4C, 0x1C, 0x89, 0x01
    .byte 0x88, 0x19, 0x02, 0x1C, 0x28, 0x32, 0x49, 0x19, 0x28, 0x31, 0x09, 0x23, 0x10, 0x88, 0x08, 0x80
    .byte 0x02, 0x32, 0x02, 0x31, 0x01, 0x3B, 0x00, 0x2B, 0xF8, 0xDA, 0x21, 0x1C, 0x13, 0x29, 0xED, 0xDD
    .byte 0x01, 0x20, 0x4E, 0x46, 0x30, 0x61, 0x0A, 0x20, 0x70, 0x60, 0x00, 0x20, 0xB0, 0x60, 0x26, 0xE1
    .byte 0x48, 0x46, 0x00, 0x68, 0x80, 0x46, 0x6D, 0x49, 0x48, 0x78, 0x40, 0x00, 0x13, 0x21, 0x0F, 0x1A
    .byte 0x43, 0x46, 0x5A, 0x00, 0xBA, 0x18, 0x00, 0x20, 0x15, 0x21, 0x0C, 0xF0, 0x77, 0xFF, 0x04, 0x1C
    .byte 0x00, 0x20, 0x1B, 0x21, 0x1E, 0x22, 0x0C, 0xF0, 0x71, 0xFF, 0x00, 0x88, 0x20, 0x80, 0x4E, 0x46
    .byte 0x32, 0x68, 0x52, 0x00, 0x01, 0x32, 0xBA, 0x18, 0x00, 0x20, 0x15, 0x21, 0x0C, 0xF0, 0x66, 0xFF
    .byte 0x04, 0x1C, 0x00, 0x20, 0x1B, 0x21, 0x1F, 0x22, 0x0C, 0xF0, 0x60, 0xFF, 0x00, 0x88, 0x20, 0x80
    .byte 0x5A, 0x49, 0x48, 0x68, 0x31, 0x68, 0x40, 0x18, 0x00, 0x78, 0x03, 0x28, 0x07, 0xD1, 0x58, 0x48
    .byte 0x50, 0x44, 0x01, 0x88, 0x49, 0x08, 0x01, 0x20, 0x88, 0x43, 0x00, 0x28, 0x27, 0xD0, 0x00, 0x21
    .byte 0x00, 0x24, 0x4E, 0x1C, 0x0D, 0x1C, 0x16, 0x35, 0x4B, 0x46, 0x1A, 0x68, 0x52, 0x00, 0xBA, 0x18
    .byte 0x12, 0x19, 0x00, 0x20, 0x29, 0x1C, 0x0C, 0xF0, 0x41, 0xFF, 0x01, 0x88, 0x4D, 0x4B, 0x1A, 0x1C
    .byte 0x11, 0x40, 0x01, 0x80, 0x48, 0x46, 0x02, 0x68, 0x52, 0x00, 0xBA, 0x18, 0x12, 0x19, 0x00, 0x20
    .byte 0x29, 0x1C, 0x0C, 0xF0, 0x33, 0xFF, 0x01, 0x88, 0xE0, 0x23, 0x1B, 0x02, 0x1A, 0x1C, 0x11, 0x43
    .byte 0x01, 0x80, 0x01, 0x34, 0x01, 0x2C, 0xDF, 0xDD, 0x31, 0x1C, 0x06, 0x29, 0xD8, 0xDD, 0x0B, 0xF0
    .byte 0x1D, 0xFE, 0x40, 0x21, 0x01, 0x40, 0x00, 0x29, 0x03, 0xD0, 0x4E, 0x46, 0x30, 0x68, 0x01, 0x38
    .byte 0x30, 0x60, 0x0B, 0xF0, 0x13, 0xFE, 0x80, 0x21, 0x01, 0x40, 0x00, 0x29, 0x03, 0xD0, 0x49, 0x46
    .byte 0x08, 0x68, 0x01, 0x30, 0x08, 0x60, 0x4A, 0x46, 0x10, 0x68, 0x00, 0x28, 0x03, 0xDA, 0x33, 0x4B
    .byte 0x58, 0x78, 0x01, 0x38, 0x10, 0x60, 0x31, 0x4E, 0x70, 0x78, 0x01, 0x38, 0x4A, 0x46, 0x11, 0x68
    .byte 0x81, 0x42, 0x01, 0xDD, 0x00, 0x20, 0x10, 0x60, 0x4B, 0x46, 0x18, 0x68, 0x80, 0x45, 0x39, 0xD0
    .byte 0x46, 0x46, 0x74, 0x00, 0x3A, 0x19, 0x00, 0x20, 0x15, 0x21, 0x0C, 0xF0, 0xF7, 0xFE, 0x00, 0x25
    .byte 0x05, 0x80, 0x62, 0x1C, 0xBA, 0x18, 0x00, 0x20, 0x15, 0x21, 0x0C, 0xF0, 0xEF, 0xFE, 0x05, 0x80
    .byte 0x22, 0x49, 0x48, 0x68, 0x40, 0x44, 0x00, 0x78, 0xA0, 0x46, 0x03, 0x28, 0x07, 0xD1, 0x20, 0x48
    .byte 0x50, 0x44, 0x01, 0x88, 0x49, 0x08, 0x01, 0x20, 0x88, 0x43, 0x00, 0x28, 0x17, 0xD0, 0x00, 0x20
    .byte 0x00, 0x25, 0x06, 0x1C, 0x16, 0x36, 0x44, 0x1C, 0x43, 0x46, 0xFA, 0x18, 0x52, 0x19, 0x00, 0x20
    .byte 0x31, 0x1C, 0x0C, 0xF0, 0xD3, 0xFE, 0x01, 0x88, 0xF0, 0x23, 0x1B, 0x02, 0x1A, 0x1C, 0x11, 0x43
    .byte 0x01, 0x80, 0x01, 0x35, 0x01, 0x2D, 0xEF, 0xDD, 0x20, 0x1C, 0x06, 0x28, 0xE8, 0xDD, 0x8D, 0x20
    .byte 0x3E, 0xF0, 0xFC, 0xFA, 0x01, 0x24, 0x4E, 0x46, 0x34, 0x61, 0x09, 0x20, 0x0B, 0xF0, 0xDC, 0xFD
    .byte 0x00, 0x28, 0x5C, 0xD0, 0x09, 0x49, 0x48, 0x68, 0x31, 0x68, 0x40, 0x18, 0x00, 0x78, 0x03, 0x28
    .byte 0x12, 0xD1, 0x07, 0x48, 0x50, 0x44, 0x01, 0x88, 0x49, 0x08, 0x20, 0x1C, 0x88, 0x43, 0x00, 0x28
    .byte 0x0A, 0xD1, 0x91, 0x20, 0x3E, 0xF0, 0xE2, 0xFA, 0x49, 0xE0, 0x00, 0x00, 0xFC, 0xB6, 0x0D, 0x08
    .byte 0xEE, 0x0B, 0x00, 0x00, 0xFF, 0x0F, 0x00, 0x00, 0x8F, 0x20, 0x3E, 0xF0, 0xD7, 0xFA, 0x0B, 0x20
    .byte 0x4A, 0x46, 0x50, 0x60, 0x3B, 0xE0, 0x06, 0x4B, 0x58, 0x68, 0x4E, 0x46, 0x31, 0x68, 0x40, 0x18
    .byte 0x00, 0x78, 0x07, 0x28, 0x30, 0xD8, 0x80, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46
    .byte 0xFC, 0xB6, 0x0D, 0x08, 0x9C, 0x19, 0x02, 0x08, 0xBC, 0x19, 0x02, 0x08, 0xD0, 0x19, 0x02, 0x08
    .byte 0xD4, 0x19, 0x02, 0x08, 0xD8, 0x19, 0x02, 0x08, 0xDC, 0x19, 0x02, 0x08, 0xEC, 0x19, 0x02, 0x08
    .byte 0xEC, 0x19, 0x02, 0x08, 0xEC, 0x19, 0x02, 0x08, 0x01, 0x20, 0xFD, 0x21, 0xC9, 0x00, 0x51, 0x44
    .byte 0x08, 0x70, 0x01, 0x49, 0x0F, 0xE0, 0x00, 0x00, 0x50, 0x5C, 0x00, 0x03, 0x02, 0x21, 0x04, 0xE0
    .byte 0x03, 0x21, 0x02, 0xE0, 0x06, 0x21, 0x00, 0xE0, 0x04, 0x21, 0xFD, 0x20, 0xC0, 0x00, 0x50, 0x44
    .byte 0x01, 0x70, 0x40, 0x49, 0x01, 0x20, 0x08, 0x60, 0x0C, 0x20, 0x49, 0x46, 0x48, 0x60
    _080219F2:
    mov r2, r9
    ldr r0, [r2, #0x10]
    cmp r0, #0x00
    beq _08021A00
    movs r0, #0x01
    bl map_setBufferDirty
    _08021A00:
    mov r3, r9
    ldr r0, [r3, #0x04]
    cmp r0, #0x09
    ble _08021AD6
    ldr r0, _08021AEC @ =0x03002E20
    ldr r0, [r0, #0x10]
    ldr r2, _08021AF0 @ =0x080E645C
    lsls r0, r0, #0x1A
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _08021A18
    adds r0, #0x3F
    _08021A18:
    asrs r1, r0, #0x06
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r1
    ldr r1, _08021AF4 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    subs r0, r0, r1
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r0, r0, #0x01
    mov r9, r0
    movs r6, #0x00
    mov r10, r6
    movs r0, #0x1F
    mov r8, r0
    movs r7, #0x1F
    ldr r1, _08021AF8 @ =0x080AAD3C
    adds r1, #0x40
    str r1, [sp, #0x028]
    _08021A48:
    mov r2, r10
    lsls r2, r2, #0x01
    str r2, [sp, #0x034]
    ldr r3, _08021AF8 @ =0x080AAD3C
    adds r0, r2, r3
    ldrh r4, [r0, #0x00]
    adds r5, r4, #0x0
    ands r5, r7
    lsrs r6, r4, #0x05
    mov r0, r8
    ands r6, r0
    lsrs r4, r4, #0x0A
    ands r4, r0
    ldr r2, [sp, #0x028]
    ldrh r1, [r2, #0x00]
    adds r0, r1, #0x0
    ands r0, r7
    lsrs r2, r1, #0x05
    mov r3, r8
    ands r2, r3
    lsrs r1, r1, #0x0A
    ands r1, r3
    subs r0, r0, r5
    mov r3, r9
    muls r3, r0
    adds r0, r3, #0x0
    asrs r0, r0, #0x0F
    adds r5, r5, r0
    lsls r5, r5, #0x10
    lsrs r5, r5, #0x10
    subs r2, r2, r6
    mov r0, r9
    muls r0, r2
    asrs r0, r0, #0x0F
    adds r6, r6, r0
    lsls r6, r6, #0x10
    lsrs r6, r6, #0x10
    subs r1, r1, r4
    mov r0, r9
    muls r0, r1
    asrs r0, r0, #0x0F
    adds r4, r4, r0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    movs r0, #0x00
    bl pltt_getBuffer
    ldr r1, [sp, #0x034]
    adds r3, r1, r0
    movs r2, #0xE0
    lsls r2, r2, #0x01
    adds r3, r3, r2
    ands r5, r7
    ands r6, r7
    lsls r6, r6, #0x05
    orrs r5, r6
    ands r4, r7
    lsls r4, r4, #0x0A
    orrs r5, r4
    strh r5, [r3, #0x00]
    ldr r3, [sp, #0x028]
    adds r3, #0x02
    str r3, [sp, #0x028]
    movs r6, #0x01
    add r10, r6
    mov r0, r10
    cmp r0, #0x0F
    ble _08021A48
    movs r0, #0x01
    bl pltt_setDirtyFlag
    _08021AD6:
    add sp, #0x038
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00, 0x50, 0x5C, 0x00, 0x03
    _08021AEC: .4byte 0x03002E20
    _08021AF0: .4byte gSinTable
    _08021AF4: .4byte 0x000003FF
    _08021AF8: .4byte 0x080AAD3C
    thumb_func_start sub_8021AFC
    sub_8021AFC:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    ldr r4, _08021B50 @ =0x03002E20
    movs r0, #0x24
    adds r0, r0, r4
    mov r9, r0
    ldr r1, _08021B54 @ =0x00000838
    adds r0, r4, r1
    ldr r0, [r0, #0x00]
    bl sub_803DAC4
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    movs r2, #0x00
    mov r8, r2
    ldr r0, _08021B58 @ =0x00000801
    adds r5, r4, r0
    ldrb r0, [r5, #0x00]
    movs r1, #0x05
    bl sub_8032D80
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r7, r0
    bcc _08021B3E
    ldr r1, _08021B5C @ =0x00000C12
    adds r2, r4, r1
    ldrh r1, [r2, #0x00]
    movs r0, #0x01
    orrs r0, r1
    strh r0, [r2, #0x00]
    _08021B3E:
    ldr r2, _08021B5C @ =0x00000C12
    adds r0, r4, r2
    ldrh r1, [r0, #0x00]
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _08021B60
    movs r0, #0x00
    b _08021BD2
    _08021B50: .4byte 0x03002E20
    _08021B54: .4byte 0x00000838
    _08021B58: .4byte 0x00000801
    _08021B5C: .4byte 0x00000C12
    _08021B60:
    cmp r7, #0x00
    beq _08021B8C
    ldr r0, _08021B80 @ =0x02020400
    adds r0, #0x08
    ldrb r1, [r0, #0x09]
    ldrh r0, [r0, #0x02]
    cmp r0, #0x00
    bne _08021B74
    movs r2, #0x01
    mov r8, r2
    _08021B74:
    ldrb r5, [r5, #0x00]
    cmp r1, r5
    beq _08021B84
    movs r0, #0x01
    mov r8, r0
    b _08021B92
    _08021B80: .4byte 0x02020400
    _08021B84:
    cmp r0, r7
    bls _08021B8C
    movs r1, #0x01
    mov r8, r1
    _08021B8C:
    mov r2, r8
    cmp r2, #0x00
    beq _08021BD0
    _08021B92:
    ldr r5, _08021BE0 @ =0x02024400
    movs r6, #0x00
    strh r7, [r5, #0x0A]
    bl save_getSavePointer_805D9B0
    adds r4, r0, #0x0
    ldr r0, _08021BE4 @ =0x000007DD
    add r0, r9
    ldrb r0, [r0, #0x00]
    bl track_getTrackIndex
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    lsls r1, r0, #0x02
    adds r1, r1, r0
    lsls r1, r1, #0x02
    movs r0, #0xB2
    lsls r0, r0, #0x03
    adds r1, r1, r0
    adds r4, r4, r1
    str r6, [r4, #0x04]
    ldr r2, _08021BE8 @ =0xFFFFC000
    adds r1, r5, r2
    movs r2, #0x80
    lsls r2, r2, #0x04
    adds r0, r5, #0x0
    bl CpuSet
    movs r0, #0x01
    bl sub_801528C
    _08021BD0:
    mov r0, r8
    _08021BD2:
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    _08021BE0: .4byte 0x02024400
    _08021BE4: .4byte 0x000007DD
    _08021BE8: .4byte 0xFFFFC000
    thumb_func_start sub_8021BEC
    sub_8021BEC:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x028
    movs r0, #0x00
    str r0, [sp, #0x000]
    movs r1, #0x00
    str r1, [sp, #0x004]
    ldr r0, _08021C98 @ =0x03000194
    subs r1, #0x01
    str r1, [r0, #0x00]
    ldr r0, _08021C9C @ =0x03000198
    str r1, [r0, #0x00]
    ldr r0, _08021CA0 @ =0x0300019C
    ldr r2, [sp, #0x004]
    str r2, [r0, #0x00]
    ldr r0, _08021CA4 @ =0x030001A0
    str r2, [r0, #0x00]
    ldr r4, _08021CA8 @ =0x03002E20
    ldr r0, _08021CAC @ =0x00000801
    adds r5, r4, r0
    ldrb r0, [r5, #0x00]
    bl track_getCup
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    str r0, [sp, #0x008]
    ldrb r0, [r5, #0x00]
    bl track_getCupIndex
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    str r0, [sp, #0x00C]
    ldr r1, _08021CB0 @ =0x0000059C
    adds r4, r4, r1
    ldr r0, [r4, #0x00]
    ldr r0, [r0, #0x0C]
    bl sub_8032BC8
    str r0, [sp, #0x010]
    ldr r2, [sp, #0x00C]
    lsls r2, r2, #0x05
    mov r8, r2
    ldr r0, [sp, #0x008]
    lsls r7, r0, #0x07
    movs r1, #0x00
    mov r9, r1
    movs r2, #0x50
    str r2, [sp, #0x024]
    movs r0, #0x04
    mov r10, r0
    _08021C56:
    bl sub_800EDEC
    ldr r1, [sp, #0x024]
    adds r4, r0, r1
    ldr r2, [sp, #0x010]
    cmp r2, #0x00
    beq _08021CB4
    bl save_getSavePointer_805D9B0
    adds r0, r7, r0
    add r0, r8
    add r0, r9
    movs r1, #0xB9
    lsls r1, r1, #0x02
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    str r0, [r4, #0x00]
    bl save_getSavePointer_805D9B0
    adds r0, r7, r0
    add r0, r8
    add r0, r9
    movs r2, #0xB9
    lsls r2, r2, #0x02
    adds r0, r0, r2
    ldrh r0, [r0, #0x02]
    strh r0, [r4, #0x04]
    ldr r0, [sp, #0x00C]
    lsls r6, r0, #0x05
    ldr r1, [sp, #0x008]
    lsls r5, r1, #0x07
    b _08021CDC
    .byte 0x00, 0x00
    _08021C98: .4byte 0x03000194
    _08021C9C: .4byte 0x03000198
    _08021CA0: .4byte 0x0300019C
    _08021CA4: .4byte 0x030001A0
    _08021CA8: .4byte 0x03002E20
    _08021CAC: .4byte 0x00000801
    _08021CB0: .4byte 0x0000059C
    _08021CB4:
    bl save_getSavePointer_805D9B0
    adds r0, r7, r0
    add r0, r8
    add r0, r9
    adds r0, #0x64
    ldrb r0, [r0, #0x00]
    str r0, [r4, #0x00]
    bl save_getSavePointer_805D9B0
    adds r0, r7, r0
    add r0, r8
    add r0, r9
    adds r0, #0x64
    ldrh r0, [r0, #0x02]
    strh r0, [r4, #0x04]
    ldr r2, [sp, #0x00C]
    lsls r6, r2, #0x05
    ldr r0, [sp, #0x008]
    lsls r5, r0, #0x07
    _08021CDC:
    movs r0, #0x00
    str r0, [r4, #0x08]
    movs r1, #0x04
    add r9, r1
    ldr r2, [sp, #0x024]
    adds r2, #0x0C
    str r2, [sp, #0x024]
    subs r0, #0x01
    add r10, r0
    mov r1, r10
    cmp r1, #0x00
    bge _08021C56
    bl sub_800EDEC
    adds r7, r0, #0x0
    adds r7, #0x8C
    ldr r2, [sp, #0x010]
    cmp r2, #0x00
    beq _08021D20
    bl save_getSavePointer_805D9B0
    adds r0, r5, r0
    adds r0, r6, r0
    movs r4, #0xBE
    lsls r4, r4, #0x02
    adds r0, r0, r4
    ldrb r0, [r0, #0x00]
    str r0, [r7, #0x00]
    bl save_getSavePointer_805D9B0
    adds r0, r5, r0
    adds r0, r6, r0
    adds r0, r0, r4
    b _08021D38
    _08021D20:
    bl save_getSavePointer_805D9B0
    adds r0, r5, r0
    adds r0, r6, r0
    adds r0, #0x78
    ldrb r0, [r0, #0x00]
    str r0, [r7, #0x00]
    bl save_getSavePointer_805D9B0
    adds r0, r5, r0
    adds r0, r6, r0
    adds r0, #0x78
    _08021D38:
    ldrh r0, [r0, #0x02]
    strh r0, [r7, #0x04]
    movs r0, #0x00
    str r0, [r7, #0x08]
    ldr r5, _08021D80 @ =0x03002E20
    adds r2, r5, #0x0
    adds r2, #0x24
    ldr r1, _08021D84 @ =0x000007FE
    adds r0, r5, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _08021D8C
    ldr r4, _08021D88 @ =0x03000194
    ldr r1, [r4, #0x00]
    movs r0, #0x01
    negs r0, r0
    cmp r1, r0
    bne _08021D64
    b _08021FF0
    _08021D64:
    bl sub_800EDEC
    ldr r2, [r4, #0x00]
    lsls r1, r2, #0x01
    adds r1, r1, r2
    lsls r1, r1, #0x02
    adds r1, r1, r0
    movs r2, #0x01
    str r2, [r1, #0x58]
    str r2, [sp, #0x004]
    adds r0, #0x8C
    str r2, [r0, #0x08]
    b _08021FF0
    .byte 0x00, 0x00
    _08021D80: .4byte 0x03002E20
    _08021D84: .4byte 0x000007FE
    _08021D88: .4byte 0x03000194
    _08021D8C:
    mov r9, r2
    ldr r0, _08021DEC @ =0x00000838
    adds r4, r5, r0
    ldr r0, [r4, #0x00]
    bl sub_803DAC4
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    mov r8, r0
    ldr r7, [r4, #0x00]
    ldr r1, _08021DF0 @ =0x0000080A
    adds r0, r5, r1
    ldrh r0, [r0, #0x00]
    lsrs r6, r0, #0x08
    movs r0, #0x0F
    ands r6, r0
    adds r0, r7, #0x0
    movs r1, #0x00
    bl sub_803DAB8
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    movs r5, #0x00
    cmp r5, r6
    bge _08021DE0
    _08021DBE:
    adds r0, r7, #0x0
    adds r1, r5, #0x0
    bl sub_803DAB8
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r4, r0
    bls _08021DDA
    adds r0, r7, #0x0
    adds r1, r5, #0x0
    bl sub_803DAB8
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    _08021DDA:
    adds r5, #0x01
    cmp r5, r6
    blt _08021DBE
    _08021DE0:
    adds r6, r4, #0x0
    movs r2, #0x00
    mov r10, r2
    movs r5, #0x00
    movs r4, #0x50
    b _08021DFC
    _08021DEC: .4byte 0x00000838
    _08021DF0: .4byte 0x0000080A
    _08021DF4:
    adds r5, r1, #0x2
    adds r4, #0x0C
    movs r0, #0x01
    add r10, r0
    _08021DFC:
    mov r1, r10
    cmp r1, #0x04
    bgt _08021E70
    bl sub_800EDEC
    adds r0, r0, r4
    ldrh r0, [r0, #0x04]
    adds r1, r5, #0x0
    cmp r0, r8
    bls _08021DF4
    bl sub_800EDEC
    adds r1, r0, #0x0
    mov r2, r10
    adds r0, r5, r2
    lsls r0, r0, #0x02
    adds r0, #0x50
    adds r3, r1, r0
    movs r2, #0x04
    cmp r2, r10
    ble _08021E38
    adds r1, #0x74
    _08021E28:
    ldr r0, [r1, #0x00]
    str r0, [r1, #0x0C]
    ldrh r0, [r1, #0x04]
    strh r0, [r1, #0x10]
    subs r1, #0x0C
    subs r2, #0x01
    cmp r2, r10
    bgt _08021E28
    _08021E38:
    ldr r0, _08021E64 @ =0x00000814
    add r0, r9
    ldr r0, [r0, #0x00]
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    str r0, [r3, #0x00]
    mov r0, r8
    strh r0, [r3, #0x04]
    movs r0, #0x01
    str r0, [r3, #0x08]
    ldr r0, _08021E68 @ =0x03000194
    mov r1, r10
    str r1, [r0, #0x00]
    movs r2, #0x01
    str r2, [sp, #0x000]
    cmp r1, #0x00
    bne _08021E78
    ldr r0, _08021E6C @ =0x0300019C
    str r2, [r0, #0x00]
    b _08021E78
    _08021E64: .4byte 0x00000814
    _08021E68: .4byte 0x03000194
    _08021E6C: .4byte 0x0300019C
    _08021E70:
    ldr r1, _08021EAC @ =0x03000194
    movs r0, #0x01
    negs r0, r0
    str r0, [r1, #0x00]
    _08021E78:
    bl sub_800EDEC
    adds r2, r0, #0x0
    adds r2, #0x8C
    ldrh r0, [r2, #0x04]
    cmp r0, r6
    bls _08021EBC
    ldr r0, _08021EB0 @ =0x00000814
    add r0, r9
    ldr r0, [r0, #0x00]
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    str r0, [r2, #0x00]
    strh r6, [r2, #0x04]
    movs r1, #0x01
    str r1, [r2, #0x08]
    ldr r0, _08021EB4 @ =0x03000198
    str r1, [r0, #0x00]
    movs r0, #0x01
    str r0, [sp, #0x000]
    ldr r0, _08021EB8 @ =0x030001A0
    ldr r1, [sp, #0x000]
    str r1, [r0, #0x00]
    b _08021EC4
    _08021EAC: .4byte 0x03000194
    _08021EB0: .4byte 0x00000814
    _08021EB4: .4byte 0x03000198
    _08021EB8: .4byte 0x030001A0
    _08021EBC:
    ldr r1, _08021F50 @ =0x03000198
    movs r0, #0x01
    negs r0, r0
    str r0, [r1, #0x00]
    _08021EC4:
    ldr r2, [sp, #0x000]
    cmp r2, #0x00
    bne _08021ECC
    b _08021FF0
    _08021ECC:
    ldr r4, _08021F54 @ =0x03002E20
    ldr r0, _08021F58 @ =0x00000801
    adds r5, r4, r0
    ldrb r0, [r5, #0x00]
    bl track_getCup
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    str r0, [sp, #0x014]
    ldrb r0, [r5, #0x00]
    bl track_getCupIndex
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    str r0, [sp, #0x018]
    ldr r1, _08021F5C @ =0x0000059C
    adds r4, r4, r1
    ldr r0, [r4, #0x00]
    ldr r0, [r0, #0x0C]
    bl sub_8032BC8
    str r0, [sp, #0x01C]
    ldr r2, [sp, #0x018]
    lsls r2, r2, #0x05
    mov r8, r2
    ldr r0, [sp, #0x014]
    lsls r7, r0, #0x07
    movs r1, #0x00
    mov r9, r1
    movs r2, #0x50
    str r2, [sp, #0x020]
    movs r0, #0x04
    mov r10, r0
    _08021F0E:
    bl sub_800EDEC
    ldr r1, [sp, #0x020]
    adds r4, r0, r1
    ldr r2, [sp, #0x01C]
    cmp r2, #0x00
    beq _08021F60
    bl save_getSavePointer_805D9B0
    adds r0, r7, r0
    add r0, r8
    add r0, r9
    movs r1, #0xB9
    lsls r1, r1, #0x02
    adds r0, r0, r1
    ldr r1, [r4, #0x00]
    strb r1, [r0, #0x00]
    bl save_getSavePointer_805D9B0
    adds r0, r7, r0
    add r0, r8
    add r0, r9
    movs r2, #0xB9
    lsls r2, r2, #0x02
    adds r0, r0, r2
    ldrh r1, [r4, #0x04]
    strh r1, [r0, #0x02]
    ldr r0, [sp, #0x018]
    lsls r6, r0, #0x05
    ldr r1, [sp, #0x014]
    lsls r5, r1, #0x07
    b _08021F88
    .byte 0x00, 0x00
    _08021F50: .4byte 0x03000198
    _08021F54: .4byte 0x03002E20
    _08021F58: .4byte 0x00000801
    _08021F5C: .4byte 0x0000059C
    _08021F60:
    bl save_getSavePointer_805D9B0
    adds r0, r7, r0
    add r0, r8
    add r0, r9
    adds r0, #0x64
    ldr r1, [r4, #0x00]
    strb r1, [r0, #0x00]
    bl save_getSavePointer_805D9B0
    adds r0, r7, r0
    add r0, r8
    add r0, r9
    adds r0, #0x64
    ldrh r1, [r4, #0x04]
    strh r1, [r0, #0x02]
    ldr r2, [sp, #0x018]
    lsls r6, r2, #0x05
    ldr r0, [sp, #0x014]
    lsls r5, r0, #0x07
    _08021F88:
    movs r1, #0x04
    add r9, r1
    ldr r2, [sp, #0x020]
    adds r2, #0x0C
    str r2, [sp, #0x020]
    movs r0, #0x01
    negs r0, r0
    add r10, r0
    mov r1, r10
    cmp r1, #0x00
    bge _08021F0E
    bl sub_800EDEC
    adds r7, r0, #0x0
    adds r7, #0x8C
    ldr r2, [sp, #0x01C]
    cmp r2, #0x00
    beq _08021FCA
    bl save_getSavePointer_805D9B0
    adds r0, r5, r0
    adds r0, r6, r0
    movs r4, #0xBE
    lsls r4, r4, #0x02
    adds r0, r0, r4
    ldr r1, [r7, #0x00]
    strb r1, [r0, #0x00]
    bl save_getSavePointer_805D9B0
    adds r0, r5, r0
    adds r0, r6, r0
    adds r0, r0, r4
    b _08021FE2
    _08021FCA:
    bl save_getSavePointer_805D9B0
    adds r0, r5, r0
    adds r0, r6, r0
    adds r0, #0x78
    ldr r1, [r7, #0x00]
    strb r1, [r0, #0x00]
    bl save_getSavePointer_805D9B0
    adds r0, r5, r0
    adds r0, r6, r0
    adds r0, #0x78
    _08021FE2:
    ldrh r1, [r7, #0x04]
    strh r1, [r0, #0x02]
    movs r0, #0x01
    bl sub_8015268
    movs r0, #0x01
    str r0, [sp, #0x004]
    _08021FF0:
    ldr r0, [sp, #0x004]
    add sp, #0x028
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_8022004
    sub_8022004:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x02C
    mov r10, r0
    str r1, [sp, #0x020]
    adds r7, r2, #0x0
    ldr r0, _0802216C @ =0x03002E20
    ldr r2, _08022170 @ =0x00000838
    adds r1, r0, r2
    ldr r1, [r1, #0x00]
    mov r8, r1
    ldr r1, _08022174 @ =0x0000080A
    adds r4, r0, r1
    ldrh r0, [r4, #0x00]
    lsrs r5, r0, #0x08
    movs r2, #0x0F
    ands r5, r2
    mov r9, r7
    cmp r5, r7
    bgt _0802203A
    mov r9, r5
    movs r0, #0x01
    negs r0, r0
    add r10, r0
    _0802203A:
    bl sub_800EDEC
    adds r0, #0x8C
    str r0, [sp, #0x024]
    movs r0, #0x00
    str r0, [sp, #0x000]
    str r0, [sp, #0x004]
    mov r1, sp
    str r1, [sp, #0x028]
    add r6, sp, #0x004
    ldrh r4, [r4, #0x00]
    lsrs r4, r4, #0x08
    movs r2, #0x0F
    ands r4, r2
    subs r4, #0x01
    mov r0, r8
    adds r1, r4, #0x0
    bl sub_803DAB8
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    str r0, [sp, #0x004]
    str r4, [sp, #0x000]
    mov r0, r9
    lsls r0, r0, #0x02
    mov r9, r0
    cmp r4, #0x00
    blt _0802209C
    _08022072:
    mov r0, r8
    adds r1, r4, #0x0
    bl sub_803DAB8
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    ldr r1, [r6, #0x00]
    cmp r1, r0
    blt _08022096
    mov r0, r8
    adds r1, r4, #0x0
    bl sub_803DAB8
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    str r0, [r6, #0x00]
    ldr r1, [sp, #0x028]
    str r4, [r1, #0x00]
    _08022096:
    subs r4, #0x01
    cmp r4, #0x00
    bge _08022072
    _0802209C:
    cmp r5, #0x03
    ble _08022184
    ldr r0, _08022178 @ =0x080DB7C8
    add r0, r9
    ldr r4, [r0, #0x00]
    movs r0, #0x00
    mov r1, r10
    ldr r2, [sp, #0x020]
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    cmp r5, r7
    bgt _080220BE
    b _08022248
    _080220BE:
    movs r6, #0xC0
    lsls r6, r6, #0x08
    ldr r2, _0802217C @ =0x03002E44
    ldr r1, _08022180 @ =0x000007DA
    adds r0, r2, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0xF0
    lsls r0, r0, #0x04
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x02
    cmp r0, r1
    bne _080220F4
    ldr r0, [sp, #0x000]
    cmp r7, r0
    bne _080220F4
    ldr r0, [sp, #0x004]
    ldr r2, [sp, #0x024]
    ldrh r2, [r2, #0x04]
    cmp r0, r2
    bne _080220F4
    ldr r1, [sp, #0x024]
    ldr r0, [r1, #0x08]
    cmp r0, #0x00
    beq _080220F4
    movs r6, #0xA0
    lsls r6, r6, #0x08
    _080220F4:
    mov r0, r8
    adds r1, r7, #0x0
    bl sub_803DAB8
    adds r4, r0, #0x0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    mov r1, r10
    adds r1, #0x04
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    ldr r0, [sp, #0x020]
    lsls r2, r0, #0x10
    lsrs r2, r2, #0x10
    movs r0, #0x00
    bl map_getBufferPtr2d
    adds r5, r0, #0x0
    add r1, sp, #0x008
    add r2, sp, #0x00C
    add r3, sp, #0x010
    adds r0, r4, #0x0
    bl sub_804EFBC
    ldr r0, [sp, #0x008]
    movs r3, #0x0F
    movs r2, #0x0F
    ands r0, r2
    adds r0, #0x10
    orrs r0, r6
    strh r0, [r5, #0x02]
    movs r1, #0x1D
    adds r0, r6, #0x0
    orrs r0, r1
    strh r0, [r5, #0x04]
    ldr r1, [sp, #0x00C]
    lsrs r0, r1, #0x04
    ands r0, r3
    adds r0, #0x10
    orrs r0, r6
    strh r0, [r5, #0x06]
    ands r1, r2
    adds r1, #0x10
    orrs r1, r6
    strh r1, [r5, #0x08]
    movs r1, #0x1C
    adds r0, r6, #0x0
    orrs r0, r1
    strh r0, [r5, #0x0A]
    ldr r1, [sp, #0x010]
    lsrs r0, r1, #0x04
    ands r0, r3
    adds r0, #0x10
    orrs r0, r6
    strh r0, [r5, #0x0C]
    ands r1, r2
    adds r1, #0x10
    orrs r6, r1
    strh r6, [r5, #0x0E]
    b _08022248
    _0802216C: .4byte 0x03002E20
    _08022170: .4byte 0x00000838
    _08022174: .4byte 0x0000080A
    _08022178: .4byte 0x080DB7C8
    _0802217C: .4byte 0x03002E44
    _08022180: .4byte 0x000007DA
    _08022184:
    ldr r0, _08022258 @ =0x080DB7B8
    add r0, r9
    ldr r4, [r0, #0x00]
    movs r0, #0x00
    mov r1, r10
    ldr r2, [sp, #0x020]
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    cmp r5, r7
    ble _08022248
    movs r6, #0xC0
    lsls r6, r6, #0x08
    ldr r1, _0802225C @ =0x03002E44
    ldr r2, _08022260 @ =0x000007DA
    adds r0, r1, r2
    ldrh r1, [r0, #0x00]
    movs r0, #0xF0
    lsls r0, r0, #0x04
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x02
    cmp r0, r1
    bne _080221D6
    ldr r0, [sp, #0x000]
    cmp r7, r0
    bne _080221D6
    ldr r0, [sp, #0x004]
    ldr r1, [sp, #0x024]
    ldrh r1, [r1, #0x04]
    cmp r0, r1
    bne _080221D6
    ldr r2, [sp, #0x024]
    ldr r0, [r2, #0x08]
    cmp r0, #0x00
    beq _080221D6
    movs r6, #0xA0
    lsls r6, r6, #0x08
    _080221D6:
    mov r0, r8
    adds r1, r7, #0x0
    bl sub_803DAB8
    adds r4, r0, #0x0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    mov r1, r10
    adds r1, #0x04
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    ldr r0, [sp, #0x020]
    lsls r2, r0, #0x10
    lsrs r2, r2, #0x10
    movs r0, #0x00
    bl map_getBufferPtr2d
    adds r5, r0, #0x0
    add r1, sp, #0x014
    add r2, sp, #0x018
    add r3, sp, #0x01C
    adds r0, r4, #0x0
    bl sub_804EFBC
    ldr r0, [sp, #0x014]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    adds r1, r5, #0x0
    adds r2, r6, #0x0
    bl sub_804F5CC
    ldr r0, [sp, #0x018]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    adds r1, r5, #0x6
    adds r2, r6, #0x0
    bl sub_804F5CC
    ldr r0, [sp, #0x01C]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    adds r1, r5, #0x0
    adds r1, #0x0C
    adds r2, r6, #0x0
    bl sub_804F5CC
    movs r1, #0x5A
    adds r0, r6, #0x0
    orrs r0, r1
    strh r0, [r5, #0x04]
    movs r0, #0x57
    orrs r6, r0
    strh r6, [r5, #0x0A]
    movs r0, #0x00
    strh r0, [r5, #0x00]
    adds r5, #0x40
    strh r0, [r5, #0x00]
    _08022248:
    add sp, #0x02C
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    _08022258: .4byte 0x080DB7B8
    _0802225C: .4byte 0x03002E44
    _08022260: .4byte 0x000007DA
    thumb_func_start sub_8022264
    sub_8022264:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x00C
    adds r5, r0, #0x0
    adds r6, r1, #0x0
    ldr r7, _08022360 @ =0x03002E20
    ldr r1, _08022364 @ =0x00000838
    adds r0, r7, r1
    ldr r0, [r0, #0x00]
    mov r10, r0
    movs r0, #0xC0
    lsls r0, r0, #0x08
    mov r8, r0
    ldr r4, _08022368 @ =0x080DB798
    cmp r2, #0x00
    bne _0802228C
    ldr r4, _0802236C @ =0x080DB7A8
    _0802228C:
    movs r0, #0x00
    adds r1, r5, #0x0
    adds r2, r6, #0x0
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    ldr r1, _08022370 @ =0x000007FE
    adds r0, r7, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0xF0
    lsls r0, r0, #0x04
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x02
    adds r5, #0x04
    lsls r6, r6, #0x10
    mov r9, r6
    add r6, sp, #0x004
    add r7, sp, #0x008
    cmp r0, r1
    bne _080222E2
    bl sub_800EDEC
    movs r3, #0x00
    adds r1, r0, #0x0
    adds r1, #0x50
    movs r2, #0x04
    _080222C8:
    ldr r0, [r1, #0x08]
    cmp r0, #0x00
    beq _080222D0
    movs r3, #0x01
    _080222D0:
    adds r1, #0x0C
    subs r2, #0x01
    cmp r2, #0x00
    bge _080222C8
    cmp r3, #0x00
    beq _080222E2
    movs r0, #0xA0
    lsls r0, r0, #0x08
    mov r8, r0
    _080222E2:
    mov r0, r10
    bl sub_803DAC4
    adds r4, r0, #0x0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    lsls r1, r5, #0x10
    lsrs r1, r1, #0x10
    mov r0, r9
    lsrs r2, r0, #0x10
    movs r0, #0x00
    bl map_getBufferPtr2d
    adds r5, r0, #0x0
    adds r0, r4, #0x0
    mov r1, sp
    adds r2, r6, #0x0
    adds r3, r7, #0x0
    bl sub_804EFBC
    ldr r0, [sp, #0x000]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    adds r1, r5, #0x0
    mov r2, r8
    bl sub_804F5CC
    ldr r0, [sp, #0x004]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    adds r1, r5, #0x6
    mov r2, r8
    bl sub_804F5CC
    ldr r0, [sp, #0x008]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    adds r1, r5, #0x0
    adds r1, #0x0C
    mov r2, r8
    bl sub_804F5CC
    movs r1, #0x5A
    mov r0, r8
    orrs r0, r1
    strh r0, [r5, #0x04]
    movs r0, #0x57
    mov r1, r8
    orrs r1, r0
    strh r1, [r5, #0x0A]
    movs r0, #0x00
    strh r0, [r5, #0x00]
    adds r5, #0x40
    strh r0, [r5, #0x00]
    add sp, #0x00C
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _08022360: .4byte 0x03002E20
    _08022364: .4byte 0x00000838
    _08022368: .4byte 0x080DB798
    _0802236C: .4byte 0x080DB7A8
    _08022370: .4byte 0x000007FE
    thumb_func_start sub_8022374
    sub_8022374:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x030
    adds r4, r0, #0x0
    adds r5, r1, #0x0
    str r2, [sp, #0x00C]
    ldr r1, [r5, #0x00]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    bne _080223A0
    movs r0, #0x07
    ands r1, r0
    adds r0, r1, #0x0
    bl sub_800EDB0
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    b _080223A2
    _080223A0:
    movs r1, #0x09
    _080223A2:
    ldrh r0, [r5, #0x04]
    str r0, [sp, #0x010]
    movs r2, #0x00
    str r2, [sp, #0x014]
    cmp r4, #0x06
    bne _080223B2
    movs r3, #0x01
    str r3, [sp, #0x014]
    _080223B2:
    ldr r0, [r5, #0x08]
    movs r7, #0xF0
    lsls r7, r7, #0x08
    cmp r0, #0x00
    beq _080223C0
    movs r7, #0xE0
    lsls r7, r7, #0x08
    _080223C0:
    movs r2, #0x00
    lsls r6, r4, #0x01
    mov r10, r6
    ldr r0, _08022400 @ =0x080DB7E0
    mov r9, r0
    lsls r3, r1, #0x03
    str r3, [sp, #0x028]
    lsls r1, r1, #0x01
    mov r8, r1
    add r6, sp, #0x004
    mov r12, r6
    mov r0, sp
    adds r0, #0x08
    str r0, [sp, #0x01C]
    ldr r1, [sp, #0x014]
    add r1, r10
    ldr r6, _08022404 @ =0x00000101
    adds r5, r4, r6
    lsls r1, r1, #0x06
    str r1, [sp, #0x02C]
    ldr r1, [sp, #0x00C]
    movs r3, #0x81
    lsls r3, r3, #0x01
    adds r0, r1, r3
    ldr r3, [sp, #0x02C]
    adds r1, r3, r0
    _080223F4:
    cmp r4, #0x04
    bgt _08022408
    adds r0, r7, #0x0
    orrs r0, r5
    b _0802240C
    .byte 0x00, 0x00
    _08022400: .4byte 0x080DB7E0
    _08022404: .4byte 0x00000101
    _08022408:
    adds r0, r7, #0x0
    orrs r0, r6
    _0802240C:
    strh r0, [r1, #0x00]
    adds r6, #0x20
    adds r5, #0x20
    adds r1, #0x40
    adds r2, #0x01
    cmp r2, #0x01
    ble _080223F4
    ldr r6, [sp, #0x028]
    add r6, r9
    str r6, [sp, #0x024]
    mov r0, r8
    adds r0, #0x01
    lsls r0, r0, #0x02
    add r0, r9
    ldr r0, [r0, #0x00]
    mov r8, r0
    ldr r1, [sp, #0x014]
    add r1, r10
    lsls r1, r1, #0x06
    ldr r4, _0802245C @ =0x00000FFF
    mov r5, r8
    ldr r2, [sp, #0x00C]
    movs r3, #0xA2
    lsls r3, r3, #0x01
    adds r0, r2, r3
    adds r3, r1, r0
    movs r6, #0x82
    lsls r6, r6, #0x01
    adds r0, r2, r6
    adds r6, r1, r0
    ldr r0, [sp, #0x024]
    ldr r2, [r0, #0x00]
    adds r1, r5, #0x6
    mov r9, r1
    _08022450:
    cmp r5, r9
    bgt _08022460
    ldrh r0, [r2, #0x00]
    strh r0, [r6, #0x00]
    ldrh r0, [r5, #0x00]
    b _08022472
    _0802245C: .4byte 0x00000FFF
    _08022460:
    ldrh r1, [r2, #0x00]
    adds r0, r4, #0x0
    ands r0, r1
    orrs r0, r7
    strh r0, [r6, #0x00]
    ldrh r1, [r5, #0x00]
    adds r0, r4, #0x0
    ands r0, r1
    orrs r0, r7
    _08022472:
    strh r0, [r3, #0x00]
    adds r5, #0x02
    adds r3, #0x02
    adds r6, #0x02
    adds r2, #0x02
    mov r0, r8
    adds r0, #0x10
    cmp r5, r0
    ble _08022450
    ldr r0, [sp, #0x010]
    mov r1, sp
    mov r2, r12
    ldr r3, [sp, #0x01C]
    bl sub_804EFBC
    movs r2, #0x00
    str r2, [sp, #0x018]
    ldr r4, [sp, #0x014]
    add r4, r10
    ldr r2, [sp, #0x000]
    movs r6, #0x0F
    movs r3, #0x0F
    ands r2, r3
    ldr r5, [sp, #0x004]
    adds r0, r5, #0x0
    ands r0, r3
    ldr r1, _08022560 @ =0x0000010B
    str r1, [sp, #0x020]
    subs r1, #0x0B
    adds r0, r0, r1
    mov r8, r0
    movs r0, #0x85
    lsls r0, r0, #0x01
    mov r10, r0
    adds r2, r2, r1
    mov r12, r2
    adds r2, r1, #0x0
    lsrs r5, r5, #0x04
    mov r9, r5
    mov r1, r9
    ands r1, r6
    mov r9, r1
    ldr r0, [sp, #0x008]
    lsrs r5, r0, #0x04
    ands r5, r6
    ands r3, r0
    lsls r4, r4, #0x06
    ldr r6, [sp, #0x00C]
    adds r4, r4, r6
    _080224D4:
    movs r0, #0x8D
    lsls r0, r0, #0x01
    adds r1, r4, r0
    adds r0, r7, #0x0
    mov r6, r12
    orrs r0, r6
    strh r0, [r1, #0x00]
    movs r0, #0x8E
    lsls r0, r0, #0x01
    adds r1, r4, r0
    adds r0, r7, #0x0
    mov r6, r10
    orrs r0, r6
    strh r0, [r1, #0x00]
    movs r0, #0x8F
    lsls r0, r0, #0x01
    adds r1, r4, r0
    mov r6, r9
    adds r0, r2, r6
    orrs r0, r7
    strh r0, [r1, #0x00]
    movs r0, #0x90
    lsls r0, r0, #0x01
    adds r1, r4, r0
    adds r0, r7, #0x0
    mov r6, r8
    orrs r0, r6
    strh r0, [r1, #0x00]
    movs r0, #0x91
    lsls r0, r0, #0x01
    adds r1, r4, r0
    adds r0, r7, #0x0
    ldr r6, [sp, #0x020]
    orrs r0, r6
    strh r0, [r1, #0x00]
    movs r0, #0x92
    lsls r0, r0, #0x01
    adds r1, r4, r0
    adds r0, r2, r5
    orrs r0, r7
    strh r0, [r1, #0x00]
    movs r6, #0x93
    lsls r6, r6, #0x01
    adds r1, r4, r6
    adds r0, r2, r3
    orrs r0, r7
    strh r0, [r1, #0x00]
    ldr r0, [sp, #0x020]
    adds r0, #0x20
    str r0, [sp, #0x020]
    movs r1, #0x20
    add r8, r1
    add r10, r1
    add r12, r1
    adds r2, #0x20
    adds r4, #0x40
    ldr r6, [sp, #0x018]
    adds r6, #0x01
    str r6, [sp, #0x018]
    cmp r6, #0x01
    ble _080224D4
    add sp, #0x030
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _08022560: .4byte 0x0000010B
    thumb_func_start sub_8022564
    sub_8022564:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    ldr r4, _0802262C @ =0x0809B8A0
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r0, #0xC0
    lsls r0, r0, #0x01
    adds r1, r1, r0
    adds r0, r4, #0x0
    movs r2, #0x08
    bl CpuFastSet
    ldr r4, _08022630 @ =0x080627D4
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r0, #0xD0
    lsls r0, r0, #0x01
    adds r1, r1, r0
    adds r0, r4, #0x0
    movs r2, #0x08
    bl CpuFastSet
    ldr r4, _08022634 @ =0x080AACF0
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r0, #0xE0
    lsls r0, r0, #0x01
    adds r1, r1, r0
    adds r0, r4, #0x0
    movs r2, #0x10
    bl CpuFastSet
    movs r0, #0x01
    bl pltt_setDirtyFlag
    bl dmaq_getVBlankDmaQueue
    ldr r1, _08022638 @ =0x080AAE3C
    movs r2, #0xC0
    lsls r2, r2, #0x13
    ldr r4, _0802263C @ =0x80000400
    adds r3, r4, #0x0
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _08022640 @ =0x080AB7FC
    ldr r2, _08022644 @ =0x06000800
    ldr r3, _08022648 @ =0x800000E0
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0802264C @ =0x08063834
    ldr r2, _08022650 @ =0x06001000
    ldr r3, _08022654 @ =0x80000200
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _08022658 @ =0x080ACAFC
    ldr r2, _0802265C @ =0x06001400
    ldr r3, _08022660 @ =0x80000600
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _08022664 @ =0x080ABEFC
    ldr r2, _08022668 @ =0x06002000
    adds r3, r4, #0x0
    bl dmaq_enqueue
    ldrb r0, [r5, #0x00]
    cmp r0, #0x03
    bne _08022624
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0802266C @ =0x080ADE7C
    ldr r2, _08022670 @ =0x06000320
    ldr r4, _08022674 @ =0x80000070
    adds r3, r4, #0x0
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _08022678 @ =0x080ADF5C
    ldr r2, _0802267C @ =0x06000720
    adds r3, r4, #0x0
    bl dmaq_enqueue
    _08022624:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _0802262C: .4byte 0x0809B8A0
    _08022630: .4byte 0x080627D4
    _08022634: .4byte 0x080AACF0
    _08022638: .4byte 0x080AAE3C
    _0802263C: .4byte 0x80000400
    _08022640: .4byte 0x080AB7FC
    _08022644: .4byte 0x06000800
    _08022648: .4byte 0x800000E0
    _0802264C: .4byte 0x08063834
    _08022650: .4byte 0x06001000
    _08022654: .4byte 0x80000200
    _08022658: .4byte 0x080ACAFC
    _0802265C: .4byte 0x06001400
    _08022660: .4byte 0x80000600
    _08022664: .4byte 0x080ABEFC
    _08022668: .4byte 0x06002000
    _0802266C: .4byte 0x080ADE7C
    _08022670: .4byte 0x06000320
    _08022674: .4byte 0x80000070
    _08022678: .4byte 0x080ADF5C
    _0802267C: .4byte 0x06000720
    thumb_func_start sub_8022680
    sub_8022680:
    push {r4, r5, r6, lr}
    ldr r5, _080226CC @ =0x03002E20
    ldr r0, _080226D0 @ =0x00000801
    adds r6, r5, r0
    ldrb r0, [r6, #0x00]
    bl track_getCup
    adds r4, r0, #0x0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    ldrb r0, [r6, #0x00]
    bl track_getCupIndex
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    lsls r4, r4, #0x02
    adds r6, r4, r0
    ldr r0, _080226D4 @ =0x0000059C
    adds r5, r5, r0
    ldr r0, [r5, #0x00]
    ldr r0, [r0, #0x0C]
    bl sub_8032BC8
    cmp r0, #0x00
    beq _080226E0
    ldr r4, _080226D8 @ =0x080E7FEC
    adds r0, r6, #0x0
    bl track_getRetroTrack
    lsls r0, r0, #0x02
    adds r0, r0, r4
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x30]
    ldr r1, _080226DC @ =0x06000C00
    bl LZ77UnCompVram
    b _080226F6
    .byte 0x00, 0x00
    _080226CC: .4byte 0x03002E20
    _080226D0: .4byte 0x00000801
    _080226D4: .4byte 0x0000059C
    _080226D8: .4byte 0x080E7FEC
    _080226DC: .4byte 0x06000C00
    _080226E0:
    ldr r4, _080226FC @ =0x080E7FEC
    adds r0, r6, #0x0
    bl track_getMKSCTrack
    lsls r0, r0, #0x02
    adds r0, r0, r4
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x30]
    ldr r1, _08022700 @ =0x06000C00
    bl LZ77UnCompVram
    _080226F6:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    _080226FC: .4byte 0x080E7FEC
    _08022700: .4byte 0x06000C00
    thumb_func_start sub_8022704
    sub_8022704:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x070
    bl sub_800EDEC
    mov r8, r0
    movs r0, #0x00
    str r0, [sp, #0x014]
    mov r1, r8
    ldr r0, [r1, #0x10]
    adds r0, #0x01
    str r0, [r1, #0x10]
    ldr r0, [r1, #0x00]
    cmp r0, #0x0D
    bls _0802272C
    bl def_8022734
    _0802272C:
    lsls r0, r0, #0x02
    ldr r1, _08022738 @ =0x0802273C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
    _08022738: .4byte 0x0802273C
    .byte 0x74, 0x27, 0x02, 0x08, 0x18, 0x28, 0x02, 0x08, 0x64, 0x28, 0x02, 0x08, 0x4A, 0x2A, 0x02, 0x08
    .byte 0xF0, 0x2A, 0x02, 0x08, 0x1E, 0x2D, 0x02, 0x08, 0x5C, 0x2D, 0x02, 0x08, 0xE0, 0x2D, 0x02, 0x08
    .byte 0x78, 0x2F, 0x02, 0x08, 0xA4, 0x30, 0x02, 0x08, 0x6C, 0x31, 0x02, 0x08, 0xF8, 0x31, 0x02, 0x08
    .byte 0xE2, 0x33, 0x02, 0x08, 0x78, 0x34, 0x02, 0x08, 0x42, 0x46, 0x50, 0x68, 0x01, 0x30, 0x50, 0x60
    .byte 0xB4, 0x28, 0x12, 0xDD, 0xFF, 0xF7, 0x34, 0xFA, 0x04, 0x1C, 0xFF, 0xF7, 0xB9, 0xF9, 0x00, 0x21
    .byte 0x00, 0x2C, 0x01, 0xD1, 0x00, 0x28, 0x00, 0xD0, 0x01, 0x21, 0x43, 0x46, 0x59, 0x61, 0x01, 0x20
    .byte 0x18, 0x60, 0x00, 0x20, 0x58, 0x60, 0x00, 0xF0, 0x69, 0xFE, 0x17, 0x48, 0x2B, 0xF0, 0xD0, 0xF8
    .byte 0x15, 0x4E, 0x16, 0x4F, 0xF0, 0x19, 0x00, 0x68, 0x1B, 0xF0, 0x86, 0xF9, 0x04, 0x1C, 0x24, 0x04
    .byte 0x24, 0x0C, 0x13, 0x49, 0x70, 0x18, 0x00, 0x78, 0x05, 0x21, 0x10, 0xF0, 0xDB, 0xFA, 0x00, 0x04
    .byte 0x00, 0x0C, 0x84, 0x42, 0x05, 0xD3, 0x0F, 0x4B, 0xF2, 0x18, 0x11, 0x88, 0x01, 0x20, 0x08, 0x43
    .byte 0x10, 0x80, 0x09, 0x4E, 0x0C, 0x4F, 0xF0, 0x19, 0x01, 0x88, 0x80, 0x20, 0x00, 0x02, 0x08, 0x40
    .byte 0x00, 0x28, 0x01, 0xD0, 0x00, 0xF0, 0x42, 0xFE, 0x30, 0x1C, 0x2C, 0xF0, 0x63, 0xF8, 0x02, 0x48
    .byte 0x2C, 0xF0, 0xA4, 0xF8, 0x00, 0xF0, 0x3A, 0xFE, 0x44, 0x2E, 0x00, 0x03, 0x14, 0x08, 0x00, 0x00
    .byte 0xDD, 0x07, 0x00, 0x00, 0xEE, 0x0B, 0x00, 0x00, 0xDA, 0x07, 0x00, 0x00, 0x0D, 0xF0, 0x0C, 0xFE
    .byte 0x04, 0x1C, 0x0E, 0x4D, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0B, 0xF0, 0x43, 0xFF, 0x02, 0x1C
    .byte 0x0B, 0x4B, 0x20, 0x1C, 0x29, 0x1C, 0x0D, 0xF0, 0xD7, 0xFD, 0x00, 0x20, 0x02, 0x90, 0x00, 0x21
    .byte 0x00, 0x22, 0x0B, 0xF0, 0x37, 0xFF, 0x01, 0x1C, 0x06, 0x4A, 0x02, 0xA8, 0x3E, 0xF0, 0x80, 0xFD
    .byte 0x02, 0x20, 0x41, 0x46, 0x08, 0x60, 0x00, 0xF0, 0x11, 0xFE, 0x00, 0x00, 0x00, 0x38, 0x00, 0x06
    .byte 0x80, 0x02, 0x00, 0x80, 0x40, 0x01, 0x00, 0x01, 0x42, 0x46, 0x50, 0x68, 0x01, 0x30, 0x50, 0x60
    .byte 0x01, 0x28, 0x01, 0xDC, 0x00, 0xF0, 0x02, 0xFE, 0x00, 0x21, 0x51, 0x60, 0x90, 0x68, 0x07, 0x28
    .byte 0x00, 0xDD, 0xDE, 0xE0, 0x01, 0x30, 0x90, 0x60, 0x03, 0x91, 0x03, 0xAC, 0x00, 0x20, 0x00, 0x22
    .byte 0x0B, 0xF0, 0x10, 0xFF, 0x01, 0x1C, 0x0B, 0x4A, 0x20, 0x1C, 0x3E, 0xF0, 0x59, 0xFD, 0x0A, 0x4B
    .byte 0x0A, 0x4E, 0x98, 0x19, 0x00, 0x88, 0x01, 0x0A, 0x0F, 0x20, 0x01, 0x40, 0x01, 0x27, 0x03, 0x29
    .byte 0x00, 0xDD, 0x02, 0x27, 0x02, 0x25, 0x03, 0x29, 0x00, 0xDD, 0x01, 0x25, 0x00, 0x26, 0x4C, 0x1C
    .byte 0x15, 0xE0, 0x00, 0x00, 0x40, 0x01, 0x00, 0x01, 0x44, 0x2E, 0x00, 0x03, 0xE6, 0x07, 0x00, 0x00
    .byte 0xD8, 0x00, 0xC0, 0x18, 0x00, 0x28, 0x00, 0xDA, 0x07, 0x30, 0xC1, 0x10, 0x12, 0x20, 0x40, 0x1A
    .byte 0x31, 0x1C, 0x69, 0x43, 0x79, 0x18, 0x32, 0x1C, 0xFF, 0xF7, 0x8E, 0xFB, 0x01, 0x36, 0x40, 0x46
    .byte 0x83, 0x68, 0x20, 0x1C, 0x58, 0x43, 0x00, 0x28, 0x00, 0xDA, 0x07, 0x30, 0xC0, 0x10, 0x86, 0x42
    .byte 0xE6, 0xDB, 0x1C, 0x1C, 0xE0, 0x00, 0x00, 0x19, 0x00, 0x28, 0x00, 0xDA, 0x07, 0x30, 0xC1, 0x10
    .byte 0x12, 0x20, 0x40, 0x1A, 0x00, 0x22, 0x07, 0x2C, 0x00, 0xDD, 0x01, 0x22, 0x19, 0x1C, 0xFF, 0xF7
    .byte 0xA3, 0xFC, 0x41, 0x46, 0x88, 0x68, 0x40, 0x42, 0x82, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x0B, 0xF0, 0xC0, 0xFE, 0x81, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0B, 0xF0, 0xBA, 0xFE
    .byte 0x19, 0x90, 0x00, 0x21, 0x42, 0x46, 0x92, 0x68, 0x94, 0x46, 0x00, 0x23, 0x56, 0x46, 0x8D, 0x19
    .byte 0x4E, 0x1C, 0x2C, 0x1C, 0xA0, 0x01, 0x19, 0x9F, 0xC2, 0x19, 0x88, 0x01, 0x4F, 0x46, 0xC1, 0x19
    .byte 0x00, 0x2B, 0x07, 0xDB, 0x00, 0x2D, 0x05, 0xDB, 0x1D, 0x2B, 0x03, 0xDC, 0x13, 0x2C, 0x01, 0xDC
    .byte 0x08, 0x88, 0x10, 0x80, 0x02, 0x32, 0x02, 0x31, 0x01, 0x33, 0x11, 0x2B, 0xF0, 0xDB, 0x31, 0x1C
    .byte 0x05, 0x29, 0xE2, 0xDB, 0x67, 0x46, 0x06, 0x97, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0B, 0xF0
    .byte 0x91, 0xFE, 0x82, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0B, 0xF0, 0x8B, 0xFE, 0x81, 0x46
    .byte 0x00, 0x20, 0x01, 0x1C, 0x0C, 0x31, 0x01, 0x30, 0x84, 0x46, 0x06, 0x98, 0x0C, 0x18, 0x60, 0x01
    .byte 0x49, 0x01, 0x16, 0x31, 0x16, 0x30, 0x38, 0x18, 0x3A, 0x1C, 0x16, 0x32, 0x08, 0x25, 0x40, 0x00
    .byte 0x4E, 0x46, 0x83, 0x19, 0x49, 0x00, 0x51, 0x44, 0x00, 0x2A, 0x07, 0xDB, 0x00, 0x2C, 0x05, 0xDB
    .byte 0x1D, 0x2A, 0x03, 0xDC, 0x13, 0x2C, 0x01, 0xDC, 0x08, 0x88, 0x18, 0x80, 0x02, 0x31, 0x02, 0x33
    .byte 0x01, 0x32, 0x01, 0x3D, 0x00, 0x2D, 0xEF, 0xDA, 0x60, 0x46, 0x09, 0x28, 0xD9, 0xDB, 0x01, 0x20
    .byte 0x00, 0x21, 0x00, 0x22, 0x0B, 0xF0, 0x5E, 0xFE, 0x81, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x0B, 0xF0, 0x58, 0xFE, 0x07, 0x1C, 0x00, 0x20, 0x00, 0x21, 0x04, 0x1C, 0x10, 0x34, 0x46, 0x1C
    .byte 0x23, 0x1C, 0x5D, 0x01, 0x4A, 0x1C, 0x00, 0x2A, 0x0B, 0xDB, 0x00, 0x2C, 0x09, 0xDB, 0x1D, 0x2A
    .byte 0x07, 0xDC, 0x13, 0x2B, 0x05, 0xDC, 0xA8, 0x18, 0x40, 0x00, 0xC1, 0x19, 0x48, 0x44, 0x00, 0x88
    .byte 0x08, 0x80, 0x11, 0x1C, 0x05, 0x29, 0xED, 0xDB, 0x30, 0x1C, 0x03, 0x28, 0xE4, 0xDB, 0x00, 0xF0
    .byte 0x20, 0xFD, 0x03, 0x20, 0x47, 0x46, 0x38, 0x60, 0xB9, 0x60, 0x00, 0xF0, 0x17, 0xFD, 0x40, 0x46
    .byte 0x01, 0x69, 0x87, 0x20, 0x80, 0x00, 0x81, 0x42, 0x01, 0xDC, 0x00, 0xF0, 0x0F, 0xFD, 0x0A, 0x49
    .byte 0x0A, 0x4A, 0x88, 0x18, 0x01, 0x88, 0x80, 0x20, 0xC0, 0x01, 0x08, 0x40, 0x00, 0x28, 0x0F, 0xD0
    .byte 0x00, 0x20, 0x0B, 0xF0, 0x31, 0xFE, 0x01, 0x20, 0x0B, 0xF0, 0x2E, 0xFE, 0x03, 0x20, 0x0B, 0xF0
    .byte 0x3F, 0xFE, 0x09, 0x21, 0x00, 0xF0, 0xEF, 0xFC, 0x44, 0x2E, 0x00, 0x03, 0xDA, 0x07, 0x00, 0x00
    .byte 0x05, 0x48, 0x00, 0x68, 0x00, 0x28, 0x03, 0xD1, 0x04, 0x48, 0x00, 0x68, 0x00, 0x28, 0x07, 0xD0
    .byte 0x0E, 0x20, 0x3D, 0xF0, 0x3F, 0xFA, 0x06, 0xE0, 0x9C, 0x01, 0x00, 0x03, 0xA0, 0x01, 0x00, 0x03
    .byte 0x0F, 0x20, 0x3D, 0xF0, 0x37, 0xFA, 0x0F, 0x21, 0x0A, 0x4A, 0x0B, 0x4B, 0xD0, 0x18, 0x01, 0x60
    .byte 0x0D, 0xF0, 0xBA, 0xFC, 0x04, 0x1C, 0x09, 0x4D, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0B, 0xF0
    .byte 0xF1, 0xFD, 0x02, 0x1C, 0x06, 0x4B, 0x20, 0x1C, 0x29, 0x1C, 0x0D, 0xF0, 0x85, 0xFC, 0x04, 0x20
    .byte 0x37, 0xE3, 0x00, 0x00, 0x44, 0x2E, 0x00, 0x03, 0xE4, 0x0B, 0x00, 0x00, 0x00, 0x38, 0x00, 0x06
    .byte 0x80, 0x02, 0x00, 0x80, 0x47, 0x46, 0xB8, 0x68, 0x01, 0x30, 0xB8, 0x60, 0x00, 0x28, 0x00, 0xDC
    .byte 0xC8, 0xE2, 0x00, 0x21, 0xB9, 0x60, 0x78, 0x68, 0x01, 0x30, 0x78, 0x60, 0x2B, 0x28, 0x00, 0xDD
    .byte 0x02, 0xE1, 0x00, 0x28, 0x29, 0xDD, 0x46, 0x42, 0x01, 0x20, 0x00, 0x22, 0x0B, 0xF0, 0xCA, 0xFD
    .byte 0x81, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0B, 0xF0, 0xC4, 0xFD, 0x07, 0x1C, 0x00, 0x20
    .byte 0x00, 0x24, 0x42, 0x1C, 0x15, 0x1C, 0x90, 0x01, 0x49, 0x46, 0x43, 0x18, 0x50, 0x01, 0x30, 0x18
    .byte 0x40, 0x00, 0xC1, 0x19, 0xA0, 0x19, 0x00, 0x28, 0x07, 0xDB, 0x00, 0x2A, 0x05, 0xDB, 0x1D, 0x28
    .byte 0x03, 0xDC, 0x13, 0x2D, 0x01, 0xDC, 0x18, 0x88, 0x08, 0x80, 0x02, 0x33, 0x02, 0x31, 0x01, 0x34
    .byte 0x20, 0x2C, 0xEF, 0xDB, 0x10, 0x1C, 0x02, 0x28, 0xE2, 0xDB, 0x42, 0x46, 0x56, 0x68, 0x03, 0x2E
    .byte 0x32, 0xDD, 0x70, 0x42, 0x03, 0x30, 0x81, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0B, 0xF0
    .byte 0x99, 0xFD, 0x07, 0x90, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0B, 0xF0, 0x93, 0xFD, 0x82, 0x46
    .byte 0x00, 0x20, 0x43, 0x46, 0x5E, 0x68, 0x00, 0x24, 0xC5, 0x1C, 0x01, 0x30, 0x84, 0x46, 0x2B, 0x1C
    .byte 0x98, 0x01, 0x07, 0x9F, 0xC2, 0x19, 0x58, 0x01, 0x48, 0x44, 0x40, 0x00, 0x57, 0x46, 0xC1, 0x19
    .byte 0x4F, 0x46, 0xE0, 0x19, 0x00, 0x28, 0x07, 0xDB, 0x00, 0x2D, 0x05, 0xDB, 0x1D, 0x28, 0x03, 0xDC
    .byte 0x13, 0x2B, 0x01, 0xDC, 0x10, 0x88, 0x08, 0x80, 0x02, 0x32, 0x02, 0x31, 0x01, 0x34, 0x20, 0x2C
    .byte 0xEE, 0xDB, 0x60, 0x46, 0x02, 0x28, 0xDE, 0xDB, 0x06, 0x2E, 0x32, 0xDD, 0x70, 0x42, 0x06, 0x30
    .byte 0x81, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0B, 0xF0, 0x64, 0xFD, 0x08, 0x90, 0x00, 0x20
    .byte 0x00, 0x21, 0x00, 0x22, 0x0B, 0xF0, 0x5E, 0xFD, 0x82, 0x46, 0x00, 0x20, 0x41, 0x46, 0x4E, 0x68
    .byte 0x00, 0x24, 0x45, 0x1D, 0x01, 0x30, 0x84, 0x46, 0x2B, 0x1C, 0x98, 0x01, 0x08, 0x9F, 0xC2, 0x19
    .byte 0x58, 0x01, 0x48, 0x44, 0x40, 0x00, 0x57, 0x46, 0xC1, 0x19, 0x4F, 0x46, 0xE0, 0x19, 0x00, 0x28
    .byte 0x07, 0xDB, 0x00, 0x2D, 0x05, 0xDB, 0x1D, 0x28, 0x03, 0xDC, 0x13, 0x2B, 0x01, 0xDC, 0x10, 0x88
    .byte 0x08, 0x80, 0x02, 0x32, 0x02, 0x31, 0x01, 0x34, 0x20, 0x2C, 0xEE, 0xDB, 0x60, 0x46, 0x02, 0x28
    .byte 0xDE, 0xDB, 0x09, 0x2E, 0x32, 0xDD, 0x70, 0x42, 0x09, 0x30, 0x81, 0x46, 0x01, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x0B, 0xF0, 0x2F, 0xFD, 0x09, 0x90, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0B, 0xF0
    .byte 0x29, 0xFD, 0x82, 0x46, 0x00, 0x20, 0x41, 0x46, 0x4E, 0x68, 0x00, 0x24, 0xC5, 0x1D, 0x01, 0x30
    .byte 0x84, 0x46, 0x2B, 0x1C, 0x98, 0x01, 0x09, 0x9F, 0xC2, 0x19, 0x58, 0x01, 0x48, 0x44, 0x40, 0x00
    .byte 0x57, 0x46, 0xC1, 0x19, 0x4F, 0x46, 0xE0, 0x19, 0x00, 0x28, 0x07, 0xDB, 0x00, 0x2D, 0x05, 0xDB
    .byte 0x1D, 0x28, 0x03, 0xDC, 0x13, 0x2B, 0x01, 0xDC, 0x10, 0x88, 0x08, 0x80, 0x02, 0x32, 0x02, 0x31
    .byte 0x01, 0x34, 0x20, 0x2C, 0xEE, 0xDB, 0x60, 0x46, 0x01, 0x28, 0xDE, 0xDB, 0x0C, 0x2E, 0x30, 0xDD
    .byte 0x70, 0x42, 0x07, 0x1C, 0x0C, 0x37, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0B, 0xF0, 0xFA, 0xFC
    .byte 0x82, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0B, 0xF0, 0xF4, 0xFC, 0x81, 0x46, 0x00, 0x20
    .byte 0x00, 0x24, 0x05, 0x1C, 0x08, 0x35, 0x01, 0x30, 0x84, 0x46, 0x2B, 0x1C, 0x98, 0x01, 0x51, 0x46
    .byte 0x42, 0x18, 0x58, 0x01, 0x38, 0x18, 0x40, 0x00, 0x4E, 0x46, 0x81, 0x19, 0xE0, 0x19, 0x00, 0x28
    .byte 0x07, 0xDB, 0x00, 0x2D, 0x05, 0xDB, 0x1D, 0x28, 0x03, 0xDC, 0x13, 0x2B, 0x01, 0xDC, 0x10, 0x88
    .byte 0x08, 0x80, 0x02, 0x32, 0x02, 0x31, 0x01, 0x34, 0x20, 0x2C, 0xEF, 0xDB, 0x60, 0x46, 0x02, 0x28
    .byte 0xDE, 0xDB, 0x01, 0x27, 0x05, 0x97, 0xBD, 0xE1, 0x05, 0x20, 0x42, 0x46, 0x10, 0x60, 0x51, 0x60
    .byte 0xB8, 0xE1, 0x0D, 0x48, 0xFF, 0xF7, 0x20, 0xFC, 0x0B, 0x4E, 0xB4, 0x68, 0x01, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x0B, 0xF0, 0xBF, 0xFC, 0x01, 0x1C, 0x20, 0x1C, 0x3E, 0xF0, 0x15, 0xFB, 0x07, 0x4C
    .byte 0x00, 0x20, 0x00, 0x21, 0x14, 0x22, 0x0B, 0xF0, 0xB5, 0xFC, 0x01, 0x1C, 0x20, 0x1C, 0x3E, 0xF0
    .byte 0x0B, 0xFB, 0x06, 0x20, 0x90, 0xE3, 0x00, 0x00, 0x4C, 0xB8, 0x0D, 0x08, 0x7C, 0xBD, 0x09, 0x08
    .byte 0xFF, 0xF7, 0x90, 0xFC, 0x00, 0x26, 0x45, 0x46, 0x8C, 0x35, 0x44, 0x46, 0x50, 0x34, 0x01, 0x20
    .byte 0x00, 0x21, 0x00, 0x22, 0x0B, 0xF0, 0x9E, 0xFC, 0x02, 0x1C, 0x30, 0x1C, 0x21, 0x1C, 0xFF, 0xF7
    .byte 0xFB, 0xFA, 0x0C, 0x34, 0x01, 0x36, 0x04, 0x2E, 0xF1, 0xDD, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x0B, 0xF0, 0x90, 0xFC, 0x02, 0x1C, 0x06, 0x20, 0x29, 0x1C, 0xFF, 0xF7, 0xED, 0xFA, 0x0E, 0x48
    .byte 0x0E, 0x49, 0x3E, 0xF0, 0xDF, 0xFA, 0x0E, 0x4C, 0x01, 0x20, 0x0B, 0xF0, 0x43, 0xFC, 0x01, 0x1C
    .byte 0xF5, 0x20, 0x40, 0x00, 0x09, 0x18, 0x20, 0x1C, 0x0A, 0x22, 0x3E, 0xF0, 0xCB, 0xFA, 0x01, 0x20
    .byte 0x0B, 0xF0, 0x54, 0xFC, 0x00, 0x21, 0xB6, 0x20, 0x40, 0x00, 0x42, 0x46, 0x10, 0x83, 0x51, 0x83
    .byte 0x07, 0x20, 0x10, 0x60, 0x08, 0xE2, 0x00, 0x00, 0xD4, 0xB8, 0x09, 0x08, 0x00, 0x70, 0x01, 0x06
    .byte 0xC0, 0xB8, 0x09, 0x08, 0x43, 0x46, 0x98, 0x68, 0x01, 0x30, 0x98, 0x60, 0x00, 0x28, 0x00, 0xDC
    .byte 0xBC, 0xE0, 0x00, 0x21, 0x99, 0x60, 0x58, 0x68, 0x01, 0x30, 0x58, 0x60, 0x3B, 0x28, 0x00, 0xDD
    .byte 0xB0, 0xE0, 0x00, 0x26, 0x6F, 0x46, 0x0C, 0x37, 0x14, 0x97, 0x68, 0x46, 0x10, 0x30, 0x15, 0x90
    .byte 0x20, 0x21, 0x17, 0x91, 0x00, 0x20, 0x03, 0x90, 0x74, 0x00, 0x00, 0x21, 0x22, 0x1C, 0x0B, 0xF0
    .byte 0x49, 0xFC, 0x01, 0x1C, 0x14, 0x98, 0x4E, 0x4A, 0x3E, 0xF0, 0x92, 0xFA, 0x42, 0x46, 0x50, 0x68
    .byte 0x17, 0x9B, 0x18, 0x1A, 0x00, 0x28, 0x00, 0xDA, 0x00, 0x20, 0x0A, 0x94, 0x19, 0x90, 0x01, 0x20
    .byte 0x00, 0x21, 0x00, 0x22, 0x0B, 0xF0, 0x36, 0xFC, 0x82, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x0B, 0xF0, 0x30, 0xFC, 0x81, 0x46, 0x00, 0x20, 0x00, 0x24, 0x0A, 0x9F, 0x3D, 0x18, 0x01, 0x30
    .byte 0x84, 0x46, 0x2B, 0x1C, 0x98, 0x01, 0x51, 0x46, 0x42, 0x18, 0x58, 0x01, 0x19, 0x9F, 0x38, 0x18
    .byte 0x40, 0x00, 0x4F, 0x46, 0xC1, 0x19, 0x19, 0x9F, 0xE0, 0x19, 0x00, 0x28, 0x07, 0xDB, 0x00, 0x2D
    .byte 0x05, 0xDB, 0x1D, 0x28, 0x03, 0xDC, 0x13, 0x2B, 0x01, 0xDC, 0x10, 0x88, 0x08, 0x80, 0x02, 0x32
    .byte 0x02, 0x31, 0x01, 0x34, 0x14, 0x2C, 0xEE, 0xDB, 0x60, 0x46, 0x02, 0x28, 0xDC, 0xDB, 0x17, 0x98
    .byte 0x03, 0x30, 0x17, 0x90, 0x01, 0x36, 0x06, 0x2E, 0xB4, 0xDD, 0x00, 0x26, 0x00, 0x20, 0x04, 0x90
    .byte 0x74, 0x00, 0x25, 0x1C, 0x0F, 0x35, 0x00, 0x21, 0x2A, 0x1C, 0x0B, 0xF0, 0xFB, 0xFB, 0x01, 0x1C
    .byte 0x15, 0x98, 0x27, 0x4A, 0x3E, 0xF0, 0x44, 0xFA, 0xA4, 0x19, 0x38, 0x34, 0x41, 0x46, 0x48, 0x68
    .byte 0x20, 0x1A, 0x00, 0x28, 0x00, 0xDA, 0x00, 0x20, 0x0B, 0x95, 0x04, 0x1C, 0x01, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x0B, 0xF0, 0xE7, 0xFB, 0x82, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0B, 0xF0
    .byte 0xE1, 0xFB, 0x81, 0x46, 0x00, 0x20, 0x01, 0x36, 0xB4, 0x46, 0x00, 0x21, 0x0B, 0x9B, 0x1A, 0x18
    .byte 0x01, 0x30, 0x19, 0x90, 0x16, 0x1C, 0xB0, 0x01, 0x57, 0x46, 0xC5, 0x19, 0x70, 0x01, 0x20, 0x18
    .byte 0x40, 0x00, 0x4F, 0x46, 0xC3, 0x19, 0x08, 0x19, 0x00, 0x28, 0x07, 0xDB, 0x00, 0x2A, 0x05, 0xDB
    .byte 0x1D, 0x28, 0x03, 0xDC, 0x13, 0x2E, 0x01, 0xDC, 0x28, 0x88, 0x18, 0x80, 0x02, 0x35, 0x02, 0x33
    .byte 0x01, 0x31, 0x14, 0x29, 0xEF, 0xDB, 0x19, 0x98, 0x02, 0x28, 0xDE, 0xDB, 0x66, 0x46, 0x01, 0x2E
    .byte 0xB4, 0xDD, 0x40, 0x46, 0x41, 0x68, 0x20, 0x29, 0x07, 0xDC, 0x20, 0x20, 0x40, 0x1A, 0xC0, 0x00
    .byte 0x6C, 0x30, 0x00, 0x21, 0x42, 0x46, 0x10, 0x83, 0x51, 0x83, 0x01, 0x23, 0x05, 0x93, 0x05, 0xE0
    .byte 0x20, 0x00, 0x00, 0x01, 0x08, 0x20, 0x46, 0x46, 0x30, 0x60, 0x71, 0x60, 0x09, 0x20, 0x0A, 0xF0
    .byte 0xBF, 0xFA, 0x00, 0x28, 0x00, 0xD1, 0x81, 0xE2, 0x09, 0x20, 0x7D, 0xE2, 0x24, 0x48, 0x41, 0x78
    .byte 0x43, 0x46, 0x5A, 0x68, 0x8A, 0x42, 0x00, 0xDB, 0x7F, 0xE0, 0x49, 0x00, 0x13, 0x20, 0x40, 0x1A
    .byte 0x01, 0x32, 0x5A, 0x60, 0x1E, 0x4E, 0x71, 0x78, 0x40, 0x18, 0x82, 0x46, 0x01, 0x31, 0x0C, 0x91
    .byte 0x17, 0x1C, 0xB9, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0B, 0xF0, 0x83, 0xFB, 0x0D, 0x90
    .byte 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0B, 0xF0, 0x7D, 0xFB, 0x0E, 0x90, 0x00, 0x2F, 0x04, 0xDA
    .byte 0x00, 0x20, 0x81, 0x46, 0x00, 0x2F, 0x00, 0xDA, 0x00, 0x27, 0x49, 0x46, 0x05, 0x29, 0x01, 0xDD
    .byte 0x05, 0x22, 0x91, 0x46, 0x0C, 0x9B, 0x9F, 0x42, 0x00, 0xDD, 0x1F, 0x1C, 0x00, 0x25, 0x78, 0x00
    .byte 0x85, 0x42, 0x4F, 0xDA, 0x4E, 0x46, 0x76, 0x00, 0x12, 0x96, 0x10, 0x90, 0x00, 0x24, 0x68, 0x1C
    .byte 0x13, 0x90, 0x12, 0x99, 0x8C, 0x42, 0x41, 0xDA, 0x1A, 0x91, 0x0C, 0x9A, 0x52, 0x44, 0x0F, 0x92
    .byte 0x10, 0x9B, 0xEB, 0x1A, 0x9C, 0x46, 0x4C, 0x45, 0x04, 0xDA, 0x23, 0x1C, 0x14, 0x33, 0x05, 0xE0
    .byte 0x4C, 0xB8, 0x0D, 0x08, 0x1A, 0x9E, 0xA0, 0x1B, 0x03, 0x1C, 0x1E, 0x33, 0xBD, 0x42, 0x04, 0xDA
    .byte 0x51, 0x46, 0x0C, 0x9A, 0x88, 0x1A, 0x41, 0x19, 0x01, 0xE0, 0x0F, 0x99, 0x61, 0x44, 0x00, 0x2B
    .byte 0x20, 0xDB, 0x00, 0x29, 0x1E, 0xDB, 0x1D, 0x2B, 0x1C, 0xDC, 0x13, 0x29, 0x1A, 0xDC, 0x19, 0x26
    .byte 0x4A, 0x46, 0xB0, 0x1A, 0x02, 0x19, 0x56, 0x46, 0xF0, 0x1B, 0x40, 0x19, 0x00, 0x2A, 0x11, 0xDB
    .byte 0x00, 0x28, 0x0F, 0xDB, 0x1D, 0x2A, 0x0D, 0xDC, 0x13, 0x28, 0x0B, 0xDC, 0x40, 0x01, 0x80, 0x18
    .byte 0x40, 0x00, 0x0E, 0x9A, 0x80, 0x18, 0x49, 0x01, 0xC9, 0x18, 0x49, 0x00, 0x0D, 0x9B, 0xC9, 0x18
    .byte 0x09, 0x88, 0x01, 0x80, 0x01, 0x34, 0x1A, 0x9E, 0xB4, 0x42, 0xC4, 0xDB, 0x13, 0x9D, 0x10, 0x98
    .byte 0x85, 0x42, 0xB3, 0xDB, 0x01, 0x21, 0x05, 0x91, 0x04, 0xE0, 0x09, 0x20, 0x42, 0x46, 0x10, 0x60
    .byte 0x00, 0x20, 0x50, 0x60, 0x09, 0x20, 0x0A, 0xF0, 0x2B, 0xFA, 0x00, 0x28, 0x00, 0xD1, 0xED, 0xE1
    .byte 0x09, 0x20, 0x43, 0x46, 0x18, 0x60, 0xE9, 0xE1, 0x2B, 0x48, 0xFF, 0xF7, 0x5D, 0xFA, 0x2A, 0x4E
    .byte 0xB4, 0x68, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0B, 0xF0, 0xFC, 0xFA, 0x01, 0x1C, 0x20, 0x1C
    .byte 0x3E, 0xF0, 0x52, 0xF9, 0x25, 0x4C, 0x00, 0x20, 0x00, 0x21, 0x14, 0x22, 0x0B, 0xF0, 0xF2, 0xFA
    .byte 0x01, 0x1C, 0x20, 0x1C, 0x3E, 0xF0, 0x48, 0xF9, 0x21, 0x4F, 0x22, 0x49, 0x78, 0x18, 0x01, 0x88
    .byte 0x49, 0x08, 0x01, 0x20, 0x88, 0x43, 0x00, 0x28, 0x32, 0xD1, 0x70, 0x78, 0x40, 0x00, 0x13, 0x21
    .byte 0x09, 0x1A, 0x8A, 0x46, 0x00, 0x21, 0x1C, 0x4A, 0x91, 0x46, 0x4F, 0x1C, 0x0D, 0x1C, 0x16, 0x35
    .byte 0x54, 0x46, 0x02, 0x34, 0x01, 0x26, 0x00, 0x20, 0x29, 0x1C, 0x22, 0x1C, 0x0B, 0xF0, 0xD2, 0xFA
    .byte 0x01, 0x88, 0x4B, 0x46, 0x19, 0x40, 0x01, 0x80, 0x00, 0x20, 0x29, 0x1C, 0x22, 0x1C, 0x0B, 0xF0
    .byte 0xC9, 0xFA, 0x01, 0x88, 0x80, 0x23, 0xDB, 0x01, 0x1A, 0x1C, 0x11, 0x43, 0x01, 0x80, 0x01, 0x34
    .byte 0x01, 0x3E, 0x00, 0x2E, 0xE7, 0xDA, 0x39, 0x1C, 0x06, 0x29, 0xDE, 0xDD, 0x0B, 0x4C, 0x00, 0x20
    .byte 0x0B, 0xF0, 0x78, 0xFA, 0x01, 0x1C, 0x80, 0x31, 0x20, 0x1C, 0x08, 0x22, 0x3E, 0xF0, 0x00, 0xF9
    .byte 0x0A, 0x20, 0x46, 0x46, 0x30, 0x60, 0x91, 0xE1, 0x4C, 0xB8, 0x0D, 0x08, 0x7C, 0xBD, 0x09, 0x08
    .byte 0x44, 0x2E, 0x00, 0x03, 0xEE, 0x0B, 0x00, 0x00, 0xFF, 0x0F, 0x00, 0x00, 0x7C, 0xAD, 0x0A, 0x08
    .byte 0xFF, 0xF7, 0x88, 0xFA, 0x00, 0x26, 0x45, 0x46, 0x8C, 0x35, 0x44, 0x46, 0x50, 0x34, 0x00, 0x20
    .byte 0x00, 0x21, 0x00, 0x22, 0x0B, 0xF0, 0x96, 0xFA, 0x02, 0x1C, 0x30, 0x1C, 0x21, 0x1C, 0xFF, 0xF7
    .byte 0xF3, 0xF8, 0x0C, 0x34, 0x01, 0x36, 0x04, 0x2E, 0xF1, 0xDD, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x0B, 0xF0, 0x88, 0xFA, 0x02, 0x1C, 0x06, 0x20, 0x29, 0x1C, 0xFF, 0xF7, 0xE5, 0xF8, 0x10, 0x48
    .byte 0x10, 0x49, 0x3E, 0xF0, 0xD7, 0xF8, 0x10, 0x4C, 0x01, 0x20, 0x0B, 0xF0, 0x3B, 0xFA, 0x01, 0x1C
    .byte 0xF5, 0x27, 0x7F, 0x00, 0xC9, 0x19, 0x20, 0x1C, 0x0A, 0x22, 0x3E, 0xF0, 0xC3, 0xF8, 0x01, 0x20
    .byte 0x0B, 0xF0, 0x4C, 0xFA, 0x00, 0x21, 0x6C, 0x20, 0x42, 0x46, 0x10, 0x83, 0x51, 0x83, 0x01, 0x23
    .byte 0x05, 0x93, 0x0B, 0x20, 0x10, 0x60, 0xD1, 0x60, 0x91, 0x60, 0x51, 0x60, 0x46, 0xE1, 0x00, 0x00
    .byte 0xD4, 0xB8, 0x09, 0x08, 0x00, 0x70, 0x01, 0x06, 0xC0, 0xB8, 0x09, 0x08, 0x46, 0x46, 0xF7, 0x68
    .byte 0x72, 0x49, 0x48, 0x78, 0x40, 0x00, 0x13, 0x21, 0x09, 0x1A, 0x89, 0x46, 0x7A, 0x00, 0x4A, 0x44
    .byte 0x00, 0x20, 0x15, 0x21, 0x0B, 0xF0, 0x4E, 0xFA, 0x04, 0x1C, 0x00, 0x20, 0x1B, 0x21, 0x1E, 0x22
    .byte 0x0B, 0xF0, 0x48, 0xFA, 0x00, 0x88, 0x20, 0x80, 0xF2, 0x68, 0x52, 0x00, 0x01, 0x32, 0x4A, 0x44
    .byte 0x00, 0x20, 0x15, 0x21, 0x0B, 0xF0, 0x3E, 0xFA, 0x04, 0x1C, 0x00, 0x20, 0x1B, 0x21, 0x1F, 0x22
    .byte 0x0B, 0xF0, 0x38, 0xFA, 0x00, 0x88, 0x20, 0x80, 0x60, 0x4A, 0x50, 0x68, 0xF1, 0x68, 0x40, 0x18
    .byte 0x00, 0x78, 0x03, 0x28, 0x08, 0xD1, 0x5E, 0x4B, 0x5E, 0x4E, 0x98, 0x19, 0x01, 0x88, 0x49, 0x08
    .byte 0x01, 0x20, 0x88, 0x43, 0x00, 0x28, 0x27, 0xD0, 0x00, 0x21, 0x00, 0x24, 0x4E, 0x1C, 0x0D, 0x1C
    .byte 0x16, 0x35, 0x40, 0x46, 0xC2, 0x68, 0x52, 0x00, 0x4A, 0x44, 0x12, 0x19, 0x00, 0x20, 0x29, 0x1C
    .byte 0x0B, 0xF0, 0x18, 0xFA, 0x01, 0x88, 0x54, 0x4B, 0x1A, 0x1C, 0x11, 0x40, 0x01, 0x80, 0x40, 0x46
    .byte 0xC2, 0x68, 0x52, 0x00, 0x4A, 0x44, 0x12, 0x19, 0x00, 0x20, 0x29, 0x1C, 0x0B, 0xF0, 0x0A, 0xFA
    .byte 0x01, 0x88, 0xE0, 0x23, 0x1B, 0x02, 0x1A, 0x1C, 0x11, 0x43, 0x01, 0x80, 0x01, 0x34, 0x01, 0x2C
    .byte 0xDF, 0xDD, 0x31, 0x1C, 0x06, 0x29, 0xD8, 0xDD, 0x0A, 0xF0, 0xF4, 0xF8, 0x40, 0x21, 0x01, 0x40
    .byte 0x00, 0x29, 0x03, 0xD0, 0x46, 0x46, 0xF0, 0x68, 0x01, 0x38, 0xF0, 0x60, 0x0A, 0xF0, 0xEA, 0xF8
    .byte 0x80, 0x21, 0x01, 0x40, 0x00, 0x29, 0x03, 0xD0, 0x41, 0x46, 0xC8, 0x68, 0x01, 0x30, 0xC8, 0x60
    .byte 0x42, 0x46, 0xD0, 0x68, 0x00, 0x28, 0x03, 0xDA, 0x38, 0x4B, 0x58, 0x78, 0x01, 0x38, 0xD0, 0x60
    .byte 0x36, 0x4E, 0x70, 0x78, 0x01, 0x38, 0x42, 0x46, 0xD1, 0x68, 0x81, 0x42, 0x01, 0xDD, 0x00, 0x20
    .byte 0xD0, 0x60, 0x43, 0x46, 0xD8, 0x68, 0x87, 0x42, 0x44, 0xD0, 0x7C, 0x00, 0x4E, 0x46, 0x32, 0x19
    .byte 0x00, 0x20, 0x15, 0x21, 0x0B, 0xF0, 0xCE, 0xF9, 0x00, 0x25, 0x05, 0x80, 0x62, 0x1C, 0x4A, 0x44
    .byte 0x00, 0x20, 0x15, 0x21, 0x0B, 0xF0, 0xC6, 0xF9, 0x05, 0x80, 0x28, 0x49, 0x48, 0x68, 0xC0, 0x19
    .byte 0x00, 0x78, 0xA2, 0x46, 0x03, 0x28, 0x08, 0xD1, 0x25, 0x4A, 0x26, 0x4B, 0xD0, 0x18, 0x01, 0x88
    .byte 0x49, 0x08, 0x01, 0x20, 0x88, 0x43, 0x00, 0x28, 0x21, 0xD0, 0x00, 0x21, 0x00, 0x26, 0x4F, 0x1C
    .byte 0x0D, 0x1C, 0x16, 0x35, 0x4C, 0x46, 0x54, 0x44, 0xA4, 0x19, 0x00, 0x20, 0x29, 0x1C, 0x22, 0x1C
    .byte 0x0B, 0xF0, 0xA8, 0xF9, 0x01, 0x88, 0x1C, 0x4A, 0x11, 0x40, 0x01, 0x80, 0x00, 0x20, 0x29, 0x1C
    .byte 0x22, 0x1C, 0x0B, 0xF0, 0x9F, 0xF9, 0x01, 0x88, 0xF0, 0x23, 0x1B, 0x02, 0x1A, 0x1C, 0x11, 0x43
    .byte 0x01, 0x80, 0x01, 0x36, 0x01, 0x2E, 0xE5, 0xDD, 0x39, 0x1C, 0x06, 0x29, 0xDE, 0xDD, 0x8D, 0x20
    .byte 0x3C, 0xF0, 0xC8, 0xFD, 0x01, 0x26, 0x05, 0x96, 0x09, 0x20, 0x0A, 0xF0, 0xA9, 0xF8, 0x00, 0x28
    .byte 0x6C, 0xD0, 0x0A, 0x4F, 0x78, 0x68, 0x42, 0x46, 0xD1, 0x68, 0x40, 0x18, 0x00, 0x78, 0x03, 0x28
    .byte 0x14, 0xD1, 0x07, 0x4B, 0x07, 0x4E, 0x98, 0x19, 0x01, 0x88, 0x49, 0x08, 0x05, 0x98, 0x88, 0x43
    .byte 0x00, 0x28, 0x0B, 0xD1, 0x91, 0x20, 0x3C, 0xF0, 0xAD, 0xFD, 0x57, 0xE0, 0x4C, 0xB8, 0x0D, 0x08
    .byte 0x44, 0x2E, 0x00, 0x03, 0xEE, 0x0B, 0x00, 0x00, 0xFF, 0x0F, 0x00, 0x00, 0x8F, 0x20, 0x3C, 0xF0
    .byte 0xA1, 0xFD, 0x0C, 0x20, 0x48, 0xE0, 0x06, 0x49, 0x48, 0x68, 0x42, 0x46, 0xD1, 0x68, 0x40, 0x18
    .byte 0x00, 0x78, 0x07, 0x28, 0x3F, 0xD8, 0x80, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46
    .byte 0x4C, 0xB8, 0x0D, 0x08, 0x04, 0x34, 0x02, 0x08, 0x24, 0x34, 0x02, 0x08, 0x3C, 0x34, 0x02, 0x08
    .byte 0x4C, 0x34, 0x02, 0x08, 0x50, 0x34, 0x02, 0x08, 0x60, 0x34, 0x02, 0x08, 0x72, 0x34, 0x02, 0x08
    .byte 0x72, 0x34, 0x02, 0x08, 0x72, 0x34, 0x02, 0x08, 0x01, 0x20, 0x03, 0x4B, 0xFD, 0x26, 0xF6, 0x00
    .byte 0x99, 0x19, 0x08, 0x70, 0x01, 0x49, 0x1D, 0xE0, 0x44, 0x2E, 0x00, 0x03, 0x50, 0x5C, 0x00, 0x03
    .byte 0x02, 0x21, 0x02, 0x4F, 0xFD, 0x22, 0xD2, 0x00, 0xB8, 0x18, 0x10, 0xE0, 0x44, 0x2E, 0x00, 0x03
    .byte 0x03, 0x21, 0x08, 0xE0, 0x06, 0x21, 0x02, 0x4F, 0xFD, 0x22, 0xD2, 0x00, 0xB8, 0x18, 0x06, 0xE0
    .byte 0x44, 0x2E, 0x00, 0x03, 0x04, 0x21
    non_word_aligned_thumb_func_start sub_8023462
    sub_8023462:
    ldr r3, _08023590 @ =0x03002E44
    movs r6, #0xFD
    lsls r6, r6, #0x03
    adds r0, r3, r6
    strb r1, [r0, #0x00]
    ldr r1, _08023594 @ =0x03005C50
    movs r0, #0x01
    str r0, [r1, #0x00]
    movs r0, #0x0D
    mov r7, r8
    str r0, [r7, #0x00]
    thumb_func_start def_8022734
    def_8022734: @ 08023478
    ldr r0, [sp, #0x014]
    cmp r0, #0x00
    beq _08023484
    movs r0, #0x01
    bl map_setBufferDirty
    _08023484:
    mov r1, r8
    ldr r0, [r1, #0x00]
    cmp r0, #0x0A
    ble _0802355A
    ldr r0, _08023598 @ =0x03002E20
    ldr r0, [r0, #0x10]
    ldr r2, _0802359C @ =0x080E645C
    lsls r0, r0, #0x1A
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0802349C
    adds r0, #0x3F
    _0802349C:
    asrs r1, r0, #0x06
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r1
    ldr r1, _080235A0 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    subs r0, r0, r1
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r0, r0, #0x01
    mov r10, r0
    movs r2, #0x00
    str r2, [sp, #0x044]
    movs r3, #0x1F
    mov r9, r3
    movs r7, #0x1F
    ldr r6, _080235A4 @ =0x080AAD3C
    adds r6, #0x40
    str r6, [sp, #0x058]
    _080234CC:
    ldr r0, [sp, #0x044]
    lsls r0, r0, #0x01
    str r0, [sp, #0x06C]
    ldr r1, _080235A4 @ =0x080AAD3C
    adds r0, r0, r1
    ldrh r4, [r0, #0x00]
    adds r5, r4, #0x0
    ands r5, r7
    lsrs r6, r4, #0x05
    mov r2, r9
    ands r6, r2
    lsrs r4, r4, #0x0A
    ands r4, r2
    ldr r3, [sp, #0x058]
    ldrh r1, [r3, #0x00]
    adds r0, r1, #0x0
    ands r0, r7
    lsrs r2, r1, #0x05
    mov r3, r9
    ands r2, r3
    lsrs r1, r1, #0x0A
    ands r1, r3
    subs r0, r0, r5
    mov r3, r10
    muls r3, r0
    adds r0, r3, #0x0
    asrs r0, r0, #0x0F
    adds r5, r5, r0
    lsls r5, r5, #0x10
    lsrs r5, r5, #0x10
    subs r2, r2, r6
    mov r0, r10
    muls r0, r2
    asrs r0, r0, #0x0F
    adds r6, r6, r0
    lsls r6, r6, #0x10
    lsrs r6, r6, #0x10
    subs r1, r1, r4
    mov r0, r10
    muls r0, r1
    asrs r0, r0, #0x0F
    adds r4, r4, r0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    movs r0, #0x00
    bl pltt_getBuffer
    ldr r1, [sp, #0x06C]
    adds r3, r1, r0
    movs r2, #0xE0
    lsls r2, r2, #0x01
    adds r3, r3, r2
    ands r5, r7
    ands r6, r7
    lsls r6, r6, #0x05
    orrs r5, r6
    ands r4, r7
    lsls r4, r4, #0x0A
    orrs r5, r4
    strh r5, [r3, #0x00]
    ldr r3, [sp, #0x058]
    adds r3, #0x02
    str r3, [sp, #0x058]
    ldr r6, [sp, #0x044]
    adds r6, #0x01
    str r6, [sp, #0x044]
    cmp r6, #0x0F
    ble _080234CC
    movs r0, #0x01
    bl pltt_setDirtyFlag
    _0802355A:
    mov r7, r8
    ldr r0, [r7, #0x00]
    cmp r0, #0x0D
    beq _0802357E
    cmp r0, #0x06
    ble _0802357E
    ldr r0, [r7, #0x14]
    cmp r0, #0x00
    beq _0802357E
    ldr r0, _080235A8 @ =0x080C978C
    mov r1, r8
    adds r1, #0x18
    movs r2, #0x00
    str r2, [sp, #0x000]
    str r2, [sp, #0x004]
    movs r3, #0x00
    bl oam_renderCellData
    _0802357E:
    add sp, #0x070
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _08023590: .4byte 0x03002E44
    _08023594: .4byte 0x03005C50
    _08023598: .4byte 0x03002E20
    _0802359C: .4byte gSinTable
    _080235A0: .4byte 0x000003FF
    _080235A4: .4byte 0x080AAD3C
    _080235A8: .4byte 0x080C978C
    thumb_func_start sub_80235AC
    sub_80235AC:
    push {r4, r5, r6, r7, lr}
    adds r6, r0, #0x0
    adds r7, r1, #0x0
    adds r5, r2, #0x0
    ldr r0, _08023608 @ =0x03002E20
    ldr r1, _0802360C @ =0x0000080A
    adds r0, r0, r1
    ldrh r4, [r0, #0x00]
    lsrs r4, r4, #0x08
    movs r0, #0x0F
    ands r4, r0
    subs r4, #0x01
    adds r0, r6, #0x0
    adds r1, r4, #0x0
    bl sub_803DAB8
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    str r0, [r5, #0x00]
    str r4, [r7, #0x00]
    cmp r4, #0x00
    blt _08023600
    _080235D8:
    adds r0, r6, #0x0
    adds r1, r4, #0x0
    bl sub_803DAB8
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    ldr r1, [r5, #0x00]
    cmp r1, r0
    blt _080235FA
    adds r0, r6, #0x0
    adds r1, r4, #0x0
    bl sub_803DAB8
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    str r0, [r5, #0x00]
    str r4, [r7, #0x00]
    _080235FA:
    subs r4, #0x01
    cmp r4, #0x00
    bge _080235D8
    _08023600:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _08023608: .4byte 0x03002E20
    _0802360C: .4byte 0x0000080A
    thumb_func_start sub_8023610
    sub_8023610:
    push {r4, lr}
    ldr r4, _0802365C @ =0x080AACF0
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r0, #0xE0
    lsls r0, r0, #0x01
    adds r1, r1, r0
    adds r0, r4, #0x0
    movs r2, #0x10
    bl CpuFastSet
    movs r0, #0x01
    bl pltt_setDirtyFlag
    movs r4, #0x00
    bl sub_802DC88
    cmp r0, #0x00
    beq _08023642
    bl sub_802DCB4
    cmp r0, #0x00
    bne _08023644
    _08023642:
    movs r4, #0x01
    _08023644:
    cmp r4, #0x00
    beq _08023668
    bl dmaq_getVBlankDmaQueue
    ldr r1, _08023660 @ =0x080AAE3C
    movs r2, #0xC0
    lsls r2, r2, #0x13
    ldr r3, _08023664 @ =0x80000400
    bl dmaq_enqueue
    b _08023686
    .byte 0x00, 0x00
    _0802365C: .4byte 0x080AACF0
    _08023660: .4byte 0x080AAE3C
    _08023664: .4byte 0x80000400
    _08023668:
    bl dmaq_getVBlankDmaQueue
    ldr r1, _080236B8 @ =0x080AAE3C
    movs r2, #0xC0
    lsls r2, r2, #0x13
    ldr r3, _080236BC @ =0x80000230
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _080236C0 @ =0x080AD8BC
    ldr r2, _080236C4 @ =0x06000080
    ldr r3, _080236C8 @ =0x800000E0
    bl dmaq_enqueue
    _08023686:
    bl dmaq_getVBlankDmaQueue
    ldr r1, _080236CC @ =0x0809C4FC
    ldr r2, _080236D0 @ =0x06000800
    ldr r3, _080236D4 @ =0x80000600
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _080236D8 @ =0x080AC6FC
    ldr r2, _080236DC @ =0x06001400
    ldr r3, _080236E0 @ =0x80000200
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _080236E4 @ =0x080ABEFC
    ldr r2, _080236E8 @ =0x06002000
    ldr r3, _080236EC @ =0x80000400
    bl dmaq_enqueue
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _080236B8: .4byte 0x080AAE3C
    _080236BC: .4byte 0x80000230
    _080236C0: .4byte 0x080AD8BC
    _080236C4: .4byte 0x06000080
    _080236C8: .4byte 0x800000E0
    _080236CC: .4byte 0x0809C4FC
    _080236D0: .4byte 0x06000800
    _080236D4: .4byte 0x80000600
    _080236D8: .4byte 0x080AC6FC
    _080236DC: .4byte 0x06001400
    _080236E0: .4byte 0x80000200
    _080236E4: .4byte 0x080ABEFC
    _080236E8: .4byte 0x06002000
    _080236EC: .4byte 0x80000400
    thumb_func_start sub_80236F0
    sub_80236F0:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x018
    str r0, [sp, #0x000]
    ldr r0, _08023730 @ =0x03002E20
    movs r1, #0x24
    adds r1, r1, r0
    mov r9, r1
    ldr r2, _08023734 @ =0x000007FB
    adds r0, r0, r2
    ldrb r6, [r0, #0x00]
    movs r4, #0x00
    bl sub_802DC88
    cmp r0, #0x00
    beq _0802371E
    bl sub_802DCB4
    cmp r0, #0x00
    bne _08023720
    _0802371E:
    movs r4, #0x01
    _08023720:
    cmp r6, #0x03
    beq _0802375C
    cmp r6, #0x03
    bgt _08023738
    cmp r6, #0x02
    beq _0802373E
    b _08023794
    .byte 0x00, 0x00
    _08023730: .4byte 0x03002E20
    _08023734: .4byte 0x000007FB
    _08023738:
    cmp r6, #0x04
    beq _08023770
    b _08023794
    _0802373E:
    cmp r4, #0x00
    beq _0802374C
    ldr r0, _08023748 @ =0x0809D0FC
    b _0802374E
    .byte 0x00, 0x00
    _08023748: .4byte 0x0809D0FC
    _0802374C:
    ldr r0, _08023758 @ =0x0809D34C
    _0802374E:
    ldr r1, [sp, #0x000]
    bl LZ77UnCompWram
    b _08023794
    .byte 0x00, 0x00
    _08023758: .4byte 0x0809D34C
    _0802375C:
    cmp r4, #0x00
    beq _08023768
    ldr r0, _08023764 @ =0x0809D538
    b _08023776
    _08023764: .4byte 0x0809D538
    _08023768:
    ldr r0, _0802376C @ =0x0809DA38
    b _08023776
    _0802376C: .4byte 0x0809DA38
    _08023770:
    cmp r4, #0x00
    beq _08023788
    ldr r0, _08023784 @ =0x0809DF38
    _08023776:
    movs r2, #0xA0
    lsls r2, r2, #0x01
    ldr r1, [sp, #0x000]
    bl CpuFastSet
    b _08023794
    .byte 0x00, 0x00
    _08023784: .4byte 0x0809DF38
    _08023788:
    ldr r0, _080237A4 @ =0x0809E438
    movs r2, #0xA0
    lsls r2, r2, #0x01
    ldr r1, [sp, #0x000]
    bl CpuFastSet
    _08023794:
    cmp r6, #0x03
    beq _080237A8
    cmp r6, #0x03
    ble _08023856
    cmp r6, #0x04
    beq _08023804
    b _08023856
    .byte 0x00, 0x00
    _080237A4: .4byte 0x0809E438
    _080237A8:
    movs r0, #0x00
    _080237AA:
    movs r4, #0x00
    adds r1, r0, #0x1
    mov r8, r1
    cmp r4, r6
    bge _080237F4
    adds r7, r0, #0x4
    lsls r0, r7, #0x06
    ldr r2, [sp, #0x000]
    adds r3, r2, r0
    movs r5, #0x00
    _080237BE:
    lsls r1, r4, #0x02
    ldr r0, _080237FC @ =0x000007F4
    add r0, r9
    adds r0, r0, r1
    ldr r2, [r0, #0x00]
    lsls r0, r7, #0x05
    adds r0, r0, r5
    lsls r0, r0, #0x01
    ldr r1, _08023800 @ =0x0809D53C
    adds r0, r0, r1
    adds r2, #0xBA
    ldrh r2, [r2, #0x00]
    lsrs r2, r2, #0x01
    lsls r1, r2, #0x03
    subs r1, r1, r2
    lsls r1, r1, #0x01
    adds r1, #0x04
    adds r1, r3, r1
    movs r2, #0x07
    str r3, [sp, #0x014]
    bl CpuSet
    adds r5, #0x07
    adds r4, #0x01
    ldr r3, [sp, #0x014]
    cmp r4, r6
    blt _080237BE
    _080237F4:
    mov r0, r8
    cmp r0, #0x03
    ble _080237AA
    b _08023856
    _080237FC: .4byte 0x000007F4
    _08023800: .4byte 0x0809D53C
    _08023804:
    movs r0, #0x00
    _08023806:
    movs r4, #0x00
    adds r1, r0, #0x1
    mov r8, r1
    cmp r4, r6
    bge _08023850
    adds r7, r0, #0x4
    lsls r0, r7, #0x06
    ldr r2, [sp, #0x000]
    adds r3, r2, r0
    movs r5, #0x00
    _0802381A:
    lsls r1, r4, #0x02
    ldr r0, _08023894 @ =0x000007F4
    add r0, r9
    adds r0, r0, r1
    ldr r2, [r0, #0x00]
    lsls r0, r7, #0x05
    adds r0, r0, r5
    lsls r0, r0, #0x01
    ldr r1, _08023898 @ =0x0809DF3A
    adds r0, r0, r1
    adds r2, #0xBA
    ldrh r2, [r2, #0x00]
    lsrs r2, r2, #0x01
    lsls r1, r2, #0x03
    subs r1, r1, r2
    lsls r1, r1, #0x01
    adds r1, #0x02
    adds r1, r3, r1
    movs r2, #0x07
    str r3, [sp, #0x014]
    bl CpuSet
    adds r5, #0x07
    adds r4, #0x01
    ldr r3, [sp, #0x014]
    cmp r4, r6
    blt _0802381A
    _08023850:
    mov r0, r8
    cmp r0, #0x03
    ble _08023806
    _08023856:
    movs r4, #0x00
    cmp r4, r6
    bge _0802390C
    ldr r0, _08023894 @ =0x000007F4
    add r0, r9
    str r0, [sp, #0x004]
    ldr r1, _0802389C @ =0x080DB8CC
    mov r10, r1
    subs r0, r6, #0x2
    lsls r0, r0, #0x03
    str r0, [sp, #0x00C]
    ldr r0, _080238A0 @ =0x00000814
    add r0, r9
    ldr r0, [r0, #0x00]
    str r0, [sp, #0x008]
    adds r0, #0xBA
    str r0, [sp, #0x010]
    _08023878:
    lsls r1, r4, #0x02
    ldr r2, [sp, #0x004]
    adds r0, r2, r1
    ldr r0, [r0, #0x00]
    adds r7, r4, #0x1
    ldr r2, [sp, #0x008]
    cmp r2, r0
    bne _08023906
    movs r3, #0x00
    mov r12, r3
    cmp r6, #0x02
    bne _080238A4
    lsls r0, r4, #0x01
    b _080238BA
    _08023894: .4byte 0x000007F4
    _08023898: .4byte 0x0809DF3A
    _0802389C: .4byte 0x080DB8CC
    _080238A0: .4byte 0x00000814
    _080238A4:
    cmp r6, #0x02
    blt _080238CC
    cmp r6, #0x04
    bgt _080238CC
    ldr r1, [sp, #0x010]
    ldrh r0, [r1, #0x00]
    lsrs r0, r0, #0x01
    lsls r0, r0, #0x01
    ldr r2, [sp, #0x00C]
    adds r0, r2, r0
    lsls r1, r0, #0x01
    _080238BA:
    add r1, r10
    movs r2, #0x00
    ldsh r3, [r1, r2]
    adds r0, #0x01
    lsls r0, r0, #0x01
    add r0, r10
    movs r2, #0x00
    ldsh r1, [r0, r2]
    mov r12, r1
    _080238CC:
    movs r2, #0x00
    adds r7, r4, #0x1
    ldr r0, _0802391C @ =0x00000FFF
    mov r9, r0
    lsls r5, r3, #0x01
    movs r1, #0xE0
    lsls r1, r1, #0x08
    mov r8, r1
    _080238DC:
    mov r1, r12
    adds r0, r1, r2
    adds r4, r2, #0x1
    lsls r0, r0, #0x06
    adds r0, r5, r0
    ldr r1, [sp, #0x000]
    adds r2, r0, r1
    movs r3, #0x02
    _080238EC:
    ldrh r1, [r2, #0x00]
    mov r0, r9
    ands r0, r1
    mov r1, r8
    orrs r0, r1
    strh r0, [r2, #0x00]
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _080238EC
    adds r2, r4, #0x0
    cmp r2, #0x01
    ble _080238DC
    _08023906:
    adds r4, r7, #0x0
    cmp r4, r6
    blt _08023878
    _0802390C:
    add sp, #0x018
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    _0802391C: .4byte 0x00000FFF
    thumb_func_start sub_8023920
    sub_8023920:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x01C
    str r0, [sp, #0x000]
    ldr r0, _08023964 @ =0x03002E20
    ldr r1, _08023968 @ =0x000007FB
    adds r0, r0, r1
    ldrb r2, [r0, #0x00]
    movs r4, #0x00
    cmp r4, r2
    blt _0802393E
    b _08023A6E
    _0802393E:
    lsls r1, r4, #0x02
    ldr r3, _0802396C @ =0x03002E44
    ldr r5, _08023970 @ =0x000007F4
    adds r0, r3, r5
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov r8, r0
    movs r0, #0x00
    str r0, [sp, #0x004]
    mov r10, r0
    str r1, [sp, #0x010]
    cmp r2, #0x03
    beq _08023988
    cmp r2, #0x03
    bgt _08023974
    cmp r2, #0x02
    beq _0802397A
    b _080239B2
    .byte 0x00, 0x00
    _08023964: .4byte 0x03002E20
    _08023968: .4byte 0x000007FB
    _0802396C: .4byte 0x03002E44
    _08023970: .4byte 0x000007F4
    _08023974:
    cmp r2, #0x04
    beq _0802399E
    b _080239B2
    _0802397A:
    lsls r0, r4, #0x03
    subs r0, r0, r4
    adds r0, #0x06
    str r0, [sp, #0x004]
    movs r1, #0x0C
    mov r10, r1
    b _080239B2
    _08023988:
    mov r0, r8
    adds r0, #0xBA
    ldrh r1, [r0, #0x00]
    lsrs r1, r1, #0x01
    lsls r0, r1, #0x03
    subs r0, r0, r1
    adds r0, #0x06
    str r0, [sp, #0x004]
    movs r3, #0x08
    mov r10, r3
    b _080239B2
    _0802399E:
    mov r0, r8
    adds r0, #0xBA
    ldrh r1, [r0, #0x00]
    lsrs r1, r1, #0x01
    lsls r0, r1, #0x03
    subs r0, r0, r1
    adds r0, #0x05
    str r0, [sp, #0x004]
    movs r5, #0x08
    mov r10, r5
    _080239B2:
    movs r3, #0x00
    subs r0, r2, #0x1
    mov r9, r0
    adds r4, #0x01
    str r4, [sp, #0x00C]
    cmp r3, r9
    bge _08023A66
    ldr r1, _08023AD4 @ =0x03002E44
    ldr r4, _08023AD8 @ =0x00000814
    adds r0, r1, r4
    ldr r0, [r0, #0x00]
    str r0, [sp, #0x008]
    _080239CA:
    movs r7, #0xF0
    lsls r7, r7, #0x08
    ldr r5, [sp, #0x008]
    cmp r5, r8
    bne _080239D8
    movs r7, #0xE0
    lsls r7, r7, #0x08
    _080239D8:
    movs r1, #0x02
    cmp r2, #0x03
    bne _080239E0
    movs r1, #0x03
    _080239E0:
    ldr r0, _08023ADC @ =0x03002C40
    ldr r4, [sp, #0x010]
    adds r5, r3, r4
    adds r5, r5, r0
    adds r0, r3, #0x0
    muls r0, r1
    add r0, r10
    ldr r1, [sp, #0x004]
    lsls r4, r1, #0x01
    lsls r0, r0, #0x06
    ldr r1, [sp, #0x000]
    adds r0, r0, r1
    adds r4, r4, r0
    ldrb r0, [r5, #0x00]
    movs r1, #0x0A
    str r2, [sp, #0x014]
    str r3, [sp, #0x018]
    bl __udivsi3
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r0, r1
    orrs r0, r7
    strh r0, [r4, #0x00]
    adds r6, r4, #0x0
    adds r6, #0x40
    ldrb r0, [r5, #0x00]
    movs r1, #0x0A
    bl __udivsi3
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    movs r1, #0x90
    lsls r1, r1, #0x01
    adds r0, r0, r1
    orrs r0, r7
    strh r0, [r6, #0x00]
    ldrb r0, [r5, #0x00]
    movs r1, #0x0A
    bl __umodsi3
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r0, r1
    orrs r0, r7
    strh r0, [r4, #0x02]
    adds r4, #0x42
    ldrb r0, [r5, #0x00]
    movs r1, #0x0A
    bl __umodsi3
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    movs r5, #0x90
    lsls r5, r5, #0x01
    adds r0, r0, r5
    orrs r7, r0
    strh r7, [r4, #0x00]
    ldr r3, [sp, #0x018]
    adds r3, #0x01
    ldr r2, [sp, #0x014]
    cmp r3, r9
    blt _080239CA
    _08023A66:
    ldr r4, [sp, #0x00C]
    cmp r4, r2
    bge _08023A6E
    b _0802393E
    _08023A6E:
    ldr r6, [sp, #0x000]
    adds r6, #0x78
    ldr r0, _08023AE0 @ =0x030029D4
    ldrb r0, [r0, #0x00]
    mov r8, r0
    movs r1, #0x0A
    bl __udivsi3
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r4, r1, #0x0
    adds r1, r0, r4
    ldr r2, _08023AE4 @ =0xFFFFF000
    adds r5, r2, #0x0
    orrs r1, r5
    strh r1, [r6, #0x00]
    ldr r1, [sp, #0x000]
    adds r1, #0xB8
    movs r3, #0x90
    lsls r3, r3, #0x01
    adds r6, r3, #0x0
    adds r0, r0, r6
    orrs r0, r5
    strh r0, [r1, #0x00]
    ldr r7, [sp, #0x000]
    adds r7, #0x7A
    mov r0, r8
    movs r1, #0x0A
    bl __umodsi3
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    adds r4, r0, r4
    orrs r4, r5
    strh r4, [r7, #0x00]
    ldr r1, [sp, #0x000]
    adds r1, #0xBA
    adds r0, r0, r6
    orrs r0, r5
    strh r0, [r1, #0x00]
    add sp, #0x01C
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _08023AD4: .4byte 0x03002E44
    _08023AD8: .4byte 0x00000814
    _08023ADC: .4byte 0x03002C40
    _08023AE0: .4byte 0x030029D4
    _08023AE4: .4byte 0xFFFFF000
    thumb_func_start sub_8023AE8
    sub_8023AE8:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x074
    bl sub_800EDE4
    mov r9, r0
    ldr r0, _08023B24 @ =0x03002E20
    adds r3, r0, #0x0
    adds r3, #0x24
    ldr r1, _08023B28 @ =0x000007FB
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    str r0, [sp, #0x004]
    movs r2, #0x00
    str r2, [sp, #0x008]
    mov r4, r9
    ldr r0, [r4, #0x00]
    cmp r0, #0x0C
    bls _08023B18
    bl def_8023B20
    _08023B18:
    lsls r0, r0, #0x02
    ldr r1, _08023B2C @ =0x08023B30
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
    _08023B24: .4byte 0x03002E20
    _08023B28: .4byte 0x000007FB
    _08023B2C: .4byte 0x08023B30
    .byte 0x64, 0x3B, 0x02, 0x08, 0x88, 0x3B, 0x02, 0x08, 0xDC, 0x3B, 0x02, 0x08, 0x88, 0x3E, 0x02, 0x08
    .byte 0x24, 0x3F, 0x02, 0x08, 0xAC, 0x42, 0x02, 0x08, 0xA4, 0x44, 0x02, 0x08, 0xCC, 0x44, 0x02, 0x08
    .byte 0x0C, 0x45, 0x02, 0x08, 0x18, 0x45, 0x02, 0x08, 0x70, 0x45, 0x02, 0x08, 0x6C, 0x47, 0x02, 0x08
    .byte 0xCA, 0x47, 0x02, 0x08, 0x00, 0x20, 0x4E, 0x46, 0x70, 0x60, 0x2B, 0xF0, 0x01, 0xFD, 0x05, 0x49
    .byte 0x08, 0x78, 0x62, 0x28, 0x01, 0xD8, 0x01, 0x30, 0x08, 0x70, 0x01, 0x20, 0x4F, 0x46, 0x38, 0x60
    .byte 0x00, 0xF0, 0x23, 0xFE, 0xD4, 0x29, 0x00, 0x03, 0x0C, 0xF0, 0x54, 0xFC, 0x04, 0x1C, 0x0F, 0x4D
    .byte 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0A, 0xF0, 0x8B, 0xFD, 0x02, 0x1C, 0x0C, 0x4B, 0x20, 0x1C
    .byte 0x29, 0x1C, 0x0C, 0xF0, 0x1F, 0xFC, 0x0C, 0xF0, 0x45, 0xFC, 0x04, 0x1C, 0x09, 0x4D, 0x01, 0x20
    .byte 0x00, 0x21, 0x00, 0x22, 0x0A, 0xF0, 0x7C, 0xFD, 0x02, 0x1C, 0x07, 0x4B, 0x20, 0x1C, 0x29, 0x1C
    .byte 0x0C, 0xF0, 0x10, 0xFC, 0x02, 0x20, 0x49, 0x46, 0x00, 0xF0, 0xFE, 0xFD, 0x28, 0xEC, 0x03, 0x02
    .byte 0x80, 0x02, 0x00, 0x81, 0x00, 0x38, 0x00, 0x06, 0x80, 0x02, 0x00, 0x80, 0xA4, 0x48, 0x00, 0x69
    .byte 0x01, 0x21, 0x08, 0x40, 0x00, 0x28, 0x03, 0xD0, 0x4A, 0x46, 0x50, 0x68, 0x01, 0x30, 0x50, 0x60
    .byte 0x4B, 0x46, 0x58, 0x68, 0x09, 0x28, 0x00, 0xDD, 0x3C, 0xE1, 0x40, 0x42, 0x80, 0x46, 0x44, 0x46
    .byte 0x1A, 0x94, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0A, 0xF0, 0x52, 0xFD, 0x03, 0x90, 0x00, 0x20
    .byte 0x00, 0x21, 0x00, 0x22, 0x0A, 0xF0, 0x4C, 0xFD, 0x82, 0x46, 0x00, 0x21, 0x4D, 0x1C, 0x46, 0x46
    .byte 0xAC, 0x19, 0x60, 0x01, 0x69, 0x01, 0x04, 0x31, 0x04, 0x30, 0x1A, 0x9F, 0x38, 0x18, 0x3A, 0x1C
    .byte 0x04, 0x32, 0x07, 0x26, 0x40, 0x00, 0x57, 0x46, 0xC3, 0x19, 0x49, 0x00, 0x03, 0x98, 0x09, 0x18
    .byte 0x00, 0x2A, 0x07, 0xDB, 0x00, 0x2C, 0x05, 0xDB, 0x1D, 0x2A, 0x03, 0xDC, 0x13, 0x2C, 0x01, 0xDC
    .byte 0x08, 0x88, 0x18, 0x80, 0x02, 0x31, 0x02, 0x33, 0x01, 0x32, 0x01, 0x3E, 0x00, 0x2E, 0xEF, 0xDA
    .byte 0x29, 0x1C, 0x03, 0x29, 0xDA, 0xDB, 0x49, 0x46, 0x48, 0x68, 0x1A, 0x90, 0x42, 0x42, 0x04, 0x92
    .byte 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0A, 0xF0, 0x1B, 0xFD, 0x82, 0x46, 0x00, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x0A, 0xF0, 0x15, 0xFD, 0x80, 0x46, 0x00, 0x21, 0x4D, 0x1C, 0x04, 0x9B, 0xEC, 0x18
    .byte 0x60, 0x01, 0x69, 0x01, 0x11, 0x31, 0x11, 0x30, 0x1A, 0x9E, 0x30, 0x18, 0x32, 0x1C, 0x11, 0x32
    .byte 0x0C, 0x26, 0x40, 0x00, 0x47, 0x46, 0xC3, 0x19, 0x49, 0x00, 0x51, 0x44, 0x00, 0x2A, 0x07, 0xDB
    .byte 0x00, 0x2C, 0x05, 0xDB, 0x1D, 0x2A, 0x03, 0xDC, 0x13, 0x2C, 0x01, 0xDC, 0x08, 0x88, 0x18, 0x80
    .byte 0x02, 0x31, 0x02, 0x33, 0x01, 0x32, 0x01, 0x3E, 0x00, 0x2E, 0xEF, 0xDA, 0x29, 0x1C, 0x03, 0x29
    .byte 0xDB, 0xDB, 0x49, 0x46, 0x48, 0x68, 0x47, 0x42, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0A, 0xF0
    .byte 0xE7, 0xFC, 0x82, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0A, 0xF0, 0xE1, 0xFC, 0x80, 0x46
    .byte 0x00, 0x20, 0x00, 0x24, 0x85, 0x1C, 0x01, 0x30, 0x84, 0x46, 0x2B, 0x1C, 0x98, 0x01, 0x56, 0x46
    .byte 0x82, 0x19, 0x58, 0x01, 0x38, 0x18, 0x40, 0x00, 0x46, 0x46, 0x81, 0x19, 0xE0, 0x19, 0x00, 0x28
    .byte 0x07, 0xDB, 0x00, 0x2D, 0x05, 0xDB, 0x1D, 0x28, 0x03, 0xDC, 0x13, 0x2B, 0x01, 0xDC, 0x10, 0x88
    .byte 0x08, 0x80, 0x02, 0x32, 0x02, 0x31, 0x01, 0x34, 0x05, 0x2C, 0xEF, 0xDB, 0x60, 0x46, 0x0D, 0x28
    .byte 0xDF, 0xDB, 0x4F, 0x46, 0x78, 0x68, 0x40, 0x42, 0x82, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x0A, 0xF0, 0xB6, 0xFC, 0x07, 0x1C, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0A, 0xF0, 0xB0, 0xFC
    .byte 0x80, 0x46, 0x00, 0x20, 0x00, 0x23, 0x51, 0x46, 0x45, 0x18, 0x46, 0x1C, 0x2C, 0x1C, 0x61, 0x01
    .byte 0x04, 0x31, 0x40, 0x01, 0x02, 0x1D, 0x49, 0x00, 0x41, 0x44, 0x18, 0x1D, 0x00, 0x28, 0x09, 0xDB
    .byte 0x00, 0x2D, 0x07, 0xDB, 0x1D, 0x28, 0x05, 0xDC, 0x13, 0x2C, 0x03, 0xDC, 0x50, 0x00, 0xC0, 0x19
    .byte 0x00, 0x88, 0x08, 0x80, 0x02, 0x31, 0x01, 0x32, 0x01, 0x33, 0x0D, 0x2B, 0xED, 0xDB, 0x30, 0x1C
    .byte 0x05, 0x28, 0xDF, 0xDB, 0x4A, 0x46, 0x57, 0x68, 0x05, 0x97, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x0A, 0xF0, 0x86, 0xFC, 0x82, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0A, 0xF0, 0x80, 0xFC
    .byte 0x80, 0x46, 0x00, 0x20, 0x4B, 0x46, 0x5B, 0x68, 0x9C, 0x46, 0x01, 0x1C, 0x0B, 0x31, 0x01, 0x30
    .byte 0x1B, 0x90, 0x05, 0x9E, 0x8C, 0x19, 0x60, 0x01, 0x49, 0x01, 0x15, 0x31, 0x15, 0x30, 0x38, 0x18
    .byte 0x3A, 0x1C, 0x15, 0x32, 0x09, 0x25, 0x40, 0x00, 0x46, 0x46, 0x83, 0x19, 0x49, 0x00, 0x51, 0x44
    .byte 0x00, 0x2A, 0x07, 0xDB, 0x00, 0x2C, 0x05, 0xDB, 0x1D, 0x2A, 0x03, 0xDC, 0x13, 0x2C, 0x01, 0xDC
    .byte 0x08, 0x88, 0x18, 0x80, 0x02, 0x31, 0x02, 0x33, 0x01, 0x32, 0x01, 0x3D, 0x00, 0x2D, 0xEF, 0xDA
    .byte 0x1B, 0x98, 0x0A, 0x28, 0xD9, 0xDB, 0x67, 0x46, 0x7F, 0x42, 0xBA, 0x46, 0x01, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x0A, 0xF0, 0x4D, 0xFC, 0x80, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0A, 0xF0
    .byte 0x47, 0xFC, 0x07, 0x1C, 0x00, 0x21, 0x00, 0x20, 0x0D, 0x1C, 0x10, 0x35, 0x4E, 0x1C, 0x2C, 0x1C
    .byte 0x63, 0x01, 0x01, 0x30, 0x52, 0x46, 0x81, 0x18, 0x02, 0x1C, 0x00, 0x29, 0x0D, 0xDB, 0x00, 0x2D
    .byte 0x0B, 0xDB, 0x1D, 0x29, 0x09, 0xDC, 0x13, 0x2C, 0x07, 0xDC, 0x58, 0x18, 0x40, 0x00, 0xC0, 0x19
    .byte 0x99, 0x18, 0x49, 0x00, 0x41, 0x44, 0x09, 0x88, 0x01, 0x80, 0x10, 0x1C, 0x06, 0x28, 0xE8, 0xDB
    .byte 0x31, 0x1C, 0x03, 0x29, 0xDF, 0xDB, 0x01, 0x23, 0x02, 0x93, 0x00, 0xF0, 0xAE, 0xFC, 0x00, 0x00
    .byte 0x20, 0x2E, 0x00, 0x03, 0x00, 0x20, 0x4C, 0x46, 0x60, 0x60, 0x03, 0x20, 0x20, 0x60, 0x11, 0x20
    .byte 0x3C, 0xF0, 0x4E, 0xF8, 0x00, 0xF0, 0xA1, 0xFC, 0xFF, 0xF7, 0xC2, 0xFB, 0x01, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x0A, 0xF0, 0x0D, 0xFC, 0xFF, 0xF7, 0x2B, 0xFC, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x0A, 0xF0, 0x06, 0xFC, 0xFF, 0xF7, 0x3C, 0xFD, 0x00, 0x25, 0x01, 0x9E, 0xB5, 0x42, 0x29, 0xDA
    .byte 0x18, 0x48, 0x4C, 0x46, 0x10, 0x34, 0x18, 0x4F, 0xC6, 0x19, 0x30, 0x68, 0x4C, 0x30, 0x01, 0x78
    .byte 0x07, 0x20, 0x08, 0x40, 0xEA, 0xF7, 0x74, 0xFF, 0x00, 0x21, 0x20, 0x70, 0x61, 0x70, 0x61, 0x80
    .byte 0x12, 0x48, 0x00, 0x78, 0x00, 0x06, 0x00, 0x16, 0xA8, 0x42, 0x00, 0xD1, 0x02, 0x21, 0xE1, 0x80
    .byte 0x00, 0x20, 0x0A, 0xF0, 0xA5, 0xFB, 0x29, 0x1C, 0x0A, 0x31, 0x49, 0x01, 0x40, 0x18, 0xE0, 0x60
    .byte 0x68, 0x02, 0x0B, 0x49, 0x40, 0x18, 0x20, 0x61, 0x14, 0x34, 0x04, 0x36, 0x01, 0x35, 0x01, 0x9A
    .byte 0x95, 0x42, 0xDA, 0xDB, 0x00, 0x20, 0x4B, 0x46, 0x58, 0x60, 0x98, 0x60, 0x04, 0x20, 0x18, 0x60
    .byte 0x00, 0xF0, 0x5B, 0xFC, 0x20, 0x2E, 0x00, 0x03, 0x18, 0x08, 0x00, 0x00, 0x80, 0x2C, 0x00, 0x03
    .byte 0x00, 0x18, 0x00, 0x06, 0x4C, 0x46, 0xA0, 0x68, 0x01, 0x30, 0xA0, 0x60, 0x00, 0x28, 0x00, 0xDC
    .byte 0xAB, 0xE1, 0x00, 0x21, 0xA1, 0x60, 0x60, 0x68, 0x01, 0x30, 0x60, 0x60, 0x2F, 0x28, 0x00, 0xDD
    .byte 0x9F, 0xE1, 0x00, 0x91, 0x00, 0x20, 0x00, 0x22, 0x0A, 0xF0, 0xB2, 0xFB, 0x01, 0x1C, 0x1E, 0x4A
    .byte 0x68, 0x46, 0x3D, 0xF0, 0xFB, 0xF9, 0x61, 0x68, 0x20, 0x20, 0x40, 0x1A, 0x00, 0x28, 0x00, 0xDA
    .byte 0x00, 0x20, 0x06, 0x1C, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0A, 0xF0, 0xA1, 0xFB, 0x80, 0x46
    .byte 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0A, 0xF0, 0x9B, 0xFB, 0x07, 0x1C, 0x00, 0x23, 0x00, 0x24
    .byte 0x5D, 0x1C, 0x98, 0x01, 0x41, 0x46, 0x42, 0x18, 0x58, 0x01, 0x30, 0x18, 0x40, 0x00, 0xC1, 0x19
    .byte 0xA0, 0x19, 0x00, 0x28, 0x07, 0xDB, 0x00, 0x2B, 0x05, 0xDB, 0x1D, 0x28, 0x03, 0xDC, 0x13, 0x2B
    .byte 0x01, 0xDC, 0x10, 0x88, 0x08, 0x80, 0x02, 0x32, 0x02, 0x31, 0x01, 0x34, 0x20, 0x2C, 0xEF, 0xDB
    .byte 0x2B, 0x1C, 0x03, 0x2B, 0xE3, 0xDB, 0x01, 0x9A, 0x03, 0x2A, 0x57, 0xD0, 0x03, 0x2A, 0x05, 0xDC
    .byte 0x02, 0x2A, 0x08, 0xD0, 0x5A, 0xE1, 0x00, 0x00, 0x40, 0x01, 0x00, 0x01, 0x01, 0x9B, 0x04, 0x2B
    .byte 0x00, 0xD1, 0xD0, 0xE0, 0x52, 0xE1, 0x00, 0x25, 0x68, 0x00, 0x40, 0x19, 0x23, 0x30, 0x4C, 0x46
    .byte 0x61, 0x68, 0x41, 0x1A, 0x00, 0x29, 0x00, 0xDA, 0x00, 0x21, 0xA8, 0x00, 0x40, 0x19, 0x40, 0x00
    .byte 0x1A, 0x90, 0x06, 0x91, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0A, 0xF0, 0x59, 0xFB, 0x07, 0x90
    .byte 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0A, 0xF0, 0x53, 0xFB, 0x08, 0x90, 0x00, 0x20, 0x01, 0x35
    .byte 0xA8, 0x46, 0x06, 0x9E, 0x1A, 0x9F, 0xF6, 0x19, 0xB2, 0x46, 0xC5, 0x1D, 0x01, 0x30, 0x84, 0x46
    .byte 0x2C, 0x1C, 0x60, 0x01, 0x1A, 0x9A, 0x11, 0x18, 0x50, 0x44, 0x06, 0x9B, 0xD2, 0x18, 0x09, 0x26
    .byte 0x40, 0x00, 0x08, 0x9F, 0xC3, 0x19, 0x49, 0x00, 0x07, 0x98, 0x09, 0x18, 0x00, 0x2A, 0x07, 0xDB
    .byte 0x00, 0x2D, 0x05, 0xDB, 0x1D, 0x2A, 0x03, 0xDC, 0x13, 0x2C, 0x01, 0xDC, 0x08, 0x88, 0x18, 0x80
    .byte 0x02, 0x31, 0x02, 0x33, 0x01, 0x32, 0x01, 0x3E, 0x00, 0x2E, 0xEF, 0xDA, 0x60, 0x46, 0x07, 0x28
    .byte 0xDB, 0xDB, 0x45, 0x46, 0x01, 0x99, 0x8D, 0x42, 0xB6, 0xDB, 0x07, 0xE1, 0x4A, 0x46, 0x51, 0x68
    .byte 0x23, 0x20, 0x40, 0x1A, 0x00, 0x28, 0x00, 0xDA, 0x00, 0x20, 0x07, 0x1C, 0x01, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x0A, 0xF0, 0x15, 0xFB, 0x82, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0A, 0xF0
    .byte 0x0F, 0xFB, 0x80, 0x46, 0x00, 0x20, 0x00, 0x24, 0x05, 0x1C, 0x08, 0x35, 0x01, 0x30, 0x84, 0x46
    .byte 0x2B, 0x1C, 0x98, 0x01, 0x56, 0x46, 0x82, 0x19, 0x58, 0x01, 0x38, 0x18, 0x40, 0x00, 0x46, 0x46
    .byte 0x81, 0x19, 0xE0, 0x19, 0x00, 0x28, 0x07, 0xDB, 0x00, 0x2D, 0x05, 0xDB, 0x1D, 0x28, 0x03, 0xDC
    .byte 0x13, 0x2B, 0x01, 0xDC, 0x10, 0x88, 0x08, 0x80, 0x02, 0x32, 0x02, 0x31, 0x01, 0x34, 0x04, 0x2C
    .byte 0xEF, 0xDB, 0x60, 0x46, 0x05, 0x28, 0xDE, 0xDB, 0x00, 0x25, 0x01, 0x9F, 0xBD, 0x42, 0x00, 0xDB
    .byte 0xCC, 0xE0, 0x68, 0x00, 0x40, 0x19, 0x23, 0x30, 0x4A, 0x46, 0x51, 0x68, 0x41, 0x1A, 0x00, 0x29
    .byte 0x00, 0xDA, 0x00, 0x21, 0xE8, 0x00, 0x40, 0x1B, 0x02, 0x30, 0x1A, 0x90, 0x09, 0x91, 0x01, 0x20
    .byte 0x00, 0x21, 0x00, 0x22, 0x0A, 0xF0, 0xD4, 0xFA, 0x0A, 0x90, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x0A, 0xF0, 0xCE, 0xFA, 0x0B, 0x90, 0x00, 0x20, 0x01, 0x35, 0xA8, 0x46, 0x09, 0x9B, 0x1A, 0x9C
    .byte 0x1B, 0x19, 0x9A, 0x46, 0x05, 0x1D, 0x01, 0x30, 0x84, 0x46, 0x2C, 0x1C, 0x60, 0x01, 0x1A, 0x9E
    .byte 0x31, 0x18, 0x50, 0x44, 0x09, 0x9F, 0xF2, 0x19, 0x06, 0x26, 0x40, 0x00, 0x0B, 0x9F, 0xC3, 0x19
    .byte 0x49, 0x00, 0x0A, 0x98, 0x09, 0x18, 0x00, 0x2A, 0x07, 0xDB, 0x00, 0x2D, 0x05, 0xDB, 0x1D, 0x2A
    .byte 0x03, 0xDC, 0x13, 0x2C, 0x01, 0xDC, 0x08, 0x88, 0x18, 0x80, 0x02, 0x31, 0x02, 0x33, 0x01, 0x32
    .byte 0x01, 0x3E, 0x00, 0x2E, 0xEF, 0xDA, 0x60, 0x46, 0x09, 0x28, 0xDB, 0xDB, 0x45, 0x46, 0x01, 0x99
    .byte 0x8D, 0x42, 0xB6, 0xDB, 0x82, 0xE0, 0x4A, 0x46, 0x51, 0x68, 0x23, 0x20, 0x40, 0x1A, 0x00, 0x28
    .byte 0x00, 0xDA, 0x00, 0x20, 0x07, 0x1C, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0A, 0xF0, 0x90, 0xFA
    .byte 0x82, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0A, 0xF0, 0x8A, 0xFA, 0x80, 0x46, 0x00, 0x20
    .byte 0x00, 0x24, 0x05, 0x1C, 0x08, 0x35, 0x01, 0x30, 0x84, 0x46, 0x2B, 0x1C, 0x98, 0x01, 0x56, 0x46
    .byte 0x82, 0x19, 0x58, 0x01, 0x38, 0x18, 0x40, 0x00, 0x46, 0x46, 0x81, 0x19, 0xE0, 0x19, 0x00, 0x28
    .byte 0x07, 0xDB, 0x00, 0x2D, 0x05, 0xDB, 0x1D, 0x28, 0x03, 0xDC, 0x13, 0x2B, 0x01, 0xDC, 0x10, 0x88
    .byte 0x08, 0x80, 0x02, 0x32, 0x02, 0x31, 0x01, 0x34, 0x04, 0x2C, 0xEF, 0xDB, 0x60, 0x46, 0x06, 0x28
    .byte 0xDE, 0xDB, 0x00, 0x25, 0x01, 0x9F, 0xBD, 0x42, 0x48, 0xDA, 0x68, 0x00, 0x40, 0x19, 0x23, 0x30
    .byte 0x4A, 0x46, 0x51, 0x68, 0x41, 0x1A, 0x00, 0x29, 0x00, 0xDA, 0x00, 0x21, 0xE8, 0x00, 0x40, 0x1B
    .byte 0x01, 0x30, 0x1A, 0x90, 0x0C, 0x91, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0A, 0xF0, 0x50, 0xFA
    .byte 0x0D, 0x90, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0A, 0xF0, 0x4A, 0xFA, 0x0E, 0x90, 0x00, 0x20
    .byte 0x01, 0x35, 0xA8, 0x46, 0x0C, 0x9B, 0x1A, 0x9C, 0x1B, 0x19, 0x9A, 0x46, 0x05, 0x1D, 0x01, 0x30
    .byte 0x84, 0x46, 0x2C, 0x1C, 0x60, 0x01, 0x1A, 0x9E, 0x31, 0x18, 0x50, 0x44, 0x0C, 0x9F, 0xF2, 0x19
    .byte 0x06, 0x26, 0x40, 0x00, 0x0E, 0x9F, 0xC3, 0x19, 0x49, 0x00, 0x0D, 0x98, 0x09, 0x18, 0x00, 0x2A
    .byte 0x07, 0xDB, 0x00, 0x2D, 0x05, 0xDB, 0x1D, 0x2A, 0x03, 0xDC, 0x13, 0x2C, 0x01, 0xDC, 0x08, 0x88
    .byte 0x18, 0x80, 0x02, 0x31, 0x02, 0x33, 0x01, 0x32, 0x01, 0x3E, 0x00, 0x2E, 0xEF, 0xDA, 0x60, 0x46
    .byte 0x0A, 0x28, 0xDB, 0xDB, 0x45, 0x46, 0x01, 0x99, 0x8D, 0x42, 0xB6, 0xDB, 0x01, 0x22, 0x02, 0x92
    .byte 0x03, 0xE0, 0x4B, 0x46, 0x59, 0x60, 0x05, 0x20, 0x18, 0x60, 0x09, 0x21, 0x06, 0x48, 0x00, 0x88
    .byte 0x08, 0x40, 0x00, 0x28, 0x00, 0xD1, 0x98, 0xE2, 0x00, 0x20, 0x4C, 0x46, 0xA0, 0x60, 0x60, 0x60
    .byte 0x06, 0x20, 0x20, 0x60, 0x91, 0xE2, 0x00, 0x00, 0xA0, 0x4E, 0x00, 0x03, 0x4E, 0x46, 0xB0, 0x68
    .byte 0x01, 0x30, 0xB0, 0x60, 0x00, 0x28, 0x00, 0xDC, 0xE4, 0xE0, 0x00, 0x26, 0x4F, 0x46, 0xBE, 0x60
    .byte 0x78, 0x68, 0x08, 0x28, 0x00, 0xDD, 0xD8, 0xE0, 0x44, 0x1C, 0x7C, 0x60, 0x01, 0x98, 0x02, 0x28
    .byte 0x1C, 0xD0, 0x02, 0x28, 0x00, 0xDA, 0xCD, 0xE0, 0x04, 0x28, 0x00, 0xDD, 0xCA, 0xE0, 0x20, 0x1C
    .byte 0x03, 0x21, 0x3D, 0xF0, 0xE5, 0xFD, 0xA0, 0x46, 0x07, 0x1C, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x0A, 0xF0, 0xDE, 0xF9, 0x11, 0x90, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0A, 0xF0, 0xD8, 0xF9
    .byte 0x12, 0x90, 0x09, 0x2C, 0x68, 0xDD, 0x09, 0x21, 0x88, 0x46, 0x65, 0xE0, 0xA0, 0x00, 0x00, 0x19
    .byte 0x09, 0x21, 0x3D, 0xF0, 0xCD, 0xFD, 0x07, 0x1C, 0xB8, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x0A, 0xF0, 0xC6, 0xF9, 0x0F, 0x90, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0A, 0xF0, 0xC0, 0xF9
    .byte 0x10, 0x90, 0x05, 0x2F, 0x04, 0xDD, 0x05, 0x22, 0x90, 0x46, 0x05, 0x2F, 0x00, 0xDD, 0x05, 0x27
    .byte 0x00, 0x25, 0x78, 0x00, 0x86, 0x42, 0x00, 0xDB, 0x94, 0xE0, 0x43, 0x46, 0x5B, 0x00, 0x14, 0x93
    .byte 0x84, 0x46, 0x00, 0x24, 0x6E, 0x1C, 0x16, 0x96, 0x14, 0x98, 0x84, 0x42, 0x38, 0xDA, 0x1B, 0x90
    .byte 0x61, 0x46, 0x69, 0x1A, 0x8A, 0x46, 0x44, 0x45, 0x02, 0xDA, 0x23, 0x1C, 0x14, 0x33, 0x03, 0xE0
    .byte 0x1B, 0x9A, 0xA0, 0x1A, 0x03, 0x1C, 0x1E, 0x33, 0x51, 0x46, 0x10, 0x31, 0xBD, 0x42, 0x00, 0xDA
    .byte 0xA9, 0x1D, 0x00, 0x2B, 0x20, 0xDB, 0x00, 0x29, 0x1E, 0xDB, 0x1D, 0x2B, 0x1C, 0xDC, 0x13, 0x29
    .byte 0x1A, 0xDC, 0x19, 0x26, 0x42, 0x46, 0xB0, 0x1A, 0x02, 0x19, 0x0B, 0x26, 0xF0, 0x1B, 0x40, 0x19
    .byte 0x00, 0x2A, 0x11, 0xDB, 0x00, 0x28, 0x0F, 0xDB, 0x1D, 0x2A, 0x0D, 0xDC, 0x13, 0x28, 0x0B, 0xDC
    .byte 0x40, 0x01, 0x80, 0x18, 0x40, 0x00, 0x10, 0x9A, 0x80, 0x18, 0x49, 0x01, 0xC9, 0x18, 0x49, 0x00
    .byte 0x0F, 0x9B, 0xC9, 0x18, 0x09, 0x88, 0x01, 0x80, 0x01, 0x34, 0x1B, 0x9E, 0xB4, 0x42, 0xCA, 0xDB
    .byte 0x16, 0x9D, 0x65, 0x45, 0xBD, 0xDB, 0x4D, 0xE0, 0x03, 0x2F, 0x00, 0xDD, 0x03, 0x27, 0x00, 0x25
    .byte 0x78, 0x00, 0x85, 0x42, 0x46, 0xDA, 0x41, 0x46, 0x49, 0x00, 0x15, 0x91, 0x84, 0x46, 0x00, 0x24
    .byte 0x6A, 0x1C, 0x17, 0x92, 0x15, 0x9B, 0x9C, 0x42, 0x39, 0xDA, 0x1B, 0x93, 0x66, 0x46, 0xAE, 0x1B
    .byte 0xB2, 0x46, 0x44, 0x45, 0x02, 0xDA, 0x23, 0x1C, 0x0B, 0x33, 0x03, 0xE0, 0x1B, 0x99, 0x60, 0x1A
    .byte 0x03, 0x1C, 0x1D, 0x33, 0x51, 0x46, 0x14, 0x31, 0xBD, 0x42, 0x01, 0xDA, 0x29, 0x1C, 0x0E, 0x31
    .byte 0x00, 0x2B, 0x20, 0xDB, 0x00, 0x29, 0x1E, 0xDB, 0x1D, 0x2B, 0x1C, 0xDC, 0x13, 0x29, 0x1A, 0xDC
    .byte 0x14, 0x22, 0x46, 0x46, 0x90, 0x1B, 0x02, 0x19, 0x11, 0x26, 0xF0, 0x1B, 0x40, 0x19, 0x00, 0x2A
    .byte 0x11, 0xDB, 0x00, 0x28, 0x0F, 0xDB, 0x1D, 0x2A, 0x0D, 0xDC, 0x13, 0x28, 0x0B, 0xDC, 0x40, 0x01
    .byte 0x80, 0x18, 0x40, 0x00, 0x12, 0x9A, 0x80, 0x18, 0x49, 0x01, 0xC9, 0x18, 0x49, 0x00, 0x11, 0x9B
    .byte 0xC9, 0x18, 0x09, 0x88, 0x01, 0x80, 0x01, 0x34, 0x1B, 0x9E, 0xB4, 0x42, 0xC9, 0xDB, 0x17, 0x9D
    .byte 0x65, 0x45, 0xBC, 0xDB, 0x01, 0x27, 0x02, 0x97, 0x04, 0xE0, 0x48, 0x46, 0x46, 0x60, 0x06, 0x20
    .byte 0x49, 0x46, 0x08, 0x60, 0x09, 0x21, 0x06, 0x48, 0x00, 0x88, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD1
    .byte 0x9B, 0xE1, 0x00, 0x20, 0x4A, 0x46, 0x90, 0x60, 0x50, 0x60, 0x06, 0x20, 0x10, 0x60, 0x94, 0xE1
    .byte 0xA0, 0x4E, 0x00, 0x03, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0A, 0xF0, 0x01, 0xF9, 0xFF, 0xF7
    .byte 0x1F, 0xF9, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x0A, 0xF0, 0xFA, 0xF8, 0xFF, 0xF7, 0x30, 0xFA
    .byte 0x01, 0x23, 0x02, 0x93, 0x07, 0x20, 0x4C, 0x46, 0x20, 0x60, 0x7E, 0xE1, 0x01, 0x9E, 0x00, 0x2E
    .byte 0x15, 0xD0, 0x0C, 0x48, 0x4A, 0x46, 0x10, 0x32, 0x0B, 0x4F, 0xC3, 0x19, 0x01, 0x24, 0x35, 0x1C
    .byte 0x18, 0x68, 0xBA, 0x30, 0x00, 0x88, 0x40, 0x08, 0x02, 0x21, 0x00, 0x28, 0x00, 0xD1, 0x01, 0x21
    .byte 0x51, 0x70, 0x54, 0x80, 0x14, 0x32, 0x04, 0x33, 0x01, 0x3D, 0x00, 0x2D, 0xF0, 0xD1, 0x08, 0x20
    .byte 0x49, 0x46, 0x61, 0xE1, 0x20, 0x2E, 0x00, 0x03, 0x18, 0x08, 0x00, 0x00, 0x00, 0x20, 0x4A, 0x46
    .byte 0x50, 0x60, 0x09, 0x20, 0x10, 0x60, 0x58, 0xE1, 0x00, 0x25, 0x01, 0x9B, 0x9D, 0x42, 0x14, 0xDA
    .byte 0x10, 0x48, 0x11, 0x4B, 0x11, 0x4C, 0x02, 0x19, 0xA8, 0x00, 0x11, 0x68, 0xBA, 0x31, 0x09, 0x88
    .byte 0x49, 0x08, 0x09, 0x18, 0xC9, 0x18, 0x08, 0x78, 0x62, 0x28, 0x01, 0xD8, 0x01, 0x30, 0x08, 0x70
    .byte 0x04, 0x32, 0x01, 0x35, 0x01, 0x9E, 0xB5, 0x42, 0xEE, 0xDB, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x0A, 0xF0, 0xAE, 0xF8, 0xFF, 0xF7, 0xE4, 0xF9, 0x01, 0x27, 0x02, 0x97, 0x0A, 0x20, 0x49, 0x46
    .byte 0x32, 0xE1, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03, 0x40, 0x2C, 0x00, 0x03, 0x18, 0x08, 0x00, 0x00
    .byte 0x00, 0x22, 0x90, 0x46, 0x09, 0xF0, 0x88, 0xFB, 0x00, 0x28, 0x03, 0xD0, 0x09, 0xF0, 0x9A, 0xFB
    .byte 0x00, 0x28, 0x01, 0xD1, 0x01, 0x23, 0x98, 0x46, 0x34, 0x4F, 0x01, 0x9C, 0x02, 0x2C, 0x00, 0xDD
    .byte 0x33, 0x4F, 0x46, 0x46, 0x00, 0x2E, 0x4D, 0xD0, 0x49, 0x46, 0xC8, 0x68, 0xC0, 0x00, 0xC0, 0x19
    .byte 0x00, 0x22, 0x81, 0x5E, 0x02, 0x23, 0xC2, 0x5E, 0x00, 0x20, 0x0A, 0xF0, 0x81, 0xF8, 0x2D, 0x4C
    .byte 0x21, 0x1C, 0x01, 0x80, 0x4E, 0x46, 0xF0, 0x68, 0xC0, 0x00, 0xC0, 0x19, 0x00, 0x22, 0x81, 0x5E
    .byte 0x02, 0x23, 0xC2, 0x5E, 0x01, 0x32, 0x00, 0x20, 0x0A, 0xF0, 0x72, 0xF8, 0x26, 0x4C, 0x21, 0x1C
    .byte 0x01, 0x80, 0x00, 0x20, 0x00, 0x24, 0x46, 0x1C, 0x35, 0x1C, 0x49, 0x46, 0xC8, 0x68, 0xC0, 0x00
    .byte 0xC0, 0x19, 0x00, 0x22, 0x81, 0x5E, 0x49, 0x19, 0x02, 0x23, 0xC2, 0x5E, 0x12, 0x19, 0x00, 0x20
    .byte 0x0A, 0xF0, 0x5E, 0xF8, 0x01, 0x88, 0x1D, 0x4B, 0x1A, 0x1C, 0x11, 0x40, 0x01, 0x80, 0x49, 0x46
    .byte 0xC8, 0x68, 0xC0, 0x00, 0xC0, 0x19, 0x00, 0x22, 0x81, 0x5E, 0x49, 0x19, 0x02, 0x23, 0xC2, 0x5E
    .byte 0x12, 0x19, 0x00, 0x20, 0x0A, 0xF0, 0x4C, 0xF8, 0x01, 0x88, 0xE0, 0x23, 0x1B, 0x02, 0x1A, 0x1C
    .byte 0x11, 0x43, 0x01, 0x80, 0x01, 0x34, 0x01, 0x2C, 0xD7, 0xDD, 0x30, 0x1C, 0x06, 0x28, 0xD1, 0xDD
    .byte 0x01, 0x24, 0x02, 0x94, 0x00, 0x23, 0x01, 0x9E, 0xB3, 0x42, 0x00, 0xDB, 0x86, 0xE0, 0x01, 0x22
    .byte 0x52, 0x42, 0x48, 0x46, 0xC1, 0x68, 0x84, 0x89, 0x09, 0x48, 0x00, 0x88, 0x20, 0x28, 0x22, 0xD0
    .byte 0x20, 0x28, 0x0F, 0xDC, 0x10, 0x28, 0x2D, 0xD0, 0x3A, 0xE0, 0x00, 0x00, 0x7C, 0xB8, 0x0D, 0x08
    .byte 0x9C, 0xB8, 0x0D, 0x08, 0x03, 0xF0, 0x00, 0x00, 0x03, 0xF8, 0x00, 0x00, 0xFF, 0x0F, 0x00, 0x00
    .byte 0x48, 0x4F, 0x00, 0x03, 0x40, 0x28, 0x02, 0xD0, 0x80, 0x28, 0x06, 0xD0, 0x28, 0xE0, 0xC8, 0x00
    .byte 0xC0, 0x19, 0x00, 0x79, 0x00, 0x06, 0x00, 0x16, 0x0A, 0xE0, 0xC8, 0x00, 0xC0, 0x19, 0x40, 0x79
    .byte 0x00, 0x06, 0x00, 0x16, 0x13, 0xE0, 0xC8, 0x00, 0xC0, 0x19, 0x80, 0x79, 0x00, 0x06, 0x00, 0x16
    .byte 0x00, 0x04, 0x01, 0x0C, 0x00, 0x14, 0x90, 0x42, 0x12, 0xD0, 0x08, 0x04, 0x00, 0x14, 0x49, 0x46
    .byte 0xC8, 0x60, 0x0D, 0xE0, 0xC8, 0x00, 0xC0, 0x19, 0xC0, 0x79, 0x00, 0x06, 0x00, 0x16, 0x00, 0x04
    .byte 0x01, 0x0C, 0x00, 0x14, 0x90, 0x42, 0x03, 0xD0, 0x08, 0x04, 0x00, 0x14, 0x4E, 0x46, 0xF0, 0x60
    .byte 0x20, 0x04, 0x04, 0x14, 0x49, 0x46, 0xC8, 0x68, 0x84, 0x42, 0x32, 0xD0, 0xE4, 0x00, 0xE4, 0x19
    .byte 0x00, 0x22, 0xA1, 0x5E, 0x02, 0x23, 0xE2, 0x5E, 0x00, 0x20, 0x09, 0xF0, 0xE1, 0xFF, 0x00, 0x25
    .byte 0x05, 0x80, 0x00, 0x26, 0xA1, 0x5F, 0x02, 0x27, 0xE2, 0x5F, 0x01, 0x32, 0x00, 0x20, 0x09, 0xF0
    .byte 0xD7, 0xFF, 0x05, 0x80, 0x00, 0x20, 0x00, 0x25, 0x46, 0x1C, 0x00, 0x20, 0x21, 0x5E, 0x89, 0x19
    .byte 0x02, 0x23, 0xE2, 0x5E, 0x52, 0x19, 0x00, 0x20, 0x09, 0xF0, 0xCA, 0xFF, 0x02, 0x88, 0xF0, 0x27
    .byte 0x3F, 0x02, 0x39, 0x1C, 0x0A, 0x43, 0x02, 0x80, 0x01, 0x35, 0x01, 0x2D, 0xED, 0xDD, 0x30, 0x1C
    .byte 0x06, 0x28, 0xE8, 0xDD, 0x40, 0x46, 0x00, 0x28, 0x47, 0xD0, 0x8D, 0x20, 0x3B, 0xF0, 0xF0, 0xFB
    .byte 0x43, 0xE0, 0x01, 0x33, 0x01, 0x99, 0x8B, 0x42, 0x00, 0xDA, 0x7A, 0xE7, 0x09, 0x21, 0x06, 0x48
    .byte 0x00, 0x88, 0x08, 0x40, 0x00, 0x28, 0x38, 0xD0, 0x8F, 0x20, 0x3B, 0xF0, 0xE1, 0xFB, 0x0B, 0x20
    .byte 0x4A, 0x46, 0x10, 0x60, 0x31, 0xE0, 0x00, 0x00, 0xA0, 0x4E, 0x00, 0x03, 0x4C, 0x46, 0xE2, 0x68
    .byte 0x01, 0x2A, 0x13, 0xD0, 0x01, 0x2A, 0x02, 0xDC, 0x00, 0x2A, 0x05, 0xD0, 0x25, 0xE0, 0x02, 0x2A
    .byte 0x16, 0xD0, 0x03, 0x2A, 0x19, 0xD0, 0x20, 0xE0, 0x01, 0x20, 0xFD, 0x26, 0xF6, 0x00, 0x99, 0x19
    .byte 0x08, 0x70, 0x01, 0x49, 0x18, 0xE0, 0x00, 0x00, 0x50, 0x5C, 0x00, 0x03, 0x02, 0x20, 0xFD, 0x27
    .byte 0xFF, 0x00, 0xD9, 0x19, 0x08, 0x70, 0x01, 0x48, 0x02, 0x60, 0x0E, 0xE0, 0x50, 0x5C, 0x00, 0x03
    .byte 0x03, 0x21, 0xFD, 0x22, 0xD2, 0x00, 0x98, 0x18, 0x03, 0xE0, 0x04, 0x21, 0xFD, 0x24, 0xE4, 0x00
    .byte 0x18, 0x19, 0x01, 0x70, 0x46, 0x49, 0x01, 0x20
    thumb_func_start sub_80247C8
    sub_80247C8:
    str r0, [r1, #0x00]
    non_word_aligned_thumb_func_start def_8023B20
    def_8023B20: @ 080247CA
    mov r6, r9
    ldr r0, [r6, #0x00]
    cmp r0, #0x03
    ble _080248A0
    ldr r0, _080248E4 @ =0x03002E20
    ldr r0, [r0, #0x10]
    ldr r2, _080248E8 @ =0x080E645C
    lsls r0, r0, #0x1A
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _080247E2
    adds r0, #0x3F
    _080247E2:
    asrs r1, r0, #0x06
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r1
    ldr r1, _080248EC @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    subs r0, r0, r1
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r0, r0, #0x01
    mov r10, r0
    movs r7, #0x00
    str r7, [sp, #0x04C]
    movs r0, #0x1F
    mov r8, r0
    movs r7, #0x1F
    ldr r1, _080248F0 @ =0x080AAD3C
    adds r1, #0x40
    str r1, [sp, #0x060]
    _08024812:
    ldr r2, [sp, #0x04C]
    lsls r2, r2, #0x01
    str r2, [sp, #0x070]
    ldr r3, _080248F0 @ =0x080AAD3C
    adds r0, r2, r3
    ldrh r4, [r0, #0x00]
    adds r5, r4, #0x0
    ands r5, r7
    lsrs r6, r4, #0x05
    mov r0, r8
    ands r6, r0
    lsrs r4, r4, #0x0A
    ands r4, r0
    ldr r2, [sp, #0x060]
    ldrh r1, [r2, #0x00]
    adds r0, r1, #0x0
    ands r0, r7
    lsrs r2, r1, #0x05
    mov r3, r8
    ands r2, r3
    lsrs r1, r1, #0x0A
    ands r1, r3
    subs r0, r0, r5
    mov r3, r10
    muls r3, r0
    adds r0, r3, #0x0
    asrs r0, r0, #0x0F
    adds r5, r5, r0
    lsls r5, r5, #0x10
    lsrs r5, r5, #0x10
    subs r2, r2, r6
    mov r0, r10
    muls r0, r2
    asrs r0, r0, #0x0F
    adds r6, r6, r0
    lsls r6, r6, #0x10
    lsrs r6, r6, #0x10
    subs r1, r1, r4
    mov r0, r10
    muls r0, r1
    asrs r0, r0, #0x0F
    adds r4, r4, r0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    movs r0, #0x00
    bl pltt_getBuffer
    ldr r1, [sp, #0x070]
    adds r3, r1, r0
    movs r2, #0xE0
    lsls r2, r2, #0x01
    adds r3, r3, r2
    ands r5, r7
    ands r6, r7
    lsls r6, r6, #0x05
    orrs r5, r6
    ands r4, r7
    lsls r4, r4, #0x0A
    orrs r5, r4
    strh r5, [r3, #0x00]
    ldr r3, [sp, #0x060]
    adds r3, #0x02
    str r3, [sp, #0x060]
    ldr r4, [sp, #0x04C]
    adds r4, #0x01
    str r4, [sp, #0x04C]
    cmp r4, #0x0F
    ble _08024812
    movs r0, #0x01
    bl pltt_setDirtyFlag
    _080248A0:
    mov r6, r9
    ldr r0, [r6, #0x00]
    cmp r0, #0x02
    ble _080248C4
    ldr r7, [sp, #0x004]
    cmp r7, #0x00
    beq _080248C4
    mov r4, r9
    adds r4, #0x10
    adds r5, r7, #0x0
    _080248B4:
    adds r0, r4, #0x0
    movs r1, #0x01
    bl sub_800EB74
    adds r4, #0x14
    subs r5, #0x01
    cmp r5, #0x00
    bne _080248B4
    _080248C4:
    ldr r0, [sp, #0x008]
    cmp r0, #0x00
    beq _080248D0
    movs r0, #0x01
    bl map_setBufferDirty
    _080248D0:
    add sp, #0x074
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x50, 0x5C, 0x00, 0x03
    _080248E4: .4byte 0x03002E20
    _080248E8: .4byte gSinTable
    _080248EC: .4byte 0x000003FF
    _080248F0: .4byte 0x080AAD3C
    thumb_func_start sub_80248F4
    sub_80248F4:
    push {r4, r5, r6, r7, lr}
    ldr r1, _08024910 @ =0x03002E20
    ldr r2, _08024914 @ =0x00000838
    adds r0, r1, r2
    ldr r0, [r0, #0x00]
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r0, r0, #0x01
    cmp r0, #0x00
    beq _0802491C
    ldr r1, _08024918 @ =0x03002C74
    movs r0, #0x00
    str r0, [r1, #0x00]
    b _0802495A
    _08024910: .4byte 0x03002E20
    _08024914: .4byte 0x00000838
    _08024918: .4byte 0x03002C74
    _0802491C:
    ldr r4, _08024960 @ =0x03002C74
    ldr r2, _08024964 @ =0x00000704
    adds r0, r1, r2
    movs r2, #0x80
    lsls r2, r2, #0x02
    movs r1, #0x01
    bl frmheap_calloc
    str r0, [r4, #0x00]
    movs r2, #0x00
    mov r12, r4
    movs r5, #0x00
    movs r4, #0x00
    ldr r3, _08024968 @ =0x080DB920
    movs r7, #0x00
    ldr r6, _0802496C @ =0x0000020F
    _0802493C:
    mov r1, r12
    ldr r0, [r1, #0x00]
    lsls r1, r2, #0x04
    adds r1, r1, r0
    ldrh r0, [r3, #0x00]
    str r0, [r1, #0x00]
    str r7, [r1, #0x04]
    str r4, [r1, #0x08]
    str r5, [r1, #0x0C]
    adds r5, r5, r6
    subs r4, #0x14
    adds r3, #0x04
    adds r2, #0x01
    cmp r2, #0x1F
    ble _0802493C
    _0802495A:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    _08024960: .4byte 0x03002C74
    _08024964: .4byte 0x00000704
    _08024968: .4byte 0x080DB920
    _0802496C: .4byte 0x0000020F
    thumb_func_start sub_8024970
    sub_8024970:
    push {r4, r5, r6, lr}
    add sp, #-0x00C
    ldr r0, _08024A28 @ =0x03002C74
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    beq _08024A20
    movs r6, #0x00
    _0802497E:
    ldr r0, _08024A28 @ =0x03002C74
    lsls r1, r6, #0x04
    ldr r0, [r0, #0x00]
    adds r4, r0, r1
    ldr r0, [r4, #0x0C]
    adds r0, #0x01
    str r0, [r4, #0x0C]
    ldr r0, [r4, #0x08]
    adds r0, #0x01
    str r0, [r4, #0x08]
    cmp r0, #0x14
    bne _0802499A
    movs r0, #0x00
    str r0, [r4, #0x08]
    _0802499A:
    ldr r0, [r4, #0x08]
    cmp r0, #0x00
    blt _08024A1A
    ldr r0, [r4, #0x0C]
    ldr r1, _08024A2C @ =0x080E645C
    lsls r0, r0, #0x19
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _080249AE
    adds r0, #0x3F
    _080249AE:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bge _080249C0
    ldr r1, _08024A30 @ =0x00001FFF
    adds r0, r0, r1
    _080249C0:
    asrs r1, r0, #0x0D
    ldr r0, [r4, #0x00]
    asrs r0, r0, #0x08
    adds r0, r0, r1
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    ldr r2, _08024A34 @ =0xFFFF0000
    ldr r1, [sp, #0x008]
    ands r1, r2
    orrs r1, r0
    str r1, [sp, #0x008]
    ldr r0, [r4, #0x04]
    lsls r0, r0, #0x08
    lsrs r0, r0, #0x10
    lsls r0, r0, #0x10
    ldr r2, _08024A38 @ =0x0000FFFF
    ands r1, r2
    orrs r1, r0
    str r1, [sp, #0x008]
    ldr r1, _08024A3C @ =0x080DB90C
    ldr r0, [r4, #0x08]
    asrs r0, r0, #0x02
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    movs r5, #0x00
    str r5, [sp, #0x000]
    str r5, [sp, #0x004]
    add r1, sp, #0x008
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    ldr r1, [r4, #0x04]
    adds r1, #0x40
    str r1, [r4, #0x04]
    ldr r0, _08024A40 @ =0x00009FFF
    cmp r1, r0
    ble _08024A1A
    ldr r0, _08024A44 @ =0x080DB920
    lsls r1, r6, #0x02
    adds r1, r1, r0
    ldrh r0, [r1, #0x00]
    str r0, [r4, #0x00]
    str r5, [r4, #0x04]
    _08024A1A:
    adds r6, #0x01
    cmp r6, #0x1F
    ble _0802497E
    _08024A20:
    add sp, #0x00C
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    _08024A28: .4byte 0x03002C74
    _08024A2C: .4byte gSinTable
    _08024A30: .4byte 0x00001FFF
    _08024A34: .4byte 0xFFFF0000
    _08024A38: .4byte 0x0000FFFF
    _08024A3C: .4byte 0x080DB90C
    _08024A40: .4byte 0x00009FFF
    _08024A44: .4byte 0x080DB920
    thumb_func_start sub_8024A48
    sub_8024A48:
    push {r4, lr}
    ldr r4, _08024A94 @ =0x080AACF0
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r0, #0xE0
    lsls r0, r0, #0x01
    adds r1, r1, r0
    adds r0, r4, #0x0
    movs r2, #0x10
    bl CpuFastSet
    movs r0, #0x01
    bl pltt_setDirtyFlag
    movs r4, #0x00
    bl sub_802DC88
    cmp r0, #0x00
    beq _08024A7A
    bl sub_802DCB4
    cmp r0, #0x00
    bne _08024A7C
    _08024A7A:
    movs r4, #0x01
    _08024A7C:
    cmp r4, #0x00
    beq _08024AA0
    bl dmaq_getVBlankDmaQueue
    ldr r1, _08024A98 @ =0x080AAE3C
    movs r2, #0xC0
    lsls r2, r2, #0x13
    ldr r3, _08024A9C @ =0x80000400
    bl dmaq_enqueue
    b _08024ABE
    .byte 0x00, 0x00
    _08024A94: .4byte 0x080AACF0
    _08024A98: .4byte 0x080AAE3C
    _08024A9C: .4byte 0x80000400
    _08024AA0:
    bl dmaq_getVBlankDmaQueue
    ldr r1, _08024AE8 @ =0x080AAE3C
    movs r2, #0xC0
    lsls r2, r2, #0x13
    ldr r3, _08024AEC @ =0x80000230
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _08024AF0 @ =0x080AD8BC
    ldr r2, _08024AF4 @ =0x06000080
    ldr r3, _08024AF8 @ =0x800000E0
    bl dmaq_enqueue
    _08024ABE:
    ldr r0, _08024AFC @ =0x0809E938
    ldr r1, _08024B00 @ =0x06000800
    bl LZ77UnCompVram
    bl dmaq_getVBlankDmaQueue
    ldr r1, _08024B04 @ =0x080AC6FC
    ldr r2, _08024B08 @ =0x06001400
    ldr r3, _08024B0C @ =0x80000200
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _08024B10 @ =0x080ABEFC
    ldr r2, _08024B14 @ =0x06002000
    ldr r3, _08024B18 @ =0x80000400
    bl dmaq_enqueue
    pop {r4}
    pop {r0}
    bx r0
    _08024AE8: .4byte 0x080AAE3C
    _08024AEC: .4byte 0x80000230
    _08024AF0: .4byte 0x080AD8BC
    _08024AF4: .4byte 0x06000080
    _08024AF8: .4byte 0x800000E0
    _08024AFC: .4byte 0x0809E938
    _08024B00: .4byte 0x06000800
    _08024B04: .4byte 0x080AC6FC
    _08024B08: .4byte 0x06001400
    _08024B0C: .4byte 0x80000200
    _08024B10: .4byte 0x080ABEFC
    _08024B14: .4byte 0x06002000
    _08024B18: .4byte 0x80000400
    thumb_func_start sub_8024B1C
    sub_8024B1C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x010
    adds r7, r0, #0x0
    ldr r0, _08024B58 @ =0x03002E20
    ldr r1, _08024B5C @ =0x000007FB
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    str r0, [sp, #0x000]
    movs r4, #0x00
    bl sub_802DC88
    cmp r0, #0x00
    beq _08024B46
    bl sub_802DCB4
    cmp r0, #0x00
    bne _08024B48
    _08024B46:
    movs r4, #0x01
    _08024B48:
    cmp r4, #0x00
    beq _08024B64
    ldr r0, _08024B60 @ =0x0809EF64
    adds r1, r7, #0x0
    bl LZ77UnCompWram
    b _08024B6C
    .byte 0x00, 0x00
    _08024B58: .4byte 0x03002E20
    _08024B5C: .4byte 0x000007FB
    _08024B60: .4byte 0x0809EF64
    _08024B64:
    ldr r0, _08024B78 @ =0x0809F248
    adds r1, r7, #0x0
    bl LZ77UnCompWram
    _08024B6C:
    ldr r2, [sp, #0x000]
    cmp r2, #0x03
    beq _08024B7C
    cmp r2, #0x04
    beq _08024B90
    b _08024BAC
    _08024B78: .4byte 0x0809F248
    _08024B7C:
    cmp r4, #0x00
    beq _08024B88
    ldr r0, _08024B84 @ =0x0809F4C0
    b _08024B96
    _08024B84: .4byte 0x0809F4C0
    _08024B88:
    ldr r0, _08024B8C @ =0x0809F740
    b _08024B96
    _08024B8C: .4byte 0x0809F740
    _08024B90:
    cmp r4, #0x00
    beq _08024BA4
    ldr r0, _08024BA0 @ =0x0809F954
    _08024B96:
    adds r1, r7, #0x0
    bl LZ77UnCompWram
    b _08024BAC
    .byte 0x00, 0x00
    _08024BA0: .4byte 0x0809F954
    _08024BA4:
    ldr r0, _08024CC8 @ =0x0809FC08
    adds r1, r7, #0x0
    bl LZ77UnCompWram
    _08024BAC:
    movs r2, #0x00
    ldr r3, [sp, #0x000]
    cmp r2, r3
    bge _08024C34
    ldr r6, _08024CCC @ =0x000007F4
    ldr r5, _08024CD0 @ =0x03002E44
    adds r6, r5, r6
    str r6, [sp, #0x004]
    ldr r1, _08024CD4 @ =0x00000814
    adds r0, r5, r1
    ldr r0, [r0, #0x00]
    str r0, [sp, #0x008]
    adds r0, r3, #0x0
    subs r0, #0x02
    lsls r0, r0, #0x04
    mov r9, r0
    _08024BCC:
    lsls r1, r2, #0x02
    ldr r3, [sp, #0x004]
    adds r0, r3, r1
    ldr r0, [r0, #0x00]
    adds r5, r2, #0x1
    mov r10, r5
    ldr r6, [sp, #0x008]
    cmp r6, r0
    bne _08024C2C
    mov r3, r9
    adds r0, r1, r3
    ldr r5, _08024CD8 @ =0x080DB9F0
    adds r0, r0, r5
    movs r6, #0x00
    ldsh r1, [r0, r6]
    lsls r0, r2, #0x01
    adds r0, #0x01
    lsls r0, r0, #0x01
    add r0, r9
    adds r0, r0, r5
    movs r2, #0x00
    ldsh r6, [r0, r2]
    movs r2, #0x00
    ldr r3, _08024CDC @ =0x00000FFF
    mov r8, r3
    lsls r5, r1, #0x01
    movs r0, #0xE0
    lsls r0, r0, #0x08
    mov r12, r0
    _08024C06:
    adds r0, r6, r2
    adds r4, r2, #0x1
    lsls r0, r0, #0x06
    adds r0, r5, r0
    adds r2, r0, r7
    movs r3, #0x02
    _08024C12:
    ldrh r1, [r2, #0x00]
    mov r0, r8
    ands r0, r1
    mov r1, r12
    orrs r0, r1
    strh r0, [r2, #0x00]
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _08024C12
    adds r2, r4, #0x0
    cmp r2, #0x01
    ble _08024C06
    _08024C2C:
    mov r2, r10
    ldr r3, [sp, #0x000]
    cmp r2, r3
    blt _08024BCC
    _08024C34:
    movs r3, #0x00
    ldr r5, [sp, #0x000]
    cmp r3, r5
    bge _08024D1C
    ldr r6, _08024CE0 @ =0x080DBA20
    mov r10, r6
    adds r0, r5, #0x0
    subs r0, #0x02
    lsls r0, r0, #0x04
    mov r9, r0
    ldr r1, _08024CCC @ =0x000007F4
    ldr r0, _08024CD0 @ =0x03002E44
    adds r1, r0, r1
    str r1, [sp, #0x00C]
    _08024C50:
    lsls r2, r3, #0x02
    ldr r5, [sp, #0x00C]
    adds r0, r5, r2
    ldr r1, [r0, #0x00]
    adds r0, r1, #0x0
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r4, r0, #0x01
    ldr r6, _08024CD0 @ =0x03002E44
    ldr r5, _08024CD4 @ =0x00000814
    adds r0, r6, r5
    ldr r0, [r0, #0x00]
    movs r6, #0xF0
    lsls r6, r6, #0x08
    mov r12, r6
    cmp r0, r1
    bne _08024C78
    movs r0, #0xE0
    lsls r0, r0, #0x08
    mov r12, r0
    _08024C78:
    mov r1, r9
    adds r0, r2, r1
    add r0, r10
    movs r2, #0x00
    ldsh r1, [r0, r2]
    lsls r0, r3, #0x01
    adds r0, #0x01
    lsls r0, r0, #0x01
    add r0, r9
    add r0, r10
    movs r6, #0x00
    ldsh r5, [r0, r6]
    cmp r4, #0x00
    bne _08024CE4
    movs r2, #0x00
    adds r3, #0x01
    mov r8, r3
    lsls r6, r1, #0x01
    _08024C9C:
    adds r0, r5, r2
    lsls r1, r2, #0x02
    adds r4, r2, #0x1
    adds r2, r1, #0x0
    adds r2, #0x7C
    lsls r0, r0, #0x06
    adds r0, r6, r0
    adds r1, r0, r7
    movs r3, #0x03
    _08024CAE:
    mov r0, r12
    orrs r0, r2
    strh r0, [r1, #0x00]
    adds r2, #0x01
    adds r1, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _08024CAE
    adds r2, r4, #0x0
    cmp r2, #0x01
    ble _08024C9C
    b _08024D14
    .byte 0x00, 0x00
    _08024CC8: .4byte 0x0809FC08
    _08024CCC: .4byte 0x000007F4
    _08024CD0: .4byte 0x03002E44
    _08024CD4: .4byte 0x00000814
    _08024CD8: .4byte 0x080DB9F0
    _08024CDC: .4byte 0x00000FFF
    _08024CE0: .4byte 0x080DBA20
    _08024CE4:
    movs r2, #0x00
    adds r3, #0x01
    mov r8, r3
    lsls r6, r1, #0x01
    _08024CEC:
    adds r0, r5, r2
    lsls r1, r2, #0x02
    adds r4, r2, #0x1
    adds r2, r1, #0x0
    adds r2, #0x84
    lsls r0, r0, #0x06
    adds r0, r6, r0
    adds r1, r0, r7
    movs r3, #0x03
    _08024CFE:
    mov r0, r12
    orrs r0, r2
    strh r0, [r1, #0x00]
    adds r2, #0x01
    adds r1, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _08024CFE
    adds r2, r4, #0x0
    cmp r2, #0x01
    ble _08024CEC
    _08024D14:
    mov r3, r8
    ldr r0, [sp, #0x000]
    cmp r3, r0
    blt _08024C50
    _08024D1C:
    add sp, #0x010
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    thumb_func_start sub_8024D2C
    sub_8024D2C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x008
    str r0, [sp, #0x000]
    ldr r2, _08024E64 @ =0x03002E20
    ldr r1, _08024E68 @ =0x000007FB
    adds r0, r2, r1
    ldrb r0, [r0, #0x00]
    mov r10, r0
    movs r3, #0x00
    mov r9, r3
    cmp r9, r10
    bge _08024DFE
    ldr r0, _08024E6C @ =0x080DB9C0
    mov r1, r10
    subs r1, #0x02
    lsls r1, r1, #0x04
    adds r1, r1, r0
    mov r8, r1
    ldr r1, _08024E70 @ =0x00000838
    adds r0, r2, r1
    ldr r0, [r0, #0x00]
    str r0, [sp, #0x004]
    _08024D60:
    mov r2, r9
    lsls r0, r2, #0x02
    ldr r3, _08024E74 @ =0x03002E44
    ldr r2, _08024E78 @ =0x000007F4
    adds r1, r3, r2
    adds r1, r1, r0
    ldr r0, [r1, #0x00]
    movs r7, #0xF0
    lsls r7, r7, #0x08
    ldr r3, [sp, #0x004]
    cmp r3, r0
    bne _08024D7C
    movs r7, #0xE0
    lsls r7, r7, #0x08
    _08024D7C:
    mov r1, r8
    movs r2, #0x00
    ldsh r0, [r1, r2]
    movs r3, #0x02
    ldsh r4, [r1, r3]
    ldr r5, _08024E7C @ =0x03002C58
    add r5, r9
    lsls r4, r4, #0x05
    adds r4, r4, r0
    lsls r4, r4, #0x01
    ldr r0, [sp, #0x000]
    adds r4, r4, r0
    ldrb r0, [r5, #0x00]
    movs r1, #0x0A
    bl __udivsi3
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r0, r1
    orrs r0, r7
    strh r0, [r4, #0x00]
    adds r6, r4, #0x0
    adds r6, #0x40
    ldrb r0, [r5, #0x00]
    movs r1, #0x0A
    bl __udivsi3
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    movs r2, #0x90
    lsls r2, r2, #0x01
    adds r0, r0, r2
    orrs r0, r7
    strh r0, [r6, #0x00]
    ldrb r0, [r5, #0x00]
    movs r1, #0x0A
    bl __umodsi3
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    movs r3, #0x80
    lsls r3, r3, #0x01
    adds r0, r0, r3
    orrs r0, r7
    strh r0, [r4, #0x02]
    adds r4, #0x42
    ldrb r0, [r5, #0x00]
    movs r1, #0x0A
    bl __umodsi3
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    movs r1, #0x90
    lsls r1, r1, #0x01
    adds r0, r0, r1
    orrs r7, r0
    strh r7, [r4, #0x00]
    movs r2, #0x04
    add r8, r2
    movs r3, #0x01
    add r9, r3
    cmp r9, r10
    blt _08024D60
    _08024DFE:
    ldr r6, [sp, #0x000]
    adds r6, #0xB8
    ldr r0, _08024E80 @ =0x030029B4
    ldrb r0, [r0, #0x00]
    mov r8, r0
    movs r1, #0x0A
    bl __udivsi3
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r4, r1, #0x0
    adds r1, r0, r4
    ldr r2, _08024E84 @ =0xFFFFF000
    adds r5, r2, #0x0
    orrs r1, r5
    strh r1, [r6, #0x00]
    ldr r1, [sp, #0x000]
    adds r1, #0xF8
    movs r3, #0x90
    lsls r3, r3, #0x01
    adds r6, r3, #0x0
    adds r0, r0, r6
    orrs r0, r5
    strh r0, [r1, #0x00]
    ldr r7, [sp, #0x000]
    adds r7, #0xBA
    mov r0, r8
    movs r1, #0x0A
    bl __umodsi3
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    adds r4, r0, r4
    orrs r4, r5
    strh r4, [r7, #0x00]
    ldr r1, [sp, #0x000]
    adds r1, #0xFA
    adds r0, r0, r6
    orrs r0, r5
    strh r0, [r1, #0x00]
    add sp, #0x008
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _08024E64: .4byte 0x03002E20
    _08024E68: .4byte 0x000007FB
    _08024E6C: .4byte 0x080DB9C0
    _08024E70: .4byte 0x00000838
    _08024E74: .4byte 0x03002E44
    _08024E78: .4byte 0x000007F4
    _08024E7C: .4byte 0x03002C58
    _08024E80: .4byte 0x030029B4
    _08024E84: .4byte 0xFFFFF000
    thumb_func_start sub_8024E88
    sub_8024E88:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x060
    bl sub_800EDE4
    mov r8, r0
    ldr r0, _08024EC4 @ =0x03002E20
    adds r2, r0, #0x0
    adds r2, #0x24
    ldr r1, _08024EC8 @ =0x000007FB
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    str r0, [sp, #0x004]
    movs r3, #0x00
    str r3, [sp, #0x008]
    mov r6, r8
    ldr r0, [r6, #0x00]
    cmp r0, #0x0D
    bls _08024EB8
    bl def_8024EC0
    _08024EB8:
    lsls r0, r0, #0x02
    ldr r1, _08024ECC @ =0x08024ED0
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
    _08024EC4: .4byte 0x03002E20
    _08024EC8: .4byte 0x000007FB
    _08024ECC: .4byte 0x08024ED0
    .byte 0x08, 0x4F, 0x02, 0x08, 0x2C, 0x4F, 0x02, 0x08, 0x40, 0x4F, 0x02, 0x08, 0x90, 0x4F, 0x02, 0x08
    .byte 0x30, 0x52, 0x02, 0x08, 0xC8, 0x52, 0x02, 0x08, 0xA0, 0x57, 0x02, 0x08, 0xB8, 0x58, 0x02, 0x08
    .byte 0xE2, 0x58, 0x02, 0x08, 0x20, 0x59, 0x02, 0x08, 0x2E, 0x59, 0x02, 0x08, 0x8A, 0x59, 0x02, 0x08
    .byte 0xA4, 0x5B, 0x02, 0x08, 0xBC, 0x5B, 0x02, 0x08, 0x00, 0x20, 0x47, 0x46, 0x78, 0x60, 0x38, 0x68
    .byte 0x01, 0x30, 0x38, 0x60, 0x04, 0x49, 0x08, 0x78, 0x62, 0x28, 0x01, 0xD8, 0x01, 0x30, 0x08, 0x70
    .byte 0xFF, 0xF7, 0xE8, 0xFC, 0x00, 0xF0, 0x4A, 0xFE, 0xB4, 0x29, 0x00, 0x03, 0x11, 0x20, 0x3A, 0xF0
    .byte 0xF7, 0xFF, 0x00, 0x20, 0x41, 0x46, 0x48, 0x60, 0x08, 0x68, 0x01, 0x30, 0x00, 0xF0, 0x3D, 0xFE
    .byte 0x0B, 0xF0, 0x78, 0xFA, 0x04, 0x1C, 0x0E, 0x4D, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0
    .byte 0xAF, 0xFB, 0x02, 0x1C, 0x0B, 0x4B, 0x20, 0x1C, 0x29, 0x1C, 0x0B, 0xF0, 0x43, 0xFA, 0x0B, 0xF0
    .byte 0x69, 0xFA, 0x04, 0x1C, 0x08, 0x4D, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0, 0xA0, 0xFB
    .byte 0x02, 0x1C, 0x06, 0x4B, 0x20, 0x1C, 0x29, 0x1C, 0x0B, 0xF0, 0x34, 0xFA, 0x00, 0xF0, 0x00, 0xFD
    .byte 0x2C, 0xEC, 0x03, 0x02, 0x80, 0x02, 0x00, 0x81, 0x00, 0x38, 0x00, 0x06, 0x80, 0x02, 0x00, 0x80
    .byte 0xA4, 0x48, 0x00, 0x69, 0x01, 0x21, 0x08, 0x40, 0x00, 0x28, 0x03, 0xD0, 0x43, 0x46, 0x58, 0x68
    .byte 0x01, 0x30, 0x58, 0x60, 0x46, 0x46, 0x70, 0x68, 0x09, 0x28, 0x00, 0xDD, 0x3C, 0xE1, 0x40, 0x42
    .byte 0x81, 0x46, 0x4F, 0x46, 0x15, 0x97, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0, 0x78, 0xFB
    .byte 0x03, 0x90, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0, 0x72, 0xFB, 0x82, 0x46, 0x00, 0x21
    .byte 0x4D, 0x1C, 0x48, 0x46, 0x2C, 0x18, 0x60, 0x01, 0x69, 0x01, 0x04, 0x31, 0x04, 0x30, 0x15, 0x9A
    .byte 0x10, 0x18, 0x04, 0x32, 0x07, 0x26, 0x40, 0x00, 0x57, 0x46, 0xC3, 0x19, 0x49, 0x00, 0x03, 0x98
    .byte 0x09, 0x18, 0x00, 0x2A, 0x07, 0xDB, 0x00, 0x2C, 0x05, 0xDB, 0x1D, 0x2A, 0x03, 0xDC, 0x13, 0x2C
    .byte 0x01, 0xDC, 0x08, 0x88, 0x18, 0x80, 0x02, 0x31, 0x02, 0x33, 0x01, 0x32, 0x01, 0x3E, 0x00, 0x2E
    .byte 0xEF, 0xDA, 0x29, 0x1C, 0x03, 0x29, 0xDB, 0xDB, 0x41, 0x46, 0x48, 0x68, 0x15, 0x90, 0x42, 0x42
    .byte 0x04, 0x92, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0, 0x42, 0xFB, 0x82, 0x46, 0x00, 0x20
    .byte 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0, 0x3C, 0xFB, 0x81, 0x46, 0x00, 0x21, 0x4D, 0x1C, 0x04, 0x9B
    .byte 0xEC, 0x18, 0x60, 0x01, 0x69, 0x01, 0x11, 0x31, 0x11, 0x30, 0x15, 0x9E, 0x30, 0x18, 0x32, 0x1C
    .byte 0x11, 0x32, 0x0C, 0x26, 0x40, 0x00, 0x4F, 0x46, 0xC3, 0x19, 0x49, 0x00, 0x51, 0x44, 0x00, 0x2A
    .byte 0x07, 0xDB, 0x00, 0x2C, 0x05, 0xDB, 0x1D, 0x2A, 0x03, 0xDC, 0x13, 0x2C, 0x01, 0xDC, 0x08, 0x88
    .byte 0x18, 0x80, 0x02, 0x31, 0x02, 0x33, 0x01, 0x32, 0x01, 0x3E, 0x00, 0x2E, 0xEF, 0xDA, 0x29, 0x1C
    .byte 0x03, 0x29, 0xDB, 0xDB, 0x41, 0x46, 0x48, 0x68, 0x47, 0x42, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x09, 0xF0, 0x0E, 0xFB, 0x82, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0, 0x08, 0xFB
    .byte 0x81, 0x46, 0x00, 0x20, 0x00, 0x24, 0x85, 0x1C, 0x01, 0x30, 0x84, 0x46, 0x2B, 0x1C, 0x98, 0x01
    .byte 0x56, 0x46, 0x82, 0x19, 0x58, 0x01, 0x38, 0x18, 0x40, 0x00, 0x4E, 0x46, 0x81, 0x19, 0xE0, 0x19
    .byte 0x00, 0x28, 0x07, 0xDB, 0x00, 0x2D, 0x05, 0xDB, 0x1D, 0x28, 0x03, 0xDC, 0x13, 0x2B, 0x01, 0xDC
    .byte 0x10, 0x88, 0x08, 0x80, 0x02, 0x32, 0x02, 0x31, 0x01, 0x34, 0x05, 0x2C, 0xEF, 0xDB, 0x60, 0x46
    .byte 0x0D, 0x28, 0xDF, 0xDB, 0x47, 0x46, 0x78, 0x68, 0x40, 0x42, 0x82, 0x46, 0x01, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x09, 0xF0, 0xDD, 0xFA, 0x07, 0x1C, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0
    .byte 0xD7, 0xFA, 0x81, 0x46, 0x00, 0x20, 0x00, 0x23, 0x51, 0x46, 0x45, 0x18, 0x46, 0x1C, 0x2C, 0x1C
    .byte 0x61, 0x01, 0x04, 0x31, 0x40, 0x01, 0x02, 0x1D, 0x49, 0x00, 0x49, 0x44, 0x18, 0x1D, 0x00, 0x28
    .byte 0x09, 0xDB, 0x00, 0x2D, 0x07, 0xDB, 0x1D, 0x28, 0x05, 0xDC, 0x13, 0x2C, 0x03, 0xDC, 0x50, 0x00
    .byte 0xC0, 0x19, 0x00, 0x88, 0x08, 0x80, 0x02, 0x31, 0x01, 0x32, 0x01, 0x33, 0x0D, 0x2B, 0xED, 0xDB
    .byte 0x30, 0x1C, 0x05, 0x28, 0xDF, 0xDB, 0x42, 0x46, 0x57, 0x68, 0x05, 0x97, 0x01, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x09, 0xF0, 0xAD, 0xFA, 0x06, 0x90, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0
    .byte 0xA7, 0xFA, 0x81, 0x46, 0x00, 0x20, 0x43, 0x46, 0x5B, 0x68, 0x9A, 0x46, 0x01, 0x1C, 0x0B, 0x31
    .byte 0x01, 0x30, 0x84, 0x46, 0x05, 0x9E, 0x8C, 0x19, 0x60, 0x01, 0x49, 0x01, 0x15, 0x31, 0x15, 0x30
    .byte 0x38, 0x18, 0x3A, 0x1C, 0x15, 0x32, 0x09, 0x25, 0x40, 0x00, 0x4E, 0x46, 0x83, 0x19, 0x49, 0x00
    .byte 0x06, 0x98, 0x09, 0x18, 0x00, 0x2A, 0x07, 0xDB, 0x00, 0x2C, 0x05, 0xDB, 0x1D, 0x2A, 0x03, 0xDC
    .byte 0x13, 0x2C, 0x01, 0xDC, 0x08, 0x88, 0x18, 0x80, 0x02, 0x31, 0x02, 0x33, 0x01, 0x32, 0x01, 0x3D
    .byte 0x00, 0x2D, 0xEF, 0xDA, 0x60, 0x46, 0x0A, 0x28, 0xD8, 0xDB, 0x51, 0x46, 0x49, 0x42, 0x8A, 0x46
    .byte 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0, 0x73, 0xFA, 0x81, 0x46, 0x00, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x09, 0xF0, 0x6D, 0xFA, 0x07, 0x1C, 0x00, 0x21, 0x00, 0x20, 0x0D, 0x1C, 0x10, 0x35
    .byte 0x4E, 0x1C, 0x2C, 0x1C, 0x63, 0x01, 0x01, 0x30, 0x52, 0x46, 0x81, 0x18, 0x02, 0x1C, 0x00, 0x29
    .byte 0x0D, 0xDB, 0x00, 0x2D, 0x0B, 0xDB, 0x1D, 0x29, 0x09, 0xDC, 0x13, 0x2C, 0x07, 0xDC, 0x58, 0x18
    .byte 0x40, 0x00, 0xC0, 0x19, 0x99, 0x18, 0x49, 0x00, 0x49, 0x44, 0x09, 0x88, 0x01, 0x80, 0x10, 0x1C
    .byte 0x06, 0x28, 0xE8, 0xDB, 0x31, 0x1C, 0x03, 0x29, 0xDF, 0xDB, 0x01, 0x23, 0x02, 0x93, 0x00, 0xF0
    .byte 0xCD, 0xFC, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03, 0x00, 0x20, 0x46, 0x46, 0x70, 0x60, 0x54, 0xE3
    .byte 0xFF, 0xF7, 0x0A, 0xFC, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0, 0x39, 0xFA, 0xFF, 0xF7
    .byte 0x6D, 0xFC, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0, 0x32, 0xFA, 0xFF, 0xF7, 0x6E, 0xFD
    .byte 0x00, 0x25, 0x01, 0x9F, 0xBD, 0x42, 0x29, 0xDA, 0x17, 0x48, 0x44, 0x46, 0x10, 0x34, 0x17, 0x49
    .byte 0x46, 0x18, 0x30, 0x68, 0x4C, 0x30, 0x01, 0x78, 0x07, 0x20, 0x08, 0x40, 0xE9, 0xF7, 0xA0, 0xFD
    .byte 0x00, 0x21, 0x20, 0x70, 0x61, 0x70, 0x61, 0x80, 0x11, 0x48, 0x00, 0x78, 0x00, 0x06, 0x00, 0x16
    .byte 0xA8, 0x42, 0x00, 0xD1, 0x02, 0x21, 0xE1, 0x80, 0x00, 0x20, 0x09, 0xF0, 0xD1, 0xF9, 0x29, 0x1C
    .byte 0x0A, 0x31, 0x49, 0x01, 0x40, 0x18, 0xE0, 0x60, 0x68, 0x02, 0x0A, 0x4A, 0x80, 0x18, 0x20, 0x61
    .byte 0x14, 0x34, 0x04, 0x36, 0x01, 0x35, 0x01, 0x9B, 0x9D, 0x42, 0xDA, 0xDB, 0x00, 0x20, 0x46, 0x46
    .byte 0x70, 0x60, 0xB0, 0x60, 0x11, 0xE3, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03, 0x18, 0x08, 0x00, 0x00
    .byte 0x80, 0x2C, 0x00, 0x03, 0x00, 0x18, 0x00, 0x06, 0x47, 0x46, 0xB8, 0x68, 0x01, 0x30, 0xB8, 0x60
    .byte 0x00, 0x28, 0x00, 0xDC, 0x54, 0xE2, 0x00, 0x21, 0xB9, 0x60, 0x78, 0x68, 0x01, 0x30, 0x78, 0x60
    .byte 0x2F, 0x28, 0x00, 0xDD, 0x47, 0xE2, 0x00, 0x91, 0x00, 0x20, 0x00, 0x22, 0x09, 0xF0, 0xE0, 0xF9
    .byte 0x01, 0x1C, 0x1E, 0x4A, 0x68, 0x46, 0x3C, 0xF0, 0x29, 0xF8, 0x79, 0x68, 0x20, 0x20, 0x40, 0x1A
    .byte 0x00, 0x28, 0x00, 0xDA, 0x00, 0x20, 0x06, 0x1C, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0
    .byte 0xCF, 0xF9, 0x81, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0, 0xC9, 0xF9, 0x07, 0x1C
    .byte 0x00, 0x20, 0x00, 0x24, 0x42, 0x1C, 0x15, 0x1C, 0x90, 0x01, 0x49, 0x46, 0x43, 0x18, 0x50, 0x01
    .byte 0x30, 0x18, 0x40, 0x00, 0xC1, 0x19, 0xA0, 0x19, 0x00, 0x28, 0x07, 0xDB, 0x00, 0x2A, 0x05, 0xDB
    .byte 0x1D, 0x28, 0x03, 0xDC, 0x13, 0x2D, 0x01, 0xDC, 0x18, 0x88, 0x08, 0x80, 0x02, 0x33, 0x02, 0x31
    .byte 0x01, 0x34, 0x20, 0x2C, 0xEF, 0xDB, 0x10, 0x1C, 0x03, 0x28, 0xE2, 0xDB, 0x01, 0x9A, 0x03, 0x2A
    .byte 0x7B, 0xD0, 0x03, 0x2A, 0x04, 0xDC, 0x02, 0x2A, 0x07, 0xD0, 0x01, 0xE2, 0x40, 0x01, 0x00, 0x01
    .byte 0x01, 0x9B, 0x04, 0x2B, 0x00, 0xD1, 0x19, 0xE1, 0xFA, 0xE1, 0x46, 0x46, 0x71, 0x68, 0x26, 0x20
    .byte 0x40, 0x1A, 0x00, 0x28, 0x00, 0xDA, 0x00, 0x20, 0x07, 0x1C, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x09, 0xF0, 0x8E, 0xF9, 0x07, 0x90, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0, 0x88, 0xF9
    .byte 0x81, 0x46, 0x00, 0x20, 0x41, 0x46, 0x49, 0x68, 0x8A, 0x46, 0x00, 0x24, 0xC5, 0x1D, 0x01, 0x30
    .byte 0x84, 0x46, 0x2B, 0x1C, 0x98, 0x01, 0x07, 0x9E, 0x82, 0x19, 0x58, 0x01, 0x38, 0x18, 0x40, 0x00
    .byte 0x4E, 0x46, 0x81, 0x19, 0xE0, 0x19, 0x00, 0x28, 0x07, 0xDB, 0x00, 0x2D, 0x05, 0xDB, 0x1D, 0x28
    .byte 0x03, 0xDC, 0x13, 0x2B, 0x01, 0xDC, 0x10, 0x88, 0x08, 0x80, 0x02, 0x32, 0x02, 0x31, 0x01, 0x34
    .byte 0x08, 0x2C, 0xEF, 0xDB, 0x60, 0x46, 0x06, 0x28, 0xDF, 0xDB, 0x29, 0x20, 0x57, 0x46, 0xC0, 0x1B
    .byte 0x00, 0x28, 0x00, 0xDA, 0x00, 0x20, 0x81, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0
    .byte 0x57, 0xF9, 0x08, 0x90, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0, 0x51, 0xF9, 0x82, 0x46
    .byte 0x00, 0x20, 0xC6, 0x1D, 0x01, 0x30, 0x84, 0x46, 0x35, 0x1C, 0x69, 0x01, 0x0C, 0x31, 0x4A, 0x46
    .byte 0x50, 0x18, 0x0C, 0x32, 0x07, 0x24, 0x40, 0x00, 0x57, 0x46, 0xC3, 0x19, 0x49, 0x00, 0x08, 0x98
    .byte 0x09, 0x18, 0x00, 0x2A, 0x07, 0xDB, 0x00, 0x2E, 0x05, 0xDB, 0x1D, 0x2A, 0x03, 0xDC, 0x13, 0x2D
    .byte 0x01, 0xDC, 0x08, 0x88, 0x18, 0x80, 0x02, 0x31, 0x02, 0x33, 0x01, 0x32, 0x01, 0x3C, 0x00, 0x2C
    .byte 0xEF, 0xDA, 0x60, 0x46, 0x06, 0x28, 0xDC, 0xDB, 0x8A, 0xE1, 0x42, 0x46, 0x51, 0x68, 0x26, 0x20
    .byte 0x40, 0x1A, 0x00, 0x28, 0x00, 0xDA, 0x00, 0x20, 0x07, 0x1C, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x09, 0xF0, 0x1E, 0xF9, 0x82, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0, 0x18, 0xF9
    .byte 0x81, 0x46, 0x00, 0x20, 0x00, 0x24, 0x85, 0x1D, 0x01, 0x30, 0x84, 0x46, 0x2B, 0x1C, 0x98, 0x01
    .byte 0x56, 0x46, 0x82, 0x19, 0x58, 0x01, 0x38, 0x18, 0x40, 0x00, 0x4E, 0x46, 0x81, 0x19, 0xE0, 0x19
    .byte 0x00, 0x28, 0x07, 0xDB, 0x00, 0x2D, 0x05, 0xDB, 0x1D, 0x28, 0x03, 0xDC, 0x13, 0x2B, 0x01, 0xDC
    .byte 0x10, 0x88, 0x08, 0x80, 0x02, 0x32, 0x02, 0x31, 0x01, 0x34, 0x08, 0x2C, 0xEF, 0xDB, 0x60, 0x46
    .byte 0x06, 0x28, 0xDF, 0xDB, 0x47, 0x46, 0x79, 0x68, 0x29, 0x20, 0x40, 0x1A, 0x00, 0x28, 0x00, 0xDA
    .byte 0x00, 0x20, 0x81, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0, 0xE9, 0xF8, 0x09, 0x90
    .byte 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0, 0xE3, 0xF8, 0x84, 0x46, 0x00, 0x20, 0x41, 0x46
    .byte 0x49, 0x68, 0x8A, 0x46, 0x86, 0x1D, 0x01, 0x30, 0x15, 0x90, 0x35, 0x1C, 0x69, 0x01, 0x0C, 0x31
    .byte 0x4A, 0x46, 0x50, 0x18, 0x0C, 0x32, 0x07, 0x24, 0x40, 0x00, 0x67, 0x46, 0xC3, 0x19, 0x49, 0x00
    .byte 0x09, 0x98, 0x09, 0x18, 0x00, 0x2A, 0x07, 0xDB, 0x00, 0x2E, 0x05, 0xDB, 0x1D, 0x2A, 0x03, 0xDC
    .byte 0x13, 0x2D, 0x01, 0xDC, 0x08, 0x88, 0x18, 0x80, 0x02, 0x31, 0x02, 0x33, 0x01, 0x32, 0x01, 0x3C
    .byte 0x00, 0x2C, 0xEF, 0xDA, 0x15, 0x98, 0x06, 0x28, 0xDC, 0xDB, 0x2C, 0x20, 0x51, 0x46, 0x40, 0x1A
    .byte 0x00, 0x28, 0x00, 0xDA, 0x00, 0x20, 0x81, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0
    .byte 0xAF, 0xF8, 0x0A, 0x90, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0, 0xA9, 0xF8, 0x82, 0x46
    .byte 0x00, 0x20, 0x06, 0x1C, 0x0D, 0x36, 0x01, 0x30, 0x84, 0x46, 0x35, 0x1C, 0x69, 0x01, 0x04, 0x31
    .byte 0x4A, 0x46, 0x50, 0x18, 0x04, 0x32, 0x07, 0x24, 0x40, 0x00, 0x57, 0x46, 0xC3, 0x19, 0x49, 0x00
    .byte 0x0A, 0x98, 0x09, 0x18, 0x00, 0x2A, 0x07, 0xDB, 0x00, 0x2E, 0x05, 0xDB, 0x1D, 0x2A, 0x03, 0xDC
    .byte 0x13, 0x2D, 0x01, 0xDC, 0x08, 0x88, 0x18, 0x80, 0x02, 0x31, 0x02, 0x33, 0x01, 0x32, 0x01, 0x3C
    .byte 0x00, 0x2C, 0xEF, 0xDA, 0x60, 0x46, 0x06, 0x28, 0xDB, 0xDB, 0xE1, 0xE0, 0x42, 0x46, 0x51, 0x68
    .byte 0x26, 0x20, 0x40, 0x1A, 0x00, 0x28, 0x00, 0xDA, 0x00, 0x20, 0x07, 0x1C, 0x01, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x09, 0xF0, 0x75, 0xF8, 0x82, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0
    .byte 0x6F, 0xF8, 0x81, 0x46, 0x00, 0x20, 0x00, 0x24, 0x45, 0x1D, 0x01, 0x30, 0x84, 0x46, 0x2B, 0x1C
    .byte 0x98, 0x01, 0x56, 0x46, 0x82, 0x19, 0x58, 0x01, 0x38, 0x18, 0x40, 0x00, 0x4E, 0x46, 0x81, 0x19
    .byte 0xE0, 0x19, 0x00, 0x28, 0x07, 0xDB, 0x00, 0x2D, 0x05, 0xDB, 0x1D, 0x28, 0x03, 0xDC, 0x13, 0x2B
    .byte 0x01, 0xDC, 0x10, 0x88, 0x08, 0x80, 0x02, 0x32, 0x02, 0x31, 0x01, 0x34, 0x08, 0x2C, 0xEF, 0xDB
    .byte 0x60, 0x46, 0x06, 0x28, 0xDF, 0xDB, 0x47, 0x46, 0x79, 0x68, 0x29, 0x20, 0x40, 0x1A, 0x00, 0x28
    .byte 0x00, 0xDA, 0x00, 0x20, 0x81, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0, 0x40, 0xF8
    .byte 0x0B, 0x90, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0, 0x3A, 0xF8, 0x82, 0x46, 0x00, 0x20
    .byte 0x46, 0x1D, 0x01, 0x30, 0x84, 0x46, 0x35, 0x1C, 0x69, 0x01, 0x0A, 0x31, 0x4A, 0x46, 0x50, 0x18
    .byte 0x0A, 0x32, 0x07, 0x24, 0x40, 0x00, 0x57, 0x46, 0xC3, 0x19, 0x49, 0x00, 0x0B, 0x98, 0x09, 0x18
    .byte 0x00, 0x2A, 0x07, 0xDB, 0x00, 0x2E, 0x05, 0xDB, 0x1D, 0x2A, 0x03, 0xDC, 0x13, 0x2D, 0x01, 0xDC
    .byte 0x08, 0x88, 0x18, 0x80, 0x02, 0x31, 0x02, 0x33, 0x01, 0x32, 0x01, 0x3C, 0x00, 0x2C, 0xEF, 0xDA
    .byte 0x60, 0x46, 0x06, 0x28, 0xDC, 0xDB, 0x42, 0x46, 0x51, 0x68, 0x2C, 0x20, 0x40, 0x1A, 0x00, 0x28
    .byte 0x00, 0xDA, 0x00, 0x20, 0x81, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0, 0x08, 0xF8
    .byte 0x0C, 0x90, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x09, 0xF0, 0x02, 0xF8, 0x84, 0x46, 0x00, 0x20
    .byte 0x43, 0x46, 0x5B, 0x68, 0x9A, 0x46, 0x06, 0x1C, 0x0C, 0x36, 0x01, 0x30, 0x15, 0x90, 0x35, 0x1C
    .byte 0x69, 0x01, 0x02, 0x31, 0x4F, 0x46, 0x78, 0x18, 0x4A, 0x46, 0x02, 0x32, 0x07, 0x24, 0x40, 0x00
    .byte 0x67, 0x46, 0xC3, 0x19, 0x49, 0x00, 0x0C, 0x98, 0x09, 0x18, 0x00, 0x2A, 0x07, 0xDB, 0x00, 0x2E
    .byte 0x05, 0xDB, 0x1D, 0x2A, 0x03, 0xDC, 0x13, 0x2D, 0x01, 0xDC, 0x08, 0x88, 0x18, 0x80, 0x02, 0x31
    .byte 0x02, 0x33, 0x01, 0x32, 0x01, 0x3C, 0x00, 0x2C, 0xEF, 0xDA, 0x15, 0x98, 0x06, 0x28, 0xDA, 0xDB
    .byte 0x2F, 0x20, 0x51, 0x46, 0x40, 0x1A, 0x00, 0x28, 0x00, 0xDA, 0x00, 0x20, 0x81, 0x46, 0x01, 0x20
    .byte 0x00, 0x21, 0x00, 0x22, 0x08, 0xF0, 0xCC, 0xFF, 0x0D, 0x90, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x08, 0xF0, 0xC6, 0xFF, 0x82, 0x46, 0x00, 0x20, 0x06, 0x1C, 0x0C, 0x36, 0x01, 0x30, 0x84, 0x46
    .byte 0x35, 0x1C, 0x69, 0x01, 0x0C, 0x31, 0x4A, 0x46, 0x50, 0x18, 0x0C, 0x32, 0x07, 0x24, 0x40, 0x00
    .byte 0x57, 0x46, 0xC3, 0x19, 0x49, 0x00, 0x0D, 0x98, 0x09, 0x18, 0x00, 0x2A, 0x07, 0xDB, 0x00, 0x2E
    .byte 0x05, 0xDB, 0x1D, 0x2A, 0x03, 0xDC, 0x13, 0x2D, 0x01, 0xDC, 0x08, 0x88, 0x18, 0x80, 0x02, 0x31
    .byte 0x02, 0x33, 0x01, 0x32, 0x01, 0x3C, 0x00, 0x2C, 0xEF, 0xDA, 0x60, 0x46, 0x06, 0x28, 0xDB, 0xDB
    .byte 0x01, 0x21, 0x02, 0x91, 0x04, 0xE0, 0x42, 0x46, 0x51, 0x60, 0x10, 0x68, 0x01, 0x30, 0x10, 0x60
    .byte 0x09, 0x21, 0x06, 0x48, 0x00, 0x88, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD1, 0x16, 0xE2, 0x00, 0x20
    .byte 0x43, 0x46, 0x98, 0x60, 0x58, 0x60, 0x07, 0x20, 0x18, 0x60, 0x0F, 0xE2, 0xA0, 0x4E, 0x00, 0x03
    .byte 0x46, 0x46, 0xB0, 0x68, 0x01, 0x30, 0xB0, 0x60, 0x00, 0x28, 0x75, 0xDD, 0x00, 0x24, 0xB4, 0x60
    .byte 0x70, 0x68, 0x08, 0x28, 0x6A, 0xDC, 0x01, 0x30, 0x70, 0x60, 0x81, 0x00, 0x08, 0x18, 0x01, 0x1C
    .byte 0x00, 0x28, 0x00, 0xDA, 0xC1, 0x1D, 0xC9, 0x10, 0x0F, 0x1C, 0xB9, 0x46, 0x01, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x08, 0xF0, 0x6D, 0xFF, 0x0E, 0x90, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x08, 0xF0
    .byte 0x67, 0xFF, 0x0F, 0x90, 0x05, 0x2F, 0x04, 0xDD, 0x05, 0x20, 0x81, 0x46, 0x05, 0x2F, 0x00, 0xDD
    .byte 0x05, 0x27, 0x00, 0x25, 0x78, 0x00, 0x84, 0x42, 0x45, 0xDA, 0x49, 0x46, 0x49, 0x00, 0x11, 0x91
    .byte 0x82, 0x46, 0x00, 0x24, 0x6A, 0x1C, 0x12, 0x92, 0x11, 0x9B, 0x9C, 0x42, 0x38, 0xDA, 0x16, 0x93
    .byte 0x56, 0x46, 0xAE, 0x1B, 0xB4, 0x46, 0x4C, 0x45, 0x02, 0xDA, 0x23, 0x1C, 0x14, 0x33, 0x03, 0xE0
    .byte 0x16, 0x99, 0x60, 0x1A, 0x03, 0x1C, 0x1E, 0x33, 0x61, 0x46, 0x11, 0x31, 0xBD, 0x42, 0x00, 0xDA
    .byte 0xE9, 0x1D, 0x00, 0x2B, 0x20, 0xDB, 0x00, 0x29, 0x1E, 0xDB, 0x1D, 0x2B, 0x1C, 0xDC, 0x13, 0x29
    .byte 0x1A, 0xDC, 0x19, 0x22, 0x4E, 0x46, 0x90, 0x1B, 0x02, 0x19, 0x0C, 0x26, 0xF0, 0x1B, 0x40, 0x19
    .byte 0x00, 0x2A, 0x11, 0xDB, 0x00, 0x28, 0x0F, 0xDB, 0x1D, 0x2A, 0x0D, 0xDC, 0x13, 0x28, 0x0B, 0xDC
    .byte 0x40, 0x01, 0x80, 0x18, 0x40, 0x00, 0x0F, 0x9A, 0x80, 0x18, 0x49, 0x01, 0xC9, 0x18, 0x49, 0x00
    .byte 0x0E, 0x9B, 0xC9, 0x18, 0x09, 0x88, 0x01, 0x80, 0x01, 0x34, 0x16, 0x9E, 0xB4, 0x42, 0xCA, 0xDB
    .byte 0x12, 0x9D, 0x55, 0x45, 0xBD, 0xDB, 0x01, 0x27, 0x02, 0x97, 0x05, 0xE0, 0x40, 0x46, 0x44, 0x60
    .byte 0x00, 0x68, 0x01, 0x30, 0x41, 0x46, 0x08, 0x60, 0x09, 0x21, 0x06, 0x48, 0x00, 0x88, 0x08, 0x40
    .byte 0x00, 0x28, 0x00, 0xD1, 0x8A, 0xE1, 0x00, 0x20, 0x42, 0x46, 0x90, 0x60, 0x50, 0x60, 0x07, 0x20
    .byte 0x10, 0x60, 0x83, 0xE1, 0xA0, 0x4E, 0x00, 0x03, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x08, 0xF0
    .byte 0xF7, 0xFE, 0xFF, 0xF7, 0x2B, 0xF9, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x08, 0xF0, 0xF0, 0xFE
    .byte 0xFF, 0xF7, 0x2C, 0xFA, 0x01, 0x23, 0x02, 0x93, 0x46, 0x46, 0x30, 0x68, 0x01, 0x30, 0x30, 0x60
    .byte 0x6C, 0xE1, 0x01, 0x9F, 0x00, 0x2F, 0x4B, 0xD0, 0x0B, 0x48, 0x42, 0x46, 0x10, 0x32, 0x0B, 0x49
    .byte 0x43, 0x18, 0x01, 0x24, 0x3D, 0x1C, 0x18, 0x68, 0xBA, 0x30, 0x00, 0x88, 0x40, 0x08, 0x02, 0x21
    .byte 0x00, 0x28, 0x00, 0xD1, 0x01, 0x21, 0x51, 0x70, 0x54, 0x80, 0x14, 0x32, 0x04, 0x33, 0x01, 0x3D
    .byte 0x00, 0x2D, 0xF0, 0xD1, 0x34, 0xE0, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03, 0x18, 0x08, 0x00, 0x00
    .byte 0x00, 0x20, 0x43, 0x46, 0x58, 0x60, 0x18, 0x68, 0x01, 0x30, 0x18, 0x60, 0x46, 0xE1, 0x00, 0x25
    .byte 0x03, 0x49, 0x01, 0x9E, 0xB5, 0x42, 0x14, 0xDA, 0x02, 0x48, 0x03, 0x4F, 0xC2, 0x19, 0x0A, 0xE0
    .byte 0x58, 0x2C, 0x00, 0x03, 0x20, 0x2E, 0x00, 0x03, 0x18, 0x08, 0x00, 0x00, 0x04, 0x32, 0x01, 0x35
    .byte 0x01, 0x98, 0x85, 0x42, 0x05, 0xDA, 0x10, 0x68, 0xBA, 0x30, 0x00, 0x88, 0x40, 0x08, 0x00, 0x28
    .byte 0xF4, 0xD1, 0x69, 0x18, 0x08, 0x78, 0x62, 0x28, 0x01, 0xD8, 0x01, 0x30, 0x08, 0x70, 0x00, 0x20
    .byte 0x00, 0x21, 0x00, 0x22, 0x08, 0xF0, 0x9C, 0xFE, 0xFF, 0xF7, 0xD8, 0xF9, 0x01, 0x21, 0x02, 0x91
    thumb_func_start sub_8025980
    sub_8025980:
    mov r2, r8
    ldr r0, [r2, #0x00]
    adds r0, #0x01
    str r0, [r2, #0x00]
    b def_8024EC0
    .byte 0x00, 0x23, 0x99, 0x46, 0x08, 0xF0, 0x7B, 0xF9, 0x00, 0x28, 0x03, 0xD0, 0x08, 0xF0, 0x8D, 0xF9
    .byte 0x00, 0x28, 0x01, 0xD1, 0x01, 0x26, 0xB1, 0x46, 0x4F, 0x46, 0x00, 0x2F, 0x58, 0xD0, 0x36, 0x4D
    .byte 0x41, 0x46, 0xC8, 0x68, 0xC0, 0x00, 0x40, 0x19, 0x00, 0x22, 0x81, 0x5E, 0x02, 0x23, 0xC2, 0x5E
    .byte 0x00, 0x20, 0x08, 0xF0, 0x78, 0xFE, 0x04, 0x1C, 0x00, 0x20, 0x1B, 0x21, 0x1E, 0x22, 0x08, 0xF0
    .byte 0x72, 0xFE, 0x00, 0x88, 0x20, 0x80, 0x46, 0x46, 0xF0, 0x68, 0xC0, 0x00, 0x40, 0x19, 0x00, 0x27
    .byte 0xC1, 0x5F, 0x02, 0x23, 0xC2, 0x5E, 0x01, 0x32, 0x00, 0x20, 0x08, 0xF0, 0x64, 0xFE, 0x04, 0x1C
    .byte 0x00, 0x20, 0x1B, 0x21, 0x1F, 0x22, 0x08, 0xF0, 0x5E, 0xFE, 0x00, 0x88, 0x20, 0x80, 0x00, 0x20
    .byte 0x00, 0x24, 0x47, 0x1C, 0x3E, 0x1C, 0x41, 0x46, 0xC8, 0x68, 0xC0, 0x00, 0x40, 0x19, 0x00, 0x22
    .byte 0x81, 0x5E, 0x89, 0x19, 0x02, 0x23, 0xC2, 0x5E, 0x12, 0x19, 0x00, 0x20, 0x08, 0xF0, 0x4B, 0xFE
    .byte 0x01, 0x88, 0x1A, 0x4B, 0x1A, 0x1C, 0x11, 0x40, 0x01, 0x80, 0x41, 0x46, 0xC8, 0x68, 0xC0, 0x00
    .byte 0x40, 0x19, 0x00, 0x22, 0x81, 0x5E, 0x89, 0x19, 0x02, 0x23, 0xC2, 0x5E, 0x12, 0x19, 0x00, 0x20
    .byte 0x08, 0xF0, 0x39, 0xFE, 0x01, 0x88, 0xE0, 0x23, 0x1B, 0x02, 0x1A, 0x1C, 0x11, 0x43, 0x01, 0x80
    .byte 0x01, 0x34, 0x01, 0x2C, 0xD7, 0xDD, 0x38, 0x1C, 0x06, 0x28, 0xD1, 0xDD, 0x01, 0x26, 0x02, 0x96
    .byte 0x00, 0x24, 0x01, 0x9F, 0xBC, 0x42, 0x00, 0xDB, 0x90, 0xE0, 0x07, 0x4A, 0x01, 0x23, 0x5B, 0x42
    .byte 0x40, 0x46, 0xC1, 0x68, 0x85, 0x89, 0x06, 0x48, 0x00, 0x88, 0x20, 0x28, 0x25, 0xD0, 0x20, 0x28
    .byte 0x09, 0xDC, 0x10, 0x28, 0x30, 0xD0, 0x3D, 0xE0, 0x00, 0x00, 0xA0, 0xB9, 0x0D, 0x08, 0xFF, 0x0F
    .byte 0x00, 0x00, 0x48, 0x4F, 0x00, 0x03, 0x40, 0x28, 0x02, 0xD0, 0x80, 0x28, 0x06, 0xD0, 0x31, 0xE0
    .byte 0xC8, 0x00, 0x80, 0x18, 0x00, 0x79, 0x00, 0x06, 0x00, 0x16, 0x22, 0xE0, 0xC8, 0x00, 0x80, 0x18
    .byte 0x40, 0x79, 0x00, 0x06, 0x00, 0x16, 0x00, 0x04, 0x01, 0x0C, 0x00, 0x14, 0x98, 0x42, 0x21, 0xD0
    .byte 0x08, 0x04, 0x00, 0x14, 0x46, 0x46, 0xF0, 0x60, 0x1C, 0xE0, 0xC8, 0x00, 0x80, 0x18, 0x80, 0x79
    .byte 0x00, 0x06, 0x00, 0x16, 0x00, 0x04, 0x01, 0x0C, 0x00, 0x14, 0x98, 0x42, 0x12, 0xD0, 0x08, 0x04
    .byte 0x00, 0x14, 0x47, 0x46, 0xF8, 0x60, 0x0D, 0xE0, 0xC8, 0x00, 0x80, 0x18, 0xC0, 0x79, 0x00, 0x06
    .byte 0x00, 0x16, 0x00, 0x04, 0x01, 0x0C, 0x00, 0x14, 0x98, 0x42, 0x03, 0xD0, 0x08, 0x04, 0x00, 0x14
    .byte 0x41, 0x46, 0xC8, 0x60, 0x28, 0x04, 0x05, 0x14, 0x46, 0x46, 0xF0, 0x68, 0x85, 0x42, 0x38, 0xD0
    .byte 0xED, 0x00, 0xA8, 0x18, 0x00, 0x27, 0xC3, 0x5F, 0x02, 0x21, 0x44, 0x5E, 0x00, 0x20, 0x19, 0x1C
    .byte 0x22, 0x1C, 0x14, 0x93, 0x08, 0xF0, 0xC7, 0xFD, 0x00, 0x26, 0x06, 0x80, 0x01, 0x34, 0x00, 0x20
    .byte 0x14, 0x9B, 0x19, 0x1C, 0x22, 0x1C, 0x08, 0xF0, 0xBE, 0xFD, 0x06, 0x80, 0x00, 0x21, 0x0F, 0x48
    .byte 0x2D, 0x18, 0x02, 0x22, 0xAF, 0x5E, 0x00, 0x23, 0xED, 0x5E, 0x00, 0x24, 0x4E, 0x1C, 0x3A, 0x19
    .byte 0x00, 0x20, 0xA9, 0x19, 0x08, 0xF0, 0xAF, 0xFD, 0x02, 0x88, 0xF0, 0x23, 0x1B, 0x02, 0x19, 0x1C
    .byte 0x0A, 0x43, 0x02, 0x80, 0x01, 0x34, 0x01, 0x2C, 0xF1, 0xDD, 0x31, 0x1C, 0x06, 0x29, 0xEC, 0xDD
    .byte 0x4E, 0x46, 0x00, 0x2E, 0x25, 0xD0, 0x8D, 0x20, 0x3A, 0xF0, 0xD5, 0xF9, 0x21, 0xE0, 0xA0, 0xB9
    .byte 0x0D, 0x08, 0x01, 0x34, 0x01, 0x9F, 0xBC, 0x42, 0x00, 0xDA, 0x71, 0xE7, 0x09, 0x21, 0x05, 0x48
    .byte 0x00, 0x88, 0x08, 0x40, 0x00, 0x28, 0x14, 0xD0, 0x8F, 0x20, 0x3A, 0xF0, 0xC4, 0xF9, 0x41, 0x46
    .byte 0x08, 0x68, 0x01, 0x30, 0x0C, 0xE0, 0xA0, 0x4E, 0x00, 0x03, 0x4C, 0x49, 0x43, 0x46, 0xD8, 0x68
    .byte 0x40, 0x18, 0x01, 0x78, 0xFD, 0x26, 0xF6, 0x00, 0x90, 0x19, 0x01, 0x70, 0x49, 0x49, 0x01, 0x20
    non_word_aligned_thumb_func_start sub_8025BBA
    sub_8025BBA:
    str r0, [r1, #0x00]
    thumb_func_start def_8024EC0
    def_8024EC0: @ 08025BBC
    mov r7, r8
    ldr r0, [r7, #0x00]
    cmp r0, #0x04
    ble _08025C92
    ldr r0, _08025CE0 @ =0x03002E20
    ldr r0, [r0, #0x10]
    ldr r2, _08025CE4 @ =0x080E645C
    lsls r0, r0, #0x1A
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _08025BD4
    adds r0, #0x3F
    _08025BD4:
    asrs r1, r0, #0x06
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r1
    ldr r1, _08025CE8 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    subs r0, r0, r1
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r0, r0, #0x01
    mov r10, r0
    movs r0, #0x00
    str r0, [sp, #0x040]
    movs r1, #0x1F
    mov r9, r1
    movs r7, #0x1F
    ldr r2, _08025CEC @ =0x080AAD3C
    adds r2, #0x40
    str r2, [sp, #0x04C]
    _08025C04:
    ldr r3, [sp, #0x040]
    lsls r3, r3, #0x01
    str r3, [sp, #0x05C]
    ldr r6, _08025CEC @ =0x080AAD3C
    adds r0, r3, r6
    ldrh r4, [r0, #0x00]
    adds r5, r4, #0x0
    ands r5, r7
    lsrs r6, r4, #0x05
    mov r0, r9
    ands r6, r0
    lsrs r4, r4, #0x0A
    ands r4, r0
    ldr r2, [sp, #0x04C]
    ldrh r1, [r2, #0x00]
    adds r0, r1, #0x0
    ands r0, r7
    lsrs r2, r1, #0x05
    mov r3, r9
    ands r2, r3
    lsrs r1, r1, #0x0A
    ands r1, r3
    subs r0, r0, r5
    mov r3, r10
    muls r3, r0
    adds r0, r3, #0x0
    asrs r0, r0, #0x0F
    adds r5, r5, r0
    lsls r5, r5, #0x10
    lsrs r5, r5, #0x10
    subs r2, r2, r6
    mov r0, r10
    muls r0, r2
    asrs r0, r0, #0x0F
    adds r6, r6, r0
    lsls r6, r6, #0x10
    lsrs r6, r6, #0x10
    subs r1, r1, r4
    mov r0, r10
    muls r0, r1
    asrs r0, r0, #0x0F
    adds r4, r4, r0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    movs r0, #0x00
    bl pltt_getBuffer
    ldr r1, [sp, #0x05C]
    adds r3, r1, r0
    movs r2, #0xE0
    lsls r2, r2, #0x01
    adds r3, r3, r2
    ands r5, r7
    ands r6, r7
    lsls r6, r6, #0x05
    orrs r5, r6
    ands r4, r7
    lsls r4, r4, #0x0A
    orrs r5, r4
    strh r5, [r3, #0x00]
    ldr r3, [sp, #0x04C]
    adds r3, #0x02
    str r3, [sp, #0x04C]
    ldr r6, [sp, #0x040]
    adds r6, #0x01
    str r6, [sp, #0x040]
    cmp r6, #0x0F
    ble _08025C04
    movs r0, #0x01
    bl pltt_setDirtyFlag
    _08025C92:
    bl sub_8024970
    mov r7, r8
    ldr r0, [r7, #0x00]
    cmp r0, #0x03
    ble _08025CBA
    ldr r0, [sp, #0x004]
    cmp r0, #0x00
    beq _08025CBA
    mov r4, r8
    adds r4, #0x10
    adds r5, r0, #0x0
    _08025CAA:
    adds r0, r4, #0x0
    movs r1, #0x01
    bl sub_800EB74
    adds r4, #0x14
    subs r5, #0x01
    cmp r5, #0x00
    bne _08025CAA
    _08025CBA:
    ldr r1, [sp, #0x008]
    cmp r1, #0x00
    beq _08025CC6
    movs r0, #0x01
    bl map_setBufferDirty
    _08025CC6:
    add sp, #0x060
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00, 0x60, 0xBA, 0x0D, 0x08, 0x50, 0x5C, 0x00, 0x03
    _08025CE0: .4byte 0x03002E20
    _08025CE4: .4byte gSinTable
    _08025CE8: .4byte 0x000003FF
    _08025CEC: .4byte 0x080AAD3C
    thumb_func_start sub_8025CF0
    sub_8025CF0:
    push {lr}
    ldr r1, _08025D04 @ =0x03002E20
    ldr r2, _08025D08 @ =0x00000CAC
    adds r0, r1, r2
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bge _08025D0C
    bl sub_8025D70
    b _08025D6A
    _08025D04: .4byte 0x03002E20
    _08025D08: .4byte 0x00000CAC
    _08025D0C:
    ldr r2, _08025D30 @ =0x000007FE
    adds r0, r1, r2
    ldrh r2, [r0, #0x00]
    movs r1, #0xF0
    lsls r1, r1, #0x04
    ands r1, r2
    movs r0, #0x80
    lsls r0, r0, #0x02
    cmp r1, r0
    beq _08025D5A
    cmp r1, r0
    bgt _08025D34
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    beq _08025D46
    b _08025D6A
    .byte 0x00, 0x00
    _08025D30: .4byte 0x000007FE
    _08025D34:
    movs r0, #0x80
    lsls r0, r0, #0x03
    cmp r1, r0
    beq _08025D60
    movs r0, #0x80
    lsls r0, r0, #0x04
    cmp r1, r0
    beq _08025D66
    b _08025D6A
    _08025D46:
    movs r0, #0x10
    ands r0, r2
    cmp r0, #0x00
    bne _08025D54
    bl sub_801E7C8
    b _08025D6A
    _08025D54:
    bl sub_802123C
    b _08025D6A
    _08025D5A:
    bl sub_8022704
    b _08025D6A
    _08025D60:
    bl sub_8023AE8
    b _08025D6A
    _08025D66:
    bl sub_8024E88
    _08025D6A:
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_8025D70
    sub_8025D70:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x008
    bl sub_800EDF4
    adds r6, r0, #0x0
    ldr r0, _08025DA0 @ =0x03002E20
    adds r7, r0, #0x0
    adds r7, #0x24
    ldr r0, [r6, #0x0C]
    adds r0, #0x01
    str r0, [r6, #0x0C]
    ldr r0, [r6, #0x00]
    cmp r0, #0x06
    bls _08025D96
    b _080260D4
    _08025D96:
    lsls r0, r0, #0x02
    ldr r1, _08025DA4 @ =0x08025DA8
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    _08025DA0: .4byte 0x03002E20
    _08025DA4: .4byte 0x08025DA8
    .byte 0xC4, 0x5D, 0x02, 0x08, 0xD0, 0x5D, 0x02, 0x08, 0x7E, 0x5E, 0x02, 0x08, 0xC8, 0x5E, 0x02, 0x08
    .byte 0x9A, 0x60, 0x02, 0x08, 0xAA, 0x60, 0x02, 0x08, 0xB4, 0x60, 0x02, 0x08, 0x00, 0x20, 0x70, 0x60
    .byte 0x29, 0xF0, 0xD2, 0xFB, 0x01, 0x20, 0x30, 0x60, 0x70, 0x68, 0x01, 0x30, 0x70, 0x60, 0xB4, 0x28
    .byte 0x4A, 0xDD, 0x00, 0x25, 0x10, 0x49, 0x78, 0x18, 0x00, 0x68, 0x17, 0xF0, 0x6F, 0xFE, 0x00, 0x04
    .byte 0x00, 0x0C, 0x80, 0x46, 0x0D, 0x4C, 0x80, 0x20, 0x21, 0x1C, 0x39, 0xF0, 0x8D, 0xF8, 0x00, 0x28
    .byte 0x07, 0xD0, 0x21, 0x1C, 0x08, 0x31, 0x48, 0x88, 0x00, 0x28, 0x02, 0xD0, 0x49, 0x88, 0x88, 0x45
    .byte 0x00, 0xD2, 0x01, 0x25, 0x06, 0x4A, 0xB8, 0x18, 0x01, 0x88, 0x02, 0x20, 0x08, 0x40, 0x00, 0x28
    .byte 0x08, 0xD0, 0x00, 0x25, 0x75, 0x61, 0x07, 0xE0, 0x14, 0x08, 0x00, 0x00, 0x00, 0x94, 0x02, 0x02
    .byte 0xEE, 0x0B, 0x00, 0x00, 0x01, 0x20, 0x70, 0x61, 0x00, 0x2D, 0x13, 0xD0, 0x01, 0x20, 0x30, 0x61
    .byte 0xEF, 0xF7, 0x16, 0xFA, 0x0A, 0x49, 0x47, 0x46, 0x4F, 0x80, 0x08, 0x1C, 0x08, 0x38, 0x09, 0x4A
    .byte 0x89, 0x18, 0x80, 0x22, 0x12, 0x01, 0x3B, 0xF0, 0x7F, 0xFA, 0x01, 0x20, 0xEF, 0xF7, 0x1A, 0xFA
    .byte 0x37, 0xF0, 0x06, 0xFE, 0x00, 0x20, 0x70, 0x60, 0x02, 0x20, 0x30, 0x60, 0x36, 0xE1, 0x00, 0x00
    .byte 0x08, 0x44, 0x02, 0x02, 0xF8, 0xBF, 0xFF, 0xFF, 0x38, 0x1C, 0x27, 0xF0, 0x6B, 0xFD, 0x38, 0x1C
    .byte 0x29, 0xF0, 0x62, 0xFA, 0x2A, 0xE1, 0x0A, 0xF0, 0xD9, 0xFA, 0x04, 0x1C, 0x0D, 0x4D, 0x01, 0x20
    .byte 0x00, 0x21, 0x00, 0x22, 0x08, 0xF0, 0x10, 0xFC, 0x02, 0x1C, 0x0B, 0x4B, 0x20, 0x1C, 0x29, 0x1C
    .byte 0x0A, 0xF0, 0xA4, 0xFA, 0x00, 0x24, 0x00, 0x94, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x08, 0xF0
    .byte 0x03, 0xFC, 0x01, 0x1C, 0x05, 0x4A, 0x68, 0x46, 0x3B, 0xF0, 0x4C, 0xFA, 0x03, 0x20, 0x30, 0x60
    .byte 0xB4, 0x60, 0x0B, 0xE1, 0x00, 0x38, 0x00, 0x06, 0x80, 0x02, 0x00, 0x80, 0x40, 0x01, 0x00, 0x01
    .byte 0x70, 0x68, 0x01, 0x30, 0x70, 0x60, 0x01, 0x28, 0x00, 0xDC, 0xFF, 0xE0, 0x00, 0x21, 0x71, 0x60
    .byte 0xB0, 0x68, 0x07, 0x28, 0x00, 0xDD, 0xD8, 0xE0, 0x01, 0x30, 0xB0, 0x60, 0x01, 0x91, 0x01, 0xAC
    .byte 0x00, 0x20, 0x00, 0x22, 0x08, 0xF0, 0xE0, 0xFB, 0x01, 0x1C, 0x0B, 0x4A, 0x20, 0x1C, 0x3B, 0xF0
    .byte 0x29, 0xFA, 0x0A, 0x49, 0x78, 0x18, 0x00, 0x88, 0x01, 0x0A, 0x0F, 0x20, 0x01, 0x40, 0x01, 0x22
    .byte 0x90, 0x46, 0x03, 0x29, 0x01, 0xDD, 0x02, 0x27, 0xB8, 0x46, 0x02, 0x27, 0x03, 0x29, 0x00, 0xDD
    .byte 0x01, 0x27, 0x00, 0x24, 0x4D, 0x1C, 0x12, 0xE0, 0x40, 0x01, 0x00, 0x01, 0xE6, 0x07, 0x00, 0x00
    .byte 0xD8, 0x00, 0xC0, 0x18, 0x00, 0x28, 0x00, 0xDA, 0x07, 0x30, 0xC1, 0x10, 0x12, 0x20, 0x40, 0x1A
    .byte 0x21, 0x1C, 0x79, 0x43, 0x41, 0x44, 0x22, 0x1C, 0xFC, 0xF7, 0x60, 0xF8, 0x01, 0x34, 0xB3, 0x68
    .byte 0x28, 0x1C, 0x58, 0x43, 0x00, 0x28, 0x00, 0xDA, 0x07, 0x30, 0xC0, 0x10, 0x84, 0x42, 0xE7, 0xDB
    .byte 0x1C, 0x1C, 0xE0, 0x00, 0x00, 0x19, 0x00, 0x28, 0x00, 0xDA, 0x07, 0x30, 0xC1, 0x10, 0x12, 0x20
    .byte 0x40, 0x1A, 0x00, 0x22, 0x07, 0x2C, 0x00, 0xDD, 0x01, 0x22, 0x19, 0x1C, 0xFC, 0xF7, 0x76, 0xF9
    .byte 0xB0, 0x68, 0x40, 0x42, 0x81, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x08, 0xF0, 0x94, 0xFB
    .byte 0x80, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x08, 0xF0, 0x8E, 0xFB, 0x82, 0x46, 0x00, 0x21
    .byte 0xB6, 0x68, 0xB4, 0x46, 0x00, 0x23, 0x48, 0x46, 0x0D, 0x18, 0x4E, 0x1C, 0x2C, 0x1C, 0xA0, 0x01
    .byte 0x57, 0x46, 0xC2, 0x19, 0x88, 0x01, 0x47, 0x46, 0xC1, 0x19, 0x00, 0x2B, 0x07, 0xDB, 0x00, 0x2D
    .byte 0x05, 0xDB, 0x1D, 0x2B, 0x03, 0xDC, 0x13, 0x2C, 0x01, 0xDC, 0x08, 0x88, 0x10, 0x80, 0x02, 0x32
    .byte 0x02, 0x31, 0x01, 0x33, 0x11, 0x2B, 0xF0, 0xDB, 0x31, 0x1C, 0x05, 0x29, 0xE2, 0xDB, 0x67, 0x46
    .byte 0xBA, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x08, 0xF0, 0x66, 0xFB, 0x81, 0x46, 0x00, 0x20
    .byte 0x00, 0x21, 0x00, 0x22, 0x08, 0xF0, 0x60, 0xFB, 0x80, 0x46, 0x00, 0x20, 0x01, 0x1C, 0x0C, 0x31
    .byte 0x01, 0x30, 0x84, 0x46, 0x50, 0x46, 0x0C, 0x18, 0x60, 0x01, 0x49, 0x01, 0x16, 0x31, 0x16, 0x30
    .byte 0x38, 0x18, 0x3A, 0x1C, 0x16, 0x32, 0x08, 0x25, 0x40, 0x00, 0x46, 0x46, 0x83, 0x19, 0x49, 0x00
    .byte 0x49, 0x44, 0x00, 0x2A, 0x07, 0xDB, 0x00, 0x2C, 0x05, 0xDB, 0x1D, 0x2A, 0x03, 0xDC, 0x13, 0x2C
    .byte 0x01, 0xDC, 0x08, 0x88, 0x18, 0x80, 0x02, 0x31, 0x02, 0x33, 0x01, 0x32, 0x01, 0x3D, 0x00, 0x2D
    .byte 0xEF, 0xDA, 0x60, 0x46, 0x09, 0x28, 0xD9, 0xDB, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x08, 0xF0
    .byte 0x33, 0xFB, 0x80, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x08, 0xF0, 0x2D, 0xFB, 0x07, 0x1C
    .byte 0x00, 0x20, 0x00, 0x21, 0x04, 0x1C, 0x10, 0x34, 0x46, 0x1C, 0x23, 0x1C, 0x5D, 0x01, 0x4A, 0x1C
    .byte 0x00, 0x2A, 0x0B, 0xDB, 0x00, 0x2C, 0x09, 0xDB, 0x1D, 0x2A, 0x07, 0xDC, 0x13, 0x2B, 0x05, 0xDC
    .byte 0xA8, 0x18, 0x40, 0x00, 0xC1, 0x19, 0x40, 0x44, 0x00, 0x88, 0x08, 0x80, 0x11, 0x1C, 0x05, 0x29
    .byte 0xED, 0xDB, 0x30, 0x1C, 0x03, 0x28, 0xE4, 0xDB, 0x23, 0xE0, 0x04, 0x20, 0x30, 0x60, 0xB1, 0x60
    .byte 0x1C, 0xE0, 0xF1, 0x68, 0xFF, 0x20, 0x40, 0x00, 0x81, 0x42, 0x17, 0xDD, 0x05, 0x20, 0x30, 0x60
    .byte 0x14, 0xE0, 0x00, 0x20, 0x70, 0x60, 0x06, 0x20, 0x30, 0x60, 0x0F, 0xE0, 0x70, 0x69, 0x00, 0x28
    .byte 0x04, 0xD1, 0x0B, 0x21, 0xFD, 0x22, 0xD2, 0x00, 0xB8, 0x18, 0x03, 0xE0, 0x0A, 0x21, 0xFD, 0x26
    .byte 0xF6, 0x00, 0xB8, 0x19, 0x01, 0x70, 0x08, 0x49, 0x01, 0x20, 0x08, 0x60
    _080260D4:
    movs r0, #0x00
    cmp r0, #0x00
    beq _080260E0
    movs r0, #0x01
    bl map_setBufferDirty
    _080260E0:
    add sp, #0x008
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x50, 0x5C, 0x00, 0x03, 0xF0, 0xB5, 0x57, 0x46, 0x4E, 0x46, 0x45, 0x46, 0xE0, 0xB4, 0x82, 0xB0
    .byte 0x80, 0x46, 0x00, 0x91, 0x17, 0x1C, 0x99, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x08, 0xF0
    .byte 0xCF, 0xFA, 0x82, 0x46, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x08, 0xF0, 0xC9, 0xFA, 0x84, 0x46
    .byte 0x00, 0x20, 0x48, 0x45, 0x26, 0xDA, 0x41, 0x1C, 0x01, 0x91, 0x00, 0x2F, 0x1F, 0xDD, 0x00, 0x9E
    .byte 0x30, 0x18, 0x0B, 0x99, 0x45, 0x18, 0x6A, 0x01, 0x40, 0x01, 0x40, 0x44, 0x0A, 0x99, 0x41, 0x44
    .byte 0x8A, 0x18, 0x3C, 0x1C, 0x52, 0x00, 0x62, 0x44, 0x40, 0x00, 0x56, 0x46, 0x83, 0x19, 0x00, 0x29
    .byte 0x07, 0xDB, 0x00, 0x2D, 0x05, 0xDB, 0x1D, 0x29, 0x03, 0xDC, 0x13, 0x2D, 0x01, 0xDC, 0x18, 0x88
    .byte 0x10, 0x80, 0x02, 0x33, 0x02, 0x32, 0x01, 0x31, 0x01, 0x3C, 0x00, 0x2C, 0xEF, 0xD1, 0x01, 0x98
    .byte 0x48, 0x45, 0xD8, 0xDB, 0x02, 0xB0, 0x38, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xAA, 0x46, 0xF0, 0xBC
    .byte 0x01, 0xBC, 0x00, 0x47, 0xF0, 0xB5, 0x57, 0x46, 0x4E, 0x46, 0x45, 0x46, 0xE0, 0xB4, 0x2D, 0x48
    .byte 0x00, 0x68, 0x81, 0x46, 0x2C, 0x48, 0x00, 0x68, 0x02, 0x28, 0x5D, 0xDC, 0x2B, 0x48, 0x84, 0x46
    .byte 0x00, 0x24, 0x2B, 0x49, 0x8A, 0x46, 0x80, 0x27, 0x7F, 0x00, 0xA0, 0x46, 0x60, 0x00, 0x00, 0x19
    .byte 0xC0, 0x00, 0x14, 0x30, 0x4A, 0x46, 0x13, 0x18, 0xA0, 0x00, 0x50, 0x44, 0x00, 0x68, 0x18, 0x60
    .byte 0x9F, 0x80, 0x21, 0x1C, 0x62, 0x46, 0x10, 0x88, 0x02, 0x32, 0xA0, 0x42, 0x00, 0xDC, 0x41, 0x1E
    .byte 0x66, 0x1C, 0x00, 0x29, 0x04, 0xDD, 0x08, 0x1C, 0x06, 0x32, 0x01, 0x38, 0x00, 0x28, 0xFB, 0xD1
    .byte 0x00, 0x20, 0x10, 0x56, 0x05, 0x1C, 0x20, 0x35, 0xDD, 0x80, 0x5F, 0x81, 0x1F, 0x81, 0x40, 0x46
    .byte 0x98, 0x81, 0x06, 0x20, 0x98, 0x73, 0x41, 0x46, 0x19, 0x82, 0x61, 0x46, 0x22, 0x1C, 0x08, 0x88
    .byte 0x02, 0x31, 0xA0, 0x42, 0x00, 0xDC, 0x42, 0x1E, 0x00, 0x2A, 0x04, 0xDD, 0x10, 0x1C, 0x06, 0x31
    .byte 0x01, 0x38, 0x00, 0x28, 0xFB, 0xD1, 0x48, 0x88, 0x0E, 0x4A, 0x11, 0x1C, 0x01, 0x40, 0x08, 0x1C
    .byte 0xFF, 0x28, 0x02, 0xD9, 0x08, 0x1C, 0x50, 0x40, 0x40, 0x42, 0xA0, 0x30, 0x58, 0x82, 0x9D, 0x82
    .byte 0x9C, 0x75, 0x10, 0x20, 0xD8, 0x75, 0x34, 0x1C, 0x0F, 0x2C, 0xB7, 0xD9, 0x6D, 0x20, 0x39, 0xF0
    .byte 0x6F, 0xFE, 0x57, 0xE0, 0xCC, 0xEB, 0x03, 0x02, 0xB8, 0xEB, 0x03, 0x02, 0xAC, 0x97, 0x0C, 0x08
    .byte 0x64, 0xBA, 0x0D, 0x08, 0xFF, 0x01, 0x00, 0x00, 0x2A, 0x4D, 0x00, 0x24, 0x2A, 0x4A, 0x92, 0x46
    .byte 0x00, 0x27, 0x2A, 0x48, 0x80, 0x46, 0x60, 0x00, 0x00, 0x19, 0xC0, 0x00, 0x14, 0x30, 0x49, 0x46
    .byte 0x0B, 0x18, 0xA0, 0x00, 0x50, 0x44, 0x00, 0x68, 0x18, 0x60, 0x21, 0x1C, 0x28, 0x88, 0xAA, 0x1C
    .byte 0xA0, 0x42, 0x00, 0xDC, 0x41, 0x1E, 0x66, 0x1C, 0x00, 0x29, 0x04, 0xDD, 0x08, 0x1C, 0x06, 0x32
    .byte 0x01, 0x38, 0x00, 0x28, 0xFB, 0xD1, 0x50, 0x88, 0x1D, 0x49, 0x0A, 0x1C, 0x02, 0x40, 0x10, 0x1C
    .byte 0xFF, 0x28, 0x02, 0xD9, 0x10, 0x1C, 0x48, 0x40, 0x40, 0x42, 0x01, 0x1C, 0x88, 0x31, 0x99, 0x80
    .byte 0x42, 0x46, 0xDA, 0x80, 0x80, 0x20, 0x40, 0x00, 0x58, 0x81, 0x18, 0x81, 0x9F, 0x81, 0x0B, 0x20
    .byte 0x98, 0x73, 0x1F, 0x82, 0x59, 0x82, 0x29, 0x1C, 0x20, 0x1C, 0x0A, 0x88, 0x02, 0x31, 0xA2, 0x42
    .byte 0x00, 0xDC, 0x50, 0x1E, 0x00, 0x28, 0x03, 0xDD, 0x06, 0x31, 0x01, 0x38, 0x00, 0x28, 0xFB, 0xD1
    .byte 0x00, 0x20, 0x08, 0x56, 0x20, 0x30, 0x98, 0x82, 0x9C, 0x75, 0x07, 0x20, 0xD8, 0x75, 0x34, 0x1C
    .byte 0x06, 0x2C, 0xB8, 0xD9, 0x38, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xAA, 0x46, 0xF0, 0xBC, 0x01, 0xBC
    .byte 0x00, 0x47, 0x00, 0x00, 0x90, 0x98, 0x0C, 0x08, 0xA4, 0xBA, 0x0D, 0x08, 0xD8, 0xFF, 0x00, 0x00
    .byte 0xFF, 0x01, 0x00, 0x00, 0xF0, 0xB5, 0x83, 0xB0, 0x1D, 0x48, 0x07, 0x68, 0x1D, 0x48, 0x00, 0x68
    .byte 0x07, 0x26, 0x02, 0x28, 0x00, 0xDC, 0x10, 0x26, 0x00, 0x2E, 0x09, 0xD0, 0x3C, 0x1C, 0x14, 0x34
    .byte 0x35, 0x1C, 0x20, 0x1C, 0xDD, 0xF7, 0x40, 0xFC, 0x18, 0x34, 0x01, 0x3D, 0x00, 0x2D, 0xF8, 0xD1
    .byte 0x00, 0x2E, 0x1F, 0xD0, 0x3C, 0x1C, 0x14, 0x34, 0x35, 0x1C, 0xA2, 0x88, 0x12, 0x49, 0x02, 0x98
    .byte 0x08, 0x40, 0x10, 0x43, 0x02, 0x90, 0xE2, 0x88, 0x12, 0x04, 0x10, 0x49, 0x08, 0x40, 0x10, 0x43
    .byte 0x02, 0x90, 0x20, 0x68, 0x08, 0x21, 0x62, 0x5E, 0x0A, 0x26, 0xA3, 0x5F, 0x0C, 0x26, 0xA1, 0x5F
    .byte 0x00, 0x91, 0x00, 0x21, 0x01, 0x91, 0x02, 0xA9, 0x09, 0xF0, 0x50, 0xFB, 0x18, 0x34, 0x01, 0x3D
    .byte 0x00, 0x2D, 0xE2, 0xD1, 0x00, 0x20, 0x03, 0xB0, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00
    .byte 0xCC, 0xEB, 0x03, 0x02, 0xB8, 0xEB, 0x03, 0x02, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00
    .byte 0xF0, 0xB5, 0x47, 0x46, 0x80, 0xB4, 0x29, 0x48, 0x00, 0x68, 0x84, 0x46, 0x28, 0x48, 0x00, 0x68
    .byte 0x02, 0x28, 0x55, 0xDC, 0x27, 0x4E, 0x00, 0x24, 0x27, 0x48, 0x80, 0x46, 0x00, 0x27, 0x60, 0x00
    .byte 0x00, 0x19, 0xC0, 0x00, 0x14, 0x30, 0x61, 0x46, 0x0B, 0x18, 0xA0, 0x00, 0x40, 0x44, 0x00, 0x68
    .byte 0x18, 0x60, 0x21, 0x1C, 0x30, 0x88, 0xB2, 0x1C, 0xA0, 0x42, 0x00, 0xDC, 0x41, 0x1E, 0x65, 0x1C
    .byte 0x00, 0x29, 0x04, 0xDD, 0x08, 0x1C, 0x06, 0x32, 0x01, 0x38, 0x00, 0x28, 0xFB, 0xD1, 0x50, 0x88
    .byte 0x1A, 0x4A, 0x11, 0x1C, 0x01, 0x40, 0x08, 0x1C, 0xFF, 0x28, 0x02, 0xD9, 0x08, 0x1C, 0x50, 0x40
    .byte 0x40, 0x42, 0xA0, 0x30, 0x98, 0x80, 0x58, 0x82, 0x31, 0x1C, 0x20, 0x1C, 0x0A, 0x88, 0x02, 0x31
    .byte 0xA2, 0x42, 0x00, 0xDC, 0x50, 0x1E, 0x00, 0x28, 0x03, 0xDD, 0x06, 0x31, 0x01, 0x38, 0x00, 0x28
    .byte 0xFB, 0xD1, 0x00, 0x20, 0x08, 0x56, 0x20, 0x30, 0xD8, 0x80, 0x98, 0x82, 0x80, 0x20, 0x40, 0x00
    .byte 0x58, 0x81, 0x18, 0x81, 0x9F, 0x81, 0x0D, 0x20, 0x98, 0x73, 0x1F, 0x82, 0x9C, 0x75, 0x10, 0x20
    .byte 0xD8, 0x75, 0x2C, 0x1C, 0x0F, 0x2C, 0xBA, 0xD9, 0x54, 0xE0, 0x00, 0x00, 0xCC, 0xEB, 0x03, 0x02
    .byte 0xB8, 0xEB, 0x03, 0x02, 0xAC, 0x97, 0x0C, 0x08, 0x64, 0xBA, 0x0D, 0x08, 0xFF, 0x01, 0x00, 0x00
    .byte 0x27, 0x4E, 0x00, 0x24, 0x27, 0x48, 0x80, 0x46, 0x00, 0x27, 0x60, 0x00, 0x00, 0x19, 0xC0, 0x00
    .byte 0x14, 0x30, 0x61, 0x46, 0x0B, 0x18, 0xA0, 0x00, 0x40, 0x44, 0x00, 0x68, 0x18, 0x60, 0x21, 0x1C
    .byte 0x30, 0x88, 0xB2, 0x1C, 0xA0, 0x42, 0x00, 0xDC, 0x41, 0x1E, 0x65, 0x1C, 0x00, 0x29, 0x04, 0xDD
    .byte 0x08, 0x1C, 0x06, 0x32, 0x01, 0x38, 0x00, 0x28, 0xFB, 0xD1, 0x50, 0x88, 0x1A, 0x4A, 0x11, 0x1C
    .byte 0x01, 0x40, 0x08, 0x1C, 0xFF, 0x28, 0x02, 0xD9, 0x08, 0x1C, 0x50, 0x40, 0x40, 0x42, 0x88, 0x30
    .byte 0x98, 0x80, 0x58, 0x82, 0x31, 0x1C, 0x20, 0x1C, 0x0A, 0x88, 0x02, 0x31, 0xA2, 0x42, 0x00, 0xDC
    .byte 0x50, 0x1E, 0x00, 0x28, 0x03, 0xDD, 0x06, 0x31, 0x01, 0x38, 0x00, 0x28, 0xFB, 0xD1, 0x00, 0x20
    .byte 0x08, 0x56, 0x20, 0x30, 0xD8, 0x80, 0x98, 0x82, 0x80, 0x20, 0x40, 0x00, 0x58, 0x81, 0x18, 0x81
    .byte 0x9F, 0x81, 0x0D, 0x20, 0x98, 0x73, 0x1F, 0x82, 0x9C, 0x75, 0x07, 0x20, 0xD8, 0x75, 0x2C, 0x1C
    .byte 0x06, 0x2C, 0xBA, 0xD9, 0x08, 0xBC, 0x98, 0x46, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0x90, 0x98, 0x0C, 0x08, 0xA4, 0xBA, 0x0D, 0x08, 0xFF, 0x01, 0x00, 0x00
    thumb_func_start sub_802650C
    sub_802650C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x008
    adds r7, r0, #0x0
    adds r5, r1, #0x0
    adds r4, r2, #0x0
    adds r0, r3, #0x0
    ldr r1, [sp, #0x028]
    lsls r0, r0, #0x0F
    bl __divsi3
    ldr r2, _080265F8 @ =0x080E645C
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _08026534
    adds r0, #0x3F
    _08026534:
    asrs r1, r0, #0x06
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r1
    ldr r1, _080265FC @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    subs r0, r0, r1
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r0, r0, #0x01
    mov r9, r0
    movs r0, #0x1F
    mov r10, r0
    movs r6, #0x1F
    mov r8, r4
    mov r12, r5
    str r7, [sp, #0x004]
    movs r7, #0x0F
    str r7, [sp, #0x000]
    _08026564:
    ldr r0, [sp, #0x004]
    ldrh r1, [r0, #0x00]
    adds r2, r1, #0x0
    ands r2, r6
    lsrs r4, r1, #0x05
    mov r7, r10
    ands r4, r7
    lsrs r1, r1, #0x0A
    mov r0, r10
    ands r1, r0
    mov r7, r12
    ldrh r3, [r7, #0x00]
    adds r0, r3, #0x0
    ands r0, r6
    lsrs r5, r3, #0x05
    mov r7, r10
    ands r5, r7
    lsrs r3, r3, #0x0A
    ands r3, r7
    subs r0, r0, r2
    mov r7, r9
    muls r7, r0
    adds r0, r7, #0x0
    asrs r0, r0, #0x0F
    adds r2, r2, r0
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    subs r5, r5, r4
    mov r0, r9
    muls r0, r5
    asrs r0, r0, #0x0F
    adds r4, r4, r0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    subs r3, r3, r1
    mov r0, r9
    muls r0, r3
    asrs r0, r0, #0x0F
    adds r1, r1, r0
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    ands r2, r6
    ands r4, r6
    lsls r4, r4, #0x05
    orrs r2, r4
    ands r1, r6
    lsls r1, r1, #0x0A
    orrs r2, r1
    mov r0, r8
    strh r2, [r0, #0x00]
    movs r7, #0x02
    add r8, r7
    movs r0, #0x02
    add r12, r0
    ldr r7, [sp, #0x004]
    adds r7, #0x02
    str r7, [sp, #0x004]
    ldr r0, [sp, #0x000]
    subs r0, #0x01
    str r0, [sp, #0x000]
    cmp r0, #0x00
    bge _08026564
    movs r0, #0x01
    bl pltt_setDirtyFlag
    add sp, #0x008
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _080265F8: .4byte gSinTable
    _080265FC: .4byte 0x000003FF
    .byte 0xF0, 0xB5, 0x4F, 0x46, 0x46, 0x46, 0xC0, 0xB4, 0x82, 0xB0, 0x28, 0x48, 0x00, 0x68, 0x81, 0x46
    .byte 0x27, 0x48, 0xB9, 0x24, 0xE4, 0x00, 0x4C, 0x44, 0x21, 0x68, 0x3A, 0xF0, 0xA3, 0xFE, 0x09, 0xF0
    .byte 0x09, 0xFF, 0x21, 0x68, 0x23, 0x4A, 0x24, 0x4B, 0x09, 0xF0, 0xDC, 0xFE, 0x00, 0x20, 0x80, 0x46
    .byte 0x00, 0x23, 0x22, 0x4F, 0x4F, 0x44, 0x68, 0x22, 0xBB, 0x26, 0xF6, 0x00, 0x4E, 0x44, 0x00, 0x92
    .byte 0x01, 0x93, 0x37, 0xF0, 0xB5, 0xF9, 0x41, 0x46, 0x8D, 0x00, 0x40, 0x19, 0x1C, 0x49, 0x40, 0x18
    .byte 0x04, 0x78, 0x37, 0xF0, 0xAD, 0xF9, 0x40, 0x19, 0x1A, 0x49, 0x40, 0x18, 0x01, 0x78, 0xCC, 0x20
    .byte 0x30, 0x80, 0x00, 0x9A, 0x72, 0x80, 0x18, 0x48, 0x01, 0x34, 0x24, 0x18, 0x20, 0x78, 0x30, 0x71
    .byte 0x01, 0x9B, 0xB3, 0x71, 0x73, 0x71, 0xE4, 0x20, 0x30, 0x84, 0x72, 0x84, 0x39, 0x70, 0xBB, 0x70
    .byte 0x7B, 0x70, 0x08, 0x37, 0x10, 0x32, 0x08, 0x36, 0x01, 0x20, 0x80, 0x44, 0x41, 0x46, 0x03, 0x29
    .byte 0xD5, 0xDD, 0xC3, 0x21, 0xC9, 0x00, 0x49, 0x44, 0x00, 0x20, 0x08, 0x60, 0x02, 0xB0, 0x18, 0xBC
    .byte 0x98, 0x46, 0xA1, 0x46, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0xCC, 0xEB, 0x03, 0x02
    .byte 0xE0, 0x17, 0x0C, 0x08, 0x00, 0x58, 0x01, 0x06, 0x70, 0x01, 0x00, 0x80, 0xFC, 0x05, 0x00, 0x00
    .byte 0x82, 0x05, 0x00, 0x00, 0x83, 0x05, 0x00, 0x00, 0xA8, 0xB0, 0x0D, 0x08, 0xF0, 0xB5, 0x57, 0x46
    .byte 0x4E, 0x46, 0x45, 0x46, 0xE0, 0xB4, 0x83, 0xB0, 0x32, 0x48, 0x00, 0x68, 0x0F, 0x21, 0x8A, 0x46
    .byte 0x31, 0x49, 0x89, 0x46, 0x02, 0xAF, 0xBF, 0x21, 0xC9, 0x00, 0x45, 0x18, 0x00, 0x26, 0x03, 0x20
    .byte 0x80, 0x46, 0x04, 0x20, 0x28, 0x56, 0x00, 0x28, 0x33, 0xDB, 0x01, 0x1C, 0x2B, 0x48, 0x0C, 0x1C
    .byte 0x44, 0x43, 0x00, 0x2C, 0x01, 0xDA, 0x2A, 0x48, 0x24, 0x18, 0xE4, 0x14, 0x50, 0x46, 0x04, 0x40
    .byte 0xA3, 0x00, 0x1C, 0x19, 0x64, 0x00, 0x0C, 0x1B, 0x04, 0x40, 0x2A, 0x88, 0x25, 0x49, 0x02, 0x98
    .byte 0x08, 0x40, 0x10, 0x43, 0x02, 0x90, 0x6A, 0x88, 0x12, 0x04, 0x23, 0x49, 0x08, 0x40, 0x10, 0x43
    .byte 0x02, 0x90, 0x4B, 0x44, 0x18, 0x68, 0x00, 0x96, 0x01, 0x96, 0x02, 0xA9, 0x00, 0x22, 0x00, 0x23
    .byte 0x09, 0xF0, 0x6C, 0xF9, 0x28, 0x88, 0x08, 0x30, 0x38, 0x80, 0x68, 0x88, 0x78, 0x80, 0xA4, 0x00
    .byte 0x4C, 0x44, 0x20, 0x68, 0x00, 0x96, 0x01, 0x96, 0x02, 0xA9, 0x00, 0x22, 0x00, 0x23, 0x09, 0xF0
    .byte 0x5D, 0xF9, 0x08, 0x35, 0x01, 0x21, 0x49, 0x42, 0x88, 0x44, 0x40, 0x46, 0x00, 0x28, 0xC0, 0xDA
    .byte 0x12, 0x48, 0x04, 0x69, 0x00, 0x20, 0x07, 0xF0, 0x5B, 0xFF, 0x02, 0x1C, 0xE0, 0x21, 0x49, 0x00
    .byte 0x52, 0x18, 0x0F, 0x48, 0x01, 0x1C, 0x40, 0x31, 0x20, 0x23, 0x00, 0x93, 0x23, 0x1C, 0xFF, 0xF7
    .byte 0xBD, 0xFE, 0x03, 0xB0, 0x38, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xAA, 0x46, 0xF0, 0xBC, 0x01, 0xBC
    .byte 0x00, 0x47, 0x00, 0x00, 0xCC, 0xEB, 0x03, 0x02, 0xB8, 0xBB, 0x0D, 0x08, 0xCD, 0xCC, 0x00, 0x00
    .byte 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03
    .byte 0x3C, 0xAD, 0x0A, 0x08
    thumb_func_start sub_80267C4
    sub_80267C4:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x008
    str r0, [sp, #0x000]
    movs r4, #0x64
    movs r1, #0x64
    bl __divsi3
    movs r2, #0x0F
    ands r0, r2
    str r0, [sp, #0x004]
    adds r1, r0, #0x0
    muls r1, r4
    ldr r3, [sp, #0x000]
    subs r1, r3, r1
    ldr r0, _0802689C @ =0x0000CCCD
    muls r0, r1
    lsrs r0, r0, #0x13
    mov r9, r0
    ands r0, r2
    mov r9, r0
    lsls r0, r0, #0x02
    add r0, r9
    lsls r0, r0, #0x01
    subs r1, r1, r0
    mov r10, r1
    mov r3, r10
    ands r3, r2
    mov r10, r3
    movs r0, #0x00
    mov r8, r0
    _08026808:
    movs r7, #0xF0
    lsls r7, r7, #0x08
    ldr r3, [sp, #0x000]
    cmp r3, #0x63
    ble _08026816
    movs r7, #0xE0
    lsls r7, r7, #0x08
    _08026816:
    mov r6, r8
    adds r6, #0x09
    movs r0, #0x00
    movs r1, #0x1B
    adds r2, r6, #0x0
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    mov r5, r8
    adds r5, #0x1E
    movs r0, #0x01
    ldr r1, [sp, #0x004]
    adds r2, r5, #0x0
    bl map_getBufferPtr2d
    ldrh r1, [r0, #0x00]
    ldr r0, _080268A0 @ =0x00000FFF
    ands r0, r1
    orrs r0, r7
    strh r0, [r4, #0x00]
    movs r0, #0x00
    movs r1, #0x1C
    adds r2, r6, #0x0
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    movs r0, #0x01
    mov r1, r9
    adds r2, r5, #0x0
    bl map_getBufferPtr2d
    ldrh r1, [r0, #0x00]
    ldr r0, _080268A0 @ =0x00000FFF
    ands r0, r1
    orrs r0, r7
    strh r0, [r4, #0x00]
    movs r0, #0x00
    movs r1, #0x1D
    adds r2, r6, #0x0
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    movs r0, #0x01
    mov r1, r10
    adds r2, r5, #0x0
    bl map_getBufferPtr2d
    ldrh r1, [r0, #0x00]
    ldr r0, _080268A0 @ =0x00000FFF
    ands r0, r1
    orrs r0, r7
    strh r0, [r4, #0x00]
    movs r0, #0x01
    add r8, r0
    mov r3, r8
    cmp r3, #0x01
    ble _08026808
    bl map_setBufferDirty
    add sp, #0x008
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    _0802689C: .4byte 0x0000CCCD
    _080268A0: .4byte 0x00000FFF
    .byte 0xF0, 0xB5, 0x81, 0xB0, 0x08, 0x48, 0x02, 0x68, 0x01, 0x26, 0xC3, 0x20, 0xC0, 0x00, 0x14, 0x18
    .byte 0x01, 0x20, 0x30, 0x40, 0x00, 0x28, 0x09, 0xD0, 0xF1, 0x17, 0x70, 0x1A, 0x40, 0x10, 0xC0, 0x00
    .byte 0xBF, 0x23, 0xDB, 0x00, 0x08, 0xE0, 0x00, 0x00, 0xCC, 0xEB, 0x03, 0x02, 0xF1, 0x17, 0x70, 0x1A
    .byte 0x40, 0x10, 0xC0, 0x00, 0xBB, 0x23, 0xDB, 0x00, 0xC0, 0x18, 0x15, 0x18, 0x0F, 0x1C, 0x05, 0x21
    .byte 0x69, 0x56, 0x01, 0x29, 0x12, 0xD0, 0x01, 0x29, 0x02, 0xDC, 0x00, 0x29, 0x03, 0xD0, 0x33, 0xE0
    .byte 0x02, 0x29, 0x17, 0xD0, 0x30, 0xE0, 0xA8, 0x79, 0x01, 0x30, 0xA8, 0x71, 0x00, 0x06, 0x00, 0x16
    .byte 0x0C, 0x28, 0x30, 0xDD, 0xA9, 0x71, 0x01, 0x20, 0x68, 0x71, 0x28, 0xE0, 0xA8, 0x79, 0x01, 0x30
    .byte 0x00, 0x21, 0xA8, 0x71, 0x00, 0x06, 0x00, 0x16, 0x06, 0x28, 0x20, 0xDD, 0xA9, 0x71, 0x02, 0x20
    .byte 0x68, 0x71, 0x1C, 0xE0, 0x65, 0x20, 0x39, 0xF0, 0xF9, 0xFA, 0x04, 0x21, 0x69, 0x56, 0x20, 0x68
    .byte 0x40, 0x18, 0x20, 0x60, 0xFF, 0xF7, 0x44, 0xFF, 0x20, 0x68, 0x63, 0x28, 0x04, 0xDD, 0x00, 0x20
    .byte 0x04, 0x49, 0x00, 0x22, 0x09, 0xF0, 0x6C, 0xFC, 0xFF, 0x20, 0x28, 0x71, 0x03, 0x20, 0x68, 0x71
    .byte 0x05, 0xE0, 0x00, 0x00, 0x08, 0xBB, 0x0D, 0x08, 0x02, 0x36, 0x07, 0x2E, 0xA8, 0xDD, 0x07, 0x2E
    .byte 0x1F, 0xDC, 0x00, 0x20, 0x1E, 0xE0, 0x01, 0x22, 0x32, 0x40, 0x50, 0x00, 0x80, 0x18, 0xC0, 0x00
    .byte 0xCC, 0x30, 0xD2, 0x00, 0xEC, 0x21, 0x89, 0x1A, 0x06, 0x22, 0xAA, 0x56, 0x0C, 0x24, 0x00, 0x94
    .byte 0x0C, 0x23, 0xE7, 0xF7, 0xD3, 0xFF, 0x28, 0x80, 0xF0, 0x1B, 0x40, 0x10, 0x00, 0x01, 0x68, 0x30
    .byte 0x06, 0x22, 0xAA, 0x56, 0x00, 0x94, 0x50, 0x21, 0x0C, 0x23, 0xE7, 0xF7, 0xC7, 0xFF, 0x68, 0x80
    .byte 0xDD, 0xE7, 0x01, 0x20, 0x01, 0xB0, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0xF0, 0xB5, 0x57, 0x46
    .byte 0x4E, 0x46, 0x45, 0x46, 0xE0, 0xB4, 0x82, 0xB0, 0x07, 0x48, 0x01, 0x68, 0xC4, 0x20, 0xC0, 0x00
    .byte 0x40, 0x18, 0x80, 0x46, 0x00, 0x78, 0x00, 0x06, 0x00, 0x16, 0x01, 0x28, 0x26, 0xD0, 0x01, 0x28
    .byte 0x04, 0xDC, 0x00, 0x28, 0x08, 0xD0, 0xA5, 0xE0, 0xCC, 0xEB, 0x03, 0x02, 0x02, 0x28, 0x35, 0xD0
    .byte 0x03, 0x28, 0x00, 0xD1, 0x86, 0xE0, 0x9D, 0xE0, 0x09, 0xF0, 0x22, 0xFD, 0x05, 0x1C, 0x00, 0x20
    .byte 0x00, 0x21, 0x00, 0x22, 0x07, 0xF0, 0x5A, 0xFE, 0x04, 0x1C, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x07, 0xF0, 0x54, 0xFE, 0x02, 0x1C, 0x04, 0x4B, 0x28, 0x1C, 0x21, 0x1C, 0x09, 0xF0, 0xE8, 0xFC
    .byte 0x00, 0x22, 0x41, 0x46, 0x4A, 0x70, 0x65, 0xE0, 0x80, 0x02, 0x00, 0x80, 0x09, 0x4A, 0x88, 0x18
    .byte 0x00, 0x68, 0x00, 0x28, 0x0C, 0xD0, 0x08, 0x4C, 0x01, 0x20, 0x00, 0x21, 0x09, 0x22, 0x07, 0xF0
    .byte 0x3D, 0xFE, 0x01, 0x1C, 0x20, 0x1C, 0x3A, 0xF0, 0x93, 0xFC, 0x6E, 0x20, 0x39, 0xF0, 0x6E, 0xFA
    .byte 0x41, 0x46, 0x4F, 0xE0, 0x1C, 0x06, 0x00, 0x00, 0x30, 0x28, 0x0C, 0x08, 0x42, 0x46, 0x50, 0x78
    .byte 0x01, 0x30, 0x50, 0x70, 0x00, 0x06, 0x00, 0x16, 0x10, 0x28, 0x15, 0xDC, 0x09, 0x4A, 0x88, 0x18
    .byte 0x00, 0x68, 0x00, 0x28, 0x5E, 0xD0, 0x41, 0x46, 0x01, 0x20, 0x08, 0x56, 0x10, 0x38, 0x00, 0x90
    .byte 0x00, 0x22, 0x01, 0x92, 0x00, 0x20, 0x09, 0x21, 0x0F, 0x22, 0x01, 0x23, 0x02, 0xF0, 0x92, 0xFE
    .byte 0x50, 0xE0, 0x00, 0x00, 0x1C, 0x06, 0x00, 0x00, 0x18, 0x4A, 0x88, 0x18, 0x00, 0x68, 0x00, 0x28
    .byte 0x25, 0xD0, 0x00, 0x21, 0x16, 0x48, 0x82, 0x46, 0x00, 0x27, 0x4A, 0x1C, 0x91, 0x46, 0x0E, 0x1C
    .byte 0x09, 0x36, 0x3C, 0x1C, 0x0A, 0x34, 0x00, 0x20, 0x31, 0x1C, 0x22, 0x1C, 0x07, 0xF0, 0xFE, 0xFD
    .byte 0x05, 0x1C, 0x00, 0x20, 0x31, 0x1C, 0x22, 0x1C, 0x07, 0xF0, 0xF8, 0xFD, 0x00, 0x88, 0x51, 0x46
    .byte 0x08, 0x40, 0xE0, 0x22, 0x12, 0x02, 0x11, 0x1C, 0x08, 0x43, 0x28, 0x80, 0x01, 0x37, 0x01, 0x2F
    .byte 0xE7, 0xDD, 0x49, 0x46, 0x04, 0x29, 0xDF, 0xDD, 0x01, 0x20, 0x07, 0xF0, 0x0D, 0xFE, 0x00, 0x20
    .byte 0x41, 0x46, 0x48, 0x70, 0x08, 0x78, 0x01, 0x30, 0x08, 0x70, 0x1B, 0xE0, 0x1C, 0x06, 0x00, 0x00
    .byte 0xFF, 0x0F, 0x00, 0x00, 0x01, 0x20, 0x08, 0x61, 0x0F, 0x4A, 0x88, 0x18, 0x00, 0x68, 0x00, 0x28
    .byte 0x10, 0xD0, 0x0E, 0x48, 0x04, 0x69, 0x01, 0x20, 0x07, 0xF0, 0x90, 0xFD, 0x02, 0x1C, 0xC0, 0x20
    .byte 0x40, 0x00, 0x12, 0x18, 0x0A, 0x48, 0x01, 0x1C, 0x40, 0x31, 0x20, 0x23, 0x00, 0x93, 0x23, 0x1C
    .byte 0xFF, 0xF7, 0xF2, 0xFC, 0x00, 0x20, 0x02, 0xB0, 0x38, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xAA, 0x46
    .byte 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00, 0x1C, 0x06, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03
    .byte 0x9C, 0xAD, 0x0A, 0x08, 0xF0, 0xB5, 0x4F, 0x46, 0x46, 0x46, 0xC0, 0xB4, 0x26, 0x48, 0x06, 0x68
    .byte 0x00, 0x25, 0x00, 0x24, 0x36, 0xF0, 0x2A, 0xFF, 0xA1, 0x00, 0x40, 0x18, 0x23, 0x49, 0x40, 0x18
    .byte 0x00, 0x78, 0x2D, 0x18, 0x01, 0x34, 0x03, 0x2C, 0xF4, 0xDD, 0x28, 0x1C, 0xFF, 0xF7, 0x28, 0xFE
    .byte 0x1F, 0x4A, 0xB0, 0x18, 0x00, 0x68, 0x00, 0x28, 0x2F, 0xD0, 0x1E, 0x4C, 0x00, 0x20, 0x00, 0x21
    .byte 0x09, 0x22, 0x07, 0xF0, 0x93, 0xFD, 0x01, 0x1C, 0x20, 0x1C, 0x3A, 0xF0, 0xE9, 0xFB, 0x00, 0x24
    .byte 0x19, 0x48, 0x81, 0x46, 0x00, 0x27, 0x61, 0x1C, 0x88, 0x46, 0x26, 0x1C, 0x09, 0x36, 0x3C, 0x1C
    .byte 0x0A, 0x34, 0x00, 0x20, 0x31, 0x1C, 0x22, 0x1C, 0x07, 0xF0, 0x80, 0xFD, 0x05, 0x1C, 0x00, 0x20
    .byte 0x31, 0x1C, 0x22, 0x1C, 0x07, 0xF0, 0x7A, 0xFD, 0x00, 0x88, 0x4A, 0x46, 0x10, 0x40, 0xE0, 0x22
    .byte 0x12, 0x02, 0x11, 0x1C, 0x08, 0x43, 0x28, 0x80, 0x01, 0x37, 0x01, 0x2F, 0xE7, 0xDD, 0x44, 0x46
    .byte 0x04, 0x2C, 0xDF, 0xDD, 0x01, 0x20, 0x07, 0xF0, 0x8F, 0xFD, 0x18, 0xBC, 0x98, 0x46, 0xA1, 0x46
    .byte 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0xCC, 0xEB, 0x03, 0x02, 0x83, 0x05, 0x00, 0x00
    .byte 0x1C, 0x06, 0x00, 0x00, 0x30, 0x28, 0x0C, 0x08, 0xFF, 0x0F, 0x00, 0x00, 0x70, 0xB5, 0x46, 0x46
    .byte 0x40, 0xB4, 0x17, 0x48, 0x06, 0x68, 0xCA, 0x20, 0x40, 0x00, 0x31, 0x18, 0x18, 0x30, 0x35, 0x18
    .byte 0x14, 0x48, 0x08, 0x60, 0x00, 0x20, 0x80, 0x46, 0x00, 0x24, 0x70, 0x20, 0x88, 0x80, 0x34, 0x20
    .byte 0xC8, 0x80, 0x4C, 0x81, 0x0C, 0x81, 0x8C, 0x81, 0x0C, 0x82, 0x0F, 0x48, 0x00, 0x68, 0xE8, 0xF7
    .byte 0xBD, 0xF8, 0x28, 0x70, 0x41, 0x46, 0x69, 0x70, 0x6C, 0x80, 0xEC, 0x80, 0x01, 0x20, 0x07, 0xF0
    .byte 0xF5, 0xFC, 0xE0, 0x21, 0x49, 0x00, 0x40, 0x18, 0xE8, 0x60, 0xBA, 0x20, 0xC0, 0x00, 0x36, 0x18
    .byte 0x30, 0x68, 0x28, 0x61, 0x08, 0xBC, 0x98, 0x46, 0x70, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0xCC, 0xEB, 0x03, 0x02, 0x64, 0x99, 0x0C, 0x08, 0xBC, 0xEB, 0x03, 0x02, 0x17, 0x48, 0x00, 0x68
    .byte 0xCA, 0x21, 0x49, 0x00, 0x42, 0x18, 0x10, 0x8A, 0x01, 0x30, 0x10, 0x82, 0x00, 0x04, 0x00, 0x14
    .byte 0x40, 0x28, 0x27, 0xDC, 0x10, 0x20, 0x11, 0x5E, 0x88, 0x00, 0x40, 0x18, 0x00, 0x02, 0x40, 0x42
    .byte 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11, 0xC0, 0x21, 0xC9, 0x00, 0x40, 0x18, 0x50, 0x81
    .byte 0x10, 0x81, 0x10, 0x21, 0x50, 0x5E, 0x0A, 0x49, 0x00, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA
    .byte 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x01, 0x68, 0x48, 0x00, 0x40, 0x18
    .byte 0x00, 0x02, 0xC0, 0x13, 0x00, 0x02, 0x90, 0x81, 0x00, 0x20, 0x06, 0xE0, 0xCC, 0xEB, 0x03, 0x02
    .byte 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x20, 0x10, 0x82, 0x01, 0x20, 0x70, 0x47, 0x70, 0xB5, 0x18, 0x48
    .byte 0x00, 0x68, 0x05, 0x1C, 0xCA, 0x20, 0x40, 0x00, 0x29, 0x18, 0x18, 0x30, 0x2C, 0x18, 0x15, 0x48
    .byte 0x08, 0x60, 0x00, 0x26, 0x70, 0x20, 0x88, 0x80, 0x34, 0x20, 0xC8, 0x80, 0xCC, 0x30, 0x48, 0x81
    .byte 0x08, 0x81, 0x8E, 0x81, 0x0E, 0x82, 0x10, 0x48, 0x00, 0x68, 0xE8, 0xF7, 0x4F, 0xF8, 0x20, 0x70
    .byte 0x0E, 0x48, 0x00, 0x68, 0x02, 0x21, 0x02, 0x28, 0x00, 0xDC, 0x01, 0x21, 0x61, 0x70, 0x01, 0x20
    .byte 0x60, 0x80, 0xE6, 0x80, 0x07, 0xF0, 0x82, 0xFC, 0xE0, 0x21, 0x49, 0x00, 0x40, 0x18, 0xE0, 0x60
    .byte 0xBA, 0x21, 0xC9, 0x00, 0x68, 0x18, 0x00, 0x68, 0x20, 0x61, 0x70, 0xBC, 0x01, 0xBC, 0x00, 0x47
    .byte 0xCC, 0xEB, 0x03, 0x02, 0x64, 0x99, 0x0C, 0x08, 0xBC, 0xEB, 0x03, 0x02, 0xB8, 0xEB, 0x03, 0x02
    .byte 0x70, 0xB5, 0x83, 0xB0, 0x2A, 0x48, 0x00, 0x68, 0x06, 0x1C, 0xE0, 0x20, 0x40, 0x00, 0x34, 0x18
    .byte 0xA0, 0x68, 0x00, 0x28, 0x18, 0xD0, 0xA2, 0x88, 0x26, 0x49, 0x02, 0x98, 0x08, 0x40, 0x10, 0x43
    .byte 0x02, 0x90, 0xE1, 0x88, 0x09, 0x04, 0x24, 0x4A, 0x10, 0x40, 0x08, 0x43, 0x02, 0x90, 0x20, 0x68
    .byte 0x08, 0x21, 0x62, 0x5E, 0x0A, 0x25, 0x63, 0x5F, 0x0C, 0x25, 0x61, 0x5F, 0x00, 0x91, 0x00, 0x21
    .byte 0x01, 0x91, 0x02, 0xA9, 0x08, 0xF0, 0x40, 0xFE, 0xEC, 0x20, 0x40, 0x00, 0x31, 0x18, 0x08, 0x78
    .byte 0x01, 0x30, 0x08, 0x70, 0x00, 0x06, 0x00, 0x16, 0x06, 0x28, 0x24, 0xDD, 0x00, 0x20, 0x08, 0x70
    .byte 0x16, 0x49, 0x75, 0x18, 0x28, 0x78, 0x01, 0x30, 0x07, 0x21, 0x08, 0x40, 0x28, 0x70, 0x14, 0x49
    .byte 0x00, 0x20, 0x28, 0x56, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0xB9, 0x21, 0xC9, 0x00, 0x74, 0x18
    .byte 0x21, 0x68, 0x3A, 0xF0, 0xC5, 0xFA, 0x09, 0xF0, 0x2B, 0xFB, 0x21, 0x68, 0x0D, 0x4A, 0x0E, 0x4B
    .byte 0x09, 0xF0, 0xFE, 0xFA, 0x00, 0x20, 0x28, 0x56, 0x03, 0x28, 0x01, 0xD0, 0x07, 0x28, 0x02, 0xD1
    .byte 0x78, 0x20, 0x39, 0xF0, 0x93, 0xF8, 0x03, 0xB0, 0x70, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0xCC, 0xEB, 0x03, 0x02, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xD9, 0x01, 0x00, 0x00
    .byte 0xE0, 0xBC, 0x0D, 0x08, 0x00, 0x58, 0x01, 0x06, 0x00, 0x04, 0x00, 0x80, 0xF0, 0xB5, 0x47, 0x46
    .byte 0x80, 0xB4, 0x43, 0x48, 0x00, 0x68, 0xE0, 0x21, 0x49, 0x00, 0x44, 0x18, 0x20, 0x8A, 0x01, 0x30
    .byte 0x20, 0x82, 0x00, 0x04, 0x00, 0x14, 0xC8, 0x28, 0x00, 0xDD, 0x7F, 0xE0, 0x10, 0x21, 0x60, 0x5E
    .byte 0xC0, 0x03, 0xC8, 0x21, 0x3B, 0xF0, 0x32, 0xF8, 0x3A, 0x49, 0x88, 0x46, 0x00, 0x04, 0x00, 0x14
    .byte 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11, 0x80, 0x27, 0x7F, 0x00, 0x38, 0x1A, 0x36, 0x4E
    .byte 0x30, 0x40, 0x80, 0x00, 0x40, 0x44, 0x01, 0x68, 0x80, 0x25, 0x2D, 0x02, 0x69, 0x1A, 0x88, 0x00
    .byte 0x40, 0x18, 0x41, 0x01, 0x40, 0x18, 0x40, 0x00, 0x40, 0x42, 0xC1, 0x0F, 0x40, 0x18, 0x00, 0x14
    .byte 0x8C, 0x21, 0x49, 0x00, 0x40, 0x18, 0xA0, 0x80, 0x10, 0x21, 0x60, 0x5E, 0xC0, 0x03, 0x64, 0x21
    .byte 0x3B, 0xF0, 0x0C, 0xF8, 0x00, 0x04, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11
    .byte 0x38, 0x1A, 0x30, 0x40, 0x80, 0x00, 0x40, 0x44, 0x01, 0x68, 0x69, 0x1A, 0x48, 0x00, 0x40, 0x18
    .byte 0xC0, 0x00, 0x40, 0x18, 0x40, 0x00, 0x40, 0x42, 0xC1, 0x0F, 0x40, 0x18, 0x00, 0x14, 0x46, 0x30
    .byte 0xE0, 0x80, 0x10, 0x21, 0x60, 0x5E, 0xC0, 0x03, 0x64, 0x21, 0x3A, 0xF0, 0xEF, 0xFF, 0x00, 0x04
    .byte 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11, 0x38, 0x1A, 0x30, 0x40, 0x80, 0x00
    .byte 0x40, 0x44, 0x00, 0x68, 0x28, 0x1A, 0x00, 0x01, 0x40, 0x42, 0xC1, 0x0F, 0x40, 0x18, 0x00, 0x14
    .byte 0xB0, 0x30, 0x60, 0x81, 0x20, 0x81, 0x10, 0x21, 0x60, 0x5E, 0xC0, 0x03, 0xC8, 0x21, 0x3A, 0xF0
    .byte 0xD5, 0xFF, 0x00, 0x04, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11, 0x38, 0x1A
    .byte 0x30, 0x40, 0x80, 0x00, 0x40, 0x44, 0x00, 0x68, 0x28, 0x1A, 0x40, 0x03, 0x40, 0x42, 0xC1, 0x0F
    .byte 0x40, 0x18, 0x00, 0x14, 0x80, 0x21, 0x49, 0x01, 0x40, 0x18, 0xA0, 0x81, 0x00, 0x20, 0x08, 0xE0
    .byte 0xCC, 0xEB, 0x03, 0x02, 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x20, 0x20, 0x82
    .byte 0x01, 0x20, 0x08, 0xBC, 0x98, 0x46, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47
    thumb_func_start sub_8026F50
    sub_8026F50:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x00C
    ldr r0, _08027100 @ =0x0203EBCC
    ldr r0, [r0, #0x00]
    mov r10, r0
    movs r6, #0xEE
    lsls r6, r6, #0x01
    add r6, r10
    ldr r7, _08027104 @ =0x0203EBD4
    ldr r0, _08027108 @ =0x41C64E6D
    mov r9, r0
    ldr r1, _0802710C @ =0x00007FFF
    mov r8, r1
    movs r4, #0x92
    lsls r4, r4, #0x02
    add r4, r10
    movs r5, #0x1F
    _08026F7A:
    movs r0, #0x19
    ldsb r0, [r4, r0]
    cmp r0, #0x00
    bne _08027042
    movs r2, #0x04
    ldsh r0, [r6, r2]
    str r0, [r4, #0x00]
    movs r3, #0x06
    ldsh r0, [r6, r3]
    str r0, [r4, #0x04]
    ldr r0, [r7, #0x00]
    mov r1, r9
    muls r1, r0
    adds r0, r1, #0x0
    ldr r2, _08027110 @ =0x00003039
    adds r0, r0, r2
    str r0, [r7, #0x00]
    lsrs r0, r0, #0x10
    mov r3, r8
    ands r0, r3
    ldr r1, _08027114 @ =0x0000012D
    bl __modsi3
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    movs r2, #0x04
    ldsh r1, [r6, r2]
    adds r1, #0x96
    subs r1, r1, r0
    str r1, [r4, #0x0C]
    ldr r0, [r7, #0x00]
    mov r3, r9
    muls r3, r0
    adds r0, r3, #0x0
    ldr r1, _08027110 @ =0x00003039
    adds r0, r0, r1
    str r0, [r7, #0x00]
    lsrs r0, r0, #0x10
    mov r2, r8
    ands r0, r2
    movs r1, #0x65
    bl __modsi3
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    movs r3, #0x06
    ldsh r1, [r6, r3]
    adds r1, #0x64
    adds r1, r1, r0
    ldr r0, [r4, #0x00]
    lsls r0, r0, #0x10
    str r0, [r4, #0x00]
    ldr r0, [r4, #0x04]
    lsls r0, r0, #0x10
    str r0, [r4, #0x04]
    ldr r0, [r4, #0x0C]
    lsls r0, r0, #0x10
    str r0, [r4, #0x0C]
    lsls r1, r1, #0x10
    str r1, [r4, #0x10]
    ldr r0, [r7, #0x00]
    mov r1, r9
    muls r1, r0
    adds r0, r1, #0x0
    ldr r2, _08027110 @ =0x00003039
    adds r0, r0, r2
    str r0, [r7, #0x00]
    lsrs r0, r0, #0x10
    mov r3, r8
    ands r0, r3
    movs r1, #0x21
    bl __modsi3
    adds r0, #0x40
    strb r0, [r4, #0x18]
    ldr r0, [r4, #0x0C]
    ldr r1, [r4, #0x00]
    subs r0, r0, r1
    movs r1, #0x18
    ldsb r1, [r4, r1]
    bl __divsi3
    str r0, [r4, #0x08]
    ldr r2, [r4, #0x10]
    ldr r0, [r4, #0x04]
    subs r2, r2, r0
    movs r1, #0x18
    ldsb r1, [r4, r1]
    ldr r3, _08027118 @ =0xFFFFE000
    adds r0, r3, #0x0
    muls r0, r1
    muls r0, r1
    lsls r2, r2, #0x01
    adds r0, r0, r2
    lsls r1, r1, #0x01
    bl __divsi3
    str r0, [r4, #0x14]
    movs r0, #0x01
    strb r0, [r4, #0x19]
    _08027042:
    ldr r0, [r4, #0x00]
    ldr r1, [r4, #0x08]
    adds r0, r0, r1
    str r0, [r4, #0x00]
    ldr r0, [r4, #0x04]
    ldr r1, [r4, #0x14]
    adds r0, r0, r1
    str r0, [r4, #0x04]
    ldr r0, _08027118 @ =0xFFFFE000
    subs r1, r1, r0
    str r1, [r4, #0x14]
    ldrb r0, [r4, #0x18]
    subs r0, #0x01
    movs r1, #0x00
    strb r0, [r4, #0x18]
    lsls r0, r0, #0x18
    cmp r0, #0x00
    bge _08027070
    ldr r0, [r4, #0x0C]
    str r0, [r4, #0x00]
    ldr r0, [r4, #0x10]
    str r0, [r4, #0x04]
    strb r1, [r4, #0x19]
    _08027070:
    adds r4, #0x1C
    subs r5, #0x01
    cmp r5, #0x00
    blt _0802707A
    b _08026F7A
    _0802707A:
    ldr r2, _0802711C @ =0x080C9934
    ldr r1, _08027120 @ =0x0203EBB0
    movs r5, #0x03
    _08027080:
    ldrh r0, [r2, #0x00]
    strh r0, [r1, #0x00]
    adds r2, #0x02
    adds r1, #0x02
    subs r5, #0x01
    cmp r5, #0x00
    bge _08027080
    ldr r2, _08027120 @ =0x0203EBB0
    ldrh r1, [r2, #0x06]
    ldr r0, _08027124 @ =0x0000F3FF
    ands r0, r1
    movs r3, #0x80
    lsls r3, r3, #0x03
    adds r1, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x06]
    movs r4, #0x92
    lsls r4, r4, #0x02
    add r4, r10
    movs r5, #0x1F
    _080270A8:
    ldr r1, [r4, #0x00]
    cmp r1, #0x00
    bge _080270B2
    ldr r0, _08027128 @ =0x0000FFFF
    adds r1, r1, r0
    _080270B2:
    lsrs r1, r1, #0x10
    ldr r0, _0802712C @ =0xFFFF0000
    ldr r2, [sp, #0x008]
    ands r2, r0
    orrs r2, r1
    str r2, [sp, #0x008]
    ldr r0, [r4, #0x04]
    cmp r0, #0x00
    bge _080270C8
    ldr r1, _08027128 @ =0x0000FFFF
    adds r0, r0, r1
    _080270C8:
    lsrs r0, r0, #0x10
    lsls r0, r0, #0x10
    ldr r1, _08027128 @ =0x0000FFFF
    ands r2, r1
    orrs r2, r0
    str r2, [sp, #0x008]
    movs r0, #0x00
    str r0, [sp, #0x000]
    str r0, [sp, #0x004]
    ldr r0, _08027120 @ =0x0203EBB0
    add r1, sp, #0x008
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    adds r4, #0x1C
    subs r5, #0x01
    cmp r5, #0x00
    bge _080270A8
    add sp, #0x00C
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _08027100: .4byte 0x0203EBCC
    _08027104: .4byte 0x0203EBD4
    _08027108: .4byte 0x41C64E6D
    _0802710C: .4byte 0x00007FFF
    _08027110: .4byte 0x00003039
    _08027114: .4byte 0x0000012D
    _08027118: .4byte 0xFFFFE000
    _0802711C: .4byte 0x080C9934
    _08027120: .4byte 0x0203EBB0
    _08027124: .4byte 0x0000F3FF
    _08027128: .4byte 0x0000FFFF
    _0802712C: .4byte 0xFFFF0000
    .byte 0x30, 0xB5, 0x0A, 0x48, 0x02, 0x68, 0xEE, 0x20, 0x40, 0x00, 0x11, 0x18, 0x08, 0x48, 0x08, 0x60
    .byte 0x00, 0x20, 0x48, 0x81, 0x08, 0x81, 0x08, 0x82, 0x06, 0x48, 0x00, 0x68, 0x01, 0x28, 0x13, 0xD0
    .byte 0x01, 0x28, 0x09, 0xDC, 0x00, 0x28, 0x0A, 0xD0, 0x19, 0xE0, 0x00, 0x00, 0xCC, 0xEB, 0x03, 0x02
    .byte 0x6C, 0x99, 0x0C, 0x08, 0xB8, 0xEB, 0x03, 0x02, 0x02, 0x28, 0x0A, 0xD0, 0x0F, 0xE0, 0x78, 0x20
    .byte 0x48, 0x82, 0x88, 0x80, 0x20, 0x20, 0x08, 0xE0, 0x58, 0x20, 0x48, 0x82, 0x88, 0x80, 0x28, 0x20
    .byte 0x03, 0xE0, 0x98, 0x20, 0x48, 0x82, 0x88, 0x80, 0x30, 0x20, 0x88, 0x82, 0xC8, 0x80, 0xFA, 0x23
    .byte 0x5B, 0x00, 0xD1, 0x18, 0x00, 0x20, 0x08, 0x70, 0x01, 0x33, 0xD1, 0x18, 0x08, 0x70, 0x01, 0x33
    .byte 0xD1, 0x18, 0x08, 0x70, 0x0F, 0x4D, 0x2C, 0x68, 0x0F, 0x48, 0x10, 0x49, 0x64, 0x18, 0x21, 0x68
    .byte 0x3A, 0xF0, 0xD8, 0xF8, 0x09, 0xF0, 0x3E, 0xF9, 0x21, 0x68, 0x0D, 0x4A, 0x0D, 0x4B, 0x09, 0xF0
    .byte 0x11, 0xF9, 0x00, 0x23, 0x92, 0x22, 0x92, 0x00, 0x1F, 0x21, 0x28, 0x68, 0x80, 0x18, 0x43, 0x76
    .byte 0x1C, 0x32, 0x01, 0x39, 0x00, 0x29, 0xF8, 0xDA, 0x00, 0x21, 0x07, 0x48, 0x01, 0x60, 0x30, 0xBC
    .byte 0x01, 0xBC, 0x00, 0x47, 0xCC, 0xEB, 0x03, 0x02, 0xB8, 0x17, 0x0C, 0x08, 0xD4, 0x05, 0x00, 0x00
    .byte 0x00, 0x20, 0x01, 0x06, 0x10, 0x00, 0x00, 0x80, 0xD4, 0xEB, 0x03, 0x02, 0xF0, 0xB5, 0x83, 0xB0
    .byte 0x46, 0x48, 0x06, 0x68, 0xEE, 0x20, 0x40, 0x00, 0x35, 0x18, 0xA8, 0x68, 0x00, 0x28, 0x2A, 0xD0
    .byte 0xAA, 0x88, 0x43, 0x49, 0x02, 0x98, 0x08, 0x40, 0x10, 0x43, 0x02, 0x90, 0xE9, 0x88, 0x09, 0x04
    .byte 0x40, 0x4A, 0x10, 0x40, 0x08, 0x43, 0x02, 0x90, 0x28, 0x68, 0x08, 0x21, 0x6A, 0x5E, 0x0A, 0x27
    .byte 0xEB, 0x5F, 0x00, 0x24, 0x00, 0x94, 0x01, 0x94, 0x02, 0xA9, 0x08, 0xF0, 0xEF, 0xFB, 0xFF, 0xF7
    .byte 0x87, 0xFE, 0x39, 0x48, 0x08, 0x21, 0x6A, 0x5E, 0x0A, 0x27, 0xEB, 0x5F, 0x0C, 0x27, 0xE9, 0x5F
    .byte 0x00, 0x91, 0x01, 0x94, 0x02, 0xA9, 0x08, 0xF0, 0xE1, 0xFB, 0x80, 0x21, 0xC9, 0x00, 0x08, 0x1C
    .byte 0xAF, 0x89, 0xC0, 0x19, 0xA8, 0x81, 0xFA, 0x20, 0x40, 0x00, 0x33, 0x18, 0x18, 0x78, 0x01, 0x30
    .byte 0x00, 0x27, 0x18, 0x70, 0x00, 0x06, 0x00, 0x16, 0x08, 0x28, 0x2E, 0xDD, 0x2B, 0x49, 0x2C, 0x4D
    .byte 0x28, 0x68, 0x80, 0x00, 0x40, 0x18, 0x02, 0x68, 0x1F, 0x70, 0x2A, 0x49, 0x73, 0x18, 0x18, 0x78
    .byte 0x01, 0x30, 0x0F, 0x21, 0x08, 0x40, 0x18, 0x70, 0x00, 0x20, 0x18, 0x56, 0x80, 0x00, 0x80, 0x18
    .byte 0x00, 0x68, 0x25, 0x49, 0x74, 0x18, 0x21, 0x68, 0x3A, 0xF0, 0x5C, 0xF8, 0x09, 0xF0, 0xC2, 0xF8
    .byte 0x21, 0x68, 0x22, 0x4A, 0x22, 0x4B, 0x09, 0xF0, 0x95, 0xF8, 0x22, 0x49, 0x28, 0x68, 0x80, 0x00
    .byte 0x40, 0x18, 0x04, 0x68, 0x01, 0x20, 0x07, 0xF0, 0xB3, 0xF9, 0x01, 0x1C, 0xF0, 0x20, 0x40, 0x00
    .byte 0x09, 0x18, 0x20, 0x1C, 0x08, 0x22, 0x3A, 0xF0, 0x39, 0xF8, 0xFB, 0x21, 0x49, 0x00, 0x72, 0x18
    .byte 0x10, 0x78, 0x01, 0x30, 0x10, 0x70, 0x00, 0x06, 0x00, 0x0E, 0x0B, 0x28, 0x00, 0xD9, 0x17, 0x70
    .byte 0x15, 0x49, 0x00, 0x20, 0x10, 0x56, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68, 0x01, 0x20, 0x07, 0xF0
    .byte 0x97, 0xF9, 0x01, 0x1C, 0xE0, 0x31, 0x20, 0x1C, 0x08, 0x22, 0x3A, 0xF0, 0x1F, 0xF8, 0x01, 0x20
    .byte 0x07, 0xF0, 0xAA, 0xF9, 0x03, 0xB0, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0xCC, 0xEB, 0x03, 0x02
    .byte 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x3C, 0x99, 0x0C, 0x08, 0x28, 0xBE, 0x0D, 0x08
    .byte 0xB8, 0xEB, 0x03, 0x02, 0xF5, 0x01, 0x00, 0x00, 0xCC, 0x05, 0x00, 0x00, 0x00, 0x22, 0x01, 0x06
    .byte 0x00, 0x01, 0x00, 0x80, 0x38, 0xBE, 0x0D, 0x08, 0x38, 0xBD, 0x0D, 0x08, 0xF0, 0xB5, 0x30, 0x48
    .byte 0x01, 0x68, 0xEE, 0x20, 0x40, 0x00, 0x0A, 0x18, 0x10, 0x8A, 0x01, 0x30, 0x10, 0x82, 0x00, 0x04
    .byte 0x00, 0x14, 0x80, 0x28, 0x5A, 0xDC, 0x10, 0x21, 0x50, 0x5E, 0x2A, 0x4E, 0x00, 0x06, 0x00, 0x14
    .byte 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11, 0x80, 0x25, 0x6D, 0x00, 0x28, 0x1A, 0x26, 0x4C
    .byte 0x20, 0x40, 0x80, 0x00, 0x80, 0x19, 0x01, 0x68, 0x12, 0x23, 0xD0, 0x5E, 0x18, 0x27, 0xBC, 0x46
    .byte 0x63, 0x46, 0x18, 0x1A, 0x80, 0x23, 0x1B, 0x02, 0x59, 0x1A, 0x48, 0x43, 0xC1, 0x0F, 0x40, 0x18
    .byte 0x00, 0x14, 0x57, 0x8A, 0xC0, 0x19, 0x90, 0x80, 0x10, 0x21, 0x50, 0x5E, 0x00, 0x06, 0x00, 0x14
    .byte 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11, 0x28, 0x1A, 0x20, 0x40, 0x80, 0x00, 0x80, 0x19
    .byte 0x01, 0x68, 0x14, 0x27, 0xD0, 0x5F, 0x67, 0x46, 0x38, 0x1A, 0x59, 0x1A, 0x48, 0x43, 0xC1, 0x0F
    .byte 0x40, 0x18, 0x00, 0x14, 0x91, 0x8A, 0x40, 0x18, 0xD0, 0x80, 0x10, 0x27, 0xD0, 0x5F, 0x40, 0x06
    .byte 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11, 0x28, 0x1A, 0x20, 0x40, 0x80, 0x00
    .byte 0x80, 0x19, 0x01, 0x68, 0x59, 0x1A, 0x48, 0x00, 0x40, 0x18, 0x00, 0x01, 0x40, 0x42, 0xC1, 0x0F
    .byte 0x40, 0x18, 0x00, 0x14, 0x40, 0x19, 0x50, 0x81, 0x10, 0x81, 0x00, 0x20, 0x0B, 0xE0, 0x00, 0x00
    .byte 0xCC, 0xEB, 0x03, 0x02, 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x03, 0x00, 0x00, 0x01, 0x20, 0x48, 0x60
    .byte 0x00, 0x20, 0x10, 0x82, 0x01, 0x20, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x30, 0xB5, 0x1D, 0x4D
    .byte 0x2C, 0x68, 0xEE, 0x20, 0x40, 0x00, 0x21, 0x18, 0x1B, 0x48, 0x08, 0x60, 0x00, 0x22, 0x00, 0x23
    .byte 0x80, 0x20, 0x40, 0x00, 0x48, 0x81, 0x08, 0x81, 0x0B, 0x82, 0x18, 0x20, 0x88, 0x80, 0xC8, 0x80
    .byte 0xFA, 0x21, 0x49, 0x00, 0x60, 0x18, 0x02, 0x70, 0x01, 0x31, 0x60, 0x18, 0x02, 0x70, 0x01, 0x31
    .byte 0x60, 0x18, 0x02, 0x70, 0x2C, 0x68, 0x11, 0x48, 0x11, 0x49, 0x64, 0x18, 0x21, 0x68, 0x39, 0xF0
    .byte 0x79, 0xFF, 0x08, 0xF0, 0xDF, 0xFF, 0x21, 0x68, 0x0E, 0x4A, 0x0F, 0x4B, 0x08, 0xF0, 0xB2, 0xFF
    .byte 0x00, 0x23, 0x92, 0x22, 0x92, 0x00, 0x1F, 0x21, 0x28, 0x68, 0x80, 0x18, 0x43, 0x76, 0x1C, 0x32
    .byte 0x01, 0x39, 0x00, 0x29, 0xF8, 0xDA, 0x00, 0x21, 0x08, 0x48, 0x01, 0x60, 0x30, 0xBC, 0x01, 0xBC
    .byte 0x00, 0x47, 0x00, 0x00, 0xCC, 0xEB, 0x03, 0x02, 0x6C, 0x99, 0x0C, 0x08, 0xB8, 0x17, 0x0C, 0x08
    .byte 0xD4, 0x05, 0x00, 0x00, 0x00, 0x20, 0x01, 0x06, 0x10, 0x00, 0x00, 0x80, 0xD4, 0xEB, 0x03, 0x02
    .byte 0x0D, 0x48, 0x03, 0x68, 0xFC, 0x21, 0x49, 0x00, 0x58, 0x18, 0x0C, 0x49, 0x01, 0x60, 0x00, 0x22
    .byte 0x80, 0x21, 0x49, 0x00, 0x41, 0x81, 0x01, 0x81, 0x02, 0x82, 0x78, 0x21, 0x41, 0x82, 0x81, 0x80
    .byte 0x07, 0x49, 0x81, 0x82, 0xC1, 0x80, 0x84, 0x21, 0x89, 0x00, 0x58, 0x18, 0x02, 0x60, 0x04, 0x31
    .byte 0x58, 0x18, 0x02, 0x60, 0x70, 0x47, 0x00, 0x00, 0xCC, 0xEB, 0x03, 0x02, 0x9C, 0x97, 0x0C, 0x08
    .byte 0xDA, 0xFF, 0x00, 0x00, 0xF0, 0xB5, 0x84, 0xB0, 0x13, 0x48, 0x06, 0x68, 0xFC, 0x20, 0x40, 0x00
    .byte 0x34, 0x18, 0xA0, 0x68, 0x00, 0x28, 0x7C, 0xD0, 0xA2, 0x88, 0x10, 0x49, 0x02, 0x98, 0x08, 0x40
    .byte 0x10, 0x43, 0x02, 0x90, 0xE1, 0x88, 0x09, 0x04, 0x0D, 0x4A, 0x10, 0x40, 0x08, 0x43, 0x02, 0x90
    .byte 0x84, 0x21, 0x89, 0x00, 0x70, 0x18, 0x05, 0x68, 0x00, 0x2D, 0x13, 0xD1, 0x20, 0x68, 0x08, 0x27
    .byte 0xE2, 0x5F, 0x0A, 0x21, 0x63, 0x5E, 0x0C, 0x27, 0xE1, 0x5F, 0x00, 0x91, 0x01, 0x95, 0x02, 0xA9
    .byte 0x08, 0xF0, 0x64, 0xFA, 0x13, 0xE0, 0x00, 0x00, 0xCC, 0xEB, 0x03, 0x02, 0x00, 0x00, 0xFF, 0xFF
    .byte 0xFF, 0xFF, 0x00, 0x00, 0x20, 0x68, 0x08, 0x21, 0x62, 0x5E, 0x0A, 0x25, 0x63, 0x5F, 0x0C, 0x27
    .byte 0xE1, 0x5F, 0x00, 0x91, 0x15, 0x49, 0x01, 0x91, 0x02, 0xA9, 0x08, 0xF0, 0x4F, 0xFA, 0x06, 0x21
    .byte 0x60, 0x5E, 0x7A, 0x28, 0x45, 0xD0, 0xA0, 0x88, 0x8A, 0x21, 0x09, 0x04, 0x08, 0x43, 0x03, 0x90
    .byte 0x10, 0x27, 0xE5, 0x5F, 0x00, 0x2D, 0x1D, 0xD1, 0x85, 0x20, 0x80, 0x00, 0x31, 0x18, 0x08, 0x68
    .byte 0x02, 0x30, 0x08, 0x60, 0xC8, 0x28, 0x01, 0xDD, 0xC8, 0x20, 0x08, 0x60, 0x09, 0x68, 0xC8, 0x20
    .byte 0xC0, 0x01, 0x3A, 0xF0, 0x7D, 0xFC, 0x03, 0x1C, 0x05, 0x48, 0x03, 0xA9, 0x00, 0x95, 0x03, 0x4A
    .byte 0x01, 0x92, 0x1A, 0x1C, 0x08, 0xF0, 0x2A, 0xFA, 0x23, 0xE0, 0x00, 0x00, 0x30, 0xBD, 0x0D, 0x08
    .byte 0x54, 0x99, 0x0C, 0x08, 0x06, 0x25, 0x61, 0x5F, 0x88, 0x00, 0x40, 0x18, 0x00, 0x01, 0x7A, 0x21
    .byte 0x3A, 0xF0, 0x66, 0xFC, 0xC8, 0x21, 0x0B, 0x1A, 0xC8, 0x2B, 0x00, 0xDD, 0xC8, 0x23, 0x77, 0x2B
    .byte 0x00, 0xDC, 0x78, 0x23, 0xC8, 0x20, 0xC0, 0x01, 0x19, 0x1C, 0x3A, 0xF0, 0x59, 0xFC, 0x03, 0x1C
    .byte 0x06, 0x48, 0x03, 0xA9, 0x00, 0x22, 0x00, 0x92, 0x05, 0x4A, 0x01, 0x92, 0x1A, 0x1C, 0x08, 0xF0
    .byte 0x05, 0xFA, 0x04, 0xB0, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x54, 0x99, 0x0C, 0x08
    .byte 0x30, 0xBD, 0x0D, 0x08, 0x10, 0xB5, 0x81, 0xB0, 0x11, 0x48, 0x01, 0x68, 0xFC, 0x20, 0x40, 0x00
    .byte 0x0C, 0x18, 0x20, 0x8A, 0x01, 0x30, 0x20, 0x82, 0x00, 0x04, 0x00, 0x14, 0x40, 0x28, 0x19, 0xDC
    .byte 0x14, 0x21, 0x60, 0x5E, 0x10, 0x21, 0x62, 0x5E, 0x09, 0x21, 0x00, 0x91, 0x7A, 0x21, 0x40, 0x23
    .byte 0xE7, 0xF7, 0x6E, 0xF9, 0xE0, 0x80, 0x10, 0x21, 0x60, 0x5E, 0x18, 0x28, 0x03, 0xD0, 0x28, 0x28
    .byte 0x01, 0xD0, 0x30, 0x28, 0x02, 0xD1, 0xAF, 0x20, 0x38, 0xF0, 0x5A, 0xFC, 0x00, 0x20, 0x05, 0xE0
    .byte 0xCC, 0xEB, 0x03, 0x02, 0x00, 0x20, 0x20, 0x82, 0x01, 0x20, 0x88, 0x60, 0x01, 0xB0, 0x10, 0xBC
    .byte 0x02, 0xBC, 0x08, 0x47, 0x70, 0xB5, 0x1A, 0x48, 0x03, 0x68, 0x00, 0x25, 0x19, 0x4C, 0xAA, 0x00
    .byte 0x19, 0x1C, 0x24, 0x31, 0x89, 0x18, 0x00, 0x26, 0xA0, 0x5F, 0x00, 0x04, 0x08, 0x60, 0x19, 0x1C
    .byte 0x44, 0x31, 0x89, 0x18, 0x02, 0x26, 0xA0, 0x5F, 0x00, 0x04, 0x80, 0x26, 0x36, 0x04, 0x80, 0x19
    .byte 0x08, 0x60, 0x18, 0x1D, 0x80, 0x18, 0x61, 0x68, 0x01, 0x60, 0x6A, 0x00, 0x18, 0x1C, 0x64, 0x30
    .byte 0x80, 0x18, 0x21, 0x89, 0x01, 0x80, 0x18, 0x1C, 0x74, 0x30, 0x80, 0x18, 0x61, 0x89, 0x01, 0x80
    .byte 0x18, 0x1C, 0x84, 0x30, 0x80, 0x18, 0xA1, 0x89, 0x01, 0x80, 0x10, 0x34, 0x01, 0x35, 0x07, 0x2D
    .byte 0xD5, 0xDD, 0x80, 0x20, 0x40, 0x00, 0x18, 0x80, 0x70, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0xD0, 0xEB, 0x03, 0x02, 0x14, 0xC0, 0x0D, 0x08, 0xF0, 0xB5, 0x57, 0x46, 0x4E, 0x46, 0x45, 0x46
    .byte 0xE0, 0xB4, 0x8A, 0xB0, 0x26, 0x48, 0x06, 0x68, 0x31, 0x88, 0x00, 0x22, 0xB0, 0x5E, 0x00, 0x28
    .byte 0x0B, 0xDD, 0x48, 0x1E, 0x30, 0x80, 0x23, 0x4B, 0x31, 0x1C, 0x44, 0x31, 0x07, 0x22, 0x08, 0x68
    .byte 0xC0, 0x18, 0x01, 0xC1, 0x01, 0x3A, 0x00, 0x2A, 0xF9, 0xDA, 0x00, 0x24, 0x33, 0x1C, 0x44, 0x33
    .byte 0x06, 0x93, 0x37, 0x1D, 0x07, 0x97, 0x64, 0x20, 0x80, 0x19, 0x82, 0x46, 0x74, 0x21, 0x89, 0x19
    .byte 0x88, 0x46, 0x32, 0x1C, 0x84, 0x32, 0x09, 0x92, 0x20, 0x3B, 0x08, 0x93, 0x57, 0x46, 0x05, 0x97
    .byte 0xA2, 0x00, 0x07, 0x99, 0x88, 0x18, 0x05, 0x68, 0x2B, 0x1C, 0x61, 0x00, 0x05, 0x9F, 0x78, 0x18
    .byte 0x00, 0x27, 0xC0, 0x5F, 0x17, 0x1C, 0x0A, 0x1C, 0x01, 0x34, 0xA1, 0x46, 0x00, 0x28, 0x03, 0xDD
    .byte 0x08, 0x33, 0x01, 0x38, 0x00, 0x28, 0xFB, 0xD1, 0x40, 0x46, 0x81, 0x18, 0x08, 0x88, 0x01, 0x38
    .byte 0x08, 0x80, 0x00, 0x04, 0x00, 0x28, 0x15, 0xDA, 0x50, 0x46, 0x81, 0x18, 0x08, 0x88, 0x01, 0x30
    .byte 0x08, 0x80, 0x08, 0x33, 0x18, 0x68, 0x00, 0x28, 0x06, 0xD1, 0x08, 0x80, 0x05, 0xE0, 0x00, 0x00
    .byte 0xD0, 0xEB, 0x03, 0x02, 0x00, 0x80, 0xFF, 0xFF, 0x1D, 0x1C, 0x43, 0x46, 0x99, 0x18, 0xA8, 0x88
    .byte 0x08, 0x80, 0x00, 0xE0, 0x1D, 0x1C, 0x29, 0x49, 0x29, 0x4B, 0xC8, 0x18, 0x00, 0x68, 0x24, 0x23
    .byte 0xC1, 0x5E, 0x09, 0x9B, 0x98, 0x18, 0x00, 0x22, 0x80, 0x5E, 0x09, 0x18, 0x02, 0x91, 0x01, 0x20
    .byte 0x03, 0x90, 0x08, 0x9B, 0xD8, 0x19, 0x00, 0x68, 0x00, 0x28, 0x01, 0xDA, 0x21, 0x49, 0x40, 0x18
    .byte 0x01, 0x0C, 0x21, 0x48, 0x04, 0x9A, 0x02, 0x40, 0x0A, 0x43, 0x04, 0x92, 0x06, 0x9B, 0xD8, 0x19
    .byte 0x00, 0x68, 0x00, 0x28, 0x01, 0xDA, 0x1B, 0x4F, 0xC0, 0x19, 0x00, 0x0C, 0x00, 0x04, 0x19, 0x4C
    .byte 0x23, 0x1C, 0x13, 0x40, 0x03, 0x43, 0x04, 0x93, 0x00, 0x21, 0x70, 0x5E, 0x00, 0x28, 0x0B, 0xD1
    .byte 0x12, 0x4A, 0x16, 0x4F, 0xD0, 0x19, 0x19, 0x14, 0x00, 0x78, 0x15, 0x4A, 0x80, 0x18, 0x09, 0x18
    .byte 0x09, 0x04, 0x23, 0x40, 0x0B, 0x43, 0x04, 0x93, 0x04, 0x98, 0x00, 0x14, 0xDF, 0x28, 0x09, 0xDC
    .byte 0x28, 0x68, 0x00, 0x21, 0x00, 0x91, 0x02, 0xAB, 0x01, 0x93, 0x04, 0xA9, 0x00, 0x22, 0x00, 0x23
    .byte 0x08, 0xF0, 0xEC, 0xF8, 0x4C, 0x46, 0x07, 0x2C, 0x82, 0xDD, 0x0A, 0xB0, 0x38, 0xBC, 0x98, 0x46
    .byte 0xA1, 0x46, 0xAA, 0x46, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03
    .byte 0x38, 0x08, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xF4, 0x0B, 0x00, 0x00
    .byte 0xB7, 0xFF, 0x00, 0x00, 0x70, 0xB5, 0x18, 0x48, 0x03, 0x68, 0x00, 0x25, 0x17, 0x4C, 0xAA, 0x00
    .byte 0x19, 0x1C, 0x24, 0x31, 0x89, 0x18, 0x00, 0x26, 0xA0, 0x5F, 0x00, 0x04, 0x08, 0x60, 0x19, 0x1C
    .byte 0x44, 0x31, 0x89, 0x18, 0x02, 0x26, 0xA0, 0x5F, 0x00, 0x04, 0x08, 0x60, 0x18, 0x1D, 0x80, 0x18
    .byte 0x61, 0x68, 0x01, 0x60, 0x6A, 0x00, 0x18, 0x1C, 0x64, 0x30, 0x80, 0x18, 0x21, 0x89, 0x01, 0x80
    .byte 0x18, 0x1C, 0x74, 0x30, 0x80, 0x18, 0x61, 0x89, 0x01, 0x80, 0x18, 0x1C, 0x84, 0x30, 0x80, 0x18
    .byte 0xA1, 0x89, 0x01, 0x80, 0x10, 0x34, 0x01, 0x35, 0x07, 0x2D, 0xD8, 0xDD, 0x00, 0x20, 0x18, 0x80
    .byte 0x70, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0xD0, 0xEB, 0x03, 0x02, 0x14, 0xC0, 0x0D, 0x08
    thumb_func_start sub_80278E0
    sub_80278E0:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x060
    ldr r1, _080279BC @ =0x03002E20
    ldr r2, _080279C0 @ =0x00000814
    adds r0, r1, r2
    ldrb r0, [r0, #0x00]
    str r0, [sp, #0x040]
    movs r4, #0x00
    mov r7, sp
    adds r7, #0x20
    str r7, [sp, #0x058]
    cmp r4, r0
    bge _08027938
    ldr r0, _080279C4 @ =0x0203EB90
    mov r8, r0
    mov r6, sp
    adds r2, #0x04
    adds r5, r1, r2
    movs r7, #0x07
    mov r9, r7
    _08027910:
    lsls r2, r4, #0x02
    ldm r5!, {r3}
    adds r0, r3, #0x0
    adds r0, #0xC4
    ldrb r0, [r0, #0x00]
    stm r6!, {r0}
    adds r0, r3, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    mov r0, r9
    ands r0, r1
    ldr r7, [sp, #0x058]
    adds r1, r7, r2
    str r0, [r1, #0x00]
    add r2, r8
    str r3, [r2, #0x00]
    adds r4, #0x01
    ldr r0, [sp, #0x040]
    cmp r4, r0
    blt _08027910
    _08027938:
    movs r4, #0x00
    ldr r1, [sp, #0x040]
    subs r1, #0x01
    str r1, [sp, #0x054]
    cmp r4, r1
    bge _08027A28
    ldr r2, [sp, #0x058]
    str r2, [sp, #0x048]
    _08027948:
    adds r7, r4, #0x1
    mov r10, r7
    ldr r0, [sp, #0x040]
    cmp r10, r0
    bge _08027A20
    lsls r4, r4, #0x02
    mov r9, r4
    mov r1, sp
    add r1, r9
    mov r8, r1
    ldr r2, [sp, #0x048]
    add r2, r9
    str r2, [sp, #0x04C]
    ldr r7, _080279C4 @ =0x0203EB90
    add r7, r9
    str r7, [sp, #0x050]
    ldr r0, _080279C4 @ =0x0203EB90
    str r0, [sp, #0x05C]
    mov r1, r10
    lsls r0, r1, #0x02
    ldr r2, _080279C4 @ =0x0203EB90
    adds r7, r0, r2
    ldr r1, [sp, #0x048]
    adds r6, r0, r1
    adds r5, r0, #0x0
    mov r2, sp
    adds r4, r5, r2
    ldr r0, [sp, #0x040]
    mov r1, r10
    subs r0, r0, r1
    mov r12, r0
    _08027986:
    movs r2, #0x00
    str r2, [sp, #0x044]
    mov r0, r8
    ldr r1, [r0, #0x00]
    ldr r0, [r4, #0x00]
    cmp r1, r0
    blt _080279EE
    cmp r1, r0
    bne _080279E8
    ldr r1, [sp, #0x05C]
    mov r2, r9
    adds r0, r2, r1
    ldr r3, [r0, #0x00]
    ldr r0, [r3, #0x48]
    movs r2, #0x80
    lsls r2, r2, #0x08
    ands r0, r2
    cmp r0, #0x00
    bne _080279C8
    adds r0, r5, r1
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    ands r0, r2
    cmp r0, #0x00
    beq _080279E8
    b _080279EE
    .byte 0x00, 0x00
    _080279BC: .4byte 0x03002E20
    _080279C0: .4byte 0x00000814
    _080279C4: .4byte 0x0203EB90
    _080279C8:
    ldr r1, [sp, #0x05C]
    adds r0, r5, r1
    ldr r1, [r0, #0x00]
    ldr r0, [r1, #0x48]
    ands r0, r2
    cmp r0, #0x00
    beq _080279E8
    adds r0, r3, #0x0
    adds r0, #0xEC
    adds r1, #0xEC
    ldrb r0, [r0, #0x00]
    ldrb r1, [r1, #0x00]
    cmp r0, r1
    bls _080279E8
    movs r2, #0x01
    str r2, [sp, #0x044]
    _080279E8:
    ldr r0, [sp, #0x044]
    cmp r0, #0x00
    beq _08027A0C
    _080279EE:
    ldr r1, [r4, #0x00]
    mov r2, r8
    ldr r0, [r2, #0x00]
    str r0, [r4, #0x00]
    str r1, [r2, #0x00]
    ldr r1, [r6, #0x00]
    ldr r2, [sp, #0x04C]
    ldr r0, [r2, #0x00]
    str r0, [r6, #0x00]
    str r1, [r2, #0x00]
    ldr r1, [r7, #0x00]
    ldr r2, [sp, #0x050]
    ldr r0, [r2, #0x00]
    str r0, [r7, #0x00]
    str r1, [r2, #0x00]
    _08027A0C:
    adds r7, #0x04
    adds r6, #0x04
    adds r5, #0x04
    adds r4, #0x04
    movs r0, #0x01
    negs r0, r0
    add r12, r0
    mov r1, r12
    cmp r1, #0x00
    bne _08027986
    _08027A20:
    mov r4, r10
    ldr r2, [sp, #0x054]
    cmp r4, r2
    blt _08027948
    _08027A28:
    movs r4, #0x00
    ldr r7, _08027A48 @ =0x03002E44
    ldr r1, _08027A4C @ =0x00000814
    adds r0, r7, r1
    ldr r0, [r0, #0x00]
    adds r0, #0x4C
    ldrb r0, [r0, #0x00]
    movs r2, #0x07
    ands r2, r0
    ldr r1, [sp, #0x058]
    _08027A3C:
    ldr r0, [r1, #0x00]
    cmp r0, r2
    bne _08027A50
    adds r0, r4, #0x0
    b _08027A5A
    .byte 0x00, 0x00
    _08027A48: .4byte 0x03002E44
    _08027A4C: .4byte 0x00000814
    _08027A50:
    adds r1, #0x04
    adds r4, #0x01
    cmp r4, #0x07
    ble _08027A3C
    movs r0, #0x00
    _08027A5A:
    add sp, #0x060
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_8027A6C
    sub_8027A6C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x02C
    movs r0, #0x00
    str r0, [sp, #0x000]
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    ldr r2, _08027AB4 @ =0x01000200
    mov r0, sp
    bl CpuFastSet
    movs r0, #0x01
    bl map_setBufferDirty
    ldr r0, _08027AB8 @ =0x0203EBB8
    ldr r0, [r0, #0x00]
    cmp r0, #0x02
    bgt _08027AC0
    ldr r4, _08027ABC @ =0x080C2420
    movs r0, #0x01
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl LZ77UnCompWram
    b _08027AD4
    .byte 0x00, 0x00
    _08027AB4: .4byte 0x01000200
    _08027AB8: .4byte 0x0203EBB8
    _08027ABC: .4byte 0x080C2420
    _08027AC0:
    ldr r4, _08027B44 @ =0x080C2654
    movs r0, #0x01
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl LZ77UnCompWram
    _08027AD4:
    ldr r4, _08027B48 @ =0x080C2330
    movs r0, #0x01
    movs r1, #0x00
    movs r2, #0x14
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl LZ77UnCompWram
    movs r0, #0x01
    movs r1, #0x00
    movs r2, #0x1B
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    movs r0, #0x01
    movs r1, #0x1A
    movs r2, #0x06
    bl map_getBufferPtr2d
    adds r3, r0, #0x0
    movs r0, #0x00
    mov r10, r0
    mov r1, sp
    adds r1, #0x04
    str r1, [sp, #0x010]
    mov r2, sp
    adds r2, #0x08
    str r2, [sp, #0x014]
    mov r0, sp
    adds r0, #0x0C
    str r0, [sp, #0x018]
    _08027B16:
    mov r1, r10
    lsls r0, r1, #0x06
    mov r5, r10
    adds r5, #0x01
    adds r2, r0, r4
    adds r1, r0, r3
    movs r6, #0x02
    _08027B24:
    ldrh r0, [r2, #0x00]
    strh r0, [r1, #0x00]
    adds r2, #0x02
    adds r1, #0x02
    subs r6, #0x01
    cmp r6, #0x00
    bge _08027B24
    mov r10, r5
    cmp r5, #0x02
    ble _08027B16
    movs r7, #0xE0
    movs r5, #0x00
    _08027B3C:
    movs r4, #0x00
    adds r6, r5, #0x1
    b _08027B6C
    .byte 0x00, 0x00
    _08027B44: .4byte 0x080C2654
    _08027B48: .4byte 0x080C2330
    _08027B4C:
    adds r1, r4, #0x0
    adds r1, #0x11
    adds r2, r5, #0x5
    movs r0, #0x01
    bl map_getBufferPtr2d
    adds r2, r7, #0x0
    adds r1, r2, #0x1
    lsls r1, r1, #0x10
    lsrs r7, r1, #0x10
    movs r3, #0xC0
    lsls r3, r3, #0x08
    adds r1, r3, #0x0
    orrs r2, r1
    strh r2, [r0, #0x00]
    adds r4, #0x01
    _08027B6C:
    cmp r5, #0x02
    bne _08027B76
    cmp r4, #0x04
    ble _08027B4C
    b _08027B7A
    _08027B76:
    cmp r4, #0x02
    ble _08027B4C
    _08027B7A:
    adds r5, r6, #0x0
    cmp r5, #0x02
    ble _08027B3C
    bl dmaq_getVBlankDmaQueue
    ldr r2, _08027BC8 @ =0x080EE704
    ldr r1, _08027BCC @ =0x0203EBB8
    ldr r1, [r1, #0x00]
    lsls r1, r1, #0x02
    adds r1, r1, r2
    ldr r1, [r1, #0x00]
    ldr r2, _08027BD0 @ =0x06001C00
    ldr r3, _08027BD4 @ =0x800000B0
    bl dmaq_enqueue
    ldr r0, _08027BD8 @ =0x03002E20
    movs r1, #0x80
    lsls r1, r1, #0x04
    adds r0, r0, r1
    ldrb r4, [r0, #0x00]
    cmp r4, #0x01
    beq _08027BDC
    cmp r4, #0x01
    bgt _08027C10
    cmp r4, #0x00
    bne _08027C10
    movs r0, #0x01
    movs r1, #0x09
    movs r2, #0x0A
    bl map_getBufferPtr2d
    strh r4, [r0, #0x00]
    movs r0, #0x01
    movs r1, #0x09
    movs r2, #0x0B
    bl map_getBufferPtr2d
    strh r4, [r0, #0x00]
    b _08027C10
    _08027BC8: .4byte 0x080EE704
    _08027BCC: .4byte 0x0203EBB8
    _08027BD0: .4byte 0x06001C00
    _08027BD4: .4byte 0x800000B0
    _08027BD8: .4byte 0x03002E20
    _08027BDC:
    movs r0, #0x01
    movs r1, #0x0A
    movs r2, #0x0A
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    movs r0, #0x01
    movs r1, #0x0B
    movs r2, #0x0A
    bl map_getBufferPtr2d
    ldrh r0, [r0, #0x00]
    strh r0, [r4, #0x00]
    movs r0, #0x01
    movs r1, #0x0A
    movs r2, #0x0B
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    movs r0, #0x01
    movs r1, #0x0B
    movs r2, #0x0B
    bl map_getBufferPtr2d
    ldrh r0, [r0, #0x00]
    strh r0, [r4, #0x00]
    _08027C10:
    movs r2, #0x00
    str r2, [sp, #0x01C]
    movs r3, #0x0D
    str r3, [sp, #0x020]
    movs r0, #0x0C
    str r0, [sp, #0x024]
    movs r1, #0x00
    str r1, [sp, #0x028]
    movs r2, #0x03
    mov r10, r2
    _08027C24:
    bl save_getSavePointer_805D9B0
    ldr r3, [sp, #0x028]
    adds r0, r0, r3
    ldr r1, _08027EF0 @ =0x00000582
    adds r0, r0, r1
    ldrb r5, [r0, #0x00]
    movs r0, #0x01
    movs r1, #0x0E
    ldr r2, [sp, #0x024]
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    lsls r5, r5, #0x01
    movs r0, #0x01
    adds r1, r5, #0x0
    movs r2, #0x17
    bl map_getBufferPtr2d
    ldrh r0, [r0, #0x00]
    strh r0, [r4, #0x00]
    movs r0, #0x01
    movs r1, #0x0F
    ldr r2, [sp, #0x024]
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    adds r6, r5, #0x1
    movs r0, #0x01
    adds r1, r6, #0x0
    movs r2, #0x17
    bl map_getBufferPtr2d
    ldrh r0, [r0, #0x00]
    strh r0, [r4, #0x00]
    movs r0, #0x01
    movs r1, #0x0E
    ldr r2, [sp, #0x020]
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    movs r0, #0x01
    adds r1, r5, #0x0
    movs r2, #0x18
    bl map_getBufferPtr2d
    ldrh r0, [r0, #0x00]
    strh r0, [r4, #0x00]
    movs r0, #0x01
    movs r1, #0x0F
    ldr r2, [sp, #0x020]
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    movs r0, #0x01
    adds r1, r6, #0x0
    movs r2, #0x18
    bl map_getBufferPtr2d
    ldrh r0, [r0, #0x00]
    strh r0, [r4, #0x00]
    bl save_getSavePointer_805D9B0
    ldr r2, [sp, #0x028]
    adds r0, r0, r2
    movs r3, #0xB0
    lsls r3, r3, #0x03
    adds r0, r0, r3
    ldrh r0, [r0, #0x00]
    ldr r1, [sp, #0x010]
    ldr r2, [sp, #0x014]
    ldr r3, [sp, #0x018]
    bl sub_804EFBC
    movs r7, #0x00
    ldr r6, [sp, #0x01C]
    adds r6, #0x0C
    _08027CBE:
    movs r0, #0x01
    movs r1, #0x11
    adds r2, r6, #0x0
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    ldr r1, [sp, #0x004]
    movs r0, #0x0F
    ands r1, r0
    adds r5, r7, #0x0
    adds r5, #0x1E
    movs r0, #0x01
    adds r2, r5, #0x0
    bl map_getBufferPtr2d
    ldrh r0, [r0, #0x00]
    strh r0, [r4, #0x00]
    movs r0, #0x01
    movs r1, #0x12
    adds r2, r6, #0x0
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    movs r0, #0x01
    movs r1, #0x0A
    adds r2, r5, #0x0
    bl map_getBufferPtr2d
    ldrh r0, [r0, #0x00]
    strh r0, [r4, #0x00]
    movs r0, #0x01
    movs r1, #0x13
    adds r2, r6, #0x0
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    ldr r1, [sp, #0x008]
    lsrs r1, r1, #0x04
    movs r2, #0x0F
    ands r1, r2
    movs r0, #0x01
    adds r2, r5, #0x0
    bl map_getBufferPtr2d
    ldrh r0, [r0, #0x00]
    strh r0, [r4, #0x00]
    movs r0, #0x01
    movs r1, #0x14
    adds r2, r6, #0x0
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    ldr r1, [sp, #0x008]
    movs r3, #0x0F
    ands r1, r3
    movs r0, #0x01
    adds r2, r5, #0x0
    bl map_getBufferPtr2d
    ldrh r0, [r0, #0x00]
    strh r0, [r4, #0x00]
    movs r0, #0x01
    movs r1, #0x15
    adds r2, r6, #0x0
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    movs r0, #0x01
    movs r1, #0x0B
    adds r2, r5, #0x0
    bl map_getBufferPtr2d
    ldrh r0, [r0, #0x00]
    strh r0, [r4, #0x00]
    movs r0, #0x01
    movs r1, #0x16
    adds r2, r6, #0x0
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    ldr r1, [sp, #0x00C]
    lsrs r1, r1, #0x04
    movs r0, #0x0F
    ands r1, r0
    movs r0, #0x01
    adds r2, r5, #0x0
    bl map_getBufferPtr2d
    ldrh r0, [r0, #0x00]
    strh r0, [r4, #0x00]
    movs r0, #0x01
    movs r1, #0x17
    adds r2, r6, #0x0
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    ldr r1, [sp, #0x00C]
    movs r2, #0x0F
    ands r1, r2
    movs r0, #0x01
    adds r2, r5, #0x0
    bl map_getBufferPtr2d
    ldrh r0, [r0, #0x00]
    strh r0, [r4, #0x00]
    adds r6, #0x01
    adds r7, #0x01
    cmp r7, #0x01
    ble _08027CBE
    bl save_getSavePointer_805D9B0
    ldr r3, [sp, #0x028]
    adds r0, r0, r3
    ldr r1, _08027EF0 @ =0x00000582
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    ldr r1, _08027EF4 @ =0x080DB0A8
    adds r0, #0x01
    adds r0, r0, r1
    ldrb r7, [r0, #0x00]
    movs r6, #0x00
    ldr r5, [sp, #0x01C]
    adds r5, #0x0C
    _08027DB4:
    movs r0, #0x01
    movs r1, #0x19
    adds r2, r5, #0x0
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    adds r2, r6, #0x0
    adds r2, #0x1E
    movs r0, #0x01
    adds r1, r7, #0x0
    bl map_getBufferPtr2d
    ldrh r0, [r0, #0x00]
    strh r0, [r4, #0x00]
    adds r5, #0x01
    adds r6, #0x01
    cmp r6, #0x01
    ble _08027DB4
    bl save_getSavePointer_805D9B0
    ldr r2, [sp, #0x028]
    adds r0, r0, r2
    ldr r3, _08027EF8 @ =0x00000583
    adds r0, r0, r3
    ldrb r1, [r0, #0x00]
    ldr r0, _08027EFC @ =0x0000CCCD
    muls r0, r1
    asrs r0, r0, #0x13
    mov r8, r0
    mov r3, r8
    movs r0, #0x0F
    ands r3, r0
    mov r8, r3
    lsls r0, r3, #0x02
    add r0, r8
    lsls r0, r0, #0x01
    subs r1, r1, r0
    mov r9, r1
    movs r2, #0x0F
    ands r1, r2
    mov r9, r1
    movs r6, #0x00
    ldr r7, [sp, #0x01C]
    adds r7, #0x0C
    _08027E0C:
    movs r0, #0x01
    movs r1, #0x1C
    adds r2, r7, #0x0
    bl map_getBufferPtr2d
    adds r5, r0, #0x0
    adds r4, r6, #0x0
    adds r4, #0x1E
    movs r0, #0x01
    mov r1, r8
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    ldrh r0, [r0, #0x00]
    strh r0, [r5, #0x00]
    movs r0, #0x01
    movs r1, #0x1D
    adds r2, r7, #0x0
    bl map_getBufferPtr2d
    adds r5, r0, #0x0
    movs r0, #0x01
    mov r1, r9
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    ldrh r0, [r0, #0x00]
    strh r0, [r5, #0x00]
    adds r7, #0x01
    adds r6, #0x01
    cmp r6, #0x01
    ble _08027E0C
    ldr r3, [sp, #0x01C]
    adds r3, #0x02
    str r3, [sp, #0x01C]
    ldr r0, [sp, #0x020]
    adds r0, #0x02
    str r0, [sp, #0x020]
    ldr r1, [sp, #0x024]
    adds r1, #0x02
    str r1, [sp, #0x024]
    ldr r2, [sp, #0x028]
    adds r2, #0x04
    str r2, [sp, #0x028]
    movs r3, #0x01
    negs r3, r3
    add r10, r3
    mov r0, r10
    cmp r0, #0x00
    blt _08027E72
    b _08027C24
    _08027E72:
    movs r1, #0x00
    mov r9, r1
    mov r8, r1
    movs r7, #0x00
    movs r2, #0x00
    mov r10, r2
    _08027E7E:
    mov r6, r10
    adds r6, #0x09
    movs r0, #0x01
    movs r1, #0x1B
    adds r2, r6, #0x0
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    mov r5, r10
    adds r5, #0x1E
    movs r0, #0x01
    mov r1, r9
    adds r2, r5, #0x0
    bl map_getBufferPtr2d
    ldrh r0, [r0, #0x00]
    strh r0, [r4, #0x00]
    movs r0, #0x01
    movs r1, #0x1C
    adds r2, r6, #0x0
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    movs r0, #0x01
    mov r1, r8
    adds r2, r5, #0x0
    bl map_getBufferPtr2d
    ldrh r0, [r0, #0x00]
    strh r0, [r4, #0x00]
    movs r0, #0x01
    movs r1, #0x1D
    adds r2, r6, #0x0
    bl map_getBufferPtr2d
    adds r4, r0, #0x0
    movs r0, #0x01
    adds r1, r7, #0x0
    adds r2, r5, #0x0
    bl map_getBufferPtr2d
    ldrh r0, [r0, #0x00]
    strh r0, [r4, #0x00]
    movs r3, #0x01
    add r10, r3
    mov r0, r10
    cmp r0, #0x01
    ble _08027E7E
    add sp, #0x02C
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _08027EF0: .4byte 0x00000582
    _08027EF4: .4byte 0x080DB0A8
    _08027EF8: .4byte 0x00000583
    _08027EFC: .4byte 0x0000CCCD
    thumb_func_start sub_8027F00
    sub_8027F00:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    ldr r0, _0802803C @ =0x0203EBCC
    ldr r4, [r0, #0x00]
    movs r0, #0x00
    bl pltt_getBuffer
    mov r9, r0
    ldr r0, _08028040 @ =0x00000624
    adds r4, r4, r0
    ldr r0, [r4, #0x00]
    cmp r0, #0x0F
    ble _08027F20
    b _08028030
    _08027F20:
    adds r0, #0x01
    str r0, [r4, #0x00]
    movs r4, #0x00
    _08027F26:
    cmp r4, #0x09
    bgt _08027F92
    movs r6, #0x00
    lsls r1, r4, #0x04
    mov r12, r1
    movs r2, #0x1F
    mov r8, r2
    movs r7, #0x1F
    _08027F36:
    mov r1, r12
    adds r0, r1, r6
    lsls r0, r0, #0x01
    mov r2, r9
    adds r5, r0, r2
    ldrh r0, [r5, #0x00]
    adds r1, r0, #0x0
    ands r1, r7
    lsrs r3, r0, #0x05
    mov r2, r8
    ands r3, r2
    lsrs r2, r0, #0x0A
    mov r0, r8
    ands r2, r0
    lsls r0, r1, #0x08
    subs r0, r0, r1
    cmp r0, #0x00
    bge _08027F5C
    adds r0, #0xFF
    _08027F5C:
    lsls r0, r0, #0x08
    lsrs r1, r0, #0x10
    lsls r0, r3, #0x08
    subs r0, r0, r3
    cmp r0, #0x00
    bge _08027F6A
    adds r0, #0xFF
    _08027F6A:
    lsls r0, r0, #0x08
    lsrs r3, r0, #0x10
    lsls r0, r2, #0x08
    subs r0, r0, r2
    cmp r0, #0x00
    bge _08027F78
    adds r0, #0xFF
    _08027F78:
    lsls r0, r0, #0x08
    lsrs r2, r0, #0x10
    ands r1, r7
    ands r3, r7
    lsls r0, r3, #0x05
    orrs r1, r0
    ands r2, r7
    lsls r0, r2, #0x0A
    orrs r1, r0
    strh r1, [r5, #0x00]
    adds r6, #0x01
    cmp r6, #0x0F
    ble _08027F36
    _08027F92:
    adds r4, #0x01
    cmp r4, #0x0F
    ble _08027F26
    movs r0, #0x01
    bl pltt_getBuffer
    mov r9, r0
    movs r4, #0x00
    _08027FA2:
    adds r1, r4, #0x1
    mov r8, r1
    cmp r4, #0x05
    beq _08028024
    cmp r4, #0x06
    beq _08028024
    cmp r4, #0x07
    beq _08028024
    cmp r4, #0x0C
    beq _08028024
    cmp r4, #0x0D
    beq _08028024
    cmp r4, #0x0E
    beq _08028024
    cmp r4, #0x0F
    beq _08028024
    movs r6, #0x00
    lsls r4, r4, #0x04
    mov r12, r4
    movs r7, #0x1F
    movs r5, #0x1F
    _08027FCC:
    mov r2, r12
    adds r0, r2, r6
    lsls r0, r0, #0x01
    mov r1, r9
    adds r4, r0, r1
    ldrh r0, [r4, #0x00]
    adds r1, r0, #0x0
    ands r1, r5
    lsrs r3, r0, #0x05
    ands r3, r7
    lsrs r2, r0, #0x0A
    ands r2, r7
    lsls r0, r1, #0x08
    subs r0, r0, r1
    cmp r0, #0x00
    bge _08027FEE
    adds r0, #0xFF
    _08027FEE:
    lsls r0, r0, #0x08
    lsrs r1, r0, #0x10
    lsls r0, r3, #0x08
    subs r0, r0, r3
    cmp r0, #0x00
    bge _08027FFC
    adds r0, #0xFF
    _08027FFC:
    lsls r0, r0, #0x08
    lsrs r3, r0, #0x10
    lsls r0, r2, #0x08
    subs r0, r0, r2
    cmp r0, #0x00
    bge _0802800A
    adds r0, #0xFF
    _0802800A:
    lsls r0, r0, #0x08
    lsrs r2, r0, #0x10
    ands r1, r5
    ands r3, r5
    lsls r0, r3, #0x05
    orrs r1, r0
    ands r2, r5
    lsls r0, r2, #0x0A
    orrs r1, r0
    strh r1, [r4, #0x00]
    adds r6, #0x01
    cmp r6, #0x0F
    ble _08027FCC
    _08028024:
    mov r4, r8
    cmp r4, #0x0F
    ble _08027FA2
    movs r0, #0x01
    bl pltt_setDirtyFlag
    _08028030:
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    _0802803C: .4byte 0x0203EBCC
    _08028040: .4byte 0x00000624
    thumb_func_start sub_8028044
    sub_8028044:
    push {r4, r5, r6, r7, lr}
    add sp, #-0x01C
    adds r5, r0, #0x0
    adds r6, r1, #0x0
    adds r7, r2, #0x0
    ldr r4, _08028080 @ =0x03002E20
    adds r4, #0x24
    add r3, sp, #0x008
    add r0, sp, #0x00C
    str r0, [sp, #0x000]
    adds r0, r4, #0x0
    movs r1, #0x05
    add r2, sp, #0x004
    bl sub_8032AA0
    add r2, sp, #0x010
    add r3, sp, #0x014
    add r0, sp, #0x018
    str r0, [sp, #0x000]
    adds r0, r4, #0x0
    movs r1, #0x06
    bl sub_8032AA0
    cmp r5, #0x01
    beq _080280AA
    cmp r5, #0x01
    bgt _08028084
    cmp r5, #0x00
    beq _0802808E
    b _080280E6
    _08028080: .4byte 0x03002E20
    _08028084:
    cmp r5, #0x02
    beq _080280BC
    cmp r5, #0x03
    beq _080280CE
    b _080280E6
    _0802808E:
    ldr r0, [sp, #0x004]
    ldr r1, [sp, #0x010]
    adds r0, r0, r1
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r0, r0, #0x01
    str r0, [r6, #0x00]
    ldr r0, [sp, #0x008]
    ldr r1, [sp, #0x014]
    adds r0, r0, r1
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r0, r0, #0x01
    b _080280E4
    _080280AA:
    ldr r0, [sp, #0x010]
    str r0, [r6, #0x00]
    ldr r0, [sp, #0x008]
    ldr r1, [sp, #0x014]
    adds r0, r0, r1
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r0, r0, #0x01
    b _080280E4
    _080280BC:
    ldr r0, [sp, #0x004]
    str r0, [r6, #0x00]
    ldr r0, [sp, #0x008]
    ldr r1, [sp, #0x014]
    adds r0, r0, r1
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r0, r0, #0x01
    b _080280E4
    _080280CE:
    ldr r0, [sp, #0x004]
    ldr r1, [sp, #0x010]
    adds r0, r0, r1
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r0, r0, #0x01
    str r0, [r6, #0x00]
    ldr r0, [sp, #0x014]
    movs r1, #0xC0
    lsls r1, r1, #0x0C
    adds r0, r0, r1
    _080280E4:
    str r0, [r7, #0x00]
    _080280E6:
    ldr r0, [r6, #0x00]
    ldr r1, _080280F8 @ =0xFFF78000
    adds r0, r0, r1
    str r0, [r6, #0x00]
    add sp, #0x01C
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _080280F8: .4byte 0xFFF78000
    thumb_func_start sub_80280FC
    sub_80280FC:
    push {r4, r5, lr}
    add sp, #-0x008
    ldr r5, [r0, #0x68]
    ldr r0, _08028128 @ =0x03002E20
    adds r0, #0x24
    lsls r1, r5, #0x18
    lsrs r1, r1, #0x18
    bl sub_804AED4
    adds r4, r0, #0x0
    add r2, sp, #0x004
    adds r0, r5, #0x0
    mov r1, sp
    bl sub_8028044
    cmp r5, #0x00
    blt _08028160
    cmp r5, #0x02
    ble _0802812C
    cmp r5, #0x03
    beq _08028148
    b _08028160
    _08028128: .4byte 0x03002E20
    _0802812C:
    ldr r0, [sp, #0x000]
    str r0, [r4, #0x00]
    lsls r1, r5, #0x13
    movs r0, #0xFF
    lsls r0, r0, #0x10
    adds r1, r1, r0
    ldr r0, [sp, #0x004]
    subs r0, r0, r1
    str r0, [r4, #0x04]
    adds r1, r4, #0x0
    adds r1, #0x56
    movs r0, #0x80
    lsls r0, r0, #0x08
    b _0802815E
    _08028148:
    ldr r0, [sp, #0x000]
    movs r1, #0xF0
    lsls r1, r1, #0x0D
    adds r0, r0, r1
    str r0, [r4, #0x00]
    ldr r0, [sp, #0x004]
    str r0, [r4, #0x04]
    adds r1, r4, #0x0
    adds r1, #0x56
    movs r0, #0xC0
    lsls r0, r0, #0x08
    _0802815E:
    strh r0, [r1, #0x00]
    _08028160:
    ldrh r1, [r4, #0x34]
    movs r0, #0x01
    orrs r0, r1
    strh r0, [r4, #0x34]
    add sp, #0x008
    pop {r4, r5}
    pop {r0}
    bx r0
    thumb_func_start sub_8028170
    sub_8028170:
    push {r4, r5, r6, r7, lr}
    add sp, #-0x008
    ldr r4, [r0, #0x68]
    ldr r0, _080281D4 @ =0x03002E20
    adds r0, #0x24
    lsls r1, r4, #0x18
    lsrs r1, r1, #0x18
    bl sub_804AED4
    adds r5, r0, #0x0
    movs r7, #0x01
    movs r6, #0x80
    lsls r6, r6, #0x07
    cmp r4, #0x02
    bgt _08028192
    movs r6, #0x80
    lsls r6, r6, #0x08
    _08028192:
    add r2, sp, #0x004
    adds r0, r4, #0x0
    mov r1, sp
    bl sub_8028044
    ldr r1, [r5, #0x00]
    ldr r0, [sp, #0x000]
    cmp r0, r1
    beq _080281B2
    subs r0, r0, r1
    subs r2, r1, r6
    cmp r0, #0x00
    ble _080281AE
    adds r2, r1, r6
    _080281AE:
    str r2, [r5, #0x00]
    movs r7, #0x00
    _080281B2:
    ldr r1, [r5, #0x04]
    ldr r0, [sp, #0x004]
    cmp r0, r1
    beq _080281C8
    subs r0, r0, r1
    subs r2, r1, r6
    cmp r0, #0x00
    ble _080281C4
    adds r2, r1, r6
    _080281C4:
    str r2, [r5, #0x04]
    movs r7, #0x00
    _080281C8:
    adds r0, r7, #0x0
    add sp, #0x008
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    _080281D4: .4byte 0x03002E20
    thumb_func_start sub_80281D8
    sub_80281D8:
    push {r4, r5, r6, r7, lr}
    movs r0, #0x01
    bl pltt_getBuffer
    movs r1, #0x1F
    mov r12, r1
    movs r5, #0x1F
    movs r7, #0xBE
    movs r2, #0xB0
    lsls r2, r2, #0x01
    adds r4, r0, r2
    movs r6, #0x0F
    _080281F0:
    ldrh r0, [r4, #0x00]
    adds r1, r0, #0x0
    ands r1, r5
    lsrs r3, r0, #0x05
    mov r2, r12
    ands r3, r2
    lsrs r2, r0, #0x0A
    mov r0, r12
    ands r2, r0
    adds r0, r1, #0x0
    muls r0, r7
    lsrs r1, r0, #0x08
    adds r0, r3, #0x0
    muls r0, r7
    lsls r0, r0, #0x08
    lsrs r3, r0, #0x10
    adds r0, r2, #0x0
    muls r0, r7
    lsls r0, r0, #0x08
    lsrs r2, r0, #0x10
    ands r1, r5
    ands r3, r5
    lsls r0, r3, #0x05
    orrs r1, r0
    ands r2, r5
    lsls r0, r2, #0x0A
    orrs r1, r0
    strh r1, [r4, #0x00]
    adds r4, #0x02
    subs r6, #0x01
    cmp r6, #0x00
    bge _080281F0
    movs r0, #0x01
    bl pltt_setDirtyFlag
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    thumb_func_start sub_802823C
    sub_802823C:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    add sp, #-0x010
    adds r7, r0, #0x0
    ldr r4, [r7, #0x68]
    ldr r0, _08028274 @ =0x03002E20
    adds r0, #0x24
    movs r1, #0x03
    bl sub_804AED4
    adds r6, r0, #0x0
    adds r4, #0x01
    cmp r4, #0x40
    bgt _08028278
    movs r0, #0x09
    str r0, [sp, #0x000]
    movs r0, #0x00
    movs r1, #0x80
    adds r2, r4, #0x0
    movs r3, #0x40
    bl sub_800E930
    adds r5, r0, #0x0
    movs r0, #0x00
    b _0802827C
    .byte 0x00, 0x00
    _08028274: .4byte 0x03002E20
    _08028278:
    movs r5, #0x80
    movs r0, #0x01
    _0802827C:
    mov r9, r0
    str r4, [r7, #0x68]
    ldr r4, _080282E8 @ =0x03002E20
    ldr r0, _080282EC @ =0x00000848
    adds r4, r4, r0
    adds r0, r6, #0x0
    bl sub_803CA78
    adds r2, r0, #0x0
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    adds r0, r6, #0x0
    adds r1, r4, #0x0
    bl sub_803CD50
    mov r8, r0
    movs r0, #0x24
    ldsh r1, [r6, r0]
    str r1, [sp, #0x008]
    movs r0, #0x01
    str r0, [sp, #0x00C]
    subs r7, r1, r5
    lsls r0, r5, #0x01
    adds r5, r1, r0
    adds r4, r6, #0x0
    adds r4, #0x20
    adds r0, r4, #0x0
    bl sub_802FF58
    cmp r0, #0x00
    beq _080282CE
    movs r0, #0x00
    str r0, [sp, #0x000]
    add r0, sp, #0x008
    str r0, [sp, #0x004]
    mov r0, r8
    adds r1, r4, #0x0
    adds r2, r7, #0x0
    adds r3, r5, #0x0
    bl oam_renderCellData
    _080282CE:
    ldrh r1, [r6, #0x34]
    ldr r0, _080282F0 @ =0x0000FFFE
    ands r0, r1
    strh r0, [r6, #0x34]
    mov r0, r9
    add sp, #0x010
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    _080282E8: .4byte 0x03002E20
    _080282EC: .4byte 0x00000848
    _080282F0: .4byte 0x0000FFFE
    thumb_func_start sub_80282F4
    sub_80282F4:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    add sp, #-0x01C
    ldr r5, [r0, #0x68]
    ldr r0, _080283DC @ =0x0203EBCC
    ldr r1, [r0, #0x00]
    lsls r0, r5, #0x04
    movs r2, #0x86
    lsls r2, r2, #0x02
    adds r0, r0, r2
    adds r1, r1, r0
    mov r8, r1
    ldr r4, _080283E0 @ =0x03002E20
    adds r4, #0x24
    lsls r1, r5, #0x18
    lsrs r1, r1, #0x18
    adds r0, r4, #0x0
    bl sub_804AED4
    adds r7, r0, #0x0
    add r3, sp, #0x008
    add r0, sp, #0x00C
    str r0, [sp, #0x000]
    adds r0, r4, #0x0
    movs r1, #0x06
    add r2, sp, #0x004
    bl sub_8032AA0
    add r2, sp, #0x010
    add r3, sp, #0x014
    add r0, sp, #0x018
    str r0, [sp, #0x000]
    adds r0, r4, #0x0
    movs r1, #0x07
    bl sub_8032AA0
    ldr r3, [sp, #0x004]
    ldr r0, [sp, #0x010]
    adds r3, r3, r0
    lsrs r0, r3, #0x1F
    adds r3, r3, r0
    asrs r3, r3, #0x01
    ldr r2, [sp, #0x008]
    ldr r0, [sp, #0x014]
    adds r2, r2, r0
    lsrs r0, r2, #0x1F
    adds r2, r2, r0
    asrs r2, r2, #0x01
    str r2, [sp, #0x008]
    ldr r0, _080283E4 @ =0xFFF78000
    adds r3, r3, r0
    str r3, [sp, #0x004]
    ldr r6, [r7, #0x00]
    ldr r4, _080283E8 @ =0x080DC22C
    lsls r1, r5, #0x01
    adds r1, r1, r5
    lsls r0, r1, #0x02
    adds r0, r0, r4
    ldr r0, [r0, #0x00]
    adds r3, r3, r0
    ldr r5, [r7, #0x04]
    adds r0, r1, #0x1
    lsls r0, r0, #0x02
    adds r0, r0, r4
    ldr r0, [r0, #0x00]
    adds r2, r2, r0
    subs r5, r2, r5
    ldr r2, [r7, #0x08]
    adds r1, #0x02
    lsls r1, r1, #0x02
    adds r1, r1, r4
    ldr r0, [r1, #0x00]
    subs r1, r0, r2
    subs r0, r3, r6
    cmp r0, #0x00
    bge _08028390
    adds r0, #0x1F
    _08028390:
    asrs r0, r0, #0x05
    mov r2, r8
    str r0, [r2, #0x00]
    adds r0, r5, #0x0
    cmp r0, #0x00
    bge _0802839E
    adds r0, #0x1F
    _0802839E:
    asrs r0, r0, #0x05
    mov r2, r8
    str r0, [r2, #0x04]
    movs r0, #0x80
    lsls r0, r0, #0x06
    lsls r0, r0, #0x0A
    lsls r1, r1, #0x01
    adds r0, r1, r0
    cmp r0, #0x00
    bge _080283B6
    ldr r2, _080283EC @ =0x0080003F
    adds r0, r1, r2
    _080283B6:
    asrs r0, r0, #0x06
    mov r1, r8
    str r0, [r1, #0x08]
    movs r0, #0x00
    str r0, [r1, #0x0C]
    movs r0, #0x9C
    bl m4aSongNumStart
    ldr r0, [r7, #0x48]
    movs r1, #0x40
    orrs r0, r1
    str r0, [r7, #0x48]
    add sp, #0x01C
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _080283DC: .4byte 0x0203EBCC
    _080283E0: .4byte 0x03002E20
    _080283E4: .4byte 0xFFF78000
    _080283E8: .4byte 0x080DC22C
    _080283EC: .4byte 0x0080003F
    thumb_func_start sub_80283F0
    sub_80283F0:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    add sp, #-0x01C
    ldr r6, [r0, #0x68]
    ldr r0, _08028458 @ =0x0203EBCC
    ldr r7, [r0, #0x00]
    lsls r0, r6, #0x04
    movs r1, #0x86
    lsls r1, r1, #0x02
    adds r0, r0, r1
    adds r4, r7, r0
    ldr r0, _0802845C @ =0x03002E20
    adds r0, #0x24
    mov r8, r0
    lsls r1, r6, #0x18
    lsrs r1, r1, #0x18
    bl sub_804AED4
    adds r5, r0, #0x0
    ldr r0, [r4, #0x0C]
    cmp r0, #0x16
    ble _08028428
    movs r0, #0x84
    lsls r0, r0, #0x02
    adds r1, r7, r0
    movs r0, #0x01
    str r0, [r1, #0x00]
    _08028428:
    ldr r0, [r4, #0x0C]
    adds r0, #0x01
    str r0, [r4, #0x0C]
    cmp r0, #0x20
    bgt _08028464
    ldr r0, [r5, #0x00]
    ldr r1, [r4, #0x00]
    adds r0, r0, r1
    str r0, [r5, #0x00]
    ldr r0, [r5, #0x04]
    ldr r1, [r4, #0x04]
    adds r0, r0, r1
    str r0, [r5, #0x04]
    ldr r0, [r5, #0x08]
    ldr r1, [r4, #0x08]
    adds r0, r0, r1
    str r0, [r5, #0x08]
    ldr r0, [r4, #0x08]
    ldr r1, _08028460 @ =0xFFFFE000
    adds r0, r0, r1
    str r0, [r4, #0x08]
    movs r4, #0x00
    b _080284CE
    .byte 0x00, 0x00
    _08028458: .4byte 0x0203EBCC
    _0802845C: .4byte 0x03002E20
    _08028460: .4byte 0xFFFFE000
    _08028464:
    add r3, sp, #0x008
    add r0, sp, #0x00C
    str r0, [sp, #0x000]
    mov r0, r8
    movs r1, #0x06
    add r2, sp, #0x004
    bl sub_8032AA0
    add r2, sp, #0x010
    add r3, sp, #0x014
    add r0, sp, #0x018
    str r0, [sp, #0x000]
    mov r0, r8
    movs r1, #0x07
    bl sub_8032AA0
    ldr r3, [sp, #0x004]
    ldr r0, [sp, #0x010]
    adds r3, r3, r0
    lsrs r0, r3, #0x1F
    adds r3, r3, r0
    asrs r3, r3, #0x01
    ldr r0, [sp, #0x008]
    ldr r1, [sp, #0x014]
    adds r0, r0, r1
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r0, r0, #0x01
    str r0, [sp, #0x008]
    ldr r0, _080284E4 @ =0xFFF78000
    adds r3, r3, r0
    str r3, [sp, #0x004]
    ldr r4, _080284E8 @ =0x080DC22C
    lsls r2, r6, #0x01
    adds r2, r2, r6
    lsls r0, r2, #0x02
    adds r0, r0, r4
    ldr r0, [r0, #0x00]
    adds r3, r3, r0
    str r3, [r5, #0x00]
    adds r0, r2, #0x1
    lsls r0, r0, #0x02
    adds r0, r0, r4
    ldr r1, [sp, #0x008]
    ldr r0, [r0, #0x00]
    adds r1, r1, r0
    str r1, [r5, #0x04]
    adds r2, #0x02
    lsls r2, r2, #0x02
    adds r2, r2, r4
    ldr r0, [r2, #0x00]
    str r0, [r5, #0x08]
    movs r4, #0x01
    _080284CE:
    adds r0, r5, #0x0
    movs r1, #0x01
    bl sub_803D214
    cmp r6, #0x01
    beq _08028500
    cmp r6, #0x01
    bgt _080284EC
    cmp r6, #0x00
    beq _080284F2
    b _08028514
    _080284E4: .4byte 0xFFF78000
    _080284E8: .4byte 0x080DC22C
    _080284EC:
    cmp r6, #0x02
    beq _0802850A
    b _08028514
    _080284F2:
    adds r1, r5, #0x0
    adds r1, #0x88
    ldr r0, _080284FC @ =0x0000FFFF
    b _08028512
    .byte 0x00, 0x00
    _080284FC: .4byte 0x0000FFFF
    _08028500:
    adds r1, r5, #0x0
    adds r1, #0x56
    movs r0, #0x88
    lsls r0, r0, #0x08
    b _08028512
    _0802850A:
    adds r1, r5, #0x0
    adds r1, #0x56
    movs r0, #0xF0
    lsls r0, r0, #0x07
    _08028512:
    strh r0, [r1, #0x00]
    _08028514:
    adds r0, r4, #0x0
    add sp, #0x01C
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_8028524
    sub_8028524:
    push {r4, r5, r6, lr}
    add sp, #-0x01C
    ldr r6, [r0, #0x68]
    ldr r4, _080285B8 @ =0x03002E20
    adds r4, #0x24
    lsls r1, r6, #0x18
    lsrs r1, r1, #0x18
    adds r0, r4, #0x0
    bl sub_804AED4
    adds r5, r0, #0x0
    ldr r0, [r5, #0x48]
    movs r1, #0x40
    orrs r0, r1
    str r0, [r5, #0x48]
    add r3, sp, #0x008
    add r0, sp, #0x00C
    str r0, [sp, #0x000]
    adds r0, r4, #0x0
    movs r1, #0x06
    add r2, sp, #0x004
    bl sub_8032AA0
    add r2, sp, #0x010
    add r3, sp, #0x014
    add r0, sp, #0x018
    str r0, [sp, #0x000]
    adds r0, r4, #0x0
    movs r1, #0x07
    bl sub_8032AA0
    ldr r3, [sp, #0x004]
    ldr r0, [sp, #0x010]
    adds r3, r3, r0
    lsrs r0, r3, #0x1F
    adds r3, r3, r0
    asrs r3, r3, #0x01
    ldr r0, [sp, #0x008]
    ldr r1, [sp, #0x014]
    adds r0, r0, r1
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r0, r0, #0x01
    str r0, [sp, #0x008]
    ldr r0, _080285BC @ =0xFFF78000
    adds r3, r3, r0
    str r3, [sp, #0x004]
    ldr r4, _080285C0 @ =0x080DC22C
    lsls r2, r6, #0x01
    adds r2, r2, r6
    lsls r0, r2, #0x02
    adds r0, r0, r4
    ldr r0, [r0, #0x00]
    adds r3, r3, r0
    str r3, [r5, #0x00]
    adds r0, r2, #0x1
    lsls r0, r0, #0x02
    adds r0, r0, r4
    ldr r1, [sp, #0x008]
    ldr r0, [r0, #0x00]
    adds r1, r1, r0
    str r1, [r5, #0x04]
    adds r2, #0x02
    lsls r2, r2, #0x02
    adds r2, r2, r4
    ldr r0, [r2, #0x00]
    str r0, [r5, #0x08]
    cmp r6, #0x01
    beq _080285D8
    cmp r6, #0x01
    bgt _080285C4
    cmp r6, #0x00
    beq _080285CA
    b _080285EC
    _080285B8: .4byte 0x03002E20
    _080285BC: .4byte 0xFFF78000
    _080285C0: .4byte 0x080DC22C
    _080285C4:
    cmp r6, #0x02
    beq _080285E2
    b _080285EC
    _080285CA:
    adds r1, r5, #0x0
    adds r1, #0x88
    ldr r0, _080285D4 @ =0x0000FFFF
    b _080285EA
    .byte 0x00, 0x00
    _080285D4: .4byte 0x0000FFFF
    _080285D8:
    adds r1, r5, #0x0
    adds r1, #0x56
    movs r0, #0x88
    lsls r0, r0, #0x08
    b _080285EA
    _080285E2:
    adds r1, r5, #0x0
    adds r1, #0x56
    movs r0, #0xF0
    lsls r0, r0, #0x07
    _080285EA:
    strh r0, [r1, #0x00]
    _080285EC:
    add sp, #0x01C
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    thumb_func_start sub_80285F4
    sub_80285F4:
    push {r4, r5, r6, r7, lr}
    add sp, #-0x028
    adds r5, r0, #0x0
    movs r1, #0x12
    ldr r2, _0802868C @ =0x00000BE4
    adds r0, r5, r2
    str r1, [r0, #0x00]
    ldr r0, _08028690 @ =0x00000824
    adds r4, r5, r0
    add r3, sp, #0x008
    add r0, sp, #0x00C
    str r0, [sp, #0x000]
    adds r0, r5, #0x0
    movs r1, #0x06
    add r2, sp, #0x004
    bl sub_8032AA0
    add r2, sp, #0x010
    add r3, sp, #0x014
    add r0, sp, #0x018
    str r0, [sp, #0x000]
    adds r0, r5, #0x0
    movs r1, #0x07
    bl sub_8032AA0
    ldr r1, [sp, #0x004]
    ldr r0, [sp, #0x010]
    adds r1, r1, r0
    lsrs r0, r1, #0x1F
    adds r1, r1, r0
    asrs r1, r1, #0x01
    ldr r2, [sp, #0x008]
    ldr r0, [sp, #0x014]
    adds r2, r2, r0
    lsrs r0, r2, #0x1F
    adds r2, r2, r0
    asrs r2, r2, #0x01
    str r2, [sp, #0x008]
    ldr r0, _08028694 @ =0xFFF78000
    adds r1, r1, r0
    str r1, [sp, #0x004]
    adds r0, r4, #0x0
    bl cam_SetPos
    adds r0, r4, #0x0
    movs r1, #0x00
    bl cam_SetYaw
    adds r0, r5, #0x0
    bl loadtrack_loadObjects
    ldr r0, _08028698 @ =0x0203EBB8
    ldr r0, [r0, #0x00]
    cmp r0, #0x02
    bgt _080286A4
    ldr r2, _0802869C @ =0x000007F1
    adds r1, r5, r2
    movs r0, #0x03
    strb r0, [r1, #0x00]
    movs r4, #0x00
    ldr r6, _080286A0 @ =0x0203EBC0
    _0802866E:
    ldr r1, [r6, #0x00]
    movs r2, #0x00
    ldr r0, _08028698 @ =0x0203EBB8
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _0802867C
    movs r2, #0x01
    _0802867C:
    adds r0, r5, #0x0
    bl sub_804AE58
    adds r6, #0x04
    adds r4, #0x01
    cmp r4, #0x02
    ble _0802866E
    b _080286CC
    _0802868C: .4byte 0x00000BE4
    _08028690: .4byte 0x00000824
    _08028694: .4byte 0xFFF78000
    _08028698: .4byte 0x0203EBB8
    _0802869C: .4byte 0x000007F1
    _080286A0: .4byte 0x0203EBC0
    _080286A4:
    ldr r0, _080286D0 @ =0x000007F1
    adds r1, r5, r0
    movs r0, #0x04
    strb r0, [r1, #0x00]
    ldr r6, _080286D4 @ =0x0203EBC0
    movs r4, #0x02
    _080286B0:
    ldm r6!, {r1}
    adds r0, r5, #0x0
    movs r2, #0x00
    bl sub_804AE58
    subs r4, #0x01
    cmp r4, #0x00
    bge _080286B0
    ldr r0, _080286D8 @ =0x0203EBBC
    ldr r1, [r0, #0x00]
    adds r0, r5, #0x0
    movs r2, #0x01
    bl sub_804AE58
    _080286CC:
    movs r4, #0x00
    b _080286FE
    _080286D0: .4byte 0x000007F1
    _080286D4: .4byte 0x0203EBC0
    _080286D8: .4byte 0x0203EBBC
    _080286DC:
    lsls r1, r4, #0x02
    ldr r2, _08028714 @ =0x000007F4
    adds r0, r5, r2
    adds r0, r0, r1
    ldr r2, [r0, #0x00]
    lsls r0, r4, #0x01
    adds r1, r2, #0x0
    adds r1, #0xBA
    strh r0, [r1, #0x00]
    ldrh r1, [r1, #0x00]
    lsrs r1, r1, #0x01
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    adds r0, r5, #0x0
    bl sub_804AEE8
    adds r4, #0x01
    _080286FE:
    ldr r1, _08028718 @ =0x000007F1
    adds r0, r5, r1
    ldrb r0, [r0, #0x00]
    cmp r4, r0
    blt _080286DC
    adds r7, r5, #0x0
    movs r6, #0x00
    movs r2, #0xFE
    lsls r2, r2, #0x03
    adds r0, r5, r2
    b _08028764
    _08028714: .4byte 0x000007F4
    _08028718: .4byte 0x000007F1
    _0802871C:
    lsls r1, r6, #0x18
    lsrs r1, r1, #0x18
    adds r0, r5, #0x0
    bl sub_804AED4
    adds r4, r0, #0x0
    adds r0, #0xBA
    ldrh r1, [r0, #0x00]
    lsrs r1, r1, #0x01
    add r0, sp, #0x024
    str r0, [sp, #0x000]
    adds r0, r7, #0x0
    add r2, sp, #0x01C
    add r3, sp, #0x020
    bl sub_8032AA0
    ldr r1, [sp, #0x01C]
    ldr r2, [sp, #0x020]
    ldr r0, [sp, #0x024]
    str r0, [sp, #0x000]
    adds r0, r4, #0x0
    movs r3, #0x00
    bl sub_803D718
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl sub_803BF34
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    orrs r0, r1
    str r0, [r4, #0x48]
    adds r6, #0x01
    movs r1, #0xFE
    lsls r1, r1, #0x03
    adds r0, r5, r1
    _08028764:
    ldrb r0, [r0, #0x00]
    cmp r6, r0
    blt _0802871C
    movs r4, #0x00
    movs r2, #0xFE
    lsls r2, r2, #0x03
    adds r0, r5, r2
    ldrb r0, [r0, #0x00]
    cmp r4, r0
    bge _0802879A
    ldr r0, _080287A4 @ =0x0000FFFE
    adds r6, r0, #0x0
    _0802877C:
    lsls r1, r4, #0x18
    lsrs r1, r1, #0x18
    adds r0, r5, #0x0
    bl sub_804AED4
    ldrh r1, [r0, #0x34]
    ands r1, r6
    strh r1, [r0, #0x34]
    adds r4, #0x01
    movs r1, #0xFE
    lsls r1, r1, #0x03
    adds r0, r5, r1
    ldrb r0, [r0, #0x00]
    cmp r4, r0
    blt _0802877C
    _0802879A:
    add sp, #0x028
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _080287A4: .4byte 0x0000FFFE
    thumb_func_start sub_80287A8
    sub_80287A8:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x004
    bl m4aMPlayAllStop
    bl main_frameProc
    bl m4aSoundVSyncOff
    movs r0, #0x00
    mov r10, r0
    movs r0, #0x01
    movs r1, #0x02
    negs r1, r1
    bl irq_updateMask
    mov r1, r10
    ldr r2, _08028A0C @ =0x03002E20
    str r1, [r2, #0x0C]
    movs r0, #0x02
    ldr r1, _08028A10 @ =0x00010001
    bl irq_updateMask
    mov r1, r10
    movs r0, #0x80
    lsls r0, r0, #0x13
    strh r1, [r0, #0x00]
    ldrh r0, [r0, #0x00]
    movs r2, #0xC0
    lsls r2, r2, #0x07
    adds r1, r2, #0x0
    orrs r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x13
    strh r0, [r1, #0x00]
    ldr r0, _08028A14 @ =0x04000040
    ldr r2, _08028A18 @ =0x0000FFFF
    adds r1, r2, #0x0
    strh r1, [r0, #0x00]
    adds r0, #0x04
    strh r1, [r0, #0x00]
    adds r0, #0x04
    mov r1, r10
    strh r1, [r0, #0x00]
    ldr r1, _08028A1C @ =0x0400004A
    movs r0, #0x20
    strh r0, [r1, #0x00]
    mov r2, r10
    ldr r0, _08028A0C @ =0x03002E20
    str r2, [r0, #0x10]
    bl oam_init
    mov r0, sp
    mov r1, r10
    strh r1, [r0, #0x00]
    ldr r2, _08028A20 @ =0x040000D4
    mov r9, r2
    str r0, [r2, #0x00]
    movs r0, #0xC0
    lsls r0, r0, #0x13
    str r0, [r2, #0x04]
    ldr r0, _08028A24 @ =0x8100C000
    str r0, [r2, #0x08]
    ldr r0, [r2, #0x08]
    bl pltt_clearBuffer
    ldr r1, _08028A28 @ =0x06003800
    movs r0, #0x00
    bl map_setBufferDestination
    ldr r1, _08028A2C @ =0x06003000
    movs r0, #0x01
    bl map_setBufferDestination
    ldr r0, _08028A30 @ =0x080DC430
    movs r1, #0x18
    bl main_configureIoRegs
    ldr r7, _08028A34 @ =0x04000008
    ldrb r1, [r7, #0x00]
    movs r2, #0x7F
    mov r8, r2
    mov r0, r8
    ands r0, r1
    strb r0, [r7, #0x00]
    ldrb r1, [r7, #0x01]
    movs r6, #0x3F
    adds r0, r6, #0x0
    ands r0, r1
    strb r0, [r7, #0x01]
    ldrb r1, [r7, #0x00]
    movs r5, #0x04
    negs r5, r5
    adds r0, r5, #0x0
    ands r0, r1
    strb r0, [r7, #0x00]
    ldrb r1, [r7, #0x00]
    movs r4, #0x41
    negs r4, r4
    adds r0, r4, #0x0
    ands r0, r1
    strb r0, [r7, #0x00]
    ldrb r1, [r7, #0x00]
    subs r2, #0x8C
    adds r0, r2, #0x0
    ands r0, r1
    strb r0, [r7, #0x00]
    ldrb r1, [r7, #0x01]
    movs r3, #0x20
    negs r3, r3
    adds r0, r3, #0x0
    ands r0, r1
    movs r1, #0x07
    orrs r0, r1
    strb r0, [r7, #0x01]
    adds r7, #0x02
    ldrb r0, [r7, #0x00]
    mov r1, r8
    ands r1, r0
    strb r1, [r7, #0x00]
    ldrb r0, [r7, #0x01]
    ands r6, r0
    strb r6, [r7, #0x01]
    ldrb r0, [r7, #0x00]
    ands r5, r0
    strb r5, [r7, #0x00]
    ldrb r0, [r7, #0x00]
    ands r4, r0
    strb r4, [r7, #0x00]
    ldrb r0, [r7, #0x00]
    ands r2, r0
    movs r0, #0x04
    orrs r2, r0
    strb r2, [r7, #0x00]
    ldrb r0, [r7, #0x01]
    ands r3, r0
    movs r0, #0x0F
    orrs r3, r0
    strb r3, [r7, #0x01]
    ldr r2, _08028A38 @ =0x00007741
    adds r0, r2, #0x0
    movs r1, #0x80
    lsls r1, r1, #0x13
    strh r0, [r1, #0x00]
    ldr r0, _08028A3C @ =0x03002E44
    bl sub_8049654
    ldr r0, _08028A3C @ =0x03002E44
    bl sub_80285F4
    ldr r0, _08028A3C @ =0x03002E44
    bl sub_804AE08
    movs r0, #0x00
    bl pltt_getBuffer
    mov r2, r10
    strh r2, [r0, #0x00]
    movs r0, #0x01
    bl pltt_setDirtyFlag
    ldr r0, _08028A40 @ =0x08030661
    ldr r1, _08028A44 @ =0x03004F70
    str r0, [r1, #0x04]
    ldr r0, _08028A48 @ =0x0803068D
    str r0, [r1, #0x00]
    ldr r0, _08028A4C @ =0x080306D9
    str r0, [r1, #0x08]
    movs r0, #0x01
    strb r0, [r1, #0x0E]
    bl trns_start
    ldr r1, _08028A0C @ =0x03002E20
    ldr r2, _08028A50 @ =0x00000C7C
    adds r0, r1, r2
    mov r1, r10
    str r1, [r0, #0x00]
    ldr r0, _08028A54 @ =0x080BF788
    ldr r1, _08028A58 @ =0x06012000
    bl LZ77UnCompVram
    ldr r0, _08028A5C @ =0x080BF7EC
    ldr r1, _08028A60 @ =0x06012800
    bl LZ77UnCompVram
    ldr r0, _08028A64 @ =0x080BFFA8
    ldr r1, _08028A68 @ =0x06016000
    bl LZ77UnCompVram
    ldr r0, _08028A6C @ =0x080C0910
    ldr r1, _08028A70 @ =0x06010000
    bl LZ77UnCompVram
    ldr r4, _08028A74 @ =0x0203EC30
    ldrb r0, [r4, #0x00]
    bl track_getCup
    lsls r0, r0, #0x18
    ldr r1, _08028A78 @ =0x080DC4F0
    lsrs r0, r0, #0x16
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    ldr r1, _08028A7C @ =0x06012600
    bl LZ77UnCompVram
    ldr r0, _08028A80 @ =0x08062834
    mov r2, r9
    str r0, [r2, #0x00]
    movs r0, #0xC0
    lsls r0, r0, #0x13
    str r0, [r2, #0x04]
    ldr r0, _08028A84 @ =0x80001000
    str r0, [r2, #0x08]
    ldr r0, [r2, #0x08]
    ldr r0, _08028A88 @ =0x080C19C4
    movs r1, #0xC0
    lsls r1, r1, #0x13
    bl LZ77UnCompVram
    ldr r0, _08028A8C @ =0x080C1A10
    ldr r1, _08028A90 @ =0x060002A0
    bl LZ77UnCompVram
    ldr r0, _08028A94 @ =0x080C1A38
    ldr r1, _08028A98 @ =0x06000700
    bl LZ77UnCompVram
    ldr r0, _08028A9C @ =0x080C1AD8
    ldr r1, _08028AA0 @ =0x06000B00
    bl LZ77UnCompVram
    ldr r0, _08028AA4 @ =0x080C1B44
    ldr r1, _08028AA8 @ =0x06000F00
    bl LZ77UnCompVram
    ldr r0, _08028AAC @ =0x080C1BCC
    ldr r1, _08028AB0 @ =0x06001300
    bl LZ77UnCompVram
    ldr r0, _08028AB4 @ =0x080C1C50
    ldr r1, _08028AB8 @ =0x06001E40
    bl LZ77UnCompVram
    ldr r0, _08028ABC @ =0x080ABEFC
    mov r1, r9
    str r0, [r1, #0x00]
    ldr r0, _08028AC0 @ =0x06002000
    str r0, [r1, #0x04]
    ldr r0, _08028AC4 @ =0x80000400
    str r0, [r1, #0x08]
    ldr r0, [r1, #0x08]
    ldr r0, _08028AC8 @ =0x080C2E60
    ldr r1, _08028ACC @ =0x06002180
    bl LZ77UnCompVram
    ldr r0, _08028AD0 @ =0x080C2858
    ldr r1, _08028AD4 @ =0x06000160
    bl LZ77UnCompVram
    ldr r0, _08028AD8 @ =0x0203EBCC
    ldr r0, [r0, #0x00]
    ldr r1, _08028ADC @ =0x080DC504
    movs r2, #0xC5
    lsls r2, r2, #0x03
    adds r0, r0, r2
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    ldr r1, _08028AE0 @ =0x060002E0
    bl LZ77UnCompVram
    ldrb r0, [r4, #0x00]
    bl track_getCup
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    ldrb r0, [r4, #0x00]
    bl track_isRetroTrack
    cmp r0, #0x00
    beq _080289E4
    b _08028AE8
    _080289E4:
    movs r4, #0x00
    lsls r5, r5, #0x02
    ldr r6, _08028AE4 @ =0x080E7FEC
    _080289EA:
    adds r0, r5, r4
    bl track_getMKSCTrack
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x30]
    adds r4, #0x01
    lsls r1, r4, #0x0A
    movs r2, #0xC0
    lsls r2, r2, #0x13
    adds r1, r1, r2
    bl LZ77UnCompVram
    cmp r4, #0x03
    ble _080289EA
    b _08028B0E
    _08028A0C: .4byte 0x03002E20
    _08028A10: .4byte 0x00010001
    _08028A14: .4byte 0x04000040
    _08028A18: .4byte 0x0000FFFF
    _08028A1C: .4byte 0x0400004A
    _08028A20: .4byte 0x040000D4
    _08028A24: .4byte 0x8100C000
    _08028A28: .4byte 0x06003800
    _08028A2C: .4byte 0x06003000
    _08028A30: .4byte 0x080DC430
    _08028A34: .4byte 0x04000008
    _08028A38: .4byte 0x00007741
    _08028A3C: .4byte 0x03002E44
    _08028A40: .4byte trns_initDefaultInTransition
    _08028A44: .4byte 0x03004F70
    _08028A48: .4byte trns_applyDefaultInTransition
    _08028A4C: .4byte trns_finishDefaultInTransition
    _08028A50: .4byte 0x00000C7C
    _08028A54: .4byte 0x080BF788
    _08028A58: .4byte 0x06012000
    _08028A5C: .4byte 0x080BF7EC
    _08028A60: .4byte 0x06012800
    _08028A64: .4byte 0x080BFFA8
    _08028A68: .4byte 0x06016000
    _08028A6C: .4byte 0x080C0910
    _08028A70: .4byte 0x06010000
    _08028A74: .4byte 0x0203EC30
    _08028A78: .4byte 0x080DC4F0
    _08028A7C: .4byte 0x06012600
    _08028A80: .4byte 0x08062834
    _08028A84: .4byte 0x80001000
    _08028A88: .4byte 0x080C19C4
    _08028A8C: .4byte 0x080C1A10
    _08028A90: .4byte 0x060002A0
    _08028A94: .4byte 0x080C1A38
    _08028A98: .4byte 0x06000700
    _08028A9C: .4byte 0x080C1AD8
    _08028AA0: .4byte 0x06000B00
    _08028AA4: .4byte 0x080C1B44
    _08028AA8: .4byte 0x06000F00
    _08028AAC: .4byte 0x080C1BCC
    _08028AB0: .4byte 0x06001300
    _08028AB4: .4byte 0x080C1C50
    _08028AB8: .4byte 0x06001E40
    _08028ABC: .4byte 0x080ABEFC
    _08028AC0: .4byte 0x06002000
    _08028AC4: .4byte 0x80000400
    _08028AC8: .4byte 0x080C2E60
    _08028ACC: .4byte 0x06002180
    _08028AD0: .4byte 0x080C2858
    _08028AD4: .4byte 0x06000160
    _08028AD8: .4byte 0x0203EBCC
    _08028ADC: .4byte 0x080DC504
    _08028AE0: .4byte 0x060002E0
    _08028AE4: .4byte 0x080E7FEC
    _08028AE8:
    movs r4, #0x00
    lsls r5, r5, #0x02
    ldr r6, _08028B74 @ =0x080E7FEC
    _08028AEE:
    adds r0, r5, r4
    bl track_getRetroTrack
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x30]
    adds r4, #0x01
    lsls r1, r4, #0x0A
    movs r2, #0xC0
    lsls r2, r2, #0x13
    adds r1, r1, r2
    bl LZ77UnCompVram
    cmp r4, #0x03
    ble _08028AEE
    _08028B0E:
    ldr r4, _08028B78 @ =0x080BF5A4
    movs r0, #0x01
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl LZ77UnCompWram
    ldr r4, _08028B7C @ =0x080C18FC
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r0, #0x90
    lsls r0, r0, #0x01
    adds r1, r1, r0
    adds r0, r4, #0x0
    bl LZ77UnCompWram
    movs r0, #0x01
    bl pltt_setDirtyFlag
    bl sub_8027A6C
    ldr r5, _08028B80 @ =0x08029761
    ldr r4, _08028B84 @ =0x03002E20
    movs r0, #0x01
    movs r1, #0x02
    negs r1, r1
    bl irq_updateMask
    str r5, [r4, #0x0C]
    movs r0, #0x02
    ldr r1, _08028B88 @ =0x00010001
    bl irq_updateMask
    ldr r1, _08028B8C @ =0x00010004
    movs r0, #0x02
    bl irq_updateMask
    bl m4aSoundVSyncOn
    add sp, #0x004
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _08028B74: .4byte 0x080E7FEC
    _08028B78: .4byte 0x080BF5A4
    _08028B7C: .4byte 0x080C18FC
    _08028B80: .4byte sub_8029760
    _08028B84: .4byte 0x03002E20
    _08028B88: .4byte 0x00010001
    _08028B8C: .4byte 0x00010004
    thumb_func_start sub_8028B90
    sub_8028B90:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x038
    ldr r4, _08028CBC @ =0x03002E20
    movs r0, #0x00
    str r0, [sp, #0x010]
    movs r1, #0x00
    str r1, [sp, #0x014]
    movs r2, #0xA8
    str r2, [sp, #0x018]
    movs r3, #0x00
    str r3, [sp, #0x01C]
    ldr r0, _08028CC0 @ =0x03002E44
    bl sub_8043550
    str r0, [sp, #0x020]
    movs r5, #0x01
    str r5, [sp, #0x024]
    ldr r1, _08028CC4 @ =0x0203EC30
    ldr r7, _08028CC8 @ =0x00000801
    adds r4, r4, r7
    ldrb r0, [r4, #0x00]
    str r0, [r1, #0x00]
    bl sub_80278E0
    ldr r1, _08028CCC @ =0x0203EBB8
    str r0, [r1, #0x00]
    ldr r2, _08028CD0 @ =0x0203EB90
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r0, [r0, #0x00]
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    ldr r1, _08028CD4 @ =0x0203EBBC
    str r0, [r1, #0x00]
    movs r5, #0x07
    ldr r3, _08028CD8 @ =0x0203EBC0
    movs r4, #0x02
    _08028BE6:
    ldm r2!, {r0}
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    adds r0, r5, #0x0
    ands r0, r1
    stm r3!, {r0}
    subs r4, #0x01
    cmp r4, #0x00
    bge _08028BE6
    ldr r1, _08028CC0 @ =0x03002E44
    ldr r2, _08028CDC @ =0x000007D7
    adds r0, r1, r2
    ldrb r0, [r0, #0x00]
    ldr r3, [sp, #0x014]
    subs r3, #0x01
    str r3, [sp, #0x02C]
    cmp r0, #0x01
    bls _08028C0C
    b _08028DDE
    _08028C0C:
    movs r5, #0x00
    str r5, [sp, #0x028]
    ldr r0, _08028CC4 @ =0x0203EC30
    ldrb r0, [r0, #0x00]
    bl track_getCup
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    mov r10, r0
    ldr r7, _08028CC0 @ =0x03002E44
    ldr r1, _08028CE0 @ =0x000007DC
    adds r0, r7, r1
    ldrb r6, [r0, #0x00]
    movs r4, #0x00
    _08028C28:
    bl save_getSavePointer_805D9B0
    lsls r1, r4, #0x02
    adds r0, r0, r1
    ldr r2, _08028CE4 @ =0x00000583
    adds r0, r0, r2
    ldrb r0, [r0, #0x00]
    adds r5, r5, r0
    adds r4, #0x01
    cmp r4, #0x03
    ble _08028C28
    movs r3, #0x00
    str r3, [sp, #0x01C]
    mov r7, r10
    lsls r7, r7, #0x01
    str r7, [sp, #0x030]
    cmp r5, #0x63
    ble _08028CA2
    movs r7, #0x01
    mov r0, r10
    lsls r0, r0, #0x18
    mov r8, r0
    lsls r1, r6, #0x18
    mov r9, r1
    adds r5, r6, #0x0
    movs r4, #0x04
    _08028C5C:
    bl save_getSavePointer_805D9B0
    adds r0, #0x28
    adds r0, r0, r5
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0x00
    beq _08028C70
    movs r7, #0x00
    _08028C70:
    adds r5, #0x03
    subs r4, #0x01
    cmp r4, #0x00
    bge _08028C5C
    mov r2, r8
    lsrs r4, r2, #0x18
    mov r3, r9
    lsrs r5, r3, #0x18
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl sub_805DE38
    cmp r0, #0x00
    beq _08028CA2
    cmp r7, #0x00
    beq _08028CA2
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    movs r2, #0x00
    bl sub_805DDEC
    movs r5, #0x01
    str r5, [sp, #0x028]
    movs r7, #0x01
    str r7, [sp, #0x01C]
    _08028CA2:
    ldr r0, _08028CCC @ =0x0203EBB8
    ldr r0, [r0, #0x00]
    cmp r0, #0x02
    bgt _08028D70
    cmp r0, #0x01
    beq _08028CE8
    cmp r0, #0x01
    bgt _08028CEC
    cmp r0, #0x00
    bne _08028CEC
    movs r5, #0x00
    b _08028CEE
    .byte 0x00, 0x00
    _08028CBC: .4byte 0x03002E20
    _08028CC0: .4byte 0x03002E44
    _08028CC4: .4byte 0x0203EC30
    _08028CC8: .4byte 0x00000801
    _08028CCC: .4byte 0x0203EBB8
    _08028CD0: .4byte 0x0203EB90
    _08028CD4: .4byte 0x0203EBBC
    _08028CD8: .4byte 0x0203EBC0
    _08028CDC: .4byte 0x000007D7
    _08028CE0: .4byte 0x000007DC
    _08028CE4: .4byte 0x00000583
    _08028CE8:
    movs r5, #0x01
    b _08028CEE
    _08028CEC:
    movs r5, #0x02
    _08028CEE:
    cmp r6, #0x01
    beq _08028CFC
    cmp r6, #0x01
    bgt _08028CFA
    cmp r6, #0x00
    beq _08028CFC
    _08028CFA:
    movs r6, #0x02
    _08028CFC:
    ldr r0, _08028D3C @ =0x0203EC30
    ldrb r0, [r0, #0x00]
    bl track_isRetroTrack
    cmp r0, #0x00
    bne _08028D40
    bl save_getSavePointer_805D9B0
    ldr r1, [sp, #0x030]
    add r1, r10
    adds r4, r6, r1
    adds r0, #0x28
    adds r0, r0, r4
    movs r1, #0x00
    ldsb r1, [r0, r1]
    movs r0, #0x01
    negs r0, r0
    cmp r1, r0
    beq _08028D2A
    movs r0, #0x00
    str r0, [sp, #0x024]
    cmp r1, r5
    ble _08028D70
    _08028D2A:
    bl save_getSavePointer_805D9B0
    adds r0, #0x28
    adds r0, r0, r4
    strb r5, [r0, #0x00]
    movs r1, #0x01
    str r1, [sp, #0x028]
    b _08028D70
    .byte 0x00, 0x00
    _08028D3C: .4byte 0x0203EC30
    _08028D40:
    bl save_getSavePointer_805D9B0
    ldr r1, [sp, #0x030]
    add r1, r10
    adds r4, r6, r1
    adds r0, #0x37
    adds r0, r0, r4
    movs r1, #0x00
    ldsb r1, [r0, r1]
    movs r0, #0x01
    negs r0, r0
    cmp r1, r0
    beq _08028D62
    movs r2, #0x00
    str r2, [sp, #0x024]
    cmp r1, r5
    ble _08028D70
    _08028D62:
    bl save_getSavePointer_805D9B0
    adds r0, #0x37
    adds r0, r0, r4
    strb r5, [r0, #0x00]
    movs r3, #0x01
    str r3, [sp, #0x028]
    _08028D70:
    ldr r0, _08028DA4 @ =0x0203EC30
    ldrb r0, [r0, #0x00]
    bl track_isRetroTrack
    cmp r0, #0x00
    bne _08028DA8
    bl save_getSavePointer_805D9B0
    ldr r1, [sp, #0x030]
    add r1, r10
    adds r4, r6, r1
    adds r0, #0x46
    adds r0, r0, r4
    ldrb r0, [r0, #0x00]
    ldr r5, [sp, #0x020]
    cmp r0, r5
    ble _08028DD0
    bl save_getSavePointer_805D9B0
    adds r0, #0x46
    adds r0, r0, r4
    strb r5, [r0, #0x00]
    movs r0, #0x01
    str r0, [sp, #0x028]
    b _08028DD0
    .byte 0x00, 0x00
    _08028DA4: .4byte 0x0203EC30
    _08028DA8:
    bl save_getSavePointer_805D9B0
    ldr r1, [sp, #0x030]
    add r1, r10
    adds r4, r6, r1
    adds r0, #0x55
    adds r0, r0, r4
    ldrb r0, [r0, #0x00]
    ldr r1, [sp, #0x020]
    cmp r0, r1
    ble _08028DD0
    bl save_getSavePointer_805D9B0
    adds r0, #0x55
    adds r0, r0, r4
    add r2, sp, #0x020
    ldrb r2, [r2, #0x00]
    strb r2, [r0, #0x00]
    movs r3, #0x01
    str r3, [sp, #0x028]
    _08028DD0:
    bl sub_805DABC
    ldr r5, [sp, #0x028]
    cmp r5, #0x00
    beq _08028DDE
    bl sub_805DA68
    _08028DDE:
    ldr r7, _08028EA4 @ =0x03002E44
    ldr r0, _08028EA8 @ =0x000007D7
    adds r7, r7, r0
    mov r8, r7
    ldrb r1, [r7, #0x00]
    mov r10, r1
    ldr r2, _08028EA4 @ =0x03002E44
    ldr r3, _08028EAC @ =0x000007DA
    adds r5, r2, r3
    ldrh r7, [r5, #0x00]
    adds r0, #0x05
    adds r4, r2, r0
    ldrb r6, [r4, #0x00]
    adds r0, r2, #0x0
    bl sub_8048C74
    mov r2, r10
    mov r1, r8
    strb r2, [r1, #0x00]
    strh r7, [r5, #0x00]
    strb r6, [r4, #0x00]
    ldr r3, _08028EA4 @ =0x03002E44
    ldr r5, _08028EB0 @ =0x000007DD
    adds r1, r3, r5
    movs r0, #0x1C
    strb r0, [r1, #0x00]
    movs r7, #0xDC
    lsls r7, r7, #0x03
    adds r4, r3, r7
    ldr r2, _08028EB4 @ =0x0000062C
    adds r0, r4, #0x0
    movs r1, #0x01
    bl frmheap_calloc
    str r0, [sp, #0x00C]
    ldr r0, _08028EB8 @ =0x0203EBCC
    ldr r1, [sp, #0x00C]
    str r1, [r0, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x04
    adds r0, r4, #0x0
    movs r1, #0x01
    bl frmheap_calloc
    ldr r2, [sp, #0x00C]
    movs r3, #0xB9
    lsls r3, r3, #0x03
    adds r1, r2, r3
    str r0, [r1, #0x00]
    movs r5, #0x80
    lsls r5, r5, #0x02
    adds r0, r4, #0x0
    movs r1, #0x01
    adds r2, r5, #0x0
    bl frmheap_calloc
    ldr r7, [sp, #0x00C]
    ldr r2, _08028EBC @ =0x000005CC
    adds r1, r7, r2
    str r0, [r1, #0x00]
    adds r0, r4, #0x0
    movs r1, #0x01
    movs r2, #0x20
    bl frmheap_calloc
    ldr r3, _08028EC0 @ =0x000005D4
    adds r1, r7, r3
    str r0, [r1, #0x00]
    adds r0, r4, #0x0
    movs r1, #0x01
    adds r2, r5, #0x0
    bl frmheap_calloc
    movs r5, #0xBA
    lsls r5, r5, #0x03
    adds r1, r7, r5
    str r0, [r1, #0x00]
    adds r0, r4, #0x0
    movs r1, #0x01
    movs r2, #0x94
    bl frmheap_calloc
    ldr r1, _08028EC4 @ =0x0203EBD0
    str r0, [r1, #0x00]
    movs r1, #0xC5
    lsls r1, r1, #0x03
    adds r0, r7, r1
    ldr r2, [sp, #0x020]
    str r2, [r0, #0x00]
    bl sub_80287A8
    ldr r3, [sp, #0x01C]
    cmp r3, #0x00
    beq _08028EC8
    adds r5, #0x4C
    adds r1, r7, r5
    movs r0, #0x01
    str r0, [r1, #0x00]
    b _08028ED2
    _08028EA4: .4byte 0x03002E44
    _08028EA8: .4byte 0x000007D7
    _08028EAC: .4byte 0x000007DA
    _08028EB0: .4byte 0x000007DD
    _08028EB4: .4byte 0x0000062C
    _08028EB8: .4byte 0x0203EBCC
    _08028EBC: .4byte 0x000005CC
    _08028EC0: .4byte 0x000005D4
    _08028EC4: .4byte 0x0203EBD0
    _08028EC8:
    ldr r7, [sp, #0x00C]
    ldr r1, _08029110 @ =0x0000061C
    adds r0, r7, r1
    ldr r2, [sp, #0x01C]
    str r2, [r0, #0x00]
    _08028ED2:
    movs r3, #0x00
    mov r9, r3
    bl oam_update
    bl main_frameProc
    bl sub_802DC88
    cmp r0, #0x00
    beq _08028F3E
    movs r0, #0x00
    ldr r5, [sp, #0x014]
    cmp r5, #0x0D
    ble _08028EF0
    movs r0, #0x01
    _08028EF0:
    ldr r1, _08029114 @ =0x03004F50
    lsls r0, r0, #0x0A
    strh r0, [r1, #0x00]
    movs r7, #0x01
    mov r9, r7
    movs r4, #0x00
    ldr r1, _08029118 @ =0x03002C80
    ldrb r0, [r1, #0x01]
    cmp r4, r0
    bge _08028F3E
    movs r7, #0xC0
    lsls r7, r7, #0x04
    movs r6, #0x80
    lsls r6, r6, #0x03
    adds r3, r0, #0x0
    adds r2, r1, #0x2
    adds r5, r1, #0x0
    adds r5, #0x0D
    _08028F14:
    lsls r0, r4, #0x18
    lsrs r0, r0, #0x18
    movs r1, #0x00
    adds r0, r0, r5
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    bne _08028F24
    movs r1, #0x01
    _08028F24:
    cmp r1, #0x00
    beq _08028F36
    ldrh r1, [r2, #0x00]
    adds r0, r7, #0x0
    ands r0, r1
    cmp r0, r6
    beq _08028F36
    movs r0, #0x00
    mov r9, r0
    _08028F36:
    adds r2, #0x02
    adds r4, #0x01
    cmp r4, r3
    blt _08028F14
    _08028F3E:
    ldr r1, [sp, #0x02C]
    cmp r1, #0x0D
    bls _08028F46
    b _080290FC
    _08028F46:
    ldr r0, _0802911C @ =0x03004F70
    ldrb r1, [r0, #0x0C]
    movs r5, #0x02
    adds r0, r5, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _08028F56
    b _080290FC
    _08028F56:
    ldr r2, [sp, #0x024]
    cmp r2, #0x00
    beq _08028F5E
    b _080290FC
    _08028F5E:
    movs r1, #0x01
    ldr r0, _08029120 @ =0x03004EA0
    ldrh r0, [r0, #0x00]
    ands r0, r1
    cmp r0, #0x00
    bne _08028F6C
    b _080290FC
    _08028F6C:
    ldr r3, _08029124 @ =0x03002E44
    ldr r7, _08029128 @ =0x0000071C
    adds r0, r3, r7
    movs r2, #0xDC
    lsls r2, r2, #0x03
    adds r1, r3, r2
    movs r2, #0x0A
    bl sub_804F750
    ldr r1, _0802912C @ =0x080DC0BC
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
    ldr r1, _08029130 @ =0x080DC2C8
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
    ldr r4, _08029134 @ =0x0203EBB8
    ldr r0, [r4, #0x00]
    cmp r0, #0x02
    bgt _08028FA4
    ldr r1, _08029138 @ =0x080DBE94
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
    _08028FA4:
    ldr r1, _0802913C @ =0x080DBAF0
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
    ldr r1, _08029140 @ =0x080DBCB8
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
    ldr r1, _08029144 @ =0x080DBC30
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
    movs r1, #0x49
    ldr r3, _08029124 @ =0x03002E44
    movs r7, #0xBD
    lsls r7, r7, #0x04
    adds r0, r3, r7
    strb r1, [r0, #0x00]
    ldr r1, _08029148 @ =0x03002E20
    ldr r0, [r1, #0x24]
    orrs r0, r5
    str r0, [r1, #0x24]
    ldr r0, [r4, #0x00]
    cmp r0, #0x00
    bne _08028FEA
    adds r0, r3, #0x0
    movs r1, #0x00
    bl sub_804AED4
    movs r1, #0x02
    bl sub_803D214
    _08028FEA:
    movs r0, #0x58
    str r0, [sp, #0x018]
    movs r0, #0x00
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    mov r8, r0
    movs r0, #0x01
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    mov r10, r0
    movs r0, #0x00
    _08029008:
    movs r3, #0x00
    adds r5, r0, #0x0
    adds r5, #0x09
    adds r6, r0, #0x1
    adds r4, r5, #0x0
    lsls r0, r4, #0x06
    mov r1, r10
    adds r2, r0, r1
    mov r7, r8
    adds r1, r0, r7
    _0802901C:
    cmp r3, #0x00
    blt _08029030
    cmp r5, #0x00
    blt _08029030
    cmp r3, #0x1D
    bgt _08029030
    cmp r4, #0x13
    bgt _08029030
    ldrh r0, [r2, #0x00]
    strh r0, [r1, #0x00]
    _08029030:
    adds r2, #0x02
    adds r1, #0x02
    adds r3, #0x01
    cmp r3, #0x1E
    blt _0802901C
    adds r0, r6, #0x0
    cmp r0, #0x0B
    blt _08029008
    movs r0, #0x01
    bl map_setBufferDirty
    movs r0, #0x00
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    mov r8, r0
    movs r0, #0x01
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    mov r10, r0
    movs r0, #0x00
    _08029060:
    movs r3, #0x00
    adds r5, r0, #0x4
    adds r6, r0, #0x1
    adds r4, r5, #0x0
    lsls r0, r4, #0x05
    adds r0, #0x11
    lsls r0, r0, #0x01
    mov r1, r10
    adds r2, r0, r1
    mov r7, r8
    adds r1, r0, r7
    _08029076:
    adds r0, r3, #0x0
    adds r0, #0x11
    cmp r0, #0x00
    blt _0802908E
    cmp r5, #0x00
    blt _0802908E
    cmp r0, #0x1D
    bgt _0802908E
    cmp r4, #0x13
    bgt _0802908E
    ldrh r0, [r2, #0x00]
    strh r0, [r1, #0x00]
    _0802908E:
    adds r2, #0x02
    adds r1, #0x02
    adds r3, #0x01
    cmp r3, #0x0E
    blt _08029076
    adds r0, r6, #0x0
    cmp r0, #0x05
    blt _08029060
    movs r0, #0x01
    bl map_setBufferDirty
    movs r4, #0x0F
    _080290A6:
    bl sub_8027F00
    subs r4, #0x01
    cmp r4, #0x00
    bge _080290A6
    ldr r0, _08029134 @ =0x0203EBB8
    ldr r0, [r0, #0x00]
    movs r4, #0x3B
    cmp r0, #0x02
    bgt _080290BC
    movs r4, #0x38
    _080290BC:
    movs r5, #0x00
    ldr r2, _0802914C @ =0x08102414
    ldr r1, _08029150 @ =0x08102498
    lsls r0, r4, #0x03
    adds r3, r0, r1
    ldrh r1, [r3, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    ldrh r0, [r1, #0x04]
    cmp r0, #0x00
    beq _080290E2
    ldr r1, [r1, #0x00]
    ldr r0, [r3, #0x00]
    cmp r1, r0
    bne _080290E2
    movs r5, #0x01
    _080290E2:
    cmp r5, #0x00
    bne _080290EC
    adds r0, r4, #0x0
    bl m4aSongNumStart
    _080290EC:
    movs r0, #0xAE
    bl m4aSongNumStop
    movs r0, #0xAF
    bl m4aSongNumStop
    movs r0, #0x0E
    str r0, [sp, #0x014]
    _080290FC:
    ldr r1, [sp, #0x014]
    cmp r1, #0x10
    bls _08029104
    b _08029674
    _08029104:
    lsls r0, r1, #0x02
    ldr r1, _08029154 @ =0x08029158
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
    _08029110: .4byte 0x0000061C
    _08029114: .4byte 0x03004F50
    _08029118: .4byte 0x03002C80
    _0802911C: .4byte 0x03004F70
    _08029120: .4byte 0x03004EA0
    _08029124: .4byte 0x03002E44
    _08029128: .4byte 0x0000071C
    _0802912C: .4byte 0x080DC0BC
    _08029130: .4byte 0x080DC2C8
    _08029134: .4byte 0x0203EBB8
    _08029138: .4byte 0x080DBE94
    _0802913C: .4byte 0x080DBAF0
    _08029140: .4byte 0x080DBCB8
    _08029144: .4byte 0x080DBC30
    _08029148: .4byte 0x03002E20
    _0802914C: .4byte 0x08102414
    _08029150: .4byte 0x08102498
    _08029154: .4byte 0x08029158
    .byte 0x9C, 0x91, 0x02, 0x08, 0xFC, 0x91, 0x02, 0x08, 0x32, 0x92, 0x02, 0x08, 0x60, 0x92, 0x02, 0x08
    .byte 0x84, 0x92, 0x02, 0x08, 0x8A, 0x92, 0x02, 0x08, 0xCE, 0x92, 0x02, 0x08, 0xDC, 0x92, 0x02, 0x08
    .byte 0xFC, 0x92, 0x02, 0x08, 0x1C, 0x93, 0x02, 0x08, 0x54, 0x93, 0x02, 0x08, 0x66, 0x93, 0x02, 0x08
    .byte 0x94, 0x93, 0x02, 0x08, 0xB6, 0x94, 0x02, 0x08, 0xD0, 0x94, 0x02, 0x08, 0xF0, 0x94, 0x02, 0x08
    .byte 0xAC, 0x95, 0x02, 0x08, 0x00, 0x20, 0x03, 0x9A, 0x10, 0x70, 0x0F, 0x49, 0x00, 0x22, 0x07, 0xF0
    .byte 0x3D, 0xF8, 0x0E, 0x49, 0x00, 0x20, 0x00, 0x22, 0x07, 0xF0, 0x38, 0xF8, 0x0C, 0x49, 0x00, 0x20
    .byte 0x00, 0x22, 0x07, 0xF0, 0x33, 0xF8, 0x0B, 0x48, 0x00, 0x68, 0x0B, 0x49, 0x02, 0x28, 0x00, 0xDC
    .byte 0x0A, 0x49, 0x00, 0x20, 0x00, 0x22, 0x07, 0xF0, 0x29, 0xF8, 0x09, 0x49, 0x00, 0x20, 0x00, 0x22
    .byte 0x07, 0xF0, 0x24, 0xF8, 0x74, 0xE1, 0x00, 0x00, 0xE4, 0xC0, 0x0D, 0x08, 0x0C, 0xC1, 0x0D, 0x08
    .byte 0x34, 0xC1, 0x0D, 0x08, 0xB8, 0xEB, 0x03, 0x02, 0x10, 0xC4, 0x0D, 0x08, 0xF0, 0xC3, 0x0D, 0x08
    .byte 0x94, 0xC0, 0x0D, 0x08, 0x04, 0x9D, 0x01, 0x35, 0x04, 0x95, 0x80, 0x20, 0x40, 0x00, 0x85, 0x42
    .byte 0x10, 0xDC, 0xA8, 0x00, 0x40, 0x19, 0x00, 0x01, 0x40, 0x42, 0x00, 0x28, 0x00, 0xDA, 0xFF, 0x30
    .byte 0x00, 0x12, 0x67, 0x38, 0x02, 0x4F, 0xBD, 0x22, 0x12, 0x01, 0xB9, 0x18, 0x08, 0x70, 0x25, 0xE2
    .byte 0x44, 0x2E, 0x00, 0x03, 0x00, 0x23, 0x04, 0x93, 0x95, 0xE0, 0x03, 0x9F, 0x00, 0x20, 0x38, 0x56
    .byte 0x02, 0x28, 0x00, 0xDC, 0x1A, 0xE2, 0x06, 0x48, 0x00, 0x68, 0x02, 0x28, 0x00, 0xDC, 0x4F, 0xE1
    .byte 0x00, 0x20, 0x38, 0x70, 0x03, 0x49, 0x00, 0x22, 0x06, 0xF0, 0xE8, 0xFF, 0x48, 0xE1, 0x00, 0x00
    .byte 0xB8, 0xEB, 0x03, 0x02, 0x5C, 0xC1, 0x0D, 0x08, 0x03, 0x99, 0x00, 0x20, 0x08, 0x56, 0x00, 0x28
    .byte 0x00, 0xD1, 0x03, 0xE2, 0x00, 0x20, 0x88, 0x60, 0x02, 0x49, 0x00, 0x22, 0x06, 0xF0, 0xD6, 0xFF
    .byte 0x01, 0x49, 0x5C, 0xE0, 0xBC, 0xBE, 0x0D, 0x08, 0xFC, 0xBE, 0x0D, 0x08, 0x03, 0x9B, 0x98, 0x68
    .byte 0x66, 0xE0, 0x0B, 0x48, 0x00, 0x68, 0x02, 0x28, 0x1A, 0xDC, 0x00, 0x20, 0x03, 0x9F, 0x38, 0x70
    .byte 0x08, 0x49, 0x00, 0x22, 0x06, 0xF0, 0xC2, 0xFF, 0x07, 0x49, 0x00, 0x20, 0x00, 0x22, 0x06, 0xF0
    .byte 0xBD, 0xFF, 0x06, 0x49, 0x00, 0x20, 0x00, 0x22, 0x06, 0xF0, 0xB8, 0xFF, 0x18, 0xE1, 0x00, 0x00
    .byte 0xB8, 0xEB, 0x03, 0x02, 0x50, 0xC2, 0x0D, 0x08, 0x78, 0xC2, 0x0D, 0x08, 0xA0, 0xC2, 0x0D, 0x08
    .byte 0x0B, 0x21, 0x05, 0x91, 0xD2, 0xE1, 0x03, 0x9A, 0x00, 0x20, 0x10, 0x56, 0x02, 0x28, 0x00, 0xDC
    .byte 0xCC, 0xE1, 0xF5, 0xE0, 0x05, 0x48, 0x00, 0x68, 0x00, 0x28, 0x3C, 0xD1, 0x04, 0x48, 0x00, 0x21
    .byte 0x21, 0xF0, 0xF4, 0xFD, 0x02, 0x21, 0x13, 0xF0, 0x91, 0xFF, 0x34, 0xE0, 0xB8, 0xEB, 0x03, 0x02
    .byte 0x44, 0x2E, 0x00, 0x03, 0x05, 0x48, 0x00, 0x68, 0x02, 0x28, 0x00, 0xDD, 0xEC, 0xE0, 0x04, 0x48
    .byte 0x41, 0x6A, 0x02, 0x22, 0x11, 0x43, 0x41, 0x62, 0xE6, 0xE0, 0x00, 0x00, 0xB8, 0xEB, 0x03, 0x02
    .byte 0x20, 0x2E, 0x00, 0x03, 0x00, 0x20, 0x03, 0x99, 0x48, 0x60, 0x09, 0x48, 0x00, 0x68, 0x02, 0x28
    .byte 0x04, 0xDC, 0x08, 0x49, 0x00, 0x20, 0x00, 0x22, 0x06, 0xF0, 0x78, 0xFF, 0x06, 0x49, 0x00, 0x20
    .byte 0x00, 0x22, 0x06, 0xF0, 0x73, 0xFF, 0x05, 0x9A, 0x01, 0x32, 0x05, 0x92, 0x96, 0xE1, 0x00, 0x00
    .byte 0xB8, 0xEB, 0x03, 0x02, 0x44, 0xBE, 0x0D, 0x08, 0x00, 0xBD, 0x0D, 0x08, 0x03, 0x9B, 0x58, 0x68
    .byte 0x00, 0x28, 0x00, 0xD1, 0x8A, 0xE1, 0x05, 0x9D, 0x01, 0x35, 0x05, 0x95, 0x86, 0xE1, 0x08, 0x49
    .byte 0x00, 0x20, 0x00, 0x22, 0x06, 0xF0, 0x5A, 0xFF, 0x00, 0x24, 0x03, 0x9F, 0xFC, 0x60, 0x05, 0x49
    .byte 0x00, 0x20, 0x00, 0x22, 0x06, 0xF0, 0x52, 0xFF, 0x3C, 0x61, 0x03, 0x49, 0x92, 0xE7, 0x00, 0x00
    .byte 0xC0, 0xBA, 0x0D, 0x08, 0x68, 0xBC, 0x0D, 0x08, 0xE0, 0xBB, 0x0D, 0x08, 0x04, 0x99, 0x0F, 0x29
    .byte 0x00, 0xDD, 0x86, 0xE0, 0x01, 0x31, 0x04, 0x91, 0x0B, 0x21, 0x04, 0x9A, 0x10, 0x1C, 0x48, 0x43
    .byte 0x00, 0x28, 0x00, 0xDA, 0x0F, 0x30, 0x00, 0x11, 0x09, 0x1A, 0x88, 0x46, 0x00, 0x20, 0x00, 0x21
    .byte 0x00, 0x22, 0x05, 0xF0, 0x79, 0xF9, 0x07, 0x1C, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x05, 0xF0
    .byte 0x73, 0xF9, 0x06, 0x1C, 0x00, 0x21, 0x04, 0x9B, 0x9B, 0x00, 0x99, 0x46, 0x00, 0x24, 0x08, 0x1C
    .byte 0x09, 0x30, 0x4D, 0x1C, 0x41, 0x46, 0x43, 0x18, 0x80, 0x01, 0x82, 0x19, 0x98, 0x01, 0xC1, 0x19
    .byte 0x00, 0x2C, 0x07, 0xDB, 0x00, 0x2B, 0x05, 0xDB, 0x1D, 0x2C, 0x03, 0xDC, 0x13, 0x2B, 0x01, 0xDC
    .byte 0x10, 0x88, 0x08, 0x80, 0x02, 0x32, 0x02, 0x31, 0x01, 0x34, 0x1E, 0x2C, 0xF0, 0xDB, 0x29, 0x1C
    .byte 0x0B, 0x29, 0xE3, 0xDB, 0x01, 0x20, 0x05, 0xF0, 0x75, 0xF9, 0x0B, 0x21, 0x04, 0x9A, 0x10, 0x1C
    .byte 0x48, 0x43, 0x00, 0x28, 0x00, 0xDA, 0x0F, 0x30, 0x00, 0x11, 0x08, 0x1A, 0xC0, 0x00, 0x58, 0x30
    .byte 0x06, 0x90, 0x04, 0x98, 0x48, 0x44, 0x80, 0x00, 0x00, 0x28, 0x00, 0xDA, 0x0F, 0x30, 0x01, 0x11
    .byte 0x14, 0x20, 0x40, 0x1A, 0x0D, 0x90, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x05, 0xF0, 0x34, 0xF9
    .byte 0x82, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x05, 0xF0, 0x2E, 0xF9, 0x81, 0x46, 0x00, 0x20
    .byte 0x05, 0x1D, 0x01, 0x30, 0x80, 0x46, 0x2C, 0x1C, 0x60, 0x01, 0x11, 0x30, 0x0D, 0x9B, 0x19, 0x18
    .byte 0x1A, 0x1C, 0x11, 0x32, 0x0D, 0x26, 0x49, 0x00, 0x51, 0x44, 0x40, 0x00, 0x4F, 0x46, 0xC3, 0x19
    .byte 0x00, 0x2A, 0x07, 0xDB, 0x00, 0x2D, 0x05, 0xDB, 0x1D, 0x2A, 0x03, 0xDC, 0x13, 0x2C, 0x01, 0xDC
    .byte 0x18, 0x88, 0x08, 0x80, 0x02, 0x33, 0x02, 0x31, 0x01, 0x32, 0x01, 0x3E, 0x00, 0x2E, 0xEF, 0xDA
    .byte 0x40, 0x46, 0x05, 0x28, 0xDC, 0xDB, 0x01, 0x20, 0x05, 0xF0, 0x2C, 0xF9, 0xFE, 0xF7, 0x2C, 0xFD
    .byte 0xE4, 0xE0, 0x00, 0x20, 0x04, 0x90, 0x05, 0x99, 0x01, 0x31, 0x05, 0x91, 0xDE, 0xE0, 0x03, 0x9A
    .byte 0xD0, 0x68, 0x00, 0x28, 0x00, 0xD1, 0xD9, 0xE0, 0x10, 0x69, 0x00, 0x28, 0x00, 0xD1, 0xD5, 0xE0
    .byte 0x05, 0x9B, 0x01, 0x33, 0x05, 0x93, 0xD1, 0xE0, 0x04, 0xF0, 0xDA, 0xFB, 0x00, 0x28, 0x07, 0xD0
    .byte 0x4D, 0x46, 0x00, 0x2D, 0x00, 0xD1, 0xC9, 0xE0, 0x05, 0x9F, 0x01, 0x37, 0x05, 0x97, 0xC5, 0xE0
    .byte 0x05, 0x98, 0x01, 0x30, 0x05, 0x90, 0xC1, 0xE0, 0x00, 0x24, 0x20, 0x48, 0x20, 0x4A, 0x81, 0x18
    .byte 0x03, 0x1C, 0x09, 0x78, 0x8C, 0x42, 0x00, 0xDB, 0xB8, 0xE0, 0x1E, 0x48, 0x00, 0x06, 0x02, 0x0E
    .byte 0x09, 0x21, 0x1D, 0x4F, 0xA1, 0x46, 0x1D, 0x48, 0x00, 0x88, 0x08, 0x40, 0x00, 0x28, 0x3F, 0xD0
    .byte 0x05, 0x9B, 0x01, 0x33, 0x98, 0x46, 0x00, 0x2A, 0x12, 0xD0, 0x19, 0x48, 0x01, 0x88, 0x19, 0x4D
    .byte 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19, 0x06, 0x68, 0x14, 0x1C, 0x28, 0x68, 0xB0, 0x42
    .byte 0x02, 0xD0, 0x01, 0x21, 0x36, 0xF0, 0xBC, 0xFD, 0x0C, 0x35, 0x01, 0x3C, 0x00, 0x2C, 0xF5, 0xD1
    .byte 0x11, 0x48, 0x78, 0x60, 0x11, 0x48, 0x38, 0x60, 0x4D, 0x46, 0xBD, 0x60, 0x01, 0x20, 0xB8, 0x73
    .byte 0x07, 0xF0, 0x6A, 0xF8, 0x00, 0x20, 0x05, 0xF0, 0x67, 0xF8, 0x05, 0x80, 0x01, 0x20, 0x05, 0xF0
    .byte 0x7F, 0xF8, 0x00, 0x27, 0x04, 0x97, 0x40, 0x46, 0x05, 0x90, 0x7F, 0xE0, 0x20, 0x2E, 0x00, 0x03
    .byte 0xFB, 0x07, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x70, 0x4F, 0x00, 0x03, 0xA0, 0x4E, 0x00, 0x03
    .byte 0x14, 0x29, 0x10, 0x08, 0x14, 0x24, 0x10, 0x08, 0xFD, 0x06, 0x03, 0x08, 0x39, 0x07, 0x03, 0x08
    .byte 0x01, 0x34, 0x03, 0x4D, 0x58, 0x19, 0x00, 0x78, 0x84, 0x42, 0xB4, 0xDB, 0x66, 0xE0, 0x00, 0x00
    .byte 0xFB, 0x07, 0x00, 0x00, 0x10, 0x48, 0x01, 0x7B, 0x02, 0x20, 0x08, 0x40, 0x00, 0x28, 0x5D, 0xD1
    .byte 0x0E, 0x4E, 0x30, 0x78, 0x0A, 0xF0, 0x4C, 0xFB, 0x00, 0x06, 0x02, 0x0E, 0x00, 0x27, 0x0C, 0x49
    .byte 0x0C, 0x4B, 0xC8, 0x18, 0x01, 0x78, 0x01, 0x29, 0x00, 0xD8, 0x01, 0x27, 0x03, 0x2A, 0x05, 0xDD
    .byte 0x09, 0x48, 0x00, 0x68, 0x02, 0x28, 0x01, 0xDC, 0x01, 0x29, 0x11, 0xD9, 0x04, 0x48, 0xD9, 0xF7
    .byte 0x09, 0xFB, 0x06, 0x4C, 0x1B, 0xE0, 0x00, 0x00, 0x70, 0x4F, 0x00, 0x03, 0x30, 0xEC, 0x03, 0x02
    .byte 0x44, 0x2E, 0x00, 0x03, 0xD7, 0x07, 0x00, 0x00, 0xB8, 0xEB, 0x03, 0x02, 0xCD, 0x21, 0x00, 0x08
    .byte 0x0F, 0x4D, 0x10, 0x49, 0x68, 0x18, 0x05, 0x78, 0x0F, 0x48, 0x04, 0x68, 0x30, 0x78, 0x0A, 0xF0
    .byte 0xE9, 0xFA, 0x02, 0x1C, 0x28, 0x1C, 0x21, 0x1C, 0x02, 0xF0, 0xAA, 0xFC, 0x0B, 0x4C, 0x00, 0x2F
    .byte 0x1A, 0xD0, 0x01, 0x20, 0xEB, 0xF7, 0x52, 0xFE, 0x20, 0x1C, 0xEB, 0xF7, 0x7D, 0xFE, 0x08, 0x48
    .byte 0x08, 0x4A, 0x10, 0x60, 0x10, 0x7A, 0x01, 0x30, 0x07, 0x21, 0x08, 0x40, 0x10, 0x72, 0x63, 0xE0
    .byte 0x44, 0x2E, 0x00, 0x03, 0xDC, 0x07, 0x00, 0x00, 0xBC, 0xEB, 0x03, 0x02, 0x31, 0xB6, 0x02, 0x08
    .byte 0xAD, 0x49, 0x01, 0x08, 0x20, 0x2E, 0x00, 0x03, 0x03, 0x48, 0x04, 0x60, 0x01, 0x7A, 0x01, 0x31
    .byte 0x07, 0x22, 0x11, 0x40, 0x01, 0x72, 0x4F, 0xE0, 0x20, 0x2E, 0x00, 0x03
    _08029674:
    ldr r4, _080296F8 @ =0x03002E20
    ldr r0, [r4, #0x24]
    movs r1, #0x01
    orrs r0, r1
    str r0, [r4, #0x24]
    ldr r2, [sp, #0x014]
    cmp r2, #0x0F
    bgt _08029696
    ldr r3, _080296FC @ =0x0000057C
    adds r1, r4, r3
    ldrh r0, [r1, #0x04]
    movs r0, #0xBD
    lsls r0, r0, #0x06
    strh r0, [r1, #0x04]
    ldrh r0, [r1, #0x06]
    ldr r0, _08029700 @ =0x0000060A
    strh r0, [r1, #0x06]
    _08029696:
    ldr r5, [sp, #0x018]
    lsls r0, r5, #0x10
    movs r7, #0x28
    orrs r0, r7
    str r0, [sp, #0x008]
    ldr r0, _08029704 @ =0x080C9944
    movs r1, #0x00
    str r1, [sp, #0x000]
    str r1, [sp, #0x004]
    add r1, sp, #0x008
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    ldr r0, [r4, #0x10]
    adds r0, #0x01
    str r0, [r4, #0x10]
    ldr r1, _08029708 @ =0x03002E44
    ldr r2, _0802970C @ =0x00000724
    adds r0, r1, r2
    ldr r0, [r0, #0x00]
    ldr r3, [sp, #0x014]
    subs r3, #0x01
    str r3, [sp, #0x02C]
    cmp r0, #0x00
    beq _080296DC
    _080296CA:
    ldr r4, [r0, #0x3C]
    ldr r1, [r0, #0x14]
    cmp r1, #0x00
    beq _080296D6
    bl _call_via_r1
    _080296D6:
    adds r0, r4, #0x0
    cmp r0, #0x00
    bne _080296CA
    _080296DC:
    ldr r0, _08029708 @ =0x03002E44
    bl sub_804C0A8
    ldr r0, _08029708 @ =0x03002E44
    bl sub_8049B0C
    ldr r0, _08029708 @ =0x03002E44
    bl sub_8049D78
    ldr r0, _08029708 @ =0x03002E44
    bl sub_804C38C
    bl _08028ED2
    _080296F8:
    cmp r6, #0x20
    lsls r0, r0, #0x0C
    _080296FC:
    lsls r4, r7, #0x15
    lsls r0, r0, #0x00
    _08029700:
    lsls r2, r1, #0x18
    lsls r0, r0, #0x00
    _08029704:
    ldr r1, [sp, #0x110]
    lsrs r4, r1, #0x20
    _08029708:
    cmp r6, #0x44
    lsls r0, r0, #0x0C
    _0802970C:
    lsls r4, r4, #0x1C
    lsls r0, r0, #0x00
    movs r1, #0x07
    negs r1, r1
    movs r0, #0x01
    bl irq_updateMask
    movs r5, #0x00
    ldr r4, _08029754 @ =0x03002E20
    movs r0, #0x01
    movs r1, #0x02
    negs r1, r1
    bl irq_updateMask
    str r5, [r4, #0x0C]
    movs r0, #0x02
    ldr r1, _08029758 @ =0x00010001
    bl irq_updateMask
    ldr r1, _0802975C @ =0x0802D5F1
    movs r0, #0x01
    bl irq_setHandler
    movs r0, #0x80
    lsls r0, r0, #0x13
    strh r5, [r0, #0x00]
    movs r0, #0x01
    add sp, #0x038
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    _08029754: .4byte 0x03002E20
    _08029758: .4byte 0x00010001
    _0802975C: .4byte main_dummyIrqHandler
    thumb_func_start sub_8029760
    sub_8029760:
    push {r4, r5, r6, lr}
    ldr r4, _08029788 @ =0x03002E20
    adds r6, r4, #0x0
    adds r6, #0x24
    ldr r0, _0802978C @ =0x00000848
    adds r5, r4, r0
    adds r0, r5, #0x0
    bl sub_80312E8
    ldr r0, _08029790 @ =0x00000BC8
    adds r4, r4, r0
    ldr r2, [r4, #0x00]
    movs r0, #0x14
    ldsh r1, [r5, r0]
    adds r0, r6, #0x0
    bl sub_804AD00
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    _08029788: .4byte 0x03002E20
    _0802978C: .4byte 0x00000848
    _08029790: .4byte 0x00000BC8
    .byte 0xD8, 0x21, 0x01, 0x84, 0x48, 0x21, 0x41, 0x84, 0x82, 0x8E, 0x01, 0x21, 0x11, 0x43, 0x81, 0x86
    .byte 0x70, 0x47, 0x00, 0x00
    thumb_func_start sub_80297A8
    sub_80297A8:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x008
    mov r8, r0
    str r1, [sp, #0x000]
    adds r7, r2, #0x0
    mov r9, r3
    movs r0, #0x00
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    mov r10, r0
    movs r0, #0x01
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    mov r12, r0
    movs r0, #0x00
    cmp r0, r9
    bge _08029828
    _080297DA:
    adds r1, r0, #0x1
    str r1, [sp, #0x004]
    cmp r7, #0x00
    ble _08029822
    ldr r6, [sp, #0x000]
    adds r0, r6, r0
    ldr r1, [sp, #0x02C]
    adds r5, r0, r1
    lsls r2, r5, #0x05
    lsls r0, r0, #0x05
    add r0, r8
    ldr r1, [sp, #0x028]
    add r1, r8
    adds r2, r1, r2
    adds r4, r7, #0x0
    lsls r2, r2, #0x01
    add r2, r10
    lsls r0, r0, #0x01
    mov r6, r12
    adds r3, r0, r6
    _08029802:
    cmp r1, #0x00
    blt _08029816
    cmp r5, #0x00
    blt _08029816
    cmp r1, #0x1D
    bgt _08029816
    cmp r5, #0x13
    bgt _08029816
    ldrh r0, [r3, #0x00]
    strh r0, [r2, #0x00]
    _08029816:
    adds r3, #0x02
    adds r2, #0x02
    adds r1, #0x01
    subs r4, #0x01
    cmp r4, #0x00
    bne _08029802
    _08029822:
    ldr r0, [sp, #0x004]
    cmp r0, r9
    blt _080297DA
    _08029828:
    movs r0, #0x01
    bl map_setBufferDirty
    add sp, #0x008
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00, 0x70, 0xB5, 0x81, 0xB0, 0x04, 0x48, 0x00, 0x68, 0x04, 0x49, 0x40, 0x18, 0x00, 0x68
    .byte 0x00, 0x28, 0x06, 0xD1, 0x01, 0x20, 0x26, 0xE0, 0x00, 0x00, 0xCC, 0xEB, 0x03, 0x02, 0x1C, 0x06
    .byte 0x00, 0x00, 0x12, 0x48, 0x06, 0x69, 0x01, 0x20, 0x04, 0xF0, 0xE3, 0xFE, 0x02, 0x1C, 0xC0, 0x20
    .byte 0x40, 0x00, 0x12, 0x18, 0x0F, 0x4C, 0x21, 0x1C, 0x40, 0x31, 0x20, 0x25, 0x00, 0x95, 0x20, 0x1C
    .byte 0x33, 0x1C, 0xFC, 0xF7, 0x44, 0xFE, 0x00, 0x20, 0x04, 0xF0, 0xD3, 0xFE, 0x02, 0x1C, 0xE0, 0x21
    .byte 0x49, 0x00, 0x52, 0x18, 0x20, 0x1C, 0x60, 0x38, 0x20, 0x3C, 0x00, 0x95, 0x21, 0x1C, 0x33, 0x1C
    .byte 0xFC, 0xF7, 0x35, 0xFE, 0x00, 0x20, 0x01, 0xB0, 0x70, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x20, 0x2E
    .byte 0x00, 0x03, 0x9C, 0xAD, 0x0A, 0x08, 0x30, 0xB5, 0x83, 0xB0, 0x1A, 0x48, 0x04, 0x68, 0xCA, 0x20
    .byte 0x40, 0x00, 0x25, 0x18, 0xD6, 0x21, 0x49, 0x00, 0x60, 0x18, 0x00, 0x21, 0xE5, 0xF7, 0x53, 0xF9
    .byte 0x06, 0xF0, 0xB1, 0xFD, 0xBA, 0x21, 0xC9, 0x00, 0x64, 0x18, 0x21, 0x68, 0x13, 0x4A, 0x13, 0x4B
    .byte 0x06, 0xF0, 0x81, 0xFD, 0xA8, 0x68, 0x00, 0x28, 0x18, 0xD0, 0xAA, 0x88, 0x11, 0x49, 0x02, 0x98
    .byte 0x08, 0x40, 0x10, 0x43, 0x02, 0x90, 0xE9, 0x88, 0x09, 0x04, 0x0E, 0x4A, 0x10, 0x40, 0x08, 0x43
    .byte 0x02, 0x90, 0x28, 0x68, 0x08, 0x24, 0x2A, 0x5F, 0x0A, 0x21, 0x6B, 0x5E, 0x0C, 0x24, 0x29, 0x5F
    .byte 0x00, 0x91, 0x00, 0x21, 0x01, 0x91, 0x02, 0xA9, 0x06, 0xF0, 0x81, 0xF8, 0x03, 0xB0, 0x30, 0xBC
    .byte 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0xCC, 0xEB, 0x03, 0x02, 0x00, 0x24, 0x01, 0x06, 0x00, 0x01
    .byte 0x00, 0x80, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x10, 0xB5, 0x0F, 0x48, 0x00, 0x68
    .byte 0xD6, 0x22, 0x52, 0x00, 0x81, 0x18, 0x0D, 0x4B, 0x18, 0x68, 0x02, 0x22, 0x02, 0x28, 0x00, 0xDC
    .byte 0x01, 0x22, 0x4A, 0x70, 0x01, 0x20, 0x48, 0x80, 0x18, 0x68, 0x02, 0x28, 0x09, 0xDC, 0x08, 0x4C
    .byte 0x09, 0x48, 0x00, 0x68, 0xE5, 0xF7, 0x25, 0xFA, 0x80, 0x00, 0x00, 0x19, 0x00, 0x88, 0x36, 0xF0
    .byte 0xD8, 0xFA, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0xCC, 0xEB, 0x03, 0x02, 0xB8, 0xEB
    .byte 0x03, 0x02, 0x48, 0xBC, 0x0D, 0x08, 0xBC, 0xEB, 0x03, 0x02, 0x02, 0x48, 0x01, 0x68, 0x01, 0x20
    .byte 0xC8, 0x60, 0x70, 0x47, 0x00, 0x00, 0xCC, 0xEB, 0x03, 0x02, 0x0B, 0x48, 0x00, 0x68, 0x84, 0x46
    .byte 0xE0, 0x21, 0x49, 0x00, 0x61, 0x44, 0x09, 0x48, 0x08, 0x60, 0x00, 0x23, 0x00, 0x22, 0x8A, 0x80
    .byte 0xD2, 0x20, 0xC8, 0x80, 0x2E, 0x30, 0x48, 0x81, 0x08, 0x81, 0x0A, 0x82, 0xD8, 0x30, 0x60, 0x44
    .byte 0x03, 0x70, 0x03, 0x48, 0x60, 0x44, 0x03, 0x70, 0x70, 0x47, 0xCC, 0xEB, 0x03, 0x02, 0x74, 0x99
    .byte 0x0C, 0x08, 0xD9, 0x01, 0x00, 0x00, 0x81, 0x6E, 0x01, 0x31, 0x81, 0x66, 0x04, 0x4A, 0x04, 0x48
    .byte 0x00, 0x68, 0x80, 0x18, 0x00, 0x78, 0x81, 0x42, 0x05, 0xDC, 0x00, 0x20, 0x04, 0xE0, 0x34, 0xBE
    .byte 0x0D, 0x08, 0xB8, 0xEB, 0x03, 0x02, 0x01, 0x20, 0x70, 0x47, 0x10, 0xB5, 0x0F, 0x48, 0x00, 0x68
    .byte 0xEE, 0x21, 0x49, 0x00, 0x44, 0x18, 0x20, 0x8A, 0x01, 0x30, 0x20, 0x82, 0x00, 0x04, 0x00, 0x14
    .byte 0x20, 0x28, 0x14, 0xDC, 0x10, 0x21, 0x60, 0x5E, 0x41, 0x00, 0x09, 0x18, 0x48, 0x01, 0x09, 0x18
    .byte 0x00, 0x29, 0x00, 0xDA, 0x1F, 0x31, 0x49, 0x11, 0x01, 0x31, 0xC8, 0x20, 0xC0, 0x01, 0x38, 0xF0
    .byte 0x40, 0xFA, 0x60, 0x81, 0x20, 0x81, 0x00, 0x20, 0x04, 0xE0, 0xCC, 0xEB, 0x03, 0x02, 0x00, 0x20
    .byte 0x20, 0x82, 0x01, 0x20, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x03, 0x48, 0x40, 0x6A, 0x02, 0x21
    .byte 0x08, 0x40, 0x40, 0x42, 0xC0, 0x0F, 0x70, 0x47, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03, 0x70, 0xB5
    .byte 0x81, 0xB0, 0x06, 0x1C, 0xB5, 0x6E, 0x01, 0x35, 0x20, 0x2D, 0x12, 0xDC, 0x07, 0x4C, 0x05, 0x20
    .byte 0x00, 0x90, 0x0A, 0x20, 0x00, 0x21, 0x2A, 0x1C, 0x20, 0x23, 0xE4, 0xF7, 0x5A, 0xFF, 0x49, 0x30
    .byte 0x03, 0x49, 0x64, 0x18, 0x20, 0x70, 0x00, 0x20, 0x04, 0xE0, 0x20, 0x2E, 0x00, 0x03, 0xF4, 0x0B
    .byte 0x00, 0x00, 0x01, 0x20, 0xB5, 0x66, 0x01, 0xB0, 0x70, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0xB5
    .byte 0x08, 0x49, 0x00, 0x20, 0x00, 0x22, 0x06, 0xF0, 0xBE, 0xFB, 0x06, 0x49, 0x00, 0x20, 0x00, 0x22
    .byte 0x06, 0xF0, 0xB9, 0xFB, 0x05, 0x49, 0x00, 0x20, 0x00, 0x22, 0x06, 0xF0, 0xB4, 0xFB, 0x01, 0xBC
    .byte 0x00, 0x47, 0x00, 0xC3, 0x0D, 0x08, 0x28, 0xC3, 0x0D, 0x08, 0x50, 0xC3, 0x0D, 0x08, 0x02, 0x48
    .byte 0x01, 0x68, 0x08, 0x78, 0x01, 0x30, 0x08, 0x70, 0x70, 0x47, 0xCC, 0xEB, 0x03, 0x02, 0x30, 0xB5
    .byte 0x05, 0x1C, 0xAC, 0x6E, 0x08, 0x48, 0x24, 0x30, 0x03, 0x21, 0x21, 0xF0, 0xF4, 0xF9, 0x01, 0x1C
    .byte 0x01, 0x34, 0x20, 0x2C, 0x09, 0xDC, 0x60, 0x02, 0xC0, 0x22, 0x12, 0x02, 0x80, 0x18, 0x56, 0x31
    .byte 0x08, 0x80, 0x00, 0x20, 0x02, 0xE0, 0x20, 0x2E, 0x00, 0x03, 0x01, 0x20, 0xAC, 0x66, 0x30, 0xBC
    .byte 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00, 0x30, 0xB5, 0x85, 0x6E, 0x08, 0x48, 0x24, 0x30, 0x03, 0x21
    .byte 0x21, 0xF0, 0xD9, 0xF9, 0x04, 0x1C, 0x00, 0x21, 0x13, 0xF0, 0x13, 0xFF, 0x20, 0x1C, 0x29, 0x1C
    .byte 0x13, 0xF0, 0x91, 0xFE, 0x01, 0x20, 0xA0, 0x60, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x20, 0x2E
    .byte 0x00, 0x03, 0x10, 0xB5, 0x81, 0x6E, 0x09, 0x48, 0x04, 0x68, 0x08, 0x01, 0x86, 0x22, 0x92, 0x00
    .byte 0x80, 0x18, 0x24, 0x18, 0x07, 0x48, 0x24, 0x30, 0x09, 0x06, 0x09, 0x0E, 0x21, 0xF0, 0xBB, 0xF9
    .byte 0x80, 0x68, 0x20, 0x60, 0x00, 0x20, 0xE0, 0x60, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0xCC, 0xEB
    .byte 0x03, 0x02, 0x20, 0x2E, 0x00, 0x03, 0x30, 0xB5, 0x81, 0xB0, 0x81, 0x6E, 0x10, 0x48, 0x02, 0x68
    .byte 0x08, 0x01, 0x86, 0x23, 0x9B, 0x00, 0xC0, 0x18, 0x14, 0x18, 0x0D, 0x48, 0x24, 0x30, 0x09, 0x06
    .byte 0x09, 0x0E, 0x21, 0xF0, 0xA0, 0xF9, 0x05, 0x1C, 0xE0, 0x68, 0x42, 0x1C, 0xE2, 0x60, 0x20, 0x2A
    .byte 0x11, 0xDC, 0x80, 0x20, 0x40, 0x00, 0x09, 0x21, 0x00, 0x91, 0x00, 0x21, 0x20, 0x23, 0xE4, 0xF7
    .byte 0xC0, 0xFE, 0xC0, 0x02, 0x21, 0x68, 0x09, 0x18, 0xA9, 0x60, 0x00, 0x20, 0x06, 0xE0, 0xCC, 0xEB
    .byte 0x03, 0x02, 0x20, 0x2E, 0x00, 0x03, 0x20, 0x68, 0xA8, 0x60, 0x01, 0x20, 0x01, 0xB0, 0x30, 0xBC
    .byte 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00, 0x30, 0xB5, 0x81, 0xB0, 0x81, 0x6E, 0x11, 0x48, 0x02, 0x68
    .byte 0x08, 0x01, 0x86, 0x23, 0x9B, 0x00, 0xC0, 0x18, 0x14, 0x18, 0x0E, 0x48, 0x24, 0x30, 0x09, 0x06
    .byte 0x09, 0x0E, 0x21, 0xF0, 0x70, 0xF9, 0x05, 0x1C, 0xE0, 0x68, 0x42, 0x1C, 0xE2, 0x60, 0x20, 0x2A
    .byte 0x13, 0xDC, 0x80, 0x20, 0x40, 0x00, 0x09, 0x21, 0x00, 0x91, 0x00, 0x21, 0x20, 0x23, 0xE4, 0xF7
    .byte 0x90, 0xFE, 0x41, 0x00, 0x09, 0x18, 0x09, 0x02, 0x20, 0x68, 0x40, 0x18, 0xA8, 0x60, 0x00, 0x20
    .byte 0x06, 0xE0, 0xCC, 0xEB, 0x03, 0x02, 0x20, 0x2E, 0x00, 0x03, 0x20, 0x68, 0xA8, 0x60, 0x01, 0x20
    .byte 0x01, 0xB0, 0x30, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00
    thumb_func_start sub_8029C38
    sub_8029C38:
    push {r4, r5, lr}
    ldr r2, _08029C64 @ =0x03004F70
    ldrb r4, [r2, #0x0F]
    ldr r1, _08029C68 @ =0x04000040
    movs r0, #0xF0
    strh r0, [r1, #0x00]
    adds r5, r2, #0x0
    cmp r4, #0x08
    bgt _08029C70
    ldr r2, _08029C6C @ =0x04000044
    lsls r0, r4, #0x03
    subs r0, r0, r4
    movs r1, #0x50
    subs r1, r1, r0
    lsls r1, r1, #0x08
    lsls r0, r4, #0x01
    adds r0, r0, r4
    lsls r0, r0, #0x01
    adds r0, #0x50
    orrs r1, r0
    strh r1, [r2, #0x00]
    b _08029C88
    _08029C64: .4byte 0x03004F70
    _08029C68: .4byte 0x04000040
    _08029C6C: .4byte 0x04000044
    _08029C70:
    ldr r3, _08029CB0 @ =0x04000044
    adds r1, r4, #0x0
    subs r1, #0x08
    lsls r2, r1, #0x01
    adds r2, r2, r1
    movs r0, #0x18
    subs r0, r0, r2
    lsls r0, r0, #0x08
    lsls r1, r1, #0x02
    adds r1, #0x80
    orrs r0, r1
    strh r0, [r3, #0x00]
    _08029C88:
    ldr r1, _08029CB4 @ =0x04000048
    movs r0, #0x3E
    strh r0, [r1, #0x00]
    adds r1, #0x02
    movs r0, #0x31
    strh r0, [r1, #0x00]
    cmp r4, #0x08
    bne _08029CA0
    ldrb r1, [r5, #0x0C]
    movs r0, #0x80
    orrs r0, r1
    strb r0, [r5, #0x0C]
    _08029CA0:
    cmp r4, #0x10
    bne _08029CA8
    movs r0, #0x00
    str r0, [r5, #0x00]
    _08029CA8:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _08029CB0: .4byte 0x04000044
    _08029CB4: .4byte 0x04000048
    thumb_func_start sub_8029CB8
    sub_8029CB8:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x004
    adds r7, r0, #0x0
    mov r10, r1
    str r2, [sp, #0x000]
    cmp r3, #0x00
    beq _08029D04
    movs r3, #0x00
    movs r2, #0x00
    ldr r0, _08029D24 @ =0x03002E20
    movs r1, #0x80
    lsls r1, r1, #0x04
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x02
    bgt _08029D04
    cmp r0, #0x00
    blt _08029D04
    ldr r0, [sp, #0x000]
    ldr r1, [r0, #0x08]
    ldrb r0, [r1, #0x00]
    cmp r0, #0x00
    beq _08029CFA
    _08029CEE:
    adds r3, #0x01
    adds r2, #0x01
    adds r0, r1, r2
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    bne _08029CEE
    _08029CFA:
    movs r0, #0x1B
    subs r0, r0, r3
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r7, r0, #0x01
    _08029D04:
    ldr r0, _08029D24 @ =0x03002E20
    movs r1, #0x80
    lsls r1, r1, #0x04
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x02
    bgt _08029D9C
    cmp r0, #0x00
    blt _08029D9C
    ldr r2, [sp, #0x000]
    ldrb r4, [r2, #0x00]
    cmp r4, #0xFF
    bne _08029D28
    adds r7, #0x01
    b _08029D9C
    .byte 0x00, 0x00
    _08029D24: .4byte 0x03002E20
    _08029D28:
    cmp r4, #0xFE
    bne _08029D30
    subs r7, #0x01
    b _08029D9C
    _08029D30:
    movs r0, #0x00
    adds r1, r7, #0x0
    mov r2, r10
    bl map_getBufferPtr2d
    ldr r6, _08029E28 @ =0x080DC82C
    lsls r1, r4, #0x03
    adds r1, r1, r6
    ldrh r1, [r1, #0x00]
    movs r2, #0xD0
    lsls r2, r2, #0x08
    adds r5, r2, #0x0
    orrs r1, r5
    strh r1, [r0, #0x00]
    adds r0, r7, #0x1
    mov r9, r0
    movs r0, #0x00
    mov r1, r9
    mov r2, r10
    bl map_getBufferPtr2d
    lsls r4, r4, #0x02
    adds r1, r4, #0x1
    lsls r1, r1, #0x01
    adds r1, r1, r6
    ldrh r1, [r1, #0x00]
    orrs r1, r5
    strh r1, [r0, #0x00]
    movs r1, #0x01
    add r1, r10
    mov r8, r1
    movs r0, #0x00
    adds r1, r7, #0x0
    mov r2, r8
    bl map_getBufferPtr2d
    adds r1, r4, #0x2
    lsls r1, r1, #0x01
    adds r1, r1, r6
    ldrh r1, [r1, #0x00]
    orrs r1, r5
    strh r1, [r0, #0x00]
    movs r0, #0x00
    mov r1, r9
    mov r2, r8
    bl map_getBufferPtr2d
    adds r4, #0x03
    lsls r4, r4, #0x01
    adds r4, r4, r6
    ldrh r1, [r4, #0x00]
    orrs r1, r5
    strh r1, [r0, #0x00]
    adds r7, #0x03
    _08029D9C:
    ldr r0, _08029E2C @ =0x03002E20
    movs r2, #0x80
    lsls r2, r2, #0x04
    adds r0, r0, r2
    ldrb r0, [r0, #0x00]
    cmp r0, #0x02
    bgt _08029E18
    cmp r0, #0x00
    blt _08029E18
    movs r6, #0x00
    mov r8, r6
    ldr r0, [sp, #0x000]
    ldr r1, [r0, #0x08]
    ldrb r0, [r1, #0x00]
    cmp r0, #0x00
    beq _08029E18
    _08029DBC:
    adds r0, r1, r6
    ldrb r0, [r0, #0x00]
    subs r0, #0x20
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    movs r0, #0x00
    cmp r1, #0x5E
    bhi _08029DCE
    adds r0, r1, #0x0
    _08029DCE:
    ldr r1, _08029E30 @ =0x080DC59C
    lsls r0, r0, #0x01
    adds r0, r0, r1
    ldrh r4, [r0, #0x00]
    mov r1, r8
    adds r5, r7, r1
    movs r0, #0x00
    adds r1, r5, #0x0
    mov r2, r10
    bl map_getBufferPtr2d
    movs r1, #0xE0
    lsls r1, r1, #0x08
    adds r2, r1, #0x0
    adds r1, r4, #0x0
    orrs r1, r2
    strh r1, [r0, #0x00]
    movs r0, #0x00
    adds r1, r5, #0x0
    mov r2, r10
    adds r2, #0x01
    bl map_getBufferPtr2d
    adds r4, #0x20
    ldr r2, _08029E34 @ =0xFFFFE000
    adds r1, r2, #0x0
    orrs r4, r1
    strh r4, [r0, #0x00]
    movs r0, #0x01
    add r8, r0
    adds r6, #0x01
    ldr r2, [sp, #0x000]
    ldr r1, [r2, #0x08]
    adds r0, r1, r6
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    bne _08029DBC
    _08029E18:
    add sp, #0x004
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    _08029E28: .4byte 0x080DC82C
    _08029E2C: .4byte 0x03002E20
    _08029E30: .4byte 0x080DC59C
    _08029E34: .4byte 0xFFFFE000
    thumb_func_start sub_8029E38
    sub_8029E38:
    push {r4, lr}
    add sp, #-0x004
    ldr r2, _08029E74 @ =0x080DDE58
    lsls r0, r0, #0x03
    adds r0, r0, r2
    ldr r2, [r0, #0x00]
    lsls r0, r1, #0x02
    adds r0, r0, r1
    lsls r0, r0, #0x02
    ldr r1, [r2, #0x0C]
    adds r4, r1, r0
    movs r0, #0x00
    str r0, [sp, #0x000]
    movs r1, #0x00
    movs r2, #0x10
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    ldr r2, _08029E78 @ =0x01000040
    mov r0, sp
    bl CpuFastSet
    ldrb r0, [r4, #0x02]
    cmp r0, #0x01
    beq _08029E94
    cmp r0, #0x01
    bgt _08029E7C
    cmp r0, #0x00
    beq _08029E86
    b _08029F12
    _08029E74: .4byte 0x080DDE58
    _08029E78: .4byte 0x01000040
    _08029E7C:
    cmp r0, #0x02
    beq _08029EBC
    cmp r0, #0x03
    beq _08029EE2
    b _08029F12
    _08029E86:
    ldr r2, [r4, #0x04]
    movs r0, #0x0A
    movs r1, #0x11
    movs r3, #0x01
    bl sub_8029CB8
    b _08029F12
    _08029E94:
    ldr r0, _08029EB8 @ =0x03002E20
    movs r1, #0x80
    lsls r1, r1, #0x04
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x02
    bgt _08029F12
    cmp r0, #0x00
    blt _08029F12
    ldr r2, [r4, #0x04]
    movs r0, #0x01
    movs r1, #0x10
    movs r3, #0x00
    bl sub_8029CB8
    ldr r2, [r4, #0x08]
    movs r0, #0x08
    b _08029ED8
    _08029EB8: .4byte 0x03002E20
    _08029EBC:
    ldr r2, [r4, #0x04]
    movs r0, #0x0A
    movs r1, #0x10
    movs r3, #0x00
    bl sub_8029CB8
    ldr r2, [r4, #0x08]
    movs r0, #0x04
    movs r1, #0x12
    movs r3, #0x00
    bl sub_8029CB8
    ldr r2, [r4, #0x0C]
    movs r0, #0x10
    _08029ED8:
    movs r1, #0x12
    movs r3, #0x00
    bl sub_8029CB8
    b _08029F12
    _08029EE2:
    ldr r2, [r4, #0x04]
    movs r0, #0x02
    movs r1, #0x10
    movs r3, #0x00
    bl sub_8029CB8
    ldr r2, [r4, #0x08]
    movs r0, #0x0E
    movs r1, #0x10
    movs r3, #0x00
    bl sub_8029CB8
    ldr r2, [r4, #0x0C]
    movs r0, #0x06
    movs r1, #0x12
    movs r3, #0x00
    bl sub_8029CB8
    ldr r2, [r4, #0x10]
    movs r0, #0x12
    movs r1, #0x12
    movs r3, #0x00
    bl sub_8029CB8
    _08029F12:
    add sp, #0x004
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00, 0xF0, 0xB5, 0x57, 0x46, 0x4E, 0x46, 0x45, 0x46, 0xE0, 0xB4, 0x84, 0xB0, 0x09, 0x48
    .byte 0x00, 0x68, 0x00, 0x90, 0x09, 0x49, 0x80, 0x68, 0xC0, 0x00, 0x40, 0x18, 0x00, 0x68, 0x01, 0x90
    .byte 0x00, 0x68, 0x02, 0x90, 0x01, 0x99, 0x49, 0x68, 0x89, 0x46, 0x01, 0x9A, 0x13, 0x7A, 0x00, 0x22
    .byte 0x00, 0x78, 0x02, 0x99, 0x05, 0xE0, 0xD8, 0xEB, 0x03, 0x02, 0x58, 0xDE, 0x0D, 0x08, 0x01, 0x32
    .byte 0x08, 0x78, 0x01, 0x31, 0x00, 0x28, 0xFA, 0xD1, 0x94, 0x46, 0x00, 0x25, 0x65, 0x45, 0x00, 0xDB
    .byte 0xAA, 0xE0, 0x0F, 0x20, 0x18, 0x40, 0x03, 0x90, 0xAA, 0x46, 0xE8, 0x00, 0x40, 0x1B, 0x80, 0x00
    .byte 0x14, 0x30, 0x00, 0x99, 0x0C, 0x18, 0x03, 0x9A, 0x00, 0x2A, 0x04, 0xD0, 0x01, 0x2A, 0x50, 0xD0
    .byte 0x01, 0x35, 0xA8, 0x46, 0x94, 0xE0, 0x02, 0x9B, 0x58, 0x19, 0x00, 0x78, 0x40, 0x38, 0x80, 0x00
    .byte 0x22, 0x49, 0x40, 0x18, 0x00, 0x68, 0x20, 0x60, 0x80, 0x20, 0x40, 0x00, 0xA0, 0x80, 0x62, 0x46
    .byte 0x50, 0x1B, 0x41, 0x1E, 0x4A, 0x46, 0x13, 0x88, 0x02, 0x32, 0x06, 0x1C, 0x17, 0x1C, 0x8B, 0x42
    .byte 0x00, 0xDC, 0x59, 0x1E, 0x6B, 0x1C, 0x98, 0x46, 0x00, 0x29, 0x04, 0xDD, 0x08, 0x1C, 0x06, 0x32
    .byte 0x01, 0x38, 0x00, 0x28, 0xFB, 0xD1, 0x00, 0x20, 0x10, 0x56, 0x14, 0x30, 0xE0, 0x80, 0x70, 0x1E
    .byte 0x4A, 0x46, 0x11, 0x88, 0x3A, 0x1C, 0x81, 0x42, 0x00, 0xDC, 0x48, 0x1E, 0x00, 0x28, 0x03, 0xDD
    .byte 0x06, 0x32, 0x01, 0x38, 0x00, 0x28, 0xFB, 0xD1, 0x50, 0x88, 0x0C, 0x4A, 0x11, 0x1C, 0x01, 0x40
    .byte 0x08, 0x1C, 0xFF, 0x28, 0x02, 0xD9, 0x08, 0x1C, 0x50, 0x40, 0x40, 0x42, 0x58, 0x30, 0x20, 0x81
    .byte 0x08, 0x20, 0x60, 0x81, 0x53, 0x46, 0xE3, 0x81, 0xA3, 0x81, 0x50, 0x46, 0x20, 0x61, 0xA0, 0x82
    .byte 0x25, 0x76, 0x61, 0x46, 0x61, 0x76, 0x4B, 0xE0, 0x00, 0x00, 0x6C, 0xC8, 0x0D, 0x08, 0xFF, 0x01
    .byte 0x00, 0x00, 0x02, 0x9A, 0x50, 0x19, 0x00, 0x78, 0x40, 0x38, 0x80, 0x00, 0x30, 0x4B, 0xC0, 0x18
    .byte 0x00, 0x68, 0x20, 0x60, 0x61, 0x46, 0x48, 0x1B, 0x41, 0x1E, 0x4B, 0x46, 0x1A, 0x88, 0x02, 0x33
    .byte 0x06, 0x1C, 0x8A, 0x42, 0x00, 0xDC, 0x51, 0x1E, 0x68, 0x1C, 0x80, 0x46, 0x00, 0x29, 0x04, 0xDD
    .byte 0x08, 0x1C, 0x06, 0x33, 0x01, 0x38, 0x00, 0x28, 0xFB, 0xD1, 0x58, 0x88, 0x25, 0x49, 0x0A, 0x1C
    .byte 0x02, 0x40, 0x10, 0x1C, 0xFF, 0x28, 0x02, 0xD9, 0x10, 0x1C, 0x48, 0x40, 0x40, 0x42, 0x01, 0x1C
    .byte 0x58, 0x31, 0xA1, 0x80, 0x20, 0x48, 0xE0, 0x80, 0x21, 0x81, 0x49, 0x46, 0x70, 0x1E, 0x0A, 0x88
    .byte 0x02, 0x31, 0x82, 0x42, 0x00, 0xDC, 0x50, 0x1E, 0x00, 0x28, 0x03, 0xDD, 0x06, 0x31, 0x01, 0x38
    .byte 0x00, 0x28, 0xFB, 0xD1, 0x00, 0x20, 0x08, 0x56, 0x14, 0x30, 0x60, 0x81, 0x51, 0x46, 0xE1, 0x81
    .byte 0xA1, 0x81, 0x52, 0x46, 0x22, 0x61, 0x05, 0x20, 0xA0, 0x82, 0x25, 0x76, 0x63, 0x46, 0x63, 0x76
    .byte 0x45, 0x46, 0x65, 0x45, 0x00, 0xDA, 0x58, 0xE7, 0x00, 0x99, 0x9F, 0x22, 0x92, 0x00, 0x88, 0x18
    .byte 0x63, 0x46, 0x03, 0x60, 0x01, 0x98, 0xC3, 0x68, 0x44, 0x7A, 0x04, 0x32, 0x89, 0x18, 0x00, 0x20
    .byte 0x08, 0x60, 0x00, 0x2C, 0x1D, 0xD0, 0x0A, 0x1C, 0x0F, 0x26, 0x25, 0x1C, 0x18, 0x78, 0x31, 0x1C
    .byte 0x01, 0x40, 0x00, 0x29, 0x09, 0xD0, 0x01, 0x29, 0x0C, 0xD0, 0x0E, 0xE0, 0x00, 0x00, 0x6C, 0xC8
    .byte 0x0D, 0x08, 0xFF, 0x01, 0x00, 0x00, 0xD8, 0xFF, 0x00, 0x00, 0x59, 0x78, 0x10, 0x68, 0x40, 0x18
    .byte 0x50, 0x30, 0x01, 0xE0, 0x10, 0x68, 0x80, 0x30, 0x10, 0x60, 0x14, 0x33, 0x01, 0x3D, 0x00, 0x2D
    .byte 0xE4, 0xD1, 0x00, 0x9B, 0xA0, 0x20, 0x80, 0x00, 0x19, 0x18, 0x08, 0x68, 0x32, 0x30, 0x08, 0x60
    .byte 0x04, 0xB0, 0x38, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xAA, 0x46, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47
    .byte 0x00, 0x00
    thumb_func_start sub_802A13C
    sub_802A13C:
    push {r4, lr}
    add sp, #-0x004
    adds r4, r0, #0x0
    movs r1, #0x14
    ldsh r0, [r4, r1]
    cmp r0, #0x0B
    bls _0802A14C
    b _0802A3AC
    _0802A14C:
    lsls r0, r0, #0x02
    ldr r1, _0802A158 @ =0x0802A15C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
    _0802A158: .4byte 0x0802A15C
    .byte 0x8C, 0xA1, 0x02, 0x08, 0xAA, 0xA1, 0x02, 0x08, 0x0C, 0xA2, 0x02, 0x08, 0x58, 0xA2, 0x02, 0x08
    .byte 0x7C, 0xA2, 0x02, 0x08, 0xE0, 0xA2, 0x02, 0x08, 0xFC, 0xA2, 0x02, 0x08, 0xAC, 0xA3, 0x02, 0x08
    .byte 0x2C, 0xA3, 0x02, 0x08, 0x34, 0xA3, 0x02, 0x08, 0x50, 0xA3, 0x02, 0x08, 0xAC, 0xA3, 0x02, 0x08
    .byte 0xE0, 0x8A, 0x01, 0x30, 0xE0, 0x82, 0x00, 0x04, 0x00, 0x14, 0x22, 0x7E, 0x51, 0x00, 0x89, 0x18
    .byte 0x88, 0x42, 0x00, 0xDC, 0x04, 0xE1, 0x00, 0x20, 0xE0, 0x82, 0x01, 0x20, 0xFF, 0xE0, 0xE0, 0x8A
    .byte 0x01, 0x30, 0xE0, 0x82, 0x00, 0x04, 0x00, 0x14, 0x0C, 0x28, 0x25, 0xDC, 0x16, 0x22, 0xA0, 0x5E
    .byte 0x80, 0x03, 0x0C, 0x21, 0x37, 0xF0, 0x76, 0xFE, 0x0D, 0x49, 0x00, 0x04, 0x00, 0x14, 0x00, 0x28
    .byte 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x03, 0x68, 0x0A, 0x20
    .byte 0x21, 0x5E, 0x22, 0x7E, 0x50, 0x00, 0x80, 0x18, 0x40, 0x00, 0x09, 0x18, 0x05, 0x4A, 0x89, 0x18
    .byte 0x08, 0x1C, 0x58, 0x43, 0xC0, 0x13, 0x80, 0x23, 0x5B, 0x00, 0xC0, 0x18, 0xA0, 0x80, 0xD7, 0xE0
    .byte 0x5C, 0x64, 0x0E, 0x08, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x20, 0xE0, 0x82, 0x02, 0x20, 0xCE, 0xE0
    .byte 0xE0, 0x8A, 0x01, 0x30, 0xE0, 0x82, 0x00, 0x04, 0x00, 0x14, 0x08, 0x28, 0x1A, 0xDC, 0x16, 0x21
    .byte 0x60, 0x5E, 0x0A, 0x4B, 0x00, 0x07, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11
    .byte 0x80, 0x22, 0x52, 0x00, 0x10, 0x1A, 0x06, 0x49, 0x08, 0x40, 0x80, 0x00, 0xC0, 0x18, 0x01, 0x68
    .byte 0x80, 0x20, 0x00, 0x02, 0x40, 0x1A, 0xC0, 0x01, 0x40, 0x14, 0x42, 0xE0, 0x5C, 0x64, 0x0E, 0x08
    .byte 0xFF, 0x03, 0x00, 0x00, 0x00, 0x20, 0xE0, 0x82, 0x03, 0x20, 0xA8, 0xE0, 0xE2, 0x8A, 0x01, 0x32
    .byte 0xE2, 0x82, 0x12, 0x04, 0x12, 0x14, 0x21, 0x7E, 0xC9, 0x43, 0x63, 0x7E, 0xC9, 0x18, 0x48, 0x00
    .byte 0x40, 0x18, 0x82, 0x42, 0x00, 0xDC, 0x9B, 0xE0, 0x00, 0x20, 0xE0, 0x82, 0x04, 0x20, 0x96, 0xE0
    .byte 0xE0, 0x8A, 0x01, 0x30, 0x00, 0x21, 0xE0, 0x82, 0x00, 0x04, 0x00, 0x14, 0x10, 0x28, 0x25, 0xDC
    .byte 0x0A, 0x21, 0x60, 0x5E, 0x21, 0x7E, 0xC9, 0x00, 0x40, 0x18, 0x08, 0x22, 0xA1, 0x5E, 0x16, 0x23
    .byte 0xE2, 0x5E, 0x05, 0x23, 0x00, 0x93, 0x10, 0x23, 0xE4, 0xF7, 0x44, 0xFB, 0xA0, 0x80, 0x16, 0x21
    .byte 0x60, 0x5E, 0x09, 0x49, 0x80, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04
    .byte 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0xC0, 0x01, 0x40, 0x42, 0xC0, 0x13, 0xC0, 0x22
    .byte 0x52, 0x00, 0x80, 0x18, 0xA0, 0x81, 0x6B, 0xE0, 0x5C, 0x64, 0x0E, 0x08, 0xE1, 0x82, 0xA1, 0x81
    .byte 0x07, 0x20, 0x64, 0xE0, 0xE0, 0x8A, 0x01, 0x30, 0xE0, 0x82, 0x00, 0x04, 0x00, 0x14, 0x22, 0x7E
    .byte 0x51, 0x00, 0x89, 0x18, 0x88, 0x42, 0x5B, 0xDD, 0x00, 0x20, 0xE0, 0x82, 0x06, 0x20, 0x56, 0xE0
    .byte 0xE0, 0x8A, 0x01, 0x30, 0xE0, 0x82, 0x00, 0x04, 0x00, 0x14, 0x40, 0x28, 0x0C, 0xDC, 0x28, 0x20
    .byte 0x40, 0x42, 0x0A, 0x23, 0xE1, 0x5E, 0x16, 0x23, 0xE2, 0x5E, 0x09, 0x23, 0x00, 0x93, 0x40, 0x23
    .byte 0xE4, 0xF7, 0x08, 0xFB, 0xE0, 0x80, 0x43, 0xE0, 0x00, 0x20, 0xE0, 0x82, 0x07, 0x20, 0x3E, 0xE0
    .byte 0x00, 0x20, 0xE0, 0x82, 0x09, 0x20, 0x3A, 0xE0, 0xE0, 0x8A, 0x01, 0x30, 0xE0, 0x82, 0x00, 0x04
    .byte 0x00, 0x14, 0x22, 0x7E, 0x51, 0x00, 0x89, 0x18, 0x88, 0x42, 0x31, 0xDD, 0x00, 0x20, 0xE0, 0x82
    .byte 0x0A, 0x20, 0x2C, 0xE0, 0xE0, 0x8A, 0x01, 0x30, 0xE0, 0x82, 0x00, 0x04, 0x00, 0x14, 0x20, 0x28
    .byte 0x22, 0xDC, 0x16, 0x21, 0x60, 0x5E, 0x0E, 0x4A, 0x40, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA
    .byte 0x3F, 0x30, 0x81, 0x11, 0x80, 0x20, 0x40, 0x00, 0x40, 0x1A, 0x0A, 0x49, 0x08, 0x40, 0x80, 0x00
    .byte 0x80, 0x18, 0x02, 0x68, 0x04, 0x23, 0xE0, 0x5E, 0x1E, 0x21, 0x49, 0x42, 0x09, 0x1A, 0x80, 0x20
    .byte 0x00, 0x02, 0x80, 0x1A, 0x48, 0x43, 0xC0, 0x13, 0xA1, 0x88, 0x40, 0x18, 0xA0, 0x80, 0x07, 0xE0
    .byte 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x20, 0xE0, 0x82, 0x0B, 0x20, 0xA0, 0x82
    _0802A3AC:
    add sp, #0x004
    pop {r4}
    pop {r0}
    bx r0
    .byte 0xF0, 0xB5, 0x47, 0x46, 0x80, 0xB4, 0x83, 0xB0, 0x2D, 0x48, 0x06, 0x68, 0x00, 0x20, 0x80, 0x46
    .byte 0x00, 0x25, 0x9F, 0x21, 0x89, 0x00, 0x70, 0x18, 0x00, 0x68, 0x80, 0x45, 0x0A, 0xDA, 0x77, 0x18
    .byte 0x34, 0x1C, 0x14, 0x34, 0x20, 0x1C, 0xFF, 0xF7, 0xAF, 0xFE, 0x1C, 0x34, 0x01, 0x35, 0x38, 0x68
    .byte 0x85, 0x42, 0xF7, 0xDB, 0x00, 0x25, 0x9F, 0x21, 0x89, 0x00, 0x70, 0x18, 0x00, 0x68, 0x85, 0x42
    .byte 0x34, 0xDA, 0x80, 0x27, 0xFF, 0x04, 0x70, 0x18, 0x01, 0x68, 0x49, 0x1B, 0xC8, 0x00, 0x40, 0x1A
    .byte 0x80, 0x00, 0x08, 0x38, 0x34, 0x18, 0x20, 0x68, 0x00, 0x28, 0x20, 0xD0, 0x0C, 0x22, 0xA0, 0x5E
    .byte 0x39, 0x14, 0x88, 0x42, 0x1B, 0xDC, 0x0E, 0x23, 0xE0, 0x5E, 0x88, 0x42, 0x17, 0xDC, 0xA2, 0x88
    .byte 0x14, 0x49, 0x02, 0x98, 0x08, 0x40, 0x10, 0x43, 0x02, 0x90, 0xE2, 0x88, 0x12, 0x04, 0x12, 0x49
    .byte 0x08, 0x40, 0x10, 0x43, 0x02, 0x90, 0x20, 0x68, 0x0C, 0x21, 0x62, 0x5E, 0x0E, 0x21, 0x63, 0x5E
    .byte 0x21, 0x69, 0x00, 0x91, 0x00, 0x21, 0x01, 0x91, 0x02, 0xA9, 0x05, 0xF0, 0xE5, 0xFA, 0x01, 0x35
    .byte 0x9F, 0x21, 0x89, 0x00, 0x70, 0x18, 0x00, 0x68, 0x85, 0x42, 0xCC, 0xDB, 0xA0, 0x22, 0x92, 0x00
    .byte 0xB1, 0x18, 0x08, 0x68, 0x00, 0x28, 0x09, 0xDD, 0x01, 0x38, 0x08, 0x60, 0x3B, 0xE0, 0x00, 0x00
    .byte 0xD8, 0xEB, 0x03, 0x02, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x28, 0x23, 0xF0, 0x5E
    .byte 0x07, 0x28, 0x11, 0xD1, 0x00, 0x25, 0x9F, 0x20, 0x80, 0x00, 0x31, 0x18, 0x08, 0x68, 0x85, 0x42
    .byte 0x29, 0xDA, 0x08, 0x23, 0x0A, 0x1C, 0x31, 0x1C, 0x14, 0x31, 0x8B, 0x82, 0x1C, 0x31, 0x01, 0x35
    .byte 0x10, 0x68, 0x85, 0x42, 0xF9, 0xDB, 0x1E, 0xE0, 0x00, 0x22, 0x9F, 0x21, 0x89, 0x00, 0x70, 0x18
    .byte 0x00, 0x68, 0x82, 0x42, 0x0B, 0xDA, 0x31, 0x1C, 0x14, 0x31, 0x05, 0x1C, 0x14, 0x23, 0xC8, 0x5E
    .byte 0x0B, 0x28, 0x00, 0xD1, 0x01, 0x32, 0x1C, 0x31, 0x01, 0x3D, 0x00, 0x2D, 0xF6, 0xD1, 0x9F, 0x21
    .byte 0x89, 0x00, 0x70, 0x18, 0x00, 0x68, 0x82, 0x42, 0x05, 0xD1, 0xA1, 0x22, 0x92, 0x00, 0xB1, 0x18
    .byte 0x01, 0x20, 0x08, 0x60, 0x80, 0x46, 0x40, 0x46, 0x03, 0xB0, 0x08, 0xBC, 0x98, 0x46, 0xF0, 0xBC
    .byte 0x02, 0xBC, 0x08, 0x47, 0x70, 0xB5, 0x06, 0x1C, 0x0B, 0x48, 0x05, 0x68, 0x0B, 0x49, 0xA8, 0x68
    .byte 0xC0, 0x00, 0x40, 0x18, 0x02, 0x68, 0xE8, 0x68, 0x81, 0x00, 0x09, 0x18, 0x89, 0x00, 0xD0, 0x68
    .byte 0x40, 0x18, 0x01, 0x78, 0xB4, 0x6E, 0x01, 0x22, 0x0F, 0x20, 0x01, 0x40, 0x00, 0x29, 0x07, 0xD0
    .byte 0x01, 0x29, 0x1B, 0xD0, 0x2C, 0xE0, 0x00, 0x00, 0xD8, 0xEB, 0x03, 0x02, 0x58, 0xDE, 0x0D, 0x08
    .byte 0x01, 0x34, 0x30, 0x2C, 0x24, 0xDC, 0xA0, 0x03, 0x30, 0x21, 0x37, 0xF0, 0xB7, 0xFC, 0x06, 0x49
    .byte 0x00, 0x04, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00
    .byte 0x40, 0x18, 0x00, 0x68, 0x00, 0x02, 0x10, 0xE0, 0x5C, 0x64, 0x0E, 0x08, 0x01, 0x34, 0x80, 0x2C
    .byte 0x0E, 0xDC, 0x0A, 0x49, 0xE0, 0x05, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04
    .byte 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0x40, 0x02, 0xC0, 0x13, 0x28, 0x61, 0x00, 0x22
    .byte 0xB4, 0x66, 0x10, 0x1C, 0x70, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08
    thumb_func_start sub_802A594
    sub_802A594:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    ldr r0, _0802A5F8 @ =0x0203EBD8
    ldr r0, [r0, #0x00]
    adds r3, r0, #0x0
    ldr r1, _0802A5FC @ =0x080DDE58
    ldr r0, [r3, #0x08]
    lsls r0, r0, #0x03
    adds r0, r0, r1
    ldr r2, [r0, #0x00]
    ldr r0, [r3, #0x0C]
    lsls r1, r0, #0x02
    adds r1, r1, r0
    lsls r1, r1, #0x02
    ldr r0, [r2, #0x0C]
    adds r0, r0, r1
    ldrb r1, [r0, #0x00]
    ldr r2, [r5, #0x68]
    movs r4, #0x01
    movs r0, #0x0F
    ands r1, r0
    cmp r1, #0x00
    bne _0802A5EC
    adds r2, #0x01
    cmp r2, #0x20
    bgt _0802A5EC
    ldr r1, _0802A600 @ =0x080E645C
    lsls r0, r2, #0x19
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0802A5D4
    adds r0, #0x3F
    _0802A5D4:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x08
    asrs r0, r0, #0x0F
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r0, r1
    str r0, [r3, #0x10]
    movs r4, #0x00
    _0802A5EC:
    str r2, [r5, #0x68]
    adds r0, r4, #0x0
    pop {r4, r5}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    _0802A5F8: .4byte 0x0203EBD8
    _0802A5FC: .4byte 0x080DDE58
    _0802A600: .4byte gSinTable
    .byte 0x30, 0xB5, 0x00, 0x22, 0x16, 0x48, 0x17, 0x4B, 0xC1, 0x18, 0x03, 0x1C, 0x09, 0x78, 0x8A, 0x42
    .byte 0x3E, 0xDA, 0x00, 0x25, 0x14, 0x4C, 0x15, 0x49, 0x50, 0x00, 0x40, 0x18, 0x00, 0x88, 0x0B, 0x21
    .byte 0x08, 0x40, 0x00, 0x28, 0x2E, 0xD0, 0x12, 0x48, 0x00, 0x68, 0x12, 0x49, 0x40, 0x18, 0x05, 0x60
    .byte 0x00, 0x20, 0x03, 0xF0, 0xFB, 0xFF, 0x05, 0x80, 0x01, 0x20, 0x04, 0xF0, 0x13, 0xF8, 0x0E, 0x48
    .byte 0x60, 0x60, 0x0E, 0x48, 0x20, 0x60, 0xA5, 0x60, 0x01, 0x20, 0xA0, 0x73, 0x05, 0xF0, 0xEE, 0xFF
    .byte 0x0B, 0x48, 0x00, 0x68, 0x01, 0x21, 0x35, 0xF0, 0x2D, 0xFD, 0x01, 0x20, 0x19, 0xE0, 0x00, 0x00
    .byte 0x20, 0x2E, 0x00, 0x03, 0xFB, 0x07, 0x00, 0x00, 0x70, 0x4F, 0x00, 0x03, 0xA0, 0x4E, 0x00, 0x03
    .byte 0xD8, 0xEB, 0x03, 0x02, 0xD8, 0x0D, 0x00, 0x00, 0xFD, 0x06, 0x03, 0x08, 0x39, 0x07, 0x03, 0x08
    .byte 0x14, 0x24, 0x10, 0x08, 0x01, 0x32, 0x04, 0x49, 0x58, 0x18, 0x00, 0x78, 0x82, 0x42, 0xC2, 0xDB
    .byte 0x00, 0x20, 0x30, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0xFB, 0x07, 0x00, 0x00, 0xF0, 0xB5, 0x47, 0x46
    .byte 0x80, 0xB4, 0x05, 0x1C, 0xAE, 0x6E, 0x2F, 0x6F, 0x68, 0x6F, 0xF1, 0x78, 0x88, 0x42, 0x03, 0xDA
    .byte 0x01, 0x30, 0x68, 0x67, 0x00, 0x20, 0x36, 0xE0, 0x00, 0x20, 0x68, 0x67, 0x70, 0x68, 0xC0, 0x19
    .byte 0x00, 0x78, 0x20, 0x38, 0x00, 0x06, 0x01, 0x0E, 0x00, 0x20, 0x5E, 0x29, 0x00, 0xD8, 0x08, 0x1C
    .byte 0x12, 0x49, 0x40, 0x00, 0x40, 0x18, 0x04, 0x88, 0x31, 0x78, 0xC9, 0x19, 0x72, 0x78, 0x00, 0x20
    .byte 0x03, 0xF0, 0xE4, 0xFF, 0x0E, 0x4A, 0x90, 0x46, 0x21, 0x1C, 0x42, 0x46, 0x11, 0x43, 0x01, 0x80
    .byte 0x31, 0x78, 0xC9, 0x19, 0x72, 0x78, 0x01, 0x32, 0x00, 0x20, 0x03, 0xF0, 0xD7, 0xFF, 0x20, 0x34
    .byte 0x41, 0x46, 0x0C, 0x43, 0x04, 0x80, 0x01, 0x20, 0x03, 0xF0, 0xF6, 0xFF, 0x01, 0x37, 0x2F, 0x67
    .byte 0xB6, 0x78, 0xB7, 0x42, 0x06, 0xDA, 0x00, 0x20, 0x05, 0xE0, 0x00, 0x00, 0x9C, 0xC5, 0x0D, 0x08
    .byte 0x00, 0xE0, 0xFF, 0xFF, 0x01, 0x20, 0x08, 0xBC, 0x98, 0x46, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47
    .byte 0xF0, 0xB5, 0x57, 0x46, 0x4E, 0x46, 0x45, 0x46, 0xE0, 0xB4, 0x81, 0x46, 0x81, 0x6E, 0x3C, 0x29
    .byte 0x01, 0xDD, 0x01, 0x20, 0x7E, 0xE0, 0x01, 0x20, 0x08, 0x40, 0x01, 0x31, 0x8A, 0x46, 0x00, 0x28
    .byte 0x74, 0xD0, 0x00, 0x27, 0x1E, 0x26, 0xF6, 0x1B, 0x00, 0x20, 0x31, 0x1C, 0x03, 0x22, 0x03, 0xF0
    .byte 0xA5, 0xFF, 0x04, 0x1C, 0x1D, 0x25, 0xED, 0x1B, 0x00, 0x20, 0x29, 0x1C, 0x03, 0x22, 0x03, 0xF0
    .byte 0x9D, 0xFF, 0x00, 0x88, 0x20, 0x80, 0x00, 0x20, 0x31, 0x1C, 0x04, 0x22, 0x03, 0xF0, 0x96, 0xFF
    .byte 0x04, 0x1C, 0x00, 0x20, 0x29, 0x1C, 0x04, 0x22, 0x03, 0xF0, 0x90, 0xFF, 0x00, 0x88, 0x20, 0x80
    .byte 0x00, 0x20, 0x31, 0x1C, 0x09, 0x22, 0x03, 0xF0, 0x89, 0xFF, 0x04, 0x1C, 0x00, 0x20, 0x29, 0x1C
    .byte 0x09, 0x22, 0x03, 0xF0, 0x83, 0xFF, 0x00, 0x88, 0x20, 0x80, 0x00, 0x20, 0x31, 0x1C, 0x0A, 0x22
    .byte 0x03, 0xF0, 0x7C, 0xFF, 0x04, 0x1C, 0x00, 0x20, 0x29, 0x1C, 0x0A, 0x22, 0x03, 0xF0, 0x76, 0xFF
    .byte 0x00, 0x88, 0x20, 0x80, 0x00, 0x20, 0x39, 0x1C, 0x0B, 0x22, 0x03, 0xF0, 0x6F, 0xFF, 0x04, 0x1C
    .byte 0x78, 0x1C, 0x80, 0x46, 0x00, 0x20, 0x41, 0x46, 0x0B, 0x22, 0x03, 0xF0, 0x67, 0xFF, 0x00, 0x88
    .byte 0x20, 0x80, 0x00, 0x20, 0x39, 0x1C, 0x0C, 0x22, 0x03, 0xF0, 0x60, 0xFF, 0x04, 0x1C, 0x00, 0x20
    .byte 0x41, 0x46, 0x0C, 0x22, 0x03, 0xF0, 0x5A, 0xFF, 0x00, 0x88, 0x20, 0x80, 0x00, 0x20, 0x31, 0x1C
    .byte 0x0D, 0x22, 0x03, 0xF0, 0x53, 0xFF, 0x04, 0x1C, 0x00, 0x20, 0x29, 0x1C, 0x0D, 0x22, 0x03, 0xF0
    .byte 0x4D, 0xFF, 0x00, 0x88, 0x20, 0x80, 0x00, 0x20, 0x31, 0x1C, 0x0E, 0x22, 0x03, 0xF0, 0x46, 0xFF
    .byte 0x04, 0x1C, 0x00, 0x20, 0x29, 0x1C, 0x0E, 0x22, 0x03, 0xF0, 0x40, 0xFF, 0x00, 0x88, 0x20, 0x80
    .byte 0x47, 0x46, 0x1D, 0x2F, 0x8E, 0xDD, 0x01, 0x20, 0x03, 0xF0, 0x5E, 0xFF, 0x51, 0x46, 0x48, 0x46
    .byte 0x81, 0x66, 0x00, 0x20, 0x38, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xAA, 0x46, 0xF0, 0xBC, 0x02, 0xBC
    .byte 0x08, 0x47, 0x00, 0x00, 0xF0, 0xB5, 0x57, 0x46, 0x4E, 0x46, 0x45, 0x46, 0xE0, 0xB4, 0x84, 0xB0
    .byte 0x06, 0x49, 0x09, 0x68, 0x8A, 0x46, 0x83, 0x6E, 0x05, 0x49, 0x98, 0x00, 0x40, 0x18, 0x00, 0x68
    .byte 0x80, 0x46, 0x00, 0x22, 0x00, 0x78, 0x41, 0x46, 0x06, 0xE0, 0x00, 0x00, 0xD8, 0xEB, 0x03, 0x02
    .byte 0x14, 0xCC, 0x0D, 0x08, 0x01, 0x32, 0x08, 0x78, 0x01, 0x31, 0x00, 0x28, 0xFA, 0xD1, 0x16, 0x1C
    .byte 0x00, 0x24, 0x9F, 0x00, 0xB4, 0x42, 0x69, 0xDA, 0xD8, 0x00, 0xC0, 0x18, 0x80, 0x00, 0xC0, 0x1A
    .byte 0x00, 0x01, 0xE7, 0x22, 0xD2, 0x00, 0x81, 0x18, 0x51, 0x44, 0x00, 0x91, 0x50, 0x44, 0x80, 0x18
    .byte 0x02, 0x90, 0x34, 0x48, 0x34, 0x49, 0x89, 0x46, 0x1B, 0x18, 0x9C, 0x46, 0x1A, 0x78, 0x01, 0x92
    .byte 0xE0, 0x00, 0x00, 0x1B, 0x80, 0x00, 0x00, 0x9D, 0x2B, 0x18, 0x41, 0x46, 0x08, 0x19, 0x00, 0x78
    .byte 0x40, 0x38, 0x80, 0x00, 0x2D, 0x4A, 0x80, 0x18, 0x00, 0x68, 0x18, 0x60, 0x80, 0x20, 0x40, 0x00
    .byte 0x98, 0x80, 0x01, 0x9D, 0x28, 0x1B, 0x01, 0x38, 0x4A, 0x46, 0x11, 0x88, 0x02, 0x32, 0x81, 0x42
    .byte 0x00, 0xDC, 0x48, 0x1E, 0x65, 0x1C, 0x03, 0x95, 0x00, 0x28, 0x03, 0xDD, 0x06, 0x32, 0x01, 0x38
    .byte 0x00, 0x28, 0xFB, 0xD1, 0x22, 0x49, 0x78, 0x18, 0x00, 0x21, 0x51, 0x56, 0x00, 0x88, 0x09, 0x18
    .byte 0xD9, 0x80, 0xE0, 0x43, 0x4A, 0x46, 0x65, 0x46, 0x2D, 0x78, 0x40, 0x19, 0x11, 0x88, 0x02, 0x32
    .byte 0x81, 0x42, 0x00, 0xDC, 0x48, 0x1E, 0x00, 0x28, 0x03, 0xDD, 0x06, 0x32, 0x01, 0x38, 0x00, 0x28
    .byte 0xFB, 0xD1, 0x50, 0x88, 0x17, 0x4A, 0x11, 0x1C, 0x01, 0x40, 0x08, 0x1C, 0xFF, 0x28, 0x02, 0xD9
    .byte 0x08, 0x1C, 0x50, 0x40, 0x41, 0x42, 0x14, 0x4A, 0xB8, 0x18, 0x00, 0x88, 0x40, 0x18, 0x00, 0x21
    .byte 0x18, 0x81, 0x02, 0x9D, 0x28, 0x89, 0x08, 0x38, 0x58, 0x81, 0xD9, 0x81, 0x99, 0x81, 0x19, 0x61
    .byte 0x99, 0x82, 0x1C, 0x76, 0x5E, 0x76, 0x03, 0x9C, 0xB4, 0x42, 0xA9, 0xDB, 0x0B, 0x48, 0x50, 0x44
    .byte 0xC0, 0x19, 0x06, 0x60, 0x04, 0xB0, 0x38, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xAA, 0x46, 0xF0, 0xBC
    .byte 0x01, 0xBC, 0x00, 0x47, 0x45, 0xCC, 0x0D, 0x08, 0xBC, 0x9D, 0x0C, 0x08, 0x6C, 0xC8, 0x0D, 0x08
    .byte 0x4A, 0xCC, 0x0D, 0x08, 0xFF, 0x01, 0x00, 0x00, 0x48, 0xCC, 0x0D, 0x08, 0xC8, 0x0D, 0x00, 0x00
    .byte 0xF0, 0xB5, 0x4F, 0x46, 0x46, 0x46, 0xC0, 0xB4, 0x83, 0xB0, 0x48, 0x49, 0x09, 0x68, 0x88, 0x46
    .byte 0x86, 0x6E, 0x00, 0x25, 0xB1, 0x00, 0x46, 0x48, 0x40, 0x44, 0x40, 0x18, 0x00, 0x68, 0x85, 0x42
    .byte 0x14, 0xDA, 0xF0, 0x00, 0x80, 0x19, 0x80, 0x00, 0x80, 0x1B, 0x00, 0x01, 0xE7, 0x22, 0xD2, 0x00
    .byte 0x80, 0x18, 0x42, 0x46, 0x14, 0x18, 0x3E, 0x48, 0x40, 0x44, 0x47, 0x18, 0x20, 0x1C, 0xFF, 0xF7
    .byte 0xAB, 0xFB, 0x1C, 0x34, 0x01, 0x35, 0x38, 0x68, 0x85, 0x42, 0xF7, 0xDB, 0x00, 0x25, 0xB1, 0x00
    .byte 0x37, 0x4B, 0x44, 0x46, 0xE0, 0x18, 0x40, 0x18, 0x00, 0x68, 0x0F, 0x1C, 0x85, 0x42, 0x43, 0xDA
    .byte 0x80, 0x20, 0xC0, 0x04, 0x81, 0x46, 0xF2, 0x00, 0x92, 0x19, 0x92, 0x00, 0x92, 0x1B, 0x12, 0x01
    .byte 0xE7, 0x24, 0xE4, 0x00, 0x12, 0x19, 0x42, 0x44, 0x44, 0x46, 0xE0, 0x18, 0x40, 0x18, 0x01, 0x68
    .byte 0x49, 0x1B, 0xC8, 0x00, 0x40, 0x1A, 0x80, 0x00, 0x1C, 0x38, 0x14, 0x18, 0x20, 0x68, 0x00, 0x28
    .byte 0x21, 0xD0, 0x0C, 0x21, 0x60, 0x5E, 0x4A, 0x46, 0x11, 0x14, 0x88, 0x42, 0x1B, 0xDC, 0x0E, 0x22
    .byte 0xA0, 0x5E, 0x88, 0x42, 0x17, 0xDC, 0xA2, 0x88, 0x22, 0x49, 0x02, 0x98, 0x08, 0x40, 0x10, 0x43
    .byte 0x02, 0x90, 0xE2, 0x88, 0x12, 0x04, 0x20, 0x49, 0x08, 0x40, 0x10, 0x43, 0x02, 0x90, 0x20, 0x68
    .byte 0x0C, 0x21, 0x62, 0x5E, 0x0E, 0x21, 0x63, 0x5E, 0x21, 0x69, 0x00, 0x91, 0x00, 0x21, 0x01, 0x91
    .byte 0x02, 0xA9, 0x04, 0xF0, 0xD1, 0xFF, 0x01, 0x35, 0x39, 0x1C, 0x15, 0x4B, 0x42, 0x46, 0xD0, 0x18
    .byte 0xC0, 0x19, 0x00, 0x68, 0x85, 0x42, 0xBE, 0xDB, 0x01, 0x23, 0x11, 0x48, 0x40, 0x44, 0xC0, 0x19
    .byte 0x02, 0x68, 0x00, 0x2A, 0x12, 0xDD, 0xF0, 0x00, 0x80, 0x19, 0x80, 0x00, 0x80, 0x1B, 0x00, 0x01
    .byte 0x44, 0x46, 0x01, 0x19, 0x0D, 0x4C, 0x15, 0x1C, 0x08, 0x19, 0x00, 0x22, 0x80, 0x5E, 0x0B, 0x28
    .byte 0x00, 0xD0, 0x00, 0x23, 0x1C, 0x31, 0x01, 0x3D, 0x00, 0x2D, 0xF5, 0xD1, 0x18, 0x1C, 0x03, 0xB0
    .byte 0x18, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0xD8, 0xEB, 0x03, 0x02
    .byte 0xC8, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x4C, 0x07, 0x00, 0x00
    thumb_func_start sub_802AAE4
    sub_802AAE4:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    add sp, #-0x004
    adds r4, r0, #0x0
    ldrh r0, [r4, #0x20]
    subs r0, #0x01
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x21
    bls _0802AAFE
    b _0802AD16
    _0802AAFE:
    lsls r0, r0, #0x02
    ldr r1, _0802AB08 @ =0x0802AB0C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    _0802AB08: .4byte 0x0802AB0C
    .byte 0x94, 0xAB, 0x02, 0x08, 0x16, 0xAD, 0x02, 0x08, 0x16, 0xAD, 0x02, 0x08, 0x16, 0xAD, 0x02, 0x08
    .byte 0x16, 0xAD, 0x02, 0x08, 0x16, 0xAD, 0x02, 0x08, 0x16, 0xAD, 0x02, 0x08, 0x16, 0xAD, 0x02, 0x08
    .byte 0x16, 0xAD, 0x02, 0x08, 0x16, 0xAD, 0x02, 0x08, 0x16, 0xAD, 0x02, 0x08, 0x16, 0xAD, 0x02, 0x08
    .byte 0x16, 0xAD, 0x02, 0x08, 0x16, 0xAD, 0x02, 0x08, 0x16, 0xAD, 0x02, 0x08, 0x16, 0xAD, 0x02, 0x08
    .byte 0x16, 0xAD, 0x02, 0x08, 0x16, 0xAD, 0x02, 0x08, 0x16, 0xAD, 0x02, 0x08, 0x16, 0xAD, 0x02, 0x08
    .byte 0x16, 0xAD, 0x02, 0x08, 0x16, 0xAD, 0x02, 0x08, 0x16, 0xAD, 0x02, 0x08, 0x16, 0xAD, 0x02, 0x08
    .byte 0x16, 0xAD, 0x02, 0x08, 0x16, 0xAD, 0x02, 0x08, 0x16, 0xAD, 0x02, 0x08, 0x16, 0xAD, 0x02, 0x08
    .byte 0x16, 0xAD, 0x02, 0x08, 0x9C, 0xAB, 0x02, 0x08, 0xDA, 0xAB, 0x02, 0x08, 0xC0, 0xAC, 0x02, 0x08
    .byte 0xAC, 0xAC, 0x02, 0x08, 0x16, 0xAD, 0x02, 0x08, 0x00, 0x20, 0x60, 0x84, 0x1E, 0x20, 0xBB, 0xE0
    .byte 0x60, 0x8C, 0x01, 0x30, 0x00, 0x25, 0x60, 0x84, 0x00, 0x04, 0x00, 0x14, 0x21, 0x1C, 0x24, 0x31
    .byte 0x0A, 0x78, 0xD1, 0x00, 0x0B, 0x1C, 0x3C, 0x33, 0x98, 0x42, 0x0C, 0xDA, 0x11, 0x1C, 0x0F, 0x31
    .byte 0x09, 0x02, 0x22, 0x20, 0x22, 0x5E, 0x06, 0x20, 0x00, 0x90, 0x00, 0x20, 0xE3, 0xF7, 0xB2, 0xFE
    .byte 0x00, 0x02, 0xA0, 0x61, 0xA1, 0xE0, 0xA5, 0x61, 0x65, 0x84, 0x0D, 0x20, 0x9C, 0xE0, 0x2B, 0x4D
    .byte 0x28, 0x68, 0x2B, 0x4F, 0x78, 0x43, 0x2B, 0x49, 0x40, 0x18, 0x28, 0x60, 0x00, 0x0C, 0x2A, 0x49
    .byte 0x0E, 0x1C, 0x30, 0x40, 0x04, 0x21, 0x37, 0xF0, 0xC3, 0xF9, 0x00, 0x04, 0x03, 0x0C, 0x28, 0x68
    .byte 0x78, 0x43, 0x24, 0x49, 0x42, 0x18, 0x2A, 0x60, 0x10, 0x0C, 0x30, 0x40, 0x23, 0x49, 0x89, 0x46
    .byte 0x40, 0x04, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11, 0x20, 0x49, 0x88, 0x46
    .byte 0x41, 0x46, 0x08, 0x40, 0x80, 0x00, 0x48, 0x44, 0x01, 0x68, 0xD8, 0x1C, 0x48, 0x43, 0xC0, 0x13
    .byte 0xA0, 0x60, 0x10, 0x1C, 0x78, 0x43, 0x17, 0x49, 0x40, 0x18, 0x28, 0x60, 0x00, 0x0C, 0x30, 0x40
    .byte 0x04, 0x21, 0x37, 0xF0, 0x9D, 0xF9, 0x00, 0x04, 0x02, 0x0C, 0x28, 0x68, 0x78, 0x43, 0x11, 0x49
    .byte 0x40, 0x18, 0x28, 0x60, 0x00, 0x0C, 0x30, 0x40, 0x40, 0x04, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA
    .byte 0x3F, 0x30, 0x80, 0x11, 0x41, 0x46, 0x08, 0x40, 0x80, 0x00, 0x48, 0x44, 0x01, 0x68, 0xD0, 0x1C
    .byte 0x48, 0x43, 0xC0, 0x13, 0xE0, 0x60, 0x21, 0x20, 0x20, 0x84, 0x21, 0x1C, 0x24, 0x31, 0x08, 0x78
    .byte 0x09, 0x28, 0x0F, 0xD8, 0x01, 0x1C, 0x09, 0x20, 0x0E, 0xE0, 0x00, 0x00, 0xDC, 0xEB, 0x03, 0x02
    .byte 0x6D, 0x4E, 0xC6, 0x41, 0x39, 0x30, 0x00, 0x00, 0xFF, 0x7F, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08
    .byte 0xFF, 0x03, 0x00, 0x00, 0x09, 0x78, 0x1A, 0x20, 0x40, 0x1A, 0x40, 0x00, 0x60, 0x84, 0x34, 0xE0
    .byte 0x60, 0x8C, 0x01, 0x38, 0x60, 0x84, 0x00, 0x04, 0x00, 0x28, 0x2E, 0xDA, 0x00, 0x20, 0x60, 0x84
    .byte 0x20, 0x20, 0x29, 0xE0, 0x23, 0x68, 0x19, 0x1C, 0x17, 0x31, 0x8F, 0x20, 0x40, 0x00, 0x81, 0x42
    .byte 0x21, 0xD8, 0x62, 0x68, 0x18, 0x20, 0x40, 0x42, 0x82, 0x42, 0x1C, 0xDD, 0xB7, 0x2A, 0x1A, 0xDC
    .byte 0xA0, 0x68, 0x18, 0x18, 0x20, 0x60, 0xE0, 0x68, 0x10, 0x18, 0x60, 0x60, 0x21, 0x69, 0x04, 0x39
    .byte 0x21, 0x61, 0x60, 0x69, 0x04, 0x38, 0x60, 0x61, 0x7F, 0x29, 0x01, 0xDC, 0x80, 0x20, 0x20, 0x61
    .byte 0x60, 0x69, 0x7F, 0x28, 0x01, 0xDC, 0x80, 0x20, 0x60, 0x61, 0xE0, 0x69, 0x80, 0x21, 0xC9, 0x00
    .byte 0x40, 0x18, 0xE0, 0x61, 0x01, 0xE0, 0x22, 0x20, 0x20, 0x84
    _0802AD16:
    add sp, #0x004
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0xF0, 0xB5, 0x57, 0x46, 0x4E, 0x46, 0x45, 0x46, 0xE0, 0xB4, 0x83, 0xB0, 0x24, 0x48, 0x00, 0x68
    .byte 0x80, 0x46, 0xA2, 0x24, 0xA4, 0x00, 0x44, 0x44, 0x1A, 0x25, 0x20, 0x1C, 0xFF, 0xF7, 0xD0, 0xFE
    .byte 0x28, 0x34, 0x01, 0x3D, 0x00, 0x2D, 0xF8, 0xDA, 0x00, 0x25, 0x1E, 0x48, 0x81, 0x46, 0x80, 0x27
    .byte 0x7F, 0x00, 0x1D, 0x49, 0x8A, 0x46, 0x1D, 0x4E, 0x1A, 0x21, 0x49, 0x1B, 0x88, 0x00, 0x40, 0x18
    .byte 0xC0, 0x00, 0xA2, 0x22, 0x92, 0x00, 0x80, 0x18, 0x41, 0x46, 0x0C, 0x18, 0x22, 0x88, 0x18, 0x49
    .byte 0x02, 0x98, 0x08, 0x40, 0x10, 0x43, 0x02, 0x90, 0xA1, 0x88, 0x09, 0x04, 0x4A, 0x46, 0x10, 0x40
    .byte 0x08, 0x43, 0x02, 0x90, 0xA1, 0x69, 0x00, 0x29, 0x6F, 0xD0, 0x48, 0x46, 0x08, 0x40, 0x00, 0x12
    .byte 0x3F, 0x28, 0x21, 0xDC, 0x0F, 0x49, 0x00, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30
    .byte 0x80, 0x11, 0x38, 0x1A, 0x30, 0x40, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0x80, 0x21, 0x09, 0x02
    .byte 0x09, 0x1A, 0xC8, 0x00, 0x40, 0x1A, 0x00, 0x02, 0xC0, 0x13, 0xC0, 0x19, 0x54, 0xE0, 0x00, 0x00
    .byte 0xD8, 0xEB, 0x03, 0x02, 0xFF, 0xFF, 0x00, 0x00, 0xB4, 0xCC, 0x0D, 0x08, 0xFF, 0x03, 0x00, 0x00
    .byte 0x00, 0x00, 0xFF, 0xFF, 0x5C, 0x64, 0x0E, 0x08, 0x7F, 0x28, 0x17, 0xDC, 0x40, 0x38, 0x0A, 0x49
    .byte 0x00, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11, 0x30, 0x40, 0x80, 0x00
    .byte 0x40, 0x18, 0x01, 0x68, 0xC8, 0x00, 0x40, 0x1A, 0x00, 0x02, 0x40, 0x42, 0xC0, 0x13, 0x80, 0x21
    .byte 0x09, 0x01, 0x40, 0x18, 0x30, 0xE0, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0xBF, 0x28, 0x17, 0xDC
    .byte 0x80, 0x38, 0x0A, 0x49, 0x00, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11
    .byte 0x38, 0x1A, 0x30, 0x40, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0x80, 0x21, 0x09, 0x02, 0x09, 0x1A
    .byte 0xC8, 0x00, 0x40, 0x1A, 0x00, 0x02, 0xC0, 0x13, 0xC0, 0x19, 0x15, 0xE0, 0x5C, 0x64, 0x0E, 0x08
    .byte 0xC0, 0x38, 0x17, 0x49, 0x00, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11
    .byte 0x30, 0x40, 0x80, 0x00, 0x40, 0x18, 0x01, 0x68, 0xC8, 0x00, 0x40, 0x1A, 0x00, 0x02, 0x40, 0x42
    .byte 0xC0, 0x13, 0x80, 0x22, 0x12, 0x01, 0x80, 0x18, 0x20, 0x61, 0xA0, 0x69, 0x49, 0x46, 0x08, 0x40
    .byte 0x0C, 0x4A, 0x80, 0x18, 0x0C, 0x49, 0x88, 0x42, 0x1A, 0xD8, 0x1A, 0x21, 0x49, 0x1B, 0x48, 0x00
    .byte 0x40, 0x18, 0x80, 0x00, 0x09, 0x49, 0x40, 0x18, 0x00, 0x68, 0x22, 0x69, 0x63, 0x69, 0xE1, 0x69
    .byte 0x00, 0x91, 0x00, 0x21, 0x01, 0x91, 0x02, 0xA9, 0x04, 0xF0, 0xBE, 0xFD, 0x18, 0xE0, 0x00, 0x00
    .byte 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0xBF, 0xFF, 0xFF, 0xFE, 0x7F, 0x00, 0x00, 0xB8, 0xCC, 0x0D, 0x08
    .byte 0x1A, 0x21, 0x49, 0x1B, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x50, 0x44, 0x00, 0x68, 0x22, 0x69
    .byte 0x63, 0x69, 0xE1, 0x69, 0x00, 0x91, 0x00, 0x21, 0x01, 0x91, 0x02, 0xA9, 0x04, 0xF0, 0xA4, 0xFD
    .byte 0x01, 0x35, 0x1A, 0x2D, 0x00, 0xDC, 0x3F, 0xE7, 0x03, 0xB0, 0x38, 0xBC, 0x98, 0x46, 0xA1, 0x46
    .byte 0xAA, 0x46, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47
    thumb_func_start sub_802AEEC
    sub_802AEEC:
    push {r4, r5, r6, lr}
    add sp, #-0x004
    adds r4, r0, #0x0
    movs r1, #0x12
    ldsh r0, [r4, r1]
    cmp r0, #0x0D
    bls _0802AEFC
    b _0802B12C
    _0802AEFC:
    lsls r0, r0, #0x02
    ldr r1, _0802AF08 @ =0x0802AF0C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
    _0802AF08: .4byte 0x0802AF0C
    .byte 0x2C, 0xB1, 0x02, 0x08, 0x44, 0xAF, 0x02, 0x08, 0x4E, 0xAF, 0x02, 0x08, 0x64, 0xAF, 0x02, 0x08
    .byte 0xC2, 0xAF, 0x02, 0x08, 0xDA, 0xAF, 0x02, 0x08, 0xF2, 0xAF, 0x02, 0x08, 0x02, 0xB0, 0x02, 0x08
    .byte 0x1C, 0xB0, 0x02, 0x08, 0x4A, 0xB0, 0x02, 0x08, 0x5C, 0xB0, 0x02, 0x08, 0x78, 0xB0, 0x02, 0x08
    .byte 0xE8, 0xB0, 0x02, 0x08, 0x2C, 0xB1, 0x02, 0x08, 0x20, 0x7D, 0x80, 0x00, 0x20, 0x82, 0x02, 0x20
    .byte 0xED, 0xE0, 0x20, 0x8A, 0x01, 0x38, 0x20, 0x82, 0x00, 0x04, 0x00, 0x28, 0x00, 0xDB, 0xE7, 0xE0
    .byte 0x00, 0x20, 0x20, 0x82, 0x03, 0x20, 0xE2, 0xE0, 0x20, 0x8A, 0x01, 0x30, 0x00, 0x23, 0x20, 0x82
    .byte 0x00, 0x04, 0x00, 0x14, 0x5A, 0x28, 0x1B, 0xDC, 0x20, 0x7D, 0x81, 0x00, 0x09, 0x18, 0x03, 0x31
    .byte 0xC9, 0x00, 0x08, 0x1C, 0xD8, 0x30, 0x10, 0x25, 0x62, 0x5F, 0x00, 0x93, 0x5A, 0x23, 0xE3, 0xF7
    .byte 0xD1, 0xFC, 0x20, 0x60, 0x21, 0x8A, 0x01, 0x20, 0x08, 0x40, 0x02, 0x1C, 0x50, 0x32, 0x62, 0x60
    .byte 0x08, 0x20, 0x08, 0x40, 0x00, 0x04, 0x00, 0x14, 0xC0, 0x08, 0x10, 0x18, 0x60, 0x60, 0xB8, 0xE0
    .byte 0x21, 0x7D, 0x88, 0x00, 0x40, 0x18, 0x03, 0x30, 0xC0, 0x00, 0x20, 0x60, 0x50, 0x20, 0x60, 0x60
    .byte 0x23, 0x82, 0x04, 0x20, 0xB3, 0xE0, 0x20, 0x8A, 0x01, 0x30, 0x20, 0x82, 0x00, 0x04, 0x00, 0x14
    .byte 0x05, 0x28, 0x00, 0xDC, 0xAC, 0xE0, 0x00, 0x20, 0x20, 0x82, 0x05, 0x20, 0xA7, 0xE0, 0x20, 0x8A
    .byte 0x01, 0x30, 0x20, 0x82, 0x00, 0x04, 0x00, 0x14, 0x04, 0x28, 0x00, 0xDC, 0xA0, 0xE0, 0x00, 0x20
    .byte 0x20, 0x82, 0x06, 0x20, 0x9B, 0xE0, 0x20, 0x7D, 0xC0, 0x00, 0x00, 0x21, 0x20, 0x82, 0x07, 0x20
    .byte 0x60, 0x82, 0xE1, 0x60, 0x94, 0xE0, 0x05, 0x48, 0x41, 0x78, 0x20, 0x7D, 0x01, 0x30, 0x81, 0x42
    .byte 0x00, 0xDA, 0x8D, 0xE0, 0x00, 0x20, 0x20, 0x82, 0x08, 0x20, 0x88, 0xE0, 0xF0, 0x69, 0x00, 0x03
    .byte 0x20, 0x8A, 0x01, 0x30, 0x20, 0x82, 0x00, 0x04, 0x00, 0x14, 0x18, 0x28, 0x0B, 0xDC, 0x10, 0x20
    .byte 0x22, 0x5E, 0x0C, 0x20, 0x00, 0x90, 0xA8, 0x20, 0x80, 0x21, 0x18, 0x23, 0xE3, 0xF7, 0x7A, 0xFC
    .byte 0x00, 0x02, 0xA0, 0x60, 0x74, 0xE0, 0x00, 0x20, 0x20, 0x82, 0x09, 0x20, 0x6F, 0xE0, 0x03, 0x48
    .byte 0x40, 0x78, 0x05, 0x28, 0x6C, 0xD9, 0x0A, 0x20, 0x69, 0xE0, 0x00, 0x00, 0xF0, 0x69, 0x00, 0x03
    .byte 0xA0, 0x68, 0xE1, 0x68, 0x40, 0x1A, 0xA0, 0x60, 0x03, 0x48, 0x81, 0x42, 0x60, 0xDC, 0x08, 0x1C
    .byte 0x30, 0x30, 0xE0, 0x60, 0x5C, 0xE0, 0x00, 0x00, 0xFF, 0x2F, 0x00, 0x00, 0x00, 0x20, 0x20, 0x82
    .byte 0x0C, 0x20, 0x60, 0x82, 0x14, 0x48, 0x15, 0x49, 0x40, 0x18, 0x00, 0x68, 0x14, 0x4A, 0x4C, 0x30
    .byte 0x01, 0x78, 0x07, 0x20, 0x08, 0x40, 0x80, 0x00, 0x81, 0x18, 0x0C, 0x88, 0x02, 0x32, 0x80, 0x18
    .byte 0x06, 0x88, 0x20, 0x1C, 0x34, 0xF0, 0x3E, 0xFF, 0x0E, 0x4D, 0x0F, 0x48, 0xE4, 0x00, 0x24, 0x18
    .byte 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x35, 0xF0, 0x2A, 0xF8
    .byte 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x01, 0x21, 0x32, 0x1C
    .byte 0x35, 0xF0, 0xD8, 0xFE, 0x2C, 0xE0, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03, 0x18, 0x08, 0x00, 0x00
    .byte 0x58, 0xCE, 0x0D, 0x08, 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08, 0x20, 0x8A, 0x01, 0x30
    .byte 0x00, 0x23, 0x20, 0x82, 0x00, 0x04, 0x00, 0x14, 0x30, 0x28, 0x16, 0xDC, 0x40, 0x21, 0x49, 0x42
    .byte 0x10, 0x25, 0x62, 0x5F, 0x00, 0x93, 0xF0, 0x20, 0x30, 0x23, 0xE3, 0xF7, 0x13, 0xFC, 0x20, 0x60
    .byte 0x62, 0x68, 0x21, 0x8A, 0x01, 0x20, 0x08, 0x40, 0x51, 0x1E, 0x00, 0x28, 0x00, 0xD0, 0x51, 0x1C
    .byte 0x61, 0x60, 0xC0, 0x20, 0x00, 0x02, 0xA0, 0x60, 0x02, 0xE0, 0x23, 0x82, 0x0D, 0x20, 0x60, 0x82
    _0802B12C:
    add sp, #0x004
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    thumb_func_start sub_802B134
    sub_802B134:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x00C
    ldr r0, _0802B1F0 @ =0x0203EBD8
    ldr r7, [r0, #0x00]
    ldr r0, _0802B1F4 @ =0x03002E20
    adds r0, #0x24
    mov r8, r0
    movs r6, #0x00
    movs r0, #0xD8
    lsls r0, r0, #0x03
    adds r5, r7, r0
    _0802B152:
    lsls r1, r6, #0x02
    ldr r0, _0802B1F8 @ =0x000007F4
    add r0, r8
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    adds r0, r5, #0x0
    bl sub_802AEEC
    ldr r0, [r5, #0x08]
    adds r4, #0x56
    strh r0, [r4, #0x00]
    adds r5, #0x18
    adds r6, #0x01
    cmp r6, #0x04
    ble _0802B152
    ldr r0, _0802B1F4 @ =0x03002E20
    ldr r0, [r0, #0x10]
    mov r10, r0
    movs r6, #0x00
    ldr r0, _0802B1FC @ =0x00000824
    add r0, r8
    mov r9, r0
    movs r0, #0xD8
    lsls r0, r0, #0x03
    adds r5, r7, r0
    _0802B184:
    lsls r1, r6, #0x02
    ldr r0, _0802B1F8 @ =0x000007F4
    add r0, r8
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    ldr r7, _0802B1F4 @ =0x03002E20
    movs r0, #0x07
    ands r0, r6
    str r0, [r7, #0x10]
    adds r0, r4, #0x0
    bl sub_803CA78
    adds r2, r0, #0x0
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    adds r0, r4, #0x0
    mov r1, r9
    bl sub_803CD50
    ldrh r3, [r5, #0x00]
    ldr r2, _0802B200 @ =0xFFFF0000
    ldr r1, [sp, #0x008]
    ands r1, r2
    orrs r1, r3
    str r1, [sp, #0x008]
    ldrh r3, [r5, #0x04]
    lsls r3, r3, #0x10
    ldr r2, _0802B204 @ =0x0000FFFF
    ands r1, r2
    orrs r1, r3
    str r1, [sp, #0x008]
    movs r1, #0x00
    str r1, [sp, #0x000]
    str r1, [sp, #0x004]
    add r1, sp, #0x008
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    adds r5, #0x18
    adds r6, #0x01
    cmp r6, #0x04
    ble _0802B184
    mov r0, r10
    str r0, [r7, #0x10]
    add sp, #0x00C
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _0802B1F0: .4byte 0x0203EBD8
    _0802B1F4: .4byte 0x03002E20
    _0802B1F8: .4byte 0x000007F4
    _0802B1FC: .4byte 0x00000824
    _0802B200: .4byte 0xFFFF0000
    _0802B204: .4byte 0x0000FFFF
    .byte 0xF0, 0xB5, 0x47, 0x46, 0x80, 0xB4, 0x84, 0xB0, 0x24, 0x48, 0x07, 0x68, 0x24, 0x4A, 0x16, 0x1C
    .byte 0x24, 0x36, 0x24, 0x48, 0x00, 0x21, 0x01, 0x80, 0x04, 0x30, 0x01, 0x80, 0x22, 0x49, 0x3E, 0x20
    .byte 0x08, 0x80, 0x02, 0x31, 0x20, 0x20, 0x08, 0x80, 0xB0, 0x46, 0x00, 0x25, 0x1F, 0x48, 0x12, 0x18
    .byte 0x12, 0x78, 0x95, 0x42, 0x24, 0xDA, 0x29, 0x06, 0x09, 0x0E, 0x30, 0x1C, 0x1F, 0xF0, 0x46, 0xFE
    .byte 0x04, 0x1C, 0x03, 0xA8, 0x00, 0x90, 0x40, 0x46, 0x29, 0x1C, 0x01, 0xAA, 0x02, 0xAB, 0x07, 0xF0
    .byte 0x23, 0xFC, 0x01, 0x99, 0x02, 0x9A, 0x03, 0x98, 0x00, 0x90, 0x20, 0x1C, 0x00, 0x23, 0x12, 0xF0
    .byte 0x57, 0xFA, 0x20, 0x1C, 0x31, 0x1C, 0x10, 0xF0, 0x61, 0xFE, 0xA1, 0x8E, 0x01, 0x20, 0x08, 0x43
    .byte 0xA0, 0x86, 0x01, 0x35, 0xFE, 0x21, 0xC9, 0x00, 0x70, 0x18, 0x00, 0x78, 0x85, 0x42, 0xDA, 0xDB
    .byte 0x07, 0x48, 0x10, 0x21, 0x0A, 0x4A, 0x80, 0x18, 0x01, 0x60, 0x00, 0x20, 0x38, 0x60, 0x78, 0x60
    .byte 0x04, 0xB0, 0x08, 0xBC, 0x98, 0x46, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0xD8, 0xEB, 0x03, 0x02
    .byte 0x20, 0x2E, 0x00, 0x03, 0x40, 0x00, 0x00, 0x04, 0x48, 0x00, 0x00, 0x04, 0x14, 0x08, 0x00, 0x00
    .byte 0x08, 0x0C, 0x00, 0x00
    thumb_func_start sub_802B2BC
    sub_802B2BC:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x00C
    ldr r5, _0802B59C @ =0x03002E20
    adds r5, #0x24
    bl m4aMPlayAllStop
    bl main_frameProc
    bl m4aSoundVSyncOff
    movs r6, #0x00
    movs r0, #0x01
    movs r1, #0x02
    negs r1, r1
    bl irq_updateMask
    ldr r0, _0802B59C @ =0x03002E20
    str r6, [r0, #0x0C]
    movs r0, #0x02
    ldr r1, _0802B5A0 @ =0x00010001
    bl irq_updateMask
    movs r0, #0xA0
    lsls r0, r0, #0x13
    strh r6, [r0, #0x00]
    movs r4, #0x80
    lsls r4, r4, #0x13
    strh r6, [r4, #0x00]
    ldrh r1, [r4, #0x00]
    ldr r0, _0802B5A4 @ =0x00009FFF
    ands r0, r1
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x06
    adds r1, r2, #0x0
    orrs r0, r1
    strh r0, [r4, #0x00]
    ldr r0, _0802B5A8 @ =0x04000040
    ldr r2, _0802B5AC @ =0x0000FFFF
    adds r1, r2, #0x0
    strh r1, [r0, #0x00]
    adds r0, #0x04
    strh r1, [r0, #0x00]
    adds r0, #0x04
    strh r6, [r0, #0x00]
    ldr r1, _0802B5B0 @ =0x0400004A
    movs r0, #0x20
    strh r0, [r1, #0x00]
    ldr r0, _0802B5B4 @ =0x04000054
    strh r6, [r0, #0x00]
    ldr r0, _0802B59C @ =0x03002E20
    str r6, [r0, #0x10]
    bl oam_init
    str r6, [sp, #0x000]
    ldr r2, _0802B5B8 @ =0x01006000
    mov r0, sp
    movs r1, #0xC0
    lsls r1, r1, #0x13
    bl CpuFastSet
    bl pltt_clearBuffer
    ldr r1, _0802B5BC @ =0x06003800
    movs r0, #0x00
    bl map_setBufferDestination
    ldr r1, _0802B5C0 @ =0x06003000
    movs r0, #0x01
    bl map_setBufferDestination
    ldr r0, _0802B5C4 @ =0x080DCEE8
    movs r1, #0x18
    bl main_configureIoRegs
    ldr r2, _0802B5C8 @ =0x04000008
    ldrb r1, [r2, #0x00]
    movs r0, #0x7F
    ands r0, r1
    strb r0, [r2, #0x00]
    ldrb r1, [r2, #0x01]
    movs r0, #0x3F
    mov r9, r0
    ands r0, r1
    strb r0, [r2, #0x01]
    ldrb r1, [r2, #0x00]
    movs r0, #0x04
    negs r0, r0
    ands r0, r1
    strb r0, [r2, #0x00]
    ldrb r1, [r2, #0x00]
    movs r7, #0x41
    negs r7, r7
    adds r0, r7, #0x0
    ands r0, r1
    strb r0, [r2, #0x00]
    ldrb r1, [r2, #0x00]
    movs r0, #0x0D
    negs r0, r0
    mov r10, r0
    ands r0, r1
    strb r0, [r2, #0x00]
    ldrb r1, [r2, #0x01]
    movs r0, #0x20
    negs r0, r0
    mov r8, r0
    ands r0, r1
    movs r1, #0x07
    orrs r0, r1
    strb r0, [r2, #0x01]
    adds r2, #0x02
    ldrb r1, [r2, #0x00]
    movs r0, #0x7F
    ands r0, r1
    strb r0, [r2, #0x00]
    ldrb r1, [r2, #0x01]
    mov r0, r9
    ands r0, r1
    strb r0, [r2, #0x01]
    ldrb r0, [r2, #0x00]
    movs r1, #0x03
    orrs r0, r1
    strb r0, [r2, #0x00]
    ldrb r1, [r2, #0x00]
    adds r0, r7, #0x0
    ands r0, r1
    strb r0, [r2, #0x00]
    ldrb r1, [r2, #0x00]
    mov r0, r10
    ands r0, r1
    movs r1, #0x04
    orrs r0, r1
    strb r0, [r2, #0x00]
    ldrb r1, [r2, #0x01]
    mov r0, r8
    ands r0, r1
    movs r1, #0x0F
    orrs r0, r1
    strb r0, [r2, #0x01]
    ldr r1, _0802B5CC @ =0x00003741
    adds r0, r1, #0x0
    strh r0, [r4, #0x00]
    adds r0, r5, #0x0
    bl sub_8048D44
    bl main_frameProc
    adds r0, r5, #0x0
    bl sub_804AE08
    bl main_frameProc
    movs r0, #0x00
    bl pltt_getBuffer
    strh r6, [r0, #0x00]
    ldr r0, _0802B5D0 @ =0x080C2FA8
    ldr r4, _0802B5D4 @ =0x02020400
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl dmaq_getVBlankDmaQueue
    ldr r2, _0802B5D8 @ =0x06012800
    ldr r3, _0802B5DC @ =0x80000200
    adds r1, r4, #0x0
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    movs r2, #0x80
    lsls r2, r2, #0x03
    adds r1, r4, r2
    ldr r2, _0802B5E0 @ =0x06013000
    ldr r3, _0802B5E4 @ =0x80000600
    bl dmaq_enqueue
    bl main_frameProc
    ldr r0, _0802B5E8 @ =0x080A97F8
    adds r1, r4, #0x0
    bl LZ77UnCompWram
    bl main_frameProc
    ldr r0, _0802B5EC @ =0x080A9E2C
    movs r2, #0xC0
    lsls r2, r2, #0x05
    adds r1, r4, r2
    bl LZ77UnCompWram
    bl main_frameProc
    ldr r0, _0802B5F0 @ =0x080AA56C
    movs r2, #0xC0
    lsls r2, r2, #0x06
    adds r1, r4, r2
    bl LZ77UnCompWram
    bl main_frameProc
    bl dmaq_getVBlankDmaQueue
    ldr r3, _0802B5F4 @ =0x80000C00
    adds r1, r4, #0x0
    movs r2, #0xC0
    lsls r2, r2, #0x13
    bl dmaq_enqueue
    bl main_frameProc
    bl dmaq_getVBlankDmaQueue
    ldr r4, _0802B5F8 @ =0x08063834
    ldr r2, _0802B5FC @ =0x06002A00
    ldr r5, _0802B600 @ =0x80000100
    adds r1, r4, #0x0
    adds r3, r5, #0x0
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    movs r1, #0x80
    lsls r1, r1, #0x02
    adds r4, r4, r1
    ldr r2, _0802B604 @ =0x06002E00
    adds r1, r4, #0x0
    adds r3, r5, #0x0
    bl dmaq_enqueue
    bl main_frameProc
    ldr r4, _0802B608 @ =0x080C2F88
    movs r0, #0x01
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r1, #0x80
    adds r0, r4, #0x0
    movs r2, #0x08
    bl CpuFastSet
    ldr r4, _0802B60C @ =0x080C38B4
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r2, #0xC0
    lsls r2, r2, #0x01
    adds r1, r1, r2
    adds r0, r4, #0x0
    movs r2, #0x20
    bl CpuFastSet
    movs r0, #0x01
    bl pltt_setDirtyFlag
    str r6, [sp, #0x004]
    add r4, sp, #0x004
    movs r0, #0x00
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    ldr r5, _0802B610 @ =0x01000200
    adds r0, r4, #0x0
    adds r2, r5, #0x0
    bl CpuFastSet
    str r6, [sp, #0x008]
    add r4, sp, #0x008
    movs r0, #0x01
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    adds r2, r5, #0x0
    bl CpuFastSet
    movs r0, #0x03
    bl map_setBufferDirty
    ldr r1, _0802B5C8 @ =0x04000008
    ldrb r0, [r1, #0x00]
    movs r2, #0x7F
    ands r2, r0
    strb r2, [r1, #0x00]
    ldrb r0, [r1, #0x01]
    mov r2, r9
    ands r2, r0
    movs r0, #0x40
    orrs r2, r0
    strb r2, [r1, #0x01]
    ldrb r0, [r1, #0x00]
    movs r2, #0x04
    negs r2, r2
    ands r2, r0
    strb r2, [r1, #0x00]
    ldrb r0, [r1, #0x00]
    adds r2, r7, #0x0
    ands r2, r0
    strb r2, [r1, #0x00]
    ldrb r0, [r1, #0x00]
    mov r2, r10
    ands r2, r0
    strb r2, [r1, #0x00]
    ldrb r0, [r1, #0x01]
    mov r2, r8
    ands r2, r0
    movs r0, #0x06
    orrs r2, r0
    strb r2, [r1, #0x01]
    ldr r0, _0802B614 @ =0x04000010
    strh r6, [r0, #0x00]
    adds r0, #0x02
    strh r6, [r0, #0x00]
    movs r0, #0x01
    bl pltt_setDirtyFlag
    ldr r1, _0802B59C @ =0x03002E20
    ldr r2, _0802B618 @ =0x00000C7C
    adds r0, r1, r2
    str r6, [r0, #0x00]
    bl sub_805A7C0
    ldr r0, _0802B61C @ =0x0203EBD8
    ldr r0, [r0, #0x00]
    ldr r1, _0802B620 @ =0x00000DD8
    adds r0, r0, r1
    str r6, [r0, #0x00]
    ldr r1, _0802B624 @ =0x0802BAB1
    movs r0, #0x18
    bl vcount_register
    ldr r4, _0802B628 @ =0x0802BA25
    movs r0, #0x01
    movs r1, #0x02
    negs r1, r1
    bl irq_updateMask
    ldr r2, _0802B59C @ =0x03002E20
    str r4, [r2, #0x0C]
    movs r0, #0x02
    ldr r1, _0802B5A0 @ =0x00010001
    bl irq_updateMask
    ldr r1, _0802B62C @ =0x00010004
    movs r0, #0x02
    bl irq_updateMask
    bl m4aSoundVSyncOn
    add sp, #0x00C
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    _0802B59C: .4byte 0x03002E20
    _0802B5A0: .4byte 0x00010001
    _0802B5A4: .4byte 0x00009FFF
    _0802B5A8: .4byte 0x04000040
    _0802B5AC: .4byte 0x0000FFFF
    _0802B5B0: .4byte 0x0400004A
    _0802B5B4: .4byte 0x04000054
    _0802B5B8: .4byte 0x01006000
    _0802B5BC: .4byte 0x06003800
    _0802B5C0: .4byte 0x06003000
    _0802B5C4: .4byte 0x080DCEE8
    _0802B5C8: .4byte 0x04000008
    _0802B5CC: .4byte 0x00003741
    _0802B5D0: .4byte 0x080C2FA8
    _0802B5D4: .4byte 0x02020400
    _0802B5D8: .4byte 0x06012800
    _0802B5DC: .4byte 0x80000200
    _0802B5E0: .4byte 0x06013000
    _0802B5E4: .4byte 0x80000600
    _0802B5E8: .4byte 0x080A97F8
    _0802B5EC: .4byte 0x080A9E2C
    _0802B5F0: .4byte 0x080AA56C
    _0802B5F4: .4byte 0x80000C00
    _0802B5F8: .4byte 0x08063834
    _0802B5FC: .4byte 0x06002A00
    _0802B600: .4byte 0x80000100
    _0802B604: .4byte 0x06002E00
    _0802B608: .4byte 0x080C2F88
    _0802B60C: .4byte 0x080C38B4
    _0802B610: .4byte 0x01000200
    _0802B614: .4byte 0x04000010
    _0802B618: .4byte 0x00000C7C
    _0802B61C: .4byte 0x0203EBD8
    _0802B620: .4byte 0x00000DD8
    _0802B624: .4byte sub_802BAB0
    _0802B628: .4byte sub_802BA24
    _0802B62C: .4byte 0x00010004
    thumb_func_start sub_802B630
    sub_802B630:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x018
    ldr r4, _0802B688 @ =0x03002E20
    movs r0, #0x24
    adds r0, r0, r4
    mov r9, r0
    bl sub_8048C74
    ldr r2, _0802B68C @ =0x000007FE
    adds r1, r4, r2
    ldr r0, _0802B690 @ =0x00000181
    strh r0, [r1, #0x00]
    ldr r0, _0802B694 @ =0x0203EC34
    ldr r0, [r0, #0x00]
    movs r1, #0x80
    lsls r1, r1, #0x04
    adds r4, r4, r1
    strb r0, [r4, #0x00]
    ldr r0, _0802B698 @ =0x0203EC38
    ldr r1, [r0, #0x00]
    mov r0, r9
    movs r2, #0x01
    bl sub_804AE58
    ldr r0, _0802B69C @ =0x0203EC3C
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bne _0802B6A4
    ldr r4, _0802B6A0 @ =0x080DC524
    bl main_getRandom
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0802B680
    adds r0, #0x0F
    _0802B680:
    asrs r0, r0, #0x04
    movs r1, #0x0C
    b _0802B6B8
    .byte 0x00, 0x00
    _0802B688: .4byte 0x03002E20
    _0802B68C: .4byte 0x000007FE
    _0802B690: .4byte 0x00000181
    _0802B694: .4byte 0x0203EC34
    _0802B698: .4byte 0x0203EC38
    _0802B69C: .4byte 0x0203EC3C
    _0802B6A0: .4byte 0x080DC524
    _0802B6A4:
    ldr r4, _0802B7D4 @ =0x080DC554
    bl main_getRandom
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0802B6B4
    adds r0, #0x0F
    _0802B6B4:
    asrs r0, r0, #0x04
    movs r1, #0x12
    _0802B6B8:
    bl __umodsi3
    lsls r0, r0, #0x02
    adds r0, r0, r4
    ldr r1, [r0, #0x00]
    ldr r0, _0802B7D8 @ =0x000007DD
    add r0, r9
    movs r5, #0x00
    strb r1, [r0, #0x00]
    movs r0, #0xDC
    lsls r0, r0, #0x03
    add r0, r9
    ldr r2, _0802B7DC @ =0x00000DE8
    movs r1, #0x01
    bl frmheap_calloc
    adds r4, r0, #0x0
    ldr r0, _0802B7E0 @ =0x0203EBD8
    str r4, [r0, #0x00]
    bl sub_8002C24
    ldr r2, _0802B7E4 @ =0x00000DD4
    adds r4, r4, r2
    str r0, [r4, #0x00]
    movs r0, #0x00
    bl sub_8002C30
    ldr r0, _0802B7E8 @ =0x0203EBDC
    str r5, [r0, #0x00]
    bl sub_802B2BC
    add r2, sp, #0x00C
    add r3, sp, #0x010
    add r0, sp, #0x014
    str r0, [sp, #0x000]
    mov r0, r9
    movs r1, #0x07
    bl sub_8032AA0
    movs r4, #0x00
    movs r0, #0xFE
    lsls r0, r0, #0x03
    add r0, r9
    ldrb r0, [r0, #0x00]
    cmp r4, r0
    bge _0802B748
    movs r6, #0x00
    ldr r0, _0802B7EC @ =0x0000FFFE
    adds r5, r0, #0x0
    _0802B71A:
    lsls r1, r4, #0x18
    lsrs r1, r1, #0x18
    mov r0, r9
    bl sub_804AED4
    ldrh r1, [r0, #0x34]
    ands r1, r5
    strh r1, [r0, #0x34]
    ldr r1, [sp, #0x00C]
    str r1, [r0, #0x00]
    ldr r1, [sp, #0x010]
    str r1, [r0, #0x04]
    str r6, [r0, #0x08]
    movs r1, #0x80
    lsls r1, r1, #0x01
    strh r1, [r0, #0x24]
    adds r4, #0x01
    movs r0, #0xFE
    lsls r0, r0, #0x03
    add r0, r9
    ldrb r0, [r0, #0x00]
    cmp r4, r0
    blt _0802B71A
    _0802B748:
    ldr r0, _0802B7F0 @ =0x000007F4
    add r0, r9
    ldr r2, [r0, #0x00]
    ldr r0, [r2, #0x48]
    movs r1, #0x39
    negs r1, r1
    ands r0, r1
    ldr r1, _0802B7F4 @ =0x00002030
    orrs r0, r1
    str r0, [r2, #0x48]
    ldr r6, _0802B7F8 @ =0x03002E20
    movs r1, #0xFF
    lsls r1, r1, #0x03
    adds r2, r6, r1
    ldrb r1, [r2, #0x00]
    movs r0, #0xF0
    ands r0, r1
    movs r1, #0x06
    movs r4, #0x00
    orrs r0, r1
    strb r0, [r2, #0x00]
    ldr r5, _0802B7E0 @ =0x0203EBD8
    ldr r0, [r5, #0x00]
    movs r1, #0x01
    str r1, [r0, #0x00]
    str r1, [r0, #0x04]
    ldr r2, _0802B7FC @ =0x00000DDC
    adds r0, r0, r2
    str r4, [r0, #0x00]
    ldr r1, _0802B800 @ =0x080DCE78
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
    ldr r0, [r5, #0x00]
    movs r2, #0xDE
    lsls r2, r2, #0x04
    adds r1, r0, r2
    str r4, [r1, #0x00]
    ldr r1, _0802B804 @ =0x00000DE4
    adds r0, r0, r1
    str r4, [r0, #0x00]
    movs r0, #0x36
    bl m4aSongNumStart
    mov r10, r6
    _0802B7A4:
    bl oam_update
    bl main_frameProc
    ldr r0, _0802B7E0 @ =0x0203EBD8
    ldr r1, [r0, #0x00]
    ldr r2, _0802B7FC @ =0x00000DDC
    adds r0, r1, r2
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0802B7BC
    b _0802B9A0
    _0802B7BC:
    adds r7, r1, #0x0
    ldr r0, _0802B804 @ =0x00000DE4
    adds r0, r0, r7
    mov r8, r0
    ldr r6, [r0, #0x00]
    cmp r6, #0x01
    beq _0802B880
    cmp r6, #0x01
    bgt _0802B808
    cmp r6, #0x00
    beq _0802B80E
    b _0802B90E
    _0802B7D4: .4byte 0x080DC554
    _0802B7D8: .4byte 0x000007DD
    _0802B7DC: .4byte 0x00000DE8
    _0802B7E0: .4byte 0x0203EBD8
    _0802B7E4: .4byte 0x00000DD4
    _0802B7E8: .4byte 0x0203EBDC
    _0802B7EC: .4byte 0x0000FFFE
    _0802B7F0: .4byte 0x000007F4
    _0802B7F4: .4byte 0x00002030
    _0802B7F8: .4byte 0x03002E20
    _0802B7FC: .4byte 0x00000DDC
    _0802B800: .4byte 0x080DCE78
    _0802B804: .4byte 0x00000DE4
    _0802B808:
    cmp r6, #0x02
    beq _0802B8DC
    b _0802B90E
    _0802B80E:
    movs r1, #0xDE
    lsls r1, r1, #0x04
    adds r0, r7, r1
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0802B90E
    movs r0, #0x02
    bl main_checkKeysTriggered
    cmp r0, #0x00
    beq _0802B90E
    ldr r2, _0802B874 @ =0x03004F70
    ldrb r1, [r2, #0x0C]
    movs r0, #0x7F
    ands r0, r1
    strb r0, [r2, #0x0C]
    movs r0, #0x11
    ldr r2, _0802B878 @ =0x03003A28
    str r0, [r2, #0x00]
    str r6, [sp, #0x004]
    movs r0, #0x00
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    ldr r5, _0802B87C @ =0x01000200
    add r0, sp, #0x004
    adds r2, r5, #0x0
    bl CpuFastSet
    str r6, [sp, #0x008]
    add r4, sp, #0x008
    movs r0, #0x01
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    adds r2, r5, #0x0
    bl CpuFastSet
    movs r0, #0x03
    bl map_setBufferDirty
    mov r1, r8
    ldr r0, [r1, #0x00]
    adds r0, #0x01
    b _0802B90C
    .byte 0x00, 0x00
    _0802B874: .4byte 0x03004F70
    _0802B878: .4byte 0x03003A28
    _0802B87C: .4byte 0x01000200
    _0802B880:
    ldr r5, _0802B8C8 @ =0x03004F70
    ldrb r1, [r5, #0x0C]
    movs r2, #0x02
    adds r0, r2, #0x0
    ands r0, r1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    cmp r4, #0x00
    bne _0802B90E
    mov r0, r8
    str r2, [r0, #0x00]
    ldr r1, _0802B8CC @ =0x00000DD8
    adds r0, r7, r1
    str r4, [r0, #0x00]
    movs r0, #0x00
    bl pltt_getBuffer
    strh r4, [r0, #0x00]
    movs r0, #0x01
    bl pltt_setDirtyFlag
    ldr r0, _0802B8D0 @ =0x080306FD
    str r0, [r5, #0x04]
    ldr r0, _0802B8D4 @ =0x08030739
    str r0, [r5, #0x00]
    str r4, [r5, #0x08]
    strb r6, [r5, #0x0E]
    bl trns_start
    ldr r0, _0802B8D8 @ =0x08102414
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    bl m4aMPlayFadeOut
    b _0802B90E
    .byte 0x00, 0x00
    _0802B8C8: .4byte 0x03004F70
    _0802B8CC: .4byte 0x00000DD8
    _0802B8D0: .4byte trns_initDefaultOutTransition
    _0802B8D4: .4byte trns_applyDefaultOutTransition
    _0802B8D8: .4byte 0x08102414
    _0802B8DC:
    ldr r0, _0802B93C @ =0x03004F70
    ldrb r0, [r0, #0x0C]
    ands r6, r0
    cmp r6, #0x00
    bne _0802B90E
    ldr r0, _0802B940 @ =0x0000000B
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x00
    beq _0802B906
    ldr r5, _0802B944 @ =0x08102414
    adds r4, r0, #0x0
    _0802B8F4:
    ldr r0, [r5, #0x00]
    ldr r1, _0802B948 @ =0x08102498
    ldr r1, [r1, #0x08]
    bl MPlayStart
    adds r5, #0x0C
    subs r4, #0x01
    cmp r4, #0x00
    bne _0802B8F4
    _0802B906:
    ldr r2, _0802B94C @ =0x00000DDC
    adds r1, r7, r2
    movs r0, #0x01
    _0802B90C:
    str r0, [r1, #0x00]
    _0802B90E:
    mov r1, r10
    ldr r0, [r1, #0x10]
    adds r0, #0x01
    str r0, [r1, #0x10]
    ldr r4, _0802B950 @ =0x0203EBD8
    ldr r0, [r4, #0x00]
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bne _0802B954
    mov r0, r9
    bl sub_804978C
    mov r0, r9
    bl sub_804AEFC
    ldr r0, [r4, #0x00]
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bne _0802B954
    mov r0, r9
    bl sub_8049850
    b _0802B970
    _0802B93C: .4byte 0x03004F70
    _0802B940: .4byte 0x0000000B
    _0802B944: .4byte 0x08102414
    _0802B948: .4byte 0x08102498
    _0802B94C: .4byte 0x00000DDC
    _0802B950: .4byte 0x0203EBD8
    _0802B954:
    ldr r0, _0802B998 @ =0x00000724
    add r0, r9
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0802B970
    _0802B95E:
    ldr r4, [r0, #0x3C]
    ldr r1, [r0, #0x14]
    cmp r1, #0x00
    beq _0802B96A
    bl _call_via_r1
    _0802B96A:
    adds r0, r4, #0x0
    cmp r0, #0x00
    bne _0802B95E
    _0802B970:
    mov r0, r9
    bl sub_804C0A8
    ldr r0, _0802B99C @ =0x0203EBD8
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x04]
    cmp r0, #0x00
    bne _0802B986
    mov r0, r9
    bl sub_8049B0C
    _0802B986:
    mov r0, r9
    bl sub_8049D78
    mov r0, r9
    bl sub_804C38C
    bl sub_804389C
    b _0802B7A4
    _0802B998: .4byte 0x00000724
    _0802B99C: .4byte 0x0203EBD8
    _0802B9A0:
    movs r2, #0x00
    str r2, [sp, #0x004]
    add r0, sp, #0x004
    ldr r1, _0802BA10 @ =0x02020400
    ldr r2, _0802BA14 @ =0x01001400
    bl CpuFastSet
    mov r0, r9
    bl sub_8002BFC
    ldr r0, _0802BA18 @ =0x080021CD
    mov r1, r10
    str r0, [r1, #0x00]
    ldrb r0, [r1, #0x08]
    adds r0, #0x01
    movs r1, #0x07
    ands r0, r1
    mov r2, r10
    strb r0, [r2, #0x08]
    movs r1, #0x80
    lsls r1, r1, #0x13
    movs r2, #0x80
    lsls r2, r2, #0x06
    adds r0, r2, #0x0
    strh r0, [r1, #0x00]
    movs r0, #0x01
    movs r1, #0x07
    negs r1, r1
    bl irq_updateMask
    movs r0, #0x01
    movs r1, #0x02
    negs r1, r1
    bl irq_updateMask
    movs r0, #0x00
    mov r1, r10
    str r0, [r1, #0x0C]
    movs r0, #0x02
    ldr r1, _0802BA1C @ =0x00010001
    bl irq_updateMask
    ldr r1, _0802BA20 @ =0x0802D5F1
    movs r0, #0x01
    bl irq_setHandler
    movs r0, #0x01
    add sp, #0x018
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    _0802BA10: .4byte 0x02020400
    _0802BA14: .4byte 0x01001400
    _0802BA18: .4byte spm_main
    _0802BA1C: .4byte 0x00010001
    _0802BA20: .4byte main_dummyIrqHandler
    thumb_func_start sub_802BA24
    sub_802BA24:
    push {r4, r5, r6, lr}
    ldr r4, _0802BA60 @ =0x03002E20
    adds r6, r4, #0x0
    adds r6, #0x24
    ldr r0, _0802BA64 @ =0x00000848
    adds r5, r4, r0
    adds r0, r5, #0x0
    bl sub_80312E8
    ldr r1, _0802BA68 @ =0x00000BC8
    adds r4, r4, r1
    ldr r2, [r4, #0x00]
    movs r0, #0x14
    ldsh r1, [r5, r0]
    adds r0, r6, #0x0
    bl sub_804AD00
    ldr r0, _0802BA6C @ =0x0203EBD8
    ldr r0, [r0, #0x00]
    ldr r1, _0802BA70 @ =0x00000DD8
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0802BA5A
    ldr r1, _0802BA74 @ =0x0400004A
    movs r0, #0x31
    strh r0, [r1, #0x00]
    _0802BA5A:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    _0802BA60: .4byte 0x03002E20
    _0802BA64: .4byte 0x00000848
    _0802BA68: .4byte 0x00000BC8
    _0802BA6C: .4byte 0x0203EBD8
    _0802BA70: .4byte 0x00000DD8
    _0802BA74: .4byte 0x0400004A
    .byte 0x81, 0x6E, 0x03, 0x48, 0x40, 0x78, 0x88, 0x42, 0x04, 0xDB, 0x01, 0x20, 0x03, 0xE0, 0x00, 0x00
    .byte 0xF0, 0x69, 0x00, 0x03, 0x00, 0x20, 0x70, 0x47
    thumb_func_start sub_802BA90
    sub_802BA90:
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldrh r1, [r2, #0x00]
    ldr r0, _0802BAAC @ =0x00009FFF
    ands r0, r1
    strh r0, [r2, #0x00]
    ldrh r0, [r2, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x06
    adds r1, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    bx lr
    .byte 0x00, 0x00
    _0802BAAC: .4byte 0x00009FFF
    thumb_func_start sub_802BAB0
    sub_802BAB0:
    add sp, #-0x004
    ldr r0, _0802BABC @ =0x0203EBD8
    ldr r2, [r0, #0x00]
    movs r0, #0x00
    b _0802BAC4
    .byte 0x00, 0x00
    _0802BABC: .4byte 0x0203EBD8
    _0802BAC0:
    ldr r0, [sp, #0x000]
    adds r0, #0x01
    _0802BAC4:
    str r0, [sp, #0x000]
    ldr r0, [sp, #0x000]
    cmp r0, #0x31
    ble _0802BAC0
    ldr r1, _0802BAE8 @ =0x00000DD8
    adds r0, r2, r1
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0802BAE2
    ldr r1, _0802BAEC @ =0x04000010
    ldr r0, [r2, #0x10]
    strh r0, [r1, #0x00]
    adds r1, #0x3A
    movs r0, #0x21
    strh r0, [r1, #0x00]
    _0802BAE2:
    add sp, #0x004
    bx lr
    .byte 0x00, 0x00
    _0802BAE8: .4byte 0x00000DD8
    _0802BAEC: .4byte 0x04000010
    .byte 0x00, 0xB5, 0x0A, 0x48, 0x00, 0x68, 0x00, 0x22, 0x02, 0x61, 0x09, 0x49, 0x40, 0x18, 0x01, 0x21
    .byte 0x01, 0x60, 0x08, 0x48, 0x08, 0x49, 0x48, 0x60, 0x08, 0x48, 0x08, 0x60, 0x8A, 0x60, 0x02, 0x20
    .byte 0x88, 0x73, 0x04, 0xF0, 0x8D, 0xFD, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0xD8, 0xEB, 0x03, 0x02
    .byte 0xD8, 0x0D, 0x00, 0x00, 0x91, 0xBA, 0x02, 0x08, 0x70, 0x4F, 0x00, 0x03, 0x39, 0x9C, 0x02, 0x08
    .byte 0x03, 0x48, 0x01, 0x7B, 0x80, 0x20, 0x08, 0x40, 0x00, 0x06, 0x00, 0x0E, 0x70, 0x47, 0x00, 0x00
    .byte 0x70, 0x4F, 0x00, 0x03, 0x05, 0x48, 0x00, 0x68, 0x00, 0x21, 0x81, 0x60, 0xC1, 0x60, 0xDE, 0x21
    .byte 0x09, 0x01, 0x40, 0x18, 0x01, 0x21, 0x01, 0x60, 0x70, 0x47, 0x00, 0x00, 0xD8, 0xEB, 0x03, 0x02
    .byte 0x10, 0xB5, 0x0C, 0x48, 0x00, 0x68, 0x04, 0x1C, 0xC1, 0x68, 0x00, 0x29, 0x08, 0xD1, 0xA1, 0x22
    .byte 0x92, 0x00, 0x80, 0x18, 0x01, 0x60, 0x08, 0x49, 0x00, 0x20, 0x00, 0x22, 0x04, 0xF0, 0x52, 0xFB
    .byte 0xA0, 0x68, 0xE1, 0x68, 0xFE, 0xF7, 0x58, 0xF9, 0x01, 0x20, 0x02, 0xF0, 0xB7, 0xFD, 0x10, 0xBC
    .byte 0x01, 0xBC, 0x00, 0x47, 0xD8, 0xEB, 0x03, 0x02, 0xD8, 0xC8, 0x0D, 0x08, 0x30, 0xB5, 0x03, 0x1C
    .byte 0x0C, 0x48, 0x02, 0x68, 0x9C, 0x6E, 0x01, 0x25, 0xD0, 0x68, 0x00, 0x28, 0x0D, 0xD1, 0x9F, 0x21
    .byte 0x89, 0x00, 0x50, 0x18, 0x01, 0x68, 0x01, 0x39, 0xC8, 0x00, 0x40, 0x1A, 0x80, 0x00, 0x10, 0x18
    .byte 0x28, 0x21, 0x40, 0x5E, 0x07, 0x28, 0x00, 0xD0, 0x00, 0x25, 0x9C, 0x66, 0x28, 0x1C, 0x30, 0xBC
    .byte 0x02, 0xBC, 0x08, 0x47, 0xD8, 0xEB, 0x03, 0x02, 0x10, 0xB5, 0x04, 0x1C, 0x0B, 0x48, 0x02, 0x68
    .byte 0x0B, 0x49, 0x90, 0x68, 0xC0, 0x00, 0x40, 0x18, 0x03, 0x68, 0xD1, 0x68, 0x88, 0x00, 0x40, 0x18
    .byte 0x80, 0x00, 0xD9, 0x68, 0x09, 0x18, 0xA2, 0x6E, 0x01, 0x32, 0x00, 0x20, 0x49, 0x78, 0x8A, 0x42
    .byte 0x00, 0xDD, 0x01, 0x20, 0xA2, 0x66, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0xD8, 0xEB, 0x03, 0x02
    .byte 0x58, 0xDE, 0x0D, 0x08, 0x03, 0x1C, 0x07, 0x48, 0x01, 0x68, 0x07, 0x4A, 0x88, 0x68, 0xC0, 0x00
    .byte 0x80, 0x18, 0x00, 0x68, 0x42, 0x7A, 0xC8, 0x68, 0x01, 0x30, 0xC8, 0x60, 0x90, 0x42, 0x05, 0xDA
    .byte 0x01, 0x20, 0x04, 0xE0, 0xD8, 0xEB, 0x03, 0x02, 0x58, 0xDE, 0x0D, 0x08, 0x00, 0x20, 0x98, 0x66
    .byte 0x70, 0x47, 0x00, 0x00, 0xF0, 0xB5, 0x05, 0x1C, 0x0D, 0x48, 0x02, 0x68, 0xAB, 0x6E, 0x0D, 0x49
    .byte 0x94, 0x68, 0xE0, 0x00, 0x04, 0x31, 0x40, 0x18, 0x06, 0x68, 0x00, 0x21, 0x10, 0x2C, 0x15, 0xDC
    .byte 0xA1, 0x27, 0xBF, 0x00, 0xD0, 0x19, 0x00, 0x68, 0x00, 0x28, 0x17, 0xD0, 0x01, 0x33, 0xB3, 0x42
    .byte 0x0A, 0xDD, 0xD1, 0x60, 0x60, 0x1C, 0x90, 0x60, 0x01, 0x20, 0xA8, 0x66, 0x0D, 0xE0, 0x00, 0x00
    .byte 0xD8, 0xEB, 0x03, 0x02, 0x58, 0xDE, 0x0D, 0x08, 0xAB, 0x66, 0x07, 0xE0, 0xA1, 0x23, 0x9B, 0x00
    .byte 0xD0, 0x18, 0x00, 0x68, 0x00, 0x28, 0x01, 0xD0, 0xA9, 0x66, 0x01, 0x21, 0x08, 0x1C, 0xF0, 0xBC
    .byte 0x02, 0xBC, 0x08, 0x47, 0x30, 0xB5, 0x82, 0xB0, 0x15, 0x48, 0x00, 0x68, 0xDE, 0x21, 0x09, 0x01
    .byte 0x40, 0x18, 0x00, 0x24, 0x04, 0x60, 0x00, 0x94, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x02, 0xF0
    .byte 0xF7, 0xFC, 0x01, 0x1C, 0x0F, 0x4D, 0x68, 0x46, 0x2A, 0x1C, 0x35, 0xF0, 0x3F, 0xFB, 0x01, 0x94
    .byte 0x01, 0xAC, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x02, 0xF0, 0xEA, 0xFC, 0x01, 0x1C, 0x20, 0x1C
    .byte 0x2A, 0x1C, 0x35, 0xF0, 0x33, 0xFB, 0x03, 0x20, 0x02, 0xF0, 0x08, 0xFD, 0x06, 0x48, 0x11, 0x21
    .byte 0x06, 0x4A, 0x80, 0x18, 0x01, 0x60, 0x02, 0xB0, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0xD8, 0xEB, 0x03, 0x02, 0x00, 0x02, 0x00, 0x01, 0x20, 0x2E, 0x00, 0x03, 0x08, 0x0C, 0x00, 0x00
    .byte 0x02, 0x4A, 0x11, 0x7B, 0x7F, 0x20, 0x08, 0x40, 0x10, 0x73, 0x70, 0x47, 0x70, 0x4F, 0x00, 0x03
    .byte 0x04, 0x48, 0x01, 0x7B, 0x02, 0x20, 0x08, 0x40, 0x00, 0x21, 0x00, 0x28, 0x00, 0xD1, 0x01, 0x21
    .byte 0x08, 0x1C, 0x70, 0x47, 0x70, 0x4F, 0x00, 0x03, 0xF0, 0xB5, 0x47, 0x46, 0x80, 0xB4, 0x07, 0x1C
    .byte 0xB8, 0x6E, 0x80, 0x46, 0x00, 0x22, 0x12, 0x48, 0x01, 0x7B, 0x02, 0x20, 0x08, 0x40, 0x00, 0x28
    .byte 0x16, 0xD1, 0x10, 0x48, 0x06, 0x68, 0x10, 0x48, 0x00, 0x06, 0x00, 0x0E, 0x82, 0x42, 0x0A, 0xDA
    .byte 0x0E, 0x4D, 0x04, 0x1C, 0x28, 0x68, 0x0E, 0x49, 0x89, 0x68, 0x34, 0xF0, 0x4F, 0xFC, 0x0C, 0x35
    .byte 0x01, 0x3C, 0x00, 0x2C, 0xF6, 0xD1, 0x0B, 0x48, 0x31, 0x18, 0x01, 0x20, 0x08, 0x60, 0x01, 0x22
    .byte 0x40, 0x46, 0xB8, 0x66, 0x10, 0x1C, 0x08, 0xBC, 0x98, 0x46, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47
    .byte 0x70, 0x4F, 0x00, 0x03, 0xD8, 0xEB, 0x03, 0x02, 0x0B, 0x00, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08
    .byte 0x98, 0x24, 0x10, 0x08, 0xDC, 0x0D, 0x00, 0x00, 0x10, 0xB5, 0x08, 0x49, 0x0C, 0x68, 0x80, 0x23
    .byte 0xDB, 0x04, 0x1A, 0x88, 0x06, 0x49, 0x11, 0x40, 0x19, 0x80, 0x80, 0x21, 0x49, 0x00, 0x21, 0x61
    .byte 0x00, 0x21, 0x01, 0x67, 0x41, 0x67, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0xD8, 0xEB, 0x03, 0x02
    .byte 0xFF, 0x9F, 0x00, 0x00, 0x00, 0xB5, 0x03, 0x49, 0x00, 0x20, 0x00, 0x22, 0x04, 0xF0, 0x22, 0xFA
    .byte 0x01, 0xBC, 0x00, 0x47, 0x54, 0xCC, 0x0D, 0x08, 0x00, 0xB5, 0x03, 0x49, 0x00, 0x20, 0x00, 0x22
    .byte 0x04, 0xF0, 0x18, 0xFA, 0x01, 0xBC, 0x00, 0x47, 0x74, 0xCC, 0x0D, 0x08, 0x30, 0xB5, 0x0F, 0x49
    .byte 0x0C, 0x68, 0x82, 0x6E, 0x00, 0x23, 0x91, 0x00, 0x0D, 0x4D, 0x60, 0x19, 0x41, 0x18, 0x08, 0x68
    .byte 0x83, 0x42, 0x0F, 0xDA, 0xD0, 0x00, 0x80, 0x18, 0x80, 0x00, 0x80, 0x1A, 0x0A, 0x1C, 0x00, 0x01
    .byte 0x01, 0x19, 0x08, 0x4D, 0x08, 0x24, 0x48, 0x19, 0x04, 0x80, 0x1C, 0x31, 0x01, 0x33, 0x10, 0x68
    .byte 0x83, 0x42, 0xF8, 0xDB, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0xD8, 0xEB, 0x03, 0x02
    .byte 0xC8, 0x0D, 0x00, 0x00, 0x4C, 0x07, 0x00, 0x00, 0x00, 0x21, 0x81, 0x66, 0x70, 0x47, 0x00, 0x00
    .byte 0xF0, 0xB5, 0x14, 0x48, 0x01, 0x68, 0x00, 0x24, 0x13, 0x48, 0x80, 0x26, 0x76, 0x00, 0x00, 0x25
    .byte 0x03, 0x1C, 0x08, 0x33, 0xAB, 0x20, 0x80, 0x00, 0x0A, 0x18, 0xA2, 0x27, 0xBF, 0x00, 0xC9, 0x19
    .byte 0x00, 0x27, 0xD8, 0x5F, 0x78, 0x30, 0x08, 0x60, 0x02, 0x27, 0xD8, 0x5F, 0x50, 0x30, 0x48, 0x60
    .byte 0x4E, 0x61, 0x0E, 0x61, 0xCD, 0x61, 0x8D, 0x61, 0x01, 0x20, 0x08, 0x84, 0x4D, 0x84, 0x14, 0x70
    .byte 0x0C, 0x33, 0x28, 0x32, 0x28, 0x31, 0x01, 0x34, 0x1A, 0x2C, 0xE9, 0xDD, 0xF0, 0xBC, 0x01, 0xBC
    .byte 0x00, 0x47, 0x00, 0x00, 0xD8, 0xEB, 0x03, 0x02, 0xB4, 0xCC, 0x0D, 0x08, 0x00, 0xB5, 0x03, 0x49
    .byte 0x00, 0x20, 0x00, 0x22, 0x04, 0xF0, 0xB6, 0xF9, 0x01, 0xBC, 0x00, 0x47, 0xC8, 0xCE, 0x0D, 0x08
    .byte 0x06, 0x48, 0x00, 0x68, 0x1F, 0x22, 0x1A, 0x21, 0xD3, 0x23, 0xDB, 0x00, 0xC0, 0x18, 0x02, 0x84
    .byte 0x28, 0x38, 0x01, 0x39, 0x00, 0x29, 0xFA, 0xDA, 0x70, 0x47, 0x00, 0x00, 0xD8, 0xEB, 0x03, 0x02
    .byte 0x10, 0xB5, 0x0C, 0x48, 0x00, 0x68, 0x00, 0x21, 0xA0, 0x23, 0x5B, 0x00, 0x00, 0x22, 0xD8, 0x24
    .byte 0xE4, 0x00, 0x00, 0x19, 0x03, 0x60, 0x43, 0x60, 0x02, 0x82, 0x42, 0x82, 0x01, 0x75, 0x18, 0x30
    .byte 0x01, 0x31, 0x04, 0x29, 0xF6, 0xDD, 0x04, 0x49, 0x30, 0x20, 0x08, 0x80, 0x10, 0xBC, 0x01, 0xBC
    .byte 0x00, 0x47, 0x00, 0x00, 0xD8, 0xEB, 0x03, 0x02, 0x4A, 0x00, 0x00, 0x04, 0x06, 0x49, 0x09, 0x68
    .byte 0x82, 0x6E, 0xDB, 0x20, 0xC0, 0x00, 0x09, 0x18, 0x03, 0x20, 0x4A, 0x82, 0x18, 0x31, 0x01, 0x38
    .byte 0x00, 0x28, 0xFA, 0xDA, 0x70, 0x47, 0x00, 0x00, 0xD8, 0xEB, 0x03, 0x02, 0x30, 0xB5, 0x0D, 0x48
    .byte 0x04, 0x68, 0x00, 0x23, 0xA0, 0x21, 0x49, 0x00, 0x00, 0x20, 0xD8, 0x25, 0xED, 0x00, 0x62, 0x19
    .byte 0x11, 0x60, 0x51, 0x60, 0x10, 0x82, 0x50, 0x82, 0x13, 0x75, 0x18, 0x32, 0x01, 0x33, 0x04, 0x2B
    .byte 0xF6, 0xDD, 0xD8, 0x20, 0xC0, 0x00, 0x21, 0x18, 0x0B, 0x20, 0x48, 0x82, 0x30, 0xBC, 0x01, 0xBC
    .byte 0x00, 0x47, 0x00, 0x00, 0xD8, 0xEB, 0x03, 0x02
    thumb_func_start sub_802BF78
    sub_802BF78:
    ldr r3, _0802BF88 @ =0x0203EC34
    str r0, [r3, #0x00]
    ldr r0, _0802BF8C @ =0x0203EC38
    str r1, [r0, #0x00]
    ldr r0, _0802BF90 @ =0x0203EC3C
    str r2, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
    _0802BF88: .4byte 0x0203EC34
    _0802BF8C: .4byte 0x0203EC38
    _0802BF90: .4byte 0x0203EC3C
    thumb_func_start sub_802BF94
    sub_802BF94:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r1, _0802BFD4 @ =0x000007D4
    adds r0, r4, r1
    ldrb r1, [r0, #0x00]
    movs r0, #0x40
    ands r0, r1
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #0x00
    bne _0802C05A
    ldr r2, _0802BFD8 @ =0x000007D6
    adds r0, r4, r2
    strb r1, [r0, #0x00]
    ldr r1, _0802BFDC @ =0x000007DA
    adds r0, r4, r1
    ldrh r2, [r0, #0x00]
    movs r1, #0xF0
    lsls r1, r1, #0x04
    ands r1, r2
    movs r0, #0x80
    lsls r0, r0, #0x02
    cmp r1, r0
    beq _0802C01C
    cmp r1, r0
    bgt _0802BFE0
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    beq _0802BFEA
    b _0802C048
    .byte 0x00, 0x00
    _0802BFD4: .4byte 0x000007D4
    _0802BFD8: .4byte 0x000007D6
    _0802BFDC: .4byte 0x000007DA
    _0802BFE0:
    movs r0, #0x80
    lsls r0, r0, #0x03
    cmp r1, r0
    beq _0802C040
    b _0802C048
    _0802BFEA:
    movs r0, #0x10
    ands r0, r2
    cmp r0, #0x00
    beq _0802C004
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r2
    cmp r0, #0x00
    beq _0802C048
    ldr r1, _0802C000 @ =0x080DDF4C
    b _0802C04A
    _0802C000: .4byte 0x080DDF4C
    _0802C004:
    bl sub_8002C3C
    cmp r0, #0x00
    beq _0802C014
    ldr r1, _0802C010 @ =0x080DDEF4
    b _0802C04A
    _0802C010: .4byte 0x080DDEF4
    _0802C014:
    ldr r1, _0802C018 @ =0x080DDF04
    b _0802C04A
    _0802C018: .4byte 0x080DDF04
    _0802C01C:
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r2
    cmp r0, #0x00
    beq _0802C048
    movs r0, #0x80
    lsls r0, r0, #0x07
    ands r0, r2
    cmp r0, #0x00
    beq _0802C038
    ldr r1, _0802C034 @ =0x080DDF38
    b _0802C04A
    _0802C034: .4byte 0x080DDF38
    _0802C038:
    ldr r1, _0802C03C @ =0x080DDF4C
    b _0802C04A
    _0802C03C: .4byte 0x080DDF4C
    _0802C040:
    ldr r1, _0802C044 @ =0x080DDF28
    b _0802C04A
    _0802C044: .4byte 0x080DDF28
    _0802C048:
    ldr r1, _0802C060 @ =0x080DDF18
    _0802C04A:
    ldr r0, _0802C064 @ =0x03002C78
    str r1, [r0, #0x00]
    ldr r0, _0802C068 @ =0x000007D4
    adds r2, r4, r0
    ldrb r1, [r2, #0x00]
    movs r0, #0x40
    orrs r0, r1
    strb r0, [r2, #0x00]
    _0802C05A:
    pop {r4}
    pop {r0}
    bx r0
    _0802C060: .4byte 0x080DDF18
    _0802C064: .4byte 0x03002C78
    _0802C068: .4byte 0x000007D4
    thumb_func_start sub_802C06C
    sub_802C06C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x044
    str r0, [sp, #0x004]
    movs r0, #0x01
    str r0, [sp, #0x008]
    ldr r1, [sp, #0x004]
    ldr r2, _0802C09C @ =0x000007D6
    adds r5, r1, r2
    ldrb r4, [r5, #0x00]
    cmp r4, #0x02
    bne _0802C08C
    b _0802C46C
    _0802C08C:
    cmp r4, #0x02
    bgt _0802C0A0
    cmp r4, #0x00
    beq _0802C0AE
    cmp r4, #0x01
    beq _0802C124
    b _0802C7DC
    .byte 0x00, 0x00
    _0802C09C: .4byte 0x000007D6
    _0802C0A0:
    cmp r4, #0x03
    bne _0802C0A6
    b _0802C6EC
    _0802C0A6:
    cmp r4, #0x64
    bne _0802C0AC
    b _0802C6FA
    _0802C0AC:
    b _0802C7DC
    _0802C0AE:
    ldr r0, _0802C10C @ =0x030001A4
    strh r4, [r0, #0x00]
    movs r0, #0x00
    bl pltt_getBuffer
    ldr r1, _0802C110 @ =0x02004000
    movs r2, #0x80
    lsls r2, r2, #0x01
    bl CpuFastSet
    str r4, [sp, #0x000]
    movs r0, #0x01
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    ldr r2, _0802C114 @ =0x01000140
    mov r0, sp
    bl CpuFastSet
    movs r0, #0x02
    bl map_setBufferDirty
    bl sub_802CB7C
    ldr r3, _0802C118 @ =0x08102414
    ldr r2, _0802C11C @ =0x08102498
    movs r6, #0xD5
    lsls r6, r6, #0x02
    adds r0, r2, r6
    ldrh r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r3
    ldr r0, [r0, #0x00]
    movs r7, #0x8E
    lsls r7, r7, #0x03
    adds r2, r2, r7
    ldr r1, [r2, #0x00]
    bl MPlayStart
    ldr r0, _0802C120 @ =0x030001A6
    strh r4, [r0, #0x00]
    b _0802C6F2
    .byte 0x00, 0x00
    _0802C10C: .4byte 0x030001A4
    _0802C110: .4byte 0x02004000
    _0802C114: .4byte 0x01000140
    _0802C118: .4byte 0x08102414
    _0802C11C: .4byte 0x08102498
    _0802C120: .4byte 0x030001A6
    _0802C124:
    ldr r2, _0802C1B0 @ =0x030001A6
    movs r0, #0x00
    ldsh r3, [r2, r0]
    cmp r3, #0x00
    beq _0802C130
    b _0802C284
    _0802C130:
    ldr r2, _0802C1B4 @ =0x04000008
    ldrh r0, [r2, #0x00]
    strh r3, [r2, #0x00]
    ldrh r0, [r2, #0x00]
    movs r3, #0xC0
    lsls r3, r3, #0x03
    adds r1, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    movs r4, #0x00
    bl sub_802DC88
    cmp r0, #0x00
    beq _0802C154
    bl sub_802DCB4
    cmp r0, #0x00
    bne _0802C156
    _0802C154:
    movs r4, #0x01
    _0802C156:
    cmp r4, #0x00
    beq _0802C22C
    ldr r6, [sp, #0x004]
    ldr r7, _0802C1B8 @ =0x000007DA
    adds r5, r6, r7
    ldrh r1, [r5, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0802C1E0
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0802C1BC @ =0x080AAE3C
    movs r2, #0xC0
    lsls r2, r2, #0x13
    ldr r3, _0802C1C0 @ =0x80000400
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0802C1C4 @ =0x080AB9BC
    ldr r2, _0802C1C8 @ =0x06000800
    ldr r4, _0802C1CC @ =0x800000E0
    adds r3, r4, #0x0
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0802C1D0 @ =0x080ABB7C
    ldr r2, _0802C1D4 @ =0x060009C0
    adds r3, r4, #0x0
    bl dmaq_enqueue
    ldrh r1, [r5, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x07
    ands r0, r1
    cmp r0, #0x00
    beq _0802C24A
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0802C1D8 @ =0x080ABD3C
    ldr r2, _0802C1DC @ =0x06000080
    b _0802C208
    _0802C1B0: .4byte 0x030001A6
    _0802C1B4: .4byte 0x04000008
    _0802C1B8: .4byte 0x000007DA
    _0802C1BC: .4byte 0x080AAE3C
    _0802C1C0: .4byte 0x80000400
    _0802C1C4: .4byte 0x080AB9BC
    _0802C1C8: .4byte 0x06000800
    _0802C1CC: .4byte 0x800000E0
    _0802C1D0: .4byte 0x080ABB7C
    _0802C1D4: .4byte 0x060009C0
    _0802C1D8: .4byte 0x080ABD3C
    _0802C1DC: .4byte 0x06000080
    _0802C1E0:
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0802C210 @ =0x080AAE3C
    movs r2, #0xC0
    lsls r2, r2, #0x13
    ldr r3, _0802C214 @ =0x80000400
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0802C218 @ =0x080AB63C
    ldr r2, _0802C21C @ =0x06000800
    ldr r4, _0802C220 @ =0x800000E0
    adds r3, r4, #0x0
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0802C224 @ =0x080AD6FC
    ldr r2, _0802C228 @ =0x060009C0
    _0802C208:
    adds r3, r4, #0x0
    bl dmaq_enqueue
    b _0802C24A
    _0802C210: .4byte 0x080AAE3C
    _0802C214: .4byte 0x80000400
    _0802C218: .4byte 0x080AB63C
    _0802C21C: .4byte 0x06000800
    _0802C220: .4byte 0x800000E0
    _0802C224: .4byte 0x080AD6FC
    _0802C228: .4byte 0x060009C0
    _0802C22C:
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0802C26C @ =0x080AAE3C
    movs r2, #0xC0
    lsls r2, r2, #0x13
    ldr r3, _0802C270 @ =0x80000230
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0802C274 @ =0x080AD8BC
    ldr r2, _0802C278 @ =0x06000080
    ldr r3, _0802C27C @ =0x800000E0
    bl dmaq_enqueue
    _0802C24A:
    ldr r4, _0802C280 @ =0x080AACF0
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r0, #0xE0
    lsls r0, r0, #0x01
    adds r1, r1, r0
    adds r0, r4, #0x0
    movs r2, #0x10
    bl CpuFastSet
    movs r0, #0x01
    bl pltt_setDirtyFlag
    b _0802C7D4
    .byte 0x00, 0x00
    _0802C26C: .4byte 0x080AAE3C
    _0802C270: .4byte 0x80000230
    _0802C274: .4byte 0x080AD8BC
    _0802C278: .4byte 0x06000080
    _0802C27C: .4byte 0x800000E0
    _0802C280: .4byte 0x080AACF0
    _0802C284:
    ldr r0, _0802C328 @ =0x03002C78
    ldr r1, [r0, #0x00]
    ldrb r0, [r1, #0x02]
    lsrs r0, r0, #0x01
    mov r10, r0
    ldrb r0, [r1, #0x03]
    lsrs r0, r0, #0x01
    mov r9, r0
    ldrb r0, [r1, #0x00]
    add r0, r10
    str r0, [sp, #0x00C]
    ldrb r0, [r1, #0x01]
    add r0, r9
    str r0, [sp, #0x010]
    cmp r3, #0x08
    ble _0802C2A6
    b _0802C3B4
    _0802C2A6:
    movs r3, #0x00
    ldsh r1, [r2, r3]
    mov r0, r10
    muls r0, r1
    cmp r0, #0x00
    bge _0802C2B4
    adds r0, #0x07
    _0802C2B4:
    asrs r2, r0, #0x03
    mov r0, r9
    muls r0, r1
    cmp r0, #0x00
    bge _0802C2C0
    adds r0, #0x07
    _0802C2C0:
    mov r8, r2
    asrs r7, r0, #0x03
    movs r0, #0x01
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    str r0, [sp, #0x014]
    movs r0, #0x00
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    str r0, [sp, #0x018]
    cmp r8, r10
    ble _0802C2E2
    mov r8, r10
    _0802C2E2:
    cmp r7, r9
    ble _0802C2E8
    mov r7, r9
    _0802C2E8:
    movs r5, #0x00
    lsls r0, r7, #0x01
    cmp r5, r0
    bge _0802C39C
    mov r6, r8
    lsls r6, r6, #0x01
    str r6, [sp, #0x030]
    str r0, [sp, #0x024]
    _0802C2F8:
    movs r4, #0x00
    adds r0, r5, #0x1
    str r0, [sp, #0x034]
    ldr r1, [sp, #0x030]
    cmp r4, r1
    bge _0802C394
    ldr r2, [sp, #0x00C]
    add r2, r10
    str r2, [sp, #0x01C]
    str r1, [sp, #0x03C]
    ldr r3, [sp, #0x010]
    add r3, r9
    str r3, [sp, #0x020]
    ldr r6, [sp, #0x024]
    subs r6, r5, r6
    mov r12, r6
    _0802C318:
    cmp r4, r8
    bge _0802C32C
    ldr r1, [sp, #0x00C]
    mov r2, r10
    subs r0, r1, r2
    adds r1, r0, r4
    b _0802C334
    .byte 0x00, 0x00
    _0802C328: .4byte 0x03002C78
    _0802C32C:
    ldr r3, [sp, #0x03C]
    subs r0, r4, r3
    ldr r6, [sp, #0x01C]
    adds r1, r6, r0
    _0802C334:
    cmp r5, r7
    bge _0802C342
    ldr r2, [sp, #0x010]
    mov r3, r9
    subs r0, r2, r3
    adds r3, r0, r5
    b _0802C346
    _0802C342:
    ldr r3, [sp, #0x020]
    add r3, r12
    _0802C346:
    cmp r1, #0x00
    blt _0802C38C
    cmp r3, #0x00
    blt _0802C38C
    cmp r1, #0x1F
    bgt _0802C38C
    cmp r3, #0x1F
    bgt _0802C38C
    ldr r6, [sp, #0x00C]
    mov r2, r8
    subs r0, r6, r2
    adds r2, r0, r4
    ldr r6, [sp, #0x010]
    subs r0, r6, r7
    adds r0, r0, r5
    cmp r2, #0x00
    blt _0802C38C
    cmp r0, #0x00
    blt _0802C38C
    cmp r2, #0x1F
    bgt _0802C38C
    cmp r0, #0x1F
    bgt _0802C38C
    lsls r2, r2, #0x01
    lsls r0, r0, #0x06
    ldr r6, [sp, #0x014]
    adds r0, r0, r6
    adds r2, r2, r0
    lsls r1, r1, #0x01
    lsls r0, r3, #0x06
    ldr r3, [sp, #0x018]
    adds r0, r0, r3
    adds r1, r1, r0
    ldrh r0, [r1, #0x00]
    strh r0, [r2, #0x00]
    _0802C38C:
    adds r4, #0x01
    ldr r6, [sp, #0x03C]
    cmp r4, r6
    blt _0802C318
    _0802C394:
    ldr r5, [sp, #0x034]
    ldr r0, [sp, #0x024]
    cmp r5, r0
    blt _0802C2F8
    _0802C39C:
    movs r0, #0x02
    bl map_setBufferDirty
    ldr r1, _0802C3B0 @ =0x030001A6
    ldrh r0, [r1, #0x00]
    adds r0, #0x01
    strh r0, [r1, #0x00]
    bl sub_802CEA4
    b _0802C7DC
    _0802C3B0: .4byte 0x030001A6
    _0802C3B4:
    ldr r1, [sp, #0x004]
    ldr r2, _0802C3D0 @ =0x000007DA
    adds r0, r1, r2
    ldrh r1, [r0, #0x00]
    movs r0, #0x88
    lsls r0, r0, #0x01
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x01
    cmp r0, r1
    bne _0802C42E
    movs r7, #0x00
    b _0802C420
    .byte 0x00, 0x00
    _0802C3D0: .4byte 0x000007DA
    _0802C3D4:
    lsls r6, r7, #0x01
    movs r5, #0x1B
    subs r5, r5, r6
    movs r0, #0x01
    adds r1, r5, #0x0
    movs r2, #0x12
    bl map_getBufferPtr2d
    ldr r3, _0802C450 @ =0x0000B0A0
    adds r1, r3, #0x0
    strh r1, [r0, #0x00]
    movs r4, #0x1C
    subs r4, r4, r6
    movs r0, #0x01
    adds r1, r4, #0x0
    movs r2, #0x12
    bl map_getBufferPtr2d
    ldr r6, _0802C454 @ =0x0000B0A1
    adds r1, r6, #0x0
    strh r1, [r0, #0x00]
    movs r0, #0x01
    adds r1, r5, #0x0
    movs r2, #0x13
    bl map_getBufferPtr2d
    ldr r2, _0802C458 @ =0x0000B0A2
    adds r1, r2, #0x0
    strh r1, [r0, #0x00]
    movs r0, #0x01
    adds r1, r4, #0x0
    movs r2, #0x13
    bl map_getBufferPtr2d
    ldr r3, _0802C45C @ =0x0000B0A3
    adds r1, r3, #0x0
    strh r1, [r0, #0x00]
    adds r7, #0x01
    _0802C420:
    bl sub_8002C3C
    cmp r7, r0
    blt _0802C3D4
    movs r0, #0x02
    bl map_setBufferDirty
    _0802C42E:
    ldr r0, _0802C460 @ =0x030001A4
    movs r6, #0x00
    ldsh r1, [r0, r6]
    ldr r0, [sp, #0x004]
    bl sub_802CF78
    ldr r1, _0802C464 @ =0x030001A6
    movs r0, #0x00
    strh r0, [r1, #0x00]
    ldr r7, [sp, #0x004]
    ldr r0, _0802C468 @ =0x000007D6
    adds r1, r7, r0
    ldrb r0, [r1, #0x00]
    adds r0, #0x01
    strb r0, [r1, #0x00]
    b _0802C7DC
    .byte 0x00, 0x00
    _0802C450: .4byte 0x0000B0A0
    _0802C454: .4byte 0x0000B0A1
    _0802C458: .4byte 0x0000B0A2
    _0802C45C: .4byte 0x0000B0A3
    _0802C460: .4byte 0x030001A4
    _0802C464: .4byte 0x030001A6
    _0802C468: .4byte 0x000007D6
    _0802C46C:
    movs r1, #0x00
    str r1, [sp, #0x028]
    bl sub_802DC88
    cmp r0, #0x00
    beq _0802C480
    bl sub_802DCB4
    cmp r0, #0x00
    bne _0802C484
    _0802C480:
    movs r2, #0x01
    str r2, [sp, #0x028]
    _0802C484:
    ldr r0, _0802C588 @ =0x03002C78
    ldr r0, [r0, #0x00]
    str r0, [sp, #0x02C]
    movs r0, #0x00
    bl pltt_getBuffer
    movs r6, #0xE0
    lsls r6, r6, #0x01
    adds r3, r0, r6
    ldr r1, _0802C58C @ =0x030001A6
    ldrh r0, [r1, #0x00]
    adds r0, #0x01
    strh r0, [r1, #0x00]
    movs r7, #0x00
    ldsh r0, [r1, r7]
    ldr r2, _0802C590 @ =0x080E645C
    lsls r0, r0, #0x1A
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0802C4AE
    adds r0, #0x3F
    _0802C4AE:
    asrs r1, r0, #0x06
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r1
    ldr r1, _0802C594 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    subs r0, r0, r1
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r0, r0, #0x01
    mov r8, r0
    ldr r0, _0802C598 @ =0x080AAD3C
    movs r1, #0x1F
    mov r9, r1
    movs r6, #0x1F
    str r3, [sp, #0x040]
    adds r2, r0, #0x0
    adds r2, #0x40
    str r2, [sp, #0x038]
    mov r12, r0
    movs r3, #0x0F
    mov r10, r3
    _0802C4E4:
    mov r7, r12
    ldrh r1, [r7, #0x00]
    adds r2, r1, #0x0
    ands r2, r6
    lsrs r4, r1, #0x05
    mov r0, r9
    ands r4, r0
    lsrs r1, r1, #0x0A
    ands r1, r0
    ldr r7, [sp, #0x038]
    ldrh r3, [r7, #0x00]
    adds r0, r3, #0x0
    ands r0, r6
    lsrs r5, r3, #0x05
    mov r7, r9
    ands r5, r7
    lsrs r3, r3, #0x0A
    ands r3, r7
    subs r0, r0, r2
    mov r7, r8
    muls r7, r0
    adds r0, r7, #0x0
    asrs r0, r0, #0x0F
    adds r2, r2, r0
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    subs r5, r5, r4
    mov r0, r8
    muls r0, r5
    asrs r0, r0, #0x0F
    adds r4, r4, r0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    subs r3, r3, r1
    mov r0, r8
    muls r0, r3
    asrs r0, r0, #0x0F
    adds r1, r1, r0
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    ands r2, r6
    ands r4, r6
    lsls r4, r4, #0x05
    orrs r2, r4
    ands r1, r6
    lsls r1, r1, #0x0A
    orrs r2, r1
    ldr r0, [sp, #0x040]
    strh r2, [r0, #0x00]
    adds r0, #0x02
    str r0, [sp, #0x040]
    ldr r1, [sp, #0x038]
    adds r1, #0x02
    str r1, [sp, #0x038]
    movs r2, #0x02
    add r12, r2
    movs r3, #0x01
    negs r3, r3
    add r10, r3
    mov r7, r10
    cmp r7, #0x00
    bge _0802C4E4
    movs r0, #0x01
    bl pltt_setDirtyFlag
    movs r1, #0x40
    ldr r0, _0802C59C @ =0x03004EA0
    ldrh r0, [r0, #0x00]
    ands r0, r1
    cmp r0, #0x00
    beq _0802C5C2
    ldr r1, _0802C5A0 @ =0x030001A4
    ldrh r2, [r1, #0x00]
    movs r3, #0x00
    ldsh r0, [r1, r3]
    cmp r0, #0x00
    bne _0802C5A4
    ldr r6, [sp, #0x02C]
    ldrb r0, [r6, #0x04]
    subs r0, #0x01
    b _0802C5A6
    .byte 0x00, 0x00
    _0802C588: .4byte 0x03002C78
    _0802C58C: .4byte 0x030001A6
    _0802C590: .4byte gSinTable
    _0802C594: .4byte 0x000003FF
    _0802C598: .4byte 0x080AAD3C
    _0802C59C: .4byte 0x03004EA0
    _0802C5A0: .4byte 0x030001A4
    _0802C5A4:
    subs r0, r2, #0x1
    _0802C5A6:
    strh r0, [r1, #0x00]
    ldr r7, [sp, #0x028]
    cmp r7, #0x00
    beq _0802C5C2
    movs r0, #0xB9
    lsls r0, r0, #0x01
    bl m4aSongNumStart
    ldr r0, _0802C5E4 @ =0x030001A4
    movs r2, #0x00
    ldsh r1, [r0, r2]
    ldr r0, [sp, #0x004]
    bl sub_802CF78
    _0802C5C2:
    movs r1, #0x80
    ldr r0, _0802C5E8 @ =0x03004EA0
    ldrh r0, [r0, #0x00]
    ands r0, r1
    cmp r0, #0x00
    beq _0802C60C
    ldr r1, _0802C5E4 @ =0x030001A4
    movs r3, #0x00
    ldsh r0, [r1, r3]
    adds r0, #0x01
    ldr r6, [sp, #0x02C]
    ldrb r6, [r6, #0x04]
    cmp r0, r6
    blt _0802C5EC
    movs r0, #0x00
    b _0802C5F0
    .byte 0x00, 0x00
    _0802C5E4: .4byte 0x030001A4
    _0802C5E8: .4byte 0x03004EA0
    _0802C5EC:
    ldrh r0, [r1, #0x00]
    adds r0, #0x01
    _0802C5F0:
    strh r0, [r1, #0x00]
    ldr r7, [sp, #0x028]
    cmp r7, #0x00
    beq _0802C60C
    movs r0, #0xB9
    lsls r0, r0, #0x01
    bl m4aSongNumStart
    ldr r0, _0802C638 @ =0x030001A4
    movs r2, #0x00
    ldsh r1, [r0, r2]
    ldr r0, [sp, #0x004]
    bl sub_802CF78
    _0802C60C:
    movs r1, #0x09
    ldr r0, _0802C63C @ =0x03004EA0
    ldrh r0, [r0, #0x00]
    ands r0, r1
    cmp r0, #0x00
    bne _0802C61A
    b _0802C7DC
    _0802C61A:
    ldr r0, _0802C638 @ =0x030001A4
    movs r3, #0x00
    ldsh r1, [r0, r3]
    ldr r6, [sp, #0x02C]
    ldr r0, [r6, #0x08]
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x08
    bls _0802C62E
    b _0802C7DC
    _0802C62E:
    lsls r0, r0, #0x02
    ldr r1, _0802C640 @ =0x0802C644
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    _0802C638: .4byte 0x030001A4
    _0802C63C: .4byte 0x03004EA0
    _0802C640: .4byte 0x0802C644
    .byte 0x68, 0xC6, 0x02, 0x08, 0x7C, 0xC6, 0x02, 0x08, 0x7C, 0xC6, 0x02, 0x08, 0x7C, 0xC6, 0x02, 0x08
    .byte 0x7C, 0xC6, 0x02, 0x08, 0xB0, 0xC6, 0x02, 0x08, 0x7C, 0xC6, 0x02, 0x08, 0x7C, 0xC6, 0x02, 0x08
    .byte 0x7C, 0xC6, 0x02, 0x08, 0x03, 0x49, 0x00, 0x20, 0x08, 0x80, 0x00, 0xF0, 0xC1, 0xF8, 0x02, 0x90
    .byte 0xB2, 0xE0, 0x00, 0x00, 0xAA, 0x01, 0x00, 0x03, 0x01, 0x9F, 0x09, 0x48, 0x39, 0x18, 0x08, 0x78
    .byte 0x01, 0x30, 0x08, 0x70, 0x8F, 0x20, 0x33, 0xF0, 0x49, 0xFC, 0x06, 0x4A, 0x06, 0x48, 0x00, 0x23
    .byte 0xC1, 0x5E, 0x0B, 0x9E, 0xB0, 0x68, 0x40, 0x18, 0x00, 0x78, 0x10, 0x80, 0x9C, 0xE0, 0x00, 0x00
    .byte 0xD6, 0x07, 0x00, 0x00, 0xAA, 0x01, 0x00, 0x03, 0xA4, 0x01, 0x00, 0x03, 0x01, 0x9F, 0x0A, 0x48
    .byte 0x39, 0x18, 0x00, 0x24, 0x64, 0x20, 0x08, 0x70, 0x8F, 0x20, 0x33, 0xF0, 0x2F, 0xFC, 0x07, 0x4A
    .byte 0x07, 0x48, 0x00, 0x23, 0xC1, 0x5E, 0x0B, 0x9E, 0xB0, 0x68, 0x40, 0x18, 0x00, 0x78, 0x10, 0x80
    .byte 0x04, 0x48, 0x04, 0x80, 0x80, 0xE0, 0x00, 0x00, 0xD6, 0x07, 0x00, 0x00, 0xAA, 0x01, 0x00, 0x03
    .byte 0xA4, 0x01, 0x00, 0x03, 0xA6, 0x01, 0x00, 0x03
    _0802C6EC:
    bl sub_802C7F4
    str r0, [sp, #0x008]
    _0802C6F2:
    ldrb r0, [r5, #0x00]
    adds r0, #0x01
    strb r0, [r5, #0x00]
    b _0802C7DC
    _0802C6FA:
    ldr r0, _0802C75C @ =0x030001A6
    ldrh r1, [r0, #0x00]
    movs r7, #0x00
    ldsh r0, [r0, r7]
    cmp r0, #0x27
    bgt _0802C7CC
    movs r0, #0x04
    ands r0, r1
    cmp r0, #0x00
    beq _0802C760
    bl sub_8002C3C
    adds r4, r0, #0x0
    subs r4, #0x01
    lsls r4, r4, #0x01
    movs r6, #0x1B
    subs r6, r6, r4
    movs r0, #0x01
    adds r1, r6, #0x0
    movs r2, #0x12
    bl map_getBufferPtr2d
    movs r1, #0x00
    mov r8, r1
    strh r1, [r0, #0x00]
    movs r5, #0x1C
    subs r5, r5, r4
    movs r0, #0x01
    adds r1, r5, #0x0
    movs r2, #0x12
    bl map_getBufferPtr2d
    mov r2, r8
    strh r2, [r0, #0x00]
    movs r0, #0x01
    adds r1, r6, #0x0
    movs r2, #0x13
    bl map_getBufferPtr2d
    mov r3, r8
    strh r3, [r0, #0x00]
    movs r0, #0x01
    adds r1, r5, #0x0
    movs r2, #0x13
    bl map_getBufferPtr2d
    mov r6, r8
    strh r6, [r0, #0x00]
    b _0802C7B2
    _0802C75C: .4byte 0x030001A6
    _0802C760:
    bl sub_8002C3C
    adds r4, r0, #0x0
    subs r4, #0x01
    lsls r4, r4, #0x01
    movs r6, #0x1B
    subs r6, r6, r4
    movs r0, #0x01
    adds r1, r6, #0x0
    movs r2, #0x12
    bl map_getBufferPtr2d
    ldr r7, _0802C7BC @ =0x0000B0A0
    adds r1, r7, #0x0
    strh r1, [r0, #0x00]
    movs r5, #0x1C
    subs r5, r5, r4
    movs r0, #0x01
    adds r1, r5, #0x0
    movs r2, #0x12
    bl map_getBufferPtr2d
    ldr r2, _0802C7C0 @ =0x0000B0A1
    adds r1, r2, #0x0
    strh r1, [r0, #0x00]
    movs r0, #0x01
    adds r1, r6, #0x0
    movs r2, #0x13
    bl map_getBufferPtr2d
    ldr r3, _0802C7C4 @ =0x0000B0A2
    adds r1, r3, #0x0
    strh r1, [r0, #0x00]
    movs r0, #0x01
    adds r1, r5, #0x0
    movs r2, #0x13
    bl map_getBufferPtr2d
    ldr r6, _0802C7C8 @ =0x0000B0A3
    adds r1, r6, #0x0
    strh r1, [r0, #0x00]
    _0802C7B2:
    movs r0, #0x02
    bl map_setBufferDirty
    b _0802C7D4
    .byte 0x00, 0x00
    _0802C7BC: .4byte 0x0000B0A0
    _0802C7C0: .4byte 0x0000B0A1
    _0802C7C4: .4byte 0x0000B0A2
    _0802C7C8: .4byte 0x0000B0A3
    _0802C7CC:
    cmp r0, #0x2F
    ble _0802C7D4
    movs r0, #0x03
    strb r0, [r5, #0x00]
    _0802C7D4:
    ldr r1, _0802C7F0 @ =0x030001A6
    ldrh r0, [r1, #0x00]
    adds r0, #0x01
    strh r0, [r1, #0x00]
    _0802C7DC:
    ldr r0, [sp, #0x008]
    add sp, #0x044
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    _0802C7F0: .4byte 0x030001A6
    thumb_func_start sub_802C7F4
    sub_802C7F4:
    push {r4, r5, r6, r7, lr}
    movs r7, #0x01
    ldr r0, _0802C814 @ =0x03002E20
    adds r6, r0, #0x0
    adds r6, #0x24
    ldr r0, _0802C818 @ =0x030001AA
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x08
    bls _0802C80A
    b _0802C93A
    _0802C80A:
    lsls r0, r0, #0x02
    ldr r1, _0802C81C @ =0x0802C820
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    _0802C814: .4byte 0x03002E20
    _0802C818: .4byte 0x030001AA
    _0802C81C: .4byte 0x0802C820
    .byte 0x44, 0xC8, 0x02, 0x08, 0x28, 0xC9, 0x02, 0x08, 0x0C, 0xC9, 0x02, 0x08, 0x10, 0xC9, 0x02, 0x08
    .byte 0xF4, 0xC8, 0x02, 0x08, 0x18, 0xC9, 0x02, 0x08, 0x44, 0xC8, 0x02, 0x08, 0x08, 0xC9, 0x02, 0x08
    .byte 0x14, 0xC9, 0x02, 0x08, 0x20, 0x4C, 0x00, 0x20, 0x01, 0xF0, 0xF2, 0xFE, 0x01, 0x1C, 0x80, 0x22
    .byte 0x52, 0x00, 0x20, 0x1C, 0x34, 0xF0, 0x7A, 0xFD, 0x1C, 0x4C, 0x1D, 0x4D, 0x28, 0x88, 0xE0, 0x20
    .byte 0xC0, 0x00, 0x20, 0x80, 0x03, 0xF0, 0xE6, 0xFD, 0x1A, 0x4B, 0x21, 0x1C, 0x2A, 0x1C, 0x03, 0xF0
    .byte 0xB9, 0xFD, 0x03, 0xF0, 0xDF, 0xFD, 0x04, 0x1C, 0x17, 0x4D, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0x01, 0xF0, 0x16, 0xFF, 0x02, 0x1C, 0x15, 0x4B, 0x20, 0x1C, 0x29, 0x1C, 0x03, 0xF0, 0xAA, 0xFD
    .byte 0x01, 0x20, 0x01, 0xF0, 0x33, 0xFF, 0x03, 0xF0, 0xCD, 0xFD, 0x11, 0x49, 0xC0, 0x22, 0xD2, 0x04
    .byte 0x10, 0x4B, 0x03, 0xF0, 0x9F, 0xFD, 0x10, 0x4A, 0xB1, 0x18, 0x01, 0x20, 0x08, 0x60, 0x00, 0x21
    .byte 0x0E, 0x48, 0x01, 0x60, 0x33, 0xF0, 0xEA, 0xFB, 0x0D, 0x48, 0x32, 0x18, 0x11, 0x78, 0xBF, 0x20
    .byte 0x08, 0x40, 0x10, 0x70, 0x39, 0xE0, 0x00, 0x00, 0x00, 0x40, 0x00, 0x02, 0xA8, 0x01, 0x00, 0x03
    .byte 0x08, 0x00, 0x00, 0x04, 0x01, 0x00, 0x00, 0x80, 0x00, 0x38, 0x00, 0x06, 0x00, 0x04, 0x00, 0x80
    .byte 0x34, 0x28, 0x06, 0x08, 0x00, 0x06, 0x00, 0x80, 0xEC, 0x07, 0x00, 0x00, 0x78, 0x2C, 0x00, 0x03
    .byte 0xD4, 0x07, 0x00, 0x00, 0x01, 0x20, 0xFD, 0x22, 0xD2, 0x00, 0xB1, 0x18, 0x08, 0x70, 0x01, 0x49
    .byte 0x19, 0xE0, 0x00, 0x00, 0x50, 0x5C, 0x00, 0x03, 0x06, 0x21, 0x0E, 0xE0, 0x02, 0x21, 0x0C, 0xE0
    .byte 0x03, 0x21, 0x0A, 0xE0, 0x09, 0x21, 0x08, 0xE0, 0xD6, 0xF7, 0x90, 0xF9, 0x00, 0x28, 0x03, 0xD0
    .byte 0xD6, 0xF7, 0x98, 0xF9, 0x01, 0x21, 0x00, 0xE0, 0x04, 0x21, 0xFD, 0x22, 0xD2, 0x00, 0xB0, 0x18
    .byte 0x01, 0x70, 0x04, 0x49, 0x01, 0x20, 0x08, 0x60, 0x00, 0x27
    _0802C93A:
    adds r0, r7, #0x0
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00, 0x50, 0x5C, 0x00, 0x03, 0xF0, 0xB5, 0x57, 0x46, 0x4E, 0x46, 0x45, 0x46, 0xE0, 0xB4
    .byte 0x84, 0xB0, 0x06, 0x1C, 0x89, 0x46, 0x90, 0x46, 0x00, 0x93, 0x00, 0x20, 0x82, 0x46, 0x31, 0x1C
    .byte 0x4A, 0x46, 0x01, 0xF0, 0xA4, 0xFE, 0x74, 0x4A, 0x11, 0x1C, 0x01, 0x80, 0x71, 0x1C, 0x00, 0x20
    .byte 0x4A, 0x46, 0x01, 0xF0, 0x9C, 0xFE, 0x71, 0x4A, 0x11, 0x1C, 0x01, 0x80, 0x02, 0x25, 0x40, 0x46
    .byte 0x02, 0x38, 0x85, 0x42, 0x0C, 0xDA, 0x6E, 0x49, 0x0F, 0x1C, 0x04, 0x1C, 0x71, 0x19, 0x00, 0x20
    .byte 0x4A, 0x46, 0x52, 0x44, 0x01, 0xF0, 0x8B, 0xFE, 0x07, 0x80, 0x01, 0x35, 0xA5, 0x42, 0xF5, 0xDB
    .byte 0x71, 0x19, 0x4C, 0x46, 0x54, 0x44, 0x00, 0x20, 0x22, 0x1C, 0x01, 0xF0, 0x80, 0xFE, 0x65, 0x4A
    .byte 0x11, 0x1C, 0x01, 0x80, 0x01, 0x35, 0x71, 0x19, 0x00, 0x20, 0x22, 0x1C, 0x01, 0xF0, 0x77, 0xFE
    .byte 0x62, 0x4A, 0x11, 0x1C, 0x01, 0x80, 0x01, 0x20, 0x82, 0x44, 0x00, 0x26, 0x4A, 0x46, 0x52, 0x44
    .byte 0x00, 0x20, 0x29, 0x1C, 0x01, 0xF0, 0x6B, 0xFE, 0x5D, 0x4A, 0x11, 0x1C, 0x01, 0x80, 0x01, 0x35
    .byte 0x40, 0x46, 0x02, 0x38, 0x01, 0x90, 0x01, 0x21, 0x49, 0x42, 0x88, 0x44, 0x00, 0x9A, 0x02, 0x3A
    .byte 0x02, 0x92, 0x45, 0x45, 0x0A, 0xDA, 0x00, 0x24, 0x71, 0x19, 0x00, 0x20, 0x4A, 0x46, 0x52, 0x44
    .byte 0x01, 0xF0, 0x55, 0xFE, 0x04, 0x80, 0x01, 0x35, 0x45, 0x45, 0xF5, 0xDB, 0x71, 0x19, 0x4A, 0x46
    .byte 0x52, 0x44, 0x00, 0x20, 0x01, 0xF0, 0x4B, 0xFE, 0x4E, 0x4A, 0x11, 0x1C, 0x01, 0x80, 0x01, 0x20
    .byte 0x82, 0x44, 0x71, 0x00, 0x03, 0x91, 0x02, 0x9A, 0x92, 0x45, 0x24, 0xDA, 0x54, 0x46, 0x4C, 0x44
    .byte 0x00, 0x20, 0x31, 0x1C, 0x22, 0x1C, 0x01, 0xF0, 0x3A, 0xFE, 0x46, 0x4A, 0x11, 0x1C, 0x01, 0x80
    .byte 0x01, 0x25, 0x45, 0x45, 0x09, 0xDA, 0x00, 0x27, 0x71, 0x19, 0x00, 0x20, 0x22, 0x1C, 0x01, 0xF0
    .byte 0x2E, 0xFE, 0x07, 0x80, 0x01, 0x35, 0x45, 0x45, 0xF6, 0xDB, 0x71, 0x19, 0x00, 0x20, 0x22, 0x1C
    .byte 0x01, 0xF0, 0x25, 0xFE, 0x3D, 0x4A, 0x11, 0x1C, 0x01, 0x80, 0x01, 0x34, 0x01, 0x20, 0x82, 0x44
    .byte 0x02, 0x99, 0x8A, 0x45, 0xDC, 0xDB, 0x4C, 0x46, 0x54, 0x44, 0x00, 0x20, 0x31, 0x1C, 0x22, 0x1C
    .byte 0x01, 0xF0, 0x15, 0xFE, 0x36, 0x4A, 0x11, 0x1C, 0x01, 0x80, 0x01, 0x25, 0x45, 0x45, 0x09, 0xDA
    .byte 0x00, 0x27, 0x71, 0x19, 0x00, 0x20, 0x22, 0x1C, 0x01, 0xF0, 0x09, 0xFE, 0x07, 0x80, 0x01, 0x35
    .byte 0x45, 0x45, 0xF6, 0xDB, 0x71, 0x19, 0x4A, 0x46, 0x52, 0x44, 0x00, 0x20, 0x01, 0xF0, 0xFF, 0xFD
    .byte 0x2C, 0x4A, 0x11, 0x1C, 0x01, 0x80, 0x01, 0x20, 0x82, 0x44, 0x4C, 0x46, 0x54, 0x44, 0x00, 0x20
    .byte 0x03, 0x99, 0x22, 0x1C, 0x01, 0xF0, 0xF3, 0xFD, 0x27, 0x4A, 0x11, 0x1C, 0x01, 0x80, 0x00, 0x20
    .byte 0x03, 0x99, 0x22, 0x1C, 0x01, 0xF0, 0xEB, 0xFD, 0x24, 0x4A, 0x11, 0x1C, 0x01, 0x80, 0x02, 0x25
    .byte 0x01, 0x98, 0x85, 0x42, 0x0C, 0xDA, 0x21, 0x49, 0x0C, 0x1C, 0x71, 0x19, 0x00, 0x20, 0x4A, 0x46
    .byte 0x52, 0x44, 0x01, 0xF0, 0xDC, 0xFD, 0x04, 0x80, 0x01, 0x35, 0x01, 0x9A, 0x95, 0x42, 0xF4, 0xDB
    .byte 0x4C, 0x46, 0x54, 0x44, 0x00, 0x20, 0x03, 0x99, 0x22, 0x1C, 0x01, 0xF0, 0xD0, 0xFD, 0x18, 0x4A
    .byte 0x11, 0x1C, 0x01, 0x80, 0x00, 0x20, 0x03, 0x99, 0x22, 0x1C, 0x01, 0xF0, 0xC8, 0xFD, 0x15, 0x4A
    .byte 0x11, 0x1C, 0x01, 0x80, 0x01, 0x20, 0x01, 0xF0, 0xE8, 0xFD, 0x04, 0xB0, 0x38, 0xBC, 0x98, 0x46
    .byte 0xA1, 0x46, 0xAA, 0x46, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x01, 0xF0, 0x00, 0x00, 0x02, 0xF0
    .byte 0x00, 0x00, 0x22, 0xF0, 0x00, 0x00, 0x02, 0xF4, 0x00, 0x00, 0x01, 0xF4, 0x00, 0x00, 0x21, 0xF0
    .byte 0x00, 0x00, 0x21, 0xF4, 0x00, 0x00, 0x20, 0xF0, 0x00, 0x00, 0x20, 0xF4, 0x00, 0x00, 0x21, 0xF8
    .byte 0x00, 0x00, 0x21, 0xFC, 0x00, 0x00, 0x01, 0xF8, 0x00, 0x00, 0x02, 0xF8, 0x00, 0x00, 0x22, 0xF8
    .byte 0x00, 0x00, 0x02, 0xFC, 0x00, 0x00, 0x01, 0xFC, 0x00, 0x00
    thumb_func_start sub_802CB7C
    sub_802CB7C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x014
    ldr r0, _0802CE08 @ =0x03002C78
    ldr r0, [r0, #0x00]
    str r0, [sp, #0x000]
    ldrb r6, [r0, #0x00]
    ldrb r0, [r0, #0x01]
    mov r9, r0
    ldr r1, [sp, #0x000]
    ldrb r1, [r1, #0x02]
    mov r10, r1
    ldr r2, [sp, #0x000]
    ldrb r7, [r2, #0x03]
    movs r0, #0x00
    str r0, [sp, #0x004]
    bl sub_802DC88
    cmp r0, #0x00
    beq _0802CBB2
    bl sub_802DCB4
    cmp r0, #0x00
    bne _0802CBB6
    _0802CBB2:
    movs r1, #0x01
    str r1, [sp, #0x004]
    _0802CBB6:
    ldr r2, [sp, #0x004]
    cmp r2, #0x00
    bne _0802CBCE
    adds r6, #0x01
    movs r0, #0x09
    mov r10, r0
    subs r0, r7, #0x4
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r0, r0, #0x01
    add r9, r0
    movs r7, #0x04
    _0802CBCE:
    movs r1, #0x00
    mov r8, r1
    movs r0, #0x00
    adds r1, r6, #0x0
    mov r2, r9
    bl map_getBufferPtr2d
    ldr r2, _0802CE0C @ =0x0000F001
    adds r1, r2, #0x0
    strh r1, [r0, #0x00]
    adds r4, r6, #0x1
    movs r0, #0x00
    adds r1, r4, #0x0
    mov r2, r9
    bl map_getBufferPtr2d
    ldr r2, _0802CE10 @ =0x0000F002
    adds r1, r2, #0x0
    strh r1, [r0, #0x00]
    movs r5, #0x02
    str r4, [sp, #0x00C]
    mov r0, r10
    subs r0, #0x02
    str r0, [sp, #0x008]
    movs r1, #0x01
    negs r1, r1
    add r10, r1
    subs r2, r7, #0x2
    str r2, [sp, #0x010]
    cmp r5, r0
    bge _0802CC26
    ldr r0, _0802CE14 @ =0x0000F022
    adds r4, r0, #0x0
    _0802CC10:
    adds r1, r6, r5
    movs r0, #0x00
    mov r2, r9
    add r2, r8
    bl map_getBufferPtr2d
    strh r4, [r0, #0x00]
    adds r5, #0x01
    ldr r1, [sp, #0x008]
    cmp r5, r1
    blt _0802CC10
    _0802CC26:
    adds r1, r6, r5
    mov r4, r9
    add r4, r8
    movs r0, #0x00
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    ldr r2, _0802CE18 @ =0x0000F402
    adds r1, r2, #0x0
    strh r1, [r0, #0x00]
    adds r5, #0x01
    adds r1, r6, r5
    movs r0, #0x00
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    ldr r2, _0802CE1C @ =0x0000F401
    adds r1, r2, #0x0
    strh r1, [r0, #0x00]
    movs r0, #0x01
    add r8, r0
    mov r2, r9
    add r2, r8
    movs r0, #0x00
    adds r1, r6, #0x0
    bl map_getBufferPtr2d
    ldr r2, _0802CE20 @ =0x0000F021
    adds r1, r2, #0x0
    strh r1, [r0, #0x00]
    movs r5, #0x01
    cmp r5, r10
    bge _0802CC7E
    movs r4, #0x00
    _0802CC6A:
    adds r1, r6, r5
    movs r0, #0x00
    mov r2, r9
    add r2, r8
    bl map_getBufferPtr2d
    strh r4, [r0, #0x00]
    adds r5, #0x01
    cmp r5, r10
    blt _0802CC6A
    _0802CC7E:
    adds r1, r6, r5
    mov r2, r9
    add r2, r8
    movs r0, #0x00
    bl map_getBufferPtr2d
    ldr r2, _0802CE24 @ =0x0000F421
    adds r1, r2, #0x0
    strh r1, [r0, #0x00]
    movs r0, #0x01
    add r8, r0
    ldr r1, [sp, #0x010]
    cmp r8, r1
    bge _0802CCE4
    mov r4, r8
    add r4, r9
    _0802CC9E:
    movs r0, #0x00
    adds r1, r6, #0x0
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    ldr r2, _0802CE28 @ =0x0000F020
    adds r1, r2, #0x0
    strh r1, [r0, #0x00]
    movs r5, #0x01
    cmp r5, r10
    bge _0802CCC8
    movs r7, #0x00
    _0802CCB6:
    adds r1, r6, r5
    movs r0, #0x00
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    strh r7, [r0, #0x00]
    adds r5, #0x01
    cmp r5, r10
    blt _0802CCB6
    _0802CCC8:
    adds r1, r6, r5
    movs r0, #0x00
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    ldr r2, _0802CE2C @ =0x0000F420
    adds r1, r2, #0x0
    strh r1, [r0, #0x00]
    adds r4, #0x01
    movs r0, #0x01
    add r8, r0
    ldr r1, [sp, #0x010]
    cmp r8, r1
    blt _0802CC9E
    _0802CCE4:
    mov r4, r9
    add r4, r8
    movs r0, #0x00
    adds r1, r6, #0x0
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    ldr r2, _0802CE30 @ =0x0000F821
    adds r1, r2, #0x0
    strh r1, [r0, #0x00]
    movs r5, #0x01
    cmp r5, r10
    bge _0802CD12
    movs r7, #0x00
    _0802CD00:
    adds r1, r6, r5
    movs r0, #0x00
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    strh r7, [r0, #0x00]
    adds r5, #0x01
    cmp r5, r10
    blt _0802CD00
    _0802CD12:
    adds r1, r6, r5
    mov r2, r9
    add r2, r8
    movs r0, #0x00
    bl map_getBufferPtr2d
    ldr r2, _0802CE34 @ =0x0000FC21
    adds r1, r2, #0x0
    strh r1, [r0, #0x00]
    movs r0, #0x01
    add r8, r0
    mov r4, r9
    add r4, r8
    movs r0, #0x00
    adds r1, r6, #0x0
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    ldr r2, _0802CE38 @ =0x0000F801
    adds r1, r2, #0x0
    strh r1, [r0, #0x00]
    movs r0, #0x00
    ldr r1, [sp, #0x00C]
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    ldr r2, _0802CE3C @ =0x0000F802
    adds r1, r2, #0x0
    strh r1, [r0, #0x00]
    movs r5, #0x02
    ldr r0, [sp, #0x008]
    cmp r5, r0
    bge _0802CD6E
    ldr r1, _0802CE40 @ =0x0000F822
    adds r4, r1, #0x0
    _0802CD58:
    adds r1, r6, r5
    movs r0, #0x00
    mov r2, r9
    add r2, r8
    bl map_getBufferPtr2d
    strh r4, [r0, #0x00]
    adds r5, #0x01
    ldr r2, [sp, #0x008]
    cmp r5, r2
    blt _0802CD58
    _0802CD6E:
    adds r1, r6, r5
    mov r4, r9
    add r4, r8
    movs r0, #0x00
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    ldr r2, _0802CE44 @ =0x0000FC02
    adds r1, r2, #0x0
    strh r1, [r0, #0x00]
    adds r5, #0x01
    adds r1, r6, r5
    movs r0, #0x00
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    ldr r2, _0802CE48 @ =0x0000FC01
    adds r1, r2, #0x0
    strh r1, [r0, #0x00]
    ldr r0, [sp, #0x004]
    cmp r0, #0x00
    beq _0802CE58
    movs r1, #0x00
    mov r8, r1
    ldr r2, [sp, #0x000]
    ldrb r2, [r2, #0x04]
    cmp r8, r2
    bge _0802CE88
    adds r6, #0x02
    mov r10, r6
    mov r7, r9
    adds r7, #0x02
    mov r6, r9
    adds r6, #0x01
    _0802CDB2:
    ldr r1, [sp, #0x000]
    ldr r0, [r1, #0x08]
    add r0, r8
    ldrb r0, [r0, #0x00]
    ldr r2, _0802CE4C @ =0x080DDEE8
    adds r0, r0, r2
    ldrb r0, [r0, #0x00]
    lsls r4, r0, #0x03
    subs r4, r4, r0
    lsls r4, r4, #0x02
    ldr r0, _0802CE50 @ =0x080DDF58
    adds r5, r4, r0
    movs r0, #0x00
    mov r1, r10
    adds r2, r6, #0x0
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r5, #0x0
    movs r2, #0x07
    bl CpuSet
    ldr r1, _0802CE54 @ =0x080DDF66
    adds r4, r4, r1
    movs r0, #0x00
    mov r1, r10
    adds r2, r7, #0x0
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    movs r2, #0x07
    bl CpuSet
    adds r7, #0x02
    adds r6, #0x02
    movs r2, #0x01
    add r8, r2
    ldr r0, [sp, #0x000]
    ldrb r0, [r0, #0x04]
    cmp r8, r0
    blt _0802CDB2
    b _0802CE88
    _0802CE08: .4byte 0x03002C78
    _0802CE0C: .4byte 0x0000F001
    _0802CE10: .4byte 0x0000F002
    _0802CE14: .4byte 0x0000F022
    _0802CE18: .4byte 0x0000F402
    _0802CE1C: .4byte 0x0000F401
    _0802CE20: .4byte 0x0000F021
    _0802CE24: .4byte 0x0000F421
    _0802CE28: .4byte 0x0000F020
    _0802CE2C: .4byte 0x0000F420
    _0802CE30: .4byte 0x0000F821
    _0802CE34: .4byte 0x0000FC21
    _0802CE38: .4byte 0x0000F801
    _0802CE3C: .4byte 0x0000F802
    _0802CE40: .4byte 0x0000F822
    _0802CE44: .4byte 0x0000FC02
    _0802CE48: .4byte 0x0000FC01
    _0802CE4C: .4byte 0x080DDEE8
    _0802CE50: .4byte 0x080DDF58
    _0802CE54: .4byte 0x080DDF66
    _0802CE58:
    ldr r4, _0802CEA0 @ =0x080DE000
    mov r2, r9
    adds r2, #0x01
    movs r0, #0x00
    ldr r1, [sp, #0x00C]
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    movs r2, #0x07
    bl CpuSet
    adds r4, #0x0E
    mov r2, r9
    adds r2, #0x02
    movs r0, #0x00
    ldr r1, [sp, #0x00C]
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    movs r2, #0x07
    bl CpuSet
    _0802CE88:
    movs r0, #0x02
    bl map_setBufferDirty
    add sp, #0x014
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _0802CEA0: .4byte 0x080DE000
    thumb_func_start sub_802CEA4
    sub_802CEA4:
    push {r4, r5, r6, r7, lr}
    movs r0, #0x00
    bl pltt_getBuffer
    adds r4, r0, #0x0
    movs r5, #0x1F
    ldr r0, _0802CF74 @ =0x000003FF
    mov r12, r0
    movs r7, #0x9F
    _0802CEB6:
    ldrh r2, [r4, #0x00]
    movs r0, #0x1F
    ands r0, r2
    lsls r1, r0, #0x0A
    subs r1, r1, r0
    cmp r1, #0x00
    bge _0802CEC6
    add r1, r12
    _0802CEC6:
    asrs r6, r1, #0x0A
    lsls r2, r2, #0x10
    lsrs r0, r2, #0x15
    ands r0, r5
    lsls r1, r0, #0x0A
    subs r0, r1, r0
    cmp r0, #0x00
    bge _0802CED8
    add r0, r12
    _0802CED8:
    asrs r3, r0, #0x0A
    lsrs r0, r2, #0x1A
    ands r0, r5
    lsls r1, r0, #0x0A
    subs r0, r1, r0
    cmp r0, #0x00
    bge _0802CEE8
    add r0, r12
    _0802CEE8:
    asrs r2, r0, #0x0A
    adds r1, r6, #0x0
    ands r1, r5
    adds r0, r3, #0x0
    ands r0, r5
    lsls r0, r0, #0x05
    orrs r1, r0
    ands r2, r5
    lsls r2, r2, #0x0A
    orrs r1, r2
    strh r1, [r4, #0x00]
    adds r4, #0x02
    subs r7, #0x01
    cmp r7, #0x00
    bge _0802CEB6
    movs r0, #0x01
    bl pltt_getBuffer
    adds r4, r0, #0x0
    movs r5, #0x1F
    ldr r0, _0802CF74 @ =0x000003FF
    mov r12, r0
    movs r7, #0xFF
    _0802CF16:
    ldrh r2, [r4, #0x00]
    movs r0, #0x1F
    ands r0, r2
    lsls r1, r0, #0x0A
    subs r1, r1, r0
    cmp r1, #0x00
    bge _0802CF26
    add r1, r12
    _0802CF26:
    asrs r6, r1, #0x0A
    lsls r2, r2, #0x10
    lsrs r0, r2, #0x15
    ands r0, r5
    lsls r1, r0, #0x0A
    subs r0, r1, r0
    cmp r0, #0x00
    bge _0802CF38
    add r0, r12
    _0802CF38:
    asrs r3, r0, #0x0A
    lsrs r0, r2, #0x1A
    ands r0, r5
    lsls r1, r0, #0x0A
    subs r0, r1, r0
    cmp r0, #0x00
    bge _0802CF48
    add r0, r12
    _0802CF48:
    asrs r2, r0, #0x0A
    adds r1, r6, #0x0
    ands r1, r5
    adds r0, r3, #0x0
    ands r0, r5
    lsls r0, r0, #0x05
    orrs r1, r0
    ands r2, r5
    lsls r2, r2, #0x0A
    orrs r1, r2
    strh r1, [r4, #0x00]
    adds r4, #0x02
    subs r7, #0x01
    cmp r7, #0x00
    bge _0802CF16
    movs r0, #0x01
    bl pltt_setDirtyFlag
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    _0802CF74: .4byte 0x000003FF
    thumb_func_start sub_802CF78
    sub_802CF78:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x010
    lsls r1, r1, #0x10
    lsrs r4, r1, #0x10
    ldr r0, _0802D070 @ =0x03002C78
    ldr r7, [r0, #0x00]
    bl sub_802DC88
    cmp r0, #0x00
    beq _0802CF9C
    bl sub_802DCB4
    cmp r0, #0x00
    bne _0802D060
    _0802CF9C:
    movs r5, #0x00
    ldrb r0, [r7, #0x04]
    cmp r5, r0
    bge _0802D05A
    lsls r0, r4, #0x10
    asrs r0, r0, #0x10
    str r0, [sp, #0x008]
    _0802CFAA:
    ldrb r2, [r7, #0x00]
    adds r1, r2, #0x2
    str r1, [sp, #0x000]
    ldrb r1, [r7, #0x01]
    lsls r0, r5, #0x01
    adds r0, #0x01
    adds r1, r1, r0
    mov r10, r1
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ldr r0, [sp, #0x008]
    cmp r5, r0
    bne _0802CFC8
    movs r1, #0xE0
    lsls r1, r1, #0x08
    _0802CFC8:
    str r1, [sp, #0x004]
    ldr r4, _0802D074 @ =0x080DE058
    ldr r1, [sp, #0x008]
    cmp r5, r1
    bne _0802CFD4
    subs r4, #0x04
    _0802CFD4:
    adds r1, r2, #0x1
    movs r0, #0x01
    mov r2, r10
    bl map_getBufferPtr2d
    adds r2, r4, #0x0
    adds r1, r0, #0x0
    movs r0, #0x00
    adds r5, #0x01
    str r5, [sp, #0x00C]
    _0802CFE8:
    adds r4, r0, #0x1
    movs r3, #0x00
    _0802CFEC:
    ldrh r0, [r2, #0x00]
    strh r0, [r1, #0x00]
    adds r2, #0x02
    adds r1, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _0802CFEC
    adds r1, #0x3E
    adds r0, r4, #0x0
    cmp r0, #0x02
    blt _0802CFE8
    movs r2, #0x00
    _0802D004:
    movs r5, #0x00
    ldrb r0, [r7, #0x02]
    subs r0, #0x03
    adds r1, r2, #0x1
    mov r8, r1
    cmp r5, r0
    bge _0802D04C
    mov r0, r10
    adds r6, r0, r2
    ldr r1, _0802D078 @ =0x00000FFF
    mov r9, r1
    _0802D01A:
    ldr r2, [sp, #0x000]
    adds r4, r2, r5
    movs r0, #0x01
    adds r1, r4, #0x0
    adds r2, r6, #0x0
    bl map_getBufferPtr2d
    ldrh r1, [r0, #0x00]
    mov r2, r9
    ands r1, r2
    strh r1, [r0, #0x00]
    movs r0, #0x01
    adds r1, r4, #0x0
    adds r2, r6, #0x0
    bl map_getBufferPtr2d
    ldrh r2, [r0, #0x00]
    ldr r1, [sp, #0x004]
    orrs r1, r2
    strh r1, [r0, #0x00]
    adds r5, #0x01
    ldrb r0, [r7, #0x02]
    subs r0, #0x03
    cmp r5, r0
    blt _0802D01A
    _0802D04C:
    mov r2, r8
    cmp r2, #0x01
    ble _0802D004
    ldr r5, [sp, #0x00C]
    ldrb r0, [r7, #0x04]
    cmp r5, r0
    blt _0802CFAA
    _0802D05A:
    movs r0, #0x02
    bl map_setBufferDirty
    _0802D060:
    add sp, #0x010
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    _0802D070: .4byte 0x03002C78
    _0802D074: .4byte 0x080DE058
    _0802D078: .4byte 0x00000FFF
    thumb_func_start sub_802D07C
    sub_802D07C:
    push {lr}
    adds r2, r0, #0x0
    ldr r1, _0802D098 @ =0x000007D4
    adds r0, r2, r1
    ldrb r1, [r0, #0x00]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0x00
    beq _0802D09C
    adds r0, r2, #0x0
    bl sub_802C06C
    b _0802D09E
    .byte 0x00, 0x00
    _0802D098: .4byte 0x000007D4
    _0802D09C:
    movs r0, #0x01
    _0802D09E:
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_802D0A4
    sub_802D0A4:
    push {r4, r5, r6, r7, lr}
    adds r5, r0, #0x0
    adds r4, r1, #0x0
    adds r6, r2, #0x0
    movs r1, #0x00
    cmp r1, r3
    bge _0802D0D6
    movs r0, #0x20
    subs r0, r0, r6
    lsls r7, r0, #0x01
    _0802D0B8:
    adds r2, r1, #0x1
    cmp r6, #0x00
    ble _0802D0CE
    adds r1, r6, #0x0
    _0802D0C0:
    ldrh r0, [r5, #0x00]
    strh r0, [r4, #0x00]
    adds r5, #0x02
    adds r4, #0x02
    subs r1, #0x01
    cmp r1, #0x00
    bne _0802D0C0
    _0802D0CE:
    adds r4, r4, r7
    adds r1, r2, #0x0
    cmp r1, r3
    blt _0802D0B8
    _0802D0D6:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    