.include "asm/macros.inc"

.syntax unified
.text
    thumb_func_start sub_8034044
sub_8034044:
    push {r4, r5, r6, lr}
    add sp, #-0x00C
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    ldr r2, _080340B0 @ =0x03002E20
    ldr r0, _080340B4 @ =0x0000057C
    adds r3, r2, r0
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r1, [r0, #0x00]
    ldr r0, _080340B8 @ =0x0000FFF8
    ands r0, r1
    ldrh r1, [r3, #0x00]
    movs r4, #0x00
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x01
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x02
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x03
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldr r0, _080340BC @ =0x0000080D
    adds r2, r2, r0
    ldrb r0, [r2, #0x00]
    cmp r0, #0x02
    beq _080340C0
    ldrh r0, [r3, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x04
    adds r1, r2, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    b _080340CA
    .byte 0x00, 0x00
_080340B0: .4byte 0x03002E20
_080340B4: .4byte 0x0000057C
_080340B8: .4byte 0x0000FFF8
_080340BC: .4byte 0x0000080D
_080340C0:
    ldrh r0, [r3, #0x00]
    ldr r1, _08034138 @ =0x0000F7FF
    ands r1, r0
    ldrh r0, [r3, #0x00]
    strh r1, [r3, #0x00]
_080340CA:
    movs r0, #0x00
    str r0, [r3, #0x04]
    ldr r0, _0803413C @ =0x00000F07
    str r0, [sp, #0x000]
    ldr r0, _08034140 @ =0x00000E07
    str r0, [sp, #0x004]
    ldr r0, _08034144 @ =0x00000D07
    str r0, [sp, #0x008]
    mov r0, sp
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x08]
    strh r0, [r3, #0x08]
    add r0, sp, #0x004
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x0A]
    strh r0, [r3, #0x0A]
    add r0, sp, #0x008
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x0C]
    strh r0, [r3, #0x0C]
    lsls r0, r5, #0x10
    asrs r2, r0, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _080340FE
    adds r0, #0x3F
_080340FE:
    asrs r0, r0, #0x06
    subs r0, #0x28
    ldrh r1, [r3, #0x0E]
    strh r0, [r3, #0x0E]
    ldrh r0, [r3, #0x10]
    movs r4, #0x26
    strh r4, [r3, #0x10]
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08034114
    adds r0, #0x7F
_08034114:
    asrs r0, r0, #0x07
    ldrh r1, [r3, #0x12]
    strh r0, [r3, #0x12]
    ldrh r0, [r3, #0x14]
    strh r4, [r3, #0x14]
    adds r0, r2, #0x0
    cmp r0, #0x00
    bge _08034126
    adds r0, #0xFF
_08034126:
    asrs r0, r0, #0x08
    ldrh r1, [r3, #0x16]
    strh r0, [r3, #0x16]
    ldrh r0, [r3, #0x18]
    strh r4, [r3, #0x18]
    add sp, #0x00C
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_08034138: .4byte 0x0000F7FF
_0803413C: .4byte 0x00000F07
_08034140: .4byte 0x00000E07
_08034144: .4byte 0x00000D07
    thumb_func_start nullsub_3
nullsub_3: @ 08034148
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_803414C
sub_803414C:
    push {r4, r5, r6, lr}
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    ldr r2, _080341B4 @ =0x03002E20
    ldr r0, _080341B8 @ =0x0000057C
    adds r4, r2, r0
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r1, [r0, #0x00]
    ldr r0, _080341BC @ =0x0000FFF8
    ands r0, r1
    ldrh r1, [r4, #0x00]
    movs r3, #0x00
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x01
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x02
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x03
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldr r0, _080341C0 @ =0x0000080D
    adds r2, r2, r0
    ldrb r0, [r2, #0x00]
    cmp r0, #0x02
    beq _080341C4
    ldrh r0, [r4, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x04
    adds r1, r2, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    b _080341CE
_080341B4: .4byte 0x03002E20
_080341B8: .4byte 0x0000057C
_080341BC: .4byte 0x0000FFF8
_080341C0: .4byte 0x0000080D
_080341C4:
    ldrh r0, [r4, #0x00]
    ldr r1, _0803421C @ =0x0000F7FF
    ands r1, r0
    ldrh r0, [r4, #0x00]
    strh r1, [r4, #0x00]
_080341CE:
    movs r0, #0x00
    str r0, [r4, #0x04]
    bl track_loadSkySize
    lsls r0, r5, #0x10
    asrs r2, r0, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _080341E2
    adds r0, #0x3F
_080341E2:
    asrs r0, r0, #0x06
    subs r0, #0x28
    ldrh r1, [r4, #0x0E]
    strh r0, [r4, #0x0E]
    ldrh r0, [r4, #0x10]
    movs r3, #0x46
    strh r3, [r4, #0x10]
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _080341F8
    adds r0, #0x7F
_080341F8:
    asrs r0, r0, #0x07
    ldrh r1, [r4, #0x12]
    strh r0, [r4, #0x12]
    ldrh r0, [r4, #0x14]
    strh r3, [r4, #0x14]
    adds r0, r2, #0x0
    cmp r0, #0x00
    bge _0803420A
    adds r0, #0xFF
_0803420A:
    asrs r0, r0, #0x08
    ldrh r1, [r4, #0x16]
    strh r0, [r4, #0x16]
    ldrh r0, [r4, #0x18]
    strh r3, [r4, #0x18]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0803421C: .4byte 0x0000F7FF
    thumb_func_start nullsub_4
nullsub_4: @ 08034220
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8034224
sub_8034224:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x014
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    str r0, [sp, #0x00C]
    ldr r2, _08034298 @ =0x03002E20
    ldr r0, _0803429C @ =0x0000057C
    adds r7, r2, r0
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r1, [r0, #0x00]
    ldr r0, _080342A0 @ =0x0000FFF8
    ands r0, r1
    ldrh r1, [r7, #0x00]
    movs r3, #0x00
    strh r0, [r7, #0x00]
    ldrh r0, [r7, #0x00]
    movs r4, #0x80
    lsls r4, r4, #0x01
    adds r1, r4, #0x0
    orrs r0, r1
    ldrh r1, [r7, #0x00]
    orrs r0, r3
    strh r0, [r7, #0x00]
    ldrh r0, [r7, #0x00]
    movs r4, #0x80
    lsls r4, r4, #0x02
    adds r1, r4, #0x0
    orrs r0, r1
    ldrh r1, [r7, #0x00]
    orrs r0, r3
    strh r0, [r7, #0x00]
    ldrh r0, [r7, #0x00]
    movs r4, #0x80
    lsls r4, r4, #0x03
    adds r1, r4, #0x0
    orrs r0, r1
    ldrh r1, [r7, #0x00]
    orrs r0, r3
    strh r0, [r7, #0x00]
    ldr r0, _080342A4 @ =0x0000080D
    adds r2, r2, r0
    ldrb r0, [r2, #0x00]
    cmp r0, #0x02
    beq _080342A8
    ldrh r0, [r7, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x04
    adds r1, r2, #0x0
    orrs r0, r1
    ldrh r1, [r7, #0x00]
    orrs r0, r3
    strh r0, [r7, #0x00]
    b _080342B2
_08034298: .4byte 0x03002E20
_0803429C: .4byte 0x0000057C
_080342A0: .4byte 0x0000FFF8
_080342A4: .4byte 0x0000080D
_080342A8:
    ldrh r0, [r7, #0x00]
    ldr r1, _08034338 @ =0x0000F7FF
    ands r1, r0
    ldrh r0, [r7, #0x00]
    strh r1, [r7, #0x00]
_080342B2:
    movs r1, #0x00
    str r1, [r7, #0x04]
    ldr r0, _0803433C @ =0x00000F04
    str r0, [sp, #0x000]
    ldr r0, _08034340 @ =0x00004D07
    str r0, [sp, #0x004]
    ldr r0, _08034344 @ =0x00000C07
    str r0, [sp, #0x008]
    mov r0, sp
    ldrh r0, [r0, #0x00]
    ldrh r2, [r7, #0x08]
    strh r0, [r7, #0x08]
    add r0, sp, #0x004
    ldrh r0, [r0, #0x00]
    ldrh r2, [r7, #0x0A]
    strh r0, [r7, #0x0A]
    add r0, sp, #0x008
    ldrh r0, [r0, #0x00]
    ldrh r2, [r7, #0x0C]
    strh r0, [r7, #0x0C]
    ldrh r0, [r7, #0x0E]
    strh r1, [r7, #0x0E]
    ldrh r0, [r7, #0x10]
    movs r0, #0x26
    strh r0, [r7, #0x10]
    ldr r4, _08034348 @ =0x03002E20
    ldr r1, _0803434C @ =0x00000838
    adds r0, r4, r1
    ldr r6, [r0, #0x00]
    adds r0, r6, #0x0
    adds r0, #0xBC
    ldr r2, [r0, #0x00]
    subs r0, #0x30
    ldr r0, [r0, #0x00]
    movs r1, #0x03
    str r2, [sp, #0x010]
    bl __divsi3
    adds r3, r0, #0x0
    ldr r1, _08034350 @ =0x0000054C
    adds r0, r4, r1
    ldr r0, [r0, #0x00]
    mov r8, r0
    adds r1, #0x04
    adds r0, r4, r1
    ldr r5, [r0, #0x00]
    ldr r0, _08034354 @ =0x00000554
    adds r4, r4, r0
    ldr r4, [r4, #0x00]
    mov r9, r4
    ldr r2, [sp, #0x010]
    cmp r2, #0x00
    bne _0803431E
    movs r5, #0x00
_0803431E:
    ldr r0, [r6, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08034378
    cmp r5, #0x01
    beq _08034366
    cmp r5, #0x01
    bgt _08034358
    cmp r5, #0x00
    beq _0803435E
    b _08034386
    .byte 0x00, 0x00
_08034338: .4byte 0x0000F7FF
_0803433C: .4byte 0x00000F04
_08034340: .4byte 0x00004D07
_08034344: .4byte 0x00000C07
_08034348: .4byte 0x03002E20
_0803434C: .4byte 0x00000838
_08034350: .4byte 0x0000054C
_08034354: .4byte 0x00000554
_08034358:
    cmp r5, #0x02
    beq _0803437C
    b _08034386
_0803435E:
    cmp r2, r3
    ble _08034386
    movs r1, #0x06
    b _08034382
_08034366:
    movs r4, #0x01
    negs r4, r4
    add r8, r4
    mov r0, r8
    cmp r0, #0x00
    bgt _08034386
    movs r5, #0x02
    cmp r2, r3
    bge _08034386
_08034378:
    movs r5, #0x00
    b _08034386
_0803437C:
    cmp r2, r3
    bge _08034386
    movs r1, #0x03
_08034382:
    mov r8, r1
    movs r5, #0x01
_08034386:
    movs r2, #0x01
    add r9, r2
    mov r4, r9
    cmp r4, #0x01
    ble _080343C4
    ldr r0, _0803440C @ =0x03002E44
    ldr r1, _08034410 @ =0x0000053C
    adds r0, r0, r1
    mov r10, r0
    ldr r4, [r0, #0x00]
    ldr r1, _08034414 @ =0x080E8124
    lsls r0, r5, #0x02
    adds r0, r0, r1
    ldr r6, [r0, #0x00]
    movs r2, #0x00
    mov r9, r2
    adds r4, #0x01
    cmp r4, #0x05
    ble _080343AE
    movs r4, #0x00
_080343AE:
    bl dmaq_getVBlankDmaQueue
    lsls r1, r4, #0x02
    adds r1, r1, r6
    ldr r1, [r1, #0x00]
    ldr r2, _08034418 @ =0x06005CA0
    ldr r3, _0803441C @ =0x800001A0
    bl dmaq_enqueue
    mov r0, r10
    str r4, [r0, #0x00]
_080343C4:
    ldr r1, _0803440C @ =0x03002E44
    movs r2, #0xA5
    lsls r2, r2, #0x03
    adds r0, r1, r2
    mov r4, r8
    str r4, [r0, #0x00]
    adds r2, #0x04
    adds r0, r1, r2
    str r5, [r0, #0x00]
    movs r4, #0xA6
    lsls r4, r4, #0x03
    adds r0, r1, r4
    mov r1, r9
    str r1, [r0, #0x00]
    movs r2, #0x00
    mov r9, r2
    movs r6, #0x00
    ldr r1, _08034420 @ =0x03002E20
    movs r4, #0x24
    adds r4, r4, r1
    mov r10, r4
    movs r2, #0xAB
    lsls r2, r2, #0x03
    adds r0, r1, r2
    ldr r3, [r0, #0x00]
    ldr r4, _08034424 @ =0x0000055C
    adds r0, r1, r4
    ldr r4, [r0, #0x00]
    mov r8, r1
    cmp r4, #0x01
    beq _08034450
    cmp r4, #0x01
    bgt _08034428
    cmp r4, #0x00
    beq _0803442E
    b _080344AA
_0803440C: .4byte 0x03002E44
_08034410: .4byte 0x0000053C
_08034414: .4byte 0x080E8124
_08034418: .4byte 0x06005CA0
_0803441C: .4byte 0x800001A0
_08034420: .4byte 0x03002E20
_08034424: .4byte 0x0000055C
_08034428:
    cmp r4, #0x02
    beq _08034478
    b _080344AA
_0803442E:
    movs r3, #0x00
    mov r9, r3
    movs r6, #0x00
    ldr r0, _0803444C @ =0x00000838
    add r0, r8
    ldr r0, [r0, #0x00]
    adds r0, #0xC6
    ldrh r0, [r0, #0x00]
    lsrs r0, r0, #0x08
    subs r0, #0x7F
    cmp r0, #0x02
    ble _080344AA
    movs r4, #0x01
    b _080344AA
    .byte 0x00, 0x00
_0803444C: .4byte 0x00000838
_08034450:
    adds r0, r3, #0x0
    cmp r3, #0x00
    bge _08034458
    adds r0, r3, #0x7
_08034458:
    asrs r0, r0, #0x03
    mov r9, r0
    adds r0, r3, #0x0
    cmp r3, #0x00
    bge _08034464
    adds r0, #0x1F
_08034464:
    asrs r6, r0, #0x05
    adds r3, #0x01
    movs r0, #0x80
    lsls r0, r0, #0x03
    cmp r3, r0
    ble _080344AA
    mov r0, r8
    ldr r3, [r0, #0x10]
    movs r4, #0x02
    b _080344AA
_08034478:
    mov r2, r8
    ldr r1, [r2, #0x10]
    subs r1, r1, r3
    lsls r0, r1, #0x14
    lsrs r0, r0, #0x17
    adds r0, #0x80
    mov r9, r0
    ldr r2, _08034554 @ =0x080E645C
    lsls r1, r1, #0x19
    asrs r0, r1, #0x10
    cmp r0, #0x00
    bge _08034492
    adds r0, #0x3F
_08034492:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bge _080344A4
    ldr r1, _08034558 @ =0x00003FFF
    adds r0, r0, r1
_080344A4:
    asrs r0, r0, #0x0E
    adds r6, r0, #0x0
    adds r6, #0x20
_080344AA:
    ldr r2, [sp, #0x00C]
    lsls r0, r2, #0x10
    asrs r2, r0, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _080344B8
    adds r0, #0xFF
_080344B8:
    asrs r5, r0, #0x08
    lsls r0, r5, #0x01
    add r0, r9
    ldrh r1, [r7, #0x12]
    strh r0, [r7, #0x12]
    adds r0, r6, #0x0
    subs r0, #0x0A
    ldrh r1, [r7, #0x14]
    strh r0, [r7, #0x14]
    ldr r0, _0803455C @ =0x00000534
    add r0, r10
    str r3, [r0, #0x00]
    movs r0, #0xA7
    lsls r0, r0, #0x03
    add r0, r10
    str r4, [r0, #0x00]
    mov r3, r8
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _080344E2
    adds r0, #0x7F
_080344E2:
    asrs r0, r0, #0x07
    ldrh r1, [r7, #0x16]
    strh r0, [r7, #0x16]
    ldrh r0, [r7, #0x18]
    movs r0, #0x26
    strh r0, [r7, #0x18]
    movs r4, #0xA8
    lsls r4, r4, #0x03
    adds r0, r3, r4
    str r5, [r0, #0x00]
    ldr r0, _08034560 @ =0x00000564
    add r0, r8
    ldr r6, [r0, #0x00]
    movs r0, #0xAD
    lsls r0, r0, #0x03
    add r0, r8
    ldr r5, [r0, #0x00]
    adds r6, #0x01
    cmp r6, #0x01
    ble _08034514
    movs r6, #0x00
    adds r5, #0x01
    cmp r5, #0x03
    bls _08034514
    movs r5, #0x00
_08034514:
    ldr r1, _08034564 @ =0x080E80CC
    lsls r0, r5, #0x02
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r1, #0x54
    adds r0, r4, #0x0
    movs r2, #0x04
    bl CpuSet
    movs r0, #0x01
    bl pltt_setDirtyFlag
    ldr r0, _08034568 @ =0x03002E20
    ldr r2, _08034560 @ =0x00000564
    adds r1, r0, r2
    str r6, [r1, #0x00]
    movs r4, #0xAD
    lsls r4, r4, #0x03
    adds r0, r0, r4
    str r5, [r0, #0x00]
    add sp, #0x014
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08034554: .4byte 0x080E645C
_08034558: .4byte 0x00003FFF
_0803455C: .4byte 0x00000534
_08034560: .4byte 0x00000564
_08034564: .4byte 0x080E80CC
_08034568: .4byte 0x03002E20
    thumb_func_start sub_803456C
sub_803456C:
    push {r4, lr}
    ldr r4, _080345A4 @ =0x03002E20
    ldr r1, _080345A8 @ =0x080345AD
    movs r0, #0x17
    bl vcount_register
    movs r2, #0xA9
    lsls r2, r2, #0x03
    adds r1, r4, r2
    str r0, [r1, #0x00]
    movs r1, #0xAC
    lsls r1, r1, #0x03
    adds r0, r4, r1
    movs r1, #0x00
    str r1, [r0, #0x00]
    adds r2, #0x1C
    adds r0, r4, r2
    str r1, [r0, #0x00]
    adds r2, #0x04
    adds r0, r4, r2
    str r1, [r0, #0x00]
    ldr r0, [r4, #0x24]
    movs r1, #0x01
    orrs r0, r1
    str r0, [r4, #0x24]
    pop {r4}
    pop {r0}
    bx r0
_080345A4: .4byte 0x03002E20
_080345A8: .4byte sub_80345AC
    thumb_func_start sub_80345AC
sub_80345AC:
    add sp, #-0x004
    movs r0, #0x00
    str r0, [sp, #0x000]
    ldr r0, [sp, #0x000]
    ldr r1, _080345D8 @ =0x03002E20
    cmp r0, #0x31
    bgt _080345C6
_080345BA:
    ldr r0, [sp, #0x000]
    adds r0, #0x01
    str r0, [sp, #0x000]
    ldr r0, [sp, #0x000]
    cmp r0, #0x31
    ble _080345BA
_080345C6:
    ldr r0, _080345DC @ =0x0400001C
    movs r2, #0xA8
    lsls r2, r2, #0x03
    adds r1, r1, r2
    ldr r1, [r1, #0x00]
    strh r1, [r0, #0x00]
    add sp, #0x004
    bx lr
    .byte 0x00, 0x00
_080345D8: .4byte 0x03002E20
_080345DC: .4byte 0x0400001C
    thumb_func_start sub_80345E0
sub_80345E0:
    push {r4, r5, r6, lr}
    add sp, #-0x00C
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    ldr r2, _0803464C @ =0x03002E20
    ldr r0, _08034650 @ =0x0000057C
    adds r4, r2, r0
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r1, [r0, #0x00]
    ldr r0, _08034654 @ =0x0000FFF8
    ands r0, r1
    ldrh r1, [r4, #0x00]
    movs r3, #0x00
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x01
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x02
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x03
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldr r1, _08034658 @ =0x0000080D
    adds r0, r2, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x02
    beq _0803465C
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x04
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    b _08034666
    .byte 0x00, 0x00
_0803464C: .4byte 0x03002E20
_08034650: .4byte 0x0000057C
_08034654: .4byte 0x0000FFF8
_08034658: .4byte 0x0000080D
_0803465C:
    ldrh r0, [r4, #0x00]
    ldr r1, _08034768 @ =0x0000F7FF
    ands r1, r0
    ldrh r0, [r4, #0x00]
    strh r1, [r4, #0x00]
_08034666:
    movs r0, #0x00
    str r0, [r4, #0x04]
    ldr r0, _0803476C @ =0x00000F07
    str r0, [sp, #0x000]
    ldr r0, _08034770 @ =0x00000E07
    str r0, [sp, #0x004]
    ldr r0, _08034774 @ =0x00000D07
    str r0, [sp, #0x008]
    mov r0, sp
    ldrh r0, [r0, #0x00]
    ldrh r1, [r4, #0x08]
    strh r0, [r4, #0x08]
    add r0, sp, #0x004
    ldrh r0, [r0, #0x00]
    ldrh r1, [r4, #0x0A]
    strh r0, [r4, #0x0A]
    add r0, sp, #0x008
    ldrh r0, [r0, #0x00]
    ldrh r1, [r4, #0x0C]
    strh r0, [r4, #0x0C]
    lsls r0, r5, #0x10
    asrs r3, r0, #0x10
    adds r0, r3, #0x0
    cmp r3, #0x00
    bge _0803469A
    adds r0, #0x3F
_0803469A:
    asrs r0, r0, #0x06
    ldrh r1, [r4, #0x0E]
    strh r0, [r4, #0x0E]
    ldrh r0, [r4, #0x10]
    movs r5, #0x26
    strh r5, [r4, #0x10]
    adds r0, r3, #0x0
    cmp r3, #0x00
    bge _080346AE
    adds r0, #0x7F
_080346AE:
    asrs r0, r0, #0x07
    ldrh r1, [r4, #0x12]
    strh r0, [r4, #0x12]
    ldrh r0, [r4, #0x14]
    strh r5, [r4, #0x14]
    adds r0, r3, #0x0
    cmp r0, #0x00
    bge _080346C0
    adds r0, #0xFF
_080346C0:
    asrs r0, r0, #0x08
    ldrh r1, [r4, #0x16]
    strh r0, [r4, #0x16]
    ldrh r0, [r4, #0x18]
    strh r5, [r4, #0x18]
    ldr r1, _08034778 @ =0x0000053C
    adds r0, r2, r1
    ldr r6, [r0, #0x00]
    adds r1, #0x04
    adds r0, r2, r1
    ldr r5, [r0, #0x00]
    adds r6, #0x01
    cmp r6, #0x0F
    ble _080346E6
    movs r6, #0x00
    adds r5, #0x01
    cmp r5, #0x0B
    bls _080346E6
    movs r5, #0x00
_080346E6:
    ldr r1, _0803477C @ =0x080E8130
    lsls r0, r5, #0x02
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r1, #0xEE
    adds r0, r4, #0x0
    movs r2, #0x09
    bl CpuSet
    ldr r1, _08034780 @ =0x03002E20
    ldr r2, _08034778 @ =0x0000053C
    adds r0, r1, r2
    str r6, [r0, #0x00]
    movs r6, #0xA8
    lsls r6, r6, #0x03
    adds r0, r1, r6
    str r5, [r0, #0x00]
    adds r2, #0x08
    adds r0, r1, r2
    ldr r6, [r0, #0x00]
    movs r0, #0xA9
    lsls r0, r0, #0x03
    adds r1, r1, r0
    ldr r5, [r1, #0x00]
    adds r6, #0x01
    cmp r6, #0x0F
    ble _0803472E
    movs r6, #0x00
    adds r5, #0x01
    cmp r5, #0x0B
    bls _0803472E
    movs r5, #0x00
_0803472E:
    ldr r1, _08034784 @ =0x080E8160
    lsls r0, r5, #0x02
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r1, #0xC0
    adds r0, r4, #0x0
    movs r2, #0x08
    bl CpuFastSet
    ldr r0, _08034780 @ =0x03002E20
    ldr r2, _08034788 @ =0x00000544
    adds r1, r0, r2
    str r6, [r1, #0x00]
    movs r6, #0xA9
    lsls r6, r6, #0x03
    adds r0, r0, r6
    str r5, [r0, #0x00]
    movs r0, #0x01
    bl pltt_setDirtyFlag
    add sp, #0x00C
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08034768: .4byte 0x0000F7FF
_0803476C: .4byte 0x00000F07
_08034770: .4byte 0x00000E07
_08034774: .4byte 0x00000D07
_08034778: .4byte 0x0000053C
_0803477C: .4byte 0x080E8130
_08034780: .4byte 0x03002E20
_08034784: .4byte 0x080E8160
_08034788: .4byte 0x00000544
    thumb_func_start sub_803478C
sub_803478C:
    ldr r1, _080347B0 @ =0x03002E20
    ldr r2, _080347B4 @ =0x0000053C
    adds r0, r1, r2
    movs r2, #0x00
    str r2, [r0, #0x00]
    movs r3, #0xA8
    lsls r3, r3, #0x03
    adds r0, r1, r3
    str r2, [r0, #0x00]
    adds r3, #0x04
    adds r0, r1, r3
    str r2, [r0, #0x00]
    movs r0, #0xA9
    lsls r0, r0, #0x03
    adds r1, r1, r0
    str r2, [r1, #0x00]
    bx lr
    .byte 0x00, 0x00
_080347B0: .4byte 0x03002E20
_080347B4: .4byte 0x0000053C
    thumb_func_start sub_80347B8
sub_80347B8:
    push {r4, r5, r6, r7, lr}
    add sp, #-0x00C
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    ldr r2, _08034824 @ =0x03002E20
    ldr r0, _08034828 @ =0x0000057C
    adds r4, r2, r0
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r1, [r0, #0x00]
    ldr r0, _0803482C @ =0x0000FFF8
    ands r0, r1
    ldrh r1, [r4, #0x00]
    movs r3, #0x00
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x01
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x02
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x03
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldr r1, _08034830 @ =0x0000080D
    adds r0, r2, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x02
    beq _08034834
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x04
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    b _0803483E
    .byte 0x00, 0x00
_08034824: .4byte 0x03002E20
_08034828: .4byte 0x0000057C
_0803482C: .4byte 0x0000FFF8
_08034830: .4byte 0x0000080D
_08034834:
    ldrh r0, [r4, #0x00]
    ldr r1, _0803495C @ =0x0000F7FF
    ands r1, r0
    ldrh r0, [r4, #0x00]
    strh r1, [r4, #0x00]
_0803483E:
    movs r0, #0x00
    str r0, [r4, #0x04]
    ldr r0, _08034960 @ =0x00000F07
    str r0, [sp, #0x000]
    ldr r0, _08034964 @ =0x00000E07
    str r0, [sp, #0x004]
    ldr r0, _08034968 @ =0x00000D07
    str r0, [sp, #0x008]
    mov r0, sp
    ldrh r0, [r0, #0x00]
    ldrh r1, [r4, #0x08]
    strh r0, [r4, #0x08]
    add r0, sp, #0x004
    ldrh r0, [r0, #0x00]
    ldrh r1, [r4, #0x0A]
    strh r0, [r4, #0x0A]
    add r0, sp, #0x008
    ldrh r0, [r0, #0x00]
    ldrh r1, [r4, #0x0C]
    strh r0, [r4, #0x0C]
    lsls r0, r5, #0x10
    asrs r3, r0, #0x10
    adds r0, r3, #0x0
    cmp r3, #0x00
    bge _08034872
    adds r0, #0x3F
_08034872:
    asrs r0, r0, #0x06
    ldrh r1, [r4, #0x0E]
    strh r0, [r4, #0x0E]
    ldrh r0, [r4, #0x10]
    movs r5, #0x26
    strh r5, [r4, #0x10]
    adds r0, r3, #0x0
    cmp r3, #0x00
    bge _08034886
    adds r0, #0x7F
_08034886:
    asrs r0, r0, #0x07
    ldrh r1, [r4, #0x12]
    strh r0, [r4, #0x12]
    ldrh r0, [r4, #0x14]
    strh r5, [r4, #0x14]
    adds r0, r3, #0x0
    cmp r0, #0x00
    bge _08034898
    adds r0, #0xFF
_08034898:
    asrs r0, r0, #0x08
    ldrh r1, [r4, #0x16]
    strh r0, [r4, #0x16]
    ldrh r0, [r4, #0x18]
    strh r5, [r4, #0x18]
    ldr r1, _0803496C @ =0x00000544
    adds r0, r2, r1
    ldr r6, [r0, #0x00]
    adds r1, #0x04
    adds r0, r2, r1
    ldr r5, [r0, #0x00]
    adds r6, #0x01
    cmp r6, #0x0F
    ble _080348BE
    movs r6, #0x00
    adds r5, #0x01
    cmp r5, #0x0B
    bls _080348BE
    movs r5, #0x00
_080348BE:
    ldr r1, _08034970 @ =0x080E8190
    lsls r0, r5, #0x02
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r1, #0xCC
    adds r0, r4, #0x0
    movs r2, #0x05
    bl CpuSet
    ldr r1, _08034974 @ =0x03002E20
    ldr r2, _0803496C @ =0x00000544
    adds r0, r1, r2
    str r6, [r0, #0x00]
    movs r6, #0xA9
    lsls r6, r6, #0x03
    adds r0, r1, r6
    str r5, [r0, #0x00]
    adds r2, #0x08
    adds r0, r1, r2
    ldr r7, [r0, #0x00]
    adds r6, #0x08
    adds r1, r1, r6
    ldr r6, [r1, #0x00]
    adds r7, #0x01
    cmp r7, #0x04
    ble _08034904
    movs r7, #0x00
    adds r6, #0x01
    cmp r6, #0x01
    bls _08034904
    movs r6, #0x00
_08034904:
    ldr r0, _08034978 @ =0x080E81C0
    lsls r4, r6, #0x02
    adds r0, r4, r0
    ldr r5, [r0, #0x00]
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r0, #0x88
    lsls r0, r0, #0x01
    adds r1, r1, r0
    adds r0, r5, #0x0
    movs r2, #0x03
    bl CpuSet
    ldr r0, _0803497C @ =0x080E81C8
    adds r4, r4, r0
    ldr r4, [r4, #0x00]
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r2, #0x8E
    lsls r2, r2, #0x01
    adds r1, r1, r2
    adds r0, r4, #0x0
    movs r2, #0x02
    bl CpuSet
    ldr r0, _08034974 @ =0x03002E20
    ldr r2, _08034980 @ =0x0000054C
    adds r1, r0, r2
    str r7, [r1, #0x00]
    movs r1, #0xAA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    str r6, [r0, #0x00]
    movs r0, #0x01
    bl pltt_setDirtyFlag
    add sp, #0x00C
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0803495C: .4byte 0x0000F7FF
_08034960: .4byte 0x00000F07
_08034964: .4byte 0x00000E07
_08034968: .4byte 0x00000D07
_0803496C: .4byte 0x00000544
_08034970: .4byte 0x080E8190
_08034974: .4byte 0x03002E20
_08034978: .4byte 0x080E81C0
_0803497C: .4byte 0x080E81C8
_08034980: .4byte 0x0000054C
    thumb_func_start sub_8034984
sub_8034984:
    ldr r1, _080349A8 @ =0x03002E20
    ldr r2, _080349AC @ =0x00000544
    adds r0, r1, r2
    movs r2, #0x00
    str r2, [r0, #0x00]
    movs r3, #0xA9
    lsls r3, r3, #0x03
    adds r0, r1, r3
    str r2, [r0, #0x00]
    adds r3, #0x04
    adds r0, r1, r3
    str r2, [r0, #0x00]
    movs r0, #0xAA
    lsls r0, r0, #0x03
    adds r1, r1, r0
    str r2, [r1, #0x00]
    bx lr
    .byte 0x00, 0x00
_080349A8: .4byte 0x03002E20
_080349AC: .4byte 0x00000544
    thumb_func_start sub_80349B0
sub_80349B0:
    push {r4, r5, r6, lr}
    add sp, #-0x00C
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    ldr r2, _08034A1C @ =0x03002E20
    ldr r0, _08034A20 @ =0x0000057C
    adds r3, r2, r0
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r1, [r0, #0x00]
    ldr r0, _08034A24 @ =0x0000FFF8
    ands r0, r1
    ldrh r1, [r3, #0x00]
    movs r4, #0x00
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x01
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x02
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x03
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldr r0, _08034A28 @ =0x0000080D
    adds r2, r2, r0
    ldrb r0, [r2, #0x00]
    cmp r0, #0x02
    beq _08034A2C
    ldrh r0, [r3, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x04
    adds r1, r2, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    b _08034A36
    .byte 0x00, 0x00
_08034A1C: .4byte 0x03002E20
_08034A20: .4byte 0x0000057C
_08034A24: .4byte 0x0000FFF8
_08034A28: .4byte 0x0000080D
_08034A2C:
    ldrh r0, [r3, #0x00]
    ldr r1, _08034AA4 @ =0x0000F7FF
    ands r1, r0
    ldrh r0, [r3, #0x00]
    strh r1, [r3, #0x00]
_08034A36:
    movs r0, #0x00
    str r0, [r3, #0x04]
    ldr r0, _08034AA8 @ =0x00000F06
    str r0, [sp, #0x000]
    ldr r0, _08034AAC @ =0x00000E06
    str r0, [sp, #0x004]
    subs r0, #0xFF
    str r0, [sp, #0x008]
    mov r0, sp
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x08]
    strh r0, [r3, #0x08]
    add r0, sp, #0x004
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x0A]
    strh r0, [r3, #0x0A]
    add r0, sp, #0x008
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x0C]
    strh r0, [r3, #0x0C]
    lsls r0, r5, #0x10
    asrs r2, r0, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08034A6A
    adds r0, #0x3F
_08034A6A:
    asrs r0, r0, #0x06
    ldrh r1, [r3, #0x0E]
    strh r0, [r3, #0x0E]
    ldrh r0, [r3, #0x10]
    movs r4, #0x26
    strh r4, [r3, #0x10]
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08034A7E
    adds r0, #0x7F
_08034A7E:
    asrs r0, r0, #0x07
    ldrh r1, [r3, #0x12]
    strh r0, [r3, #0x12]
    ldrh r0, [r3, #0x14]
    strh r4, [r3, #0x14]
    adds r0, r2, #0x0
    cmp r0, #0x00
    bge _08034A90
    adds r0, #0xFF
_08034A90:
    asrs r0, r0, #0x08
    ldrh r1, [r3, #0x16]
    strh r0, [r3, #0x16]
    ldrh r0, [r3, #0x18]
    strh r4, [r3, #0x18]
    add sp, #0x00C
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08034AA4: .4byte 0x0000F7FF
_08034AA8: .4byte 0x00000F06
_08034AAC: .4byte 0x00000E06
    thumb_func_start sub_8034AB0
sub_8034AB0:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x018
    ldr r2, _08034B24 @ =0x03002E20
    ldr r0, _08034B28 @ =0x0000057C
    adds r0, r0, r2
    mov r10, r0
    ldr r3, _08034B2C @ =0x00000BC8
    adds r0, r2, r3
    ldr r0, [r0, #0x00]
    mov r9, r0
    ldr r3, _08034B30 @ =0x0000080D
    adds r0, r2, r3
    ldrb r0, [r0, #0x00]
    cmp r0, #0x02
    bne _08034AD8
    b _08034CB0
_08034AD8:
    ldr r1, _08034B34 @ =0x0000053C
    adds r0, r2, r1
    ldr r0, [r0, #0x00]
    mov r8, r0
    movs r3, #0xA8
    lsls r3, r3, #0x03
    adds r0, r2, r3
    ldr r6, [r0, #0x00]
    adds r1, #0x08
    adds r0, r2, r1
    ldr r7, [r0, #0x00]
    adds r3, #0x08
    adds r0, r2, r3
    ldr r4, [r0, #0x00]
    adds r1, #0x08
    adds r0, r2, r1
    ldr r5, [r0, #0x00]
    ldr r1, [r2, #0x10]
    movs r2, #0x01
    add r8, r2
    mov r3, r8
    cmp r3, #0x7D
    ble _08034BA0
    movs r0, #0x00
    mov r8, r0
    movs r6, #0x00
    movs r7, #0x00
    movs r4, #0x00
    movs r5, #0x00
    movs r0, #0x07
    ands r0, r1
    cmp r0, #0x07
    bhi _08034B9C
    lsls r0, r0, #0x02
    ldr r1, _08034B38 @ =0x08034B3C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08034B24: .4byte 0x03002E20
_08034B28: .4byte 0x0000057C
_08034B2C: .4byte 0x00000BC8
_08034B30: .4byte 0x0000080D
_08034B34: .4byte 0x0000053C
_08034B38: .4byte 0x08034B3C
    .byte 0x5C, 0x4B, 0x03, 0x08, 0x64, 0x4B, 0x03, 0x08, 0x68, 0x4B, 0x03, 0x08, 0x76, 0x4B, 0x03, 0x08
    .byte 0x7E, 0x4B, 0x03, 0x08, 0x86, 0x4B, 0x03, 0x08, 0x8E, 0x4B, 0x03, 0x08, 0x96, 0x4B, 0x03, 0x08
    .byte 0x01, 0x26, 0x25, 0xF0, 0xD5, 0xFB, 0x14, 0xE0, 0x01, 0x27, 0x00, 0xE0, 0x01, 0x26, 0x25, 0xF0
    .byte 0xCF, 0xFB, 0x01, 0x25, 0x25, 0xF0, 0xC2, 0xFB, 0x12, 0xE0, 0x01, 0x27, 0x25, 0xF0, 0xC8, 0xFB
    .byte 0x07, 0xE0, 0x01, 0x26, 0x25, 0xF0, 0xC4, 0xFB, 0x0A, 0xE0, 0x01, 0x27, 0x25, 0xF0, 0xC0, 0xFB
    .byte 0x06, 0xE0, 0x01, 0x24, 0x25, 0xF0, 0xB2, 0xFB, 0x02, 0xE0, 0x01, 0x25, 0x25, 0xF0, 0xAE, 0xFB
_08034B9C:
    bl sub_805A2D4
_08034BA0:
    cmp r6, #0x00
    beq _08034BDC
    mov r2, r10
    ldrh r1, [r2, #0x16]
    movs r0, #0x40
    subs r0, r0, r1
    lsls r0, r0, #0x10
    ldr r2, _08034CC0 @ =0xFFFF0000
    mov r1, r9
    adds r1, #0x3A
    lsls r1, r1, #0x10
    lsrs r0, r0, #0x10
    orrs r0, r1
    str r0, [sp, #0x008]
    add r1, sp, #0x008
    ldrb r1, [r1, #0x00]
    ands r0, r2
    orrs r0, r1
    str r0, [sp, #0x008]
    ldr r0, _08034CC4 @ =0x0807C9C8
    movs r3, #0x80
    lsls r3, r3, #0x01
    movs r1, #0x00
    str r1, [sp, #0x000]
    ldr r1, _08034CC8 @ =0x080E81D0
    str r1, [sp, #0x004]
    add r1, sp, #0x008
    adds r2, r3, #0x0
    bl oam_renderCellData
_08034BDC:
    cmp r7, #0x00
    beq _08034C16
    mov r3, r10
    ldrh r1, [r3, #0x16]
    movs r0, #0x70
    subs r0, r0, r1
    lsls r0, r0, #0x10
    ldr r3, _08034CC0 @ =0xFFFF0000
    mov r1, r9
    adds r1, #0x3A
    lsls r1, r1, #0x10
    lsrs r0, r0, #0x10
    orrs r0, r1
    str r0, [sp, #0x00C]
    add r1, sp, #0x00C
    ldrb r2, [r1, #0x00]
    ands r0, r3
    orrs r0, r2
    str r0, [sp, #0x00C]
    ldr r0, _08034CCC @ =0x0807C9D0
    movs r3, #0x80
    lsls r3, r3, #0x01
    movs r2, #0x00
    str r2, [sp, #0x000]
    ldr r2, _08034CC8 @ =0x080E81D0
    str r2, [sp, #0x004]
    adds r2, r3, #0x0
    bl oam_renderCellData
_08034C16:
    cmp r4, #0x00
    beq _08034C50
    mov r0, r10
    ldrh r1, [r0, #0x16]
    movs r0, #0x98
    subs r0, r0, r1
    lsls r0, r0, #0x10
    ldr r3, _08034CC0 @ =0xFFFF0000
    mov r1, r9
    adds r1, #0x3A
    lsls r1, r1, #0x10
    lsrs r0, r0, #0x10
    orrs r0, r1
    str r0, [sp, #0x010]
    add r1, sp, #0x010
    ldrb r2, [r1, #0x00]
    ands r0, r3
    orrs r0, r2
    str r0, [sp, #0x010]
    ldr r0, _08034CD0 @ =0x0807C9D8
    movs r3, #0x80
    lsls r3, r3, #0x01
    movs r2, #0x00
    str r2, [sp, #0x000]
    ldr r2, _08034CC8 @ =0x080E81D0
    str r2, [sp, #0x004]
    adds r2, r3, #0x0
    bl oam_renderCellData
_08034C50:
    cmp r5, #0x00
    beq _08034C8A
    mov r2, r10
    ldrh r1, [r2, #0x16]
    movs r0, #0xE0
    subs r0, r0, r1
    lsls r0, r0, #0x10
    ldr r3, _08034CC0 @ =0xFFFF0000
    mov r1, r9
    adds r1, #0x32
    lsls r1, r1, #0x10
    lsrs r0, r0, #0x10
    orrs r0, r1
    str r0, [sp, #0x014]
    add r1, sp, #0x014
    ldrb r2, [r1, #0x00]
    ands r0, r3
    orrs r0, r2
    str r0, [sp, #0x014]
    ldr r0, _08034CD4 @ =0x0807C9E0
    movs r3, #0x80
    lsls r3, r3, #0x01
    movs r2, #0x00
    str r2, [sp, #0x000]
    ldr r2, _08034CC8 @ =0x080E81D0
    str r2, [sp, #0x004]
    adds r2, r3, #0x0
    bl oam_renderCellData
_08034C8A:
    ldr r3, _08034CD8 @ =0x03002E44
    movs r1, #0xA3
    lsls r1, r1, #0x03
    adds r0, r3, r1
    mov r2, r8
    str r2, [r0, #0x00]
    adds r1, #0x04
    adds r0, r3, r1
    str r6, [r0, #0x00]
    movs r2, #0xA4
    lsls r2, r2, #0x03
    adds r0, r3, r2
    str r7, [r0, #0x00]
    adds r1, #0x08
    adds r0, r3, r1
    str r4, [r0, #0x00]
    adds r2, #0x08
    adds r0, r3, r2
    str r5, [r0, #0x00]
_08034CB0:
    add sp, #0x018
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08034CC0: .4byte 0xFFFF0000
_08034CC4: .4byte 0x0807C9C8
_08034CC8: .4byte 0x080E81D0
_08034CCC: .4byte 0x0807C9D0
_08034CD0: .4byte 0x0807C9D8
_08034CD4: .4byte 0x0807C9E0
_08034CD8: .4byte 0x03002E44
    thumb_func_start sub_8034CDC
sub_8034CDC:
    push {lr}
    ldr r0, _08034D00 @ =0x03002E20
    movs r1, #0xE8
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_804F7AC
    adds r2, r0, #0x0
    cmp r2, #0x00
    beq _08034CFA
    adds r0, #0x4C
    movs r1, #0x00
    strh r1, [r0, #0x00]
    ldr r0, _08034D04 @ =0x08034AB1
    str r0, [r2, #0x14]
_08034CFA:
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08034D00: .4byte 0x03002E20
_08034D04: .4byte sub_8034AB0
    thumb_func_start sub_8034D08
sub_8034D08:
    push {r4, r5, r6, lr}
    add sp, #-0x00C
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    ldr r2, _08034D74 @ =0x03002E20
    ldr r0, _08034D78 @ =0x0000057C
    adds r3, r2, r0
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r1, [r0, #0x00]
    ldr r0, _08034D7C @ =0x0000FFF8
    ands r0, r1
    ldrh r1, [r3, #0x00]
    movs r4, #0x00
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x01
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x02
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x03
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldr r0, _08034D80 @ =0x0000080D
    adds r2, r2, r0
    ldrb r0, [r2, #0x00]
    cmp r0, #0x02
    beq _08034D84
    ldrh r0, [r3, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x04
    adds r1, r2, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    b _08034D8E
    .byte 0x00, 0x00
_08034D74: .4byte 0x03002E20
_08034D78: .4byte 0x0000057C
_08034D7C: .4byte 0x0000FFF8
_08034D80: .4byte 0x0000080D
_08034D84:
    ldrh r0, [r3, #0x00]
    ldr r1, _08034DFC @ =0x0000F7FF
    ands r1, r0
    ldrh r0, [r3, #0x00]
    strh r1, [r3, #0x00]
_08034D8E:
    movs r0, #0x00
    str r0, [r3, #0x04]
    ldr r0, _08034E00 @ =0x00000F07
    str r0, [sp, #0x000]
    ldr r0, _08034E04 @ =0x00000E07
    str r0, [sp, #0x004]
    ldr r0, _08034E08 @ =0x00000D07
    str r0, [sp, #0x008]
    mov r0, sp
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x08]
    strh r0, [r3, #0x08]
    add r0, sp, #0x004
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x0A]
    strh r0, [r3, #0x0A]
    add r0, sp, #0x008
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x0C]
    strh r0, [r3, #0x0C]
    lsls r0, r5, #0x10
    asrs r2, r0, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08034DC2
    adds r0, #0x3F
_08034DC2:
    asrs r0, r0, #0x06
    ldrh r1, [r3, #0x0E]
    strh r0, [r3, #0x0E]
    ldrh r0, [r3, #0x10]
    movs r4, #0x26
    strh r4, [r3, #0x10]
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08034DD6
    adds r0, #0x7F
_08034DD6:
    asrs r0, r0, #0x07
    ldrh r1, [r3, #0x12]
    strh r0, [r3, #0x12]
    ldrh r0, [r3, #0x14]
    strh r4, [r3, #0x14]
    adds r0, r2, #0x0
    cmp r0, #0x00
    bge _08034DE8
    adds r0, #0xFF
_08034DE8:
    asrs r0, r0, #0x08
    ldrh r1, [r3, #0x16]
    strh r0, [r3, #0x16]
    ldrh r0, [r3, #0x18]
    strh r4, [r3, #0x18]
    add sp, #0x00C
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08034DFC: .4byte 0x0000F7FF
_08034E00: .4byte 0x00000F07
_08034E04: .4byte 0x00000E07
_08034E08: .4byte 0x00000D07
    thumb_func_start sub_8034E0C
sub_8034E0C:
    push {lr}
    ldr r1, _08034E1C @ =0x080F1F7C
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
    pop {r0}
    bx r0
_08034E1C: .4byte 0x080F1F7C
    thumb_func_start sub_8034E20
sub_8034E20:
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    ldr r2, _08034E88 @ =0x03002E20
    ldr r0, _08034E8C @ =0x0000057C
    adds r4, r2, r0
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r1, [r0, #0x00]
    ldr r0, _08034E90 @ =0x0000FFF8
    ands r0, r1
    ldrh r1, [r4, #0x00]
    movs r3, #0x00
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x01
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x02
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x03
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldr r0, _08034E94 @ =0x0000080D
    adds r2, r2, r0
    ldrb r0, [r2, #0x00]
    cmp r0, #0x02
    beq _08034E98
    ldrh r0, [r4, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x04
    adds r1, r2, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    b _08034EA2
_08034E88: .4byte 0x03002E20
_08034E8C: .4byte 0x0000057C
_08034E90: .4byte 0x0000FFF8
_08034E94: .4byte 0x0000080D
_08034E98:
    ldrh r0, [r4, #0x00]
    ldr r1, _08034F40 @ =0x0000F7FF
    ands r1, r0
    ldrh r0, [r4, #0x00]
    strh r1, [r4, #0x00]
_08034EA2:
    movs r0, #0x00
    str r0, [r4, #0x04]
    bl track_loadSkySize
    ldr r0, _08034F44 @ =0x03002E20
    ldr r3, [r0, #0x10]
    ldr r6, _08034F48 @ =0x080E645C
    mov r12, r6
    lsls r0, r3, #0x18
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _08034EBC
    adds r0, #0x3F
_08034EBC:
    asrs r0, r0, #0x06
    movs r1, #0x80
    lsls r1, r1, #0x01
    subs r1, r1, r0
    ldr r6, _08034F4C @ =0x000003FF
    ands r1, r6
    lsls r1, r1, #0x02
    add r1, r12
    ldr r1, [r1, #0x00]
    lsls r0, r5, #0x10
    asrs r2, r0, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08034EDA
    adds r0, #0x7F
_08034EDA:
    asrs r5, r0, #0x07
    adds r0, r1, #0x0
    cmp r0, #0x00
    bge _08034EE6
    ldr r1, _08034F50 @ =0x000007FF
    adds r0, r0, r1
_08034EE6:
    asrs r0, r0, #0x0B
    adds r0, r5, r0
    ldrh r1, [r4, #0x0E]
    strh r0, [r4, #0x0E]
    ldrh r0, [r4, #0x10]
    movs r7, #0x26
    strh r7, [r4, #0x10]
    lsls r0, r3, #0x15
    lsrs r0, r0, #0x17
    ldr r1, _08034F54 @ =0x0000FFA0
    adds r0, r0, r1
    adds r0, r5, r0
    ldrh r1, [r4, #0x12]
    strh r0, [r4, #0x12]
    lsls r0, r3, #0x19
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _08034F0C
    adds r0, #0x3F
_08034F0C:
    asrs r0, r0, #0x06
    ands r0, r6
    lsls r0, r0, #0x02
    add r0, r12
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bge _08034F1E
    ldr r6, _08034F58 @ =0x00001FFF
    adds r0, r0, r6
_08034F1E:
    asrs r0, r0, #0x0D
    adds r0, #0x20
    ldrh r1, [r4, #0x14]
    strh r0, [r4, #0x14]
    adds r0, r2, #0x0
    cmp r0, #0x00
    bge _08034F2E
    adds r0, #0xFF
_08034F2E:
    asrs r0, r0, #0x08
    ldrh r1, [r4, #0x16]
    strh r0, [r4, #0x16]
    ldrh r0, [r4, #0x18]
    strh r7, [r4, #0x18]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08034F40: .4byte 0x0000F7FF
_08034F44: .4byte 0x03002E20
_08034F48: .4byte 0x080E645C
_08034F4C: .4byte 0x000003FF
_08034F50: .4byte 0x000007FF
_08034F54: .4byte 0x0000FFA0
_08034F58: .4byte 0x00001FFF
    thumb_func_start nullsub_5
nullsub_5: @ 08034F5C
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8034F60
sub_8034F60:
    push {r4, r5, r6, r7, lr}
    adds r6, r2, #0x0
    adds r7, r3, #0x0
    ldr r5, _08034FA0 @ =0x030021B8
    lsls r4, r0, #0x03
    adds r2, r4, r5
    movs r3, #0x03
_08034F6E:
    ldrh r0, [r1, #0x00]
    strh r0, [r2, #0x00]
    adds r1, #0x02
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _08034F6E
    adds r2, r5, #0x6
    adds r2, r4, r2
    ldrh r1, [r2, #0x00]
    ldr r0, _08034FA4 @ =0x0000F3FF
    ands r0, r1
    lsls r1, r6, #0x0A
    orrs r0, r1
    strh r0, [r2, #0x00]
    adds r1, r5, #0x4
    adds r1, r4, r1
    lsls r0, r7, #0x0C
    ldrh r2, [r1, #0x00]
    orrs r0, r2
    strh r0, [r1, #0x00]
    adds r0, r4, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
_08034FA0: .4byte 0x030021B8
_08034FA4: .4byte 0x0000F3FF
    thumb_func_start sub_8034FA8
sub_8034FA8:
    push {r4, r5, r6, lr}
    add sp, #-0x00C
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    ldr r2, _08035014 @ =0x03002E20
    ldr r0, _08035018 @ =0x0000057C
    adds r3, r2, r0
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r1, [r0, #0x00]
    ldr r0, _0803501C @ =0x0000FFF8
    ands r0, r1
    ldrh r1, [r3, #0x00]
    movs r4, #0x00
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x01
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x02
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x03
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldr r0, _08035020 @ =0x0000080D
    adds r2, r2, r0
    ldrb r0, [r2, #0x00]
    cmp r0, #0x02
    beq _08035024
    ldrh r0, [r3, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x04
    adds r1, r2, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    b _0803502E
    .byte 0x00, 0x00
_08035014: .4byte 0x03002E20
_08035018: .4byte 0x0000057C
_0803501C: .4byte 0x0000FFF8
_08035020: .4byte 0x0000080D
_08035024:
    ldrh r0, [r3, #0x00]
    ldr r1, _0803509C @ =0x0000F7FF
    ands r1, r0
    ldrh r0, [r3, #0x00]
    strh r1, [r3, #0x00]
_0803502E:
    movs r0, #0x00
    str r0, [r3, #0x04]
    ldr r0, _080350A0 @ =0x00000F07
    str r0, [sp, #0x000]
    ldr r0, _080350A4 @ =0x00000E07
    str r0, [sp, #0x004]
    ldr r0, _080350A8 @ =0x00000D07
    str r0, [sp, #0x008]
    mov r0, sp
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x08]
    strh r0, [r3, #0x08]
    add r0, sp, #0x004
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x0A]
    strh r0, [r3, #0x0A]
    add r0, sp, #0x008
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x0C]
    strh r0, [r3, #0x0C]
    lsls r0, r5, #0x10
    asrs r2, r0, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08035062
    adds r0, #0x3F
_08035062:
    asrs r0, r0, #0x06
    ldrh r1, [r3, #0x0E]
    strh r0, [r3, #0x0E]
    ldrh r0, [r3, #0x10]
    movs r4, #0x26
    strh r4, [r3, #0x10]
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08035076
    adds r0, #0x7F
_08035076:
    asrs r0, r0, #0x07
    subs r0, #0x28
    ldrh r1, [r3, #0x12]
    strh r0, [r3, #0x12]
    ldrh r0, [r3, #0x14]
    strh r4, [r3, #0x14]
    adds r0, r2, #0x0
    cmp r0, #0x00
    bge _0803508A
    adds r0, #0xFF
_0803508A:
    asrs r0, r0, #0x08
    ldrh r1, [r3, #0x16]
    strh r0, [r3, #0x16]
    ldrh r0, [r3, #0x18]
    strh r4, [r3, #0x18]
    add sp, #0x00C
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0803509C: .4byte 0x0000F7FF
_080350A0: .4byte 0x00000F07
_080350A4: .4byte 0x00000E07
_080350A8: .4byte 0x00000D07
    thumb_func_start sub_80350AC
sub_80350AC:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x018
    ldr r4, _08035184 @ =0x03002E20
    ldr r1, _08035188 @ =0x00000848
    adds r0, r4, r1
    ldrh r7, [r0, #0x14]
    ldr r2, _0803518C @ =0x00000BC8
    adds r0, r4, r2
    ldr r0, [r0, #0x00]
    mov r8, r0
    movs r3, #0x24
    adds r3, r3, r4
    mov r10, r3
    ldr r6, _08035190 @ =0x0000053C
    adds r0, r4, r6
    ldr r5, [r0, #0x00]
    movs r0, #0xAA
    muls r0, r5
    movs r1, #0xC0
    lsls r1, r1, #0x01
    bl __divsi3
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    ldr r3, _08035194 @ =0xFFFF0000
    ldr r1, [sp, #0x008]
    ands r1, r3
    orrs r1, r0
    str r1, [sp, #0x008]
    add r0, sp, #0x008
    ldrh r0, [r0, #0x00]
    movs r6, #0x8A
    lsls r6, r6, #0x01
    adds r2, r0, r6
    lsls r0, r7, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _08035102
    adds r0, #0x7F
_08035102:
    asrs r0, r0, #0x07
    subs r0, r2, r0
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    adds r2, r3, #0x0
    ands r2, r1
    orrs r2, r0
    str r2, [sp, #0x008]
    ldr r3, _08035198 @ =0x080E645C
    lsls r0, r5, #0x19
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0803511E
    adds r0, #0x3F
_0803511E:
    asrs r0, r0, #0x06
    movs r6, #0x80
    lsls r6, r6, #0x01
    subs r0, r6, r0
    ldr r1, _0803519C @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r3
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x03
    adds r0, r0, r1
    lsls r0, r0, #0x02
    subs r0, r0, r1
    asrs r0, r0, #0x0F
    mov r9, r0
    adds r0, #0x48
    add r0, r8
    lsls r0, r0, #0x10
    ldr r1, _080351A0 @ =0x0000FFFF
    ands r2, r1
    orrs r2, r0
    str r2, [sp, #0x008]
    adds r5, #0x01
    ldr r0, _080351A4 @ =0x0000017F
    cmp r5, r0
    ble _08035154
    movs r5, #0x00
_08035154:
    ldr r1, _080351A8 @ =0x0000055C
    adds r0, r4, r1
    ldr r0, [r0, #0x00]
    lsls r4, r5, #0x09
    movs r2, #0x80
    lsls r2, r2, #0x08
    adds r4, r4, r2
    cmp r0, #0x09
    bgt _080351B4
    ldr r1, _080351AC @ =0x0807CA78
    movs r0, #0x00
    movs r2, #0x03
    movs r3, #0x00
    bl sub_8034F60
    str r4, [sp, #0x000]
    ldr r1, _080351B0 @ =0x080E81D8
    str r1, [sp, #0x004]
    add r1, sp, #0x008
    adds r2, r6, #0x0
    adds r3, r6, #0x0
    bl oam_renderCellData
    b _080351D0
_08035184: .4byte 0x03002E20
_08035188: .4byte 0x00000848
_0803518C: .4byte 0x00000BC8
_08035190: .4byte 0x0000053C
_08035194: .4byte 0xFFFF0000
_08035198: .4byte 0x080E645C
_0803519C: .4byte 0x000003FF
_080351A0: .4byte 0x0000FFFF
_080351A4: .4byte 0x0000017F
_080351A8: .4byte 0x0000055C
_080351AC: .4byte 0x0807CA78
_080351B0: .4byte 0x080E81D8
_080351B4:
    ldr r1, _08035244 @ =0x0807CA80
    movs r0, #0x00
    movs r2, #0x03
    movs r3, #0x00
    bl sub_8034F60
    str r4, [sp, #0x000]
    ldr r1, _08035248 @ =0x080E81D8
    str r1, [sp, #0x004]
    add r1, sp, #0x008
    adds r2, r6, #0x0
    adds r3, r6, #0x0
    bl oam_renderCellData
_080351D0:
    mov r3, r9
    cmp r3, #0x00
    bne _08035208
    movs r2, #0xA5
    lsls r2, r2, #0x03
    add r2, r10
    lsls r0, r7, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _080351E6
    adds r0, #0x7F
_080351E6:
    asrs r0, r0, #0x07
    lsls r0, r0, #0x10
    add r1, sp, #0x008
    movs r6, #0x00
    ldsh r1, [r1, r6]
    orrs r0, r1
    str r0, [r2, #0x00]
    ldr r1, _0803524C @ =0x0000052C
    add r1, r10
    mov r0, r8
    adds r0, #0x40
    str r0, [r1, #0x00]
    ldr r1, _08035250 @ =0x080E8220
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
_08035208:
    movs r0, #0xA3
    lsls r0, r0, #0x03
    add r0, r10
    str r5, [r0, #0x00]
    ldr r0, _08035254 @ =0x03002E20
    movs r2, #0xA8
    lsls r2, r2, #0x03
    adds r1, r0, r2
    ldr r4, [r1, #0x00]
    ldr r3, _08035258 @ =0x00000544
    adds r1, r0, r3
    ldr r5, [r1, #0x00]
    movs r6, #0xA9
    lsls r6, r6, #0x03
    adds r0, r0, r6
    ldr r0, [r0, #0x00]
    mov r10, r0
    movs r0, #0x00
    str r0, [sp, #0x010]
    mov r9, r0
    movs r1, #0x00
    str r1, [sp, #0x014]
    cmp r5, #0x07
    bls _0803523A
    b _080354EA
_0803523A:
    lsls r0, r5, #0x02
    ldr r1, _0803525C @ =0x08035260
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08035244: .4byte 0x0807CA80
_08035248: .4byte 0x080E81D8
_0803524C: .4byte 0x0000052C
_08035250: .4byte 0x080E8220
_08035254: .4byte 0x03002E20
_08035258: .4byte 0x00000544
_0803525C: .4byte 0x08035260
    .byte 0x80, 0x52, 0x03, 0x08, 0xE0, 0x52, 0x03, 0x08, 0x34, 0x53, 0x03, 0x08, 0x5E, 0x53, 0x03, 0x08
    .byte 0x70, 0x53, 0x03, 0x08, 0x18, 0x54, 0x03, 0x08, 0x28, 0x54, 0x03, 0x08, 0x88, 0x54, 0x03, 0x08
    .byte 0x15, 0x4A, 0xE0, 0x05, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11, 0x80, 0x23
    .byte 0x5B, 0x00, 0x18, 0x1A, 0x11, 0x49, 0x08, 0x40, 0x80, 0x00, 0x80, 0x18, 0x01, 0x68, 0x80, 0x20
    .byte 0x00, 0x02, 0x40, 0x1A, 0x81, 0x00, 0x09, 0x18, 0x08, 0x01, 0x40, 0x1A, 0xC1, 0x13, 0x38, 0x04
    .byte 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x7F, 0x30, 0xC0, 0x11, 0x28, 0x38, 0x08, 0x1A, 0x00, 0x04
    .byte 0x41, 0x46, 0x50, 0x31, 0x09, 0x04, 0x00, 0x0C, 0x08, 0x43, 0x03, 0x90, 0x01, 0x34, 0x9C, 0x42
    .byte 0x00, 0xDC, 0x0A, 0xE1, 0x01, 0x35, 0x07, 0xE1, 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x03, 0x00, 0x00
    .byte 0x38, 0x04, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x7F, 0x30, 0xC1, 0x11, 0xBE, 0x20, 0x40, 0x1A
    .byte 0x00, 0x04, 0x00, 0x0C, 0x0D, 0x49, 0x03, 0x9A, 0x0A, 0x40, 0x02, 0x43, 0x03, 0x92, 0x23, 0x1C
    .byte 0x60, 0x00, 0x00, 0x19, 0xC0, 0x00, 0x00, 0x28, 0x00, 0xDA, 0x1F, 0x30, 0x40, 0x11, 0x50, 0x30
    .byte 0x40, 0x44, 0x00, 0x04, 0x06, 0x49, 0x0A, 0x40, 0x02, 0x43, 0x03, 0x92, 0x62, 0x02, 0x91, 0x46
    .byte 0x01, 0x34, 0x20, 0x2B, 0x00, 0xDC, 0xE0, 0xE0, 0x01, 0x35, 0xDD, 0xE0, 0x00, 0x00, 0xFF, 0xFF
    .byte 0xFF, 0xFF, 0x00, 0x00, 0x01, 0x23, 0x05, 0x93, 0x01, 0x34, 0x0E, 0x2C, 0x00, 0xDC, 0xD4, 0xE0
    .byte 0x18, 0x2C, 0x00, 0xDC, 0xD1, 0xE0, 0x1C, 0x2C, 0x00, 0xDC, 0xCE, 0xE0, 0x00, 0x24, 0x9A, 0x44
    .byte 0x56, 0x46, 0x02, 0x2E, 0x00, 0xDC, 0xC8, 0xE0, 0x01, 0x35, 0xA2, 0x46, 0xC5, 0xE0, 0x01, 0x20
    .byte 0x05, 0x90, 0x20, 0x1C, 0x01, 0x34, 0x3C, 0x28, 0x00, 0xDC, 0xBE, 0xE0, 0x01, 0x35, 0xBB, 0xE0
    .byte 0x61, 0x02, 0x89, 0x46, 0x23, 0x49, 0x60, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30
    .byte 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x01, 0x68, 0x88, 0x00, 0x40, 0x18, 0x00, 0x01
    .byte 0xC1, 0x13, 0x20, 0x01, 0x00, 0x1B, 0x80, 0x00, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11
    .byte 0x03, 0x1C, 0xBE, 0x33, 0x38, 0x04, 0x02, 0x14, 0x10, 0x1C, 0x00, 0x2A, 0x00, 0xDA, 0x7F, 0x30
    .byte 0xC6, 0x11, 0x98, 0x1B, 0x00, 0x04, 0x70, 0x39, 0x43, 0x46, 0x59, 0x1A, 0x09, 0x04, 0x00, 0x0C
    .byte 0x08, 0x43, 0x03, 0x90, 0x10, 0x48, 0x81, 0x44, 0x32, 0x2C, 0x14, 0xD1, 0x0F, 0x49, 0xA6, 0x20
    .byte 0xC0, 0x00, 0x0B, 0x18, 0x30, 0x04, 0x03, 0xA9, 0x00, 0x22, 0x89, 0x5E, 0x08, 0x43, 0x18, 0x60
    .byte 0x0A, 0x4B, 0x0B, 0x4E, 0x99, 0x19, 0x40, 0x46, 0x40, 0x30, 0x08, 0x60, 0x09, 0x49, 0x00, 0x20
    .byte 0x00, 0x22, 0xFA, 0xF7, 0x17, 0xFF, 0x20, 0x1C, 0x01, 0x34, 0x40, 0x28, 0x75, 0xDD, 0x01, 0x35
    .byte 0x72, 0xE0, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0x00, 0xC0, 0xFF, 0xFF, 0x44, 0x2E, 0x00, 0x03
    .byte 0x34, 0x05, 0x00, 0x00, 0x40, 0x82, 0x0E, 0x08, 0x01, 0x20, 0x05, 0x90, 0x20, 0x1C, 0x01, 0x34
    .byte 0x3C, 0x28, 0x62, 0xDD, 0x01, 0x35, 0x5F, 0xE0, 0x38, 0x04, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA
    .byte 0x7F, 0x30, 0xC1, 0x11, 0xBE, 0x20, 0x40, 0x1A, 0x00, 0x04, 0x00, 0x0C, 0x10, 0x49, 0x03, 0x9A
    .byte 0x0A, 0x40, 0x02, 0x43, 0x03, 0x92, 0x23, 0x1C, 0x60, 0x00, 0x00, 0x19, 0xC0, 0x00, 0x00, 0x28
    .byte 0x00, 0xDA, 0x1F, 0x30, 0x40, 0x11, 0x68, 0x38, 0x41, 0x46, 0x08, 0x1A, 0x00, 0x04, 0x09, 0x49
    .byte 0x0A, 0x40, 0x02, 0x43, 0x03, 0x92, 0x61, 0x02, 0x80, 0x20, 0xC0, 0x01, 0x40, 0x1A, 0x81, 0x46
    .byte 0x01, 0x22, 0x04, 0x92, 0x01, 0x34, 0x20, 0x2B, 0x37, 0xDD, 0x01, 0x35, 0x34, 0xE0, 0x00, 0x00
    .byte 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x25, 0x4A, 0xE0, 0x05, 0x00, 0x14, 0x00, 0x28
    .byte 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11, 0x80, 0x23, 0x5B, 0x00, 0x18, 0x1A, 0x21, 0x49, 0x08, 0x40
    .byte 0x80, 0x00, 0x80, 0x18, 0x01, 0x68, 0x80, 0x20, 0x00, 0x02, 0x40, 0x1A, 0x81, 0x00, 0x09, 0x18
    .byte 0x08, 0x01, 0x40, 0x1A, 0x40, 0x00, 0x40, 0x42, 0xC1, 0x0F, 0x40, 0x18, 0x01, 0x14, 0x38, 0x04
    .byte 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x7F, 0x30, 0xC0, 0x11, 0xBE, 0x38, 0x08, 0x1A, 0x00, 0x04
    .byte 0x41, 0x46, 0x50, 0x31, 0x09, 0x04, 0x00, 0x0C, 0x08, 0x43, 0x03, 0x90, 0x01, 0x26, 0x04, 0x96
    .byte 0x01, 0x34, 0x9C, 0x42, 0x01, 0xDD, 0x00, 0x25, 0x00, 0x24
_080354EA:
    ldr r0, [sp, #0x014]
    cmp r0, #0x00
    bne _08035554
    ldr r1, _08035528 @ =0x03002E44
    movs r2, #0xA7
    lsls r2, r2, #0x03
    adds r0, r1, r2
    ldr r0, [r0, #0x00]
    cmp r0, #0x09
    bgt _08035534
    ldr r1, _0803552C @ =0x0807CA78
    movs r0, #0x01
    movs r2, #0x03
    ldr r3, [sp, #0x010]
    bl sub_8034F60
    add r1, sp, #0x00C
    movs r3, #0x80
    lsls r3, r3, #0x01
    mov r6, r9
    str r6, [sp, #0x000]
    ldr r2, _08035530 @ =0x080E81D8
    str r2, [sp, #0x004]
    adds r2, r3, #0x0
    bl oam_renderCellData
    b _08035554
    .byte 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x03, 0x00, 0x00
_08035528: .4byte 0x03002E44
_0803552C: .4byte 0x0807CA78
_08035530: .4byte 0x080E81D8
_08035534:
    ldr r1, _08035590 @ =0x0807CA80
    movs r0, #0x01
    movs r2, #0x03
    ldr r3, [sp, #0x010]
    bl sub_8034F60
    add r1, sp, #0x00C
    movs r3, #0x80
    lsls r3, r3, #0x01
    mov r2, r9
    str r2, [sp, #0x000]
    ldr r2, _08035594 @ =0x080E81D8
    str r2, [sp, #0x004]
    adds r2, r3, #0x0
    bl oam_renderCellData
_08035554:
    ldr r3, _08035598 @ =0x03002E44
    ldr r6, _0803559C @ =0x0000051C
    adds r0, r3, r6
    str r4, [r0, #0x00]
    movs r1, #0xA4
    lsls r1, r1, #0x03
    adds r0, r3, r1
    str r5, [r0, #0x00]
    ldr r2, _080355A0 @ =0x00000524
    adds r0, r3, r2
    mov r3, r10
    str r3, [r0, #0x00]
    ldr r6, _08035598 @ =0x03002E44
    adds r1, #0x18
    adds r0, r6, r1
    ldr r2, [r0, #0x00]
    adds r2, #0x01
    cmp r2, #0x14
    ble _0803557C
    movs r2, #0x00
_0803557C:
    str r2, [r0, #0x00]
    add sp, #0x018
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08035590: .4byte 0x0807CA80
_08035594: .4byte 0x080E81D8
_08035598: .4byte 0x03002E44
_0803559C: .4byte 0x0000051C
_080355A0: .4byte 0x00000524
    .byte 0xF0, 0xB5, 0x03, 0x1C, 0x98, 0x6E, 0x1E, 0x1C, 0x07, 0x4A, 0x08, 0x4C, 0x11, 0x19, 0x8D, 0x8A
    .byte 0x07, 0x4F, 0xD1, 0x19, 0x09, 0x68, 0x8C, 0x46, 0x00, 0x28, 0x0D, 0xD1, 0x05, 0x48, 0x11, 0x18
    .byte 0x0C, 0x88, 0xAA, 0x27, 0xFF, 0x00, 0x0C, 0xE0, 0x20, 0x2E, 0x00, 0x03, 0x48, 0x08, 0x00, 0x00
    .byte 0xC8, 0x0B, 0x00, 0x00, 0x4C, 0x05, 0x00, 0x00, 0x0D, 0x4C, 0x11, 0x19, 0x0C, 0x88, 0xAB, 0x27
    .byte 0xFF, 0x00, 0xD0, 0x19, 0x02, 0x68, 0x02, 0x20, 0x09, 0x5E, 0x28, 0x04, 0x00, 0x14, 0x00, 0x28
    .byte 0x00, 0xDA, 0x7F, 0x30, 0xC0, 0x11, 0x08, 0x1A, 0x20, 0x18, 0x30, 0x84, 0x61, 0x46, 0x50, 0x18
    .byte 0x70, 0x84, 0x99, 0x8E, 0x01, 0x20, 0x08, 0x43, 0x98, 0x86, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47
    .byte 0x54, 0x05, 0x00, 0x00
    thumb_func_start sub_8035618
sub_8035618:
    push {r4, lr}
    ldr r4, _0803564C @ =0x03002E20
    movs r1, #0xE8
    lsls r1, r1, #0x03
    adds r0, r4, r1
    bl sub_804F7AC
    adds r2, r0, #0x0
    cmp r2, #0x00
    beq _08035646
    adds r1, r2, #0x0
    adds r1, #0x4C
    movs r0, #0x00
    strh r0, [r1, #0x00]
    ldr r1, _08035650 @ =0x000007FE
    adds r0, r4, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    bne _08035646
    ldr r0, _08035654 @ =0x080350AD
    str r0, [r2, #0x14]
_08035646:
    pop {r4}
    pop {r0}
    bx r0
_0803564C: .4byte 0x03002E20
_08035650: .4byte 0x000007FE
_08035654: .4byte sub_80350AC
    thumb_func_start sub_8035658
sub_8035658:
    push {r4, lr}
    ldr r4, _080356C4 @ =0x03002E20
    movs r1, #0xE8
    lsls r1, r1, #0x03
    adds r0, r4, r1
    bl sub_804F7AC
    adds r2, r0, #0x0
    cmp r2, #0x00
    beq _08035676
    adds r0, #0x4C
    movs r1, #0x00
    strh r1, [r0, #0x00]
    ldr r0, _080356C8 @ =0x080357E9
    str r0, [r2, #0x14]
_08035676:
    ldr r2, _080356CC @ =0x00000544
    adds r0, r4, r2
    movs r1, #0x00
    str r1, [r0, #0x00]
    adds r2, #0x04
    adds r0, r4, r2
    str r1, [r0, #0x00]
    adds r2, #0x04
    adds r0, r4, r2
    str r1, [r0, #0x00]
    adds r2, #0x04
    adds r0, r4, r2
    str r1, [r0, #0x00]
    subs r2, #0x14
    adds r0, r4, r2
    str r1, [r0, #0x00]
    adds r2, #0x04
    adds r0, r4, r2
    str r1, [r0, #0x00]
    adds r2, #0x14
    adds r0, r4, r2
    str r1, [r0, #0x00]
    adds r2, #0x04
    adds r0, r4, r2
    str r1, [r0, #0x00]
    adds r2, #0x04
    adds r0, r4, r2
    str r1, [r0, #0x00]
    adds r2, #0x04
    adds r0, r4, r2
    str r1, [r0, #0x00]
    ldr r0, [r4, #0x24]
    movs r1, #0x01
    orrs r0, r1
    str r0, [r4, #0x24]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_080356C4: .4byte 0x03002E20
_080356C8: .4byte sub_80357E8
_080356CC: .4byte 0x00000544
    thumb_func_start sub_80356D0
sub_80356D0:
    push {r4, r5, r6, lr}
    add sp, #-0x00C
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    ldr r2, _0803573C @ =0x03002E20
    ldr r0, _08035740 @ =0x0000057C
    adds r3, r2, r0
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r1, [r0, #0x00]
    ldr r0, _08035744 @ =0x0000FFF8
    ands r0, r1
    ldrh r1, [r3, #0x00]
    movs r4, #0x00
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x01
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x02
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x03
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldr r0, _08035748 @ =0x0000080D
    adds r2, r2, r0
    ldrb r0, [r2, #0x00]
    cmp r0, #0x02
    beq _0803574C
    ldrh r0, [r3, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x04
    adds r1, r2, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    b _08035756
    .byte 0x00, 0x00
_0803573C: .4byte 0x03002E20
_08035740: .4byte 0x0000057C
_08035744: .4byte 0x0000FFF8
_08035748: .4byte 0x0000080D
_0803574C:
    ldrh r0, [r3, #0x00]
    ldr r1, _080357D4 @ =0x0000F7FF
    ands r1, r0
    ldrh r0, [r3, #0x00]
    strh r1, [r3, #0x00]
_08035756:
    movs r0, #0x00
    str r0, [r3, #0x04]
    ldr r0, _080357D8 @ =0x00000F07
    str r0, [sp, #0x000]
    ldr r0, _080357DC @ =0x00004D07
    str r0, [sp, #0x004]
    ldr r0, _080357E0 @ =0x00000C07
    str r0, [sp, #0x008]
    mov r0, sp
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x08]
    strh r0, [r3, #0x08]
    add r0, sp, #0x004
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x0A]
    strh r0, [r3, #0x0A]
    add r0, sp, #0x008
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x0C]
    strh r0, [r3, #0x0C]
    lsls r0, r5, #0x10
    asrs r2, r0, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _0803578A
    adds r0, #0x3F
_0803578A:
    asrs r0, r0, #0x06
    subs r0, #0x28
    ldrh r1, [r3, #0x0E]
    strh r0, [r3, #0x0E]
    ldrh r0, [r3, #0x10]
    movs r4, #0x26
    strh r4, [r3, #0x10]
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _080357A0
    adds r0, #0x7F
_080357A0:
    asrs r0, r0, #0x07
    ldrh r1, [r3, #0x12]
    strh r0, [r3, #0x12]
    ldrh r0, [r3, #0x14]
    strh r4, [r3, #0x14]
    adds r0, r2, #0x0
    cmp r0, #0x00
    bge _080357B2
    adds r0, #0xFF
_080357B2:
    asrs r0, r0, #0x08
    ldrh r1, [r3, #0x16]
    strh r0, [r3, #0x16]
    ldrh r0, [r3, #0x18]
    strh r4, [r3, #0x18]
    ldrh r0, [r3, #0x04]
    movs r0, #0xFD
    lsls r0, r0, #0x06
    strh r0, [r3, #0x04]
    ldrh r0, [r3, #0x06]
    ldr r0, _080357E4 @ =0x00001004
    strh r0, [r3, #0x06]
    add sp, #0x00C
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_080357D4: .4byte 0x0000F7FF
_080357D8: .4byte 0x00000F07
_080357DC: .4byte 0x00004D07
_080357E0: .4byte 0x00000C07
_080357E4: .4byte 0x00001004
    thumb_func_start sub_80357E8
sub_80357E8:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x030
    ldr r0, _08035880 @ =0x03002E20
    ldr r1, _08035884 @ =0x0000057C
    adds r1, r1, r0
    mov r9, r1
    ldr r3, _08035888 @ =0x00000848
    adds r2, r0, r3
    ldr r5, _0803588C @ =0x00000BC8
    adds r1, r0, r5
    ldr r4, [r1, #0x00]
    ldr r1, _08035890 @ =0x00000554
    adds r6, r0, r1
    ldr r5, [r6, #0x00]
    ldrh r3, [r2, #0x14]
    mov r10, r3
    movs r3, #0x14
    ldsh r1, [r2, r3]
    adds r7, r0, #0x0
    cmp r1, #0x00
    bge _0803581C
    adds r1, #0xFF
_0803581C:
    asrs r0, r1, #0x08
    movs r1, #0xED
    subs r1, r1, r0
    movs r0, #0xFF
    ands r1, r0
    movs r0, #0xAB
    lsls r0, r0, #0x03
    adds r3, r7, r0
    ldr r2, [r3, #0x00]
    subs r0, r5, r1
    cmp r0, #0x00
    bge _08035836
    negs r0, r0
_08035836:
    cmp r0, #0x80
    ble _0803583E
    movs r0, #0x01
    subs r2, r0, r2
_0803583E:
    str r1, [r6, #0x00]
    str r2, [r3, #0x00]
    ldr r1, _08035894 @ =0x000007FE
    adds r0, r7, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _08035852
    b _08035AD4
_08035852:
    cmp r2, #0x00
    bne _08035858
    b _08035AD4
_08035858:
    ldr r2, _08035898 @ =0x0000053C
    adds r0, r7, r2
    ldr r0, [r0, #0x00]
    mov r8, r0
    movs r3, #0xA8
    lsls r3, r3, #0x03
    adds r0, r7, r3
    ldr r0, [r0, #0x00]
    str r0, [sp, #0x00C]
    ldr r5, _0803589C @ =0x00000C08
    adds r0, r7, r5
    ldr r0, [r0, #0x00]
    cmp r0, #0x03
    beq _080358AC
    cmp r0, #0x03
    bgt _080358A0
    cmp r0, #0x00
    beq _080358A6
    b _080358B8
    .byte 0x00, 0x00
_08035880: .4byte 0x03002E20
_08035884: .4byte 0x0000057C
_08035888: .4byte 0x00000848
_0803588C: .4byte 0x00000BC8
_08035890: .4byte 0x00000554
_08035894: .4byte 0x000007FE
_08035898: .4byte 0x0000053C
_0803589C: .4byte 0x00000C08
_080358A0:
    cmp r0, #0x05
    beq _080358B2
    b _080358B8
_080358A6:
    movs r0, #0x00
    mov r8, r0
    b _080358B8
_080358AC:
    movs r1, #0x01
    add r8, r1
    b _080358B8
_080358B2:
    movs r2, #0x02
    negs r2, r2
    add r8, r2
_080358B8:
    mov r0, r8
    movs r1, #0x30
    bl __divsi3
    movs r1, #0x26
    subs r1, r1, r0
    mov r3, r9
    ldrh r0, [r3, #0x18]
    strh r1, [r3, #0x18]
    mov r0, r8
    cmp r0, #0x00
    bge _080358D2
    adds r0, #0x1F
_080358D2:
    asrs r0, r0, #0x05
    adds r0, r0, r4
    cmp r0, #0x01
    bgt _080358DC
    b _08035ABC
_080358DC:
    ldr r5, _08035A88 @ =0x03002E44
    movs r1, #0xA4
    lsls r1, r1, #0x03
    adds r0, r5, r1
    ldr r0, [r0, #0x00]
    mov r9, r0
    ldr r2, _08035A8C @ =0x00000524
    adds r0, r5, r2
    ldr r0, [r0, #0x00]
    str r0, [sp, #0x010]
    movs r3, #0xA5
    lsls r3, r3, #0x03
    adds r0, r5, r3
    ldr r0, [r0, #0x00]
    str r0, [sp, #0x014]
    adds r1, #0x0C
    adds r0, r5, r1
    ldr r0, [r0, #0x00]
    str r0, [sp, #0x018]
    adds r2, r5, #0x0
    ldr r3, _08035A90 @ =0x00000814
    adds r0, r2, r3
    ldr r3, [r0, #0x00]
    mov r5, r10
    lsls r0, r5, #0x10
    asrs r1, r0, #0x10
    str r0, [sp, #0x028]
    cmp r1, #0x00
    bge _08035918
    adds r1, #0xFF
_08035918:
    asrs r1, r1, #0x08
    movs r0, #0xED
    subs r0, r0, r1
    movs r1, #0xFF
    ands r0, r1
    subs r4, #0x03
    movs r5, #0x20
    ldsh r2, [r3, r5]
    ands r2, r1
    movs r5, #0x22
    ldsh r1, [r3, r5]
    subs r0, r0, r2
    subs r1, r4, r1
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    bl sub_802EC38
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    movs r2, #0x80
    lsls r2, r2, #0x07
    adds r1, r0, r2
    ldr r0, _08035A94 @ =0x0000FFFF
    ands r1, r0
    str r4, [sp, #0x024]
    ldr r0, [sp, #0x00C]
    cmp r0, #0x00
    bne _08035964
    movs r3, #0xA0
    lsls r3, r3, #0x06
    str r3, [sp, #0x018]
    cmp r1, r2
    ble _08035964
    movs r5, #0xB0
    lsls r5, r5, #0x07
    str r5, [sp, #0x018]
_08035964:
    ldr r0, [sp, #0x00C]
    adds r0, #0x01
    str r0, [sp, #0x00C]
    ldr r1, [sp, #0x010]
    adds r1, #0x01
    str r1, [sp, #0x010]
    ldr r0, _08035A98 @ =0x080E82A0
    mov r2, r9
    lsls r1, r2, #0x02
    adds r1, r1, r0
    ldr r0, [r1, #0x00]
    ldr r3, [sp, #0x010]
    cmp r3, r0
    ble _08035998
    movs r5, #0x00
    str r5, [sp, #0x010]
    movs r0, #0x01
    add r9, r0
    mov r1, r9
    cmp r1, #0x11
    bls _08035990
    mov r9, r5
_08035990:
    movs r0, #0x01
    ldr r2, [sp, #0x014]
    subs r2, r0, r2
    str r2, [sp, #0x014]
_08035998:
    ldr r3, [sp, #0x014]
    cmp r3, #0x00
    bne _08035A5C
    movs r7, #0x00
    ldr r5, [sp, #0x018]
    lsls r5, r5, #0x10
    str r5, [sp, #0x020]
    mov r0, sp
    adds r0, #0x08
    str r0, [sp, #0x01C]
    movs r1, #0x00
    str r1, [sp, #0x02C]
    mov r10, r1
_080359B2:
    ldr r3, [sp, #0x020]
    asrs r2, r3, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _080359BE
    adds r0, #0x3F
_080359BE:
    asrs r3, r0, #0x06
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r4, _08035A9C @ =0x000003FF
    ands r0, r4
    lsls r0, r0, #0x02
    ldr r5, _08035AA0 @ =0x080E645C
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    mov r1, r10
    muls r1, r0
    adds r0, r1, #0x0
    asrs r1, r0, #0x0F
    ldr r5, [sp, #0x028]
    asrs r0, r5, #0x10
    cmp r0, #0x00
    bge _080359E4
    adds r0, #0xFF
_080359E4:
    asrs r0, r0, #0x08
    subs r0, #0xED
    subs r0, r1, r0
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    ldr r6, _08035AA4 @ =0xFFFF0000
    ldr r5, [sp, #0x008]
    ands r5, r6
    orrs r5, r0
    str r5, [sp, #0x008]
    adds r0, r3, #0x0
    ands r0, r4
    lsls r0, r0, #0x02
    ldr r1, _08035AA0 @ =0x080E645C
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    ldr r0, [sp, #0x02C]
    movs r1, #0x17
    bl __divsi3
    adds r1, r0, #0x0
    muls r1, r4
    asrs r1, r1, #0x0F
    ldr r2, [sp, #0x024]
    adds r1, r1, r2
    lsls r1, r1, #0x10
    ldr r0, _08035A94 @ =0x0000FFFF
    ands r0, r5
    orrs r0, r1
    str r0, [sp, #0x008]
    ldr r3, [sp, #0x01C]
    ldrb r1, [r3, #0x00]
    ands r0, r6
    orrs r0, r1
    str r0, [sp, #0x008]
    ldr r1, _08035AA8 @ =0x080E8288
    lsls r0, r7, #0x02
    adds r0, r0, r1
    ldr r3, [r0, #0x00]
    cmp r3, #0x00
    beq _08035A48
    movs r0, #0x00
    str r0, [sp, #0x000]
    ldr r0, _08035AAC @ =0x080E8280
    str r0, [sp, #0x004]
    ldr r0, _08035AB0 @ =0x080E82E8
    add r1, sp, #0x008
    adds r2, r3, #0x0
    bl oam_renderCellData
_08035A48:
    ldr r5, [sp, #0x02C]
    movs r0, #0xF0
    lsls r0, r0, #0x01
    adds r5, r5, r0
    str r5, [sp, #0x02C]
    movs r1, #0x1E
    add r10, r1
    adds r7, #0x01
    cmp r7, #0x05
    bls _080359B2
_08035A5C:
    ldr r2, _08035A88 @ =0x03002E44
    movs r3, #0xA4
    lsls r3, r3, #0x03
    adds r0, r2, r3
    mov r5, r9
    str r5, [r0, #0x00]
    ldr r1, _08035A8C @ =0x00000524
    adds r0, r2, r1
    ldr r2, [sp, #0x010]
    str r2, [r0, #0x00]
    ldr r3, _08035A88 @ =0x03002E44
    movs r5, #0xA5
    lsls r5, r5, #0x03
    adds r0, r3, r5
    ldr r1, [sp, #0x014]
    str r1, [r0, #0x00]
    ldr r2, _08035AB4 @ =0x0000052C
    adds r0, r3, r2
    ldr r3, [sp, #0x018]
    str r3, [r0, #0x00]
    ldr r7, _08035AB8 @ =0x03002E20
    b _08035AC0
_08035A88: .4byte 0x03002E44
_08035A8C: .4byte 0x00000524
_08035A90: .4byte 0x00000814
_08035A94: .4byte 0x0000FFFF
_08035A98: .4byte 0x080E82A0
_08035A9C: .4byte 0x000003FF
_08035AA0: .4byte 0x080E645C
_08035AA4: .4byte 0xFFFF0000
_08035AA8: .4byte 0x080E8288
_08035AAC: .4byte 0x080E8280
_08035AB0: .4byte 0x080E82E8
_08035AB4: .4byte 0x0000052C
_08035AB8: .4byte 0x03002E20
_08035ABC:
    movs r5, #0x00
    str r5, [sp, #0x00C]
_08035AC0:
    ldr r1, _08035B34 @ =0x03002E44
    movs r2, #0xA3
    lsls r2, r2, #0x03
    adds r0, r1, r2
    mov r3, r8
    str r3, [r0, #0x00]
    ldr r5, _08035B38 @ =0x0000051C
    adds r0, r1, r5
    ldr r1, [sp, #0x00C]
    str r1, [r0, #0x00]
_08035AD4:
    ldr r2, _08035B3C @ =0x0000055C
    adds r0, r7, r2
    ldr r6, [r0, #0x00]
    movs r3, #0xAC
    lsls r3, r3, #0x03
    adds r0, r7, r3
    ldr r5, [r0, #0x00]
    adds r6, #0x01
    cmp r6, #0x05
    ble _08035AF2
    movs r6, #0x00
    adds r5, #0x01
    cmp r5, #0x07
    bls _08035AF2
    movs r5, #0x00
_08035AF2:
    ldr r1, _08035B40 @ =0x080E8260
    lsls r0, r5, #0x02
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r1, #0x42
    adds r0, r4, #0x0
    movs r2, #0x08
    bl CpuSet
    movs r0, #0x01
    bl pltt_setDirtyFlag
    ldr r0, _08035B44 @ =0x03002E20
    ldr r2, _08035B3C @ =0x0000055C
    adds r1, r0, r2
    str r6, [r1, #0x00]
    movs r3, #0xAC
    lsls r3, r3, #0x03
    adds r0, r0, r3
    str r5, [r0, #0x00]
    add sp, #0x030
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08035B34: .4byte 0x03002E44
_08035B38: .4byte 0x0000051C
_08035B3C: .4byte 0x0000055C
_08035B40: .4byte 0x080E8260
_08035B44: .4byte 0x03002E20
    thumb_func_start sub_8035B48
sub_8035B48:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    add sp, #-0x00C
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    ldr r2, _08035BB8 @ =0x03002E20
    ldr r0, _08035BBC @ =0x0000057C
    adds r4, r2, r0
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r1, [r0, #0x00]
    ldr r0, _08035BC0 @ =0x0000FFF8
    ands r0, r1
    ldrh r1, [r4, #0x00]
    movs r3, #0x00
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x01
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x03
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x04
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldr r1, _08035BC4 @ =0x0000080D
    adds r0, r2, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x02
    beq _08035BC8
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x02
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    b _08035BD2
    .byte 0x00, 0x00
_08035BB8: .4byte 0x03002E20
_08035BBC: .4byte 0x0000057C
_08035BC0: .4byte 0x0000FFF8
_08035BC4: .4byte 0x0000080D
_08035BC8:
    ldrh r0, [r4, #0x00]
    ldr r1, _08035C44 @ =0x0000FDFF
    ands r1, r0
    ldrh r0, [r4, #0x00]
    strh r1, [r4, #0x00]
_08035BD2:
    movs r0, #0x00
    str r0, [r4, #0x04]
    ldr r0, _08035C48 @ =0x00008C07
    str r0, [sp, #0x000]
    ldr r0, _08035C4C @ =0x00000E06
    str r0, [sp, #0x004]
    adds r0, #0xFF
    str r0, [sp, #0x008]
    mov r0, sp
    ldrh r0, [r0, #0x00]
    ldrh r1, [r4, #0x08]
    strh r0, [r4, #0x08]
    add r0, sp, #0x004
    ldrh r0, [r0, #0x00]
    ldrh r1, [r4, #0x0A]
    strh r0, [r4, #0x0A]
    add r0, sp, #0x008
    ldrh r0, [r0, #0x00]
    ldrh r1, [r4, #0x0C]
    strh r0, [r4, #0x0C]
    lsls r0, r5, #0x10
    asrs r5, r0, #0x10
    adds r0, r5, #0x0
    cmp r5, #0x00
    bge _08035C06
    adds r0, #0x7F
_08035C06:
    asrs r0, r0, #0x07
    ldrh r1, [r4, #0x12]
    strh r0, [r4, #0x12]
    ldrh r0, [r4, #0x14]
    movs r3, #0x06
    strh r3, [r4, #0x14]
    adds r0, r5, #0x0
    cmp r5, #0x00
    bge _08035C1A
    adds r0, #0x3F
_08035C1A:
    asrs r0, r0, #0x06
    ldrh r1, [r4, #0x16]
    strh r0, [r4, #0x16]
    ldrh r0, [r4, #0x18]
    strh r3, [r4, #0x18]
    adds r0, r2, #0x0
    movs r1, #0x24
    adds r1, r1, r0
    mov r8, r1
    ldr r3, _08035C50 @ =0x0000053C
    adds r1, r0, r3
    ldr r7, [r1, #0x00]
    movs r6, #0xA8
    lsls r6, r6, #0x03
    adds r0, r0, r6
    ldr r6, [r0, #0x00]
    cmp r7, #0x00
    beq _08035C54
    cmp r7, #0x01
    beq _08035C90
    b _08035CD4
_08035C44: .4byte 0x0000FDFF
_08035C48: .4byte 0x00008C07
_08035C4C: .4byte 0x00000E06
_08035C50: .4byte 0x0000053C
_08035C54:
    ldrh r0, [r4, #0x10]
    movs r0, #0xB0
    lsls r0, r0, #0x01
    strh r0, [r4, #0x10]
    adds r0, r5, #0x0
    cmp r5, #0x00
    bge _08035C64
    adds r0, #0xFF
_08035C64:
    asrs r0, r0, #0x08
    ldrh r1, [r4, #0x0E]
    strh r0, [r4, #0x0E]
    ldr r1, _08035C8C @ =0x000007FE
    adds r0, r2, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _08035C86
    adds r6, #0x01
    movs r0, #0x96
    lsls r0, r0, #0x01
    cmp r6, r0
    ble _08035CD4
    movs r6, #0x00
_08035C86:
    movs r7, #0x01
    b _08035CD4
    .byte 0x00, 0x00
_08035C8C: .4byte 0x000007FE
_08035C90:
    movs r1, #0xE1
    lsls r1, r1, #0x05
    cmp r6, r1
    bgt _08035CB6
    lsls r0, r6, #0x02
    adds r0, r0, r6
    lsls r0, r0, #0x06
    negs r0, r0
    bl __divsi3
    movs r3, #0xB0
    lsls r3, r3, #0x01
    adds r0, r0, r3
    ldrh r1, [r4, #0x10]
    strh r0, [r4, #0x10]
    adds r0, r5, #0x0
    cmp r5, #0x00
    bge _08035CC4
    b _08035CC2
_08035CB6:
    ldrh r0, [r4, #0x10]
    movs r0, #0x20
    strh r0, [r4, #0x10]
    adds r0, r5, #0x0
    cmp r0, #0x00
    bge _08035CC4
_08035CC2:
    adds r0, #0xFF
_08035CC4:
    asrs r0, r0, #0x08
    ldrh r1, [r4, #0x0E]
    strh r0, [r4, #0x0E]
    movs r0, #0xE1
    lsls r0, r0, #0x05
    cmp r6, r0
    bgt _08035CD4
    adds r6, #0x01
_08035CD4:
    movs r0, #0xA3
    lsls r0, r0, #0x03
    add r0, r8
    str r7, [r0, #0x00]
    ldr r0, _08035CF0 @ =0x0000051C
    add r0, r8
    str r6, [r0, #0x00]
    add sp, #0x00C
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08035CF0: .4byte 0x0000051C
    thumb_func_start sub_8035CF4
sub_8035CF4:
    push {r4, r5, lr}
    ldr r5, _08035D34 @ =0x03002E20
    ldr r4, _08035D38 @ =0x080767A4
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    movs r2, #0x08
    bl CpuFastSet
    movs r0, #0x00
    bl pltt_getBuffer
    movs r1, #0x00
    strh r1, [r0, #0x00]
    ldr r1, _08035D3C @ =0x0000053C
    adds r0, r5, r1
    movs r1, #0x00
    str r1, [r0, #0x00]
    movs r2, #0xA8
    lsls r2, r2, #0x03
    adds r0, r5, r2
    str r1, [r0, #0x00]
    ldr r0, [r5, #0x24]
    movs r1, #0x01
    orrs r0, r1
    str r0, [r5, #0x24]
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08035D34: .4byte 0x03002E20
_08035D38: .4byte 0x080767A4
_08035D3C: .4byte 0x0000053C
    thumb_func_start sub_8035D40
sub_8035D40:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    mov r9, r0
    ldr r2, _08035D98 @ =0x03002E20
    movs r0, #0x24
    adds r0, r0, r2
    mov r8, r0
    ldr r1, _08035D9C @ =0x0000057C
    adds r6, r2, r1
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r1, [r0, #0x00]
    ldr r0, _08035DA0 @ =0x0000FFF8
    ands r0, r1
    ldrh r1, [r6, #0x00]
    strh r0, [r6, #0x00]
    ldrh r1, [r6, #0x00]
    movs r3, #0xF0
    lsls r3, r3, #0x04
    adds r0, r3, #0x0
    ldrh r3, [r6, #0x00]
    orrs r0, r1
    strh r0, [r6, #0x00]
    mov r7, r8
    movs r1, #0xAA
    lsls r1, r1, #0x03
    adds r0, r2, r1
    ldr r5, [r0, #0x00]
    ldr r3, _08035DA4 @ =0x0000054C
    adds r2, r2, r3
    ldr r4, [r2, #0x00]
    cmp r5, #0x05
    bls _08035D8C
    b _08035EC0
_08035D8C:
    lsls r0, r5, #0x02
    ldr r1, _08035DA8 @ =0x08035DAC
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_08035D98: .4byte 0x03002E20
_08035D9C: .4byte 0x0000057C
_08035DA0: .4byte 0x0000FFF8
_08035DA4: .4byte 0x0000054C
_08035DA8: .4byte 0x08035DAC
    .byte 0xC4, 0x5D, 0x03, 0x08, 0xD8, 0x5D, 0x03, 0x08, 0x08, 0x5E, 0x03, 0x08, 0x62, 0x5E, 0x03, 0x08
    .byte 0x98, 0x5E, 0x03, 0x08, 0xC0, 0x5E, 0x03, 0x08, 0x03, 0x49, 0x78, 0x18, 0x01, 0x78, 0x0F, 0x20
    .byte 0x08, 0x40, 0x03, 0x28, 0x76, 0xD1, 0x74, 0xE0, 0xD4, 0x07, 0x00, 0x00, 0x00, 0x20, 0xF8, 0xF7
    .byte 0x29, 0xFC, 0x01, 0x1C, 0x08, 0x4A, 0x20, 0x1C, 0x00, 0x2C, 0x00, 0xDA, 0x0F, 0x30, 0x00, 0x11
    .byte 0x40, 0x00, 0x80, 0x18, 0x00, 0x88, 0x08, 0x80, 0x01, 0x34, 0x80, 0x20, 0x80, 0x00, 0x84, 0x42
    .byte 0x60, 0xDD, 0x00, 0x24, 0x5D, 0xE0, 0x00, 0x00, 0x22, 0x83, 0x0E, 0x08, 0x00, 0x20, 0xF8, 0xF7
    .byte 0x11, 0xFC, 0x02, 0x1C, 0x0A, 0x4B, 0x20, 0x1C, 0x00, 0x2C, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11
    .byte 0x07, 0x21, 0x08, 0x40, 0x40, 0x00, 0xC0, 0x18, 0x00, 0x88, 0x10, 0x80, 0x05, 0x4A, 0xB8, 0x18
    .byte 0x00, 0x78, 0x01, 0x28, 0x0A, 0xD1, 0x04, 0x4B, 0xF8, 0x18, 0x00, 0x68, 0x0A, 0xE0, 0x00, 0x00
    .byte 0x62, 0x83, 0x0E, 0x08, 0xD7, 0x07, 0x00, 0x00, 0x14, 0x08, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x21
    .byte 0x15, 0xF0, 0x42, 0xF8, 0x91, 0x30, 0x01, 0x78, 0x0F, 0x20, 0x08, 0x40, 0x02, 0x28, 0x00, 0xD1
    .byte 0x01, 0x35, 0x01, 0x34, 0x2E, 0xE0, 0x00, 0x20, 0xF8, 0xF7, 0xE4, 0xFB, 0x02, 0x1C, 0x09, 0x4B
    .byte 0x20, 0x1C, 0x00, 0x2C, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11, 0x07, 0x21, 0x08, 0x40, 0x40, 0x00
    .byte 0xC0, 0x18, 0x00, 0x88, 0x10, 0x80, 0x04, 0x48, 0x20, 0x40, 0x01, 0x34, 0x00, 0x28, 0x19, 0xD1
    .byte 0x00, 0x24, 0x16, 0xE0, 0x62, 0x83, 0x0E, 0x08, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x20, 0xF8, 0xF7
    .byte 0xC9, 0xFB, 0x01, 0x1C, 0x13, 0x4B, 0x80, 0x22, 0x92, 0x00, 0x10, 0x1B, 0x00, 0x28, 0x00, 0xDA
    .byte 0x0F, 0x30, 0x00, 0x11, 0x40, 0x00, 0xC0, 0x18, 0x00, 0x88, 0x08, 0x80, 0x01, 0x34, 0x94, 0x42
    .byte 0x00, 0xDD, 0x01, 0x35
_08035EC0:
    movs r0, #0xA5
    lsls r0, r0, #0x03
    add r0, r8
    str r4, [r0, #0x00]
    ldr r0, _08035EF4 @ =0x0000052C
    add r0, r8
    str r5, [r0, #0x00]
    ldr r0, _08035EF8 @ =0x00000524
    add r0, r8
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bge _08035EDA
    adds r0, #0x1F
_08035EDA:
    asrs r0, r0, #0x05
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    ldr r2, _08035EFC @ =0x080E8310
    cmp r1, #0x08
    bls _08035F00
    movs r0, #0x10
    subs r0, r0, r1
    lsls r0, r0, #0x01
    b _08035F02
    .byte 0x00, 0x00, 0x22, 0x83, 0x0E, 0x08
_08035EF4: .4byte 0x0000052C
_08035EF8: .4byte 0x00000524
_08035EFC: .4byte 0x080E8310
_08035F00:
    lsls r0, r1, #0x01
_08035F02:
    adds r0, r2, r0
    ldrh r0, [r0, #0x00]
    lsls r0, r0, #0x10
    ldr r1, _08035FCC @ =0x00002844
    orrs r0, r1
    str r0, [r6, #0x04]
    ldr r2, _08035FD0 @ =0x00000524
    add r2, r8
    ldr r0, [r2, #0x00]
    adds r0, #0x01
    ldr r1, _08035FD4 @ =0x000001FF
    ands r0, r1
    str r0, [r2, #0x00]
    bl track_loadSkySize
    mov r1, r9
    lsls r0, r1, #0x10
    asrs r2, r0, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08035F2E
    adds r0, #0x3F
_08035F2E:
    asrs r4, r0, #0x06
    ldrh r0, [r6, #0x0E]
    strh r4, [r6, #0x0E]
    ldrh r0, [r6, #0x10]
    movs r3, #0x26
    strh r3, [r6, #0x10]
    ldrh r0, [r6, #0x14]
    strh r3, [r6, #0x14]
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08035F46
    adds r0, #0x7F
_08035F46:
    asrs r0, r0, #0x07
    subs r0, #0x18
    ldrh r1, [r6, #0x16]
    strh r0, [r6, #0x16]
    ldrh r0, [r6, #0x18]
    strh r3, [r6, #0x18]
    ldr r3, _08035FD8 @ =0x03002E20
    ldr r0, [r3, #0x10]
    lsrs r0, r0, #0x04
    adds r0, r4, r0
    ldrh r1, [r6, #0x12]
    strh r0, [r6, #0x12]
    movs r2, #0xA8
    lsls r2, r2, #0x03
    adds r0, r3, r2
    ldr r6, [r0, #0x00]
    ldr r1, _08035FDC @ =0x00000544
    adds r0, r3, r1
    ldr r5, [r0, #0x00]
    adds r6, #0x01
    cmp r6, #0x00
    ble _08035F7C
    movs r6, #0x00
    adds r5, #0x01
    cmp r5, #0x07
    bls _08035F7C
    movs r5, #0x00
_08035F7C:
    ldr r1, _08035FE0 @ =0x080E82F0
    lsls r0, r5, #0x02
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r1, #0x20
    adds r0, r4, #0x0
    movs r2, #0x0D
    bl CpuSet
    movs r0, #0x01
    bl pltt_setDirtyFlag
    ldr r0, _08035FD8 @ =0x03002E20
    movs r2, #0xA8
    lsls r2, r2, #0x03
    adds r1, r0, r2
    str r6, [r1, #0x00]
    ldr r3, _08035FDC @ =0x00000544
    adds r1, r0, r3
    str r5, [r1, #0x00]
    adds r6, r0, #0x0
    adds r6, #0x24
    ldr r1, _08035FE4 @ =0x0000053C
    adds r0, r0, r1
    ldr r5, [r0, #0x00]
    adds r5, #0x01
    cmp r5, #0x0B
    ble _08035FBE
    movs r5, #0x00
_08035FBE:
    cmp r5, #0x04
    beq _08035FF4
    cmp r5, #0x04
    bgt _08035FE8
    cmp r5, #0x00
    beq _08036010
    b _08036024
_08035FCC: .4byte 0x00002844
_08035FD0: .4byte 0x00000524
_08035FD4: .4byte 0x000001FF
_08035FD8: .4byte 0x03002E20
_08035FDC: .4byte 0x00000544
_08035FE0: .4byte 0x080E82F0
_08035FE4: .4byte 0x0000053C
_08035FE8:
    cmp r5, #0x08
    bne _08036024
    ldr r4, _08035FF0 @ =0x08076BB4
    b _08035FF6
_08035FF0: .4byte 0x08076BB4
_08035FF4:
    ldr r4, _0803600C @ =0x08076B9C
_08035FF6:
    movs r0, #0x01
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r1, #0x26
    adds r0, r4, #0x0
    movs r2, #0x0B
    bl CpuSet
    b _08036024
    .byte 0x00, 0x00
_0803600C: .4byte 0x08076B9C
_08036010:
    ldr r4, _08036038 @ =0x08076B84
    movs r0, #0x01
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r1, #0x26
    adds r0, r4, #0x0
    movs r2, #0x0B
    bl CpuSet
_08036024:
    movs r2, #0xA3
    lsls r2, r2, #0x03
    adds r0, r6, r2
    str r5, [r0, #0x00]
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08036038: .4byte 0x08076B84
    thumb_func_start sub_803603C
sub_803603C:
    ldr r2, _08036078 @ =0x03002E20
    ldr r0, _0803607C @ =0x0000053C
    adds r1, r2, r0
    ldr r0, _08036080 @ =0x000003E7
    str r0, [r1, #0x00]
    movs r1, #0xA8
    lsls r1, r1, #0x03
    adds r0, r2, r1
    movs r1, #0x00
    str r1, [r0, #0x00]
    ldr r3, _08036084 @ =0x00000544
    adds r0, r2, r3
    str r1, [r0, #0x00]
    movs r0, #0xA9
    lsls r0, r0, #0x03
    adds r3, r2, r0
    movs r0, #0x08
    str r0, [r3, #0x00]
    ldr r3, _08036088 @ =0x0000054C
    adds r0, r2, r3
    str r1, [r0, #0x00]
    adds r3, #0x04
    adds r0, r2, r3
    str r1, [r0, #0x00]
    ldr r0, [r2, #0x24]
    movs r1, #0x01
    orrs r0, r1
    str r0, [r2, #0x24]
    bx lr
    .byte 0x00, 0x00
_08036078: .4byte 0x03002E20
_0803607C: .4byte 0x0000053C
_08036080: .4byte 0x000003E7
_08036084: .4byte 0x00000544
_08036088: .4byte 0x0000054C
    thumb_func_start sub_803608C
sub_803608C:
    push {r4, r5, r6, lr}
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    ldr r2, _080360F4 @ =0x03002E20
    ldr r0, _080360F8 @ =0x0000057C
    adds r4, r2, r0
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r1, [r0, #0x00]
    ldr r0, _080360FC @ =0x0000FFF8
    ands r0, r1
    ldrh r1, [r4, #0x00]
    movs r3, #0x00
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x01
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x02
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x03
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldr r0, _08036100 @ =0x0000080D
    adds r2, r2, r0
    ldrb r0, [r2, #0x00]
    cmp r0, #0x02
    beq _08036104
    ldrh r0, [r4, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x04
    adds r1, r2, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    b _0803610E
_080360F4: .4byte 0x03002E20
_080360F8: .4byte 0x0000057C
_080360FC: .4byte 0x0000FFF8
_08036100: .4byte 0x0000080D
_08036104:
    ldrh r0, [r4, #0x00]
    ldr r1, _08036158 @ =0x0000F7FF
    ands r1, r0
    ldrh r0, [r4, #0x00]
    strh r1, [r4, #0x00]
_0803610E:
    movs r0, #0x00
    str r0, [r4, #0x04]
    bl track_loadSkySize
    lsls r0, r5, #0x10
    asrs r2, r0, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08036122
    adds r0, #0x3F
_08036122:
    asrs r0, r0, #0x06
    ldrh r1, [r4, #0x0E]
    strh r0, [r4, #0x0E]
    ldrh r0, [r4, #0x10]
    movs r3, #0x26
    strh r3, [r4, #0x10]
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08036136
    adds r0, #0x7F
_08036136:
    asrs r0, r0, #0x07
    ldrh r1, [r4, #0x12]
    strh r0, [r4, #0x12]
    ldrh r0, [r4, #0x14]
    strh r3, [r4, #0x14]
    adds r0, r2, #0x0
    cmp r0, #0x00
    bge _08036148
    adds r0, #0xFF
_08036148:
    asrs r0, r0, #0x08
    ldrh r1, [r4, #0x16]
    strh r0, [r4, #0x16]
    ldrh r0, [r4, #0x18]
    strh r3, [r4, #0x18]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_08036158: .4byte 0x0000F7FF
    thumb_func_start sub_803615C
sub_803615C:
    ldr r0, _08036168 @ =0x03002E20
    ldr r1, [r0, #0x24]
    movs r2, #0x01
    orrs r1, r2
    str r1, [r0, #0x24]
    bx lr
_08036168: .4byte 0x03002E20
    thumb_func_start SunsetWilds_HandlePalettes_803616C
SunsetWilds_HandlePalettes_803616C: @ 0803616C
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x010
    str r1, [sp, #0x00C]
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    ldr r2, _080361E0 @ =0x03002E20
    ldr r0, _080361E4 @ =0x0000057C
    adds r4, r2, r0
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r1, [r0, #0x00]
    ldr r0, _080361E8 @ =0x0000FFF8
    ands r0, r1
    ldrh r1, [r4, #0x00]
    movs r3, #0x00
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x01
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x02
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x03
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldr r1, _080361EC @ =0x0000080D
    adds r0, r2, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x02
    beq _080361F0
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x04
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    b _080361FA
_080361E0: .4byte 0x03002E20
_080361E4: .4byte 0x0000057C
_080361E8: .4byte 0x0000FFF8
_080361EC: .4byte 0x0000080D
_080361F0:
    ldrh r0, [r4, #0x00]
    ldr r1, _08036284 @ =0x0000F7FF
    ands r1, r0
    ldrh r0, [r4, #0x00]
    strh r1, [r4, #0x00]
_080361FA:
    movs r0, #0x00
    str r0, [r4, #0x04]
    ldr r0, _08036288 @ =0x00000F07
    str r0, [sp, #0x000]
    ldr r0, _0803628C @ =0x00000E07
    str r0, [sp, #0x004]
    ldr r0, _08036290 @ =0x00000D07
    str r0, [sp, #0x008]
    mov r0, sp
    ldrh r0, [r0, #0x00]
    ldrh r1, [r4, #0x08]
    strh r0, [r4, #0x08]
    add r0, sp, #0x004
    ldrh r0, [r0, #0x00]
    ldrh r1, [r4, #0x0A]
    strh r0, [r4, #0x0A]
    add r0, sp, #0x008
    ldrh r0, [r0, #0x00]
    ldrh r1, [r4, #0x0C]
    strh r0, [r4, #0x0C]
    adds r0, r2, #0x0
    adds r7, r0, #0x0
    adds r7, #0x24
    movs r1, #0xA9
    lsls r1, r1, #0x03
    adds r0, r0, r1
    ldr r6, [r0, #0x00]
    lsls r0, r5, #0x10
    asrs r3, r0, #0x10
    adds r0, r3, #0x0
    cmp r3, #0x00
    bge _0803623C
    adds r0, #0x3F
_0803623C:
    asrs r0, r0, #0x06
    subs r0, #0x28
    ldrh r1, [r4, #0x0E]
    strh r0, [r4, #0x0E]
    ldrh r0, [r4, #0x10]
    movs r5, #0x26
    strh r5, [r4, #0x10]
    adds r0, r3, #0x0
    cmp r3, #0x00
    bge _08036252
    adds r0, #0x7F
_08036252:
    asrs r0, r0, #0x07
    ldrh r1, [r4, #0x12]
    strh r0, [r4, #0x12]
    ldrh r0, [r4, #0x14]
    strh r5, [r4, #0x14]
    adds r0, r3, #0x0
    cmp r0, #0x00
    bge _08036264
    adds r0, #0xFF
_08036264:
    asrs r0, r0, #0x08
    ldrh r1, [r4, #0x16]
    strh r0, [r4, #0x16]
    subs r0, r6, #0x2
    ldrh r1, [r4, #0x18]
    strh r0, [r4, #0x18]
    ldr r3, _08036294 @ =0x000007FB
    adds r0, r2, r3
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    bne _0803629C
    ldr r6, _08036298 @ =0x00000838
    adds r0, r2, r6
    ldr r2, [r0, #0x00]
    b _080362A6
    .byte 0x00, 0x00
_08036284: .4byte 0x0000F7FF
_08036288: .4byte 0x00000F07
_0803628C: .4byte 0x00000E07
_08036290: .4byte 0x00000D07
_08036294: .4byte 0x000007FB
_08036298: .4byte 0x00000838
_0803629C:
    ldr r0, _080362E8 @ =0x03002E44
    movs r1, #0x00
    bl sub_804AED4
    adds r2, r0, #0x0
_080362A6:
    ldr r1, _080362E8 @ =0x03002E44
    movs r3, #0xA3
    lsls r3, r3, #0x03
    adds r0, r1, r3
    ldr r0, [r0, #0x00]
    mov r8, r0
    ldr r6, _080362EC @ =0x0000051C
    adds r0, r1, r6
    ldr r7, [r0, #0x00]
    adds r3, #0x08
    adds r0, r1, r3
    ldr r0, [r0, #0x00]
    mov r10, r0
    adds r6, #0x08
    adds r0, r1, r6
    ldr r0, [r0, #0x00]
    mov r9, r0
    adds r0, r2, #0x0
    adds r0, #0x91
    ldrb r1, [r0, #0x00]
    movs r0, #0x0F
    ands r0, r1
    adds r3, r0, #0x1
    mov r0, r8
    cmp r0, #0x06
    bls _080362DC
    b _080364C4
_080362DC:
    lsls r0, r0, #0x02
    ldr r1, _080362F0 @ =0x080362F4
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_080362E8: .4byte 0x03002E44
_080362EC: .4byte 0x0000051C
_080362F0: .4byte 0x080362F4
    .byte 0x10, 0x63, 0x03, 0x08, 0x24, 0x63, 0x03, 0x08, 0xCC, 0x63, 0x03, 0x08, 0xE0, 0x63, 0x03, 0x08
    .byte 0x1C, 0x64, 0x03, 0x08, 0x90, 0x64, 0x03, 0x08, 0xC4, 0x64, 0x03, 0x08, 0x01, 0x2B, 0x00, 0xD0
    .byte 0xD6, 0xE0, 0x10, 0x1C, 0x90, 0x30, 0x00, 0x78, 0x55, 0x28, 0x00, 0xD8, 0xD0, 0xE0, 0x50, 0xE0
    .byte 0x01, 0x22, 0x92, 0x44, 0x53, 0x46, 0x03, 0x2B, 0x00, 0xDC, 0xC9, 0xE0, 0x00, 0x26, 0xB2, 0x46
    .byte 0x1F, 0x2F, 0x43, 0xDC, 0x7D, 0x00, 0xED, 0x19, 0x6D, 0x01, 0x1D, 0x4C, 0x2C, 0x19, 0x00, 0x20
    .byte 0xF8, 0xF7, 0x74, 0xF9, 0x01, 0x1C, 0xC0, 0x31, 0x20, 0x1C, 0x18, 0x22, 0x2A, 0xF0, 0xFC, 0xFF
    .byte 0x18, 0x4C, 0x2E, 0x19, 0x00, 0x20, 0xF8, 0xF7, 0x69, 0xF9, 0x01, 0x1C, 0x30, 0x1C, 0x10, 0x22
    .byte 0x2A, 0xF0, 0xF2, 0xFF, 0x40, 0x34, 0x2D, 0x19, 0x00, 0x20, 0xF8, 0xF7, 0x5F, 0xF9, 0x01, 0x1C
    .byte 0x60, 0x31, 0x28, 0x1C, 0x08, 0x22, 0x2A, 0xF0, 0xE7, 0xFF, 0x01, 0x20, 0xF8, 0xF7, 0x72, 0xF9
    .byte 0xB8, 0x03, 0x1F, 0x21, 0x2B, 0xF0, 0x92, 0xFD, 0x0B, 0x49, 0x00, 0x04, 0x00, 0x14, 0x00, 0x28
    .byte 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x01, 0x68, 0x88, 0x00
    .byte 0x40, 0x18, 0xC0, 0x00, 0x40, 0x42, 0xC0, 0x13, 0xB8, 0x30, 0x81, 0x46, 0x01, 0x37, 0x87, 0xE0
    .byte 0x74, 0x83, 0x0E, 0x08, 0x74, 0x9B, 0x0E, 0x08, 0x5C, 0x64, 0x0E, 0x08, 0x90, 0x20, 0x81, 0x46
    .byte 0x00, 0x27, 0x01, 0x21, 0x88, 0x44, 0x7B, 0xE0, 0x02, 0x2B, 0x79, 0xD1, 0x10, 0x1C, 0x90, 0x30
    .byte 0x00, 0x78, 0x55, 0x28, 0x74, 0xD9, 0x01, 0x22, 0x90, 0x44, 0x71, 0xE0, 0x01, 0x37, 0x80, 0x2F
    .byte 0x14, 0xDC, 0x09, 0x49, 0xF8, 0x05, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04
    .byte 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x01, 0x68, 0x48, 0x00, 0x40, 0x18, 0x40, 0x01, 0x40, 0x42
    .byte 0xC0, 0x13, 0x90, 0x30, 0x81, 0x46, 0x5B, 0xE0, 0x5C, 0x64, 0x0E, 0x08, 0x30, 0x23, 0x99, 0x46
    .byte 0x20, 0x27, 0x01, 0x26, 0xB0, 0x44, 0x53, 0xE0, 0x01, 0x20, 0x82, 0x44, 0x51, 0x46, 0x03, 0x29
    .byte 0x4E, 0xDD, 0x00, 0x22, 0x92, 0x46, 0x3F, 0x2F, 0x2C, 0xDC, 0x7D, 0x00, 0xED, 0x19, 0x6D, 0x01
    .byte 0x12, 0x4C, 0x2C, 0x19, 0x00, 0x20, 0xF8, 0xF7, 0xF9, 0xF8, 0x01, 0x1C, 0xC0, 0x31, 0x20, 0x1C
    .byte 0x18, 0x22, 0x2A, 0xF0, 0x81, 0xFF, 0x0E, 0x4C, 0x2E, 0x19, 0x00, 0x20, 0xF8, 0xF7, 0xEE, 0xF8
    .byte 0x01, 0x1C, 0x30, 0x1C, 0x10, 0x22, 0x2A, 0xF0, 0x77, 0xFF, 0x40, 0x34, 0x2D, 0x19, 0x00, 0x20
    .byte 0xF8, 0xF7, 0xE4, 0xF8, 0x01, 0x1C, 0x60, 0x31, 0x28, 0x1C, 0x08, 0x22, 0x2A, 0xF0, 0x6C, 0xFF
    .byte 0x01, 0x20, 0xF8, 0xF7, 0xF7, 0xF8, 0x01, 0x37, 0x22, 0xE0, 0x00, 0x00, 0x74, 0x83, 0x0E, 0x08
    .byte 0x74, 0x9B, 0x0E, 0x08, 0x00, 0x27, 0x01, 0x23, 0x98, 0x44, 0x19, 0xE0, 0x01, 0x37, 0x40, 0x2F
    .byte 0x12, 0xDC, 0x08, 0x49, 0x38, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04
    .byte 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0x00, 0x01, 0x40, 0x42, 0xC0, 0x13, 0x30, 0x30
    .byte 0x81, 0x46, 0x05, 0xE0, 0x5C, 0x64, 0x0E, 0x08, 0x20, 0x26, 0xB1, 0x46, 0x01, 0x20, 0x80, 0x44
_080364C4:
    ldr r1, _08036514 @ =0x03002E44
    movs r2, #0xA3
    lsls r2, r2, #0x03
    adds r0, r1, r2
    mov r3, r8
    str r3, [r0, #0x00]
    ldr r6, _08036518 @ =0x0000051C
    adds r0, r1, r6
    str r7, [r0, #0x00]
    adds r2, #0x08
    adds r0, r1, r2
    mov r3, r10
    str r3, [r0, #0x00]
    adds r6, #0x08
    adds r0, r1, r6
    mov r1, r9
    str r1, [r0, #0x00]
    ldr r2, _08036514 @ =0x03002E44
    movs r3, #0xA5
    lsls r3, r3, #0x03
    adds r1, r2, r3
    movs r0, #0x2E
    ldr r6, [sp, #0x00C]
    subs r0, r0, r6
    str r0, [r1, #0x00]
    ldr r1, _0803651C @ =0x0000052C
    adds r0, r2, r1
    ldr r1, [r0, #0x00]
    adds r0, r6, #0x0
    adds r0, #0x18
    str r0, [r1, #0x08]
    add sp, #0x010
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08036514: .4byte 0x03002E44
_08036518: .4byte 0x0000051C
_0803651C: .4byte 0x0000052C
    thumb_func_start sub_8036520
sub_8036520:
    push {r4, lr}
    ldr r4, _08036564 @ =0x03002E20
    ldr r1, _08036568 @ =0x0000053C
    adds r0, r4, r1
    movs r1, #0x00
    str r1, [r0, #0x00]
    movs r2, #0xA8
    lsls r2, r2, #0x03
    adds r0, r4, r2
    str r1, [r0, #0x00]
    adds r2, #0x04
    adds r0, r4, r2
    str r1, [r0, #0x00]
    movs r0, #0xA9
    lsls r0, r0, #0x03
    adds r1, r4, r0
    movs r0, #0xB8
    str r0, [r1, #0x00]
    adds r2, #0x08
    adds r1, r4, r2
    movs r0, #0x2E
    str r0, [r1, #0x00]
    ldr r1, _0803656C @ =0x08036571
    movs r0, #0x18
    bl vcount_register
    movs r1, #0xAA
    lsls r1, r1, #0x03
    adds r4, r4, r1
    str r0, [r4, #0x00]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08036564: .4byte 0x03002E20
_08036568: .4byte 0x0000053C
_0803656C: .4byte sub_8036570
    thumb_func_start sub_8036570
sub_8036570:
    add sp, #-0x004
    ldr r0, _08036588 @ =0x03002E20
    adds r1, r0, #0x0
    adds r1, #0x24
    ldr r2, _0803658C @ =0x0000053C
    adds r0, r0, r2
    ldr r0, [r0, #0x00]
    cmp r0, #0x04
    ble _080365A8
    movs r0, #0x00
    b _08036594
    .byte 0x00, 0x00
_08036588: .4byte 0x03002E20
_0803658C: .4byte 0x0000053C
_08036590:
    ldr r0, [sp, #0x000]
    adds r0, #0x01
_08036594:
    str r0, [sp, #0x000]
    ldr r0, [sp, #0x000]
    cmp r0, #0x31
    ble _08036590
    ldr r0, _080365AC @ =0x0400001E
    movs r2, #0xA5
    lsls r2, r2, #0x03
    adds r1, r1, r2
    ldr r1, [r1, #0x00]
    strh r1, [r0, #0x00]
_080365A8:
    add sp, #0x004
    bx lr
_080365AC: .4byte 0x0400001E
    thumb_func_start sub_80365B0
sub_80365B0:
    push {r4, r5, r6, r7, lr}
    ldr r0, _080365EC @ =0x03002E20
    ldr r1, _080365F0 @ =0x00000848
    adds r3, r0, r1
    movs r1, #0x00
    ldr r5, _080365F4 @ =0x030021D0
    ldr r6, _080365F8 @ =0x030021D4
    ldr r7, _080365FC @ =0x030021D8
    movs r2, #0x00
    ldr r4, _08036600 @ =0xFFF00000
    ldr r0, _08036604 @ =0x030021E0
_080365C6:
    str r2, [r0, #0x00]
    str r4, [r0, #0x04]
    strh r2, [r0, #0x0E]
    strh r1, [r0, #0x0C]
    strh r2, [r0, #0x0A]
    adds r0, #0x14
    adds r1, #0x01
    cmp r1, #0x0B
    ble _080365C6
    ldr r0, [r3, #0x18]
    str r0, [r5, #0x00]
    ldr r0, [r3, #0x1C]
    str r0, [r6, #0x00]
    movs r1, #0x14
    ldsh r0, [r3, r1]
    str r0, [r7, #0x00]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_080365EC: .4byte 0x03002E20
_080365F0: .4byte 0x00000848
_080365F4: .4byte 0x030021D0
_080365F8: .4byte 0x030021D4
_080365FC: .4byte 0x030021D8
_08036600: .4byte 0xFFF00000
_08036604: .4byte 0x030021E0
    thumb_func_start sub_8036608
sub_8036608:
    push {r4, r5, r6, lr}
    add sp, #-0x00C
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    ldr r2, _08036674 @ =0x03002E20
    ldr r0, _08036678 @ =0x0000057C
    adds r3, r2, r0
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r1, [r0, #0x00]
    ldr r0, _0803667C @ =0x0000FFF8
    ands r0, r1
    ldrh r1, [r3, #0x00]
    movs r4, #0x00
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x01
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x02
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x03
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldr r0, _08036680 @ =0x0000080D
    adds r2, r2, r0
    ldrb r0, [r2, #0x00]
    cmp r0, #0x02
    beq _08036684
    ldrh r0, [r3, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x04
    adds r1, r2, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    b _0803668E
    .byte 0x00, 0x00
_08036674: .4byte 0x03002E20
_08036678: .4byte 0x0000057C
_0803667C: .4byte 0x0000FFF8
_08036680: .4byte 0x0000080D
_08036684:
    ldrh r0, [r3, #0x00]
    ldr r1, _080366FC @ =0x0000F7FF
    ands r1, r0
    ldrh r0, [r3, #0x00]
    strh r1, [r3, #0x00]
_0803668E:
    movs r0, #0x00
    str r0, [r3, #0x04]
    ldr r0, _08036700 @ =0x00000F07
    str r0, [sp, #0x000]
    ldr r0, _08036704 @ =0x00000E07
    str r0, [sp, #0x004]
    ldr r0, _08036708 @ =0x00000D07
    str r0, [sp, #0x008]
    mov r0, sp
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x08]
    strh r0, [r3, #0x08]
    add r0, sp, #0x004
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x0A]
    strh r0, [r3, #0x0A]
    add r0, sp, #0x008
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x0C]
    strh r0, [r3, #0x0C]
    lsls r0, r5, #0x10
    asrs r2, r0, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _080366C2
    adds r0, #0x3F
_080366C2:
    asrs r0, r0, #0x06
    subs r0, #0x28
    ldrh r1, [r3, #0x0E]
    strh r0, [r3, #0x0E]
    ldrh r0, [r3, #0x10]
    movs r4, #0x26
    strh r4, [r3, #0x10]
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _080366D8
    adds r0, #0x7F
_080366D8:
    asrs r0, r0, #0x07
    ldrh r1, [r3, #0x12]
    strh r0, [r3, #0x12]
    ldrh r0, [r3, #0x14]
    strh r4, [r3, #0x14]
    adds r0, r2, #0x0
    cmp r0, #0x00
    bge _080366EA
    adds r0, #0xFF
_080366EA:
    asrs r0, r0, #0x08
    ldrh r1, [r3, #0x16]
    strh r0, [r3, #0x16]
    ldrh r0, [r3, #0x18]
    strh r4, [r3, #0x18]
    add sp, #0x00C
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_080366FC: .4byte 0x0000F7FF
_08036700: .4byte 0x00000F07
_08036704: .4byte 0x00000E07
_08036708: .4byte 0x00000D07
    thumb_func_start sub_803670C
sub_803670C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x024
    ldr r0, _08036854 @ =0x03003668
    movs r1, #0x14
    ldsh r0, [r0, r1]
    str r0, [sp, #0x00C]
    ldr r2, _08036858 @ =0xFFFFC000
    adds r4, r0, r2
    ldr r0, _0803685C @ =0x030021D0
    ldr r3, _08036854 @ =0x03003668
    ldr r1, [r3, #0x18]
    ldr r0, [r0, #0x00]
    subs r3, r1, r0
    ldr r0, _08036860 @ =0x030021D4
    ldr r6, _08036854 @ =0x03003668
    ldr r1, [r6, #0x1C]
    ldr r0, [r0, #0x00]
    subs r2, r1, r0
    adds r0, r3, #0x0
    cmp r3, #0x00
    bge _08036742
    ldr r1, _08036864 @ =0x00007FFF
    adds r0, r3, r1
_08036742:
    asrs r3, r0, #0x0F
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _0803674E
    ldr r6, _08036864 @ =0x00007FFF
    adds r0, r2, r6
_0803674E:
    asrs r2, r0, #0x0F
    ldr r0, _08036868 @ =0x080E645C
    mov r8, r0
    lsls r0, r4, #0x10
    asrs r4, r0, #0x10
    adds r0, r4, #0x0
    cmp r4, #0x00
    bge _08036760
    adds r0, #0x3F
_08036760:
    asrs r5, r0, #0x06
    ldr r6, _0803686C @ =0x000003FF
    adds r1, r6, #0x0
    adds r0, r5, #0x0
    ands r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r5
    ldr r6, _0803686C @ =0x000003FF
    mov r9, r6
    ands r0, r6
    lsls r0, r0, #0x02
    add r0, r8
    ldr r6, [r0, #0x00]
    muls r1, r2
    adds r0, r3, #0x0
    muls r0, r6
    adds r7, r1, r0
    adds r0, r3, #0x0
    cmp r3, #0x00
    bge _08036792
    adds r0, r3, #0x3
_08036792:
    asrs r3, r0, #0x02
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _0803679C
    adds r0, r2, #0x3
_0803679C:
    asrs r2, r0, #0x02
    adds r0, r5, #0x0
    mov r1, r9
    ands r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    adds r1, r2, #0x0
    muls r1, r6
    muls r0, r3
    adds r1, r1, r0
    mov r9, r1
    movs r2, #0x00
    str r2, [sp, #0x010]
    ldr r3, _08036870 @ =0x030021E0
    adds r3, #0x04
    str r3, [sp, #0x018]
    mov r8, r2
    ldr r5, _08036870 @ =0x030021E0
    str r5, [sp, #0x01C]
    str r5, [sp, #0x020]
    mov r10, r2
_080367C8:
    movs r4, #0x0A
    ldsh r0, [r5, r4]
    cmp r0, #0x00
    bne _080367D2
    b _08036B50
_080367D2:
    cmp r0, #0x01
    beq _080367D8
    b _08036B50
_080367D8:
    movs r6, #0x0C
    ldsh r2, [r5, r6]
    ldr r0, _08036874 @ =0x030021D8
    ldr r0, [r0, #0x00]
    ldr r1, [sp, #0x00C]
    subs r0, r0, r1
    lsls r0, r0, #0x0A
    ldr r1, [r5, #0x00]
    adds r1, r1, r0
    str r1, [r5, #0x00]
    movs r3, #0x08
    ldsh r0, [r5, r3]
    cmp r0, #0x02
    beq _080368CC
    cmp r0, #0x02
    ble _080367FA
    b _080369EC
_080367FA:
    cmp r0, #0x00
    bge _08036800
    b _080369EC
_08036800:
    movs r4, #0xA8
    lsls r4, r4, #0x0F
    str r4, [sp, #0x014]
    movs r6, #0x80
    lsls r6, r6, #0x01
    adds r0, r6, #0x0
    ldrh r3, [r5, #0x0C]
    adds r0, r0, r3
    strh r0, [r5, #0x0C]
    ldr r6, _08036868 @ =0x080E645C
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0803681E
    adds r0, #0x3F
_0803681E:
    asrs r0, r0, #0x06
    ldr r3, _0803686C @ =0x000003FF
    adds r4, r3, #0x0
    ands r0, r4
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r3, [r0, #0x00]
    lsls r0, r2, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _08036836
    adds r0, #0x3F
_08036836:
    asrs r0, r0, #0x06
    ands r0, r4
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r0, [r0, #0x00]
    subs r2, r3, r0
    cmp r7, #0x00
    bgt _08036878
    ldr r0, [r5, #0x04]
    movs r4, #0x90
    lsls r4, r4, #0x07
    adds r0, r0, r4
    str r0, [r5, #0x04]
    lsls r0, r2, #0x04
    b _08036884
_08036854: .4byte 0x03003668
_08036858: .4byte 0xFFFFC000
_0803685C: .4byte 0x030021D0
_08036860: .4byte 0x030021D4
_08036864: .4byte 0x00007FFF
_08036868: .4byte 0x080E645C
_0803686C: .4byte 0x000003FF
_08036870: .4byte 0x030021E0
_08036874: .4byte 0x030021D8
_08036878:
    ldr r0, [r5, #0x04]
    movs r6, #0xC0
    lsls r6, r6, #0x06
    adds r0, r0, r6
    str r0, [r5, #0x04]
    lsls r0, r2, #0x03
_08036884:
    adds r0, r1, r0
    str r0, [r5, #0x00]
    ldr r3, _080368C0 @ =0x030021E0
    add r3, r8
    mov r1, r9
    cmp r1, #0x00
    bge _08036894
    adds r1, #0x03
_08036894:
    asrs r1, r1, #0x02
    ldr r0, [r3, #0x00]
    adds r0, r0, r1
    str r0, [r3, #0x00]
    ldr r0, _080368C0 @ =0x030021E0
    adds r0, #0x10
    mov r1, r8
    adds r2, r1, r0
    ldr r0, [r2, #0x00]
    adds r1, r0, r7
    str r1, [r2, #0x00]
    ldr r0, _080368C4 @ =0x0047FFFF
    cmp r1, r0
    bgt _080368B2
    b _08036AE0
_080368B2:
    ldr r4, _080368C8 @ =0xFFB80000
    adds r0, r1, r4
    str r0, [r2, #0x00]
    ldrh r0, [r3, #0x08]
    adds r0, #0x01
    strh r0, [r3, #0x08]
    b _08036AE0
_080368C0: .4byte 0x030021E0
_080368C4: .4byte 0x0047FFFF
_080368C8: .4byte 0xFFB80000
_080368CC:
    movs r6, #0xDC
    lsls r6, r6, #0x0F
    str r6, [sp, #0x014]
    movs r3, #0xA0
    lsls r3, r3, #0x01
    adds r0, r3, #0x0
    ldrh r4, [r5, #0x0C]
    adds r0, r0, r4
    strh r0, [r5, #0x0C]
    ldr r6, _08036920 @ =0x080E645C
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _080368EA
    adds r0, #0x3F
_080368EA:
    asrs r0, r0, #0x06
    ldr r3, _08036924 @ =0x000003FF
    adds r4, r3, #0x0
    ands r0, r4
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r3, [r0, #0x00]
    lsls r0, r2, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _08036902
    adds r0, #0x3F
_08036902:
    asrs r0, r0, #0x06
    ands r0, r4
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r0, [r0, #0x00]
    subs r2, r3, r0
    cmp r7, #0x00
    bgt _08036928
    ldr r0, [r5, #0x04]
    movs r4, #0x90
    lsls r4, r4, #0x08
    adds r0, r0, r4
    str r0, [r5, #0x04]
    lsls r0, r2, #0x05
    b _08036934
_08036920: .4byte 0x080E645C
_08036924: .4byte 0x000003FF
_08036928:
    ldr r0, [r5, #0x04]
    movs r6, #0xD0
    lsls r6, r6, #0x07
    adds r0, r0, r6
    str r0, [r5, #0x04]
    lsls r0, r2, #0x04
_08036934:
    adds r0, r1, r0
    str r0, [r5, #0x00]
    mov r1, r9
    lsrs r0, r1, #0x1F
    add r0, r9
    asrs r0, r0, #0x01
    ldr r1, [r5, #0x00]
    adds r1, r1, r0
    str r1, [r5, #0x00]
    ldr r1, [r5, #0x04]
    movs r0, #0xA0
    lsls r0, r0, #0x0F
    cmp r1, r0
    ble _0803695E
    ldr r2, _080369CC @ =0xFFC40000
    adds r0, r1, r2
    asrs r0, r0, #0x10
    muls r0, r7
    asrs r0, r0, #0x06
    adds r0, r1, r0
    str r0, [r5, #0x04]
_0803695E:
    ldr r3, [sp, #0x018]
    ldr r1, [r3, #0x00]
    movs r0, #0x8C
    lsls r0, r0, #0x0F
    cmp r1, r0
    ble _080369A4
    ldr r4, _080369D0 @ =0xFFE00000
    adds r0, r1, r4
    cmp r0, #0x00
    bge _08036976
    ldr r6, _080369D4 @ =0xFFE07FFF
    adds r0, r1, r6
_08036976:
    asrs r2, r0, #0x0F
    movs r0, #0x03
    strh r0, [r5, #0x08]
    ldr r1, [r5, #0x00]
    ldr r3, _080369D8 @ =0xFF880000
    adds r0, r1, r3
    cmp r0, #0x00
    bge _0803698A
    ldr r4, _080369DC @ =0xFF88FFFF
    adds r0, r1, r4
_0803698A:
    asrs r0, r0, #0x10
    muls r0, r7
    cmp r0, #0x00
    bge _08036994
    adds r0, #0x1F
_08036994:
    asrs r0, r0, #0x05
    muls r0, r2
    cmp r0, #0x00
    bge _0803699E
    adds r0, #0xFF
_0803699E:
    asrs r0, r0, #0x08
    adds r0, r1, r0
    str r0, [r5, #0x00]
_080369A4:
    ldr r0, _080369E0 @ =0x030021E0
    adds r0, #0x10
    mov r6, r8
    adds r2, r6, r0
    ldr r0, [r2, #0x00]
    adds r1, r0, r7
    str r1, [r2, #0x00]
    ldr r0, _080369E4 @ =0x004FFFFF
    cmp r1, r0
    bgt _080369BA
    b _08036AE0
_080369BA:
    ldr r3, _080369E8 @ =0xFFB00000
    adds r0, r1, r3
    str r0, [r2, #0x00]
    ldr r4, [sp, #0x01C]
    ldrh r0, [r4, #0x08]
    adds r0, #0x01
    strh r0, [r4, #0x08]
    b _08036AE0
    .byte 0x00, 0x00
_080369CC: .4byte 0xFFC40000
_080369D0: .4byte 0xFFE00000
_080369D4: .4byte 0xFFE07FFF
_080369D8: .4byte 0xFF880000
_080369DC: .4byte 0xFF88FFFF
_080369E0: .4byte 0x030021E0
_080369E4: .4byte 0x004FFFFF
_080369E8: .4byte 0xFFB00000
_080369EC:
    movs r6, #0xA0
    lsls r6, r6, #0x10
    str r6, [sp, #0x014]
    ldr r3, _08036A4C @ =0x030021E0
    add r3, r8
    movs r1, #0xC0
    lsls r1, r1, #0x01
    adds r0, r1, #0x0
    ldrh r4, [r3, #0x0C]
    adds r0, r0, r4
    strh r0, [r3, #0x0C]
    ldr r6, _08036A50 @ =0x080E645C
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _08036A0E
    adds r0, #0x3F
_08036A0E:
    asrs r0, r0, #0x06
    ldr r4, _08036A54 @ =0x000003FF
    adds r1, r4, #0x0
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r4, [r0, #0x00]
    lsls r0, r2, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _08036A26
    adds r0, #0x3F
_08036A26:
    asrs r0, r0, #0x06
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r0, [r0, #0x00]
    subs r2, r4, r0
    cmp r7, #0x00
    bgt _08036A5C
    ldr r1, _08036A58 @ =0x030021E4
    add r1, r8
    ldr r0, [r1, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x09
    adds r0, r0, r6
    str r0, [r1, #0x00]
    lsls r1, r2, #0x01
    adds r1, r1, r2
    lsls r1, r1, #0x04
    b _08036A70
_08036A4C: .4byte 0x030021E0
_08036A50: .4byte 0x080E645C
_08036A54: .4byte 0x000003FF
_08036A58: .4byte 0x030021E4
_08036A5C:
    ldr r1, _08036B34 @ =0x030021E4
    add r1, r8
    ldr r0, [r1, #0x00]
    movs r4, #0xC0
    lsls r4, r4, #0x08
    adds r0, r0, r4
    str r0, [r1, #0x00]
    lsls r1, r2, #0x01
    adds r1, r1, r2
    lsls r1, r1, #0x03
_08036A70:
    ldr r0, [r3, #0x00]
    adds r0, r0, r1
    str r0, [r3, #0x00]
    ldr r6, [sp, #0x01C]
    ldr r0, [r6, #0x00]
    add r0, r9
    str r0, [r6, #0x00]
    cmp r7, #0x00
    ble _08036AE0
    ldr r1, [r5, #0x04]
    movs r0, #0xA0
    lsls r0, r0, #0x0F
    cmp r1, r0
    ble _08036A9A
    ldr r2, _08036B38 @ =0xFFC40000
    adds r0, r1, r2
    asrs r0, r0, #0x10
    muls r0, r7
    asrs r0, r0, #0x06
    adds r0, r1, r0
    str r0, [r5, #0x04]
_08036A9A:
    ldr r3, [sp, #0x018]
    ldr r1, [r3, #0x00]
    movs r0, #0x8C
    lsls r0, r0, #0x0F
    cmp r1, r0
    ble _08036AE0
    ldr r4, _08036B3C @ =0xFFE00000
    adds r0, r1, r4
    cmp r0, #0x00
    bge _08036AB2
    ldr r6, _08036B40 @ =0xFFE07FFF
    adds r0, r1, r6
_08036AB2:
    asrs r2, r0, #0x0F
    ldr r0, [sp, #0x020]
    ldr r1, [r0, #0x00]
    ldr r3, _08036B44 @ =0xFF880000
    adds r0, r1, r3
    cmp r0, #0x00
    bge _08036AC4
    ldr r4, _08036B48 @ =0xFF88FFFF
    adds r0, r1, r4
_08036AC4:
    asrs r0, r0, #0x10
    muls r0, r7
    cmp r0, #0x00
    bge _08036ACE
    adds r0, #0x1F
_08036ACE:
    asrs r0, r0, #0x05
    muls r0, r2
    cmp r0, #0x00
    bge _08036AD8
    adds r0, #0xFF
_08036AD8:
    asrs r0, r0, #0x08
    adds r0, r1, r0
    ldr r6, [sp, #0x020]
    str r0, [r6, #0x00]
_08036AE0:
    ldr r4, _08036B4C @ =0x030021E0
    add r4, r8
    ldr r1, [r4, #0x00]
    movs r0, #0xF8
    lsls r0, r0, #0x10
    cmp r1, r0
    bls _08036B08
    ldrh r0, [r4, #0x0E]
    movs r2, #0x02
    negs r2, r2
    adds r1, r2, #0x0
    ands r0, r1
    strh r0, [r4, #0x0E]
    mov r3, r10
    strh r3, [r4, #0x0A]
    bl main_getRandom
    movs r1, #0x1F
    ands r1, r0
    strh r1, [r4, #0x0C]
_08036B08:
    ldr r0, _08036B34 @ =0x030021E4
    add r0, r8
    ldr r0, [r0, #0x00]
    ldr r6, [sp, #0x014]
    cmp r0, r6
    bgt _08036B16
    b _08036C2E
_08036B16:
    ldrh r0, [r4, #0x0E]
    movs r2, #0x02
    negs r2, r2
    adds r1, r2, #0x0
    ands r0, r1
    strh r0, [r4, #0x0E]
    mov r3, r10
    strh r3, [r4, #0x0A]
    bl main_getRandom
    movs r1, #0x3F
    ands r1, r0
    adds r1, #0x14
    strh r1, [r4, #0x0C]
    b _08036C2E
_08036B34: .4byte 0x030021E4
_08036B38: .4byte 0xFFC40000
_08036B3C: .4byte 0xFFE00000
_08036B40: .4byte 0xFFE07FFF
_08036B44: .4byte 0xFF880000
_08036B48: .4byte 0xFF88FFFF
_08036B4C: .4byte 0x030021E0
_08036B50:
    ldrh r0, [r5, #0x0C]
    subs r0, #0x01
    strh r0, [r5, #0x0C]
    lsls r0, r0, #0x10
    cmp r0, #0x00
    bge _08036C2E
    ldr r4, [sp, #0x010]
    cmp r4, #0x09
    ble _08036B78
    cmp r7, #0x00
    bne _08036B6C
    mov r6, r9
    cmp r6, #0x00
    beq _08036B78
_08036B6C:
    bl main_getRandom
    movs r1, #0x1F
    ands r1, r0
    strh r1, [r5, #0x0C]
    b _08036C2E
_08036B78:
    cmp r7, #0x00
    bge _08036B88
    bl main_getRandom
    ldr r2, _08036B84 @ =0x080EB37C
    b _08036B8E
_08036B84: .4byte 0x080EB37C
_08036B88:
    bl main_getRandom
    ldr r2, _08036BE0 @ =0x080EB38C
_08036B8E:
    movs r1, #0x07
    ands r1, r0
    lsls r1, r1, #0x01
    adds r1, r1, r2
    ldrh r0, [r1, #0x00]
    strh r0, [r5, #0x08]
    ldr r4, _08036BE4 @ =0x030021E0
    add r4, r8
    movs r0, #0x01
    strh r0, [r4, #0x0E]
    strh r0, [r4, #0x0A]
    bl main_getRandom
    strh r0, [r4, #0x0C]
    ldr r0, _08036BE4 @ =0x030021E0
    adds r0, #0x10
    add r0, r8
    mov r1, r10
    str r1, [r0, #0x00]
    movs r2, #0x08
    ldsh r0, [r4, r2]
    cmp r0, #0x02
    beq _08036BE8
    cmp r0, #0x02
    bgt _08036C10
    cmp r0, #0x00
    blt _08036C10
    bl main_getRandom
    movs r1, #0x3F
    ands r1, r0
    lsls r0, r1, #0x02
    adds r0, r0, r1
    lsls r0, r0, #0x10
    str r0, [r4, #0x00]
    bl main_getRandom
    movs r1, #0x1F
    ands r1, r0
    adds r1, #0x08
    b _08036C2A
_08036BE0: .4byte 0x080EB38C
_08036BE4: .4byte 0x030021E0
_08036BE8:
    bl main_getRandom
    movs r1, #0x3F
    ands r1, r0
    lsls r0, r1, #0x02
    adds r0, r0, r1
    lsls r0, r0, #0x10
    str r0, [r4, #0x00]
    bl main_getRandom
    ldr r2, _08036C0C @ =0x030021E4
    add r2, r8
    movs r1, #0x1F
    ands r1, r0
    subs r1, #0x08
    lsls r1, r1, #0x10
    str r1, [r2, #0x00]
    b _08036C2E
_08036C0C: .4byte 0x030021E4
_08036C10:
    bl main_getRandom
    movs r1, #0x3F
    ands r1, r0
    lsls r0, r1, #0x02
    adds r0, r0, r1
    lsls r0, r0, #0x10
    str r0, [r5, #0x00]
    bl main_getRandom
    movs r1, #0x0F
    ands r1, r0
    subs r1, #0x08
_08036C2A:
    lsls r1, r1, #0x10
    str r1, [r5, #0x04]
_08036C2E:
    ldr r3, _08036C80 @ =0x030021E0
    add r3, r8
    ldrh r1, [r3, #0x0E]
    movs r2, #0x01
    adds r0, r2, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _08036CBE
    ldr r1, [sp, #0x010]
    ands r1, r2
    ldr r0, _08036C84 @ =0x03002E20
    ldr r0, [r0, #0x14]
    ands r0, r2
    cmp r1, r0
    bne _08036CBE
    ldrb r2, [r3, #0x02]
    ldr r1, _08036C88 @ =0xFFFF0000
    ldr r0, [sp, #0x008]
    ands r0, r1
    orrs r0, r2
    str r0, [sp, #0x008]
    ldrb r2, [r5, #0x06]
    lsls r2, r2, #0x10
    ldr r1, _08036C8C @ =0x0000FFFF
    ands r0, r1
    orrs r0, r2
    str r0, [sp, #0x008]
    movs r4, #0x08
    ldsh r0, [r3, r4]
    cmp r0, #0x02
    beq _08036C94
    cmp r0, #0x02
    bgt _08036CAC
    cmp r0, #0x00
    blt _08036CAC
    mov r6, r10
    str r6, [sp, #0x000]
    str r6, [sp, #0x004]
    ldr r0, _08036C90 @ =0x0807C2C8
    b _08036C9C
    .byte 0x00, 0x00
_08036C80: .4byte 0x030021E0
_08036C84: .4byte 0x03002E20
_08036C88: .4byte 0xFFFF0000
_08036C8C: .4byte 0x0000FFFF
_08036C90: .4byte 0x0807C2C8
_08036C94:
    mov r0, r10
    str r0, [sp, #0x000]
    str r0, [sp, #0x004]
    ldr r0, _08036CA8 @ =0x0807C2C0
_08036C9C:
    add r1, sp, #0x008
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    b _08036CBE
_08036CA8: .4byte 0x0807C2C0
_08036CAC:
    mov r1, r10
    str r1, [sp, #0x000]
    str r1, [sp, #0x004]
    ldr r0, _08036D08 @ =0x0807C2B8
    add r1, sp, #0x008
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
_08036CBE:
    ldr r2, [sp, #0x018]
    adds r2, #0x14
    str r2, [sp, #0x018]
    movs r3, #0x14
    add r8, r3
    adds r5, #0x14
    ldr r4, [sp, #0x01C]
    adds r4, #0x14
    str r4, [sp, #0x01C]
    ldr r6, [sp, #0x020]
    adds r6, #0x14
    str r6, [sp, #0x020]
    ldr r0, [sp, #0x010]
    adds r0, #0x01
    str r0, [sp, #0x010]
    cmp r0, #0x0B
    bgt _08036CE2
    b _080367C8
_08036CE2:
    ldr r1, _08036D0C @ =0x030021D0
    ldr r2, _08036D10 @ =0x03003668
    ldr r0, [r2, #0x18]
    str r0, [r1, #0x00]
    ldr r1, _08036D14 @ =0x030021D4
    ldr r0, [r2, #0x1C]
    str r0, [r1, #0x00]
    ldr r0, _08036D18 @ =0x030021D8
    ldr r3, [sp, #0x00C]
    str r3, [r0, #0x00]
    add sp, #0x024
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08036D08: .4byte 0x0807C2B8
_08036D0C: .4byte 0x030021D0
_08036D10: .4byte 0x03003668
_08036D14: .4byte 0x030021D4
_08036D18: .4byte 0x030021D8
    thumb_func_start sub_8036D1C
sub_8036D1C:
    push {r4, r5, lr}
    ldr r5, _08036D54 @ =0x03002E20
    movs r1, #0xE8
    lsls r1, r1, #0x03
    adds r0, r5, r1
    bl sub_804F7AC
    adds r4, r0, #0x0
    cmp r4, #0x00
    beq _08036D4E
    adds r1, r4, #0x0
    adds r1, #0x4C
    movs r0, #0x00
    strh r0, [r1, #0x00]
    ldr r1, _08036D58 @ =0x000007FE
    adds r0, r5, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    bne _08036D4E
    bl sub_80365B0
    ldr r0, _08036D5C @ =0x0803670D
    str r0, [r4, #0x14]
_08036D4E:
    pop {r4, r5}
    pop {r0}
    bx r0
_08036D54: .4byte 0x03002E20
_08036D58: .4byte 0x000007FE
_08036D5C: .4byte sub_803670C
    thumb_func_start sub_8036D60
sub_8036D60:
    push {r4, r5, r6, r7, lr}
    add sp, #-0x00C
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    ldr r2, _08036DD8 @ =0x03002E20
    ldr r0, _08036DDC @ =0x0000057C
    adds r3, r2, r0
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r1, [r0, #0x00]
    ldr r0, _08036DE0 @ =0x0000FFF8
    ands r0, r1
    ldrh r1, [r3, #0x00]
    movs r4, #0x00
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r5, #0x80
    lsls r5, r5, #0x01
    adds r1, r5, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r7, #0x80
    lsls r7, r7, #0x02
    adds r5, r7, #0x0
    orrs r0, r5
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r7, #0x80
    lsls r7, r7, #0x03
    adds r1, r7, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r7, #0x80
    lsls r7, r7, #0x04
    adds r1, r7, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldr r1, _08036DE4 @ =0x0000080D
    adds r0, r2, r1
    ldrb r0, [r0, #0x00]
    adds r7, r2, #0x0
    cmp r0, #0x02
    beq _08036DE8
    ldrh r0, [r3, #0x00]
    orrs r0, r5
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    b _08036DF2
    .byte 0x00, 0x00
_08036DD8: .4byte 0x03002E20
_08036DDC: .4byte 0x0000057C
_08036DE0: .4byte 0x0000FFF8
_08036DE4: .4byte 0x0000080D
_08036DE8:
    ldrh r0, [r3, #0x00]
    ldr r1, _08036E8C @ =0x0000FDFF
    ands r1, r0
    ldrh r0, [r3, #0x00]
    strh r1, [r3, #0x00]
_08036DF2:
    movs r0, #0x00
    str r0, [r3, #0x04]
    ldr r0, _08036E90 @ =0x00000C07
    str r0, [sp, #0x000]
    ldr r0, _08036E94 @ =0x00004D06
    str r0, [sp, #0x004]
    ldr r0, _08036E98 @ =0x00000F05
    str r0, [sp, #0x008]
    mov r0, sp
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x08]
    strh r0, [r3, #0x08]
    add r0, sp, #0x004
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x0A]
    strh r0, [r3, #0x0A]
    add r0, sp, #0x008
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x0C]
    strh r0, [r3, #0x0C]
    lsls r0, r6, #0x10
    asrs r2, r0, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08036E26
    adds r0, #0xFF
_08036E26:
    asrs r0, r0, #0x08
    ldrh r1, [r3, #0x0E]
    strh r0, [r3, #0x0E]
    ldrh r0, [r3, #0x10]
    movs r4, #0x26
    strh r4, [r3, #0x10]
    ldr r0, [r7, #0x10]
    adds r1, r2, #0x0
    cmp r2, #0x00
    bge _08036E3C
    adds r1, #0x7F
_08036E3C:
    asrs r1, r1, #0x07
    lsls r0, r0, #0x15
    lsrs r0, r0, #0x17
    adds r1, r1, r0
    ldrh r0, [r3, #0x12]
    strh r1, [r3, #0x12]
    ldr r0, [r7, #0x10]
    ldr r1, _08036E9C @ =0x080E645C
    lsls r0, r0, #0x19
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _08036E56
    adds r0, #0x3F
_08036E56:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bge _08036E68
    ldr r5, _08036EA0 @ =0x00001FFF
    adds r0, r0, r5
_08036E68:
    asrs r0, r0, #0x0D
    adds r0, #0x26
    ldrh r1, [r3, #0x14]
    strh r0, [r3, #0x14]
    adds r0, r2, #0x0
    cmp r0, #0x00
    bge _08036E78
    adds r0, #0x3F
_08036E78:
    asrs r0, r0, #0x06
    ldrh r1, [r3, #0x16]
    strh r0, [r3, #0x16]
    ldrh r0, [r3, #0x18]
    strh r4, [r3, #0x18]
    add sp, #0x00C
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08036E8C: .4byte 0x0000FDFF
_08036E90: .4byte 0x00000C07
_08036E94: .4byte 0x00004D06
_08036E98: .4byte 0x00000F05
_08036E9C: .4byte 0x080E645C
_08036EA0: .4byte 0x00001FFF
    thumb_func_start sub_8036EA4
sub_8036EA4:
    push {lr}
    movs r0, #0x00
    bl pltt_getBuffer
    movs r1, #0x00
    strh r1, [r0, #0x00]
    ldr r2, _08036EC0 @ =0x03002E20
    ldr r0, [r2, #0x24]
    movs r1, #0x01
    orrs r0, r1
    str r0, [r2, #0x24]
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08036EC0: .4byte 0x03002E20
    thumb_func_start sub_8036EC4
sub_8036EC4:
    push {r4, r5, r6, lr}
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    ldr r2, _08036F2C @ =0x03002E20
    ldr r0, _08036F30 @ =0x0000057C
    adds r4, r2, r0
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r1, [r0, #0x00]
    ldr r0, _08036F34 @ =0x0000FFF8
    ands r0, r1
    ldrh r1, [r4, #0x00]
    movs r3, #0x00
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x01
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x02
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x03
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldr r0, _08036F38 @ =0x0000080D
    adds r2, r2, r0
    ldrb r0, [r2, #0x00]
    cmp r0, #0x02
    beq _08036F3C
    ldrh r0, [r4, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x04
    adds r1, r2, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    b _08036F46
_08036F2C: .4byte 0x03002E20
_08036F30: .4byte 0x0000057C
_08036F34: .4byte 0x0000FFF8
_08036F38: .4byte 0x0000080D
_08036F3C:
    ldrh r0, [r4, #0x00]
    ldr r1, _08036F94 @ =0x0000F7FF
    ands r1, r0
    ldrh r0, [r4, #0x00]
    strh r1, [r4, #0x00]
_08036F46:
    movs r0, #0x00
    str r0, [r4, #0x04]
    bl track_loadSkySize
    lsls r0, r5, #0x10
    asrs r2, r0, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08036F5A
    adds r0, #0x3F
_08036F5A:
    asrs r0, r0, #0x06
    subs r0, #0x28
    ldrh r1, [r4, #0x0E]
    strh r0, [r4, #0x0E]
    ldrh r0, [r4, #0x10]
    movs r3, #0x26
    strh r3, [r4, #0x10]
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08036F70
    adds r0, #0x7F
_08036F70:
    asrs r0, r0, #0x07
    ldrh r1, [r4, #0x12]
    strh r0, [r4, #0x12]
    ldrh r0, [r4, #0x14]
    strh r3, [r4, #0x14]
    adds r0, r2, #0x0
    cmp r0, #0x00
    bge _08036F82
    adds r0, #0xFF
_08036F82:
    asrs r0, r0, #0x08
    ldrh r1, [r4, #0x16]
    strh r0, [r4, #0x16]
    ldrh r0, [r4, #0x18]
    strh r3, [r4, #0x18]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08036F94: .4byte 0x0000F7FF
    thumb_func_start nullsub_6
nullsub_6: @ 08036F98
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8036F9C
sub_8036F9C:
    push {r4, r5, r6, lr}
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    ldr r2, _08037004 @ =0x03002E20
    ldr r0, _08037008 @ =0x0000057C
    adds r4, r2, r0
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r1, [r0, #0x00]
    ldr r0, _0803700C @ =0x0000FFF8
    ands r0, r1
    ldrh r1, [r4, #0x00]
    movs r3, #0x00
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x01
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x02
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x03
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldr r0, _08037010 @ =0x0000080D
    adds r2, r2, r0
    ldrb r0, [r2, #0x00]
    cmp r0, #0x02
    beq _08037014
    ldrh r0, [r4, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x04
    adds r1, r2, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    b _0803701E
_08037004: .4byte 0x03002E20
_08037008: .4byte 0x0000057C
_0803700C: .4byte 0x0000FFF8
_08037010: .4byte 0x0000080D
_08037014:
    ldrh r0, [r4, #0x00]
    ldr r1, _08037060 @ =0x0000F7FF
    ands r1, r0
    ldrh r0, [r4, #0x00]
    strh r1, [r4, #0x00]
_0803701E:
    movs r0, #0x00
    str r0, [r4, #0x04]
    bl track_loadSkySize
    lsls r0, r5, #0x10
    asrs r2, r0, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08037032
    adds r0, #0x3F
_08037032:
    asrs r0, r0, #0x06
    subs r0, #0x28
    ldrh r1, [r4, #0x0E]
    strh r0, [r4, #0x0E]
    ldrh r0, [r4, #0x10]
    movs r3, #0x26
    strh r3, [r4, #0x10]
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08037048
    adds r0, #0x7F
_08037048:
    asrs r1, r0, #0x07
    ldrh r0, [r4, #0x12]
    strh r1, [r4, #0x12]
    ldrh r0, [r4, #0x14]
    strh r3, [r4, #0x14]
    ldrh r0, [r4, #0x16]
    strh r1, [r4, #0x16]
    ldrh r0, [r4, #0x18]
    strh r3, [r4, #0x18]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_08037060: .4byte 0x0000F7FF
    thumb_func_start nullsub_7
nullsub_7: @ 08037064
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8037068
sub_8037068:
    push {r4, r5, r6, lr}
    add sp, #-0x00C
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    ldr r2, _080370D4 @ =0x03002E20
    ldr r0, _080370D8 @ =0x0000057C
    adds r3, r2, r0
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r1, [r0, #0x00]
    ldr r0, _080370DC @ =0x0000FFF8
    ands r0, r1
    ldrh r1, [r3, #0x00]
    movs r4, #0x00
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x01
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x02
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x03
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldr r0, _080370E0 @ =0x0000080D
    adds r2, r2, r0
    ldrb r0, [r2, #0x00]
    cmp r0, #0x02
    beq _080370E4
    ldrh r0, [r3, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x04
    adds r1, r2, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    b _080370EE
    .byte 0x00, 0x00
_080370D4: .4byte 0x03002E20
_080370D8: .4byte 0x0000057C
_080370DC: .4byte 0x0000FFF8
_080370E0: .4byte 0x0000080D
_080370E4:
    ldrh r0, [r3, #0x00]
    ldr r1, _08037158 @ =0x0000F7FF
    ands r1, r0
    ldrh r0, [r3, #0x00]
    strh r1, [r3, #0x00]
_080370EE:
    ldr r0, _0803715C @ =0x00000F07
    str r0, [sp, #0x000]
    ldr r0, _08037160 @ =0x00000D07
    str r0, [sp, #0x004]
    ldr r0, _08037164 @ =0x00000C07
    str r0, [sp, #0x008]
    mov r0, sp
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x08]
    strh r0, [r3, #0x08]
    add r0, sp, #0x004
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x0A]
    strh r0, [r3, #0x0A]
    add r0, sp, #0x008
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x0C]
    strh r0, [r3, #0x0C]
    lsls r0, r5, #0x10
    asrs r2, r0, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _0803711E
    adds r0, #0x3F
_0803711E:
    asrs r0, r0, #0x06
    subs r0, #0x28
    ldrh r1, [r3, #0x0E]
    strh r0, [r3, #0x0E]
    ldrh r0, [r3, #0x10]
    movs r4, #0x46
    strh r4, [r3, #0x10]
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08037134
    adds r0, #0x7F
_08037134:
    asrs r0, r0, #0x07
    ldrh r1, [r3, #0x12]
    strh r0, [r3, #0x12]
    ldrh r0, [r3, #0x14]
    strh r4, [r3, #0x14]
    adds r0, r2, #0x0
    cmp r0, #0x00
    bge _08037146
    adds r0, #0xFF
_08037146:
    asrs r0, r0, #0x08
    ldrh r1, [r3, #0x16]
    strh r0, [r3, #0x16]
    ldrh r0, [r3, #0x18]
    strh r4, [r3, #0x18]
    add sp, #0x00C
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_08037158: .4byte 0x0000F7FF
_0803715C: .4byte 0x00000F07
_08037160: .4byte 0x00000D07
_08037164: .4byte 0x00000C07
    thumb_func_start sub_8037168
sub_8037168:
    push {lr}
    ldr r0, _08037188 @ =0x080C2910
    ldr r1, _0803718C @ =0x06007000
    bl LZ77UnCompVram
    ldr r0, _08037190 @ =0x080C2C84
    ldr r1, _08037194 @ =0x06007C80
    bl LZ77UnCompVram
    ldr r2, _08037198 @ =0x03002E20
    ldr r0, [r2, #0x24]
    movs r1, #0x01
    orrs r0, r1
    str r0, [r2, #0x24]
    pop {r0}
    bx r0
_08037188: .4byte 0x080C2910
_0803718C: .4byte 0x06007000
_08037190: .4byte 0x080C2C84
_08037194: .4byte 0x06007C80
_08037198: .4byte 0x03002E20
    thumb_func_start sub_803719C
sub_803719C:
    push {r4, r5, r6, lr}
    add sp, #-0x00C
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    ldr r2, _08037208 @ =0x03002E20
    ldr r0, _0803720C @ =0x0000057C
    adds r4, r2, r0
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r1, [r0, #0x00]
    ldr r0, _08037210 @ =0x0000FFF8
    ands r0, r1
    ldrh r1, [r4, #0x00]
    movs r3, #0x00
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x01
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x02
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x03
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldr r1, _08037214 @ =0x0000080D
    adds r0, r2, r1
    ldrb r0, [r0, #0x00]
    adds r6, r2, #0x0
    cmp r0, #0x02
    beq _08037218
    ldrh r0, [r4, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x04
    adds r1, r2, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    b _08037222
_08037208: .4byte 0x03002E20
_0803720C: .4byte 0x0000057C
_08037210: .4byte 0x0000FFF8
_08037214: .4byte 0x0000080D
_08037218:
    ldrh r0, [r4, #0x00]
    ldr r1, _080372A0 @ =0x0000F7FF
    ands r1, r0
    ldrh r0, [r4, #0x00]
    strh r1, [r4, #0x00]
_08037222:
    movs r0, #0x00
    str r0, [r4, #0x04]
    ldr r0, _080372A4 @ =0x00000F07
    str r0, [sp, #0x000]
    ldr r0, _080372A8 @ =0x00000E07
    str r0, [sp, #0x004]
    ldr r0, _080372AC @ =0x00000D07
    str r0, [sp, #0x008]
    mov r0, sp
    ldrh r0, [r0, #0x00]
    ldrh r1, [r4, #0x08]
    strh r0, [r4, #0x08]
    add r0, sp, #0x004
    ldrh r0, [r0, #0x00]
    ldrh r1, [r4, #0x0A]
    strh r0, [r4, #0x0A]
    add r0, sp, #0x008
    ldrh r0, [r0, #0x00]
    ldrh r1, [r4, #0x0C]
    strh r0, [r4, #0x0C]
    lsls r0, r5, #0x10
    asrs r3, r0, #0x10
    adds r0, r3, #0x0
    cmp r3, #0x00
    bge _08037256
    adds r0, #0x3F
_08037256:
    asrs r0, r0, #0x06
    subs r0, #0x28
    ldrh r1, [r4, #0x0E]
    strh r0, [r4, #0x0E]
    ldrh r0, [r4, #0x10]
    movs r2, #0x26
    strh r2, [r4, #0x10]
    adds r0, r3, #0x0
    cmp r3, #0x00
    bge _0803726C
    adds r0, #0x7F
_0803726C:
    asrs r0, r0, #0x07
    ldrh r1, [r4, #0x12]
    strh r0, [r4, #0x12]
    ldrh r0, [r4, #0x14]
    strh r2, [r4, #0x14]
    adds r0, r3, #0x0
    cmp r0, #0x00
    bge _0803727E
    adds r0, #0xFF
_0803727E:
    asrs r0, r0, #0x08
    ldrh r1, [r4, #0x16]
    strh r0, [r4, #0x16]
    ldrh r0, [r4, #0x18]
    strh r2, [r4, #0x18]
    adds r5, r6, #0x0
    adds r5, #0x24
    ldr r1, _080372B0 @ =0x000007FB
    adds r0, r6, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    bne _080372B8
    ldr r2, _080372B4 @ =0x00000838
    adds r0, r6, r2
    ldr r0, [r0, #0x00]
    b _080372C0
    .byte 0x00, 0x00
_080372A0: .4byte 0x0000F7FF
_080372A4: .4byte 0x00000F07
_080372A8: .4byte 0x00000E07
_080372AC: .4byte 0x00000D07
_080372B0: .4byte 0x000007FB
_080372B4: .4byte 0x00000838
_080372B8:
    adds r0, r5, #0x0
    movs r1, #0x00
    bl sub_804AED4
_080372C0:
    movs r6, #0xA5
    lsls r6, r6, #0x03
    adds r2, r5, r6
    ldr r1, [r2, #0x00]
    adds r0, #0xC6
    ldrh r0, [r0, #0x00]
    lsrs r0, r0, #0x08
    subs r0, #0x7F
    cmp r1, #0x00
    bne _080372E0
    cmp r0, #0x01
    ble _080372DC
    movs r1, #0x01
    str r1, [r2, #0x00]
_080372DC:
    cmp r1, #0x00
    beq _080372FE
_080372E0:
    ldrh r0, [r4, #0x12]
    adds r2, r0, #0x0
    ldr r0, _080372F4 @ =0x03002E20
    ldr r0, [r0, #0x10]
    movs r1, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _080372F8
    adds r1, r2, #0x1
    b _080372FA
_080372F4: .4byte 0x03002E20
_080372F8:
    subs r1, r2, #0x1
_080372FA:
    ldrh r0, [r4, #0x12]
    strh r1, [r4, #0x12]
_080372FE:
    add sp, #0x00C
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_8037308
sub_8037308:
    push {r4, r5, r6, r7, lr}
    adds r6, r2, #0x0
    adds r7, r3, #0x0
    ldr r5, _08037348 @ =0x030022D0
    lsls r4, r0, #0x03
    adds r2, r4, r5
    movs r3, #0x03
_08037316:
    ldrh r0, [r1, #0x00]
    strh r0, [r2, #0x00]
    adds r1, #0x02
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _08037316
    adds r2, r5, #0x6
    adds r2, r4, r2
    ldrh r1, [r2, #0x00]
    ldr r0, _0803734C @ =0x0000F3FF
    ands r0, r1
    lsls r1, r6, #0x0A
    orrs r0, r1
    strh r0, [r2, #0x00]
    adds r1, r5, #0x4
    adds r1, r4, r1
    lsls r0, r7, #0x0C
    ldrh r2, [r1, #0x00]
    orrs r0, r2
    strh r0, [r1, #0x00]
    adds r0, r4, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
_08037348: .4byte 0x030022D0
_0803734C: .4byte 0x0000F3FF
    thumb_func_start sub_8037350
sub_8037350:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x020
    ldr r1, _08037384 @ =0x03002E20
    movs r0, #0x24
    adds r0, r0, r1
    mov r8, r0
    ldr r2, _08037388 @ =0x00000848
    adds r0, r1, r2
    ldrh r6, [r0, #0x14]
    ldr r3, _0803738C @ =0x00000BC8
    adds r0, r1, r3
    ldr r7, [r0, #0x00]
    ldr r4, _08037390 @ =0x000007FB
    adds r0, r1, r4
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    bne _08037394
    subs r2, #0x10
    adds r0, r1, r2
    ldr r0, [r0, #0x00]
    b _0803739C
    .byte 0x00, 0x00
_08037384: .4byte 0x03002E20
_08037388: .4byte 0x00000848
_0803738C: .4byte 0x00000BC8
_08037390: .4byte 0x000007FB
_08037394:
    mov r0, r8
    movs r1, #0x00
    bl sub_804AED4
_0803739C:
    adds r0, #0xC6
    ldrh r0, [r0, #0x00]
    lsrs r0, r0, #0x08
    adds r3, r0, #0x0
    subs r3, #0x7F
    mov r9, r8
    movs r0, #0xA3
    lsls r0, r0, #0x03
    add r0, r8
    ldr r5, [r0, #0x00]
    ldr r0, _080373E4 @ =0x0000051C
    add r0, r8
    ldr r4, [r0, #0x00]
    lsls r0, r6, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _080373C0
    adds r0, #0x7F
_080373C0:
    asrs r1, r0, #0x07
    movs r0, #0x60
    subs r0, r0, r1
    movs r2, #0xFF
    adds r1, r7, #0x0
    adds r1, #0x0C
    lsls r1, r1, #0x10
    ands r0, r2
    orrs r0, r1
    str r0, [sp, #0x008]
    cmp r5, #0x04
    bhi _080374C4
    lsls r0, r5, #0x02
    ldr r1, _080373E8 @ =0x080373EC
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_080373E4: .4byte 0x0000051C
_080373E8: .4byte 0x080373EC
    .byte 0x00, 0x74, 0x03, 0x08, 0x08, 0x74, 0x03, 0x08, 0x10, 0x74, 0x03, 0x08, 0x5C, 0x74, 0x03, 0x08
    .byte 0xC4, 0x74, 0x03, 0x08, 0x01, 0x2B, 0x78, 0xDD, 0x01, 0x35, 0x76, 0xE0, 0x01, 0x34, 0x3C, 0x2C
    .byte 0x73, 0xDD, 0x4D, 0xE0, 0x10, 0x49, 0x00, 0x20, 0x03, 0x22, 0x00, 0x23, 0xFF, 0xF7, 0x76, 0xFF
    .byte 0x10, 0x21, 0x09, 0x1B, 0x4B, 0x00, 0x5B, 0x18, 0x1B, 0x01, 0x80, 0x26, 0x76, 0x00, 0x9B, 0x19
    .byte 0x00, 0x21, 0x00, 0x91, 0x09, 0x49, 0x01, 0x91, 0x02, 0xA9, 0x1A, 0x1C, 0xF8, 0xF7, 0xF0, 0xFA
    .byte 0x01, 0x34, 0x10, 0x2C, 0x59, 0xDD, 0x18, 0x24, 0x01, 0x35, 0x60, 0x20, 0x08, 0x21, 0x32, 0x1C
    .byte 0x24, 0xF0, 0x14, 0xFD, 0x51, 0xE0, 0x00, 0x00, 0xB0, 0xCA, 0x07, 0x08, 0x9C, 0xB3, 0x0E, 0x08
    .byte 0x15, 0x49, 0x00, 0x20, 0x03, 0x22, 0x00, 0x23, 0xFF, 0xF7, 0x50, 0xFF, 0x06, 0x1C, 0x13, 0x49
    .byte 0xE0, 0x06, 0x02, 0x14, 0x10, 0x1C, 0x00, 0x2A, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D
    .byte 0x80, 0x00, 0x40, 0x18, 0x01, 0x68, 0x08, 0x1C, 0x00, 0x29, 0x01, 0xDA, 0x0C, 0x4B, 0xC8, 0x18
    .byte 0x40, 0x12, 0xA0, 0x27, 0x7F, 0x00, 0xC3, 0x19, 0x00, 0x20, 0x00, 0x90, 0x09, 0x48, 0x01, 0x90
    .byte 0x30, 0x1C, 0x02, 0xA9, 0x1A, 0x1C, 0xF8, 0xF7, 0xBB, 0xFA, 0x01, 0x34, 0x98, 0x2C, 0x24, 0xDD
    .byte 0x00, 0x24, 0x01, 0x35, 0x21, 0xE0, 0x00, 0x00, 0xB8, 0xCA, 0x07, 0x08, 0x5C, 0x64, 0x0E, 0x08
    .byte 0xFF, 0x01, 0x00, 0x00, 0x9C, 0xB3, 0x0E, 0x08
_080374C4:
    ldr r1, _0803753C @ =0x0807CAB8
    movs r0, #0x00
    movs r2, #0x03
    movs r3, #0x00
    bl sub_8037308
    lsls r3, r4, #0x01
    adds r3, r3, r4
    lsls r3, r3, #0x04
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r3, r3, r1
    movs r1, #0x00
    str r1, [sp, #0x000]
    ldr r1, _08037540 @ =0x080EB39C
    str r1, [sp, #0x004]
    add r1, sp, #0x008
    adds r2, r3, #0x0
    bl oam_renderCellData
    adds r4, #0x01
    cmp r4, #0x10
    ble _080374F6
    movs r4, #0x00
    movs r5, #0x02
_080374F6:
    movs r1, #0xA3
    lsls r1, r1, #0x03
    mov r2, r9
    adds r0, r2, r1
    str r5, [r0, #0x00]
    ldr r0, _08037544 @ =0x0000051C
    add r0, r9
    str r4, [r0, #0x00]
    mov r3, r8
    str r3, [sp, #0x00C]
    adds r1, r3, r1
    ldr r1, [r1, #0x00]
    movs r4, #0xA4
    lsls r4, r4, #0x03
    adds r0, r3, r4
    ldr r0, [r0, #0x00]
    str r0, [sp, #0x010]
    ldr r7, _08037548 @ =0x00000524
    adds r0, r3, r7
    ldr r0, [r0, #0x00]
    str r0, [sp, #0x014]
    movs r0, #0x00
    mov r10, r0
    ldr r2, [sp, #0x010]
    cmp r2, #0x01
    beq _0803754C
    cmp r2, #0x01
    bgt _0803758C
    cmp r2, #0x00
    bne _0803758C
    cmp r1, #0x01
    ble _0803758C
    movs r3, #0x01
    str r3, [sp, #0x010]
    b _0803758C
_0803753C: .4byte 0x0807CAB8
_08037540: .4byte 0x080EB39C
_08037544: .4byte 0x0000051C
_08037548: .4byte 0x00000524
_0803754C:
    ldr r2, _08037618 @ =0x080E645C
    ldr r4, [sp, #0x014]
    lsls r0, r4, #0x1B
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0803755A
    adds r0, #0x3F
_0803755A:
    asrs r1, r0, #0x06
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r1
    ldr r1, _0803761C @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    subs r0, r0, r1
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r0, r0, #0x01
    mov r10, r0
    ldr r7, [sp, #0x014]
    adds r7, #0x01
    str r7, [sp, #0x014]
    cmp r7, #0x10
    ble _0803758C
    movs r0, #0x00
    str r0, [sp, #0x014]
    movs r1, #0x02
    str r1, [sp, #0x010]
_0803758C:
    ldr r2, [sp, #0x010]
    cmp r2, #0x02
    ble _08037594
    b _08037692
_08037594:
    cmp r2, #0x01
    blt _08037692
    movs r0, #0x00
_0803759A:
    adds r3, r0, #0x1
    str r3, [sp, #0x01C]
    lsls r0, r0, #0x05
    mov r9, r0
    movs r4, #0x0C
    str r4, [sp, #0x018]
_080375A6:
    ldr r0, _08037620 @ =0x080713BC
    add r0, r9
    ldrh r0, [r0, #0x00]
    adds r4, r0, #0x0
    movs r7, #0x1F
    ands r4, r7
    lsrs r6, r0, #0x05
    movs r1, #0x1F
    ands r6, r1
    lsrs r7, r0, #0x0A
    ands r7, r1
    ldr r0, _08037624 @ =0x080713FC
    add r0, r9
    ldrh r0, [r0, #0x00]
    adds r1, r0, #0x0
    movs r2, #0x1F
    ands r1, r2
    lsrs r2, r0, #0x05
    movs r3, #0x1F
    ands r2, r3
    lsrs r3, r0, #0x0A
    movs r0, #0x1F
    ands r3, r0
    adds r0, r4, r1
    lsrs r5, r0, #0x01
    adds r0, r6, r2
    lsrs r0, r0, #0x01
    mov r8, r0
    adds r0, r7, r3
    lsrs r0, r0, #0x01
    mov r12, r0
    ldr r0, [sp, #0x010]
    cmp r0, #0x01
    bne _08037628
    subs r0, r1, r4
    mov r1, r10
    muls r1, r0
    adds r0, r1, #0x0
    asrs r0, r0, #0x0F
    adds r0, r4, r0
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    subs r0, r2, r6
    mov r2, r10
    muls r2, r0
    adds r0, r2, #0x0
    asrs r0, r0, #0x0F
    adds r0, r6, r0
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    subs r0, r3, r7
    mov r3, r10
    muls r3, r0
    adds r0, r3, #0x0
    asrs r0, r0, #0x0F
    adds r0, r7, r0
    b _08037658
_08037618: .4byte 0x080E645C
_0803761C: .4byte 0x000003FF
_08037620: .4byte 0x080713BC
_08037624: .4byte 0x080713FC
_08037628:
    subs r0, r5, r1
    mov r4, r10
    muls r4, r0
    adds r0, r4, #0x0
    asrs r0, r0, #0x0F
    adds r0, r1, r0
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    mov r7, r8
    subs r0, r7, r2
    mov r1, r10
    muls r1, r0
    adds r0, r1, #0x0
    asrs r0, r0, #0x0F
    adds r0, r2, r0
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    mov r2, r12
    subs r0, r2, r3
    mov r4, r10
    muls r4, r0
    adds r0, r4, #0x0
    asrs r0, r0, #0x0F
    adds r0, r3, r0
_08037658:
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    movs r0, #0x00
    bl pltt_getBuffer
    add r0, r9
    adds r0, #0xE0
    movs r7, #0x1F
    ands r5, r7
    ands r6, r7
    lsls r1, r6, #0x05
    orrs r5, r1
    ands r4, r7
    lsls r1, r4, #0x0A
    orrs r5, r1
    strh r5, [r0, #0x00]
    movs r0, #0x02
    add r9, r0
    ldr r1, [sp, #0x018]
    subs r1, #0x01
    str r1, [sp, #0x018]
    cmp r1, #0x00
    bge _080375A6
    ldr r0, [sp, #0x01C]
    cmp r0, #0x01
    ble _0803759A
    movs r0, #0x01
    bl pltt_setDirtyFlag
_08037692:
    ldr r2, [sp, #0x00C]
    movs r3, #0xA4
    lsls r3, r3, #0x03
    adds r0, r2, r3
    ldr r4, [sp, #0x010]
    str r4, [r0, #0x00]
    ldr r7, _080376B8 @ =0x00000524
    adds r0, r2, r7
    ldr r1, [sp, #0x014]
    str r1, [r0, #0x00]
    add sp, #0x020
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_080376B8: .4byte 0x00000524
    thumb_func_start sub_80376BC
sub_80376BC:
    push {r4, lr}
    ldr r4, _08037700 @ =0x03002E20
    movs r1, #0xE8
    lsls r1, r1, #0x03
    adds r0, r4, r1
    bl sub_804F7AC
    adds r2, r0, #0x0
    cmp r2, #0x00
    beq _080376F8
    adds r0, #0x4C
    movs r1, #0x00
    strh r1, [r0, #0x00]
    ldr r3, _08037704 @ =0x0000053C
    adds r0, r4, r3
    str r1, [r0, #0x00]
    adds r3, #0x04
    adds r0, r4, r3
    str r1, [r0, #0x00]
    adds r3, #0x04
    adds r0, r4, r3
    str r1, [r0, #0x00]
    adds r3, #0x04
    adds r0, r4, r3
    str r1, [r0, #0x00]
    adds r3, #0x04
    adds r0, r4, r3
    str r1, [r0, #0x00]
    ldr r0, _08037708 @ =0x08037351
    str r0, [r2, #0x14]
_080376F8:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08037700: .4byte 0x03002E20
_08037704: .4byte 0x0000053C
_08037708: .4byte sub_8037350
    thumb_func_start sub_803770C
sub_803770C:
    push {r4, r5, r6, lr}
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    ldr r2, _08037774 @ =0x03002E20
    ldr r0, _08037778 @ =0x0000057C
    adds r4, r2, r0
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r1, [r0, #0x00]
    ldr r0, _0803777C @ =0x0000FFF8
    ands r0, r1
    ldrh r1, [r4, #0x00]
    movs r3, #0x00
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x01
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x02
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldrh r0, [r4, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x03
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    ldr r0, _08037780 @ =0x0000080D
    adds r2, r2, r0
    ldrb r0, [r2, #0x00]
    cmp r0, #0x02
    beq _08037784
    ldrh r0, [r4, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x04
    adds r1, r2, #0x0
    orrs r0, r1
    ldrh r1, [r4, #0x00]
    orrs r0, r3
    strh r0, [r4, #0x00]
    b _0803778E
_08037774: .4byte 0x03002E20
_08037778: .4byte 0x0000057C
_0803777C: .4byte 0x0000FFF8
_08037780: .4byte 0x0000080D
_08037784:
    ldrh r0, [r4, #0x00]
    ldr r1, _080377DC @ =0x0000F7FF
    ands r1, r0
    ldrh r0, [r4, #0x00]
    strh r1, [r4, #0x00]
_0803778E:
    movs r0, #0x00
    str r0, [r4, #0x04]
    bl track_loadSkySize
    lsls r0, r5, #0x10
    asrs r2, r0, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _080377A2
    adds r0, #0x3F
_080377A2:
    asrs r0, r0, #0x06
    subs r0, #0x28
    ldrh r1, [r4, #0x0E]
    strh r0, [r4, #0x0E]
    ldrh r0, [r4, #0x10]
    movs r3, #0x26
    strh r3, [r4, #0x10]
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _080377B8
    adds r0, #0x7F
_080377B8:
    asrs r0, r0, #0x07
    ldrh r1, [r4, #0x12]
    strh r0, [r4, #0x12]
    ldrh r0, [r4, #0x14]
    strh r3, [r4, #0x14]
    adds r0, r2, #0x0
    cmp r0, #0x00
    bge _080377CA
    adds r0, #0xFF
_080377CA:
    asrs r0, r0, #0x08
    ldrh r1, [r4, #0x16]
    strh r0, [r4, #0x16]
    ldrh r0, [r4, #0x18]
    movs r0, #0xB6
    strh r0, [r4, #0x18]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_080377DC: .4byte 0x0000F7FF
    thumb_func_start nullsub_8
nullsub_8: @ 080377E0
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_80377E4
sub_80377E4:
    push {r4, r5, r6, lr}
    add sp, #-0x00C
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    ldr r2, _08037850 @ =0x03002E20
    ldr r0, _08037854 @ =0x0000057C
    adds r3, r2, r0
    movs r0, #0x80
    lsls r0, r0, #0x13
    ldrh r1, [r0, #0x00]
    ldr r0, _08037858 @ =0x0000FFF8
    ands r0, r1
    ldrh r1, [r3, #0x00]
    movs r4, #0x00
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x01
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x03
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldrh r0, [r3, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x04
    adds r1, r6, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    ldr r0, _0803785C @ =0x0000080D
    adds r2, r2, r0
    ldrb r0, [r2, #0x00]
    cmp r0, #0x02
    beq _08037860
    ldrh r0, [r3, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x02
    adds r1, r2, #0x0
    orrs r0, r1
    ldrh r1, [r3, #0x00]
    orrs r0, r4
    strh r0, [r3, #0x00]
    b _0803786A
    .byte 0x00, 0x00
_08037850: .4byte 0x03002E20
_08037854: .4byte 0x0000057C
_08037858: .4byte 0x0000FFF8
_0803785C: .4byte 0x0000080D
_08037860:
    ldrh r0, [r3, #0x00]
    ldr r1, _080378DC @ =0x0000FDFF
    ands r1, r0
    ldrh r0, [r3, #0x00]
    strh r1, [r3, #0x00]
_0803786A:
    movs r0, #0x00
    str r0, [r3, #0x04]
    ldr r0, _080378E0 @ =0x00008C07
    str r0, [sp, #0x000]
    ldr r0, _080378E4 @ =0x00000E06
    str r0, [sp, #0x004]
    adds r0, #0xFF
    str r0, [sp, #0x008]
    mov r0, sp
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x08]
    strh r0, [r3, #0x08]
    add r0, sp, #0x004
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x0A]
    strh r0, [r3, #0x0A]
    add r0, sp, #0x008
    ldrh r0, [r0, #0x00]
    ldrh r1, [r3, #0x0C]
    strh r0, [r3, #0x0C]
    lsls r0, r5, #0x10
    asrs r2, r0, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _0803789E
    adds r0, #0xFF
_0803789E:
    asrs r0, r0, #0x08
    ldrh r1, [r3, #0x0E]
    strh r0, [r3, #0x0E]
    ldrh r0, [r3, #0x10]
    movs r0, #0x20
    strh r0, [r3, #0x10]
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _080378B2
    adds r0, #0x7F
_080378B2:
    asrs r0, r0, #0x07
    ldrh r1, [r3, #0x12]
    strh r0, [r3, #0x12]
    ldrh r0, [r3, #0x14]
    ldr r0, _080378E8 @ =0x0000FFA8
    strh r0, [r3, #0x14]
    adds r0, r2, #0x0
    cmp r0, #0x00
    bge _080378C6
    adds r0, #0x3F
_080378C6:
    asrs r0, r0, #0x06
    ldrh r1, [r3, #0x16]
    strh r0, [r3, #0x16]
    ldrh r0, [r3, #0x18]
    movs r0, #0x06
    strh r0, [r3, #0x18]
    add sp, #0x00C
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_080378DC: .4byte 0x0000FDFF
_080378E0: .4byte 0x00008C07
_080378E4: .4byte 0x00000E06
_080378E8: .4byte 0x0000FFA8
    thumb_func_start sub_80378EC
sub_80378EC:
    ldr r0, _080378F8 @ =0x03002E20
    ldr r1, [r0, #0x24]
    movs r2, #0x01
    orrs r1, r2
    str r1, [r0, #0x24]
    bx lr
_080378F8: .4byte 0x03002E20
    thumb_func_start sub_80378FC
sub_80378FC:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    adds r4, r0, #0x0
    ldr r0, _0803795C @ =0x03002E20
    movs r1, #0x24
    adds r1, r1, r0
    mov r9, r1
    ldr r2, _08037960 @ =0x00000838
    adds r0, r0, r2
    ldr r0, [r0, #0x00]
    ldrh r5, [r0, #0x20]
    ldrh r6, [r0, #0x22]
    movs r2, #0x00
    ldrh r7, [r0, #0x24]
    cmp r4, r0
    bne _08037A1A
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08037A1A
    adds r1, r4, #0x0
    adds r1, #0x5A
    ldrh r3, [r1, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r3
    mov r8, r1
    cmp r0, #0x00
    beq _08037A1A
    movs r0, #0x80
    lsls r0, r0, #0x07
    ands r0, r3
    cmp r0, #0x00
    beq _080379E2
    adds r0, r4, #0x0
    adds r0, #0x5C
    ldrh r0, [r0, #0x00]
    cmp r0, #0x01
    beq _08037974
    cmp r0, #0x01
    bgt _08037964
    cmp r0, #0x00
    beq _0803796E
    b _08037994
    .byte 0x00, 0x00
_0803795C: .4byte 0x03002E20
_08037960: .4byte 0x00000838
_08037964:
    cmp r0, #0x02
    beq _0803797E
    cmp r0, #0x03
    beq _08037988
    b _08037994
_0803796E:
    adds r0, r4, #0x0
    adds r0, #0x50
    b _0803798C
_08037974:
    adds r0, r4, #0x0
    adds r0, #0x50
    movs r1, #0x00
    ldsh r0, [r0, r1]
    b _08037992
_0803797E:
    adds r0, r4, #0x0
    adds r0, #0x4E
    movs r2, #0x00
    ldsh r0, [r0, r2]
    b _08037992
_08037988:
    adds r0, r4, #0x0
    adds r0, #0x4E
_0803798C:
    movs r3, #0x00
    ldsh r0, [r0, r3]
    mvns r0, r0
_08037992:
    lsrs r2, r0, #0x1F
_08037994:
    adds r0, r4, #0x0
    adds r0, #0xBC
    ldr r3, [r0, #0x00]
    cmp r3, #0x00
    bge _080379A2
    movs r0, #0x01
    eors r2, r0
_080379A2:
    cmp r2, #0x00
    beq _080379C0
    lsls r0, r5, #0x10
    asrs r0, r0, #0x10
    lsls r1, r6, #0x10
    asrs r1, r1, #0x10
    lsls r2, r7, #0x10
    movs r5, #0x80
    lsls r5, r5, #0x09
    adds r2, r2, r5
    asrs r2, r2, #0x10
    lsrs r3, r3, #0x1F
    bl sub_805B5B8
    b _080379D8
_080379C0:
    lsls r0, r5, #0x10
    asrs r0, r0, #0x10
    lsls r1, r6, #0x10
    asrs r1, r1, #0x10
    lsls r2, r7, #0x10
    movs r5, #0x80
    lsls r5, r5, #0x09
    adds r2, r2, r5
    asrs r2, r2, #0x10
    lsrs r3, r3, #0x1F
    bl sub_805B61C
_080379D8:
    adds r0, r4, #0x0
    mov r1, r9
    bl sub_8043424
    b _08037A14
_080379E2:
    subs r0, r3, #0x4
    ldr r2, _08037A28 @ =0x00003FFF
    adds r1, r2, #0x0
    ands r0, r1
    mov r3, r8
    strh r0, [r3, #0x00]
    lsls r0, r5, #0x10
    asrs r0, r0, #0x10
    lsls r1, r6, #0x10
    asrs r1, r1, #0x10
    lsls r2, r7, #0x10
    movs r5, #0x80
    lsls r5, r5, #0x09
    adds r2, r2, r5
    asrs r2, r2, #0x10
    adds r3, r4, #0x0
    adds r3, #0xBC
    ldr r3, [r3, #0x00]
    lsrs r3, r3, #0x1F
    bl sub_805B554
    adds r0, r4, #0x0
    mov r1, r9
    bl sub_80433E8
_08037A14:
    movs r0, #0x00
    mov r1, r8
    strh r0, [r1, #0x00]
_08037A1A:
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08037A28: .4byte 0x00003FFF
    thumb_func_start sub_8037A2C
sub_8037A2C:
    adds r3, r0, #0x0
    adds r0, #0x78
    ldrb r0, [r0, #0x00]
    cmp r0, #0x07
    bhi _08037AAA
    lsls r0, r0, #0x02
    ldr r1, _08037A40 @ =0x08037A44
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08037A40: .4byte 0x08037A44
    .byte 0xAA, 0x7A, 0x03, 0x08, 0x64, 0x7A, 0x03, 0x08, 0x7C, 0x7A, 0x03, 0x08, 0x7C, 0x7A, 0x03, 0x08
    .byte 0x7C, 0x7A, 0x03, 0x08, 0x7C, 0x7A, 0x03, 0x08, 0xAA, 0x7A, 0x03, 0x08, 0x64, 0x7A, 0x03, 0x08
    .byte 0x1A, 0x1C, 0xB4, 0x32, 0x11, 0x88, 0x03, 0x48, 0x08, 0x40, 0x10, 0x80, 0x02, 0x3A, 0x11, 0x88
    .byte 0x03, 0x20, 0x16, 0xE0, 0xD7, 0xFB, 0x00, 0x00, 0x1A, 0x1C, 0xB4, 0x32, 0x11, 0x88, 0x0A, 0x48
    .byte 0x08, 0x40, 0x00, 0x21, 0x10, 0x80, 0x18, 0x1C, 0xB6, 0x30, 0x01, 0x80, 0x19, 0x1C, 0x6A, 0x31
    .byte 0x00, 0x23, 0xC8, 0x5E, 0x04, 0x28, 0x06, 0xDD, 0x04, 0x20, 0x08, 0x80, 0x11, 0x88, 0x80, 0x20
    .byte 0xC0, 0x01, 0x08, 0x40, 0x10, 0x80
_08037AAA:
    bx lr
    .byte 0xD7, 0xFB, 0x00, 0x00
    thumb_func_start sub_8037AB0
sub_8037AB0:
    adds r2, r0, #0x0
    movs r1, #0xCE
    lsls r1, r1, #0x01
    adds r0, r2, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    bne _08037AD4
    ldr r1, _08037AD0 @ =0x080EC6FC
    adds r0, r2, #0x0
    adds r0, #0x76
    ldrh r0, [r0, #0x00]
    lsls r0, r0, #0x01
    adds r0, r0, r1
    ldrh r1, [r0, #0x00]
    b _08037B06
    .byte 0x00, 0x00
_08037AD0: .4byte 0x080EC6FC
_08037AD4:
    cmp r0, #0x01
    bne _08037AF0
    ldr r1, _08037AEC @ =0x080EC6FC
    adds r0, r2, #0x0
    adds r0, #0x76
    ldrh r0, [r0, #0x00]
    lsls r0, r0, #0x01
    adds r0, r0, r1
    ldrh r0, [r0, #0x00]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x11
    b _08037B02
_08037AEC: .4byte 0x080EC6FC
_08037AF0:
    ldr r1, _08037B18 @ =0x080EC6FC
    adds r0, r2, #0x0
    adds r0, #0x76
    ldrh r0, [r0, #0x00]
    lsls r0, r0, #0x01
    adds r0, r0, r1
    ldrh r0, [r0, #0x00]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x12
_08037B02:
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
_08037B06:
    adds r0, r2, #0x0
    adds r0, #0x68
    movs r2, #0x00
    ldsh r0, [r0, r2]
    cmp r0, #0x00
    bne _08037B1C
    lsls r0, r1, #0x10
    asrs r0, r0, #0x10
    b _08037B2E
_08037B18: .4byte 0x080EC6FC
_08037B1C:
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    cmp r0, #0x00
    bge _08037B2C
    adds r0, #0xFF
_08037B2C:
    asrs r0, r0, #0x08
_08037B2E:
    bx lr
    thumb_func_start sub_8037B30
sub_8037B30:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    adds r1, r4, #0x0
    adds r1, #0x6A
    ldrh r2, [r1, #0x00]
    movs r3, #0x00
    ldsh r0, [r1, r3]
    cmp r0, #0x00
    beq _08037B9C
    subs r0, r2, #0x1
    strh r0, [r1, #0x00]
    lsls r0, r0, #0x10
    cmp r0, #0x00
    beq _08037B5E
    adds r0, r4, #0x0
    adds r0, #0x58
    ldrh r1, [r0, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x08
    adds r2, r3, #0x0
    orrs r1, r2
    strh r1, [r0, #0x00]
    b _08037B9C
_08037B5E:
    adds r5, r4, #0x0
    adds r5, #0xB4
    ldrh r1, [r5, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x07
    ands r0, r1
    strh r0, [r5, #0x00]
    adds r2, r4, #0x0
    adds r2, #0x58
    ldrh r1, [r2, #0x00]
    ldr r0, _08037C50 @ =0x00007FFF
    ands r0, r1
    strh r0, [r2, #0x00]
    adds r0, r4, #0x0
    adds r0, #0x78
    ldrb r1, [r0, #0x00]
    adds r0, #0x0C
    strb r1, [r0, #0x00]
    ldr r0, _08037C54 @ =0x03002E20
    ldr r1, _08037C58 @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _08037B94
    movs r0, #0x10
    bl sub_80523DC
_08037B94:
    ldrh r1, [r5, #0x00]
    ldr r0, _08037C5C @ =0x0000FFFC
    ands r0, r1
    strh r0, [r5, #0x00]
_08037B9C:
    adds r0, r4, #0x0
    adds r0, #0xAC
    movs r2, #0x00
    ldsh r1, [r0, r2]
    adds r6, r0, #0x0
    cmp r1, #0x00
    beq _08037BC4
    adds r0, #0x0A
    movs r3, #0x00
    ldsh r0, [r0, r3]
    cmp r0, #0xFF
    bgt _08037BC0
    adds r0, r4, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _08037BC4
_08037BC0:
    movs r0, #0x00
    strh r0, [r6, #0x00]
_08037BC4:
    adds r1, r4, #0x0
    adds r1, #0x66
    ldrh r2, [r1, #0x00]
    movs r3, #0x00
    ldsh r0, [r1, r3]
    cmp r0, #0x00
    beq _08037BEE
    subs r0, r2, #0x1
    strh r0, [r1, #0x00]
    lsls r0, r0, #0x10
    cmp r0, #0x00
    bne _08037BEE
    ldr r0, _08037C54 @ =0x03002E20
    ldr r1, _08037C58 @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _08037BEE
    movs r0, #0x08
    bl sub_80523DC
_08037BEE:
    adds r0, r4, #0x0
    adds r0, #0x68
    ldrh r2, [r0, #0x00]
    movs r3, #0x00
    ldsh r1, [r0, r3]
    adds r5, r0, #0x0
    cmp r1, #0x00
    ble _08037C2C
    subs r0, r2, #0x1
    strh r0, [r5, #0x00]
    lsls r0, r0, #0x10
    cmp r0, #0x00
    bne _08037C2C
    adds r0, r4, #0x0
    movs r1, #0x04
    bl sub_803D214
    ldr r0, _08037C54 @ =0x03002E20
    ldr r1, _08037C58 @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _08037C2C
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08037C2C
    movs r0, #0x85
    bl m4aSongNumStart
_08037C2C:
    adds r1, r5, #0x0
    movs r2, #0x00
    ldsh r0, [r1, r2]
    cmp r0, #0x00
    bge _08037C3A
    movs r0, #0x00
    strh r0, [r1, #0x00]
_08037C3A:
    movs r3, #0x00
    ldsh r0, [r5, r3]
    cmp r0, #0x00
    beq _08037C64
    adds r2, r4, #0x0
    adds r2, #0x58
    ldrh r1, [r2, #0x00]
    ldr r0, _08037C60 @ =0x0000FFEF
    adds r3, r1, #0x0
    ands r3, r0
    b _08037C70
_08037C50: .4byte 0x00007FFF
_08037C54: .4byte 0x03002E20
_08037C58: .4byte 0x00000838
_08037C5C: .4byte 0x0000FFFC
_08037C60: .4byte 0x0000FFEF
_08037C64:
    adds r2, r4, #0x0
    adds r2, #0x58
    ldrh r1, [r2, #0x00]
    movs r0, #0x10
    adds r3, r1, #0x0
    orrs r3, r0
_08037C70:
    strh r3, [r2, #0x00]
    adds r0, r4, #0x0
    adds r0, #0x84
    ldrb r1, [r0, #0x00]
    adds r5, r0, #0x0
    cmp r1, #0x08
    bne _08037C86
    movs r0, #0x20
    adds r1, r3, #0x0
    orrs r1, r0
    b _08037C8C
_08037C86:
    ldr r0, _08037C9C @ =0x0000FFDF
    adds r1, r3, #0x0
    ands r1, r0
_08037C8C:
    strh r1, [r2, #0x00]
    ldrb r0, [r5, #0x00]
    cmp r0, #0x0A
    bne _08037CA4
    ldr r0, _08037CA0 @ =0x0000FFBF
    ands r0, r1
    b _08037CA8
    .byte 0x00, 0x00
_08037C9C: .4byte 0x0000FFDF
_08037CA0: .4byte 0x0000FFBF
_08037CA4:
    movs r0, #0x40
    orrs r0, r1
_08037CA8:
    strh r0, [r2, #0x00]
    adds r2, r6, #0x0
    ldrh r5, [r2, #0x00]
    movs r0, #0x00
    ldsh r3, [r2, r0]
    cmp r3, #0x00
    beq _08037CD4
    adds r0, r4, #0x0
    adds r0, #0x96
    ldrh r1, [r0, #0x00]
    movs r0, #0x04
    ands r0, r1
    cmp r0, #0x00
    beq _08037CD4
    cmp r3, #0x09
    ble _08037CD0
    adds r0, r5, #0x0
    subs r0, #0x0A
    strh r0, [r2, #0x00]
    b _08037CD4
_08037CD0:
    movs r0, #0x00
    strh r0, [r6, #0x00]
_08037CD4:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_8037CDC
sub_8037CDC:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    ldr r1, _08037D18 @ =0x03002E20
    adds r1, #0x24
    bl sub_803BC84
    ldr r1, _08037D1C @ =0xFFFFFF00
    ands r1, r0
    adds r5, r4, #0x0
    adds r5, #0xCA
    strh r1, [r5, #0x00]
    adds r0, r4, #0x0
    bl sub_803BB48
    adds r1, r4, #0x0
    adds r1, #0x7C
    ldrh r0, [r5, #0x00]
    ldrh r1, [r1, #0x00]
    subs r0, r0, r1
    lsls r0, r0, #0x10
    asrs r1, r0, #0x10
    ldr r0, _08037D20 @ =0x000005FF
    cmp r1, r0
    ble _08037D24
    adds r1, r4, #0x0
    adds r1, #0x96
    movs r0, #0x80
    lsls r0, r0, #0x01
    b _08037D3E
    .byte 0x00, 0x00
_08037D18: .4byte 0x03002E20
_08037D1C: .4byte 0xFFFFFF00
_08037D20: .4byte 0x000005FF
_08037D24:
    ldr r0, _08037D34 @ =0xFFFFFA00
    cmp r1, r0
    bge _08037D38
    adds r1, r4, #0x0
    adds r1, #0x96
    movs r0, #0x80
    lsls r0, r0, #0x02
    b _08037D3E
_08037D34: .4byte 0xFFFFFA00
_08037D38:
    adds r1, r4, #0x0
    adds r1, #0x96
    movs r0, #0x00
_08037D3E:
    strh r0, [r1, #0x00]
    adds r2, r1, #0x0
    ldrh r3, [r2, #0x00]
    adds r0, r4, #0x0
    adds r0, #0xBC
    ldr r1, [r0, #0x00]
    ldr r0, _08037D58 @ =0x01FFFFFF
    cmp r1, r0
    bgt _08037D5C
    movs r0, #0x80
    lsls r0, r0, #0x08
    b _08037D60
    .byte 0x00, 0x00
_08037D58: .4byte 0x01FFFFFF
_08037D5C:
    movs r0, #0x80
    lsls r0, r0, #0x07
_08037D60:
    orrs r0, r3
    strh r0, [r2, #0x00]
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_8037D6C
sub_8037D6C:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    movs r0, #0xBD
    lsls r0, r0, #0x01
    adds r6, r4, r0
    ldrh r0, [r6, #0x00]
    cmp r0, #0x00
    bne _08037D7E
    b _08037FD2
_08037D7E:
    cmp r0, #0x01
    bne _08037D84
    b _08037FD2
_08037D84:
    adds r0, r4, #0x0
    adds r0, #0x96
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0x00
    bne _08037D94
    b _08037FD2
_08037D94:
    ldr r1, [r4, #0x48]
    movs r0, #0x80
    lsls r0, r0, #0x04
    ands r0, r1
    cmp r0, #0x00
    beq _08037DA2
    b _08037FD2
_08037DA2:
    movs r2, #0xBE
    lsls r2, r2, #0x01
    adds r0, r4, r2
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    beq _08037DB0
    b _08037FD2
_08037DB0:
    movs r0, #0x80
    lsls r0, r0, #0x09
    ands r1, r0
    cmp r1, #0x00
    beq _08037DBC
    b _08037FD2
_08037DBC:
    ldr r5, _08037E14 @ =0x03002E20
    ldr r1, _08037E18 @ =0x00000838
    adds r0, r5, r1
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _08037DCC
    bl sub_804D3E0
_08037DCC:
    movs r2, #0xE6
    lsls r2, r2, #0x03
    adds r0, r5, r2
    bl sub_804F7AC
    adds r2, r0, #0x0
    str r4, [r2, #0x54]
    ldrh r1, [r6, #0x00]
    ldr r0, _08037E1C @ =0x0000100C
    cmp r1, r0
    bne _08037DE4
    b _08037F7C
_08037DE4:
    cmp r1, r0
    bgt _08037E70
    subs r0, #0x07
    cmp r1, r0
    bne _08037DF0
    b _08037F30
_08037DF0:
    cmp r1, r0
    bgt _08037E34
    subs r0, #0x03
    cmp r1, r0
    bne _08037DFC
    b _08037EF8
_08037DFC:
    cmp r1, r0
    bgt _08037E20
    subs r0, #0x02
    cmp r1, r0
    bne _08037E08
    b _08037EF0
_08037E08:
    adds r0, #0x01
    cmp r1, r0
    bne _08037E10
    b _08037F00
_08037E10:
    b _08037FC4
    .byte 0x00, 0x00
_08037E14: .4byte 0x03002E20
_08037E18: .4byte 0x00000838
_08037E1C: .4byte 0x0000100C
_08037E20:
    ldr r0, _08037E30 @ =0x00001003
    cmp r1, r0
    beq _08037F08
    adds r0, #0x01
    cmp r1, r0
    bne _08037E2E
    b _08037F28
_08037E2E:
    b _08037FC4
_08037E30: .4byte 0x00001003
_08037E34:
    ldr r0, _08037E4C @ =0x00001008
    cmp r1, r0
    bne _08037E3C
    b _08037F68
_08037E3C:
    cmp r1, r0
    bgt _08037E50
    subs r0, #0x02
    cmp r1, r0
    bne _08037E48
    b _08037F38
_08037E48:
    adds r0, #0x01
    b _08037ED8
_08037E4C: .4byte 0x00001008
_08037E50:
    ldr r0, _08037E68 @ =0x0000100A
    cmp r1, r0
    bne _08037E58
    b _08037F9C
_08037E58:
    cmp r1, r0
    ble _08037E5E
    b _08037FBC
_08037E5E:
    adds r0, r2, #0x0
    bl sub_80482B8
    ldr r1, _08037E6C @ =0x0000100E
    b _08037F70
_08037E68: .4byte 0x0000100A
_08037E6C: .4byte 0x0000100E
_08037E70:
    ldr r0, _08037E94 @ =0x00002003
    cmp r1, r0
    beq _08037F08
    cmp r1, r0
    bgt _08037EB0
    subs r0, #0x03
    cmp r1, r0
    beq _08037EF0
    cmp r1, r0
    bgt _08037E9C
    ldr r0, _08037E98 @ =0x0000100E
    cmp r1, r0
    beq _08037F50
    adds r0, #0x01
    cmp r1, r0
    beq _08037F58
    b _08037FC4
    .byte 0x00, 0x00
_08037E94: .4byte 0x00002003
_08037E98: .4byte 0x0000100E
_08037E9C:
    ldr r0, _08037EAC @ =0x00002001
    cmp r1, r0
    beq _08037F00
    adds r0, #0x01
    cmp r1, r0
    beq _08037EF8
    b _08037FC4
    .byte 0x00, 0x00
_08037EAC: .4byte 0x00002001
_08037EB0:
    ldr r0, _08037EC8 @ =0x00002006
    cmp r1, r0
    beq _08037F38
    cmp r1, r0
    bgt _08037ECC
    subs r0, #0x02
    cmp r1, r0
    beq _08037F28
    adds r0, #0x01
    cmp r1, r0
    beq _08037F30
    b _08037FC4
_08037EC8: .4byte 0x00002006
_08037ECC:
    ldr r0, _08037EE0 @ =0x0000200A
    cmp r1, r0
    beq _08037F9C
    cmp r1, r0
    bgt _08037EE4
    subs r0, #0x03
_08037ED8:
    cmp r1, r0
    beq _08037F40
    b _08037FC4
    .byte 0x00, 0x00
_08037EE0: .4byte 0x0000200A
_08037EE4:
    ldr r0, _08037EEC @ =0x0000200C
    cmp r1, r0
    beq _08037F7C
    b _08037FC4
_08037EEC: .4byte 0x0000200C
_08037EF0:
    adds r0, r2, #0x0
    bl sub_8047368
    b _08037F46
_08037EF8:
    adds r0, r2, #0x0
    bl sub_80474CC
    b _08037F46
_08037F00:
    adds r0, r2, #0x0
    bl sub_80473FC
    b _08037F46
_08037F08:
    adds r0, r2, #0x0
    bl sub_8047560
    adds r0, r4, #0x0
    movs r1, #0x00
    bl sub_803D9D4
    ldr r1, _08037F24 @ =0x03002E20
    adds r1, #0x24
    adds r0, r4, #0x0
    bl sub_8043310
    b _08037FD2
    .byte 0x00, 0x00
_08037F24: .4byte 0x03002E20
_08037F28:
    adds r0, r2, #0x0
    bl sub_8047630
    b _08037F46
_08037F30:
    adds r0, r2, #0x0
    bl sub_8048090
    b _08037F46
_08037F38:
    adds r0, r2, #0x0
    bl nullsub_11
    b _08037F46
_08037F40:
    adds r0, r2, #0x0
    bl sub_8048294
_08037F46:
    adds r0, r4, #0x0
    movs r1, #0x00
    bl sub_803D9D4
    b _08037FD2
_08037F50:
    adds r0, r2, #0x0
    bl sub_80482E0
    b _08037FD2
_08037F58:
    adds r0, r2, #0x0
    bl sub_8048370
    ldr r1, _08037F64 @ =0x00001007
    b _08037F70
    .byte 0x00, 0x00
_08037F64: .4byte 0x00001007
_08037F68:
    adds r0, r2, #0x0
    bl sub_8048340
    ldr r1, _08037F78 @ =0x0000100F
_08037F70:
    adds r0, r4, #0x0
    bl sub_803D9D4
    b _08037FD2
_08037F78: .4byte 0x0000100F
_08037F7C:
    adds r0, r2, #0x0
    bl sub_80483A0
    adds r0, r4, #0x0
    movs r1, #0x00
    bl sub_803D9D4
    ldr r1, _08037F98 @ =0x03002E20
    adds r1, #0x24
    adds r0, r4, #0x0
    bl sub_8043378
    b _08037FD2
    .byte 0x00, 0x00
_08037F98: .4byte 0x03002E20
_08037F9C:
    adds r0, r2, #0x0
    bl sub_80485DC
    adds r0, r4, #0x0
    movs r1, #0x00
    bl sub_803D9D4
    ldr r1, _08037FB8 @ =0x03002E20
    adds r1, #0x24
    adds r0, r4, #0x0
    bl sub_8043344
    b _08037FD2
    .byte 0x00, 0x00
_08037FB8: .4byte 0x03002E20
_08037FBC:
    adds r0, r2, #0x0
    bl sub_8048694
    b _08037FD2
_08037FC4:
    adds r0, r2, #0x0
    bl sub_8048090
    adds r0, r4, #0x0
    movs r1, #0x00
    bl sub_803D9D4
_08037FD2:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    thumb_func_start sub_8037FD8
sub_8037FD8:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    adds r7, r0, #0x0
    lsls r1, r1, #0x10
    lsrs r4, r1, #0x10
    movs r0, #0xBC
    lsls r0, r0, #0x01
    adds r1, r7, r0
    ldrh r0, [r1, #0x00]
    cmp r0, #0x40
    ble _08037FF4
    movs r0, #0x40
_08037FF4:
    ldrh r1, [r1, #0x00]
    cmp r1, #0x04
    bhi _08037FFE
    lsls r2, r0, #0x0F
    b _0803802E
_08037FFE:
    cmp r1, #0x14
    bhi _08038010
    lsls r0, r0, #0x11
    ldr r1, _0803800C @ =0xFFF60000
    adds r2, r0, r1
    b _0803802E
    .byte 0x00, 0x00
_0803800C: .4byte 0xFFF60000
_08038010:
    cmp r1, #0x24
    bhi _0803801E
    lsls r0, r0, #0x10
    movs r1, #0x90
    lsls r1, r1, #0x0D
    adds r2, r0, r1
    b _0803802E
_0803801E:
    cmp r1, #0x40
    bhi _0803802C
    lsls r0, r0, #0x0F
    movs r1, #0x88
    lsls r1, r1, #0x0E
    adds r2, r0, r1
    b _0803802E
_0803802C:
    movs r2, #0x00
_0803802E:
    adds r1, r7, #0x0
    adds r1, #0xA8
    adds r0, r7, #0x0
    adds r0, #0x8C
    ldr r0, [r0, #0x00]
    adds r0, r0, r2
    str r0, [r1, #0x00]
    ldr r1, [r7, #0x48]
    cmp r1, #0x00
    bne _08038044
    b _080381F2
_08038044:
    movs r0, #0x80
    lsls r0, r0, #0x07
    ands r0, r1
    cmp r0, #0x00
    beq _08038050
    b _080381F2
_08038050:
    movs r2, #0x20
    ands r1, r2
    cmp r1, #0x00
    beq _0803805A
    b _080381BC
_0803805A:
    adds r1, r7, #0x0
    adds r1, #0x96
    strh r4, [r1, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x06
    ands r0, r4
    mov r9, r1
    cmp r0, #0x00
    beq _08038122
    ldr r0, _0803809C @ =0x03002E20
    adds r4, r0, #0x0
    adds r4, #0x24
    ldr r1, _080380A0 @ =0x00000838
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    ldr r0, [r1, #0x48]
    ands r0, r2
    cmp r0, #0x00
    bne _08038122
    cmp r7, r1
    bne _080380A8
    ldr r2, _080380A4 @ =0x080ECB78
    adds r0, r7, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    lsls r0, r0, #0x01
    adds r0, r0, r2
    ldrh r0, [r0, #0x00]
    bl m4aSongNumStart
    b _08038122
_0803809C: .4byte 0x03002E20
_080380A0: .4byte 0x00000838
_080380A4: .4byte 0x080ECB78
_080380A8:
    adds r0, r4, #0x0
    adds r1, r7, #0x0
    bl sub_804C234
    adds r5, r0, #0x0
    lsls r5, r5, #0x10
    lsrs r5, r5, #0x10
    adds r0, r4, #0x0
    adds r1, r7, #0x0
    bl sub_804CD28
    adds r6, r0, #0x0
    lsls r6, r6, #0x10
    lsrs r6, r6, #0x10
    ldr r2, _08038148 @ =0x080ECB78
    adds r0, r7, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    lsls r0, r0, #0x01
    adds r0, r0, r2
    ldrh r4, [r0, #0x00]
    lsls r5, r5, #0x10
    asrs r5, r5, #0x10
    adds r0, r4, #0x0
    bl m4aSongNumStart
    ldr r0, _0803814C @ =0x08102414
    mov r8, r0
    ldr r0, _08038150 @ =0x08102498
    lsls r4, r4, #0x03
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayVolumeControl
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r5, #0x0
    bl m4aMPlayPitchControl
_08038122:
    mov r0, r9
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x07
    ands r0, r1
    cmp r0, #0x00
    bne _08038138
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    beq _08038154
_08038138:
    adds r1, r7, #0x0
    adds r1, #0xB0
    movs r0, #0x02
    strb r0, [r1, #0x00]
    subs r1, #0x5C
    movs r0, #0x07
    strb r0, [r1, #0x00]
    b _080381AA
_08038148: .4byte 0x080ECB78
_0803814C: .4byte 0x08102414
_08038150: .4byte 0x08102498
_08038154:
    adds r0, r7, #0x0
    adds r0, #0xB4
    ldrh r1, [r0, #0x00]
    movs r0, #0x02
    ands r0, r1
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    cmp r3, #0x00
    beq _08038174
    adds r0, r7, #0x0
    adds r0, #0xB0
    movs r1, #0x01
    strb r1, [r0, #0x00]
    subs r0, #0x5C
    strb r1, [r0, #0x00]
    b _080381AA
_08038174:
    adds r0, r7, #0x0
    adds r0, #0xB0
    strb r3, [r0, #0x00]
    subs r0, #0x64
    ldrb r0, [r0, #0x00]
    movs r1, #0x07
    ands r1, r0
    ldr r2, _080381B4 @ =0x080EC1E8
    adds r0, r7, #0x0
    adds r0, #0x86
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r2, [r0, #0x00]
    ldr r0, _080381B8 @ =0x080EC228
    lsls r1, r1, #0x02
    adds r1, r1, r0
    ldr r0, [r1, #0x00]
    adds r2, r2, r0
    adds r1, r7, #0x0
    adds r1, #0x54
    strb r2, [r1, #0x00]
    movs r0, #0x80
    ands r2, r0
    cmp r2, #0x00
    beq _080381AA
    strb r3, [r1, #0x00]
_080381AA:
    adds r0, r7, #0x0
    bl sub_8037D6C
    b _080381E0
    .byte 0x00, 0x00
_080381B4: .4byte 0x080EC1E8
_080381B8: .4byte 0x080EC228
_080381BC:
    adds r0, r7, #0x0
    bl sub_8037CDC
    adds r3, r7, #0x0
    adds r3, #0x96
    movs r0, #0x40
    ands r0, r4
    ldrh r1, [r3, #0x00]
    orrs r0, r1
    movs r2, #0x00
    strh r0, [r3, #0x00]
    adds r1, r7, #0x0
    adds r1, #0xB0
    movs r0, #0x02
    strb r0, [r1, #0x00]
    adds r0, r7, #0x0
    adds r0, #0x54
    strb r2, [r0, #0x00]
_080381E0:
    adds r0, r7, #0x0
    bl sub_8038E34
    adds r0, r7, #0x0
    bl sub_8038AFC
    adds r0, r7, #0x0
    bl sub_8038298
_080381F2:
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_8038200
sub_8038200:
    push {r4, r5, lr}
    adds r3, r0, #0x0
    adds r2, r3, #0x0
    adds r2, #0xBC
    adds r0, #0xC0
    ldr r1, [r2, #0x00]
    ldr r0, [r0, #0x00]
    adds r1, r1, r0
    str r1, [r2, #0x00]
    movs r0, #0xFC
    lsls r0, r0, #0x13
    cmp r1, r0
    ble _0803821C
    str r0, [r2, #0x00]
_0803821C:
    movs r0, #0x7A
    adds r0, r0, r3
    mov r12, r0
    ldr r4, _0803828C @ =0x080E645C
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bge _0803822E
    adds r0, #0x3F
_0803822E:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r4
    ldr r1, [r0, #0x00]
    movs r5, #0x02
    ldsh r0, [r2, r5]
    muls r0, r1
    cmp r0, #0x00
    bge _08038246
    ldr r1, _08038290 @ =0x00007FFF
    adds r0, r0, r1
_08038246:
    asrs r0, r0, #0x0F
    adds r1, r3, #0x0
    adds r1, #0x4E
    strh r0, [r1, #0x00]
    mov r5, r12
    movs r0, #0x00
    ldsh r1, [r5, r0]
    cmp r1, #0x00
    bge _0803825A
    adds r1, #0x3F
_0803825A:
    asrs r1, r1, #0x06
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r1
    ldr r1, _08038294 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r4
    ldr r0, [r0, #0x00]
    movs r4, #0x02
    ldsh r1, [r2, r4]
    negs r0, r0
    muls r1, r0
    cmp r1, #0x00
    bge _0803827C
    ldr r5, _08038290 @ =0x00007FFF
    adds r1, r1, r5
_0803827C:
    asrs r1, r1, #0x0F
    adds r0, r3, #0x0
    adds r0, #0x50
    strh r1, [r0, #0x00]
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0803828C: .4byte 0x080E645C
_08038290: .4byte 0x00007FFF
_08038294: .4byte 0x000003FF
    thumb_func_start sub_8038298
sub_8038298:
    push {r4, r5, r6, r7, lr}
    adds r3, r0, #0x0
    ldr r0, [r3, #0x48]
    movs r1, #0x80
    ands r0, r1
    cmp r0, #0x00
    beq _080382EC
    adds r2, r3, #0x0
    adds r2, #0xBC
    ldr r1, [r2, #0x00]
    ldr r0, _080382BC @ =0x001FFFFF
    cmp r1, r0
    ble _080382C4
    adds r0, r3, #0x0
    adds r0, #0xC0
    ldrh r1, [r0, #0x00]
    ldr r2, _080382C0 @ =0xFFF00000
    b _080382D4
_080382BC: .4byte 0x001FFFFF
_080382C0: .4byte 0xFFF00000
_080382C4:
    ldr r0, _080382DC @ =0xFFE00000
    cmp r1, r0
    bgt _080382E0
    adds r0, r3, #0x0
    adds r0, #0xC0
    ldrh r1, [r0, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x0D
_080382D4:
    orrs r1, r2
    str r1, [r0, #0x00]
    b _08038638
    .byte 0x00, 0x00
_080382DC: .4byte 0xFFE00000
_080382E0:
    adds r1, r3, #0x0
    adds r1, #0xC0
    movs r0, #0x00
    str r0, [r1, #0x00]
    str r0, [r2, #0x00]
    b _08038638
_080382EC:
    adds r0, r3, #0x0
    adds r0, #0x84
    ldrb r1, [r0, #0x00]
    adds r7, r0, #0x0
    cmp r1, #0x0B
    bhi _080383C2
    lsls r0, r1, #0x02
    ldr r1, _08038304 @ =0x08038308
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_08038304: .4byte 0x08038308
    .byte 0x38, 0x83, 0x03, 0x08, 0xB8, 0x83, 0x03, 0x08, 0xC2, 0x83, 0x03, 0x08, 0xC2, 0x83, 0x03, 0x08
    .byte 0x38, 0x83, 0x03, 0x08, 0xC2, 0x83, 0x03, 0x08, 0xC2, 0x83, 0x03, 0x08, 0xC2, 0x83, 0x03, 0x08
    .byte 0xC2, 0x83, 0x03, 0x08, 0x38, 0x83, 0x03, 0x08, 0xC2, 0x83, 0x03, 0x08, 0x38, 0x83, 0x03, 0x08
    .byte 0x18, 0x1C, 0xBC, 0x30, 0x05, 0x68, 0x06, 0x1C, 0x00, 0x2D, 0x1D, 0xDA, 0x26, 0x38, 0x02, 0x88
    .byte 0x88, 0x21, 0xC9, 0x01, 0x08, 0x1C, 0x10, 0x40, 0x88, 0x42, 0x0F, 0xD1, 0x38, 0x78, 0x04, 0x28
    .byte 0x0C, 0xD0, 0x19, 0x1C, 0xC0, 0x31, 0xFF, 0x20, 0x00, 0x06, 0x03, 0x4C, 0x85, 0x42, 0x01, 0xDC
    .byte 0x80, 0x24, 0x64, 0x03, 0x0C, 0x60, 0x63, 0xE1, 0x00, 0x00, 0xF0, 0xFF, 0x19, 0x1C, 0xC0, 0x31
    .byte 0x80, 0x20, 0x40, 0x03, 0x08, 0x60, 0x5B, 0xE1, 0x1C, 0x1C, 0xC0, 0x34, 0x00, 0x2D, 0x28, 0xD1
    .byte 0x18, 0x1C, 0xB4, 0x30, 0x01, 0x88, 0x01, 0x20, 0x08, 0x40, 0x00, 0x28, 0x21, 0xD1, 0x18, 0x1C
    .byte 0x96, 0x30, 0x02, 0x88, 0x88, 0x21, 0xC9, 0x01, 0x08, 0x1C, 0x10, 0x40, 0x88, 0x42, 0x18, 0xD1
    .byte 0x38, 0x78, 0x04, 0x28, 0x15, 0xD0, 0x01, 0x48, 0x41, 0xE1, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF
    .byte 0x19, 0x1C, 0xC0, 0x31, 0x08, 0x88, 0x08, 0x60, 0x3A, 0xE1
_080383C2:
    adds r0, r3, #0x0
    adds r0, #0xBC
    ldr r1, [r0, #0x00]
    adds r6, r0, #0x0
    adds r4, r3, #0x0
    adds r4, #0xC0
    cmp r1, #0x00
    bgt _080383DA
    ldr r0, [r4, #0x00]
    cmp r0, #0x00
    bge _080383DA
    b _08038632
_080383DA:
    ldrb r0, [r7, #0x00]
    cmp r0, #0x0C
    bls _080383E2
    b _08038628
_080383E2:
    lsls r0, r0, #0x02
    ldr r1, _080383EC @ =0x080383F0
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_080383EC: .4byte 0x080383F0
    .byte 0x24, 0x84, 0x03, 0x08, 0x24, 0x86, 0x03, 0x08, 0xD8, 0x84, 0x03, 0x08, 0xD8, 0x84, 0x03, 0x08
    .byte 0xA4, 0x84, 0x03, 0x08, 0xD8, 0x84, 0x03, 0x08, 0xD8, 0x84, 0x03, 0x08, 0xD8, 0x84, 0x03, 0x08
    .byte 0xF4, 0x84, 0x03, 0x08, 0x28, 0x85, 0x03, 0x08, 0xC4, 0x85, 0x03, 0x08, 0xD0, 0x85, 0x03, 0x08
    .byte 0xD8, 0x85, 0x03, 0x08, 0x1A, 0x1C, 0xB4, 0x32, 0x11, 0x88, 0x02, 0x20, 0x08, 0x40, 0x00, 0x28
    .byte 0x05, 0xD0, 0x09, 0x20, 0x38, 0x70, 0x18, 0x1C, 0xFF, 0xF7, 0x2E, 0xFF, 0xF4, 0xE0, 0x98, 0x6C
    .byte 0x80, 0x21, 0x09, 0x02, 0x08, 0x40, 0x00, 0x28, 0x28, 0xD0, 0x18, 0x1C, 0x96, 0x30, 0x01, 0x88
    .byte 0x10, 0x20, 0x08, 0x40, 0x00, 0x28, 0x1D, 0xD0, 0xC0, 0x20, 0x80, 0x00, 0x08, 0x40, 0x00, 0x28
    .byte 0x18, 0xD0, 0x19, 0x1C, 0x9C, 0x31, 0x08, 0x88, 0x01, 0x30, 0x08, 0x80, 0x00, 0x04, 0x00, 0x0C
    .byte 0x77, 0x28, 0x13, 0xD9, 0x18, 0x1C, 0xA8, 0x30, 0x00, 0x68, 0x05, 0x49, 0x40, 0x18, 0x31, 0x68
    .byte 0x81, 0x42, 0x0B, 0xDB, 0x10, 0x88, 0x40, 0x21, 0x08, 0x43, 0x10, 0x80, 0x06, 0xE0, 0x00, 0x00
    .byte 0x00, 0x00, 0x80, 0xFF, 0x19, 0x1C, 0x9C, 0x31, 0x00, 0x20, 0x08, 0x80, 0x18, 0x1C, 0x00, 0xF0
    .byte 0x37, 0xF9, 0xC1, 0xE0, 0x22, 0x88, 0x22, 0x60, 0x18, 0x1C, 0x96, 0x30, 0x01, 0x88, 0x80, 0x20
    .byte 0x00, 0x02, 0x08, 0x40, 0x00, 0x28, 0x09, 0xD0, 0x31, 0x68, 0x03, 0x48, 0x81, 0x42, 0x05, 0xDC
    .byte 0x80, 0x20, 0x40, 0x02, 0x26, 0xE0, 0x00, 0x00, 0xFF, 0xFF, 0x7B, 0x00, 0x20, 0x68, 0x01, 0x49
    .byte 0x08, 0x43, 0xA8, 0xE0, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x21, 0x31, 0x60, 0x21, 0x60, 0x18, 0x1C
    .byte 0x88, 0x30, 0x00, 0x22, 0x01, 0x80, 0x0A, 0x38, 0x02, 0x70, 0x02, 0x30, 0x01, 0x80, 0x02, 0x30
    .byte 0x01, 0x80, 0x99, 0xE0, 0x19, 0x1C, 0xCC, 0x31, 0x08, 0x88, 0x01, 0x38, 0x08, 0x80, 0x00, 0x04
    .byte 0x00, 0x28, 0x71, 0xD0, 0x22, 0x88, 0x22, 0x60, 0x31, 0x68, 0x04, 0x48, 0x81, 0x42, 0x07, 0xDC
    .byte 0xC8, 0x20, 0x80, 0x03, 0x02, 0x43, 0x22, 0x60, 0x86, 0xE0, 0x00, 0x00, 0xFF, 0xFF, 0xDF, 0x07
    .byte 0xFC, 0x20, 0xC0, 0x04, 0x30, 0x60, 0x7F, 0xE0, 0x20, 0x88, 0x20, 0x60, 0x96, 0x33, 0x1A, 0x88
    .byte 0xC0, 0x21, 0x09, 0x02, 0x08, 0x1C, 0x10, 0x40, 0x88, 0x42, 0x0F, 0xD1, 0x31, 0x68, 0x80, 0x20
    .byte 0x40, 0x04, 0x81, 0x42, 0x0A, 0xDC, 0x80, 0x20, 0x00, 0x04, 0x81, 0x42, 0x02, 0xDC, 0x80, 0x20
    .byte 0x00, 0x03, 0x68, 0xE0, 0x00, 0x48, 0x66, 0xE0, 0x00, 0x00, 0xF8, 0xFF, 0x19, 0x88, 0x80, 0x20
    .byte 0xC0, 0x01, 0x08, 0x40, 0x00, 0x28, 0x05, 0xD0, 0x20, 0x68, 0x01, 0x49, 0x08, 0x43, 0x5A, 0xE0
    .byte 0x00, 0x00, 0xE0, 0xFF, 0x80, 0x20, 0x00, 0x02, 0x08, 0x40, 0x00, 0x28, 0x1C, 0xD0, 0x31, 0x68
    .byte 0x05, 0x48, 0x81, 0x42, 0x11, 0xDC, 0x05, 0x48, 0x81, 0x42, 0x09, 0xDC, 0x20, 0x68, 0x80, 0x21
    .byte 0xC9, 0x03, 0x08, 0x43, 0x47, 0xE0, 0x00, 0x00, 0xFF, 0xFF, 0x1F, 0x05, 0xFF, 0xFF, 0xFF, 0x02
    .byte 0x20, 0x68, 0x80, 0x21, 0x89, 0x02, 0x08, 0x43, 0x3D, 0xE0, 0x20, 0x68, 0x01, 0x49, 0x08, 0x43
    .byte 0x39, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0x20, 0x68, 0x01, 0x49, 0x08, 0x43, 0x32, 0xE0
    .byte 0x00, 0x00, 0xF8, 0xFF, 0x20, 0x88, 0x01, 0x49, 0x08, 0x43, 0x2C, 0xE0, 0x00, 0x00, 0xC8, 0xFF
    .byte 0x18, 0x1C, 0x05, 0xF0, 0x8B, 0xFA, 0x27, 0xE0, 0x19, 0x1C, 0xCC, 0x31, 0x08, 0x88, 0x01, 0x38
    .byte 0x08, 0x80, 0x00, 0x04, 0x00, 0x28, 0x0B, 0xD1, 0x1A, 0x1C, 0xB4, 0x32, 0x11, 0x88, 0x03, 0x48
    .byte 0x08, 0x40, 0x10, 0x80, 0x00, 0x20, 0x38, 0x70, 0x16, 0xE0, 0x00, 0x00, 0x3F, 0xFF, 0x00, 0x00
    .byte 0x18, 0x1C, 0xA8, 0x30, 0x02, 0x68, 0xE0, 0x20, 0x00, 0x04, 0x11, 0x18, 0x30, 0x68, 0x88, 0x42
    .byte 0x04, 0xDA, 0x20, 0x88, 0xC0, 0x21, 0x89, 0x02, 0x08, 0x43, 0x04, 0xE0, 0xC0, 0x21, 0x09, 0x04
    .byte 0x50, 0x18, 0x30, 0x60, 0x20, 0x88, 0x20, 0x60
_08038628:
    ldr r0, [r6, #0x00]
    ldr r1, [r4, #0x00]
    adds r0, r0, r1
    cmp r0, #0x00
    bgt _08038638
_08038632:
    movs r0, #0x00
    str r0, [r6, #0x00]
    str r0, [r4, #0x00]
_08038638:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_8038640
sub_8038640:
    push {r4, r5, lr}
    adds r3, r0, #0x0
    adds r0, #0xBC
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bge _08038650
    ldr r1, _0803866C @ =0x0000FFFF
    adds r0, r0, r1
_08038650:
    lsrs r4, r0, #0x10
    asrs r1, r0, #0x10
    ldr r0, _08038670 @ =0x000003FE
    cmp r1, r0
    bgt _0803867E
    ldr r2, _08038674 @ =0xFFFFFD00
    adds r0, r1, r2
    cmp r0, #0x00
    blt _08038678
    asrs r1, r0, #0x05
    movs r0, #0x07
    ands r1, r0
    b _0803867A
    .byte 0x00, 0x00
_0803866C: .4byte 0x0000FFFF
_08038670: .4byte 0x000003FE
_08038674: .4byte 0xFFFFFD00
_08038678:
    movs r1, #0x00
_0803867A:
    adds r0, r1, #0x0
    b _08038680
_0803867E:
    movs r0, #0x07
_08038680:
    adds r2, r3, #0x0
    adds r2, #0x88
    ldr r1, _080386C0 @ =0x080EC1D8
    lsls r0, r0, #0x01
    adds r0, r0, r1
    movs r5, #0x00
    ldsh r1, [r0, r5]
    movs r5, #0x00
    ldsh r0, [r2, r5]
    muls r0, r1
    cmp r0, #0x00
    bge _0803869C
    ldr r1, _080386C4 @ =0x0000FFFF
    adds r0, r0, r1
_0803869C:
    asrs r0, r0, #0x10
    ldrh r5, [r2, #0x00]
    adds r0, r0, r5
    strh r0, [r2, #0x00]
    adds r0, r3, #0x0
    adds r0, #0xB4
    ldrh r0, [r0, #0x00]
    movs r1, #0x01
    ands r1, r0
    cmp r1, #0x00
    beq _080386C8
    adds r1, r3, #0x0
    adds r1, #0xC0
    movs r0, #0xC0
    lsls r0, r0, #0x08
    str r0, [r1, #0x00]
    b _08038704
    .byte 0x00, 0x00
_080386C0: .4byte 0x080EC1D8
_080386C4: .4byte 0x0000FFFF
_080386C8:
    lsls r0, r4, #0x10
    asrs r2, r0, #0x10
    ldr r0, _080386DC @ =0x000007DF
    cmp r2, r0
    ble _080386E0
    adds r0, r3, #0x0
    adds r0, #0xC0
    str r1, [r0, #0x00]
    b _08038704
    .byte 0x00, 0x00
_080386DC: .4byte 0x000007DF
_080386E0:
    ldr r0, _0803870C @ =0x000003FF
    cmp r2, r0
    ble _080386E8
    adds r4, r0, #0x0
_080386E8:
    lsls r1, r4, #0x10
    asrs r1, r1, #0x16
    movs r0, #0x0F
    ands r1, r0
    adds r2, r3, #0x0
    adds r2, #0xC0
    lsls r1, r1, #0x01
    adds r0, r3, #0x0
    adds r0, #0xF4
    adds r0, r0, r1
    movs r1, #0x00
    ldsh r0, [r0, r1]
    lsls r0, r0, #0x08
    str r0, [r2, #0x00]
_08038704:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0803870C: .4byte 0x000003FF
    thumb_func_start sub_8038710
sub_8038710:
    push {r4, r5, lr}
    mov r12, r0
    adds r0, #0x7E
    ldrb r0, [r0, #0x00]
    cmp r0, #0x0F
    bls _0803871E
    b _080389FE
_0803871E:
    lsls r0, r0, #0x02
    ldr r1, _08038728 @ =0x0803872C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08038728: .4byte 0x0803872C
    .byte 0x6C, 0x87, 0x03, 0x08, 0x6C, 0x87, 0x03, 0x08, 0x6C, 0x87, 0x03, 0x08, 0x6C, 0x87, 0x03, 0x08
    .byte 0x6C, 0x87, 0x03, 0x08, 0xE0, 0x88, 0x03, 0x08, 0xE0, 0x88, 0x03, 0x08, 0xFC, 0x88, 0x03, 0x08
    .byte 0xFC, 0x88, 0x03, 0x08, 0x22, 0x89, 0x03, 0x08, 0x22, 0x89, 0x03, 0x08, 0x6A, 0x89, 0x03, 0x08
    .byte 0xC2, 0x89, 0x03, 0x08, 0xFC, 0x88, 0x03, 0x08, 0xCA, 0x89, 0x03, 0x08, 0xD2, 0x89, 0x03, 0x08
    .byte 0x65, 0x46, 0x96, 0x35, 0x29, 0x88, 0x80, 0x20, 0xC0, 0x01, 0x08, 0x40, 0x00, 0x28, 0x2F, 0xD0
    .byte 0x60, 0x46, 0xBC, 0x30, 0x03, 0x23, 0xC3, 0x56, 0x07, 0x20, 0x03, 0x40, 0x64, 0x46, 0xC0, 0x34
    .byte 0x22, 0x88, 0x22, 0x60, 0x29, 0x88, 0x80, 0x20, 0x00, 0x02, 0x08, 0x40, 0x00, 0x28, 0x0B, 0xD0
    .byte 0x04, 0x48, 0x59, 0x00, 0x09, 0x18, 0x00, 0x23, 0xC8, 0x5E, 0x00, 0x04, 0x02, 0x43, 0x22, 0x60
    .byte 0x27, 0xE1, 0x00, 0x00, 0xB8, 0xBE, 0x0E, 0x08, 0x08, 0x48, 0x59, 0x00, 0x09, 0x18, 0x00, 0x25
    .byte 0x48, 0x5F, 0x00, 0x04, 0x02, 0x43, 0x22, 0x60, 0x00, 0x2B, 0x00, 0xD1, 0x19, 0xE1, 0x62, 0x46
    .byte 0xB4, 0x32, 0x11, 0x88, 0x08, 0x20, 0x08, 0x43, 0x10, 0x80, 0x12, 0xE1, 0xA8, 0xBE, 0x0E, 0x08
    .byte 0x80, 0x20, 0x00, 0x02, 0x08, 0x40, 0x00, 0x28, 0x60, 0xD0, 0x60, 0x46, 0x86, 0x30, 0x01, 0x78
    .byte 0x49, 0x00, 0x8A, 0x20, 0x40, 0x00, 0x60, 0x44, 0x40, 0x18, 0x00, 0x21, 0x43, 0x5E, 0x64, 0x46
    .byte 0xBC, 0x34, 0x00, 0x2B, 0x16, 0xDB, 0x21, 0x68, 0x08, 0x14, 0x83, 0x42, 0x12, 0xDA, 0x08, 0x16
    .byte 0x07, 0x21, 0x08, 0x40, 0x63, 0x46, 0xC0, 0x33, 0x19, 0x88, 0x19, 0x60, 0x04, 0x4A, 0x40, 0x00
    .byte 0x80, 0x18, 0x00, 0x22, 0x80, 0x5E, 0x00, 0x04, 0x01, 0x43, 0x19, 0x60, 0xE9, 0xE0, 0x00, 0x00
    .byte 0xA8, 0xBE, 0x0E, 0x08, 0x60, 0x46, 0x68, 0x30, 0x00, 0x23, 0xC1, 0x5E, 0x00, 0x29, 0x0B, 0xDA
    .byte 0x40, 0x30, 0x00, 0x68, 0x03, 0x4D, 0x41, 0x19, 0x20, 0x68, 0x88, 0x42, 0x00, 0xDC, 0xBE, 0xE0
    .byte 0x23, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x12, 0x48, 0x80, 0x22, 0x12, 0x01, 0x80, 0x18
    .byte 0x02, 0x78, 0x60, 0x46, 0xAC, 0x30, 0x00, 0x23, 0xC0, 0x5E, 0x00, 0x28, 0x01, 0xD1, 0x00, 0x29
    .byte 0x0C, 0xD0, 0x0D, 0x48, 0x91, 0x00, 0x89, 0x18, 0xC9, 0x00, 0x89, 0x18, 0xC9, 0x00, 0x09, 0x18
    .byte 0x8F, 0x31, 0x08, 0x78, 0x00, 0x05, 0x21, 0x68, 0x81, 0x42, 0x06, 0xDA, 0x60, 0x46, 0xA8, 0x30
    .byte 0x21, 0x68, 0x00, 0x68, 0x81, 0x42, 0x00, 0xDA, 0x99, 0xE0, 0x60, 0x46, 0x05, 0xF0, 0x58, 0xF9
    .byte 0xAF, 0xE0, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03, 0x00, 0xC3, 0x0E, 0x08, 0x60, 0x46, 0xBC, 0x30
    .byte 0x03, 0x21, 0x41, 0x56, 0x07, 0x20, 0x01, 0x40, 0x64, 0x46, 0xC0, 0x34, 0x23, 0x88, 0x23, 0x60
    .byte 0x62, 0x46, 0x4C, 0x32, 0x12, 0x78, 0x10, 0x40, 0x05, 0x4A, 0x49, 0x00, 0x00, 0x01, 0x09, 0x18
    .byte 0x89, 0x18, 0x00, 0x25, 0x48, 0x5F, 0x00, 0x04, 0x03, 0x43, 0x23, 0x60, 0x91, 0xE0, 0x00, 0x00
    .byte 0xC8, 0xBE, 0x0E, 0x08, 0x62, 0x46, 0xC0, 0x32, 0x11, 0x88, 0x11, 0x60, 0x60, 0x46, 0xB8, 0x30
    .byte 0x00, 0x23, 0xC0, 0x5E, 0x00, 0x28, 0x13, 0xD1, 0x00, 0x48, 0x0C, 0xE0, 0x00, 0x00, 0xF8, 0xFF
    .byte 0x62, 0x46, 0xC0, 0x32, 0x11, 0x88, 0x11, 0x60, 0x60, 0x46, 0xB8, 0x30, 0x00, 0x25, 0x40, 0x5F
    .byte 0x00, 0x28, 0x05, 0xD1, 0x01, 0x48, 0x01, 0x43, 0x11, 0x60, 0x72, 0xE0, 0x00, 0x00, 0xF0, 0xFF
    .byte 0x00, 0x20, 0x10, 0x60, 0x6D, 0xE0, 0x61, 0x46, 0xCC, 0x31, 0x08, 0x88, 0x01, 0x38, 0x08, 0x80
    .byte 0x00, 0x04, 0x00, 0x28, 0x16, 0xD0, 0x60, 0x46, 0xA8, 0x30, 0x00, 0x68, 0xC0, 0x21, 0x09, 0x04
    .byte 0x42, 0x18, 0x61, 0x46, 0xBC, 0x31, 0x08, 0x68, 0x82, 0x42, 0x03, 0xDA, 0x0A, 0x60, 0x04, 0x31
    .byte 0x08, 0x88, 0x55, 0xE0, 0x60, 0x46, 0xC0, 0x30, 0x01, 0x88, 0x80, 0x22, 0x92, 0x02, 0x11, 0x43
    .byte 0x01, 0x60, 0x4E, 0xE0, 0x61, 0x46, 0x7E, 0x31, 0x0E, 0x20, 0x08, 0x70, 0x49, 0xE0, 0x62, 0x46
    .byte 0x7E, 0x32, 0x10, 0x78, 0x0B, 0x28, 0x21, 0xD1, 0x61, 0x46, 0x80, 0x31, 0x00, 0x23, 0xC8, 0x5E
    .byte 0x00, 0x28, 0x19, 0xD0, 0x01, 0x1C, 0x00, 0x29, 0x00, 0xDA, 0x49, 0x42, 0x08, 0x48, 0x81, 0x42
    .byte 0x01, 0xDD, 0xFC, 0x21, 0x89, 0x01, 0xC8, 0x12, 0x07, 0x21, 0x08, 0x40, 0x62, 0x46, 0xC0, 0x32
    .byte 0x04, 0x49, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0x00, 0x04, 0x10, 0x60, 0x29, 0xE0, 0x00, 0x00
    .byte 0xFF, 0x3F, 0x00, 0x00, 0x48, 0xC2, 0x0E, 0x08, 0x0E, 0x20, 0x10, 0x70, 0x61, 0x46, 0x84, 0x31
    .byte 0x00, 0x20, 0x08, 0x70, 0x1D, 0xE0, 0x61, 0x46, 0xC0, 0x31, 0x08, 0x88, 0x18, 0xE0, 0x60, 0x46
    .byte 0xFF, 0xF7, 0x38, 0xFE, 0x15, 0xE0, 0x62, 0x46, 0xB4, 0x32, 0x11, 0x88, 0x08, 0x20, 0x08, 0x43
    .byte 0x10, 0x80, 0x60, 0x46, 0xBC, 0x30, 0x01, 0x68, 0x80, 0x20, 0x00, 0x04, 0x81, 0x42, 0x04, 0xDC
    .byte 0x61, 0x46, 0xC0, 0x31, 0x80, 0x20, 0x00, 0x03, 0x02, 0xE0, 0x61, 0x46, 0xC0, 0x31, 0x02, 0x48
    .byte 0x08, 0x60
_080389FE:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00, 0xF8, 0xFF
    thumb_func_start sub_8038A08
sub_8038A08:
    mov r12, r0
    mov r2, r12
    adds r2, #0xBC
    ldr r1, [r2, #0x00]
    cmp r1, #0x00
    bge _08038A16
    negs r1, r1
_08038A16:
    ldr r0, _08038A44 @ =0x006FFFFF
    cmp r1, r0
    bgt _08038A30
    mov r0, r12
    adds r0, #0xB4
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    cmp r1, #0x00
    beq _08038A48
_08038A30:
    mov r0, r12
    adds r0, #0x88
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bge _08038A3E
    adds r0, #0x07
_08038A3E:
    lsls r0, r0, #0x0D
    lsrs r1, r0, #0x10
    b _08038AB2
_08038A44: .4byte 0x006FFFFF
_08038A48:
    mov r0, r12
    adds r0, #0x78
    ldrb r0, [r0, #0x00]
    cmp r0, #0x04
    beq _08038A64
    mov r0, r12
    adds r0, #0x88
    strh r1, [r0, #0x00]
    ldr r0, [r2, #0x00]
    cmp r0, #0x00
    bge _08038A60
    negs r0, r0
_08038A60:
    asrs r2, r0, #0x14
    b _08038A66
_08038A64:
    movs r2, #0x08
_08038A66:
    mov r1, r12
    ldr r0, [r1, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x06
    ands r0, r1
    cmp r0, #0x00
    bne _08038AB0
    mov r0, r12
    adds r0, #0x96
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    beq _08038A98
    ldr r0, _08038A94 @ =0x080EC71C
    lsls r1, r2, #0x01
    adds r1, r1, r0
    ldrh r0, [r1, #0x00]
    negs r0, r0
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    b _08038AB2
_08038A94: .4byte 0x080EC71C
_08038A98:
    movs r0, #0x80
    lsls r0, r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _08038AB0
    ldr r1, _08038AAC @ =0x080EC71C
    lsls r0, r2, #0x01
    adds r0, r0, r1
    ldrh r1, [r0, #0x00]
    b _08038AB2
_08038AAC: .4byte 0x080EC71C
_08038AB0:
    movs r1, #0x00
_08038AB2:
    mov r0, r12
    adds r0, #0xBC
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bge _08038AC2
    lsls r0, r1, #0x10
    negs r0, r0
    lsrs r1, r0, #0x10
_08038AC2:
    mov r3, r12
    adds r3, #0x7C
    ldrh r0, [r3, #0x00]
    adds r2, r0, r1
    strh r2, [r3, #0x00]
    mov r1, r12
    ldr r0, [r1, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x06
    ands r0, r1
    cmp r0, #0x00
    bne _08038AF8
    mov r0, r12
    adds r0, #0x80
    ldrh r0, [r0, #0x00]
    adds r0, r2, r0
    mov r2, r12
    adds r2, #0x7A
    strh r0, [r2, #0x00]
    mov r1, r12
    adds r1, #0x82
    ldrh r0, [r3, #0x00]
    ldrh r1, [r1, #0x00]
    subs r0, r0, r1
    mov r1, r12
    adds r1, #0x56
    strh r0, [r1, #0x00]
_08038AF8:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8038AFC
sub_8038AFC:
    push {r4, r5, r6, lr}
    adds r2, r0, #0x0
    ldr r0, [r2, #0x48]
    movs r1, #0x80
    ands r0, r1
    cmp r0, #0x00
    beq _08038B14
    adds r1, r2, #0x0
    adds r1, #0x88
    movs r0, #0x00
    strh r0, [r1, #0x00]
    b _08038BEE
_08038B14:
    adds r0, r2, #0x0
    adds r0, #0xB4
    ldrh r1, [r0, #0x00]
    movs r0, #0xC0
    lsls r0, r0, #0x03
    ands r0, r1
    movs r4, #0x80
    lsls r4, r4, #0x02
    cmp r0, r4
    beq _08038BEE
    adds r0, r2, #0x0
    adds r0, #0xB0
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x03
    movs r1, #0x9A
    lsls r1, r1, #0x01
    adds r0, r0, r1
    adds r3, r2, r0
    adds r0, r2, #0x0
    adds r0, #0x7E
    ldrb r1, [r0, #0x00]
    subs r0, r1, #0x5
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x03
    bls _08038BEE
    cmp r1, #0x0D
    beq _08038BEE
    adds r0, r2, #0x0
    adds r0, #0x96
    ldrh r1, [r0, #0x00]
    adds r0, r4, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _08038B8A
    adds r0, r2, #0x0
    adds r0, #0x88
    ldrh r2, [r0, #0x00]
    movs r4, #0x00
    ldsh r1, [r0, r4]
    adds r4, r0, #0x0
    cmp r1, #0x00
    bgt _08038B82
    movs r5, #0x00
    ldsh r0, [r4, r5]
    negs r0, r0
    movs r6, #0x00
    ldsh r1, [r3, r6]
    cmp r0, r1
    blt _08038B7E
    ldrh r0, [r3, #0x00]
    negs r0, r0
    b _08038B86
_08038B7E:
    ldrh r0, [r3, #0x04]
    b _08038B84
_08038B82:
    ldrh r0, [r3, #0x02]
_08038B84:
    subs r0, r2, r0
_08038B86:
    strh r0, [r4, #0x00]
    b _08038BEE
_08038B8A:
    movs r0, #0x80
    lsls r0, r0, #0x01
    ands r0, r1
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    cmp r4, #0x00
    beq _08038BC4
    adds r1, r2, #0x0
    adds r1, #0x88
    ldrh r5, [r1, #0x00]
    movs r0, #0x00
    ldsh r2, [r1, r0]
    adds r4, r1, #0x0
    cmp r2, #0x00
    blt _08038BBC
    ldrh r1, [r3, #0x00]
    movs r6, #0x00
    ldsh r0, [r3, r6]
    cmp r2, r0
    blt _08038BB6
    adds r0, r1, #0x0
    b _08038B86
_08038BB6:
    ldrh r3, [r3, #0x04]
    adds r0, r5, r3
    b _08038B86
_08038BBC:
    ldrh r0, [r3, #0x02]
    adds r0, r5, r0
    strh r0, [r1, #0x00]
    b _08038BEE
_08038BC4:
    adds r1, r2, #0x0
    adds r1, #0x88
    ldrh r2, [r1, #0x00]
    movs r5, #0x00
    ldsh r0, [r1, r5]
    cmp r0, #0x00
    bge _08038BE0
    ldrh r0, [r3, #0x06]
    adds r0, r2, r0
    strh r0, [r1, #0x00]
    lsls r0, r0, #0x10
    cmp r0, #0x00
    ble _08038BEE
    b _08038BEC
_08038BE0:
    ldrh r0, [r3, #0x06]
    subs r0, r2, r0
    strh r0, [r1, #0x00]
    lsls r0, r0, #0x10
    cmp r0, #0x00
    bge _08038BEE
_08038BEC:
    strh r4, [r1, #0x00]
_08038BEE:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    thumb_func_start sub_8038BF4
sub_8038BF4:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    adds r2, r4, #0x0
    adds r2, #0xB8
    ldrh r1, [r2, #0x00]
    movs r3, #0x00
    ldsh r0, [r2, r3]
    cmp r0, #0x00
    bne _08038C08
    b _08038E1C
_08038C08:
    subs r0, r1, #0x1
    strh r0, [r2, #0x00]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x3B
    bne _08038C2C
    adds r1, r4, #0x0
    adds r1, #0x82
    ldr r3, _08038CB8 @ =0x000012FF
    adds r0, r3, #0x0
    ldrh r1, [r1, #0x00]
    adds r0, r0, r1
    lsls r0, r0, #0x10
    ldr r1, _08038CBC @ =0x25FE0000
    cmp r0, r1
    bls _08038C2C
    movs r0, #0x00
    strh r0, [r2, #0x00]
_08038C2C:
    adds r0, r4, #0x0
    adds r0, #0xBC
    ldr r1, [r0, #0x00]
    movs r0, #0xA0
    lsls r0, r0, #0x12
    adds r2, r4, #0x0
    adds r2, #0xB8
    cmp r1, r0
    bgt _08038C42
    movs r0, #0x00
    strh r0, [r2, #0x00]
_08038C42:
    ldr r3, [r4, #0x48]
    movs r0, #0x20
    ands r3, r0
    cmp r3, #0x00
    bne _08038CD4
    adds r0, r4, #0x0
    adds r0, #0x96
    ldrh r0, [r0, #0x00]
    movs r1, #0x86
    lsls r1, r1, #0x07
    ands r1, r0
    movs r0, #0x80
    lsls r0, r0, #0x07
    cmp r1, r0
    bne _08038CD4
    ldr r0, _08038CC0 @ =0x03002E20
    strh r3, [r2, #0x00]
    adds r2, r4, #0x0
    adds r2, #0x7E
    movs r1, #0x0E
    strb r1, [r2, #0x00]
    adds r1, r4, #0x0
    adds r1, #0x82
    strh r3, [r1, #0x00]
    ldr r1, _08038CC4 @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _08038D68
    movs r2, #0x20
    ldsh r0, [r4, r2]
    movs r3, #0x22
    ldsh r1, [r4, r3]
    movs r3, #0x24
    ldsh r2, [r4, r3]
    subs r2, #0x05
    lsls r2, r2, #0x10
    asrs r2, r2, #0x10
    bl sub_805C5FC
    ldr r0, _08038CC8 @ =0x080ECB70
    ldrh r0, [r0, #0x00]
    ldr r2, _08038CCC @ =0x08102414
    ldr r1, _08038CD0 @ =0x08102498
    lsls r0, r0, #0x03
    adds r0, r0, r1
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r0, [r0, #0x00]
    bl m4aMPlayStop
    movs r0, #0xA5
    bl m4aSongNumStart
    b _08038D68
    .byte 0x00, 0x00
_08038CB8: .4byte 0x000012FF
_08038CBC: .4byte 0x25FE0000
_08038CC0: .4byte 0x03002E20
_08038CC4: .4byte 0x00000838
_08038CC8: .4byte 0x080ECB70
_08038CCC: .4byte 0x08102414
_08038CD0: .4byte 0x08102498
_08038CD4:
    movs r0, #0x00
    ldsh r5, [r2, r0]
    cmp r5, #0x00
    beq _08038D6C
    cmp r5, #0x37
    ble _08038CF0
    adds r1, r4, #0x0
    adds r1, #0x82
    movs r2, #0xC0
    lsls r2, r2, #0x03
    adds r0, r2, #0x0
    ldrh r3, [r1, #0x00]
    adds r0, r0, r3
    b _08038D66
_08038CF0:
    cmp r5, #0x2F
    ble _08038D08
    adds r1, r4, #0x0
    adds r1, #0x82
    ldr r2, _08038D04 @ =0xFFFFFA00
    adds r0, r2, #0x0
    ldrh r3, [r1, #0x00]
    adds r0, r0, r3
    b _08038D66
    .byte 0x00, 0x00
_08038D04: .4byte 0xFFFFFA00
_08038D08:
    cmp r5, #0x27
    ble _08038D1C
    adds r1, r4, #0x0
    adds r1, #0x82
    movs r2, #0xC0
    lsls r2, r2, #0x03
    adds r0, r2, #0x0
    ldrh r3, [r1, #0x00]
    adds r0, r0, r3
    b _08038D66
_08038D1C:
    cmp r5, #0x1F
    ble _08038D34
    adds r1, r4, #0x0
    adds r1, #0x82
    ldr r2, _08038D30 @ =0xFFFFFA00
    adds r0, r2, #0x0
    ldrh r3, [r1, #0x00]
    adds r0, r0, r3
    b _08038D66
    .byte 0x00, 0x00
_08038D30: .4byte 0xFFFFFA00
_08038D34:
    cmp r5, #0x17
    ble _08038D48
    adds r1, r4, #0x0
    adds r1, #0x82
    movs r2, #0xC0
    lsls r2, r2, #0x03
    adds r0, r2, #0x0
    ldrh r3, [r1, #0x00]
    adds r0, r0, r3
    b _08038D66
_08038D48:
    cmp r5, #0x0F
    ble _08038D68
    adds r1, r4, #0x0
    adds r1, #0x82
    ldrh r2, [r1, #0x00]
    movs r3, #0x00
    ldsh r0, [r1, r3]
    cmp r0, #0x00
    ble _08038D64
    ldr r3, _08038D60 @ =0xFFFFFA00
    adds r0, r2, r3
    b _08038D66
_08038D60: .4byte 0xFFFFFA00
_08038D64:
    movs r0, #0x00
_08038D66:
    strh r0, [r1, #0x00]
_08038D68:
    movs r0, #0x01
    b _08038E1E
_08038D6C:
    adds r0, r4, #0x0
    adds r0, #0x7E
    ldrb r0, [r0, #0x00]
    subs r0, #0x05
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x01
    bhi _08038D9A
    adds r0, r4, #0x0
    movs r1, #0x01
    bl sub_803D4E4
    adds r2, r4, #0x0
    adds r2, #0x74
    ldrh r1, [r2, #0x00]
    movs r0, #0x03
    orrs r0, r1
    strh r0, [r2, #0x00]
    ldr r1, _08038E24 @ =0x03002E20
    adds r1, #0x24
    adds r0, r4, #0x0
    bl sub_8043460
_08038D9A:
    adds r0, r4, #0x0
    adds r0, #0x92
    strh r5, [r0, #0x00]
    adds r0, #0x02
    strh r5, [r0, #0x00]
    ldr r0, _08038E24 @ =0x03002E20
    ldr r1, _08038E28 @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _08038E1C
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08038E1C
    movs r6, #0x00
    movs r5, #0x00
    ldr r2, _08038E2C @ =0x08102414
    ldr r3, _08038E30 @ =0x08102498
    movs r0, #0xA2
    lsls r0, r0, #0x03
    adds r4, r3, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    ldrh r0, [r1, #0x04]
    cmp r0, #0x00
    beq _08038DE4
    ldr r1, [r1, #0x00]
    ldr r0, [r4, #0x00]
    cmp r1, r0
    bne _08038DE4
    movs r5, #0x01
_08038DE4:
    cmp r5, #0x00
    beq _08038E12
    movs r4, #0x00
    movs r1, #0xA2
    lsls r1, r1, #0x03
    adds r3, r3, r1
    ldrh r0, [r3, #0x04]
    lsls r1, r0, #0x01
    adds r1, r1, r0
    lsls r1, r1, #0x02
    adds r1, r1, r2
    ldr r1, [r1, #0x00]
    ldr r0, [r1, #0x04]
    cmp r0, #0x00
    bge _08038E0C
    ldr r1, [r1, #0x00]
    ldr r0, [r3, #0x00]
    cmp r1, r0
    bne _08038E0C
    movs r4, #0x01
_08038E0C:
    cmp r4, #0x00
    bne _08038E12
    movs r6, #0x01
_08038E12:
    cmp r6, #0x00
    bne _08038E1C
    movs r0, #0xA2
    bl m4aSongNumStart
_08038E1C:
    movs r0, #0x00
_08038E1E:
    pop {r4, r5, r6}
    pop {r1}
    bx r1
_08038E24: .4byte 0x03002E20
_08038E28: .4byte 0x00000838
_08038E2C: .4byte 0x08102414
_08038E30: .4byte 0x08102498
    thumb_func_start sub_8038E34
sub_8038E34:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    adds r5, r0, #0x0
    adds r0, #0x54
    ldrb r7, [r0, #0x00]
    adds r2, r5, #0x0
    adds r2, #0xB4
    ldrh r1, [r2, #0x00]
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    bne _08038E56
    ldr r0, _08038E70 @ =0x0000FFD3
    ands r0, r1
    strh r0, [r2, #0x00]
_08038E56:
    adds r0, r5, #0x0
    adds r0, #0x7E
    ldrb r1, [r0, #0x00]
    mov r8, r0
    cmp r1, #0x0F
    bls _08038E66
    bl def_8038E6E
_08038E66:
    lsls r0, r1, #0x02
    ldr r1, _08038E74 @ =0x08038E78
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08038E70: .4byte 0x0000FFD3
_08038E74: .4byte 0x08038E78
    .byte 0xC6, 0x8E, 0x03, 0x08, 0x96, 0x8F, 0x03, 0x08, 0x96, 0x8F, 0x03, 0x08, 0x96, 0x8F, 0x03, 0x08
    .byte 0x96, 0x8F, 0x03, 0x08, 0x96, 0x92, 0x03, 0x08, 0x38, 0x93, 0x03, 0x08, 0xCA, 0x91, 0x03, 0x08
    .byte 0x30, 0x92, 0x03, 0x08, 0xB8, 0x8E, 0x03, 0x08, 0xB8, 0x8E, 0x03, 0x08, 0xE0, 0x93, 0x03, 0x08
    .byte 0xD4, 0x94, 0x03, 0x08, 0x6C, 0x95, 0x03, 0x08, 0x68, 0x8F, 0x03, 0x08, 0x36, 0x96, 0x03, 0x08
    .byte 0x28, 0x1C, 0x54, 0x30, 0x00, 0x78, 0x07, 0x28, 0x01, 0xD0, 0x00, 0xF0, 0xDF, 0xFB, 0x28, 0x1C
    .byte 0x96, 0x30, 0x02, 0x88, 0xC0, 0x21, 0x09, 0x02, 0x08, 0x1C, 0x10, 0x40, 0x2A, 0x1C, 0xBC, 0x32
    .byte 0x88, 0x42, 0x0B, 0xD1, 0x11, 0x68, 0x80, 0x20, 0x40, 0x04, 0x81, 0x42, 0x06, 0xDC, 0x28, 0x1C
    .byte 0x84, 0x30, 0x00, 0x78, 0x04, 0x28, 0x01, 0xD0, 0x0F, 0x20, 0x6F, 0xE2, 0x29, 0x1C, 0xC8, 0x31
    .byte 0x00, 0x20, 0x08, 0x80, 0x05, 0x48, 0x80, 0x23, 0x1B, 0x01, 0xC0, 0x18, 0x00, 0x78, 0x02, 0x28
    .byte 0x08, 0xD0, 0x12, 0x68, 0x02, 0x48, 0x82, 0x42, 0x08, 0xDC, 0x55, 0xE1, 0x20, 0x2E, 0x00, 0x03
    .byte 0xFF, 0xFF, 0xFF, 0x00, 0x10, 0x68, 0x90, 0x24, 0x64, 0x04, 0x02, 0x19, 0x28, 0x1C, 0xA8, 0x30
    .byte 0x00, 0x68, 0x12, 0x1A, 0x00, 0x2A, 0x14, 0xDA, 0x0B, 0x48, 0x39, 0x01, 0x09, 0x18, 0x00, 0x23
    .byte 0xC8, 0x5E, 0x00, 0x04, 0x82, 0x42, 0x00, 0xDA, 0x3E, 0xE1, 0x28, 0x1C, 0x88, 0x30, 0xC0, 0x24
    .byte 0xA4, 0x00, 0x21, 0x1C, 0x00, 0x88, 0x09, 0x18, 0x09, 0x04, 0x04, 0x48, 0x81, 0x42, 0x00, 0xD8
    .byte 0x32, 0xE1, 0x01, 0x20, 0x90, 0xE3, 0x00, 0x00, 0x28, 0xBE, 0x0E, 0x08, 0x00, 0x00, 0xFF, 0x05
    .byte 0x28, 0x1C, 0x00, 0x21, 0x00, 0xF0, 0x90, 0xFB, 0x28, 0x1C, 0x80, 0x30, 0x01, 0x88, 0x00, 0x27
    .byte 0xC0, 0x5F, 0x00, 0x28, 0x00, 0xD1, 0x29, 0xE2, 0x80, 0x22, 0xD2, 0x01, 0x88, 0x18, 0x00, 0x04
    .byte 0x00, 0x28, 0x00, 0xDB, 0x7A, 0xE3, 0x0B, 0x21, 0x43, 0x46, 0x19, 0x70, 0x98, 0xE2, 0x2B, 0x1C
    .byte 0x96, 0x33, 0x1A, 0x88, 0xC0, 0x21, 0x09, 0x02, 0x08, 0x1C, 0x10, 0x40, 0x88, 0x42, 0x0F, 0xD1
    .byte 0x28, 0x1C, 0xBC, 0x30, 0x01, 0x68, 0x80, 0x20, 0x40, 0x04, 0x81, 0x42, 0x08, 0xDC, 0x28, 0x1C
    .byte 0x84, 0x30, 0x00, 0x78, 0x04, 0x28, 0x03, 0xD0, 0x0F, 0x20, 0x44, 0x46, 0x20, 0x70, 0x5D, 0xE3
    .byte 0x28, 0x1C, 0x54, 0x30, 0x00, 0x78, 0x00, 0x28, 0x01, 0xD1, 0x0E, 0x20, 0x54, 0xE3, 0x28, 0x1C
    .byte 0xBC, 0x30, 0x01, 0x68, 0x28, 0x48, 0x81, 0x42, 0x00, 0xDC, 0xBC, 0xE2, 0x1B, 0x88, 0x80, 0x20
    .byte 0x00, 0x02, 0x18, 0x40, 0x00, 0x28, 0x08, 0xD1, 0x10, 0x20, 0x18, 0x40, 0x00, 0x28, 0x00, 0xD1
    .byte 0xCB, 0xE0, 0x22, 0x48, 0x81, 0x42, 0x00, 0xDC, 0xC7, 0xE0, 0xC0, 0x20, 0x80, 0x00, 0x18, 0x40
    .byte 0x00, 0x28, 0x00, 0xD1, 0xC1, 0xE0, 0x80, 0x20, 0x80, 0x00, 0x18, 0x40, 0x00, 0x04, 0x06, 0x0C
    .byte 0x00, 0x2E, 0x51, 0xD0, 0x28, 0x1C, 0x39, 0x1C, 0x04, 0xF0, 0xB0, 0xFD, 0x28, 0x1C, 0x80, 0x30
    .byte 0x00, 0x22, 0x81, 0x5E, 0x84, 0x46, 0x00, 0x29, 0x30, 0xDB, 0x2A, 0x1C, 0xC8, 0x32, 0x14, 0x4B
    .byte 0x3C, 0x01, 0xE6, 0x18, 0x10, 0x88, 0x71, 0x88, 0x40, 0x1A, 0x00, 0x27, 0x10, 0x80, 0x00, 0x04
    .byte 0x00, 0x14, 0x10, 0x49, 0x99, 0x46, 0x23, 0x1C, 0x88, 0x42, 0x10, 0xDA, 0x08, 0x20, 0x44, 0x46
    .byte 0x20, 0x70, 0x28, 0x1C, 0x9C, 0x30, 0x07, 0x80, 0x14, 0x38, 0x07, 0x80, 0x14, 0x3A, 0x11, 0x88
    .byte 0x09, 0x48, 0x08, 0x40, 0x10, 0x80, 0x29, 0x1C, 0xB8, 0x31, 0x01, 0x20, 0x08, 0x80, 0xF0, 0x88
    .byte 0x65, 0x46, 0x2D, 0x88, 0x40, 0x19, 0x4E, 0xE0, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xBF, 0x01
    .byte 0x28, 0xBE, 0x0E, 0x08, 0x00, 0x86, 0xFF, 0xFF, 0xBF, 0xFF, 0x00, 0x00, 0x2A, 0x1C, 0xC8, 0x32
    .byte 0x10, 0x88, 0x08, 0x4B, 0x3C, 0x01, 0xE1, 0x18, 0xE0, 0x30, 0x4F, 0x88, 0xC0, 0x19, 0x10, 0x80
    .byte 0x48, 0x89, 0x61, 0x46, 0x09, 0x88, 0x40, 0x18, 0x00, 0x04, 0x06, 0x0C, 0x99, 0x46, 0x23, 0x1C
    .byte 0x4C, 0xE0, 0x00, 0x00, 0x28, 0xBE, 0x0E, 0x08, 0x28, 0x1C, 0x39, 0x1C, 0x04, 0xF0, 0x84, 0xFD
    .byte 0x28, 0x1C, 0x80, 0x30, 0x00, 0x22, 0x81, 0x5E, 0x84, 0x46, 0x00, 0x29, 0x2C, 0xDA, 0x29, 0x1C
    .byte 0xC8, 0x31, 0x12, 0x4A, 0x3B, 0x01, 0x9C, 0x18, 0x60, 0x88, 0x0F, 0x88, 0xC0, 0x19, 0x08, 0x80
    .byte 0x00, 0x04, 0x0F, 0x49, 0x91, 0x46, 0x88, 0x42, 0x11, 0xDD, 0x07, 0x20, 0x41, 0x46, 0x08, 0x70
    .byte 0x28, 0x1C, 0x88, 0x30, 0x06, 0x80, 0x14, 0x30, 0x06, 0x80, 0x2A, 0x1C, 0xB4, 0x32, 0x11, 0x88
    .byte 0x08, 0x48, 0x08, 0x40, 0x10, 0x80, 0x29, 0x1C, 0xB8, 0x31, 0x01, 0x20, 0x08, 0x80, 0x62, 0x46
    .byte 0x10, 0x88, 0xE1, 0x88, 0x40, 0x1A, 0x00, 0x04, 0x06, 0x0C, 0x17, 0xE0, 0x28, 0xBE, 0x0E, 0x08
    .byte 0x00, 0x00, 0xFF, 0x79, 0xBF, 0xFF, 0x00, 0x00, 0x2B, 0x1C, 0xC8, 0x33, 0x19, 0x88, 0xE0, 0x39
    .byte 0x0D, 0x4C, 0x3D, 0x01, 0x2A, 0x19, 0x50, 0x88, 0x09, 0x1A, 0x19, 0x80, 0x63, 0x46, 0x18, 0x88
    .byte 0x51, 0x89, 0x40, 0x1A, 0x00, 0x04, 0x06, 0x0C, 0xA1, 0x46, 0x2B, 0x1C, 0x30, 0x04, 0x01, 0x14
    .byte 0x00, 0x29, 0x0F, 0xDA, 0x49, 0x42, 0x4C, 0x46, 0x1A, 0x19, 0x04, 0x25, 0x50, 0x5F, 0x81, 0x42
    .byte 0x04, 0xDB, 0x90, 0x88, 0x40, 0x42, 0x02, 0xE0, 0x28, 0xBE, 0x0E, 0x08, 0x30, 0x1C, 0x67, 0x46
    .byte 0x38, 0x80, 0x83, 0xE2, 0x4A, 0x46, 0x98, 0x18, 0x82, 0x88, 0x04, 0x23, 0xC0, 0x5E, 0x88, 0x42
    .byte 0x00, 0xDD, 0x32, 0x1C, 0x64, 0x46, 0x22, 0x80, 0x78, 0xE2, 0x28, 0x1C, 0xC8, 0x30, 0x00, 0x21
    .byte 0x42, 0x5E, 0x03, 0x1C, 0x00, 0x2A, 0x0F, 0xD0, 0x05, 0x48, 0x39, 0x01, 0x09, 0x18, 0x02, 0x24
    .byte 0x08, 0x5F, 0xE0, 0x30, 0x00, 0x24, 0x19, 0x5F, 0x00, 0x2A, 0x03, 0xDB, 0x08, 0x1A, 0x02, 0xE0
    .byte 0x28, 0xBE, 0x0E, 0x08, 0x08, 0x18, 0x18, 0x80, 0x28, 0x1C, 0x39, 0x1C, 0x00, 0xF0, 0x64, 0xFA
    .byte 0x5C, 0xE2, 0x2C, 0x1C, 0xB4, 0x34, 0x20, 0x88, 0x08, 0x21, 0x01, 0x43, 0x21, 0x80, 0x28, 0x1C
    .byte 0xFF, 0xF7, 0x0C, 0xFD, 0x00, 0x28, 0x00, 0xD0, 0x50, 0xE2, 0x21, 0x88, 0x02, 0x20, 0x08, 0x40
    .byte 0x00, 0x28, 0x01, 0xD0, 0x0E, 0x20, 0x47, 0xE2, 0x28, 0x1C, 0xBC, 0x30, 0x01, 0x68, 0x03, 0x48
    .byte 0x81, 0x42, 0x07, 0xDD, 0x29, 0x1C, 0x82, 0x31, 0x01, 0x4F, 0xCC, 0xE0, 0xFF, 0xFF, 0x7F, 0x01
    .byte 0x80, 0xFB, 0xFF, 0xFF, 0x29, 0x1C, 0x82, 0x31, 0x0C, 0x88, 0x02, 0x48, 0x84, 0x42, 0x05, 0xD9
    .byte 0x01, 0x4B, 0x09, 0xE2, 0x7F, 0x04, 0x00, 0x00, 0x80, 0xFB, 0xFF, 0xFF, 0x01, 0x4D, 0x60, 0x19
    .byte 0x08, 0x80, 0x98, 0xE1, 0x80, 0xFB, 0xFF, 0xFF, 0x2C, 0x1C, 0xB4, 0x34, 0x20, 0x88, 0x08, 0x21
    .byte 0x01, 0x43, 0x21, 0x80, 0x28, 0x1C, 0xFF, 0xF7, 0xD9, 0xFC, 0x00, 0x28, 0x00, 0xD0, 0x1D, 0xE2
    .byte 0x21, 0x88, 0x02, 0x20, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD0, 0xBE, 0xE0, 0x28, 0x1C, 0xBC, 0x30
    .byte 0x01, 0x68, 0x04, 0x48, 0x81, 0x42, 0x07, 0xDD, 0x29, 0x1C, 0x82, 0x31, 0x90, 0x22, 0xD2, 0x00
    .byte 0x36, 0xE0, 0x00, 0x00, 0xFF, 0xFF, 0x7F, 0x01, 0x29, 0x1C, 0x82, 0x31, 0x0C, 0x88, 0x04, 0x48
    .byte 0x84, 0x42, 0x07, 0xD8, 0x90, 0x25, 0xED, 0x00, 0x60, 0x19, 0x08, 0x80, 0xFE, 0xE1, 0x00, 0x00
    .byte 0x80, 0xFB, 0x00, 0x00, 0x90, 0x27, 0xFF, 0x00, 0xE0, 0x19, 0x08, 0x80, 0x9D, 0xE0, 0x2C, 0x1C
    .byte 0xB4, 0x34, 0x20, 0x88, 0x08, 0x21, 0x00, 0x26, 0x01, 0x43, 0x21, 0x80, 0x28, 0x1C, 0xFF, 0xF7
    .byte 0xA5, 0xFC, 0x00, 0x28, 0x00, 0xD0, 0xE9, 0xE1, 0x21, 0x88, 0x02, 0x20, 0x08, 0x40, 0x00, 0x28
    .byte 0x03, 0xD0, 0x80, 0x22, 0xD2, 0x00, 0x10, 0x1C, 0x2F, 0xE0, 0x29, 0x1C, 0xC8, 0x31, 0x0A, 0x88
    .byte 0x00, 0x27, 0xC8, 0x5F, 0x00, 0x28, 0x0B, 0xD0, 0x50, 0x1E, 0x08, 0x80, 0x46, 0x39, 0x03, 0x4A
    .byte 0x10, 0x1C, 0x0B, 0x88, 0xC0, 0x18, 0x08, 0x80, 0xD0, 0xE1, 0x00, 0x00, 0x00, 0xF6, 0xFF, 0xFF
    .byte 0x28, 0x1C, 0xBC, 0x30, 0x01, 0x68, 0x03, 0x48, 0x81, 0x42, 0x07, 0xDD, 0x29, 0x1C, 0x82, 0x31
    .byte 0x01, 0x4C, 0x41, 0xE0, 0xFF, 0xFF, 0xFF, 0x02, 0x00, 0xF6, 0xFF, 0xFF, 0x2A, 0x1C, 0x82, 0x32
    .byte 0x10, 0x88, 0x09, 0x4F, 0xC1, 0x19, 0x11, 0x80, 0x00, 0x04, 0x08, 0x49, 0x88, 0x42, 0x00, 0xD9
    .byte 0xB4, 0xE1, 0x20, 0x88, 0x80, 0x22, 0xD2, 0x00, 0x11, 0x1C, 0x08, 0x43, 0x20, 0x80, 0x0E, 0x20
    .byte 0x43, 0x46, 0x18, 0x70, 0xAA, 0xE1, 0x00, 0x00, 0x00, 0xF6, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0x09
    .byte 0x2C, 0x1C, 0xB4, 0x34, 0x20, 0x88, 0x08, 0x21, 0x00, 0x26, 0x01, 0x43, 0x21, 0x80, 0x28, 0x1C
    .byte 0xFF, 0xF7, 0x54, 0xFC, 0x00, 0x28, 0x00, 0xD0, 0x98, 0xE1, 0x21, 0x88, 0x02, 0x20, 0x08, 0x40
    .byte 0x00, 0x28, 0x05, 0xD0, 0x80, 0x25, 0xED, 0x00, 0x28, 0x1C, 0x08, 0x43, 0x20, 0x80, 0xFA, 0xE0
    .byte 0x29, 0x1C, 0xC8, 0x31, 0x0A, 0x88, 0x00, 0x23, 0xC8, 0x5E, 0x00, 0x28, 0x09, 0xD0, 0x50, 0x1E
    .byte 0x08, 0x80, 0x46, 0x39, 0xA0, 0x24, 0x24, 0x01, 0x20, 0x1C, 0x0D, 0x88, 0x40, 0x19, 0x08, 0x80
    .byte 0x7C, 0xE1, 0x28, 0x1C, 0xBC, 0x30, 0x01, 0x68, 0x05, 0x48, 0x81, 0x42, 0x0A, 0xDD, 0x29, 0x1C
    .byte 0x82, 0x31, 0xA0, 0x27, 0x3F, 0x01, 0x38, 0x1C, 0x0A, 0x88, 0x80, 0x18, 0x08, 0x80, 0x6D, 0xE1
    .byte 0xFF, 0xFF, 0xFF, 0x02, 0x28, 0x1C, 0x82, 0x30, 0xA0, 0x23, 0x1B, 0x01, 0x19, 0x1C, 0x05, 0x88
    .byte 0x49, 0x19, 0x01, 0x80, 0x09, 0x04, 0x07, 0x48, 0x81, 0x42, 0x00, 0xD9, 0x5E, 0xE1, 0x20, 0x88
    .byte 0x80, 0x27, 0xFF, 0x00, 0x39, 0x1C, 0x08, 0x43, 0x20, 0x80, 0x0E, 0x20, 0x41, 0x46, 0x08, 0x70
    .byte 0x54, 0xE1, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x09, 0x28, 0x1C, 0x96, 0x30, 0x01, 0x88, 0x80, 0x20
    .byte 0x00, 0x02, 0x08, 0x40, 0x00, 0x04, 0x02, 0x0C, 0x00, 0x2A, 0x5B, 0xD0, 0x28, 0x1C, 0xBC, 0x30
    .byte 0x01, 0x68, 0x04, 0x48, 0x81, 0x42, 0x07, 0xDC, 0x29, 0x1C, 0x80, 0x31, 0x00, 0x20, 0x08, 0x80
    .byte 0x3C, 0xE1, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x2A, 0x1C, 0x82, 0x32, 0x10, 0x88, 0x00, 0x23
    .byte 0xD1, 0x5E, 0x00, 0x29, 0x07, 0xDA, 0x80, 0x24, 0xE4, 0x00, 0x00, 0x19, 0x10, 0x80, 0x00, 0x04
    .byte 0x00, 0x28, 0x0A, 0xDB, 0x07, 0xE0, 0x00, 0x29, 0x07, 0xDD, 0x0E, 0x4F, 0xC0, 0x19, 0x10, 0x80
    .byte 0x00, 0x04, 0x00, 0x28, 0x01, 0xDA, 0x00, 0x20, 0x10, 0x80, 0x2A, 0x1C, 0x80, 0x32, 0x10, 0x88
    .byte 0x00, 0x23, 0xD1, 0x5E, 0x00, 0x29, 0x0F, 0xDA, 0x80, 0x24, 0xE4, 0x00, 0x00, 0x19, 0x10, 0x80
    .byte 0x00, 0x04, 0x00, 0x28, 0x00, 0xDA, 0x11, 0xE1, 0x00, 0x20, 0x10, 0x80, 0x0E, 0x20, 0x47, 0x46
    .byte 0x38, 0x70, 0x0F, 0xE0, 0x00, 0xFC, 0xFF, 0xFF, 0x00, 0x29, 0x13, 0xDD, 0x08, 0x49, 0x40, 0x18
    .byte 0x10, 0x80, 0x00, 0x04, 0x00, 0x28, 0x00, 0xDB, 0x00, 0xE1, 0x00, 0x20, 0x10, 0x80, 0x0E, 0x20
    .byte 0x42, 0x46, 0x10, 0x70, 0x29, 0x1C, 0x84, 0x31, 0x00, 0x20, 0x08, 0x70, 0xF6, 0xE0, 0x00, 0x00
    .byte 0x00, 0xFC, 0xFF, 0xFF, 0x00, 0x20, 0x0E, 0x21, 0x43, 0x46, 0x19, 0x70, 0x29, 0x1C, 0x84, 0x31
    .byte 0x08, 0x70, 0xEB, 0xE0, 0x28, 0x1C, 0xBC, 0x30, 0x01, 0x68, 0x07, 0x48, 0x81, 0x42, 0x00, 0xDD
    .byte 0xE4, 0xE0, 0x28, 0x1C, 0x80, 0x30, 0x00, 0x21, 0x02, 0x80, 0x0E, 0x20, 0x44, 0x46, 0x20, 0x70
    .byte 0x28, 0x1C, 0x84, 0x30, 0x01, 0x70, 0xD9, 0xE0, 0xFF, 0xFF, 0x0F, 0x00, 0x28, 0x1C, 0xB4, 0x30
    .byte 0x01, 0x88, 0x80, 0x20, 0x00, 0x02, 0x08, 0x40, 0x00, 0x28, 0x01, 0xD1, 0x0E, 0x20, 0xCB, 0xE0
    .byte 0x80, 0x20, 0x80, 0x01, 0x08, 0x40, 0x00, 0x04, 0x03, 0x0C, 0x00, 0x2B, 0x19, 0xD0, 0x2A, 0x1C
    .byte 0x82, 0x32, 0x11, 0x88, 0x02, 0x48, 0x81, 0x42, 0x04, 0xD9, 0x80, 0x27, 0x3F, 0x01, 0x17, 0xE0
    .byte 0xFF, 0x07, 0x00, 0x00, 0x80, 0x23, 0x1B, 0x01, 0xC8, 0x18, 0x10, 0x80, 0x28, 0x1C, 0x52, 0x30
    .byte 0x00, 0x24, 0x00, 0x5F, 0x00, 0x28, 0x00, 0xDB, 0xB0, 0xE0, 0x00, 0x20, 0x10, 0x80, 0x0E, 0x20
    .byte 0xAA, 0xE0, 0x2A, 0x1C, 0x82, 0x32, 0x11, 0x88, 0x03, 0x48, 0x81, 0x42, 0x08, 0xD9, 0x03, 0x4F
    .byte 0xC8, 0x19, 0x10, 0x80, 0xA2, 0xE0, 0x00, 0x00, 0xFF, 0x07, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0xFF
    .byte 0x07, 0x4C, 0x08, 0x19, 0x10, 0x80, 0x28, 0x1C, 0x52, 0x30, 0x00, 0x25, 0x40, 0x5F, 0x00, 0x28
    .byte 0x00, 0xDB, 0x93, 0xE0, 0x13, 0x80, 0x0E, 0x20, 0x47, 0x46, 0x38, 0x70, 0x8E, 0xE0, 0x00, 0x00
    .byte 0x00, 0xF8, 0xFF, 0xFF, 0x28, 0x1C, 0xB6, 0x30, 0x00, 0x21, 0x42, 0x5E, 0x0A, 0x49, 0x80, 0x24
    .byte 0x64, 0x01, 0x03, 0x1C, 0x8A, 0x42, 0x01, 0xDC, 0x00, 0x22, 0x9C, 0x5E, 0x2A, 0x1C, 0xB4, 0x32
    .byte 0x11, 0x88, 0x80, 0x20, 0x40, 0x00, 0x08, 0x40, 0x16, 0x1C, 0x00, 0x28, 0x06, 0xD0, 0x29, 0x1C
    .byte 0x82, 0x31, 0x08, 0x88, 0x00, 0x19, 0x05, 0xE0, 0xFF, 0x0F, 0x00, 0x00, 0x29, 0x1C, 0x82, 0x31
    .byte 0x08, 0x88, 0x00, 0x1B, 0x08, 0x80, 0x1A, 0x88, 0x00, 0x24, 0x18, 0x5F, 0xFF, 0x28, 0x03, 0xDD
    .byte 0x10, 0x1C, 0x40, 0x38, 0x18, 0x80, 0x61, 0xE0, 0x0B, 0x1C, 0x1C, 0x88, 0x00, 0x27, 0xDA, 0x5F
    .byte 0x00, 0x2A, 0x15, 0xDB, 0x06, 0x48, 0x82, 0x42, 0x0C, 0xDC, 0x28, 0x1C, 0x84, 0x30, 0x00, 0x21
    .byte 0x01, 0x70, 0x00, 0x22, 0x19, 0x80, 0x04, 0x38, 0x01, 0x80, 0x40, 0x46, 0x02, 0x70, 0x14, 0xE0
    .byte 0x7F, 0x01, 0x00, 0x00, 0x01, 0x4D, 0x60, 0x19, 0x18, 0x80, 0x47, 0xE0, 0x80, 0xFB, 0xFF, 0xFF
    .byte 0x0A, 0x48, 0x82, 0x42, 0x16, 0xDD, 0x28, 0x1C, 0x84, 0x30, 0x00, 0x21, 0x01, 0x70, 0x00, 0x22
    .byte 0x19, 0x80, 0x04, 0x38, 0x01, 0x80, 0x47, 0x46, 0x3A, 0x70, 0x31, 0x88, 0x04, 0x48, 0x08, 0x40
    .byte 0x80, 0x22, 0xD2, 0x00, 0x11, 0x1C, 0x08, 0x43, 0x30, 0x80, 0x2F, 0xE0, 0x80, 0xFE, 0xFF, 0xFF
    .byte 0xFF, 0x40, 0x00, 0x00, 0x90, 0x23, 0xDB, 0x00, 0xE0, 0x18, 0x08, 0x80, 0x26, 0xE0, 0x28, 0x1C
    .byte 0x9C, 0x30, 0x00, 0x23, 0x03, 0x80, 0x06, 0x38, 0x02, 0x88, 0xC0, 0x21, 0x09, 0x02, 0x08, 0x1C
    .byte 0x10, 0x40, 0x88, 0x42, 0x06, 0xD0, 0x00, 0x20, 0x44, 0x46, 0x20, 0x70, 0x28, 0x1C, 0x88, 0x30
    .byte 0x03, 0x80, 0x13, 0xE0, 0xC0, 0x21, 0x89, 0x00, 0x11, 0x40, 0x00, 0x29, 0x04, 0xD0, 0x29, 0x1C
    .byte 0xB0, 0x31, 0x03, 0x20, 0x08, 0x70, 0x02, 0xE0, 0x28, 0x1C, 0x88, 0x30, 0x01, 0x80, 0x28, 0x1C
    .byte 0x00, 0x21, 0x00, 0xF0, 0x09, 0xF8, 0x0F, 0x20, 0x45, 0x46, 0x28, 0x70
    thumb_func_start def_8038E6E
def_8038E6E: @ 08039684
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    thumb_func_start sub_8039690
sub_8039690:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r4, r0, #0x0
    adds r6, r1, #0x0
    adds r3, r4, #0x0
    adds r3, #0x82
    ldrh r5, [r3, #0x00]
    movs r0, #0x00
    ldsh r2, [r3, r0]
    ldr r7, _080396C8 @ =0x080EBE28
    cmp r2, #0x00
    beq _080396E2
    lsls r0, r6, #0x04
    adds r0, r0, r7
    ldrh r0, [r0, #0x0C]
    adds r1, r0, #0x0
    cmp r2, #0x00
    ble _080396CC
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    subs r0, r5, r0
    strh r0, [r3, #0x00]
    lsls r0, r0, #0x10
    cmp r0, #0x00
    bge _080396E2
    b _080396DE
    .byte 0x00, 0x00
_080396C8: .4byte 0x080EBE28
_080396CC:
    cmp r2, #0x00
    bge _080396E2
    lsls r0, r1, #0x10
    asrs r0, r0, #0x10
    adds r0, r0, r5
    strh r0, [r3, #0x00]
    lsls r0, r0, #0x10
    cmp r0, #0x00
    ble _080396E2
_080396DE:
    movs r0, #0x00
    strh r0, [r3, #0x00]
_080396E2:
    lsls r0, r6, #0x04
    adds r0, r0, r7
    ldrh r1, [r0, #0x08]
    mov r12, r1
    movs r7, #0x00
    movs r5, #0x00
    adds r0, r4, #0x0
    adds r0, #0x80
    ldrh r3, [r0, #0x00]
    movs r6, #0x00
    ldsh r2, [r0, r6]
    mov r8, r0
    cmp r2, #0x00
    ble _08039710
    lsls r0, r1, #0x10
    asrs r0, r0, #0x10
    subs r0, r3, r0
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    asrs r0, r0, #0x10
    mvns r0, r0
    lsrs r5, r0, #0x1F
    b _08039726
_08039710:
    cmp r2, #0x00
    bge _08039726
    mov r1, r12
    lsls r0, r1, #0x10
    asrs r0, r0, #0x10
    adds r0, r0, r3
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    cmp r0, #0x00
    bgt _08039726
    movs r5, #0x01
_08039726:
    cmp r5, #0x00
    beq _08039730
    mov r2, r8
    strh r7, [r2, #0x00]
    b _0803981E
_08039730:
    ldr r3, _080397E8 @ =0x03002E20
    adds r7, r3, #0x0
    adds r7, #0x24
    adds r2, r4, #0x0
    adds r2, #0xB4
    ldrh r1, [r2, #0x00]
    movs r0, #0x40
    ands r0, r1
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    adds r5, r2, #0x0
    cmp r1, #0x00
    beq _08039818
    adds r1, r4, #0x0
    adds r1, #0xBC
    adds r0, r4, #0x0
    adds r0, #0xA8
    ldr r0, [r0, #0x00]
    ldr r6, _080397EC @ =0xFF800000
    adds r0, r0, r6
    ldr r1, [r1, #0x00]
    cmp r1, r0
    blt _080397FC
    adds r0, r4, #0x0
    adds r0, #0x84
    ldrb r1, [r0, #0x00]
    adds r6, r0, #0x0
    cmp r1, #0x08
    beq _080397FC
    ldr r1, [r4, #0x48]
    movs r0, #0x80
    lsls r0, r0, #0x04
    ands r0, r1
    cmp r0, #0x00
    bne _0803981E
    ldr r2, _080397F0 @ =0x00000838
    adds r0, r3, r2
    ldr r0, [r0, #0x00]
    cmp r0, r4
    bne _0803978E
    movs r0, #0x20
    ands r1, r0
    cmp r1, #0x00
    bne _0803978E
    movs r0, #0x8C
    bl m4aSongNumStart
_0803978E:
    adds r0, r4, #0x0
    adds r0, #0xB0
    ldrb r0, [r0, #0x00]
    cmp r0, #0x03
    beq _080397B8
    ldr r3, _080397F4 @ =0x00000814
    adds r0, r7, r3
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _080397B8
    movs r1, #0x20
    ldsh r0, [r4, r1]
    movs r2, #0x22
    ldsh r1, [r4, r2]
    movs r3, #0x24
    ldsh r2, [r4, r3]
    subs r2, #0x01
    lsls r2, r2, #0x10
    asrs r2, r2, #0x10
    bl sub_805BD7C
_080397B8:
    adds r2, r4, #0x0
    adds r2, #0x7E
    movs r1, #0x00
    movs r0, #0x0E
    strb r0, [r2, #0x00]
    mov r0, r8
    strh r1, [r0, #0x00]
    adds r1, r4, #0x0
    adds r1, #0xCC
    movs r0, #0x30
    strh r0, [r1, #0x00]
    movs r0, #0x0C
    strb r0, [r6, #0x00]
    ldrh r1, [r5, #0x00]
    ldr r0, _080397F8 @ =0x0000FFBF
    ands r0, r1
    strh r0, [r5, #0x00]
    ldr r1, _080397E8 @ =0x03002E20
    adds r1, #0x24
    adds r0, r4, #0x0
    bl sub_80434D8
    b _0803981E
    .byte 0x00, 0x00
_080397E8: .4byte 0x03002E20
_080397EC: .4byte 0xFF800000
_080397F0: .4byte 0x00000838
_080397F4: .4byte 0x00000814
_080397F8: .4byte 0x0000FFBF
_080397FC:
    ldr r0, [r4, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x04
    ands r0, r1
    cmp r0, #0x00
    bne _0803981E
    ldrh r1, [r5, #0x00]
    ldr r0, _08039814 @ =0x0000FFBF
    ands r0, r1
    strh r0, [r5, #0x00]
    b _0803981E
    .byte 0x00, 0x00
_08039814: .4byte 0x0000FFBF
_08039818:
    adds r0, r4, #0x0
    adds r0, #0x7E
    strb r1, [r0, #0x00]
_0803981E:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    thumb_func_start sub_8039828
sub_8039828:
    push {r4, r5, r6, r7, lr}
    adds r6, r0, #0x0
    ldr r0, _08039890 @ =0x03002E20
    adds r7, r0, #0x0
    adds r7, #0x24
    adds r0, r6, #0x0
    adds r0, #0x90
    ldrb r5, [r0, #0x00]
    ldrb r1, [r0, #0x00]
    ldrh r0, [r7, #0x14]
    subs r0, #0x01
    cmp r1, r0
    bne _08039844
    subs r5, #0x01
_08039844:
    lsls r5, r5, #0x18
    lsrs r5, r5, #0x18
    adds r0, r7, #0x0
    adds r1, r5, #0x0
    movs r2, #0x00
    bl sub_8032AD0
    adds r4, r0, #0x0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    adds r0, r7, #0x0
    adds r1, r5, #0x0
    movs r2, #0x00
    bl sub_8032B10
    adds r5, r0, #0x0
    lsls r4, r4, #0x10
    asrs r4, r4, #0x0D
    lsls r5, r5, #0x10
    asrs r5, r5, #0x0D
    adds r0, r7, #0x0
    adds r1, r4, #0x0
    adds r2, r5, #0x0
    movs r3, #0x00
    bl sub_803285C
    adds r1, r6, #0x0
    adds r1, #0xA2
    strh r0, [r1, #0x00]
    adds r0, r6, #0x0
    adds r0, #0x9E
    strh r4, [r0, #0x00]
    adds r0, #0x02
    strh r5, [r0, #0x00]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08039890: .4byte 0x03002E20
    thumb_func_start sub_8039894
sub_8039894:
    push {r4, r5, r6, lr}
    mov r12, r0
    mov r2, r12
    adds r2, #0x7C
    adds r0, #0xA2
    ldrh r4, [r2, #0x00]
    ldrh r3, [r0, #0x00]
    subs r0, r4, r3
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    adds r5, r1, #0x0
    movs r6, #0x00
    cmp r1, #0x00
    beq _080398E0
    lsls r0, r1, #0x10
    cmp r0, #0x00
    ble _080398C8
    ldr r0, _080398C0 @ =0x000001FF
    cmp r1, r0
    bls _080398DC
    ldr r1, _080398C4 @ =0xFFFFFEC0
    b _080398D2
_080398C0: .4byte 0x000001FF
_080398C4: .4byte 0xFFFFFEC0
_080398C8:
    ldr r0, _080398D8 @ =0x0000FDFF
    cmp r5, r0
    bhi _080398DC
    movs r1, #0xA0
    lsls r1, r1, #0x01
_080398D2:
    adds r0, r4, r1
    strh r0, [r2, #0x00]
    b _080398DE
_080398D8: .4byte 0x0000FDFF
_080398DC:
    strh r3, [r2, #0x00]
_080398DE:
    movs r6, #0x01
_080398E0:
    mov r1, r12
    adds r1, #0x7C
    ldrh r0, [r1, #0x00]
    mov r2, r12
    adds r2, #0x56
    strh r0, [r2, #0x00]
    ldrh r1, [r1, #0x00]
    mov r0, r12
    adds r0, #0x7A
    strh r1, [r0, #0x00]
    movs r0, #0x00
    cmp r6, #0x00
    bne _080398FC
    movs r0, #0x01
_080398FC:
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_8039904
sub_8039904:
    push {r4, r5, r6, r7, lr}
    mov r12, r0
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    mov r5, r12
    adds r5, #0xBC
    ldr r0, [r5, #0x00]
    cmp r0, #0x00
    bge _0803991A
    ldr r2, _08039994 @ =0x0000FFFF
    adds r0, r0, r2
_0803991A:
    lsrs r2, r0, #0x10
    ldr r7, _08039998 @ =0x080E645C
    lsls r0, r1, #0x10
    asrs r3, r0, #0x10
    adds r1, r3, #0x0
    cmp r3, #0x00
    bge _0803992A
    adds r1, #0x3F
_0803992A:
    asrs r6, r1, #0x06
    ldr r1, _0803999C @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r6, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    adds r1, r1, r7
    ldr r1, [r1, #0x00]
    lsls r0, r2, #0x10
    asrs r4, r0, #0x10
    adds r0, r4, #0x0
    cmp r4, #0x00
    bge _08039946
    negs r0, r4
_08039946:
    muls r0, r1
    cmp r0, #0x00
    bge _08039950
    ldr r2, _080399A0 @ =0x00007FFF
    adds r0, r0, r2
_08039950:
    asrs r0, r0, #0x0F
    mov r2, r12
    adds r2, #0x52
    strh r0, [r2, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r6
    ldr r1, _0803999C @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r7
    ldr r0, [r0, #0x00]
    ldrh r2, [r5, #0x00]
    muls r0, r4
    cmp r0, #0x00
    bge _08039974
    ldr r3, _080399A0 @ =0x00007FFF
    adds r0, r0, r3
_08039974:
    asrs r0, r0, #0x0F
    lsls r0, r0, #0x10
    orrs r2, r0
    str r2, [r5, #0x00]
    mov r2, r12
    adds r2, #0xB4
    ldrh r0, [r2, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x08
    adds r1, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08039994: .4byte 0x0000FFFF
_08039998: .4byte 0x080E645C
_0803999C: .4byte 0x000003FF
_080399A0: .4byte 0x00007FFF
    thumb_func_start sub_80399A4
sub_80399A4:
    push {r4, r5, r6, r7, lr}
    adds r6, r0, #0x0
    adds r7, r1, #0x0
    adds r0, #0xBC
    movs r4, #0x00
    str r4, [r0, #0x00]
    adds r0, #0x04
    str r4, [r0, #0x00]
    subs r0, #0x38
    movs r5, #0x00
    strh r4, [r0, #0x00]
    subs r0, #0x0A
    strb r5, [r0, #0x00]
    adds r0, #0x02
    strh r4, [r0, #0x00]
    adds r0, #0x02
    strh r4, [r0, #0x00]
    adds r0, r6, #0x0
    bl sub_8039828
    ldr r0, [r6, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _080399DE
    movs r0, #0xC0
    lsls r0, r0, #0x0E
    str r0, [r6, #0x08]
_080399DE:
    adds r2, r6, #0x0
    adds r2, #0xA4
    ldrh r0, [r2, #0x00]
    movs r1, #0x10
    orrs r0, r1
    strh r0, [r2, #0x00]
    adds r0, r6, #0x0
    adds r0, #0x84
    movs r1, #0x03
    strb r1, [r0, #0x00]
    subs r0, #0x0C
    strb r1, [r0, #0x00]
    ldr r0, [r6, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x04
    orrs r0, r1
    str r0, [r6, #0x48]
    adds r1, #0x14
    adds r0, r7, r1
    ldr r1, [r0, #0x00]
    adds r0, r6, #0x0
    adds r0, #0x92
    strh r4, [r0, #0x00]
    adds r0, #0x02
    strh r4, [r0, #0x00]
    cmp r6, r1
    bne _08039A62
    ldr r0, [r6, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08039A62
    ldr r0, _08039A94 @ =0x080ECBA8
    ldrh r0, [r0, #0x00]
    ldr r5, _08039A98 @ =0x08102414
    ldr r4, _08039A9C @ =0x08102498
    lsls r0, r0, #0x03
    adds r0, r0, r4
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayStop
    movs r0, #0xA1
    lsls r0, r0, #0x03
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayStop
    movs r1, #0xCD
    lsls r1, r1, #0x01
    adds r2, r6, r1
    ldrb r1, [r2, #0x00]
    movs r0, #0xFC
    ands r0, r1
    movs r1, #0xDF
    ands r0, r1
    strb r0, [r2, #0x00]
_08039A62:
    adds r1, r6, #0x0
    adds r1, #0x68
    movs r0, #0x00
    strh r0, [r1, #0x00]
    adds r2, r6, #0x0
    adds r2, #0x58
    ldrh r1, [r2, #0x00]
    movs r0, #0x10
    orrs r0, r1
    strh r0, [r2, #0x00]
    ldr r0, [r6, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x06
    ands r0, r1
    cmp r0, #0x00
    beq _08039A8C
    adds r2, #0x5C
    ldrh r1, [r2, #0x00]
    ldr r0, _08039AA0 @ =0x0000F5FF
    ands r0, r1
    strh r0, [r2, #0x00]
_08039A8C:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08039A94: .4byte 0x080ECBA8
_08039A98: .4byte 0x08102414
_08039A9C: .4byte 0x08102498
_08039AA0: .4byte 0x0000F5FF
    thumb_func_start sub_8039AA4
sub_8039AA4:
    push {r4, lr}
    adds r4, r0, #0x0
    adds r1, r4, #0x0
    adds r1, #0x86
    ldrb r0, [r1, #0x00]
    cmp r0, #0x09
    bls _08039AD0
    adds r2, r4, #0x0
    adds r2, #0xBC
    ldr r0, _08039B28 @ =0x080EC268
    ldrb r1, [r1, #0x00]
    subs r1, #0x0A
    lsls r1, r1, #0x02
    adds r1, r1, r0
    ldr r0, [r1, #0x00]
    lsls r0, r0, #0x10
    ldr r1, [r2, #0x00]
    cmp r1, r0
    blt _08039AD0
    ldr r3, _08039B2C @ =0xFFC00000
    adds r0, r1, r3
    str r0, [r2, #0x00]
_08039AD0:
    ldr r0, _08039B30 @ =0x03002E20
    ldr r1, _08039B34 @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _08039AFA
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08039AFA
    movs r0, #0x9C
    bl m4aSongNumStart
    movs r3, #0xCD
    lsls r3, r3, #0x01
    adds r2, r4, r3
    ldrb r1, [r2, #0x00]
    movs r0, #0xEF
    ands r0, r1
    strb r0, [r2, #0x00]
_08039AFA:
    adds r1, r4, #0x0
    adds r1, #0x52
    movs r0, #0xE0
    strh r0, [r1, #0x00]
    adds r1, #0x26
    movs r0, #0x01
    strb r0, [r1, #0x00]
    adds r2, r4, #0x0
    adds r2, #0xB4
    ldrh r1, [r2, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x08
    adds r0, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    ldr r0, [r4, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x04
    orrs r0, r1
    str r0, [r4, #0x48]
    pop {r4}
    pop {r0}
    bx r0
_08039B28: .4byte 0x080EC268
_08039B2C: .4byte 0xFFC00000
_08039B30: .4byte 0x03002E20
_08039B34: .4byte 0x00000838
    thumb_func_start sub_8039B38
sub_8039B38:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    adds r6, r0, #0x0
    ldr r0, _08039B64 @ =0x03002E20
    adds r7, r0, #0x0
    adds r7, #0x24
    mov r10, r7
    adds r0, r6, #0x0
    adds r0, #0x78
    ldrb r0, [r0, #0x00]
    cmp r0, #0x09
    bls _08039B5A
    bl def_8039B62
_08039B5A:
    lsls r0, r0, #0x02
    ldr r1, _08039B68 @ =0x08039B6C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08039B64: .4byte 0x03002E20
_08039B68: .4byte 0x08039B6C
    .byte 0x94, 0x9B, 0x03, 0x08, 0x8C, 0xA5, 0x03, 0x08, 0x30, 0xA6, 0x03, 0x08, 0xC4, 0xA6, 0x03, 0x08
    .byte 0xF4, 0xA6, 0x03, 0x08, 0xC4, 0xA6, 0x03, 0x08, 0x00, 0xA8, 0x03, 0x08, 0x04, 0xA9, 0x03, 0x08
    .byte 0x44, 0xA9, 0x03, 0x08, 0x4C, 0xA9, 0x03, 0x08, 0x30, 0x1C, 0x96, 0x30, 0x01, 0x88, 0x80, 0x20
    .byte 0x00, 0x02, 0x08, 0x40, 0x00, 0x28, 0x0D, 0xD0, 0xC0, 0x20, 0x80, 0x00, 0x08, 0x40, 0x00, 0x28
    .byte 0x08, 0xD0, 0x10, 0x20, 0x08, 0x40, 0x00, 0x28, 0x04, 0xD0, 0x31, 0x1C, 0x9C, 0x31, 0x08, 0x88
    .byte 0x01, 0x30, 0x02, 0xE0, 0x31, 0x1C, 0x9C, 0x31, 0x00, 0x20, 0x08, 0x80, 0x89, 0x46, 0xB1, 0x6C
    .byte 0x80, 0x20, 0x40, 0x01, 0x08, 0x40, 0x00, 0x28, 0x0B, 0xD0, 0x80, 0x20, 0x80, 0x01, 0x01, 0x40
    .byte 0x00, 0x29, 0x03, 0xD0, 0x30, 0x1C, 0x01, 0xF0, 0x19, 0xF9, 0x02, 0xE0, 0x30, 0x1C, 0x01, 0xF0
    .byte 0xBF, 0xF8, 0x30, 0x1C, 0x00, 0xF0, 0xDC, 0xFE, 0x30, 0x1C, 0x85, 0x30, 0x03, 0x78, 0x19, 0x06
    .byte 0x0A, 0x0E, 0x04, 0x1C, 0x3F, 0x2A, 0x01, 0xD9, 0x00, 0xF0, 0xB8, 0xFC, 0x1F, 0x2A, 0x00, 0xD8
    .byte 0x58, 0xE2, 0x31, 0x1C, 0xB4, 0x31, 0x0A, 0x88, 0x80, 0x20, 0xC0, 0x01, 0x10, 0x40, 0x08, 0x80
    .byte 0x20, 0x78, 0x0F, 0x23, 0x03, 0x40, 0x0A, 0x1C, 0x02, 0x2B, 0x04, 0xD1, 0x30, 0x1C, 0x7E, 0x30
    .byte 0x00, 0x78, 0x0D, 0x28, 0x05, 0xD0, 0x0A, 0x2B, 0x03, 0xD0, 0x31, 0x1C, 0x7E, 0x31, 0x0E, 0x20
    .byte 0x08, 0x70, 0x20, 0x78, 0x0F, 0x21, 0x01, 0x40, 0x0A, 0x29, 0x01, 0xD9, 0x00, 0xF0, 0xA8, 0xFE
    .byte 0x88, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00, 0x5C, 0x9C, 0x03, 0x08
    .byte 0x9E, 0x9C, 0x03, 0x08, 0x9C, 0xA9, 0x03, 0x08, 0xAC, 0x9D, 0x03, 0x08, 0x9C, 0xA9, 0x03, 0x08
    .byte 0x74, 0x9F, 0x03, 0x08, 0x9C, 0xA9, 0x03, 0x08, 0xD8, 0x9F, 0x03, 0x08, 0x9C, 0xA9, 0x03, 0x08
    .byte 0x88, 0x9C, 0x03, 0x08, 0x9C, 0xA9, 0x03, 0x08, 0xA8, 0xA0, 0x03, 0x08, 0xB0, 0x6C, 0x80, 0x21
    .byte 0x89, 0x01, 0x08, 0x40, 0x00, 0x28, 0x04, 0xD0, 0x30, 0x1C, 0xFF, 0xF7, 0x05, 0xFF, 0x00, 0xF0
    .byte 0x7F, 0xFE, 0x0C, 0x49, 0x78, 0x18, 0x02, 0x68, 0x90, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x58, 0x23
    .byte 0x9B, 0x19, 0x98, 0x46, 0x00, 0x28, 0x46, 0xD1, 0xB2, 0x42, 0x0D, 0xD0, 0x38, 0x1C, 0x31, 0x1C
    .byte 0x13, 0xF0, 0x34, 0xF8, 0x00, 0x04, 0x03, 0x0C, 0x3F, 0x2B, 0x00, 0xDC, 0x40, 0x23, 0x01, 0x20
    .byte 0x05, 0xE0, 0x00, 0x00, 0x14, 0x08, 0x00, 0x00, 0x80, 0x23, 0x5B, 0x00, 0x00, 0x20, 0x09, 0x4F
    .byte 0x85, 0x00, 0x30, 0x1C, 0x4C, 0x30, 0x01, 0x78, 0x07, 0x20, 0x08, 0x40, 0xC4, 0x00, 0x32, 0x1C
    .byte 0x58, 0x32, 0x11, 0x88, 0x10, 0x20, 0x08, 0x40, 0x90, 0x46, 0x00, 0x28, 0x04, 0xD1, 0xA0, 0x1C
    .byte 0x28, 0x18, 0x02, 0xE0, 0x08, 0xCC, 0x0E, 0x08, 0x28, 0x19, 0x38, 0x18, 0x04, 0x88, 0x1F, 0x1C
    .byte 0x00, 0x2F, 0x18, 0xD0, 0x20, 0x1C, 0x26, 0xF0, 0x05, 0xF9, 0x22, 0x4D, 0x22, 0x48, 0xE4, 0x00
    .byte 0x24, 0x18, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x26, 0xF0
    .byte 0xF1, 0xF9, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x01, 0x21
    .byte 0x3A, 0x1C, 0x27, 0xF0, 0x9F, 0xF8, 0x30, 0x1C, 0xBC, 0x30, 0x00, 0x22, 0x02, 0x60, 0x04, 0x30
    .byte 0x02, 0x60, 0x38, 0x38, 0x00, 0x21, 0x02, 0x80, 0x0A, 0x38, 0x01, 0x70, 0x02, 0x30, 0x02, 0x80
    .byte 0x02, 0x30, 0x02, 0x80, 0x3C, 0x20, 0x4C, 0x46, 0x20, 0x80, 0xC4, 0x30, 0xB0, 0x60, 0xB1, 0x8E
    .byte 0x0E, 0x48, 0x08, 0x40, 0xB0, 0x86, 0x30, 0x1C, 0x84, 0x30, 0x02, 0x21, 0x01, 0x70, 0x0C, 0x38
    .byte 0x01, 0x70, 0xB0, 0x6C, 0x80, 0x21, 0x09, 0x01, 0x08, 0x43, 0xB0, 0x64, 0x30, 0x1C, 0x68, 0x30
    .byte 0x02, 0x80, 0x41, 0x46, 0x08, 0x88, 0x10, 0x21, 0x08, 0x43, 0x42, 0x46, 0x10, 0x80, 0x00, 0xF0
    .byte 0xFF, 0xFD, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08, 0xFD, 0xFF, 0x00, 0x00
    .byte 0x34, 0x1C, 0xBC, 0x34, 0x21, 0x68, 0x05, 0x48, 0x81, 0x42, 0x55, 0xDD, 0x23, 0x1C, 0x80, 0x20
    .byte 0xC0, 0x04, 0x81, 0x42, 0x06, 0xDD, 0x02, 0x4C, 0x05, 0xE0, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x01
    .byte 0x00, 0x00, 0x40, 0xFD, 0x1E, 0x4C, 0x08, 0x19, 0x18, 0x60, 0x11, 0x88, 0x10, 0x20, 0x08, 0x43
    .byte 0x10, 0x80, 0x80, 0x24, 0x24, 0x01, 0x30, 0x1C, 0x21, 0x1C, 0xFF, 0xF7, 0x8D, 0xFD, 0x30, 0x1C
    .byte 0x84, 0x30, 0x01, 0x21, 0x01, 0x70, 0x0C, 0x38, 0x01, 0x70, 0xB1, 0x6C, 0x21, 0x43, 0xB1, 0x64
    .byte 0x14, 0x4A, 0xB8, 0x18, 0x00, 0x68, 0x86, 0x42, 0x01, 0xD0, 0x00, 0xF0, 0xC9, 0xFD, 0x20, 0x25
    .byte 0x0D, 0x40, 0x00, 0x2D, 0x01, 0xD0, 0x00, 0xF0, 0xC3, 0xFD, 0x0F, 0x4B, 0xFC, 0x18, 0x20, 0x88
    .byte 0x00, 0x28, 0x01, 0xD1, 0x00, 0xF0, 0xBC, 0xFD, 0x0C, 0x4B, 0x0D, 0x4A, 0xC0, 0x00, 0x80, 0x18
    .byte 0x81, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0xC0, 0x18, 0x00, 0x68, 0x91, 0x68, 0x26, 0xF0
    .byte 0xE7, 0xFB, 0x25, 0x80, 0x07, 0x4C, 0x38, 0x19, 0x05, 0x80, 0x00, 0xF0, 0xA9, 0xFD, 0x00, 0x00
    .byte 0x00, 0x00, 0x60, 0xFF, 0x14, 0x08, 0x00, 0x00, 0x7C, 0x0C, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08
    .byte 0x98, 0x24, 0x10, 0x08, 0x7E, 0x0C, 0x00, 0x00, 0x11, 0x88, 0x1A, 0x48, 0x08, 0x40, 0x00, 0x23
    .byte 0x00, 0x21, 0x10, 0x80, 0xB1, 0x60, 0x30, 0x1C, 0x52, 0x30, 0x01, 0x80, 0x21, 0x60, 0x6E, 0x30
    .byte 0x01, 0x60, 0x38, 0x38, 0x01, 0x80, 0x32, 0x1C, 0x7E, 0x32, 0x13, 0x70, 0x08, 0x38, 0x01, 0x80
    .byte 0x02, 0x30, 0x01, 0x80, 0x90, 0x20, 0x49, 0x46, 0x08, 0x80, 0x0F, 0x4B, 0xF8, 0x18, 0x00, 0x68
    .byte 0x14, 0x1C, 0x86, 0x42, 0x0A, 0xD1, 0x20, 0x21, 0x70, 0x5E, 0x22, 0x22, 0xB1, 0x5E, 0x24, 0x23
    .byte 0xF2, 0x5E, 0x01, 0x3A, 0x12, 0x04, 0x12, 0x14, 0x21, 0xF0, 0x86, 0xFF, 0x50, 0x46, 0xF8, 0xF7
    .byte 0xB7, 0xFE, 0x00, 0x06, 0x00, 0x0E, 0x08, 0x28, 0x08, 0xD1, 0x30, 0x1C, 0x0B, 0x21, 0x03, 0xF0
    .byte 0xA3, 0xF9, 0x07, 0xE0, 0x02, 0x40, 0x00, 0x00, 0x14, 0x08, 0x00, 0x00, 0x30, 0x1C, 0x0D, 0x21
    .byte 0x03, 0xF0, 0x9A, 0xF9, 0x30, 0x1C, 0x84, 0x30, 0x00, 0x22, 0x04, 0x21, 0x01, 0x70, 0x0C, 0x38
    .byte 0x01, 0x70, 0xB0, 0x6C, 0x80, 0x21, 0x09, 0x01, 0x08, 0x43, 0xB0, 0x64, 0x14, 0x31, 0x78, 0x18
    .byte 0x01, 0x68, 0x30, 0x1C, 0x92, 0x30, 0x02, 0x80, 0x02, 0x30, 0x02, 0x80, 0x8E, 0x42, 0x21, 0xD1
    .byte 0xB0, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x1C, 0xD1, 0x14, 0x48, 0x00, 0x88, 0x14, 0x4A
    .byte 0x14, 0x49, 0xC0, 0x00, 0x40, 0x18, 0x81, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x80, 0x18
    .byte 0x00, 0x68, 0x26, 0xF0, 0xDF, 0xFB, 0x8A, 0x20, 0x25, 0xF0, 0xF4, 0xFF, 0xA1, 0x20, 0x25, 0xF0
    .byte 0xF1, 0xFF, 0xCD, 0x23, 0x5B, 0x00, 0xF2, 0x18, 0x11, 0x78, 0xFC, 0x20, 0x08, 0x40, 0x20, 0x21
    .byte 0x08, 0x43, 0x10, 0x70, 0xCD, 0x20, 0x40, 0x00, 0x32, 0x18, 0x10, 0x78, 0xEF, 0x21, 0x01, 0x40
    .byte 0x11, 0x70, 0x0E, 0x20, 0x20, 0x70, 0x00, 0xF0, 0x1B, 0xFD, 0x00, 0x00, 0xA8, 0xCB, 0x0E, 0x08
    .byte 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08, 0x17, 0x49, 0x78, 0x18, 0x00, 0x68, 0x86, 0x42
    .byte 0x0A, 0xD1, 0x20, 0x22, 0xB0, 0x5E, 0x22, 0x23, 0xF1, 0x5E, 0x24, 0x24, 0x32, 0x5F, 0x01, 0x3A
    .byte 0x12, 0x04, 0x12, 0x14, 0x21, 0xF0, 0x18, 0xFF, 0x30, 0x1C, 0x39, 0x1C, 0xFF, 0xF7, 0x04, 0xFD
    .byte 0x0D, 0x49, 0x78, 0x18, 0x00, 0x68, 0x86, 0x42, 0x07, 0xD1, 0xB0, 0x6C, 0x20, 0x21, 0x08, 0x40
    .byte 0x00, 0x28, 0x02, 0xD1, 0x8B, 0x20, 0x25, 0xF0, 0xB5, 0xFF, 0x32, 0x1C, 0x74, 0x32, 0x11, 0x88
    .byte 0x80, 0x23, 0x9B, 0x01, 0x18, 0x1C, 0x08, 0x43, 0x10, 0x80, 0x30, 0x1C, 0x03, 0x21, 0x03, 0xF0
    .byte 0x23, 0xF9, 0x00, 0xF0, 0xE5, 0xFC, 0x00, 0x00, 0x14, 0x08, 0x00, 0x00, 0x30, 0x1C, 0xFF, 0xF7
    .byte 0x25, 0xFC, 0x30, 0x1C, 0xBC, 0x30, 0x00, 0x22, 0x02, 0x60, 0x04, 0x30, 0x02, 0x60, 0x38, 0x38
    .byte 0x00, 0x21, 0x02, 0x80, 0x0A, 0x38, 0x01, 0x70, 0x02, 0x30, 0x02, 0x80, 0x02, 0x30, 0x02, 0x80
    .byte 0x33, 0x1C, 0xA4, 0x33, 0x18, 0x88, 0x20, 0x21, 0x08, 0x43, 0x18, 0x80, 0x30, 0x1C, 0x84, 0x30
    .byte 0x05, 0x21, 0x01, 0x70, 0x0C, 0x38, 0x01, 0x70, 0xB0, 0x6C, 0x80, 0x21, 0x09, 0x01, 0x08, 0x43
    .byte 0xB0, 0x64, 0x1E, 0x4C, 0x38, 0x19, 0x01, 0x68, 0x30, 0x1C, 0x92, 0x30, 0x02, 0x80, 0x02, 0x30
    .byte 0x02, 0x80, 0x8E, 0x42, 0x26, 0xD1, 0xB0, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x21, 0xD1
    .byte 0x17, 0x48, 0x00, 0x88, 0x17, 0x4D, 0x18, 0x4C, 0xC0, 0x00, 0x00, 0x19, 0x81, 0x88, 0x48, 0x00
    .byte 0x40, 0x18, 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x26, 0xF0, 0x4C, 0xFB, 0xA1, 0x20, 0xC0, 0x00
    .byte 0x24, 0x18, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x26, 0xF0
    .byte 0x41, 0xFB, 0xCD, 0x21, 0x49, 0x00, 0x72, 0x18, 0x11, 0x78, 0xFC, 0x20, 0x08, 0x40, 0xDF, 0x21
    .byte 0x08, 0x40, 0x10, 0x70, 0x31, 0x1C, 0x68, 0x31, 0x00, 0x20, 0x08, 0x80, 0x32, 0x1C, 0x58, 0x32
    .byte 0x11, 0x88, 0x10, 0x20, 0x08, 0x43, 0x10, 0x80, 0x00, 0xF0, 0x82, 0xFC, 0x14, 0x08, 0x00, 0x00
    .byte 0xA8, 0xCB, 0x0E, 0x08, 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08, 0xB0, 0x6C, 0x20, 0x21
    .byte 0x08, 0x40, 0x00, 0x28, 0x01, 0xD0, 0x00, 0xF0, 0x73, 0xFC, 0x30, 0x1C, 0x06, 0xF0, 0xC4, 0xFC
    .byte 0x00, 0xF0, 0x6E, 0xFC, 0x0F, 0x20, 0x18, 0x40, 0x0E, 0x28, 0x01, 0xD9, 0x00, 0xF0, 0x68, 0xFC
    .byte 0x80, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00, 0xDC, 0xA0, 0x03, 0x08
    .byte 0x18, 0xA1, 0x03, 0x08, 0x9C, 0xA9, 0x03, 0x08, 0x1C, 0xA2, 0x03, 0x08, 0x9C, 0xA9, 0x03, 0x08
    .byte 0x9C, 0xA9, 0x03, 0x08, 0x9C, 0xA9, 0x03, 0x08, 0xB4, 0xA2, 0x03, 0x08, 0x9C, 0xA9, 0x03, 0x08
    .byte 0x74, 0xA3, 0x03, 0x08, 0x9C, 0xA9, 0x03, 0x08, 0xE8, 0xA4, 0x03, 0x08, 0x9C, 0xA9, 0x03, 0x08
    .byte 0xA0, 0xA3, 0x03, 0x08, 0x9C, 0xA9, 0x03, 0x08, 0x48, 0xA4, 0x03, 0x08, 0x15, 0x4A, 0xB8, 0x18
    .byte 0x00, 0x68, 0x84, 0x23, 0x9B, 0x19, 0x98, 0x46, 0x86, 0x42, 0x37, 0xD1, 0xB4, 0x6C, 0x20, 0x20
    .byte 0x04, 0x40, 0x00, 0x2C, 0x32, 0xD1, 0x10, 0x48, 0x3D, 0x18, 0x28, 0x88, 0x00, 0x28, 0x10, 0xD0
    .byte 0x0E, 0x4B, 0x0F, 0x4A, 0xC0, 0x00, 0x80, 0x18, 0x81, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00
    .byte 0xC0, 0x18, 0x00, 0x68, 0x91, 0x68, 0x26, 0xF0, 0x5B, 0xFA, 0x2C, 0x80, 0x09, 0x49, 0x78, 0x18
    .byte 0x04, 0x80, 0x42, 0x46, 0x10, 0x78, 0x08, 0x28, 0x0E, 0xD1, 0x9E, 0x20, 0x25, 0xF0, 0xDA, 0xFE
    .byte 0x0D, 0xE0, 0x00, 0x00, 0x14, 0x08, 0x00, 0x00, 0x7C, 0x0C, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08
    .byte 0x98, 0x24, 0x10, 0x08, 0x7E, 0x0C, 0x00, 0x00, 0x9D, 0x20, 0x25, 0xF0, 0xCB, 0xFE, 0xCD, 0x23
    .byte 0x5B, 0x00, 0xF2, 0x18, 0x11, 0x78, 0xEF, 0x20, 0x08, 0x40, 0x10, 0x70, 0x30, 0x1C, 0xBC, 0x30
    .byte 0x02, 0x68, 0x03, 0x49, 0x04, 0x1C, 0x8A, 0x42, 0x04, 0xD8, 0xB8, 0x20, 0x80, 0x04, 0x06, 0xE0
    .byte 0xFF, 0xFF, 0xDF, 0x02, 0x00, 0x2A, 0x03, 0xDA, 0x08, 0x48, 0x82, 0x42, 0x00, 0xDD, 0x20, 0x60
    .byte 0x50, 0x46, 0xF8, 0xF7, 0x35, 0xFD, 0x00, 0x06, 0x00, 0x0E, 0x0C, 0x28, 0x08, 0xD1, 0xE8, 0x21
    .byte 0x89, 0x04, 0x20, 0x68, 0x88, 0x42, 0x0E, 0xDD, 0x21, 0x60, 0x0C, 0xE0, 0x00, 0x00, 0x20, 0xFD
    .byte 0xB0, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x05, 0xD0, 0x21, 0x68, 0x0B, 0x48, 0x81, 0x42
    .byte 0x01, 0xDC, 0x01, 0x30, 0x20, 0x60, 0xE0, 0x21, 0x09, 0x01, 0x30, 0x1C, 0xFF, 0xF7, 0x84, 0xFB
    .byte 0xA0, 0x20, 0x80, 0x02, 0xB0, 0x60, 0x01, 0x21, 0x44, 0x46, 0x21, 0x70, 0x30, 0x1C, 0x78, 0x30
    .byte 0x01, 0x70, 0xB0, 0x6C, 0x80, 0x21, 0x09, 0x01, 0xC0, 0xE3, 0x00, 0x00, 0xFF, 0xFF, 0x7F, 0x05
    .byte 0x30, 0x1C, 0xBC, 0x30, 0x01, 0x68, 0x1E, 0x48, 0x81, 0x42, 0x00, 0xDC, 0xB8, 0xE3, 0x1D, 0x49
    .byte 0x78, 0x18, 0x00, 0x68, 0x86, 0x42, 0x24, 0xD1, 0xB4, 0x6C, 0x20, 0x20, 0x04, 0x40, 0x00, 0x2C
    .byte 0x1F, 0xD1, 0x19, 0x4A, 0xBD, 0x18, 0x28, 0x88, 0x00, 0x28, 0x10, 0xD0, 0x17, 0x4B, 0x18, 0x4A
    .byte 0xC0, 0x00, 0x80, 0x18, 0x81, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0xC0, 0x18, 0x00, 0x68
    .byte 0x91, 0x68, 0x26, 0xF0, 0xD5, 0xF9, 0x2C, 0x80, 0x12, 0x4B, 0xF8, 0x18, 0x04, 0x80, 0x9B, 0x20
    .byte 0x25, 0xF0, 0x58, 0xFE, 0xCD, 0x24, 0x64, 0x00, 0x32, 0x19, 0x11, 0x78, 0xEF, 0x20, 0x08, 0x40
    .byte 0x10, 0x70, 0xD0, 0x21, 0x09, 0x01, 0x30, 0x1C, 0xFF, 0xF7, 0x3E, 0xFB, 0x30, 0x1C, 0x84, 0x30
    .byte 0x01, 0x21, 0x01, 0x70, 0x0C, 0x38, 0x01, 0x70, 0xB0, 0x6C, 0x80, 0x21, 0x09, 0x01, 0x7D, 0xE3
    .byte 0xFF, 0xFF, 0x7F, 0x01, 0x14, 0x08, 0x00, 0x00, 0x7C, 0x0C, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08
    .byte 0x98, 0x24, 0x10, 0x08, 0x7E, 0x0C, 0x00, 0x00, 0x29, 0x4A, 0x31, 0x1C, 0x7E, 0x31, 0x08, 0x78
    .byte 0x80, 0x00, 0x80, 0x18, 0x00, 0x68, 0x0C, 0x1C, 0x00, 0x28, 0x00, 0xD0, 0x68, 0xE3, 0x4E, 0x31
    .byte 0x22, 0x20, 0x08, 0x80, 0x23, 0x49, 0x78, 0x18, 0x00, 0x68, 0xB0, 0x42, 0x1A, 0xD1, 0xB0, 0x6C
    .byte 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x15, 0xD1, 0x1F, 0x4B, 0x30, 0x1C, 0x4C, 0x30, 0x00, 0x78
    .byte 0x07, 0x21, 0x01, 0x40, 0x30, 0x1C, 0x58, 0x30, 0x02, 0x88, 0x10, 0x20, 0x10, 0x40, 0x89, 0x00
    .byte 0x00, 0x28, 0x00, 0xD1, 0x02, 0x31, 0xC8, 0x18, 0x00, 0x88, 0x25, 0xF0, 0x0B, 0xFE, 0x7D, 0x20
    .byte 0x25, 0xF0, 0x08, 0xFE, 0x32, 0x1C, 0xB4, 0x32, 0x11, 0x88, 0x80, 0x20, 0x08, 0x43, 0x10, 0x80
    .byte 0x31, 0x1C, 0x84, 0x31, 0x08, 0x20, 0x08, 0x70, 0x0E, 0x20, 0x20, 0x70, 0x11, 0x88, 0x01, 0x20
    .byte 0x08, 0x40, 0x00, 0x28, 0x00, 0xD1, 0x33, 0xE3, 0x0C, 0x48, 0x08, 0x40, 0x10, 0x80, 0x0C, 0x48
    .byte 0x0C, 0x4A, 0x80, 0x18, 0x00, 0x68, 0x86, 0x42, 0x00, 0xD0, 0x29, 0xE3, 0xB0, 0x6C, 0x20, 0x21
    .byte 0x08, 0x40, 0x00, 0x28, 0x00, 0xD0, 0x23, 0xE3, 0xA3, 0x20, 0x25, 0xF0, 0x49, 0xFE, 0x1F, 0xE3
    .byte 0x80, 0xC2, 0x0E, 0x08, 0x14, 0x08, 0x00, 0x00, 0x48, 0xCC, 0x0E, 0x08, 0xDE, 0xFF, 0x00, 0x00
    .byte 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x32, 0x1C, 0xB4, 0x32, 0x11, 0x88, 0x02, 0x20
    .byte 0x08, 0x40, 0x00, 0x04, 0x03, 0x0C, 0x00, 0x2B, 0x56, 0xD1, 0x30, 0x1C, 0xBC, 0x30, 0x01, 0x68
    .byte 0x03, 0x48, 0x81, 0x42, 0x50, 0xDD, 0x30, 0x1C, 0x82, 0x30, 0x00, 0x24, 0x00, 0x5F, 0x38, 0xE0
    .byte 0xFF, 0xFF, 0xFF, 0x02, 0xB0, 0x6C, 0x80, 0x21, 0x89, 0x01, 0x08, 0x40, 0x00, 0x28, 0x1D, 0xD0
    .byte 0x32, 0x1C, 0xBC, 0x32, 0x11, 0x68, 0x0C, 0x48, 0x81, 0x42, 0x01, 0xDC, 0x01, 0x30, 0x10, 0x60
    .byte 0x31, 0x1C, 0x52, 0x31, 0x80, 0x20, 0x40, 0x00, 0x08, 0x80, 0x26, 0x31, 0x01, 0x20, 0x08, 0x70
    .byte 0x32, 0x1C, 0xB4, 0x32, 0x11, 0x88, 0x80, 0x24, 0x24, 0x02, 0x20, 0x1C, 0x08, 0x43, 0x10, 0x80
    .byte 0xB0, 0x6C, 0x80, 0x21, 0x09, 0x01, 0xD9, 0xE2, 0xFF, 0xFF, 0xFF, 0x00, 0x32, 0x1C, 0xB4, 0x32
    .byte 0x11, 0x88, 0x02, 0x20, 0x08, 0x40, 0x00, 0x04, 0x03, 0x0C, 0x00, 0x2B, 0x1C, 0xD1, 0x30, 0x1C
    .byte 0xBC, 0x30, 0x01, 0x68, 0x0F, 0x48, 0x81, 0x42, 0x16, 0xDD, 0x30, 0x1C, 0x82, 0x30, 0x00, 0x21
    .byte 0x40, 0x5E, 0x08, 0x21, 0x00, 0x28, 0x00, 0xDA, 0x07, 0x21, 0x30, 0x1C, 0x7E, 0x30, 0x01, 0x70
    .byte 0x02, 0x30, 0x03, 0x80, 0x08, 0x30, 0x03, 0x80, 0x31, 0x1C, 0xB8, 0x31, 0x00, 0x23, 0xC8, 0x5E
    .byte 0x00, 0x28, 0x01, 0xD1, 0x3C, 0x20, 0x08, 0x80, 0x11, 0x88, 0x03, 0x48, 0x08, 0x40, 0x10, 0x80
    .byte 0xAE, 0xE2, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x02, 0xFF, 0xE7, 0x00, 0x00, 0x30, 0x1C, 0xBC, 0x30
    .byte 0x01, 0x68, 0x20, 0x48, 0x81, 0x42, 0x00, 0xDC, 0xA2, 0xE2, 0x31, 0x1C, 0x52, 0x31, 0x80, 0x20
    .byte 0x08, 0x80, 0x80, 0x30, 0xB0, 0x60, 0x1C, 0x4C, 0x38, 0x19, 0x00, 0x68, 0x86, 0x42, 0x21, 0xD1
    .byte 0xB4, 0x6C, 0x20, 0x20, 0x04, 0x40, 0x00, 0x2C, 0x1C, 0xD1, 0x18, 0x48, 0x3D, 0x18, 0x28, 0x88
    .byte 0x00, 0x28, 0x10, 0xD0, 0x16, 0x4B, 0x17, 0x4A, 0xC0, 0x00, 0x80, 0x18, 0x81, 0x88, 0x48, 0x00
    .byte 0x40, 0x18, 0x80, 0x00, 0xC0, 0x18, 0x00, 0x68, 0x91, 0x68, 0x26, 0xF0, 0xB9, 0xF8, 0x2C, 0x80
    .byte 0x11, 0x49, 0x78, 0x18, 0x04, 0x80, 0xCD, 0x23, 0x5B, 0x00, 0xF2, 0x18, 0x11, 0x78, 0xEF, 0x20
    .byte 0x08, 0x40, 0x10, 0x70, 0x31, 0x1C, 0x78, 0x31, 0x01, 0x20, 0x08, 0x70, 0x32, 0x1C, 0xB4, 0x32
    .byte 0x11, 0x88, 0x80, 0x24, 0x24, 0x02, 0x20, 0x1C, 0x08, 0x43, 0x10, 0x80, 0xB0, 0x6C, 0x80, 0x21
    .byte 0x09, 0x01, 0x63, 0xE2, 0xFF, 0xFF, 0xFF, 0x00, 0x14, 0x08, 0x00, 0x00, 0x7C, 0x0C, 0x00, 0x00
    .byte 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08, 0x7E, 0x0C, 0x00, 0x00, 0xB3, 0x6C, 0x80, 0x20
    .byte 0x80, 0x01, 0x18, 0x40, 0x00, 0x28, 0x00, 0xD0, 0x52, 0xE2, 0x31, 0x68, 0x00, 0x29, 0x01, 0xDA
    .byte 0x18, 0x48, 0x09, 0x18, 0x09, 0x14, 0x72, 0x68, 0x00, 0x2A, 0x01, 0xDA, 0x15, 0x4C, 0x12, 0x19
    .byte 0x12, 0x14, 0x20, 0x20, 0x03, 0x40, 0x00, 0x2B, 0x00, 0xD0, 0x41, 0xE2, 0xBC, 0x23, 0x5B, 0x00
    .byte 0xF0, 0x18, 0x04, 0x88, 0x01, 0x34, 0x63, 0x2C, 0x22, 0xDC, 0x50, 0x46, 0xC1, 0x23, 0xF8, 0xF7
    .byte 0x35, 0xF9, 0x0D, 0x49, 0x78, 0x18, 0x00, 0x68, 0x86, 0x42, 0x1A, 0xD1, 0x30, 0x8C, 0x0B, 0x49
    .byte 0x09, 0x69, 0x07, 0x22, 0x11, 0x40, 0x04, 0x39, 0x40, 0x1A, 0x00, 0x04, 0x00, 0x14, 0x22, 0x22
    .byte 0xB1, 0x5E, 0x24, 0x23, 0xF2, 0x5E, 0x01, 0x32, 0x12, 0x04, 0x12, 0x14, 0x00, 0x23, 0x21, 0xF0
    .byte 0x91, 0xF8, 0x06, 0xE0, 0xFF, 0xFF, 0x00, 0x00, 0x14, 0x08, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03
    .byte 0x63, 0x24, 0xBC, 0x21, 0x49, 0x00, 0x70, 0x18, 0x04, 0x80, 0x11, 0xE2
    thumb_func_start sub_803A578
sub_803A578:
    cmp r1, #0x00
    bge _0803A57E
    b _0803A99C
_0803A57E:
    lsrs r0, r1, #0x19
    movs r1, #0x0F
    ands r0, r1
    adds r1, r6, #0x0
    adds r1, #0x86
    strb r0, [r1, #0x00]
    b _0803A99C
    .byte 0x32, 0x1C, 0x52, 0x32, 0x10, 0x88, 0x1A, 0x38, 0x00, 0x23, 0x10, 0x80, 0xB0, 0x68, 0x00, 0x12
    .byte 0x00, 0x24, 0x11, 0x5F, 0x40, 0x18, 0x00, 0x28, 0x02, 0xDD, 0x00, 0x02, 0xB0, 0x60, 0xF7, 0xE1
    .byte 0xB3, 0x60, 0x13, 0x80, 0x32, 0x1C, 0xB4, 0x32, 0x11, 0x88, 0x1A, 0x48, 0x08, 0x40, 0x10, 0x80
    .byte 0x30, 0x1C, 0x85, 0x30, 0x01, 0x78, 0x20, 0x22, 0x10, 0x1C, 0x08, 0x40, 0x00, 0x28, 0x19, 0xD1
    .byte 0x15, 0x49, 0x78, 0x18, 0x00, 0x68, 0x86, 0x42, 0x14, 0xD1, 0xB0, 0x6C, 0x10, 0x40, 0x00, 0x28
    .byte 0x10, 0xD1, 0x12, 0x4A, 0x12, 0x48, 0x9F, 0x23, 0xDB, 0x00, 0xC0, 0x18, 0x81, 0x88, 0x48, 0x00
    .byte 0x40, 0x18, 0x80, 0x00, 0x80, 0x18, 0x00, 0x68, 0x80, 0x88, 0x00, 0x28, 0x02, 0xD1, 0x9F, 0x20
    .byte 0x25, 0xF0, 0x90, 0xFC, 0x30, 0x1C, 0x78, 0x30, 0x00, 0x22, 0x02, 0x70, 0x31, 0x1C, 0x84, 0x31
    .byte 0x08, 0x78, 0x08, 0x28, 0x00, 0xD0, 0x0A, 0x70, 0x30, 0x1C, 0x01, 0x21, 0x02, 0xF0, 0xFC, 0xFD
    .byte 0xBE, 0xE1, 0x00, 0x00, 0xFF, 0x7F, 0x00, 0x00, 0x14, 0x08, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08
    .byte 0x98, 0x24, 0x10, 0x08, 0x31, 0x1C, 0x9C, 0x31, 0x08, 0x88, 0x02, 0x1C, 0x00, 0x2A, 0x00, 0xD0
    .byte 0x8B, 0xE1, 0xC0, 0x20, 0x80, 0x03, 0xB0, 0x60, 0xB1, 0x8E, 0x02, 0x20, 0x08, 0x43, 0xB0, 0x86
    .byte 0x31, 0x1C, 0x78, 0x31, 0x06, 0x20, 0x08, 0x70, 0x17, 0x4C, 0x38, 0x19, 0x01, 0x68, 0x30, 0x1C
    .byte 0x92, 0x30, 0x02, 0x80, 0x02, 0x30, 0x02, 0x80, 0x8E, 0x42, 0x20, 0xD1, 0xB0, 0x6C, 0x20, 0x21
    .byte 0x08, 0x40, 0x00, 0x28, 0x1B, 0xD1, 0x11, 0x4A, 0x30, 0x1C, 0x4C, 0x30, 0x01, 0x78, 0x07, 0x20
    .byte 0x08, 0x40, 0x40, 0x00, 0x80, 0x18, 0x00, 0x88, 0x0D, 0x4A, 0x0E, 0x49, 0xC0, 0x00, 0x40, 0x18
    .byte 0x81, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x80, 0x18, 0x00, 0x68, 0x26, 0xF0, 0x2A, 0xF8
    .byte 0xCD, 0x20, 0x40, 0x00, 0x32, 0x18, 0x11, 0x78, 0xFC, 0x20, 0x08, 0x40, 0x10, 0x70, 0x30, 0x1C
    .byte 0xFF, 0xF7, 0xBC, 0xF8, 0x74, 0xE1, 0x00, 0x00, 0x14, 0x08, 0x00, 0x00, 0xA8, 0xCB, 0x0E, 0x08
    .byte 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08, 0x30, 0x1C, 0x4E, 0x30, 0x00, 0x21, 0x01, 0x80
    .byte 0x02, 0x30, 0x01, 0x80, 0xB0, 0x6C, 0x80, 0x21, 0x89, 0x01, 0x08, 0x40, 0x00, 0x28, 0x02, 0xD0
    .byte 0xE0, 0x20, 0xC0, 0x02, 0xB0, 0x60, 0xB1, 0x68, 0x02, 0x48, 0x81, 0x42, 0x00, 0xDC, 0x57, 0xE1
    .byte 0x39, 0xE1, 0x00, 0x00, 0xFF, 0xFF, 0x06, 0x00, 0x31, 0x1C, 0x9C, 0x31, 0x08, 0x88, 0x00, 0x28
    .byte 0x74, 0xD0, 0x01, 0x38, 0x08, 0x80, 0x00, 0x04, 0x00, 0x0C, 0x77, 0x28, 0x00, 0xD9, 0x47, 0xE1
    .byte 0x3C, 0x28, 0x0C, 0xD1, 0xB0, 0x6C, 0x80, 0x21, 0x49, 0x00, 0x08, 0x43, 0xB0, 0x64, 0x32, 0x1C
    .byte 0xA4, 0x32, 0x10, 0x88, 0x80, 0x23, 0xDB, 0x00, 0x19, 0x1C, 0x08, 0x43, 0x10, 0x80, 0x30, 0x1C
    .byte 0xFF, 0xF7, 0x7C, 0xF8, 0x30, 0x1C, 0x85, 0x30, 0x00, 0x78, 0x00, 0x06, 0x01, 0x0E, 0x24, 0x29
    .byte 0x54, 0xD0, 0x22, 0x29, 0x00, 0xD1, 0x2B, 0xE1, 0x00, 0x28, 0x00, 0xDA, 0x28, 0xE1, 0x23, 0x4C
    .byte 0x38, 0x19, 0x00, 0x68, 0x86, 0x42, 0x1A, 0xD1, 0xB0, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28
    .byte 0x15, 0xD1, 0x1F, 0x4A, 0x1F, 0x48, 0xA1, 0x21, 0xC9, 0x00, 0x40, 0x18, 0x81, 0x88, 0x48, 0x00
    .byte 0x40, 0x18, 0x80, 0x00, 0x80, 0x18, 0x00, 0x68, 0x25, 0xF0, 0xBC, 0xFF, 0xCD, 0x23, 0x5B, 0x00
    .byte 0xF2, 0x18, 0x11, 0x78, 0xFC, 0x20, 0x08, 0x40, 0xDF, 0x21, 0x08, 0x40, 0x10, 0x70, 0x32, 0x1C
    .byte 0xB4, 0x32, 0x11, 0x88, 0x10, 0x20, 0x08, 0x43, 0x10, 0x80, 0x10, 0x3A, 0x11, 0x88, 0x80, 0x24
    .byte 0xA4, 0x00, 0x20, 0x1C, 0x08, 0x43, 0x10, 0x80, 0xB0, 0x6C, 0x0F, 0x49, 0x08, 0x40, 0xB0, 0x64
    .byte 0x18, 0x32, 0x10, 0x88, 0x80, 0x21, 0x49, 0x04, 0x08, 0x43, 0x10, 0x60, 0xF8, 0x21, 0x89, 0x01
    .byte 0x30, 0x1C, 0xFF, 0xF7, 0xA1, 0xF8, 0x30, 0x1C, 0x84, 0x30, 0x01, 0x21, 0x01, 0x70, 0x0C, 0x38
    .byte 0x01, 0x70, 0xB0, 0x6C, 0x80, 0x21, 0x09, 0x01, 0xE0, 0xE0, 0x00, 0x00, 0x14, 0x08, 0x00, 0x00
    .byte 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08, 0xFF, 0xFE, 0xFF, 0xFF, 0xB0, 0x6C, 0x04, 0x49
    .byte 0x08, 0x40, 0xB0, 0x64, 0x30, 0x1C, 0x39, 0x1C, 0xFF, 0xF7, 0xD6, 0xF8, 0xD0, 0xE0, 0x00, 0x00
    .byte 0xFF, 0xFE, 0xFF, 0xFF, 0x30, 0x1C, 0xFF, 0xF7, 0x47, 0xF8, 0x31, 0x68, 0x08, 0x1C, 0x00, 0x29
    .byte 0x01, 0xDA, 0x0A, 0x4A, 0x88, 0x18, 0x02, 0x14, 0x30, 0x1C, 0x9E, 0x30, 0x00, 0x24, 0x03, 0x5F
    .byte 0x9A, 0x42, 0x25, 0xD0, 0x00, 0x88, 0x10, 0x1A, 0x00, 0x04, 0x00, 0x0C, 0x00, 0x29, 0x07, 0xDA
    .byte 0xC0, 0x22, 0x92, 0x02, 0x88, 0x18, 0x30, 0x60, 0xB2, 0xE0, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00
    .byte 0x00, 0x04, 0x00, 0x14, 0x02, 0x1C, 0x00, 0x28, 0x00, 0xDA, 0x42, 0x42, 0x03, 0x2A, 0x02, 0xDC
    .byte 0x18, 0x04, 0x30, 0x60, 0xA4, 0xE0, 0x00, 0x28, 0x04, 0xDA, 0xC0, 0x23, 0x9B, 0x02, 0xC8, 0x18
    .byte 0x30, 0x60, 0x9D, 0xE0, 0x01, 0x4C, 0x08, 0x19, 0x30, 0x60, 0x99, 0xE0, 0x00, 0x00, 0xFD, 0xFF
    .byte 0x72, 0x68, 0x10, 0x1C, 0x00, 0x2A, 0x01, 0xDA, 0x06, 0x49, 0x50, 0x18, 0x00, 0x14, 0x33, 0x1C
    .byte 0xA0, 0x33, 0x19, 0x88, 0x40, 0x1A, 0x00, 0x04, 0x00, 0x0C, 0x00, 0x2A, 0x04, 0xDA, 0xC0, 0x23
    .byte 0x9B, 0x02, 0x2C, 0xE0, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x04, 0x00, 0x14, 0x01, 0x1C, 0x00, 0x28
    .byte 0x00, 0xDA, 0x41, 0x42, 0x03, 0x29, 0x1B, 0xDC, 0x00, 0x24, 0x18, 0x5F, 0x00, 0x04, 0x70, 0x60
    .byte 0x32, 0x1C, 0xA4, 0x32, 0x11, 0x88, 0x40, 0x20, 0x08, 0x43, 0x10, 0x80, 0x31, 0x1C, 0x78, 0x31
    .byte 0x07, 0x20, 0x08, 0x70, 0x30, 0x3A, 0x11, 0x88, 0x04, 0x48, 0x08, 0x40, 0x10, 0x80, 0xB0, 0x8E
    .byte 0x01, 0x21, 0x08, 0x43, 0x02, 0x21, 0x08, 0x43, 0xB0, 0x86, 0x61, 0xE0, 0xFF, 0xDF, 0x00, 0x00
    .byte 0x00, 0x28, 0x03, 0xDA, 0xC0, 0x21, 0x89, 0x02, 0x50, 0x18, 0x01, 0xE0, 0x04, 0x4B, 0xD0, 0x18
    .byte 0x70, 0x60, 0x04, 0x49, 0x24, 0x31, 0x30, 0x1C, 0x01, 0xF0, 0x4A, 0xF8, 0x50, 0xE0, 0x00, 0x00
    .byte 0x00, 0x00, 0xFD, 0xFF, 0x20, 0x2E, 0x00, 0x03, 0x30, 0x1C, 0xFE, 0xF7, 0xC5, 0xFF, 0x00, 0x28
    .byte 0x46, 0xD0, 0xB0, 0x68, 0x02, 0x4C, 0x00, 0x19, 0x00, 0x28, 0x03, 0xDD, 0xB0, 0x60, 0x3F, 0xE0
    .byte 0x00, 0x80, 0xFF, 0xFF, 0x00, 0x21, 0xB1, 0x60, 0x30, 0x1C, 0x78, 0x30, 0x01, 0x70, 0x0C, 0x30
    .byte 0x01, 0x70, 0x32, 0x1C, 0x74, 0x32, 0x11, 0x88, 0x01, 0x20, 0x08, 0x43, 0x10, 0x80, 0x30, 0x1C
    .byte 0x39, 0x1C, 0x08, 0xF0, 0x35, 0xFD, 0x2B, 0xE0, 0x30, 0x1C, 0x06, 0xF0, 0x79, 0xF9, 0x27, 0xE0
    .byte 0x31, 0x1C, 0x9C, 0x31, 0x08, 0x88, 0x00, 0x28, 0x02, 0xD0, 0x01, 0x38, 0x08, 0x80, 0x1F, 0xE0
    .byte 0xC0, 0x20, 0x80, 0x03, 0xB0, 0x60, 0x31, 0x1C, 0x78, 0x31, 0x06, 0x20, 0x08, 0x70, 0x17, 0xE0
    thumb_func_start def_8039B62
def_8039B62: @ 0803A96C
    adds r0, r6, #0x0
    adds r0, #0xBC
    movs r1, #0x00
    str r1, [r0, #0x00]
    adds r0, #0x04
    str r1, [r0, #0x00]
    subs r0, #0x38
    movs r2, #0x00
    strh r1, [r0, #0x00]
    subs r0, #0x0A
    strb r2, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    subs r0, #0x34
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldr r0, [r6, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x07
    orrs r0, r1
    str r0, [r6, #0x48]
_0803A99C:
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_803A9AC
sub_803A9AC:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    adds r4, r0, #0x0
    ldr r0, _0803A9F4 @ =0x03002E20
    mov r8, r0
    movs r1, #0x24
    add r1, r8
    mov r9, r1
    adds r7, r4, #0x0
    adds r7, #0xB4
    ldrh r6, [r7, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x02
    mov r10, r2
    mov r0, r10
    ands r0, r6
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #0x00
    beq _0803A9F8
    adds r1, r4, #0x0
    adds r1, #0x7E
    movs r2, #0x00
    movs r0, #0x0D
    strb r0, [r1, #0x00]
    adds r1, #0x06
    movs r0, #0x0A
    strb r0, [r1, #0x00]
    adds r0, r4, #0x0
    adds r0, #0x88
    strh r2, [r0, #0x00]
    b _0803AD50
    .byte 0x00, 0x00
_0803A9F4: .4byte 0x03002E20
_0803A9F8:
    movs r0, #0x80
    lsls r0, r0, #0x04
    ands r0, r6
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    cmp r3, #0x00
    beq _0803AA3C
    adds r0, r4, #0x0
    adds r0, #0x82
    movs r3, #0x00
    ldsh r0, [r0, r3]
    movs r1, #0x08
    cmp r0, #0x00
    bge _0803AA16
    movs r1, #0x07
_0803AA16:
    adds r0, r4, #0x0
    adds r0, #0x7E
    strb r1, [r0, #0x00]
    adds r0, #0x02
    strh r2, [r0, #0x00]
    ldrh r1, [r7, #0x00]
    ldr r0, _0803AA38 @ =0x0000E7FF
    ands r0, r1
    strh r0, [r7, #0x00]
    adds r0, r4, #0x0
    adds r0, #0x88
    strh r2, [r0, #0x00]
    adds r1, r4, #0x0
    adds r1, #0xB8
    movs r0, #0x3C
    strh r0, [r1, #0x00]
    b _0803AD50
_0803AA38: .4byte 0x0000E7FF
_0803AA3C:
    movs r0, #0x80
    lsls r0, r0, #0x05
    ands r0, r6
    cmp r0, #0x00
    beq _0803AA90
    adds r1, r4, #0x0
    adds r1, #0xBC
    ldr r0, [r1, #0x00]
    movs r2, #0xE0
    lsls r2, r2, #0x12
    cmp r0, r2
    ble _0803AA56
    str r2, [r1, #0x00]
_0803AA56:
    adds r0, r4, #0x0
    adds r0, #0x84
    strb r3, [r0, #0x00]
    adds r0, #0x44
    movs r2, #0x3C
    strh r2, [r0, #0x00]
    subs r0, #0x46
    movs r1, #0x00
    ldsh r0, [r0, r1]
    movs r1, #0x06
    cmp r0, #0x00
    bge _0803AA70
    movs r1, #0x05
_0803AA70:
    adds r0, r4, #0x0
    adds r0, #0x7E
    strb r1, [r0, #0x00]
    adds r0, #0x02
    strh r3, [r0, #0x00]
    adds r0, #0x08
    strh r3, [r0, #0x00]
    adds r0, #0x30
    strh r2, [r0, #0x00]
    ldrh r1, [r7, #0x00]
    ldr r0, _0803AA8C @ =0x0000E7FF
    ands r0, r1
    strh r0, [r7, #0x00]
    b _0803AD50
_0803AA8C: .4byte 0x0000E7FF
_0803AA90:
    adds r1, r4, #0x0
    adds r1, #0xB2
    ldrh r2, [r1, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x08
    mov r12, r3
    mov r0, r12
    ands r0, r2
    adds r5, r1, #0x0
    cmp r0, #0x00
    beq _0803AB18
    ldr r1, _0803AB08 @ =0x080EC280
    adds r3, r4, #0x0
    adds r3, #0x7E
    ldrb r0, [r3, #0x00]
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r2, [r0, #0x00]
    cmp r2, #0x00
    beq _0803AABA
    b _0803AD50
_0803AABA:
    adds r1, r4, #0x0
    adds r1, #0xCC
    movs r0, #0x32
    strh r0, [r1, #0x00]
    movs r0, #0x0E
    strb r0, [r3, #0x00]
    adds r0, r4, #0x0
    adds r0, #0x80
    strh r2, [r0, #0x00]
    ldrh r1, [r5, #0x00]
    ldr r0, _0803AB0C @ =0x00007FFF
    ands r0, r1
    strh r0, [r5, #0x00]
    adds r0, r4, #0x0
    adds r0, #0xB0
    ldrb r0, [r0, #0x00]
    cmp r0, #0x03
    beq _0803AAFE
    ldr r0, _0803AB10 @ =0x00000838
    add r0, r8
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _0803AAFE
    movs r1, #0x20
    ldsh r0, [r4, r1]
    movs r2, #0x22
    ldsh r1, [r4, r2]
    movs r3, #0x24
    ldsh r2, [r4, r3]
    subs r2, #0x01
    lsls r2, r2, #0x10
    asrs r2, r2, #0x10
    bl sub_805BD34
_0803AAFE:
    ldr r0, _0803AB14 @ =0x00000814
    add r0, r9
    ldr r0, [r0, #0x00]
    b _0803AB82
    .byte 0x00, 0x00
_0803AB08: .4byte 0x080EC280
_0803AB0C: .4byte 0x00007FFF
_0803AB10: .4byte 0x00000838
_0803AB14: .4byte 0x00000814
_0803AB18:
    movs r0, #0x80
    lsls r0, r0, #0x06
    ands r0, r2
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    cmp r1, #0x00
    beq _0803AB44
    movs r0, #0x02
    orrs r0, r6
    strh r0, [r7, #0x00]
    ldrh r1, [r5, #0x00]
    ldr r0, _0803AB40 @ =0x0000DFFF
    ands r0, r1
    strh r0, [r5, #0x00]
    adds r1, r4, #0x0
    adds r1, #0x84
    movs r0, #0x09
    strb r0, [r1, #0x00]
    b _0803AD50
    .byte 0x00, 0x00
_0803AB40: .4byte 0x0000DFFF
_0803AB44:
    movs r3, #0x01
    adds r0, r3, #0x0
    ands r0, r2
    cmp r0, #0x00
    beq _0803AC14
    strh r1, [r5, #0x00]
    adds r0, r4, #0x0
    adds r0, #0xCC
    movs r1, #0x18
    strh r1, [r0, #0x00]
    adds r0, r4, #0x0
    mov r1, r9
    bl sub_804349C
    ldr r5, _0803AC04 @ =0x00000838
    add r5, r8
    ldr r0, [r5, #0x00]
    cmp r4, r0
    bne _0803AB80
    movs r2, #0x20
    ldsh r0, [r4, r2]
    movs r3, #0x22
    ldsh r1, [r4, r3]
    movs r3, #0x24
    ldsh r2, [r4, r3]
    subs r2, #0x01
    lsls r2, r2, #0x10
    asrs r2, r2, #0x10
    bl sub_805BD34
_0803AB80:
    ldr r0, [r5, #0x00]
_0803AB82:
    cmp r0, r4
    bne _0803ABBC
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0803ABBC
    ldr r3, _0803AC08 @ =0x080ECC48
    adds r0, r4, #0x0
    adds r0, #0x4C
    ldrb r0, [r0, #0x00]
    movs r1, #0x07
    ands r1, r0
    adds r0, r4, #0x0
    adds r0, #0x58
    ldrh r2, [r0, #0x00]
    movs r0, #0x10
    ands r0, r2
    lsls r1, r1, #0x02
    cmp r0, #0x00
    bne _0803ABAE
    adds r1, #0x02
_0803ABAE:
    adds r0, r1, r3
    ldrh r0, [r0, #0x00]
    bl m4aSongNumStart
    movs r0, #0x7D
    bl m4aSongNumStart
_0803ABBC:
    adds r2, r4, #0x0
    adds r2, #0xB4
    ldrh r1, [r2, #0x00]
    movs r0, #0x80
    orrs r0, r1
    strh r0, [r2, #0x00]
    adds r1, r4, #0x0
    adds r1, #0x84
    movs r0, #0x08
    strb r0, [r1, #0x00]
    ldrh r1, [r2, #0x00]
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    bne _0803ABDC
    b _0803AD50
_0803ABDC:
    ldr r0, _0803AC0C @ =0x0000FFDE
    ands r0, r1
    strh r0, [r2, #0x00]
    ldr r0, _0803AC10 @ =0x03002E20
    ldr r1, _0803AC04 @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r4, r0
    beq _0803ABF0
    b _0803AD50
_0803ABF0:
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _0803ABFC
    b _0803AD50
_0803ABFC:
    movs r0, #0xA3
    bl m4aSongNumStop
    b _0803AD50
_0803AC04: .4byte 0x00000838
_0803AC08: .4byte 0x080ECC48
_0803AC0C: .4byte 0x0000FFDE
_0803AC10: .4byte 0x03002E20
_0803AC14:
    movs r0, #0x80
    lsls r0, r0, #0x07
    ands r0, r2
    cmp r0, #0x00
    beq _0803ACAC
    ldr r0, _0803AC58 @ =0x0000BFFF
    ands r0, r2
    strh r0, [r5, #0x00]
    adds r1, r4, #0x0
    adds r1, #0x52
    movs r0, #0xF0
    lsls r0, r0, #0x01
    strh r0, [r1, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x01
    str r2, [r4, #0x08]
    adds r1, #0x2C
    movs r0, #0x0C
    strb r0, [r1, #0x00]
    adds r0, r4, #0x0
    adds r0, #0x96
    ldrh r1, [r0, #0x00]
    mov r0, r10
    ands r0, r1
    cmp r0, #0x00
    bne _0803AC66
    adds r0, r2, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _0803AC5C
    mov r2, r12
    strh r2, [r7, #0x00]
    b _0803AC76
    .byte 0x00, 0x00
_0803AC58: .4byte 0x0000BFFF
_0803AC5C:
    mov r1, r8
    ldr r0, [r1, #0x10]
    ands r0, r3
    cmp r0, #0x00
    beq _0803AC6E
_0803AC66:
    movs r0, #0xA0
    lsls r0, r0, #0x08
    strh r0, [r7, #0x00]
    b _0803AC76
_0803AC6E:
    adds r0, r4, #0x0
    adds r0, #0xB4
    mov r2, r12
    strh r2, [r0, #0x00]
_0803AC76:
    adds r0, r4, #0x0
    adds r0, #0x84
    movs r1, #0x01
    strb r1, [r0, #0x00]
    subs r0, #0x0C
    strb r1, [r0, #0x00]
    ldr r2, [r4, #0x48]
    movs r0, #0x80
    lsls r0, r0, #0x04
    orrs r2, r0
    str r2, [r4, #0x48]
    adds r0, #0x14
    add r0, r9
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _0803AD50
    movs r0, #0x20
    ands r2, r0
    cmp r2, #0x00
    bne _0803AD50
    ldr r0, _0803ACA8 @ =0x0000017D
    bl m4aSongNumStart
    b _0803AD50
    .byte 0x00, 0x00
_0803ACA8: .4byte 0x0000017D
_0803ACAC:
    movs r3, #0x80
    adds r0, r3, #0x0
    ands r0, r2
    cmp r0, #0x00
    beq _0803ACF8
    ldr r0, _0803ACF0 @ =0x0000FF7F
    ands r0, r2
    strh r0, [r5, #0x00]
    adds r2, r4, #0x0
    adds r2, #0xBC
    ldr r1, [r2, #0x00]
    ldr r0, _0803ACF4 @ =0x00FFFFFF
    cmp r1, r0
    bgt _0803ACCC
    adds r0, #0x01
    str r0, [r2, #0x00]
_0803ACCC:
    adds r1, r4, #0x0
    adds r1, #0x52
    movs r0, #0x80
    lsls r0, r0, #0x01
    strh r0, [r1, #0x00]
    adds r1, #0x26
    movs r0, #0x01
    strb r0, [r1, #0x00]
    ldrh r1, [r7, #0x00]
    mov r0, r12
    orrs r0, r1
    strh r0, [r7, #0x00]
    ldr r0, [r4, #0x48]
    movs r3, #0x80
    lsls r3, r3, #0x04
    orrs r0, r3
    str r0, [r4, #0x48]
    b _0803AD50
_0803ACF0: .4byte 0x0000FF7F
_0803ACF4: .4byte 0x00FFFFFF
_0803ACF8:
    ldr r1, [r4, #0x48]
    adds r0, r1, #0x0
    ands r0, r3
    cmp r0, #0x00
    bne _0803AD26
    adds r0, r4, #0x0
    adds r0, #0x96
    ldrh r2, [r0, #0x00]
    movs r0, #0x24
    ands r0, r2
    cmp r0, #0x04
    beq _0803AD18
    movs r0, #0x18
    ands r0, r2
    cmp r0, #0x08
    bne _0803AD20
_0803AD18:
    adds r0, r4, #0x0
    bl sub_8039AA4
    b _0803AD26
_0803AD20:
    ldr r0, _0803AD60 @ =0xFFFFF7FF
    ands r1, r0
    str r1, [r4, #0x48]
_0803AD26:
    ldrh r1, [r5, #0x00]
    movs r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    beq _0803AD50
    ldr r0, _0803AD64 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r5, #0x00]
    ldr r0, _0803AD68 @ =0x00000814
    add r0, r9
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _0803AD50
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0803AD50
    movs r0, #0xA3
    bl m4aSongNumStart
_0803AD50:
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0803AD60: .4byte 0xFFFFF7FF
_0803AD64: .4byte 0x0000FFFD
_0803AD68: .4byte 0x00000814
    thumb_func_start sub_803AD6C
sub_803AD6C:
    push {r4, r5, r6, r7, lr}
    adds r6, r0, #0x0
    ldr r0, [r6, #0x48]
    ldr r1, _0803ADA8 @ =0xFFFFEFFF
    ands r0, r1
    str r0, [r6, #0x48]
    adds r4, r6, #0x0
    adds r4, #0x4E
    movs r1, #0x00
    ldsh r0, [r4, r1]
    cmp r0, #0x00
    bne _0803ADAC
    adds r0, r6, #0x0
    adds r0, #0x50
    movs r1, #0x00
    ldsh r2, [r0, r1]
    adds r7, r0, #0x0
    cmp r2, #0x00
    bne _0803ADAC
    adds r0, #0x2C
    ldrh r0, [r0, #0x00]
    adds r1, r6, #0x0
    adds r1, #0x7A
    strh r0, [r1, #0x00]
    adds r0, r6, #0x0
    adds r0, #0x80
    strh r2, [r0, #0x00]
    adds r5, r6, #0x0
    adds r5, #0xBC
    b _0803ADEC
_0803ADA8: .4byte 0xFFFFEFFF
_0803ADAC:
    adds r4, r6, #0x0
    adds r4, #0x4E
    adds r5, r6, #0x0
    adds r5, #0x50
    movs r2, #0x00
    ldsh r0, [r4, r2]
    movs r2, #0x00
    ldsh r1, [r5, r2]
    bl sub_802EC38
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    adds r0, r6, #0x0
    adds r0, #0xBC
    ldr r1, [r0, #0x00]
    adds r7, r5, #0x0
    adds r2, r6, #0x0
    adds r2, #0x7C
    adds r5, r0, #0x0
    cmp r1, #0x00
    blt _0803AE12
    ldrh r0, [r2, #0x00]
    subs r0, r3, r0
    adds r1, r6, #0x0
    adds r1, #0x80
    strh r0, [r1, #0x00]
    adds r0, r6, #0x0
    adds r0, #0x84
    movs r1, #0x0B
    strb r1, [r0, #0x00]
    subs r0, #0x06
    strb r1, [r0, #0x00]
_0803ADEC:
    adds r1, r6, #0x0
    adds r1, #0x92
    ldrh r0, [r1, #0x00]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x11
    strh r0, [r1, #0x00]
    cmp r0, #0xFF
    bgt _0803AE02
    movs r0, #0x80
    lsls r0, r0, #0x01
    strh r0, [r1, #0x00]
_0803AE02:
    movs r1, #0x00
    ldsh r0, [r4, r1]
    movs r2, #0x00
    ldsh r1, [r7, r2]
    bl sub_802EBC0
    lsls r0, r0, #0x10
    str r0, [r5, #0x00]
_0803AE12:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    thumb_func_start sub_803AE18
sub_803AE18:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r0, [r4, #0x48]
    ldr r1, _0803AE6C @ =0xFFFFEFFF
    ands r0, r1
    str r0, [r4, #0x48]
    adds r2, r4, #0x0
    adds r2, #0x4E
    movs r1, #0x00
    ldsh r0, [r2, r1]
    cmp r0, #0x00
    bne _0803AE3C
    adds r0, r4, #0x0
    adds r0, #0x50
    movs r3, #0x00
    ldsh r0, [r0, r3]
    cmp r0, #0x00
    beq _0803AE66
_0803AE3C:
    adds r1, r4, #0x0
    adds r1, #0x50
    movs r3, #0x00
    ldsh r0, [r2, r3]
    movs r2, #0x00
    ldsh r1, [r1, r2]
    bl sub_802EC38
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    adds r1, r4, #0x0
    adds r1, #0x56
    ldrh r1, [r1, #0x00]
    subs r0, r0, r1
    adds r2, r4, #0x0
    adds r2, #0x82
    strh r0, [r2, #0x00]
    adds r1, r4, #0x0
    adds r1, #0x84
    movs r0, #0x0B
    strb r0, [r1, #0x00]
_0803AE66:
    pop {r4}
    pop {r0}
    bx r0
_0803AE6C: .4byte 0xFFFFEFFF
    thumb_func_start sub_803AE70
sub_803AE70:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    adds r3, r4, #0x0
    adds r3, #0xB4
    ldrh r7, [r3, #0x00]
    movs r0, #0x01
    ands r0, r7
    cmp r0, #0x00
    beq _0803AEF8
    adds r0, r4, #0x0
    adds r0, #0x96
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    movs r6, #0x40
    negs r6, r6
    cmp r0, #0x00
    beq _0803AE98
    adds r6, #0x30
_0803AE98:
    adds r2, r4, #0x0
    adds r2, #0x92
    ldrh r5, [r2, #0x00]
    movs r0, #0x00
    ldsh r1, [r2, r0]
    ldr r0, _0803AEB8 @ =0x000001FF
    cmp r1, r0
    ble _0803AEBC
    adds r0, r5, r6
    strh r0, [r2, #0x00]
    ldrh r1, [r3, #0x00]
    movs r0, #0x20
    orrs r0, r1
    strh r0, [r3, #0x00]
    b _0803AEF8
    .byte 0x00, 0x00
_0803AEB8: .4byte 0x000001FF
_0803AEBC:
    ldr r0, _0803AF00 @ =0x0000FFDE
    ands r0, r7
    strh r0, [r3, #0x00]
    adds r2, r4, #0x0
    adds r2, #0xB2
    ldrh r1, [r2, #0x00]
    ldr r0, _0803AF04 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x00]
    ldr r0, _0803AF08 @ =0x03002E20
    ldr r1, _0803AF0C @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _0803AEEA
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0803AEEA
    movs r0, #0xA3
    bl m4aSongNumStop
_0803AEEA:
    movs r0, #0xCD
    lsls r0, r0, #0x01
    adds r2, r4, r0
    ldrb r1, [r2, #0x00]
    movs r0, #0xEF
    ands r0, r1
    strb r0, [r2, #0x00]
_0803AEF8:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0803AF00: .4byte 0x0000FFDE
_0803AF04: .4byte 0x0000FFFD
_0803AF08: .4byte 0x03002E20
_0803AF0C: .4byte 0x00000838
    thumb_func_start sub_803AF10
sub_803AF10:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    adds r6, r1, #0x0
    adds r0, r6, #0x0
    bl sub_8032CD0
    cmp r0, #0x00
    bne _0803B008
    adds r0, r4, #0x0
    adds r0, #0x78
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0803AF2E
    cmp r0, #0x07
    bne _0803B008
_0803AF2E:
    ldr r0, _0803AFAC @ =0x080EC280
    adds r1, r4, #0x0
    adds r1, #0x7E
    ldrb r1, [r1, #0x00]
    lsls r1, r1, #0x02
    adds r1, r1, r0
    ldr r0, [r1, #0x00]
    cmp r0, #0x00
    bne _0803B008
    adds r0, r4, #0x0
    adds r1, r6, #0x0
    bl sub_803BC84
    adds r1, r4, #0x0
    adds r1, #0x56
    ldrh r1, [r1, #0x00]
    subs r0, r0, r1
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    adds r0, r4, #0x0
    adds r1, r6, #0x0
    bl sub_803BC84
    adds r1, r4, #0x0
    adds r1, #0x7A
    ldrh r1, [r1, #0x00]
    subs r0, r0, r1
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    lsls r0, r5, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0803AF72
    negs r0, r0
_0803AF72:
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    lsls r0, r3, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0803AF80
    negs r0, r0
_0803AF80:
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    adds r0, r4, #0x0
    adds r0, #0xB0
    ldrb r0, [r0, #0x00]
    cmp r0, #0x03
    bne _0803AFB4
    ldr r1, [r4, #0x48]
    movs r0, #0x80
    lsls r0, r0, #0x03
    ands r0, r1
    cmp r0, #0x00
    beq _0803B008
    ldr r0, _0803AFB0 @ =0xFFFFFBFF
    ands r1, r0
    str r1, [r4, #0x48]
    adds r2, r4, #0x0
    adds r2, #0xA4
    ldrh r1, [r2, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x04
    b _0803B002
_0803AFAC: .4byte 0x080EC280
_0803AFB0: .4byte 0xFFFFFBFF
_0803AFB4:
    ldr r2, [r4, #0x48]
    movs r6, #0x80
    lsls r6, r6, #0x03
    adds r0, r2, #0x0
    ands r0, r6
    cmp r0, #0x00
    beq _0803AFE4
    lsls r1, r5, #0x10
    ldr r0, _0803AFDC @ =0x2FFF0000
    cmp r1, r0
    bgt _0803B008
    ldr r0, _0803AFE0 @ =0xFFFFFBFF
    ands r2, r0
    str r2, [r4, #0x48]
    adds r2, r4, #0x0
    adds r2, #0xA4
    ldrh r1, [r2, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x04
    b _0803B002
_0803AFDC: .4byte 0x2FFF0000
_0803AFE0: .4byte 0xFFFFFBFF
_0803AFE4:
    lsls r1, r5, #0x10
    ldr r0, _0803B010 @ =0x67FF0000
    cmp r1, r0
    ble _0803B008
    lsls r1, r3, #0x10
    ldr r0, _0803B014 @ =0x57FF0000
    cmp r1, r0
    ble _0803B008
    orrs r2, r6
    str r2, [r4, #0x48]
    adds r2, r4, #0x0
    adds r2, #0xA4
    ldrh r1, [r2, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x05
_0803B002:
    adds r0, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
_0803B008:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0803B010: .4byte 0x67FF0000
_0803B014: .4byte 0x57FF0000
    thumb_func_start sub_803B018
sub_803B018:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    adds r6, r0, #0x0
    adds r7, r1, #0x0
    cmp r2, #0x07
    bhi _0803B0F6
    lsls r0, r2, #0x02
    ldr r1, _0803B034 @ =0x0803B038
    adds r1, r0, r1
    ldr r1, [r1, #0x00]
    mov r9, r0
    mov pc, r1
_0803B034: .4byte 0x0803B038
    .byte 0xC8, 0xB0, 0x03, 0x08, 0x58, 0xB0, 0x03, 0x08, 0xDC, 0xB0, 0x03, 0x08, 0x58, 0xB0, 0x03, 0x08
    .byte 0xC8, 0xB0, 0x03, 0x08, 0x58, 0xB0, 0x03, 0x08, 0xDC, 0xB0, 0x03, 0x08, 0x58, 0xB0, 0x03, 0x08
    .byte 0x31, 0x68, 0x00, 0x29, 0x01, 0xDA, 0x17, 0x48, 0x09, 0x18, 0x09, 0x0C, 0x88, 0x46, 0x75, 0x68
    .byte 0x00, 0x2D, 0x01, 0xDA, 0x13, 0x48, 0x2D, 0x18, 0x2D, 0x0C, 0x13, 0x48, 0x48, 0x44, 0x01, 0x68
    .byte 0x41, 0x44, 0x38, 0x1C, 0x2A, 0x1C, 0x00, 0x23, 0xF7, 0xF7, 0x86, 0xFC, 0x80, 0x24, 0x04, 0x40
    .byte 0x24, 0x06, 0x24, 0x0E, 0x64, 0x42, 0xE4, 0x17, 0x02, 0x20, 0x04, 0x40, 0x0B, 0x48, 0x48, 0x44
    .byte 0x00, 0x68, 0x2D, 0x18, 0x38, 0x1C, 0x41, 0x46, 0x2A, 0x1C, 0x00, 0x23, 0xF7, 0xF7, 0x74, 0xFC
    .byte 0x00, 0x06, 0xC0, 0x0F, 0x24, 0x18, 0x30, 0x1C, 0x39, 0x1C, 0x22, 0x1C, 0x02, 0xF0, 0xD6, 0xFD
    .byte 0x22, 0xE0, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x30, 0xC7, 0x0E, 0x08, 0x50, 0xC7, 0x0E, 0x08
    .byte 0x31, 0x1C, 0x4E, 0x31, 0x08, 0x88, 0x40, 0x42, 0x08, 0x80, 0x00, 0x04, 0xC0, 0x0F, 0x0E, 0x31
    .byte 0x08, 0x80, 0x0C, 0xE0, 0x31, 0x1C, 0x50, 0x31, 0x08, 0x88, 0x40, 0x42, 0x08, 0x80, 0x00, 0x04
    .byte 0x02, 0x21, 0x00, 0x28, 0x00, 0xDA, 0x03, 0x21, 0x30, 0x1C, 0x5C, 0x30, 0x01, 0x80
_0803B0F6:
    adds r1, r6, #0x0
    adds r1, #0x5A
    ldr r0, _0803B10C @ =0x0000C007
    strh r0, [r1, #0x00]
    movs r0, #0x01
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
_0803B10C: .4byte 0x0000C007
    thumb_func_start sub_803B110
sub_803B110:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r7, r0, #0x0
    adds r0, #0x85
    ldrb r0, [r0, #0x00]
    cmp r0, #0x8F
    bls _0803B122
    b _0803B2A8
_0803B122:
    cmp r0, #0x81
    bhi _0803B128
    b _0803B2A8
_0803B128:
    cmp r0, #0x84
    beq _0803B194
    ldr r0, _0803B168 @ =0x03002E20
    adds r5, r0, #0x0
    adds r5, #0x24
    ldr r1, [r7, #0x00]
    cmp r1, #0x00
    bge _0803B13C
    ldr r0, _0803B16C @ =0x0000FFFF
    adds r1, r1, r0
_0803B13C:
    asrs r6, r1, #0x10
    ldr r0, [r7, #0x04]
    cmp r0, #0x00
    bge _0803B148
    ldr r1, _0803B16C @ =0x0000FFFF
    adds r0, r0, r1
_0803B148:
    asrs r4, r0, #0x10
    adds r0, r5, #0x0
    bl sub_8032C2C
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x08
    beq _0803B170
    adds r0, r5, #0x0
    adds r1, r6, #0x0
    adds r2, r4, #0x0
    movs r3, #0x00
    bl sub_8032798
    b _0803B17C
    .byte 0x00, 0x00
_0803B168: .4byte 0x03002E20
_0803B16C: .4byte 0x0000FFFF
_0803B170:
    adds r0, r5, #0x0
    adds r1, r6, #0x0
    adds r2, r4, #0x0
    movs r3, #0x08
    bl sub_8032798
_0803B17C:
    ldr r0, _0803B18C @ =0x03002E20
    ldr r1, _0803B190 @ =0x00000C12
    adds r0, r0, r1
    ldrh r2, [r0, #0x00]
    movs r1, #0x01
    orrs r1, r2
    strh r1, [r0, #0x00]
    b _0803B2A8
_0803B18C: .4byte 0x03002E20
_0803B190: .4byte 0x00000C12
_0803B194:
    ldr r0, _0803B1D0 @ =0x03002E20
    adds r5, r0, #0x0
    adds r5, #0x24
    ldr r1, [r7, #0x00]
    cmp r1, #0x00
    bge _0803B1A4
    ldr r0, _0803B1D4 @ =0x0000FFFF
    adds r1, r1, r0
_0803B1A4:
    asrs r6, r1, #0x10
    ldr r2, [r7, #0x04]
    cmp r2, #0x00
    bge _0803B1B0
    ldr r1, _0803B1D4 @ =0x0000FFFF
    adds r2, r2, r1
_0803B1B0:
    asrs r4, r2, #0x10
    adds r0, r5, #0x0
    bl sub_8032C2C
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x08
    beq _0803B1D8
    adds r0, r5, #0x0
    adds r1, r6, #0x0
    adds r2, r4, #0x0
    movs r3, #0x00
    bl sub_8032798
    b _0803B1E4
    .byte 0x00, 0x00
_0803B1D0: .4byte 0x03002E20
_0803B1D4: .4byte 0x0000FFFF
_0803B1D8:
    adds r0, r5, #0x0
    adds r1, r6, #0x0
    adds r2, r4, #0x0
    movs r3, #0x08
    bl sub_8032798
_0803B1E4:
    ldr r1, _0803B290 @ =0x03002E20
    ldr r0, _0803B294 @ =0x00000C12
    adds r3, r1, r0
    ldrh r2, [r3, #0x00]
    movs r0, #0x01
    orrs r0, r2
    strh r0, [r3, #0x00]
    adds r0, r7, #0x0
    adds r0, #0xBC
    ldr r4, [r0, #0x00]
    ldr r0, _0803B298 @ =0x00000838
    adds r1, r1, r0
    ldr r0, [r1, #0x00]
    cmp r7, r0
    bne _0803B27E
    ldr r0, [r7, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0803B27E
    adds r0, r4, #0x0
    cmp r4, #0x00
    bge _0803B214
    negs r0, r4
_0803B214:
    lsls r0, r0, #0x06
    lsrs r0, r0, #0x16
    ldr r1, _0803B29C @ =0xFFFFFE00
    adds r0, r0, r1
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    adds r0, r4, #0x0
    cmp r0, #0x00
    bge _0803B228
    negs r0, r0
_0803B228:
    asrs r4, r0, #0x14
    movs r0, #0x3F
    ands r4, r0
    adds r4, #0xC0
    lsls r6, r6, #0x10
    asrs r6, r6, #0x10
    movs r0, #0x7C
    bl m4aSongNumStart
    ldr r0, _0803B2A0 @ =0x08102414
    mov r8, r0
    ldr r5, _0803B2A4 @ =0x08102498
    movs r1, #0xF8
    lsls r1, r1, #0x02
    adds r5, r5, r1
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r4, #0x0
    bl m4aMPlayVolumeControl
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayPitchControl
_0803B27E:
    adds r0, r7, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _0803B2A8
    movs r0, #0x00
    b _0803B2AA
    .byte 0x00, 0x00
_0803B290: .4byte 0x03002E20
_0803B294: .4byte 0x00000C12
_0803B298: .4byte 0x00000838
_0803B29C: .4byte 0xFFFFFE00
_0803B2A0: .4byte 0x08102414
_0803B2A4: .4byte 0x08102498
_0803B2A8:
    movs r0, #0x01
_0803B2AA:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    thumb_func_start sub_803B2B4
sub_803B2B4:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    adds r7, r0, #0x0
    mov r9, r1
    ldr r1, [r7, #0x08]
    movs r2, #0x00
    movs r0, #0x80
    lsls r0, r0, #0x0B
    cmp r1, r0
    ble _0803B2D0
    movs r2, #0x01
_0803B2D0:
    cmp r2, #0x00
    beq _0803B2D6
    b _0803B536
_0803B2D6:
    ldr r1, [r7, #0x00]
    ldr r2, [r7, #0x04]
    mov r0, r9
    movs r3, #0x00
    bl sub_8032C50
    cmp r0, #0x00
    beq _0803B2FC
    ldr r0, [r7, #0x48]
    movs r1, #0x01
    orrs r0, r1
    str r0, [r7, #0x48]
    mov r0, r9
    movs r1, #0x00
    bl sub_8032974
    adds r1, r7, #0x0
    adds r1, #0x85
    b _0803B53C
_0803B2FC:
    ldr r0, [r7, #0x00]
    cmp r0, #0x00
    bge _0803B306
    ldr r1, _0803B3B4 @ =0x0000FFFF
    adds r0, r0, r1
_0803B306:
    lsrs r1, r0, #0x10
    ldr r2, [r7, #0x04]
    cmp r2, #0x00
    bge _0803B312
    ldr r4, _0803B3B4 @ =0x0000FFFF
    adds r2, r2, r4
_0803B312:
    asrs r2, r2, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _0803B31C
    adds r0, r2, #0x7
_0803B31C:
    asrs r0, r0, #0x03
    lsls r3, r0, #0x08
    lsls r0, r1, #0x10
    asrs r1, r0, #0x10
    adds r0, r1, #0x0
    cmp r1, #0x00
    bge _0803B32C
    adds r0, r1, #0x7
_0803B32C:
    asrs r0, r0, #0x03
    adds r3, r3, r0
    mov r10, r3
    mov r0, r9
    movs r3, #0x00
    bl sub_8032990
    adds r2, r7, #0x0
    adds r2, #0x85
    strb r0, [r2, #0x00]
    movs r1, #0x90
    ands r1, r0
    adds r5, r2, #0x0
    cmp r1, #0x80
    beq _0803B34C
    b _0803B522
_0803B34C:
    adds r0, r7, #0x0
    bl sub_803B110
    cmp r0, #0x00
    bne _0803B358
    b _0803B53E
_0803B358:
    ldr r0, [r7, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0803B3B8
    adds r0, r7, #0x0
    adds r0, #0x7E
    ldrb r0, [r0, #0x00]
    subs r0, #0x05
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x01
    bhi _0803B3B8
    adds r2, r7, #0x0
    adds r2, #0x4E
    ldrh r3, [r2, #0x00]
    movs r1, #0x00
    ldsh r0, [r2, r1]
    adds r1, r7, #0x0
    adds r1, #0x50
    cmp r0, #0x00
    bne _0803B38E
    movs r4, #0x00
    ldsh r0, [r1, r4]
    cmp r0, #0x00
    beq _0803B3A8
_0803B38E:
    negs r0, r3
    strh r0, [r2, #0x00]
    ldrh r0, [r1, #0x00]
    negs r0, r0
    strh r0, [r1, #0x00]
    ldr r0, [r7, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x0A
    orrs r0, r1
    str r0, [r7, #0x48]
    adds r0, r7, #0x0
    bl sub_8040D68
_0803B3A8:
    adds r1, r7, #0x0
    adds r1, #0x60
    movs r0, #0x00
    strh r0, [r1, #0x00]
    b _0803B540
    .byte 0x00, 0x00
_0803B3B4: .4byte 0x0000FFFF
_0803B3B8:
    adds r2, r7, #0x0
    adds r2, #0x62
    movs r1, #0x00
    movs r0, #0x08
    strh r0, [r2, #0x00]
    adds r0, r7, #0x0
    adds r0, #0x9C
    strh r1, [r0, #0x00]
    adds r2, #0x52
    ldrh r1, [r2, #0x00]
    ldr r0, _0803B3EC @ =0x0000FFBF
    ands r0, r1
    strh r0, [r2, #0x00]
    ldr r4, _0803B3F0 @ =0x03002E20
    adds r4, #0x24
    mov r0, r9
    bl sub_8032C2C
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    mov r8, r4
    ldrb r0, [r5, #0x00]
    cmp r0, #0x84
    bne _0803B3F4
    movs r3, #0x7C
    b _0803B406
_0803B3EC: .4byte 0x0000FFBF
_0803B3F0: .4byte 0x03002E20
_0803B3F4:
    cmp r1, #0x00
    beq _0803B400
    cmp r1, #0x0C
    bne _0803B404
    movs r3, #0xA9
    b _0803B406
_0803B400:
    movs r3, #0xAA
    b _0803B406
_0803B404:
    movs r3, #0xA8
_0803B406:
    lsls r3, r3, #0x10
    movs r5, #0x00
    ldr r2, _0803B4E4 @ =0x08102414
    ldr r1, _0803B4E8 @ =0x08102498
    lsrs r0, r3, #0x0D
    adds r6, r0, r1
    ldrh r1, [r6, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    ldrh r0, [r1, #0x04]
    cmp r0, #0x00
    beq _0803B42E
    ldr r1, [r1, #0x00]
    ldr r0, [r6, #0x00]
    cmp r1, r0
    bne _0803B42E
    movs r5, #0x01
_0803B42E:
    cmp r5, #0x00
    bne _0803B4BE
    lsrs r5, r3, #0x10
    adds r0, r7, #0x0
    adds r0, #0xBC
    ldr r4, [r0, #0x00]
    ldr r0, _0803B4EC @ =0x00000814
    add r0, r8
    ldr r0, [r0, #0x00]
    cmp r7, r0
    bne _0803B4BE
    ldr r0, [r7, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0803B4BE
    adds r0, r4, #0x0
    cmp r4, #0x00
    bge _0803B456
    negs r0, r4
_0803B456:
    lsls r0, r0, #0x06
    lsrs r0, r0, #0x16
    ldr r1, _0803B4F0 @ =0xFFFFFE00
    adds r0, r0, r1
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    adds r0, r4, #0x0
    cmp r0, #0x00
    bge _0803B46A
    negs r0, r0
_0803B46A:
    asrs r4, r0, #0x14
    movs r0, #0x3F
    ands r4, r0
    adds r4, #0xC0
    lsls r6, r6, #0x10
    asrs r6, r6, #0x10
    adds r0, r5, #0x0
    bl m4aSongNumStart
    ldr r2, _0803B4E4 @ =0x08102414
    mov r8, r2
    ldr r0, _0803B4E8 @ =0x08102498
    lsls r5, r5, #0x03
    adds r5, r5, r0
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r4, #0x0
    bl m4aMPlayVolumeControl
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayPitchControl
_0803B4BE:
    adds r1, r7, #0x0
    adds r1, #0x5E
    ldrh r0, [r1, #0x00]
    mov r4, r10
    subs r0, r4, r0
    strh r4, [r1, #0x00]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0803B4F8
    negs r0, r0
    lsls r0, r0, #0x10
    ldr r1, _0803B4F4 @ =0xFF060000
    adds r0, r0, r1
    lsrs r2, r0, #0x10
    cmp r0, #0x00
    bge _0803B50A
    movs r2, #0x04
    b _0803B50A
_0803B4E4: .4byte 0x08102414
_0803B4E8: .4byte 0x08102498
_0803B4EC: .4byte 0x00000814
_0803B4F0: .4byte 0xFFFFFE00
_0803B4F4: .4byte 0xFF060000
_0803B4F8:
    subs r0, #0x01
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    beq _0803B50A
    subs r0, #0xFD
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
_0803B50A:
    lsls r2, r2, #0x10
    lsrs r0, r2, #0x10
    cmp r0, #0x07
    bls _0803B516
    movs r0, #0x01
    b _0803B540
_0803B516:
    asrs r2, r2, #0x10
    adds r0, r7, #0x0
    mov r1, r9
    bl sub_803B018
    b _0803B540
_0803B522:
    ldr r0, [r7, #0x48]
    movs r1, #0x02
    negs r1, r1
    ands r0, r1
    str r0, [r7, #0x48]
    adds r0, r7, #0x0
    adds r0, #0x5E
    mov r2, r10
    strh r2, [r0, #0x00]
    b _0803B53E
_0803B536:
    adds r1, r7, #0x0
    adds r1, #0x85
    movs r0, #0x40
_0803B53C:
    strb r0, [r1, #0x00]
_0803B53E:
    movs r0, #0x00
_0803B540:
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_803B550
sub_803B550:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    adds r7, r1, #0x0
    adds r5, r4, #0x0
    adds r5, #0x60
    ldrh r1, [r5, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x07
    ands r0, r1
    cmp r0, #0x00
    beq _0803B568
    b _0803B6A4
_0803B568:
    adds r0, r4, #0x0
    adds r1, r7, #0x0
    bl sub_803B2B4
    cmp r0, #0x00
    beq _0803B5A4
    ldrh r2, [r5, #0x00]
    ldrb r1, [r5, #0x00]
    movs r0, #0xFF
    lsls r0, r0, #0x08
    ands r0, r2
    strh r0, [r5, #0x00]
    adds r1, #0x01
    lsls r1, r1, #0x18
    lsrs r2, r1, #0x18
    ldrh r1, [r5, #0x00]
    cmp r2, #0x07
    bhi _0803B592
    movs r0, #0x80
    lsls r0, r0, #0x08
    b _0803B596
_0803B592:
    movs r0, #0xC0
    lsls r0, r0, #0x08
_0803B596:
    orrs r1, r0
    orrs r1, r2
    adds r0, r4, #0x0
    adds r0, #0x60
    strh r1, [r0, #0x00]
    adds r5, r0, #0x0
    b _0803B6EA
_0803B5A4:
    ldrh r1, [r5, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0803B694
    ldr r0, [r4, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x05
    orrs r0, r1
    str r0, [r4, #0x48]
    adds r5, r4, #0x0
    adds r5, #0x4E
    movs r0, #0x00
    ldsh r2, [r5, r0]
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _0803B5CA
    negs r0, r2
_0803B5CA:
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    adds r0, r4, #0x0
    adds r0, #0x50
    movs r6, #0x00
    ldsh r1, [r0, r6]
    adds r6, r0, #0x0
    cmp r1, #0x00
    bge _0803B5DE
    negs r1, r1
_0803B5DE:
    lsls r0, r1, #0x10
    lsrs r1, r0, #0x10
    lsls r0, r3, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0xBF
    bgt _0803B5F2
    lsls r0, r1, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0xBF
    ble _0803B664
_0803B5F2:
    adds r0, r4, #0x0
    adds r0, #0xBC
    ldr r1, [r0, #0x00]
    ldr r0, _0803B61C @ =0x04FFFFFF
    cmp r1, r0
    ble _0803B620
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _0803B606
    adds r0, r2, #0x3
_0803B606:
    asrs r0, r0, #0x02
    strh r0, [r5, #0x00]
    movs r1, #0x00
    ldsh r0, [r6, r1]
    cmp r0, #0x00
    bge _0803B614
    adds r0, #0x03
_0803B614:
    asrs r0, r0, #0x02
    strh r0, [r6, #0x00]
    b _0803B694
    .byte 0x00, 0x00
_0803B61C: .4byte 0x04FFFFFF
_0803B620:
    ldr r0, _0803B65C @ =0x080EC780
    adds r3, r4, #0x0
    adds r3, #0x5C
    ldrh r1, [r3, #0x00]
    lsls r1, r1, #0x01
    adds r0, r1, r0
    movs r1, #0x00
    ldsh r0, [r0, r1]
    muls r0, r2
    cmp r0, #0x00
    bge _0803B638
    adds r0, #0xFF
_0803B638:
    asrs r0, r0, #0x08
    strh r0, [r5, #0x00]
    movs r0, #0x00
    ldsh r2, [r6, r0]
    ldr r1, _0803B660 @ =0x080EC788
    ldrh r0, [r3, #0x00]
    lsls r0, r0, #0x01
    adds r0, r0, r1
    movs r1, #0x00
    ldsh r0, [r0, r1]
    muls r0, r2
    cmp r0, #0x00
    bge _0803B654
    adds r0, #0xFF
_0803B654:
    asrs r0, r0, #0x08
    strh r0, [r6, #0x00]
    b _0803B694
    .byte 0x00, 0x00
_0803B65C: .4byte 0x080EC780
_0803B660: .4byte 0x080EC788
_0803B664:
    movs r2, #0x00
    ldsh r0, [r5, r2]
    cmp r0, #0x00
    beq _0803B67C
    ldr r2, _0803B6A0 @ =0xFFFFFF00
    adds r1, r2, #0x0
    cmp r0, #0x00
    blt _0803B67A
    movs r0, #0x80
    lsls r0, r0, #0x01
    adds r1, r0, #0x0
_0803B67A:
    strh r1, [r5, #0x00]
_0803B67C:
    movs r1, #0x00
    ldsh r0, [r6, r1]
    cmp r0, #0x00
    beq _0803B694
    ldr r2, _0803B6A0 @ =0xFFFFFF00
    adds r1, r2, #0x0
    cmp r0, #0x00
    blt _0803B692
    movs r0, #0x80
    lsls r0, r0, #0x01
    adds r1, r0, #0x0
_0803B692:
    strh r1, [r6, #0x00]
_0803B694:
    adds r1, r4, #0x0
    adds r1, #0x60
    movs r0, #0x00
    strh r0, [r1, #0x00]
    adds r5, r1, #0x0
    b _0803B6EA
_0803B6A0: .4byte 0xFFFFFF00
_0803B6A4:
    adds r0, r4, #0x0
    adds r1, r7, #0x0
    bl sub_803B2B4
    cmp r0, #0x00
    beq _0803B6E8
    adds r0, r4, #0x0
    adds r0, #0x56
    ldrh r1, [r0, #0x00]
    lsrs r1, r1, #0x0E
    ldr r0, _0803B6E0 @ =0x080EC770
    lsls r1, r1, #0x01
    adds r0, r1, r0
    ldrh r0, [r0, #0x00]
    adds r3, r4, #0x0
    adds r3, #0x4E
    movs r2, #0x00
    strh r0, [r3, #0x00]
    ldr r0, _0803B6E4 @ =0x080EC778
    adds r1, r1, r0
    ldrh r1, [r1, #0x00]
    adds r0, r4, #0x0
    adds r0, #0x50
    strh r1, [r0, #0x00]
    adds r0, #0x0A
    strh r2, [r0, #0x00]
    adds r0, #0x02
    strh r2, [r0, #0x00]
    b _0803B6EA
    .byte 0x00, 0x00
_0803B6E0: .4byte 0x080EC770
_0803B6E4: .4byte 0x080EC778
_0803B6E8:
    strh r0, [r5, #0x00]
_0803B6EA:
    ldr r1, [r4, #0x08]
    movs r2, #0x00
    movs r0, #0x80
    lsls r0, r0, #0x0B
    cmp r1, r0
    ble _0803B6F8
    movs r2, #0x01
_0803B6F8:
    cmp r2, #0x00
    bne _0803B770
    ldr r1, [r4, #0x00]
    ldr r2, [r4, #0x04]
    adds r0, r7, #0x0
    movs r3, #0x00
    bl sub_8032C50
    cmp r0, #0x00
    beq _0803B724
    ldr r0, [r4, #0x48]
    movs r1, #0x01
    orrs r0, r1
    str r0, [r4, #0x48]
    adds r0, r7, #0x0
    movs r1, #0x00
    bl sub_8032974
    adds r1, r4, #0x0
    adds r1, #0x85
    strb r0, [r1, #0x00]
    b _0803B770
_0803B724:
    ldr r0, [r4, #0x00]
    cmp r0, #0x00
    bge _0803B72E
    ldr r1, _0803B788 @ =0x0000FFFF
    adds r0, r0, r1
_0803B72E:
    lsrs r2, r0, #0x10
    ldr r0, [r4, #0x04]
    cmp r0, #0x00
    bge _0803B73A
    ldr r6, _0803B788 @ =0x0000FFFF
    adds r0, r0, r6
_0803B73A:
    lsrs r3, r0, #0x10
    adds r0, r4, #0x0
    adds r0, #0x85
    ldrb r1, [r0, #0x00]
    movs r0, #0x90
    ands r0, r1
    cmp r0, #0x90
    bne _0803B770
    lsls r0, r2, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0803B754
    adds r0, #0x07
_0803B754:
    asrs r0, r0, #0x03
    lsls r0, r0, #0x03
    adds r1, r0, #0x4
    lsls r0, r3, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0803B764
    adds r0, #0x07
_0803B764:
    asrs r2, r0, #0x03
    lsls r2, r2, #0x03
    adds r2, #0x04
    adds r0, r4, #0x0
    bl sub_8040810
_0803B770:
    ldrh r1, [r5, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _0803B7A8
    ldrh r0, [r4, #0x38]
    cmp r0, #0x00
    beq _0803B78C
    subs r0, #0x01
    strh r0, [r4, #0x38]
    b _0803B7A8
_0803B788: .4byte 0x0000FFFF
_0803B78C:
    adds r1, r4, #0x0
    adds r1, #0x62
    ldrh r0, [r1, #0x00]
    cmp r0, #0x00
    bne _0803B7A4
    ldr r0, [r4, #0x48]
    ldr r1, _0803B7A0 @ =0xFFFFBFFF
    ands r0, r1
    b _0803B7B0
    .byte 0x00, 0x00
_0803B7A0: .4byte 0xFFFFBFFF
_0803B7A4:
    subs r0, #0x01
    strh r0, [r1, #0x00]
_0803B7A8:
    ldr r0, [r4, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x07
    orrs r0, r1
_0803B7B0:
    str r0, [r4, #0x48]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    thumb_func_start sub_803B7B8
sub_803B7B8:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r4, r0, #0x0
    mov r8, r1
    ldr r1, _0803B828 @ =0x03002E20
    adds r6, r1, #0x0
    adds r6, #0x24
    adds r0, #0xF0
    movs r2, #0x00
    ldsh r5, [r0, r2]
    movs r3, #0x06
    ldsh r7, [r4, r3]
    ldr r0, _0803B82C @ =0x000007FE
    adds r1, r1, r0
    ldrh r1, [r1, #0x00]
    adds r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    beq _0803B7E2
    b _0803B978
_0803B7E2:
    ldr r1, [r4, #0x48]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _0803B7EE
    b _0803B978
_0803B7EE:
    adds r0, r4, #0x0
    adds r0, #0x78
    ldrb r0, [r0, #0x00]
    cmp r0, #0x06
    bne _0803B7FA
    b _0803B978
_0803B7FA:
    movs r0, #0xC1
    negs r0, r0
    ands r1, r0
    str r1, [r4, #0x48]
    mov r0, r8
    bl sub_80329B8
    cmp r0, r5
    beq _0803B830
    cmp r0, r5
    blt _0803B830
    cmp r0, r7
    ble _0803B816
    b _0803B978
_0803B816:
    adds r2, r4, #0x0
    adds r2, #0x91
    ldrb r0, [r2, #0x00]
    cmp r0, #0x74
    bhi _0803B822
    b _0803B978
_0803B822:
    subs r0, #0x01
    strb r0, [r2, #0x00]
    b _0803B978
_0803B828: .4byte 0x03002E20
_0803B82C: .4byte 0x000007FE
_0803B830:
    cmp r0, r7
    bgt _0803B836
    b _0803B978
_0803B836:
    adds r2, r4, #0x0
    adds r2, #0x91
    ldrb r0, [r2, #0x00]
    adds r0, #0x01
    movs r1, #0x00
    strb r0, [r2, #0x00]
    adds r0, r4, #0x0
    adds r0, #0x90
    strb r1, [r0, #0x00]
    subs r0, #0x5A
    strb r1, [r0, #0x00]
    ldrb r0, [r2, #0x00]
    lsls r2, r0, #0x08
    adds r1, r4, #0x0
    adds r1, #0xC6
    ldrh r3, [r1, #0x00]
    cmp r2, r3
    bgt _0803B85C
    b _0803B978
_0803B85C:
    movs r7, #0x00
    strh r2, [r1, #0x00]
    movs r5, #0x80
    lsls r5, r5, #0x08
    cmp r0, #0x80
    bne _0803B86A
    b _0803B978
_0803B86A:
    ldr r2, _0803B8D8 @ =0x000007E6
    adds r0, r6, r2
    ldrh r2, [r0, #0x00]
    ldrh r1, [r1, #0x00]
    subs r0, r1, r2
    cmp r0, #0x00
    blt _0803B8E8
    ldr r5, [r4, #0x48]
    movs r0, #0x20
    ands r5, r0
    cmp r5, #0x00
    bne _0803B95E
    ldr r3, _0803B8DC @ =0x00000814
    adds r0, r6, r3
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _0803B8A8
    adds r2, r4, #0x0
    adds r2, #0xA4
    ldrh r0, [r2, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x07
    adds r1, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    bl sub_804F098
    movs r1, #0x08
    ldr r2, _0803B8E0 @ =0x00000BE4
    adds r0, r6, r2
    str r1, [r0, #0x00]
_0803B8A8:
    adds r0, r4, #0x0
    adds r1, r6, #0x0
    bl sub_803DCF0
    adds r0, r4, #0x0
    adds r1, r6, #0x0
    bl sub_80430EC
    ldr r0, [r4, #0x48]
    movs r1, #0x39
    negs r1, r1
    ands r0, r1
    ldr r1, _0803B8E4 @ =0x00002038
    orrs r0, r1
    str r0, [r4, #0x48]
    adds r0, r4, #0x0
    adds r0, #0x82
    strh r5, [r0, #0x00]
    subs r0, #0x02
    strh r5, [r0, #0x00]
    subs r0, #0x02
    strb r7, [r0, #0x00]
    b _0803B95E
    .byte 0x00, 0x00
_0803B8D8: .4byte 0x000007E6
_0803B8DC: .4byte 0x00000814
_0803B8E0: .4byte 0x00000BE4
_0803B8E4: .4byte 0x00002038
_0803B8E8:
    movs r3, #0x80
    lsls r3, r3, #0x01
    adds r0, r1, r3
    cmp r0, r2
    bne _0803B92C
    ldr r0, [r4, #0x48]
    movs r1, #0x08
    orrs r0, r1
    str r0, [r4, #0x48]
    ldr r3, _0803B924 @ =0x00000814
    adds r0, r6, r3
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _0803B90E
    ldr r1, _0803B928 @ =0x080EC790
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
_0803B90E:
    adds r0, r4, #0x0
    adds r0, #0xA4
    ldrh r1, [r0, #0x00]
    movs r2, #0x80
    orrs r1, r2
    strh r1, [r0, #0x00]
    adds r0, r4, #0x0
    adds r1, r6, #0x0
    bl sub_803DCF0
    b _0803B95E
_0803B924: .4byte 0x00000814
_0803B928: .4byte 0x080EC790
_0803B92C:
    ldr r0, [r4, #0x48]
    movs r1, #0x04
    orrs r0, r1
    str r0, [r4, #0x48]
    ands r0, r5
    cmp r0, #0x00
    beq _0803B95E
    adds r2, r4, #0x0
    adds r2, #0xA4
    ldrh r1, [r2, #0x00]
    adds r0, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    ldr r1, _0803B984 @ =0x00000814
    adds r0, r6, r1
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _0803B956
    movs r0, #0x6B
    bl m4aSongNumStart
_0803B956:
    adds r0, r4, #0x0
    adds r1, r6, #0x0
    bl sub_803DCF0
_0803B95E:
    ldr r0, [r4, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x06
    ands r0, r1
    cmp r0, #0x00
    beq _0803B978
    adds r0, r4, #0x0
    mov r1, r8
    bl sub_803DCA4
    ldr r2, _0803B988 @ =0x00000191
    adds r1, r4, r2
    strb r0, [r1, #0x00]
_0803B978:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0803B984: .4byte 0x00000814
_0803B988: .4byte 0x00000191
    thumb_func_start sub_803B98C
sub_803B98C:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r5, r0, #0x0
    adds r6, r1, #0x0
    ldr r0, [r5, #0x48]
    movs r1, #0x04
    negs r1, r1
    ands r0, r1
    str r0, [r5, #0x48]
    ldr r1, [r5, #0x00]
    cmp r1, #0x00
    bge _0803B9AA
    ldr r0, _0803B9D8 @ =0x0000FFFF
    adds r1, r1, r0
_0803B9AA:
    lsrs r7, r1, #0x10
    ldr r2, [r5, #0x04]
    cmp r2, #0x00
    bge _0803B9B6
    ldr r1, _0803B9D8 @ =0x0000FFFF
    adds r2, r2, r1
_0803B9B6:
    lsrs r4, r2, #0x10
    ldr r2, _0803B9DC @ =0x0000019B
    adds r2, r2, r5
    mov r8, r2
    movs r0, #0x00
    strb r0, [r2, #0x00]
    ldr r1, [r5, #0x00]
    ldr r2, [r5, #0x04]
    adds r0, r6, #0x0
    movs r3, #0x00
    bl sub_8032C50
    cmp r0, #0x00
    beq _0803B9E0
    ldr r0, [r5, #0x48]
    movs r1, #0x01
    b _0803BA68
_0803B9D8: .4byte 0x0000FFFF
_0803B9DC: .4byte 0x0000019B
_0803B9E0:
    lsls r1, r7, #0x10
    asrs r1, r1, #0x10
    lsls r2, r4, #0x10
    asrs r2, r2, #0x10
    adds r0, r6, #0x0
    movs r3, #0x00
    bl sub_80328D4
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    movs r7, #0x80
    adds r0, r4, #0x0
    ands r0, r7
    cmp r0, #0x00
    beq _0803BA34
    movs r1, #0x7F
    ands r4, r1
    cmp r4, #0x7F
    bne _0803BA10
    ldr r0, [r5, #0x48]
    movs r1, #0x02
    orrs r0, r1
    str r0, [r5, #0x48]
    b _0803BA22
_0803BA10:
    adds r0, r5, #0x0
    adds r0, #0x90
    ldrb r2, [r0, #0x00]
    cmp r4, r2
    beq _0803BA22
    strb r4, [r0, #0x00]
    ands r4, r1
    subs r0, #0x5A
    strb r4, [r0, #0x00]
_0803BA22:
    adds r0, r5, #0x0
    adds r1, r6, #0x0
    bl sub_803B7B8
    adds r0, r6, #0x0
    adds r1, r5, #0x0
    bl sub_804AF3C
    b _0803BA8C
_0803BA34:
    cmp r4, #0x7F
    beq _0803BA64
    adds r0, r6, #0x0
    adds r1, r5, #0x0
    bl sub_804AF3C
    adds r0, r6, #0x0
    adds r1, r4, #0x0
    bl sub_8032B50
    mov r1, r8
    strb r0, [r1, #0x00]
    ands r0, r7
    cmp r0, #0x00
    beq _0803BA6E
    ldr r1, [r5, #0x08]
    movs r2, #0x00
    movs r0, #0x80
    lsls r0, r0, #0x0B
    cmp r1, r0
    ble _0803BA60
    movs r2, #0x01
_0803BA60:
    cmp r2, #0x00
    beq _0803BA6E
_0803BA64:
    ldr r0, [r5, #0x48]
    movs r1, #0x02
_0803BA68:
    orrs r0, r1
    str r0, [r5, #0x48]
    b _0803BA8C
_0803BA6E:
    adds r0, r5, #0x0
    adds r0, #0x90
    ldrb r2, [r0, #0x00]
    cmp r4, r2
    beq _0803BA8C
    strb r4, [r0, #0x00]
    movs r0, #0x7F
    ands r4, r0
    adds r0, r5, #0x0
    adds r0, #0x36
    strb r4, [r0, #0x00]
    adds r0, r6, #0x0
    adds r1, r5, #0x0
    bl sub_804AF3C
_0803BA8C:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_803BA98
sub_803BA98:
    push {r4, r5, r6, lr}
    mov r12, r0
    adds r0, #0xB6
    ldrh r2, [r0, #0x00]
    movs r1, #0x00
    ldsh r0, [r0, r1]
    movs r1, #0x80
    lsls r1, r1, #0x05
    cmp r0, r1
    ble _0803BAAE
    adds r2, r1, #0x0
_0803BAAE:
    lsls r0, r2, #0x10
    asrs r3, r0, #0x10
    mov r2, r12
    adds r2, #0xB4
    ldrh r1, [r2, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    ands r0, r1
    adds r6, r2, #0x0
    cmp r0, #0x00
    bne _0803BACA
    negs r0, r3
    lsls r0, r0, #0x10
    b _0803BACC
_0803BACA:
    lsls r0, r3, #0x10
_0803BACC:
    lsrs r1, r0, #0x10
    mov r0, r12
    adds r0, #0x82
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    ldrh r2, [r0, #0x00]
    adds r3, r1, r2
    strh r3, [r0, #0x00]
    mov r2, r12
    adds r2, #0xB6
    ldrh r5, [r2, #0x00]
    movs r4, #0x00
    ldsh r1, [r2, r4]
    adds r4, r0, #0x0
    cmp r1, #0xFF
    ble _0803BAF4
    adds r0, r5, #0x0
    subs r0, #0x40
    strh r0, [r2, #0x00]
    b _0803BB3E
_0803BAF4:
    lsls r0, r3, #0x10
    cmp r0, #0x00
    blt _0803BB0C
    ldr r1, _0803BB08 @ =0xFFFFFB80
    adds r0, r3, r1
    strh r0, [r4, #0x00]
    lsls r0, r0, #0x10
    cmp r0, #0x00
    bge _0803BB3E
    b _0803BB1A
_0803BB08: .4byte 0xFFFFFB80
_0803BB0C:
    movs r2, #0x90
    lsls r2, r2, #0x03
    adds r0, r3, r2
    strh r0, [r4, #0x00]
    lsls r0, r0, #0x10
    cmp r0, #0x00
    blt _0803BB3E
_0803BB1A:
    mov r0, r12
    adds r0, #0x84
    movs r1, #0x00
    strb r1, [r0, #0x00]
    movs r2, #0x00
    strh r1, [r4, #0x00]
    subs r0, #0x04
    strh r1, [r0, #0x00]
    subs r0, #0x02
    strb r2, [r0, #0x00]
    ldrh r1, [r6, #0x00]
    ldr r0, _0803BB44 @ =0x000040FF
    ands r0, r1
    movs r4, #0x80
    lsls r4, r4, #0x03
    adds r1, r4, #0x0
    orrs r0, r1
    strh r0, [r6, #0x00]
_0803BB3E:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0803BB44: .4byte 0x000040FF
    thumb_func_start sub_803BB48
sub_803BB48:
    push {r4, lr}
    mov r12, r0
    mov r2, r12
    adds r2, #0xCA
    mov r1, r12
    adds r1, #0x7A
    ldrh r0, [r2, #0x00]
    ldrh r4, [r1, #0x00]
    subs r0, r0, r4
    lsls r0, r0, #0x10
    asrs r1, r0, #0x10
    cmp r1, #0x00
    blt _0803BBA0
    ldr r0, _0803BB9C @ =0x000001FF
    cmp r1, r0
    ble _0803BBEC
    cmp r1, r0
    ble _0803BB6E
    adds r1, r0, #0x0
_0803BB6E:
    movs r0, #0xBA
    lsls r0, r0, #0x01
    add r0, r12
    ldr r2, [r0, #0x00]
    asrs r1, r1, #0x06
    movs r0, #0x07
    ands r1, r0
    mov r0, r12
    adds r0, #0x9A
    ldrb r3, [r0, #0x00]
    movs r0, #0x0F
    ands r0, r3
    lsls r0, r0, #0x03
    adds r1, r1, r0
    movs r0, #0x90
    lsls r0, r0, #0x01
    adds r2, r2, r0
    adds r2, r2, r1
    ldrb r0, [r2, #0x00]
    lsls r0, r0, #0x04
    adds r0, r4, r0
    b _0803BBDE
    .byte 0x00, 0x00
_0803BB9C: .4byte 0x000001FF
_0803BBA0:
    ldr r0, _0803BBE4 @ =0xFFFFFE00
    cmp r1, r0
    bge _0803BBEC
    negs r0, r1
    lsls r0, r0, #0x10
    asrs r1, r0, #0x10
    ldr r0, _0803BBE8 @ =0x000001FF
    cmp r1, r0
    ble _0803BBB4
    adds r1, r0, #0x0
_0803BBB4:
    movs r0, #0xBA
    lsls r0, r0, #0x01
    add r0, r12
    ldr r2, [r0, #0x00]
    asrs r1, r1, #0x06
    movs r0, #0x07
    ands r1, r0
    mov r0, r12
    adds r0, #0x9A
    ldrb r3, [r0, #0x00]
    movs r0, #0x0F
    ands r0, r3
    lsls r0, r0, #0x03
    adds r1, r1, r0
    movs r0, #0x90
    lsls r0, r0, #0x01
    adds r2, r2, r0
    adds r2, r2, r1
    ldrb r0, [r2, #0x00]
    lsls r0, r0, #0x04
    subs r0, r4, r0
_0803BBDE:
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    b _0803BBEE
_0803BBE4: .4byte 0xFFFFFE00
_0803BBE8: .4byte 0x000001FF
_0803BBEC:
    ldrh r1, [r2, #0x00]
_0803BBEE:
    mov r0, r12
    adds r0, #0x7A
    strh r1, [r0, #0x00]
    subs r0, #0x24
    strh r1, [r0, #0x00]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_803BC00
sub_803BC00:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    adds r0, #0xB4
    ldrh r1, [r0, #0x00]
    movs r0, #0xA0
    lsls r0, r0, #0x04
    ands r0, r1
    cmp r0, #0x00
    beq _0803BC2E
    adds r0, r4, #0x0
    bl sub_803BA98
    adds r1, r4, #0x0
    adds r1, #0x7A
    adds r0, r4, #0x0
    adds r0, #0x82
    ldrh r0, [r0, #0x00]
    ldrh r1, [r1, #0x00]
    adds r0, r0, r1
    adds r1, r4, #0x0
    adds r1, #0x56
    strh r0, [r1, #0x00]
    b _0803BC7E
_0803BC2E:
    adds r0, r4, #0x0
    adds r0, #0x56
    adds r1, r4, #0x0
    adds r1, #0x7A
    ldrh r3, [r0, #0x00]
    ldrh r5, [r1, #0x00]
    subs r0, r3, r5
    lsls r0, r0, #0x10
    asrs r2, r0, #0x10
    adds r6, r1, #0x0
    cmp r2, #0x00
    beq _0803BC78
    cmp r2, #0x00
    ble _0803BC5C
    ldr r0, _0803BC58 @ =0x000007FF
    cmp r2, r0
    ble _0803BC64
    movs r1, #0xC0
    lsls r1, r1, #0x03
    b _0803BC6E
    .byte 0x00, 0x00
_0803BC58: .4byte 0x000007FF
_0803BC5C:
    negs r1, r2
    ldr r0, _0803BC68 @ =0x000007FF
    cmp r1, r0
    bgt _0803BC6C
_0803BC64:
    adds r0, r3, #0x0
    b _0803BC70
_0803BC68: .4byte 0x000007FF
_0803BC6C:
    ldr r1, _0803BC74 @ =0xFFFFFA00
_0803BC6E:
    adds r0, r5, r1
_0803BC70:
    strh r0, [r6, #0x00]
    b _0803BC7E
_0803BC74: .4byte 0xFFFFFA00
_0803BC78:
    adds r0, r4, #0x0
    bl sub_803BB48
_0803BC7E:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    thumb_func_start sub_803BC84
sub_803BC84:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    adds r5, r1, #0x0
    ldr r0, [r4, #0x48]
    movs r1, #0x03
    ands r0, r1
    cmp r0, #0x00
    beq _0803BCE4
    adds r6, r4, #0x0
    adds r6, #0x90
    ldrb r1, [r6, #0x00]
    adds r0, r5, #0x0
    movs r2, #0x00
    bl sub_8032AD0
    lsls r1, r0, #0x03
    ldr r0, [r4, #0x00]
    cmp r0, #0x00
    bge _0803BCAE
    ldr r2, _0803BCE0 @ =0x0000FFFF
    adds r0, r0, r2
_0803BCAE:
    asrs r0, r0, #0x10
    subs r0, r1, r0
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    ldrb r1, [r6, #0x00]
    adds r0, r5, #0x0
    movs r2, #0x00
    bl sub_8032B10
    lsls r2, r0, #0x03
    ldr r0, [r4, #0x04]
    cmp r0, #0x00
    bge _0803BCCC
    ldr r3, _0803BCE0 @ =0x0000FFFF
    adds r0, r0, r3
_0803BCCC:
    asrs r1, r0, #0x10
    subs r1, r2, r1
    lsls r0, r7, #0x10
    asrs r0, r0, #0x10
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    bl sub_802EC38
    b _0803BD0C
    .byte 0x00, 0x00
_0803BCE0: .4byte 0x0000FFFF
_0803BCE4:
    ldr r1, [r4, #0x00]
    cmp r1, #0x00
    bge _0803BCEE
    ldr r0, _0803BD1C @ =0x0000FFFF
    adds r1, r1, r0
_0803BCEE:
    lsrs r1, r1, #0x10
    ldr r2, [r4, #0x04]
    cmp r2, #0x00
    bge _0803BCFA
    ldr r3, _0803BD1C @ =0x0000FFFF
    adds r2, r2, r3
_0803BCFA:
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    asrs r2, r2, #0x10
    ldr r3, _0803BD20 @ =0x00000191
    adds r0, r4, r3
    ldrb r3, [r0, #0x00]
    adds r0, r5, #0x0
    bl sub_803285C
_0803BD0C:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0803BD1C: .4byte 0x0000FFFF
_0803BD20: .4byte 0x00000191
    thumb_func_start sub_803BD24
sub_803BD24:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    bl sub_803BC84
    ldr r1, _0803BD58 @ =0xFFFFFF00
    ands r1, r0
    adds r0, r4, #0x0
    adds r0, #0xCA
    movs r6, #0x00
    strh r1, [r0, #0x00]
    adds r1, r4, #0x0
    adds r1, #0x96
    movs r0, #0x80
    lsls r0, r0, #0x08
    strh r0, [r1, #0x00]
    adds r5, r4, #0x0
    adds r5, #0x84
    ldrb r0, [r5, #0x00]
    cmp r0, #0x01
    bne _0803BD4E
    b _0803BE88
_0803BD4E:
    cmp r0, #0x01
    bgt _0803BD5C
    cmp r0, #0x00
    beq _0803BD68
    b _0803BF28
_0803BD58: .4byte 0xFFFFFF00
_0803BD5C:
    cmp r0, #0x08
    beq _0803BE40
    cmp r0, #0x0B
    bne _0803BD66
    b _0803BE92
_0803BD66:
    b _0803BF28
_0803BD68:
    ldr r1, _0803BE00 @ =0x0000019B
    adds r0, r4, r1
    ldrb r0, [r0, #0x00]
    movs r1, #0x03
    ands r1, r0
    movs r2, #0xBC
    lsls r2, r2, #0x01
    adds r0, r4, r2
    ldrh r5, [r0, #0x00]
    adds r0, r4, #0x0
    adds r0, #0x4C
    ldrb r0, [r0, #0x00]
    movs r6, #0x07
    ands r6, r0
    movs r3, #0xBA
    lsls r3, r3, #0x01
    adds r0, r4, r3
    ldr r2, [r0, #0x00]
    adds r0, r4, #0x0
    adds r0, #0x9A
    ldrb r3, [r0, #0x00]
    movs r7, #0x0F
    adds r0, r7, #0x0
    ands r0, r3
    lsls r0, r0, #0x02
    adds r1, r1, r0
    lsls r0, r6, #0x02
    adds r0, r0, r6
    lsls r0, r0, #0x02
    adds r1, r1, r0
    adds r2, #0x80
    adds r2, r2, r1
    ldrb r0, [r2, #0x00]
    lsls r2, r0, #0x04
    cmp r5, #0x10
    ble _0803BDB2
    movs r5, #0x10
_0803BDB2:
    lsls r0, r5, #0x01
    ldr r3, _0803BE04 @ =0x0000019D
    adds r1, r4, r3
    ldrb r1, [r1, #0x00]
    adds r1, r2, r1
    adds r1, r1, r0
    adds r0, r4, #0x0
    adds r0, #0xBC
    ldr r2, [r0, #0x00]
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _0803BDCE
    ldr r3, _0803BE08 @ =0x0000FFFF
    adds r0, r2, r3
_0803BDCE:
    asrs r0, r0, #0x10
    subs r0, r1, r0
    cmp r0, #0x00
    blt _0803BE10
    asrs r0, r2, #0x10
    ldr r1, _0803BE0C @ =0x000003FF
    cmp r0, r1
    ble _0803BDE0
    adds r0, r1, #0x0
_0803BDE0:
    asrs r2, r0, #0x06
    ands r2, r7
    adds r3, r4, #0x0
    adds r3, #0xC0
    movs r1, #0xBA
    lsls r1, r1, #0x01
    adds r0, r4, r1
    ldr r0, [r0, #0x00]
    lsls r1, r6, #0x04
    adds r2, r2, r1
    adds r0, r0, r2
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x0C
    str r0, [r3, #0x00]
    b _0803BF2E
    .byte 0x00, 0x00
_0803BE00: .4byte 0x0000019B
_0803BE04: .4byte 0x0000019D
_0803BE08: .4byte 0x0000FFFF
_0803BE0C: .4byte 0x000003FF
_0803BE10:
    negs r0, r0
    ldr r1, _0803BE38 @ =0x000001FF
    cmp r0, r1
    ble _0803BE1A
    adds r0, r1, #0x0
_0803BE1A:
    adds r2, r4, #0x0
    adds r2, #0xC0
    ldrh r1, [r2, #0x00]
    str r1, [r2, #0x00]
    ldr r3, _0803BE3C @ =0x080EC7B0
    asrs r0, r0, #0x06
    lsls r0, r0, #0x01
    adds r0, r0, r3
    movs r3, #0x00
    ldsh r0, [r0, r3]
    lsls r0, r0, #0x10
    orrs r1, r0
    str r1, [r2, #0x00]
    b _0803BF2E
    .byte 0x00, 0x00
_0803BE38: .4byte 0x000001FF
_0803BE3C: .4byte 0x080EC7B0
_0803BE40:
    adds r1, r4, #0x0
    adds r1, #0xCC
    ldrh r0, [r1, #0x00]
    subs r0, #0x01
    strh r0, [r1, #0x00]
    lsls r0, r0, #0x10
    cmp r0, #0x00
    beq _0803BE72
    subs r1, #0x10
    ldr r0, [r1, #0x00]
    movs r2, #0xFC
    lsls r2, r2, #0x13
    cmp r0, r2
    ble _0803BE62
    str r2, [r1, #0x00]
    adds r1, #0x04
    b _0803BE8C
_0803BE62:
    adds r0, r4, #0x0
    adds r0, #0xC0
    ldrh r1, [r0, #0x00]
    movs r2, #0xC8
    lsls r2, r2, #0x0E
    orrs r1, r2
    str r1, [r0, #0x00]
    b _0803BF2E
_0803BE72:
    adds r2, r4, #0x0
    adds r2, #0xB4
    ldrh r1, [r2, #0x00]
    ldr r0, _0803BE84 @ =0x0000FF3F
    ands r0, r1
    strh r0, [r2, #0x00]
_0803BE7E:
    strb r6, [r5, #0x00]
    b _0803BF2E
    .byte 0x00, 0x00
_0803BE84: .4byte 0x0000FF3F
_0803BE88:
    adds r1, r4, #0x0
    adds r1, #0xC0
_0803BE8C:
    ldrh r0, [r1, #0x00]
    str r0, [r1, #0x00]
    b _0803BF2E
_0803BE92:
    ldr r2, [r4, #0x48]
    movs r0, #0x80
    lsls r0, r0, #0x07
    ands r2, r0
    cmp r2, #0x00
    bne _0803BF2E
    adds r0, r4, #0x0
    adds r0, #0xBC
    ldr r1, [r0, #0x00]
    ldr r0, _0803BECC @ =0x00FFFFFF
    adds r3, r4, #0x0
    adds r3, #0x82
    cmp r1, r0
    bgt _0803BEB0
    strh r2, [r3, #0x00]
_0803BEB0:
    ldrh r0, [r3, #0x00]
    movs r2, #0x00
    ldsh r1, [r3, r2]
    cmp r1, #0x00
    bge _0803BED0
    movs r1, #0x80
    lsls r1, r1, #0x03
    adds r0, r0, r1
    strh r0, [r3, #0x00]
    lsls r0, r0, #0x10
    cmp r0, #0x00
    blt _0803BEF4
    b _0803BE7E
    .byte 0x00, 0x00
_0803BECC: .4byte 0x00FFFFFF
_0803BED0:
    cmp r1, #0x00
    ble _0803BEE0
    ldr r2, _0803BEF0 @ =0xFFFFFC00
    adds r0, r0, r2
    strh r0, [r3, #0x00]
    lsls r0, r0, #0x10
    cmp r0, #0x00
    blt _0803BE7E
_0803BEE0:
    movs r0, #0x00
    ldsh r1, [r3, r0]
    cmp r1, #0x00
    bne _0803BEF4
    adds r0, r4, #0x0
    adds r0, #0x84
    strb r1, [r0, #0x00]
    b _0803BF2E
_0803BEF0: .4byte 0xFFFFFC00
_0803BEF4:
    movs r2, #0x00
    ldsh r1, [r3, r2]
    cmp r1, #0x00
    bge _0803BEFE
    negs r1, r1
_0803BEFE:
    ldr r0, _0803BF20 @ =0x00003FFF
    cmp r1, r0
    ble _0803BF08
    movs r1, #0xFC
    lsls r1, r1, #0x06
_0803BF08:
    asrs r0, r1, #0x0B
    movs r1, #0x07
    ands r0, r1
    adds r2, r4, #0x0
    adds r2, #0xC0
    ldr r1, _0803BF24 @ =0x080EC248
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x10
    str r0, [r2, #0x00]
    b _0803BF2E
_0803BF20: .4byte 0x00003FFF
_0803BF24: .4byte 0x080EC248
_0803BF28:
    adds r0, r4, #0x0
    bl sub_8038298
_0803BF2E:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    thumb_func_start sub_803BF34
sub_803BF34:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x034
    adds r6, r0, #0x0
    str r1, [sp, #0x000]
    adds r0, #0xBC
    movs r4, #0x00
    str r4, [r0, #0x00]
    subs r0, #0x6A
    movs r5, #0x00
    strh r4, [r0, #0x00]
    subs r0, #0x02
    strh r4, [r0, #0x00]
    subs r0, #0x02
    strh r4, [r0, #0x00]
    adds r0, #0x72
    str r4, [r0, #0x00]
    subs r0, #0x38
    strh r4, [r0, #0x00]
    subs r0, #0x0A
    strb r5, [r0, #0x00]
    adds r0, #0x02
    strh r4, [r0, #0x00]
    adds r0, #0x02
    strh r4, [r0, #0x00]
    adds r0, #0x46
    strh r4, [r0, #0x00]
    adds r0, #0x02
    strh r4, [r0, #0x00]
    subs r0, #0x34
    strh r4, [r0, #0x00]
    adds r0, #0x02
    strh r4, [r0, #0x00]
    subs r0, #0x06
    strh r4, [r0, #0x00]
    adds r0, #0x02
    strh r4, [r0, #0x00]
    subs r0, #0x40
    strb r5, [r0, #0x00]
    adds r0, #0x24
    strb r5, [r0, #0x00]
    adds r0, #0x22
    strb r5, [r0, #0x00]
    subs r0, #0x16
    strb r5, [r0, #0x00]
    subs r0, #0x18
    strh r4, [r0, #0x00]
    adds r0, r6, #0x0
    bl sub_803D480
    adds r0, r6, #0x0
    adds r0, #0xB2
    strh r4, [r0, #0x00]
    subs r0, #0x16
    strh r4, [r0, #0x00]
    adds r0, #0x30
    strh r4, [r0, #0x00]
    subs r0, #0x16
    strh r4, [r0, #0x00]
    subs r0, #0x12
    strh r4, [r0, #0x00]
    subs r0, #0x02
    strh r4, [r0, #0x00]
    subs r0, #0x02
    strh r4, [r0, #0x00]
    subs r0, #0x02
    strh r4, [r0, #0x00]
    adds r2, r6, #0x0
    adds r2, #0xB4
    ldrh r1, [r2, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x07
    ands r0, r1
    strh r0, [r2, #0x00]
    ldr r0, [r6, #0x48]
    movs r1, #0x41
    negs r1, r1
    ands r0, r1
    str r0, [r6, #0x48]
    ldr r1, [r6, #0x00]
    cmp r1, #0x00
    bge _0803BFE2
    ldr r0, _0803C0FC @ =0x0000FFFF
    adds r1, r1, r0
_0803BFE2:
    asrs r1, r1, #0x10
    ldr r2, [r6, #0x04]
    cmp r2, #0x00
    bge _0803BFEE
    ldr r3, _0803C0FC @ =0x0000FFFF
    adds r2, r2, r3
_0803BFEE:
    asrs r2, r2, #0x10
    ldr r0, [sp, #0x000]
    movs r3, #0x00
    bl sub_80328D4
    adds r2, r6, #0x0
    adds r2, #0x90
    strb r0, [r2, #0x00]
    movs r1, #0x7F
    ands r0, r1
    adds r3, r6, #0x0
    adds r3, #0x36
    strb r0, [r3, #0x00]
    adds r0, r6, #0x0
    adds r0, #0x91
    strb r1, [r0, #0x00]
    ldrb r0, [r2, #0x00]
    movs r2, #0xFE
    lsls r2, r2, #0x07
    adds r1, r2, #0x0
    orrs r0, r1
    adds r1, r6, #0x0
    adds r1, #0xC6
    strh r0, [r1, #0x00]
    adds r0, r6, #0x0
    adds r0, #0xB0
    strb r5, [r0, #0x00]
    adds r3, #0xB2
    movs r0, #0x68
    adds r0, r0, r6
    mov r8, r0
    movs r1, #0x6A
    adds r1, r1, r6
    mov r9, r1
    movs r2, #0x66
    adds r2, r2, r6
    mov r12, r2
    adds r4, r6, #0x0
    adds r4, #0x5A
    movs r0, #0x74
    adds r0, r0, r6
    mov r10, r0
    adds r5, r6, #0x0
    adds r5, #0x64
    adds r1, r6, #0x0
    adds r1, #0xAC
    str r1, [sp, #0x02C]
    adds r2, r6, #0x0
    adds r2, #0xB8
    str r2, [sp, #0x030]
    adds r0, r6, #0x0
    adds r0, #0x76
    str r0, [sp, #0x01C]
    adds r1, #0x24
    str r1, [sp, #0x004]
    adds r2, #0x1C
    str r2, [sp, #0x008]
    subs r0, #0x14
    str r0, [sp, #0x018]
    adds r7, r6, #0x0
    adds r7, #0xD8
    subs r1, #0x4B
    str r1, [sp, #0x020]
    subs r2, #0x2C
    str r2, [sp, #0x028]
    subs r0, #0x06
    str r0, [sp, #0x00C]
    subs r1, #0x27
    str r1, [sp, #0x010]
    subs r2, #0x48
    str r2, [sp, #0x014]
    adds r0, #0x2A
    str r0, [sp, #0x024]
    adds r1, #0x7E
    movs r2, #0x00
    adds r0, #0x5E
_0803C086:
    strh r2, [r0, #0x00]
    subs r0, #0x02
    cmp r0, r1
    bge _0803C086
    movs r0, #0x00
    str r0, [r3, #0x00]
    movs r1, #0x00
    mov r2, r8
    strh r0, [r2, #0x00]
    mov r3, r9
    strh r0, [r3, #0x00]
    mov r2, r12
    strh r0, [r2, #0x00]
    strh r0, [r4, #0x00]
    mov r3, r10
    strh r0, [r3, #0x00]
    strb r1, [r5, #0x00]
    ldr r2, [sp, #0x02C]
    strh r0, [r2, #0x00]
    strh r0, [r6, #0x38]
    movs r3, #0xC9
    lsls r3, r3, #0x01
    adds r2, r6, r3
    strb r1, [r2, #0x00]
    ldr r1, [sp, #0x030]
    strh r0, [r1, #0x00]
    ldr r2, [sp, #0x01C]
    strh r0, [r2, #0x00]
    ldr r0, _0803C100 @ =0x03002E20
    ldr r3, _0803C104 @ =0x000007FE
    adds r0, r0, r3
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _0803C10C
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    beq _0803C0E8
    movs r1, #0x00
    ldr r0, _0803C108 @ =0x03002C60
    ldrh r0, [r0, #0x12]
    cmp r0, #0x00
    bne _0803C0E4
    movs r1, #0x01
_0803C0E4:
    cmp r1, #0x00
    beq _0803C10C
_0803C0E8:
    adds r0, r6, #0x0
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r0, r0, #0x02
    adds r0, #0x02
    movs r2, #0xBC
    lsls r2, r2, #0x01
    adds r1, r6, r2
    b _0803C114
    .byte 0x00, 0x00
_0803C0FC: .4byte 0x0000FFFF
_0803C100: .4byte 0x03002E20
_0803C104: .4byte 0x000007FE
_0803C108: .4byte 0x03002C60
_0803C10C:
    movs r3, #0xBC
    lsls r3, r3, #0x01
    adds r1, r6, r3
    movs r0, #0x00
_0803C114:
    strh r0, [r1, #0x00]
    movs r4, #0x00
    ldr r0, [sp, #0x004]
    str r4, [r0, #0x00]
    ldr r1, [sp, #0x008]
    str r4, [r1, #0x00]
    movs r2, #0xCA
    lsls r2, r2, #0x01
    adds r0, r6, r2
    movs r5, #0x00
    strh r4, [r0, #0x00]
    movs r3, #0xCB
    lsls r3, r3, #0x01
    adds r0, r6, r3
    movs r1, #0x80
    lsls r1, r1, #0x01
    strh r1, [r0, #0x00]
    adds r2, #0x04
    adds r0, r6, r2
    strh r1, [r0, #0x00]
    adds r3, #0x04
    adds r0, r6, r3
    strb r5, [r0, #0x00]
    adds r0, r6, #0x0
    ldr r1, [sp, #0x000]
    bl sub_803DCA4
    ldr r2, _0803C1B0 @ =0x00000191
    adds r1, r6, r2
    strb r0, [r1, #0x00]
    ldr r3, [sp, #0x018]
    strh r4, [r3, #0x00]
    ldrb r1, [r7, #0x00]
    movs r0, #0x04
    negs r0, r0
    ands r0, r1
    movs r1, #0x02
    orrs r0, r1
    strb r0, [r7, #0x00]
    ldrh r1, [r7, #0x00]
    ldr r0, _0803C1B4 @ =0xFFFFE003
    ands r0, r1
    strh r0, [r7, #0x00]
    ldrb r1, [r7, #0x01]
    movs r0, #0x1F
    ands r0, r1
    strb r0, [r7, #0x01]
    ldr r0, [sp, #0x020]
    strb r5, [r0, #0x00]
    ldr r1, _0803C1B8 @ =0x0000019B
    adds r0, r6, r1
    strb r5, [r0, #0x00]
    ldr r2, [sp, #0x028]
    str r4, [r2, #0x00]
    ldr r3, [sp, #0x00C]
    strh r4, [r3, #0x00]
    ldr r0, [sp, #0x010]
    strh r4, [r0, #0x00]
    ldr r1, [sp, #0x014]
    strh r4, [r1, #0x00]
    ldr r2, [sp, #0x024]
    strb r5, [r2, #0x00]
    movs r3, #0xCE
    lsls r3, r3, #0x01
    adds r0, r6, r3
    strb r5, [r0, #0x00]
    ldrh r0, [r6, #0x34]
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r6, #0x34]
    add sp, #0x034
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0803C1B0: .4byte 0x00000191
_0803C1B4: .4byte 0xFFFFE003
_0803C1B8: .4byte 0x0000019B
    thumb_func_start sub_803C1BC
sub_803C1BC:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x004
    adds r6, r0, #0x0
    mov r9, r1
    ldr r0, _0803C278 @ =0x000007DC
    add r0, r9
    ldrb r5, [r0, #0x00]
    adds r4, r6, #0x0
    adds r4, #0x4C
    ldrb r0, [r4, #0x00]
    movs r1, #0x07
    ands r1, r0
    adds r3, r6, #0x0
    adds r3, #0x8C
    ldr r0, _0803C27C @ =0x080EBF58
    lsls r1, r1, #0x02
    adds r1, r1, r0
    ldr r2, _0803C280 @ =0x080EC7C0
    lsls r0, r5, #0x01
    adds r0, r0, r2
    movs r7, #0x00
    ldsh r2, [r0, r7]
    ldr r0, [r1, #0x00]
    adds r0, r0, r2
    lsls r0, r0, #0x10
    str r0, [r3, #0x00]
    ldr r0, _0803C284 @ =0x080EC300
    mov r10, r0
    ldr r3, _0803C288 @ =0x080EBF78
    str r4, [sp, #0x000]
    movs r2, #0x00
    movs r4, #0x0F
_0803C204:
    adds r0, r6, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    lsls r0, r0, #0x05
    adds r0, r2, r0
    adds r0, r0, r3
    movs r1, #0x00
    ldsh r0, [r0, r1]
    lsls r1, r0, #0x04
    cmp r5, #0x01
    ble _0803C228
    asrs r0, r1, #0x01
    adds r1, r1, r0
    cmp r1, #0x31
    bgt _0803C228
    movs r1, #0xE0
_0803C228:
    adds r0, r6, #0x0
    adds r0, #0xF4
    adds r0, r0, r2
    strh r1, [r0, #0x00]
    adds r2, #0x02
    subs r4, #0x01
    cmp r4, #0x00
    bge _0803C204
    movs r4, #0x00
    lsls r2, r5, #0x02
    mov r8, r2
    ldr r7, _0803C28C @ =0x080EC078
    mov r12, r7
    movs r0, #0x8A
    lsls r0, r0, #0x01
    adds r2, r6, r0
    movs r3, #0x14
    negs r3, r3
_0803C24C:
    cmp r4, #0x09
    ble _0803C29C
    ldr r1, [sp, #0x000]
    ldrb r0, [r1, #0x00]
    movs r1, #0x07
    ands r1, r0
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r3, r0
    add r0, r12
    movs r7, #0x00
    ldsh r0, [r0, r7]
    lsls r0, r0, #0x04
    cmp r5, #0x01
    beq _0803C2A0
    cmp r5, #0x01
    bgt _0803C290
    cmp r5, #0x00
    beq _0803C298
    b _0803C2A0
    .byte 0x00, 0x00
_0803C278: .4byte 0x000007DC
_0803C27C: .4byte 0x080EBF58
_0803C280: .4byte 0x080EC7C0
_0803C284: .4byte 0x080EC300
_0803C288: .4byte 0x080EBF78
_0803C28C: .4byte 0x080EC078
_0803C290:
    cmp r5, #0x03
    bgt _0803C2A0
    adds r0, #0xA0
    b _0803C2A0
_0803C298:
    subs r0, #0x80
    b _0803C2A0
_0803C29C:
    movs r0, #0x01
    negs r0, r0
_0803C2A0:
    strh r0, [r2, #0x00]
    adds r2, #0x02
    adds r3, #0x02
    adds r4, #0x01
    cmp r4, #0x0F
    ble _0803C24C
    movs r4, #0x00
    ldr r0, _0803C31C @ =0x080EC0D8
    mov r12, r0
    adds r3, r6, #0x0
_0803C2B4:
    ldr r2, [sp, #0x000]
    ldrb r1, [r2, #0x00]
    movs r0, #0x07
    ands r0, r1
    lsls r1, r4, #0x03
    lsls r0, r0, #0x05
    adds r1, r1, r0
    add r1, r12
    ldrh r2, [r1, #0x00]
    movs r7, #0x9A
    lsls r7, r7, #0x01
    adds r0, r3, r7
    strh r2, [r0, #0x00]
    ldrh r0, [r1, #0x02]
    adds r7, #0x02
    adds r2, r3, r7
    strh r0, [r2, #0x00]
    ldrh r2, [r1, #0x04]
    adds r7, #0x02
    adds r0, r3, r7
    strh r2, [r0, #0x00]
    ldrh r0, [r1, #0x06]
    movs r2, #0x9D
    lsls r2, r2, #0x01
    adds r1, r3, r2
    strh r0, [r1, #0x00]
    adds r3, #0x08
    adds r4, #0x01
    cmp r4, #0x03
    ble _0803C2B4
    adds r7, #0x3C
    adds r1, r6, r7
    mov r2, r8
    adds r0, r2, r5
    lsls r0, r0, #0x03
    adds r0, r0, r5
    lsls r0, r0, #0x03
    add r0, r10
    str r0, [r1, #0x00]
    ldr r0, _0803C320 @ =0x000007DD
    add r0, r9
    ldrb r0, [r0, #0x00]
    bl sub_8032BC8
    cmp r0, #0x00
    beq _0803C328
    ldr r0, _0803C324 @ =0x080EC6D8
    adds r0, r5, r0
    ldrb r0, [r0, #0x00]
    adds r7, #0x29
    adds r1, r6, r7
    b _0803C32C
_0803C31C: .4byte 0x080EC0D8
_0803C320: .4byte 0x000007DD
_0803C324: .4byte 0x080EC6D8
_0803C328:
    ldr r2, _0803C340 @ =0x0000019D
    adds r1, r6, r2
_0803C32C:
    strb r0, [r1, #0x00]
    add sp, #0x004
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0803C340: .4byte 0x0000019D
    thumb_func_start sub_803C344
sub_803C344:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r4, r0, #0x0
    mov r8, r1
    adds r6, r2, #0x0
    adds r5, r3, #0x0
    ldr r0, _0803C388 @ =0x03002E20
    adds r7, r0, #0x0
    adds r7, #0x24
    ldr r1, _0803C38C @ =0x000007FE
    adds r0, r0, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x04
    ands r0, r1
    cmp r0, #0x00
    beq _0803C36E
    adds r0, r4, #0x0
    bl sub_805BA58
_0803C36E:
    adds r0, r4, #0x0
    adds r0, #0x4C
    strb r6, [r0, #0x00]
    adds r0, r4, #0x0
    adds r1, r7, #0x0
    bl sub_803C1BC
    cmp r5, #0x00
    beq _0803C398
    ldr r0, _0803C390 @ =0x00008040
    str r0, [r4, #0x48]
    ldr r0, _0803C394 @ =0x00002001
    b _0803C3A0
_0803C388: .4byte 0x03002E20
_0803C38C: .4byte 0x000007FE
_0803C390: .4byte 0x00008040
_0803C394: .4byte 0x00002001
_0803C398:
    movs r0, #0x80
    lsls r0, r0, #0x06
    str r0, [r4, #0x48]
    adds r0, #0x02
_0803C3A0:
    strh r0, [r4, #0x10]
    movs r0, #0x0A
    strb r0, [r4, #0x0E]
    strb r0, [r4, #0x0D]
    strb r0, [r4, #0x0C]
    ldr r0, _0803C434 @ =0x0803DD59
    str r0, [r4, #0x18]
    ldr r1, _0803C438 @ =0x080EC6DC
    lsls r0, r6, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    adds r2, r4, #0x0
    adds r2, #0x58
    movs r5, #0x00
    movs r3, #0x00
    strh r0, [r2, #0x00]
    adds r0, r4, #0x0
    adds r0, #0xB4
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x07
    ands r0, r1
    cmp r0, #0x00
    beq _0803C3E0
    adds r1, r4, #0x0
    adds r1, #0x68
    ldr r0, _0803C43C @ =0x0000FFFF
    strh r0, [r1, #0x00]
    ldrh r1, [r2, #0x00]
    subs r0, #0x10
    ands r0, r1
    strh r0, [r2, #0x00]
_0803C3E0:
    ldr r0, _0803C440 @ =0x0000017D
    adds r1, r4, r0
    movs r0, #0x03
    strb r0, [r1, #0x00]
    adds r0, r4, #0x0
    adds r0, #0xEC
    mov r1, r8
    strb r1, [r0, #0x00]
    ldrh r0, [r4, #0x34]
    movs r1, #0x01
    orrs r0, r1
    strh r0, [r4, #0x34]
    movs r1, #0xBD
    lsls r1, r1, #0x01
    adds r0, r4, r1
    strh r3, [r0, #0x00]
    adds r1, #0x02
    adds r0, r4, r1
    strb r5, [r0, #0x00]
    adds r1, #0x04
    adds r0, r4, r1
    str r3, [r0, #0x00]
    adds r1, #0x04
    adds r0, r4, r1
    str r3, [r0, #0x00]
    adds r1, #0x04
    adds r0, r4, r1
    str r3, [r0, #0x00]
    adds r1, #0x04
    adds r0, r4, r1
    strh r3, [r0, #0x00]
    adds r1, #0x02
    adds r0, r4, r1
    strh r3, [r0, #0x00]
    adds r1, #0x02
    adds r0, r4, r1
    strb r5, [r0, #0x00]
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0803C434: .4byte sub_803DD58
_0803C438: .4byte 0x080EC6DC
_0803C43C: .4byte 0x0000FFFF
_0803C440: .4byte 0x0000017D
    thumb_func_start sub_803C444
sub_803C444:
    push {r4, r5, r6, r7, lr}
    adds r2, r0, #0x0
    adds r5, r2, #0x0
    adds r5, #0x74
    ldrh r1, [r5, #0x00]
    movs r7, #0x80
    lsls r7, r7, #0x08
    adds r0, r7, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _0803C464
    ldr r0, _0803C460 @ =0x00007FFF
    ands r0, r1
    b _0803C4AA
_0803C460: .4byte 0x00007FFF
_0803C464:
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _0803C4AC
    ldr r0, _0803C4B4 @ =0x0000FFFE
    ands r0, r1
    strh r0, [r5, #0x00]
    ldr r0, _0803C4B8 @ =0x03002E20
    movs r1, #0xFF
    lsls r1, r1, #0x03
    adds r0, r0, r1
    ldrb r1, [r0, #0x00]
    movs r0, #0x0F
    ands r0, r1
    cmp r0, #0x04
    beq _0803C4AC
    ldr r0, _0803C4BC @ =0x0000017D
    adds r6, r2, r0
    movs r0, #0x00
    ldsb r0, [r6, r0]
    cmp r0, #0x00
    beq _0803C4AC
    subs r0, #0x01
    lsls r4, r0, #0x18
    cmp r4, #0x00
    bne _0803C4A0
    adds r0, r2, #0x0
    movs r1, #0x0F
    bl sub_803D214
_0803C4A0:
    lsrs r0, r4, #0x18
    strb r0, [r6, #0x00]
    ldrh r1, [r5, #0x00]
    adds r0, r7, #0x0
    orrs r0, r1
_0803C4AA:
    strh r0, [r5, #0x00]
_0803C4AC:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0803C4B4: .4byte 0x0000FFFE
_0803C4B8: .4byte 0x03002E20
_0803C4BC: .4byte 0x0000017D
    thumb_func_start sub_803C4C0
sub_803C4C0:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x004
    adds r5, r0, #0x0
    mov r9, r1
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    str r2, [sp, #0x000]
    mov r10, r9
    ldr r1, [r5, #0x48]
    movs r0, #0x80
    lsls r0, r0, #0x0A
    ands r0, r1
    cmp r0, #0x00
    beq _0803C506
    ldr r0, _0803C574 @ =0xFFFDFFFF
    ands r1, r0
    str r1, [r5, #0x48]
    adds r0, r5, #0x0
    adds r0, #0x4E
    movs r1, #0x00
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    adds r1, r5, #0x0
    adds r1, #0xB8
    movs r2, #0x00
    ldsh r0, [r1, r2]
    cmp r0, #0x01
    ble _0803C506
    movs r0, #0x01
    strh r0, [r1, #0x00]
_0803C506:
    ldr r1, [r5, #0x04]
    cmp r1, #0x00
    bge _0803C510
    ldr r3, _0803C578 @ =0x0000FFFF
    adds r1, r1, r3
_0803C510:
    asrs r1, r1, #0x10
    adds r0, r5, #0x0
    adds r0, #0xF0
    strh r1, [r0, #0x00]
    ldr r0, [r5, #0x00]
    cmp r0, #0x00
    bge _0803C522
    ldr r4, _0803C578 @ =0x0000FFFF
    adds r0, r0, r4
_0803C522:
    asrs r0, r0, #0x10
    adds r1, r5, #0x0
    adds r1, #0xEE
    strh r0, [r1, #0x00]
    ldr r1, [r5, #0x00]
    adds r0, r5, #0x0
    adds r0, #0x4E
    movs r2, #0x00
    ldsh r0, [r0, r2]
    lsls r0, r0, #0x08
    adds r1, r1, r0
    str r1, [r5, #0x00]
    ldr r1, [r5, #0x04]
    adds r0, r5, #0x0
    adds r0, #0x50
    movs r3, #0x00
    ldsh r0, [r0, r3]
    lsls r0, r0, #0x08
    adds r1, r1, r0
    str r1, [r5, #0x04]
    adds r0, r5, #0x0
    mov r1, r9
    bl sub_803B98C
    ldr r0, [r5, #0x48]
    movs r3, #0x80
    lsls r3, r3, #0x08
    ands r0, r3
    cmp r0, #0x00
    beq _0803C57C
    adds r0, r5, #0x0
    bl sub_8037B30
    adds r0, r5, #0x0
    bl sub_80378FC
    movs r4, #0x78
    adds r4, r4, r5
    mov r8, r4
    b _0803C66E
    .byte 0x00, 0x00
_0803C574: .4byte 0xFFFDFFFF
_0803C578: .4byte 0x0000FFFF
_0803C57C:
    adds r1, r5, #0x0
    adds r1, #0x6A
    ldrh r2, [r1, #0x00]
    movs r4, #0x00
    ldsh r0, [r1, r4]
    adds r6, r5, #0x0
    adds r6, #0x58
    movs r4, #0x78
    adds r4, r4, r5
    mov r8, r4
    adds r7, r5, #0x0
    adds r7, #0x84
    cmp r0, #0x00
    beq _0803C5E2
    subs r0, r2, #0x1
    strh r0, [r1, #0x00]
    lsls r0, r0, #0x10
    cmp r0, #0x00
    beq _0803C5AC
    ldrh r1, [r6, #0x00]
    adds r0, r3, #0x0
    orrs r0, r1
    strh r0, [r6, #0x00]
    b _0803C5E2
_0803C5AC:
    adds r4, r5, #0x0
    adds r4, #0xB4
    ldrh r1, [r4, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x07
    ands r0, r1
    strh r0, [r4, #0x00]
    ldrh r1, [r6, #0x00]
    ldr r0, _0803C624 @ =0x00007FFF
    ands r0, r1
    strh r0, [r6, #0x00]
    mov r1, r8
    ldrb r0, [r1, #0x00]
    strb r0, [r7, #0x00]
    ldr r0, _0803C628 @ =0x03002E20
    ldr r2, _0803C62C @ =0x00000838
    adds r0, r0, r2
    ldr r0, [r0, #0x00]
    cmp r5, r0
    bne _0803C5DA
    movs r0, #0x10
    bl sub_80523DC
_0803C5DA:
    ldrh r1, [r4, #0x00]
    ldr r0, _0803C630 @ =0x0000FFFC
    ands r0, r1
    strh r0, [r4, #0x00]
_0803C5E2:
    adds r1, r5, #0x0
    adds r1, #0x66
    ldrh r2, [r1, #0x00]
    movs r3, #0x00
    ldsh r0, [r1, r3]
    cmp r0, #0x00
    beq _0803C5F4
    subs r0, r2, #0x1
    strh r0, [r1, #0x00]
_0803C5F4:
    adds r1, r5, #0x0
    adds r1, #0x68
    ldrh r2, [r1, #0x00]
    movs r4, #0x00
    ldsh r0, [r1, r4]
    cmp r0, #0x00
    ble _0803C606
    subs r0, r2, #0x1
    strh r0, [r1, #0x00]
_0803C606:
    movs r2, #0x00
    ldsh r0, [r1, r2]
    cmp r0, #0x00
    bge _0803C612
    movs r0, #0x00
    strh r0, [r1, #0x00]
_0803C612:
    movs r3, #0x00
    ldsh r0, [r1, r3]
    cmp r0, #0x00
    beq _0803C638
    ldrh r1, [r6, #0x00]
    ldr r0, _0803C634 @ =0x0000FFEF
    ands r1, r0
    b _0803C63E
    .byte 0x00, 0x00
_0803C624: .4byte 0x00007FFF
_0803C628: .4byte 0x03002E20
_0803C62C: .4byte 0x00000838
_0803C630: .4byte 0x0000FFFC
_0803C634: .4byte 0x0000FFEF
_0803C638:
    ldrh r1, [r6, #0x00]
    movs r0, #0x10
    orrs r1, r0
_0803C63E:
    strh r1, [r6, #0x00]
    ldrb r0, [r7, #0x00]
    cmp r0, #0x08
    bne _0803C64C
    movs r0, #0x20
    orrs r1, r0
    b _0803C650
_0803C64C:
    ldr r0, _0803C660 @ =0x0000FFDF
    ands r1, r0
_0803C650:
    strh r1, [r6, #0x00]
    ldrb r0, [r7, #0x00]
    cmp r0, #0x0A
    bne _0803C668
    ldr r0, _0803C664 @ =0x0000FFBF
    ands r0, r1
    b _0803C66C
    .byte 0x00, 0x00
_0803C660: .4byte 0x0000FFDF
_0803C664: .4byte 0x0000FFBF
_0803C668:
    movs r0, #0x40
    orrs r0, r1
_0803C66C:
    strh r0, [r6, #0x00]
_0803C66E:
    adds r0, r5, #0x0
    mov r1, r10
    bl sub_803B550
    adds r2, r5, #0x0
    adds r2, #0x64
    ldrb r0, [r2, #0x00]
    cmp r0, #0x00
    beq _0803C698
    ldrh r1, [r5, #0x38]
    movs r0, #0xDF
    lsls r0, r0, #0x07
    cmp r1, r0
    bne _0803C698
    movs r4, #0x00
    strb r4, [r2, #0x00]
    adds r0, r5, #0x0
    movs r1, #0x07
    bl sub_803D214
    strh r4, [r5, #0x38]
_0803C698:
    ldr r1, [r5, #0x48]
    movs r0, #0x80
    lsls r0, r0, #0x06
    ands r1, r0
    cmp r1, #0x00
    bne _0803C788
    mov r4, r8
    ldrb r0, [r4, #0x00]
    cmp r0, #0x02
    bne _0803C6CE
    adds r1, r5, #0x0
    adds r1, #0x76
    ldrh r0, [r1, #0x00]
    cmp r0, #0x0E
    bhi _0803C6BA
    adds r0, #0x01
    strh r0, [r1, #0x00]
_0803C6BA:
    ldrh r0, [r1, #0x00]
    negs r0, r0
    lsls r0, r0, #0x0F
    str r0, [r5, #0x08]
    ldrh r0, [r1, #0x00]
    lsls r0, r0, #0x0B
    adds r1, r5, #0x0
    adds r1, #0x82
    strh r0, [r1, #0x00]
    b _0803C6D4
_0803C6CE:
    adds r0, r5, #0x0
    adds r0, #0x76
    strh r1, [r0, #0x00]
_0803C6D4:
    adds r0, r5, #0x0
    bl sub_8037A2C
    ldr r0, _0803C734 @ =0x000007DA
    add r0, r9
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x04
    ands r0, r1
    cmp r0, #0x00
    beq _0803C6F0
    adds r0, r5, #0x0
    bl sub_803C444
_0803C6F0:
    ldr r0, [r5, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x07
    ands r0, r1
    cmp r0, #0x00
    bne _0803C702
    adds r0, r5, #0x0
    bl sub_8038200
_0803C702:
    adds r0, r5, #0x0
    bl sub_8039B38
    adds r0, r5, #0x0
    bl sub_8038A08
    adds r0, r5, #0x0
    ldr r1, [sp, #0x000]
    bl sub_8037FD8
    adds r4, r5, #0x0
    adds r4, #0xAC
    ldrh r1, [r4, #0x00]
    movs r2, #0x00
    ldsh r0, [r4, r2]
    cmp r0, #0x00
    beq _0803C74E
    adds r0, r5, #0x0
    adds r0, #0x6A
    movs r3, #0x00
    ldsh r0, [r0, r3]
    cmp r0, #0x00
    beq _0803C738
    movs r0, #0x00
    b _0803C74C
_0803C734: .4byte 0x000007DA
_0803C738:
    movs r0, #0x3F
    ands r0, r1
    cmp r0, #0x00
    bne _0803C748
    adds r0, r5, #0x0
    movs r1, #0x05
    bl sub_803D4E4
_0803C748:
    ldrh r0, [r4, #0x00]
    subs r0, #0x01
_0803C74C:
    strh r0, [r4, #0x00]
_0803C74E:
    adds r0, r5, #0x0
    bl sub_803AE70
    adds r0, r5, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _0803C768
    adds r0, r5, #0x0
    bl sub_803D00C
_0803C768:
    ldr r0, _0803C784 @ =0x03002E20
    ldr r0, [r0, #0x10]
    movs r1, #0x07
    ands r0, r1
    cmp r0, #0x00
    bne _0803C83A
    adds r0, r5, #0x0
    mov r1, r10
    bl sub_803AF10
    adds r0, r5, #0x0
    bl sub_8040FEC
    b _0803C83A
_0803C784: .4byte 0x03002E20
_0803C788:
    mov r4, r8
    ldrb r0, [r4, #0x00]
    cmp r0, #0x02
    bne _0803C7B0
    adds r1, r5, #0x0
    adds r1, #0x76
    ldrh r0, [r1, #0x00]
    cmp r0, #0x0E
    bhi _0803C79E
    adds r0, #0x01
    strh r0, [r1, #0x00]
_0803C79E:
    ldrh r0, [r1, #0x00]
    negs r0, r0
    lsls r0, r0, #0x0F
    str r0, [r5, #0x08]
    ldrh r0, [r1, #0x00]
    lsls r0, r0, #0x0B
    adds r1, r5, #0x0
    adds r1, #0x82
    b _0803C7B6
_0803C7B0:
    adds r1, r5, #0x0
    adds r1, #0x76
    movs r0, #0x00
_0803C7B6:
    strh r0, [r1, #0x00]
    adds r0, r5, #0x0
    bl sub_8039B38
    adds r0, r5, #0x0
    bl sub_803BC00
    ldr r0, [r5, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x07
    ands r0, r1
    cmp r0, #0x00
    bne _0803C7D6
    adds r0, r5, #0x0
    bl sub_8038200
_0803C7D6:
    adds r0, r5, #0x0
    mov r1, r10
    bl sub_803BD24
    ldr r0, [r5, #0x48]
    movs r1, #0xC0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x08
    cmp r0, r1
    bne _0803C800
    adds r2, r5, #0x0
    adds r2, #0x96
    movs r0, #0xC4
    lsls r0, r0, #0x04
    ldr r1, [sp, #0x000]
    ands r0, r1
    ldrh r1, [r2, #0x00]
    orrs r0, r1
    strh r0, [r2, #0x00]
_0803C800:
    adds r4, r5, #0x0
    adds r4, #0xAC
    ldrh r1, [r4, #0x00]
    movs r2, #0x00
    ldsh r0, [r4, r2]
    cmp r0, #0x00
    beq _0803C834
    adds r0, r5, #0x0
    adds r0, #0x6A
    movs r3, #0x00
    ldsh r0, [r0, r3]
    cmp r0, #0x00
    beq _0803C81E
    movs r0, #0x00
    b _0803C832
_0803C81E:
    movs r0, #0x3F
    ands r0, r1
    cmp r0, #0x00
    bne _0803C82E
    adds r0, r5, #0x0
    movs r1, #0x05
    bl sub_803D4E4
_0803C82E:
    ldrh r0, [r4, #0x00]
    subs r0, #0x01
_0803C832:
    strh r0, [r4, #0x00]
_0803C834:
    adds r0, r5, #0x0
    bl sub_8042AE4
_0803C83A:
    add sp, #0x004
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_803C84C
sub_803C84C:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    ldr r2, _0803C874 @ =0x03002E20
    adds r5, r2, #0x0
    adds r5, #0x24
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _0803C878
    ldr r0, [r2, #0x10]
    lsrs r0, r0, #0x02
    movs r1, #0x03
    ands r0, r1
    lsls r0, r0, #0x15
    movs r3, #0x80
    lsls r3, r3, #0x0E
    adds r0, r0, r3
    lsrs r1, r0, #0x10
    b _0803C91E
_0803C874: .4byte 0x03002E20
_0803C878:
    adds r0, r4, #0x0
    adds r0, #0x68
    movs r3, #0x00
    ldsh r1, [r0, r3]
    ldr r0, _0803C898 @ =0x00000127
    cmp r1, r0
    ble _0803C89C
    ldr r0, [r2, #0x10]
    lsrs r0, r0, #0x02
    movs r1, #0x01
    ands r0, r1
    cmp r0, #0x00
    bne _0803C89C
    movs r1, #0x20
    b _0803C91E
    .byte 0x00, 0x00
_0803C898: .4byte 0x00000127
_0803C89C:
    movs r0, #0xCA
    lsls r0, r0, #0x01
    adds r3, r4, r0
    ldrh r2, [r3, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x04
    ands r0, r2
    cmp r0, #0x00
    beq _0803C8BC
    movs r1, #0x90
    lsls r1, r1, #0x01
    ldr r0, _0803C8B8 @ =0x0000F7FF
    b _0803C910
    .byte 0x00, 0x00
_0803C8B8: .4byte 0x0000F7FF
_0803C8BC:
    movs r0, #0xC0
    lsls r0, r0, #0x07
    ands r0, r2
    cmp r0, #0x00
    beq _0803C8DC
    movs r0, #0x80
    lsls r0, r0, #0x06
    ands r0, r2
    movs r1, #0xC0
    cmp r0, #0x00
    beq _0803C8D4
    movs r1, #0xA0
_0803C8D4:
    ldr r0, _0803C8D8 @ =0x00009FFF
    b _0803C910
_0803C8D8: .4byte 0x00009FFF
_0803C8DC:
    adds r0, r4, #0x0
    adds r0, #0x85
    ldrb r0, [r0, #0x00]
    cmp r0, #0x50
    bne _0803C8FA
    adds r0, r5, #0x0
    bl sub_8032C2C
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x0C
    bne _0803C8FA
    movs r1, #0x80
    lsls r1, r1, #0x01
    b _0803C91E
_0803C8FA:
    movs r1, #0xCA
    lsls r1, r1, #0x01
    adds r3, r4, r1
    ldrh r2, [r3, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r2
    cmp r0, #0x00
    beq _0803C91C
    movs r1, #0xE0
    ldr r0, _0803C918 @ =0x00007FFF
_0803C910:
    ands r0, r2
    strh r0, [r3, #0x00]
    b _0803C91E
    .byte 0x00, 0x00
_0803C918: .4byte 0x00007FFF
_0803C91C:
    movs r1, #0x00
_0803C91E:
    adds r0, r1, #0x0
    pop {r4, r5}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_803C928
sub_803C928:
    push {r4, r5, r6, lr}
    mov r12, r0
    adds r0, #0x4C
    ldrb r0, [r0, #0x00]
    movs r6, #0x07
    ands r6, r0
    mov r0, r12
    adds r0, #0xEC
    ldrb r4, [r0, #0x00]
    subs r0, #0x30
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bge _0803C944
    negs r0, r0
_0803C944:
    lsrs r0, r0, #0x10
    cmp r0, #0x00
    beq _0803C964
    cmp r0, #0x0F
    bls _0803C950
    movs r0, #0x0F
_0803C950:
    ldr r1, _0803C960 @ =0x080EC826
    lsls r0, r0, #0x01
    adds r0, r0, r1
    ldrh r1, [r0, #0x00]
    mov r3, r12
    adds r3, #0xD8
    b _0803C978
    .byte 0x00, 0x00
_0803C960: .4byte 0x080EC826
_0803C964:
    mov r2, r12
    adds r2, #0xD8
    ldrb r1, [r2, #0x00]
    movs r0, #0x03
    ands r0, r1
    movs r1, #0x00
    adds r3, r2, #0x0
    cmp r0, #0x02
    bne _0803C978
    movs r1, #0x01
_0803C978:
    ldrh r5, [r3, #0x00]
    ldr r0, _0803C9B4 @ =0x00001FFC
    ands r0, r5
    cmp r0, #0x00
    beq _0803C9C0
    ldr r0, [r3, #0x00]
    lsls r0, r0, #0x13
    lsrs r0, r0, #0x15
    subs r0, #0x01
    ldr r2, _0803C9B8 @ =0x000007FF
    adds r4, r2, #0x0
    ands r0, r4
    lsls r0, r0, #0x02
    ldr r6, _0803C9BC @ =0xFFFFE003
    adds r2, r6, #0x0
    ands r2, r5
    orrs r2, r0
    strh r2, [r3, #0x00]
    ldr r0, [r3, #0x00]
    lsls r0, r0, #0x13
    lsrs r0, r0, #0x15
    cmp r0, r1
    bls _0803CA6E
    ands r1, r4
    lsls r0, r1, #0x02
    ands r2, r6
    orrs r2, r0
    strh r2, [r3, #0x00]
    b _0803CA6E
    .byte 0x00, 0x00
_0803C9B4: .4byte 0x00001FFC
_0803C9B8: .4byte 0x000007FF
_0803C9BC: .4byte 0xFFFFE003
_0803C9C0:
    cmp r1, #0x00
    beq _0803CA6E
    ldr r0, _0803C9E4 @ =0x000007FF
    ands r1, r0
    lsls r1, r1, #0x02
    ldr r0, _0803C9E8 @ =0xFFFFE003
    ands r0, r5
    orrs r0, r1
    strh r0, [r3, #0x00]
    adds r5, r3, #0x0
    ldr r0, [r3, #0x00]
    lsls r1, r0, #0x1E
    lsrs r0, r1, #0x1E
    cmp r0, #0x01
    bhi _0803C9EC
    adds r0, #0x01
    b _0803C9EE
    .byte 0x00, 0x00
_0803C9E4: .4byte 0x000007FF
_0803C9E8: .4byte 0xFFFFE003
_0803C9EC:
    movs r0, #0x00
_0803C9EE:
    movs r1, #0x03
    ands r1, r0
    ldrb r2, [r5, #0x00]
    movs r0, #0x04
    negs r0, r0
    ands r0, r2
    orrs r0, r1
    strb r0, [r5, #0x00]
    ldr r1, [r3, #0x00]
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x1D
    adds r1, #0x01
    lsls r1, r1, #0x05
    ldrb r2, [r3, #0x01]
    movs r0, #0x1F
    ands r0, r2
    orrs r0, r1
    strb r0, [r3, #0x01]
    movs r0, #0xCA
    lsls r0, r0, #0x01
    add r0, r12
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x04
    ands r0, r1
    cmp r0, #0x00
    beq _0803CA34
    lsls r0, r6, #0x09
    ldr r1, [r3, #0x00]
    lsls r1, r1, #0x1E
    lsrs r1, r1, #0x1D
    ldr r2, _0803CA30 @ =0x083447C0
    b _0803CA3E
_0803CA30: .4byte 0x083447C0
_0803CA34:
    lsls r0, r6, #0x09
    ldr r1, [r3, #0x00]
    lsls r1, r1, #0x1E
    lsrs r1, r1, #0x1D
    ldr r2, _0803CA74 @ =0x083447E0
_0803CA3E:
    adds r1, r1, r2
    adds r5, r0, r1
    movs r0, #0x01
    bl pltt_getBuffer
    lsls r4, r4, #0x05
    adds r0, r4, r0
    movs r2, #0x81
    lsls r2, r2, #0x01
    adds r1, r0, r2
    ldrh r0, [r5, #0x00]
    strh r0, [r1, #0x00]
    movs r0, #0x01
    bl pltt_getBuffer
    adds r4, r4, r0
    movs r0, #0x82
    lsls r0, r0, #0x01
    adds r4, r4, r0
    ldrh r0, [r5, #0x02]
    strh r0, [r4, #0x00]
    movs r0, #0x01
    bl pltt_setDirtyFlag
_0803CA6E:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0803CA74: .4byte 0x083447E0
    thumb_func_start sub_803CA78
sub_803CA78:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    ldr r6, _0803CB14 @ =0x03002E20
    ldr r0, _0803CB18 @ =0x00000848
    adds r5, r6, r0
    cmp r5, #0x00
    bne _0803CA88
    b _0803CBD8
_0803CA88:
    adds r0, r4, #0x0
    bl sub_803D908
    cmp r0, #0x00
    beq _0803CA94
    b _0803CBC4
_0803CA94:
    ldr r1, _0803CB1C @ =0x00000838
    adds r0, r6, r1
    ldr r0, [r0, #0x00]
    cmp r4, r0
    beq _0803CAA0
    b _0803CBC4
_0803CAA0:
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _0803CAAC
    b _0803CBC4
_0803CAAC:
    movs r3, #0x14
    ldsh r0, [r5, r3]
    adds r1, r4, #0x0
    adds r1, #0x56
    ldrh r1, [r1, #0x00]
    subs r0, r0, r1
    asrs r0, r0, #0x08
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    adds r0, r4, #0x0
    adds r0, #0x88
    movs r3, #0x00
    ldsh r1, [r0, r3]
    adds r7, r0, #0x0
    cmp r1, #0x00
    bge _0803CACE
    negs r1, r1
_0803CACE:
    lsls r0, r1, #0x08
    lsrs r1, r0, #0x10
    cmp r1, #0x0E
    bls _0803CAD8
    movs r1, #0x0E
_0803CAD8:
    ldr r0, _0803CB20 @ =0x080EC846
    adds r0, r1, r0
    ldrb r3, [r0, #0x00]
    adds r0, r4, #0x0
    adds r0, #0xBC
    ldr r1, [r0, #0x00]
    adds r5, r0, #0x0
    cmp r1, #0x00
    bge _0803CAEC
    negs r1, r1
_0803CAEC:
    asrs r1, r1, #0x15
    cmp r1, #0x0E
    ble _0803CAF4
    movs r1, #0x0E
_0803CAF4:
    ldr r0, _0803CB24 @ =0x080EC855
    adds r0, r1, r0
    ldrb r0, [r0, #0x00]
    cmp r3, r0
    bls _0803CB00
    adds r3, r0, #0x0
_0803CB00:
    ldr r1, _0803CB28 @ =0x00000BDA
    adds r0, r6, r1
    ldrh r0, [r0, #0x00]
    lsls r0, r0, #0x10
    cmp r0, #0x00
    blt _0803CB2C
    asrs r0, r0, #0x18
    adds r0, r3, r0
    b _0803CB30
    .byte 0x00, 0x00
_0803CB14: .4byte 0x03002E20
_0803CB18: .4byte 0x00000848
_0803CB1C: .4byte 0x00000838
_0803CB20: .4byte 0x080EC846
_0803CB24: .4byte 0x080EC855
_0803CB28: .4byte 0x00000BDA
_0803CB2C:
    asrs r0, r0, #0x18
    subs r0, r3, r0
_0803CB30:
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    adds r0, r4, #0x0
    adds r0, #0x82
    ldrh r0, [r0, #0x00]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x18
    cmp r0, #0x00
    bge _0803CB44
    negs r0, r0
_0803CB44:
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x12
    ble _0803CB50
    movs r1, #0x12
_0803CB50:
    movs r0, #0x12
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    subs r0, r0, r1
    lsls r1, r0, #0x10
    asrs r0, r1, #0x10
    cmp r3, r0
    ble _0803CB62
    lsrs r3, r1, #0x10
_0803CB62:
    cmp r2, #0x00
    beq _0803CB94
    ldr r0, [r5, #0x00]
    cmp r0, #0x00
    bge _0803CB6E
    movs r3, #0x00
_0803CB6E:
    cmp r3, #0x00
    beq _0803CB88
    movs r1, #0x00
    ldsh r0, [r7, r1]
    cmp r0, #0x00
    blt _0803CB80
    adds r0, r3, #0x2
    subs r0, r2, r0
    b _0803CB84
_0803CB80:
    adds r0, r3, #0x2
    adds r0, r2, r0
_0803CB84:
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
_0803CB88:
    lsls r0, r2, #0x18
    asrs r1, r0, #0x18
    lsrs r0, r0, #0x1F
    adds r1, r1, r0
    asrs r2, r1, #0x01
    b _0803CBD2
_0803CB94:
    movs r1, #0x00
    ldsh r0, [r7, r1]
    cmp r0, #0x00
    blt _0803CBA6
    ldr r0, [r5, #0x00]
    cmp r0, #0x00
    bge _0803CBB0
    adds r0, r2, r3
    b _0803CBB4
_0803CBA6:
    ldr r0, [r5, #0x00]
    cmp r0, #0x00
    blt _0803CBB0
    adds r0, r2, r3
    b _0803CBB4
_0803CBB0:
    adds r0, r3, #0x2
    subs r0, r2, r0
_0803CBB4:
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    lsls r0, r2, #0x18
    asrs r1, r0, #0x18
    lsrs r0, r0, #0x1F
    adds r1, r1, r0
    asrs r2, r1, #0x01
    b _0803CBD2
_0803CBC4:
    movs r3, #0x14
    ldsh r0, [r5, r3]
    adds r1, r4, #0x0
    adds r1, #0x56
    ldrh r1, [r1, #0x00]
    subs r0, r0, r1
    asrs r2, r0, #0x09
_0803CBD2:
    movs r0, #0x7F
    ands r2, r0
    b _0803CBDA
_0803CBD8:
    movs r2, #0x00
_0803CBDA:
    adds r0, r2, #0x0
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_803CBE4
sub_803CBE4:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    mov r12, r1
    adds r0, #0xD8
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x1D
    ldr r0, [r4, #0x48]
    movs r1, #0x40
    ands r0, r1
    cmp r0, #0x00
    bne _0803CC1C
    adds r0, r4, #0x0
    adds r0, #0xBC
    ldr r1, [r0, #0x00]
    ldr r0, _0803CC14 @ =0x009FFFFF
    cmp r1, r0
    bgt _0803CC1C
    ldr r0, _0803CC18 @ =0x03002E20
    ldr r3, [r0, #0x10]
    movs r0, #0x01
    ands r3, r0
    b _0803CC1E
    .byte 0x00, 0x00
_0803CC14: .4byte 0x009FFFFF
_0803CC18: .4byte 0x03002E20
_0803CC1C:
    movs r3, #0x00
_0803CC1E:
    adds r2, r4, #0x0
    adds r2, #0xB4
    ldrh r1, [r2, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    adds r7, r2, #0x0
    cmp r0, #0x00
    bne _0803CC50
    movs r5, #0x01
    ands r5, r6
    subs r2, #0x2F
    ldrb r1, [r2, #0x00]
    movs r0, #0x1E
    ands r0, r1
    cmp r0, #0x0C
    bls _0803CC4C
    lsrs r0, r6, #0x01
    movs r1, #0x01
    ands r0, r1
    adds r0, r5, r0
    adds r3, r3, r0
    b _0803CC54
_0803CC4C:
    adds r3, r3, r5
    b _0803CC54
_0803CC50:
    adds r2, r4, #0x0
    adds r2, #0x85
_0803CC54:
    ldrb r0, [r2, #0x00]
    cmp r0, #0x5C
    bne _0803CC6C
    ldrh r1, [r7, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _0803CC6C
    adds r0, r3, #0x4
    lsls r0, r0, #0x18
    b _0803CC6E
_0803CC6C:
    lsls r0, r3, #0x18
_0803CC6E:
    lsrs r1, r0, #0x18
    mov r2, r12
    ldrh r0, [r2, #0x02]
    adds r0, r0, r1
    strh r0, [r2, #0x02]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_803CC80
sub_803CC80:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    mov r12, r0
    mov r9, r2
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    mov r8, r1
    ldr r0, [r0, #0x6C]
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x19
    mov r0, r12
    adds r0, #0xBC
    ldr r0, [r0, #0x00]
    asrs r0, r0, #0x17
    movs r1, #0x14
    subs r5, r1, r0
    movs r2, #0xCD
    lsls r2, r2, #0x01
    add r2, r12
    ldrb r0, [r2, #0x00]
    movs r3, #0xF3
    ands r3, r0
    movs r7, #0x00
    strb r3, [r2, #0x00]
    adds r4, #0x01
    cmp r4, r5
    ble _0803CCBC
    movs r4, #0x00
_0803CCBC:
    cmp r4, #0x00
    bne _0803CCCC
    movs r1, #0x08
    adds r0, r3, #0x0
    orrs r0, r1
    strb r0, [r2, #0x00]
    asrs r6, r5, #0x1F
    b _0803CCE0
_0803CCCC:
    asrs r1, r5, #0x1F
    subs r0, r5, r1
    asrs r0, r0, #0x01
    adds r6, r1, #0x0
    cmp r4, r0
    bne _0803CCE0
    movs r1, #0x04
    adds r0, r3, #0x0
    orrs r0, r1
    strb r0, [r2, #0x00]
_0803CCE0:
    mov r3, r12
    adds r3, #0x6D
    lsls r2, r4, #0x01
    ldrb r1, [r3, #0x00]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r2
    strb r0, [r3, #0x00]
    movs r0, #0xCE
    lsls r0, r0, #0x01
    add r0, r12
    ldrb r0, [r0, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x04
    cmp r0, #0x00
    beq _0803CD0A
    movs r2, #0x80
    cmp r0, #0x01
    bne _0803CD0A
    movs r2, #0x80
    lsls r2, r2, #0x02
_0803CD0A:
    movs r0, #0x3F
    mov r1, r8
    ands r0, r1
    cmp r0, #0x00
    beq _0803CD20
    cmp r0, #0x3F
    beq _0803CD20
    lsrs r1, r1, #0x06
    movs r0, #0x01
    ands r1, r0
    b _0803CD2C
_0803CD20:
    mov r0, r12
    adds r0, #0x88
    movs r1, #0x00
    ldsh r0, [r0, r1]
    mvns r0, r0
    lsrs r1, r0, #0x1F
_0803CD2C:
    subs r0, r5, r6
    asrs r0, r0, #0x01
    cmp r4, r0
    bge _0803CD3C
    movs r0, #0x01
    subs r0, r0, r1
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
_0803CD3C:
    mov r0, r9
    cmp r1, #0x00
    beq _0803CD44
    adds r0, r0, r2
_0803CD44:
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    thumb_func_start sub_803CD50
sub_803CD50:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x004
    adds r6, r0, #0x0
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    mov r10, r2
    ldr r5, _0803CDF4 @ =0x03002E20
    adds r4, r6, #0x0
    adds r4, #0xEC
    ldrb r0, [r4, #0x00]
    mov r8, r0
    bl sub_80436F0
    adds r7, r0, #0x0
    ldr r1, _0803CDF8 @ =0x00000838
    adds r0, r5, r1
    ldr r0, [r0, #0x00]
    cmp r0, r6
    beq _0803CDD6
    ldr r2, _0803CDFC @ =0x000007FE
    adds r0, r5, r2
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x06
    ands r0, r1
    cmp r0, #0x00
    bne _0803CDD6
    ldr r1, _0803CE00 @ =0x080EC2C0
    adds r0, r6, #0x0
    adds r0, #0x7E
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r3, [r0, #0x00]
    cmp r3, #0x00
    bne _0803CDAE
    ldr r0, [r5, #0x10]
    movs r1, #0x07
    ands r0, r1
    ldrb r2, [r4, #0x00]
    ands r1, r2
    cmp r0, r1
    beq _0803CDD6
_0803CDAE:
    movs r0, #0x01
    negs r0, r0
    mov r1, r8
    lsls r1, r1, #0x03
    str r1, [sp, #0x000]
    movs r2, #0xFF
    lsls r2, r2, #0x03
    adds r2, r2, r5
    mov r9, r2
    cmp r3, r0
    beq _0803CDC6
    b _0803CF30
_0803CDC6:
    ldr r0, [r5, #0x10]
    movs r1, #0x03
    ands r0, r1
    ldrb r2, [r4, #0x00]
    ands r1, r2
    cmp r0, r1
    beq _0803CDD6
    b _0803CF30
_0803CDD6:
    adds r0, r6, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    strb r1, [r7, #0x00]
    mov r1, r10
    strb r1, [r7, #0x01]
    movs r1, #0x24
    ldsh r2, [r6, r1]
    ldr r1, _0803CE04 @ =0x000001FF
    mov r9, r0
    cmp r2, r1
    bgt _0803CE08
    movs r1, #0x00
    b _0803CE1A
    .byte 0x00, 0x00
_0803CDF4: .4byte 0x03002E20
_0803CDF8: .4byte 0x00000838
_0803CDFC: .4byte 0x000007FE
_0803CE00: .4byte 0x080EC2C0
_0803CE04: .4byte 0x000001FF
_0803CE08:
    ldr r0, _0803CE14 @ =0x000003FF
    cmp r2, r0
    bgt _0803CE18
    movs r1, #0x01
    b _0803CE1A
    .byte 0x00, 0x00
_0803CE14: .4byte 0x000003FF
_0803CE18:
    movs r1, #0x02
_0803CE1A:
    strb r1, [r7, #0x02]
    movs r2, #0xCE
    lsls r2, r2, #0x01
    adds r0, r6, r2
    strb r1, [r0, #0x00]
    adds r0, r6, #0x0
    bl sub_803D908
    cmp r0, #0x00
    beq _0803CE34
    adds r0, r6, #0x0
    adds r0, #0x6C
    ldrb r0, [r0, #0x00]
_0803CE34:
    strb r0, [r7, #0x03]
    mov r0, r8
    lsls r4, r0, #0x03
    ldr r5, _0803CE80 @ =0x030022E8
    adds r5, r4, r5
    mov r2, r8
    adds r0, r7, #0x0
    adds r1, r5, #0x0
    bl sub_8043708
    adds r7, r0, #0x0
    adds r0, r6, #0x0
    adds r1, r5, #0x0
    bl sub_803CBE4
    movs r1, #0x00
    movs r0, #0x3F
    mov r2, r10
    ands r0, r2
    str r4, [sp, #0x000]
    cmp r0, #0x00
    beq _0803CE64
    cmp r0, #0x3F
    bne _0803CE96
_0803CE64:
    adds r0, r6, #0x0
    bl sub_803D908
    cmp r0, #0x00
    beq _0803CE84
    adds r0, r6, #0x0
    adds r0, #0x6D
    ldrb r0, [r0, #0x00]
    movs r1, #0x01
    ands r1, r0
    negs r0, r1
    orrs r0, r1
    b _0803CE8E
    .byte 0x00, 0x00
_0803CE80: .4byte 0x030022E8
_0803CE84:
    adds r0, r6, #0x0
    adds r0, #0x88
    movs r1, #0x00
    ldsh r0, [r0, r1]
    mvns r0, r0
_0803CE8E:
    asrs r1, r0, #0x1F
    movs r0, #0x80
    lsls r0, r0, #0x05
    ands r1, r0
_0803CE96:
    ldrh r0, [r5, #0x04]
    orrs r1, r0
    strh r1, [r5, #0x04]
    ldr r0, _0803CF9C @ =0x030022E8
    ldr r1, [sp, #0x000]
    adds r2, r1, r0
    adds r0, r6, #0x0
    adds r0, #0x76
    ldrh r0, [r0, #0x00]
    movs r1, #0x01
    cmp r0, #0x00
    beq _0803CEB0
    movs r1, #0x03
_0803CEB0:
    lsls r0, r1, #0x0A
    ldrh r1, [r2, #0x06]
    orrs r0, r1
    strh r0, [r2, #0x06]
    mov r2, r9
    ldrb r1, [r2, #0x00]
    movs r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0803CED0
    adds r0, r6, #0x0
    mov r1, r10
    adds r2, r7, #0x0
    bl sub_803CC80
    adds r7, r0, #0x0
_0803CED0:
    ldr r0, _0803CFA0 @ =0x03002E44
    ldr r1, _0803CFA4 @ =0x000007D4
    adds r2, r0, r1
    ldrb r1, [r2, #0x00]
    movs r0, #0x40
    ands r0, r1
    mov r9, r2
    cmp r0, #0x00
    beq _0803CEE4
    b _0803CFEE
_0803CEE4:
    adds r0, r6, #0x0
    adds r0, #0xEC
    ldrb r2, [r0, #0x00]
    subs r0, #0x1C
    ldr r1, [r0, #0x00]
    mov r8, r0
    cmp r1, #0x00
    beq _0803CEF8
    cmp r7, r1
    beq _0803CF30
_0803CEF8:
    lsls r0, r2, #0x0B
    ldr r2, _0803CFA8 @ =0x06014000
    adds r5, r0, r2
    movs r1, #0xCE
    lsls r1, r1, #0x01
    adds r0, r6, r1
    ldrb r0, [r0, #0x00]
    movs r4, #0x80
    lsls r4, r4, #0x04
    cmp r0, #0x00
    beq _0803CF18
    movs r4, #0x80
    cmp r0, #0x01
    bne _0803CF18
    movs r4, #0x80
    lsls r4, r4, #0x02
_0803CF18:
    bl dmaq_getVBlankDmaQueue
    lsrs r3, r4, #0x01
    movs r1, #0x80
    lsls r1, r1, #0x18
    orrs r3, r1
    adds r1, r7, #0x0
    adds r2, r5, #0x0
    bl dmaq_enqueue
    mov r2, r8
    str r7, [r2, #0x00]
_0803CF30:
    mov r0, r9
    ldrb r1, [r0, #0x00]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0x00
    bne _0803CFEE
    adds r4, r6, #0x0
    adds r4, #0x4C
    ldrb r1, [r4, #0x00]
    movs r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _0803CFB0
    adds r0, r6, #0x0
    bl sub_803C928
    ldrb r0, [r4, #0x00]
    movs r4, #0x07
    ands r4, r0
    adds r0, r6, #0x0
    bl sub_803C84C
    lsls r4, r4, #0x09
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    adds r0, r0, r4
    ldr r1, _0803CFAC @ =0x08344606
    adds r4, r0, r1
    adds r1, r6, #0x0
    adds r1, #0xD4
    ldr r0, [r1, #0x00]
    cmp r0, r4
    beq _0803CFEE
    str r4, [r1, #0x00]
    movs r0, #0x01
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r0, r6, #0x0
    adds r0, #0xEC
    ldrb r0, [r0, #0x00]
    adds r0, #0x08
    lsls r0, r0, #0x05
    adds r0, #0x06
    adds r1, r1, r0
    adds r0, r4, #0x0
    movs r2, #0x0D
    bl CpuSet
    movs r0, #0x01
    bl pltt_setDirtyFlag
    b _0803CFEE
    .byte 0x00, 0x00
_0803CF9C: .4byte 0x030022E8
_0803CFA0: .4byte 0x03002E44
_0803CFA4: .4byte 0x000007D4
_0803CFA8: .4byte 0x06014000
_0803CFAC: .4byte 0x08344606
_0803CFB0:
    adds r0, r6, #0x0
    bl sub_803C84C
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    ldr r2, _0803D004 @ =0x08345606
    adds r4, r0, r2
    adds r1, r6, #0x0
    adds r1, #0xD4
    ldr r0, [r1, #0x00]
    cmp r0, r4
    beq _0803CFEE
    str r4, [r1, #0x00]
    movs r0, #0x01
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r0, r6, #0x0
    adds r0, #0xEC
    ldrb r0, [r0, #0x00]
    adds r0, #0x08
    lsls r0, r0, #0x05
    adds r0, #0x06
    adds r1, r1, r0
    adds r0, r4, #0x0
    movs r2, #0x0D
    bl CpuSet
    movs r0, #0x01
    bl pltt_setDirtyFlag
_0803CFEE:
    ldr r0, _0803D008 @ =0x030022E8
    ldr r1, [sp, #0x000]
    adds r0, r1, r0
    add sp, #0x004
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
_0803D004: .4byte 0x08345606
_0803D008: .4byte 0x030022E8
    thumb_func_start sub_803D00C
sub_803D00C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x004
    adds r7, r0, #0x0
    ldr r0, _0803D0C0 @ =0x03002E20
    movs r1, #0x00
    mov r9, r1
    movs r2, #0x80
    lsls r2, r2, #0x05
    mov r10, r2
    mov r8, r1
    ldr r3, _0803D0C4 @ =0x00000815
    adds r0, r0, r3
    ldrb r0, [r0, #0x00]
    cmp r9, r0
    bge _0803D118
_0803D032:
    mov r0, r8
    lsls r1, r0, #0x02
    ldr r2, _0803D0C8 @ =0x03002E44
    ldr r3, _0803D0CC @ =0x000007F4
    adds r0, r2, r3
    adds r0, r0, r1
    ldr r6, [r0, #0x00]
    cmp r7, r6
    beq _0803D108
    ldr r0, _0803D0C0 @ =0x03002E20
    adds r2, r0, #0x0
    adds r2, #0x24
    adds r0, r7, #0x0
    adds r0, #0x90
    ldrb r0, [r0, #0x00]
    movs r1, #0x7F
    adds r4, r1, #0x0
    ands r4, r0
    adds r0, r6, #0x0
    adds r0, #0x90
    ldrb r0, [r0, #0x00]
    adds r5, r1, #0x0
    ands r5, r0
    cmp r4, r5
    beq _0803D088
    adds r0, r2, #0x0
    adds r1, r4, #0x0
    str r2, [sp, #0x000]
    bl sub_8032C8C
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    ldr r2, [sp, #0x000]
    cmp r0, r5
    beq _0803D088
    adds r0, r2, #0x0
    adds r1, r4, #0x0
    bl sub_8032C74
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, r5
    bne _0803D108
_0803D088:
    adds r0, r7, #0x0
    adds r1, r6, #0x0
    bl sub_802F5F4
    cmp r0, #0x00
    beq _0803D0F4
    adds r0, r7, #0x0
    adds r1, r6, #0x0
    bl sub_802F61C
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x37
    bgt _0803D108
    adds r0, r7, #0x0
    adds r1, r6, #0x0
    bl sub_802F5F4
    cmp r0, #0x00
    beq _0803D0D4
    adds r0, r7, #0x0
    adds r1, r6, #0x0
    bl sub_802F608
    cmp r0, #0x00
    beq _0803D0D0
    adds r0, r7, #0x0
    b _0803D0E2
_0803D0C0: .4byte 0x03002E20
_0803D0C4: .4byte 0x00000815
_0803D0C8: .4byte 0x03002E44
_0803D0CC: .4byte 0x000007F4
_0803D0D0:
    adds r0, r7, #0x0
    b _0803D0EC
_0803D0D4:
    adds r0, r6, #0x0
    adds r1, r7, #0x0
    bl sub_802F608
    cmp r0, #0x00
    beq _0803D0EA
    adds r0, r6, #0x0
_0803D0E2:
    movs r1, #0x09
    bl sub_803D214
    b _0803D108
_0803D0EA:
    adds r0, r6, #0x0
_0803D0EC:
    movs r1, #0x08
    bl sub_803D214
    b _0803D108
_0803D0F4:
    adds r0, r7, #0x0
    adds r1, r6, #0x0
    bl sub_802F61C
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r10, r0
    ble _0803D108
    mov r10, r0
    mov r9, r6
_0803D108:
    movs r0, #0x01
    add r8, r0
    ldr r1, _0803D13C @ =0x03002E44
    ldr r2, _0803D140 @ =0x000007F1
    adds r0, r1, r2
    ldrb r0, [r0, #0x00]
    cmp r8, r0
    blt _0803D032
_0803D118:
    mov r3, r9
    cmp r3, #0x00
    beq _0803D16C
    adds r0, r7, #0x0
    mov r1, r9
    bl sub_802F5F4
    cmp r0, #0x00
    beq _0803D14E
    adds r0, r7, #0x0
    mov r1, r9
    bl sub_802F608
    cmp r0, #0x00
    beq _0803D144
    adds r0, r7, #0x0
    b _0803D15C
    .byte 0x00, 0x00
_0803D13C: .4byte 0x03002E44
_0803D140: .4byte 0x000007F1
_0803D144:
    adds r0, r7, #0x0
    movs r1, #0x08
    bl sub_803D214
    b _0803D16C
_0803D14E:
    mov r0, r9
    adds r1, r7, #0x0
    bl sub_802F608
    cmp r0, #0x00
    beq _0803D164
    mov r0, r9
_0803D15C:
    movs r1, #0x09
    bl sub_803D214
    b _0803D16C
_0803D164:
    mov r0, r9
    movs r1, #0x08
    bl sub_803D214
_0803D16C:
    add sp, #0x004
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0xF0, 0xB5, 0x47, 0x46, 0x80, 0xB4, 0x05, 0x1C, 0x1D, 0x49, 0x08, 0x1C, 0x24, 0x30, 0x00, 0x22
    .byte 0x90, 0x46, 0x80, 0x27, 0x7F, 0x01, 0xE7, 0x22, 0xD2, 0x00, 0x89, 0x18, 0x0C, 0x68, 0x21, 0x1C
    .byte 0xF5, 0xF7, 0xB2, 0xFB, 0x06, 0x1C, 0x7F, 0x20, 0x06, 0x40, 0x00, 0x2C, 0x1A, 0xD0, 0x60, 0x6D
    .byte 0xA8, 0x42, 0x14, 0xD0, 0x28, 0x1C, 0x90, 0x30, 0x00, 0x78, 0xB0, 0x42, 0x0F, 0xD1, 0x28, 0x1C
    .byte 0x21, 0x1C, 0xF2, 0xF7, 0x19, 0xFA, 0x00, 0x28, 0x09, 0xD0, 0x28, 0x1C, 0x21, 0x1C, 0xF2, 0xF7
    .byte 0x27, 0xFA, 0x00, 0x06, 0x00, 0x0E, 0x87, 0x42, 0x01, 0xDD, 0x07, 0x1C, 0xA0, 0x46, 0xE4, 0x6B
    .byte 0x00, 0x2C, 0xE4, 0xD1, 0x40, 0x46, 0x00, 0x28, 0x10, 0xD0, 0x28, 0x1C, 0x41, 0x46, 0xF2, 0xF7
    .byte 0x0D, 0xFA, 0x00, 0x28, 0x06, 0xD0, 0x28, 0x1C, 0x09, 0x21, 0x00, 0xF0, 0x0D, 0xF8, 0x05, 0xE0
    .byte 0x20, 0x2E, 0x00, 0x03, 0x28, 0x1C, 0x08, 0x21, 0x00, 0xF0, 0x06, 0xF8, 0x08, 0xBC, 0x98, 0x46
    .byte 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    thumb_func_start sub_803D214
sub_803D214:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    lsls r1, r1, #0x18
    lsrs r5, r1, #0x18
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _0803D260
    cmp r5, #0x08
    beq _0803D24E
    cmp r5, #0x08
    bgt _0803D236
    cmp r5, #0x02
    beq _0803D246
    b _0803D260
_0803D236:
    cmp r5, #0x09
    beq _0803D258
    cmp r5, #0x0F
    bne _0803D260
    adds r0, r4, #0x0
    bl sub_805B020
    b _0803D260
_0803D246:
    adds r0, r4, #0x0
    bl sub_805AA10
    b _0803D260
_0803D24E:
    adds r0, r4, #0x0
    movs r1, #0x00
    bl sub_805AA6C
    b _0803D260
_0803D258:
    adds r0, r4, #0x0
    movs r1, #0x01
    bl sub_805AA6C
_0803D260:
    subs r0, r5, #0x1
    cmp r0, #0x06
    bhi _0803D2B6
    lsls r0, r0, #0x02
    ldr r1, _0803D270 @ =0x0803D274
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_0803D270: .4byte 0x0803D274
    .byte 0x90, 0xD2, 0x03, 0x08, 0xB6, 0xD2, 0x03, 0x08, 0xB6, 0xD2, 0x03, 0x08, 0xB0, 0xD2, 0x03, 0x08
    .byte 0x98, 0xD2, 0x03, 0x08, 0xA0, 0xD2, 0x03, 0x08, 0xA8, 0xD2, 0x03, 0x08, 0x20, 0x1C, 0x1D, 0xF0
    .byte 0x13, 0xFB, 0x0E, 0xE0, 0x20, 0x1C, 0x1E, 0xF0, 0x67, 0xF8, 0x0A, 0xE0, 0x20, 0x1C, 0x1E, 0xF0
    .byte 0x7F, 0xF8, 0x06, 0xE0, 0x20, 0x1C, 0x1E, 0xF0, 0x97, 0xF8, 0x02, 0xE0, 0x20, 0x1C, 0x1D, 0xF0
    .byte 0x2F, 0xFF
_0803D2B6:
    subs r0, r5, #0x3
    cmp r0, #0x0B
    bhi _0803D322
    lsls r0, r0, #0x02
    ldr r1, _0803D2C8 @ =0x0803D2CC
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_0803D2C8: .4byte 0x0803D2CC
    .byte 0xFC, 0xD2, 0x03, 0x08, 0x22, 0xD3, 0x03, 0x08, 0x22, 0xD3, 0x03, 0x08, 0x22, 0xD3, 0x03, 0x08
    .byte 0x22, 0xD3, 0x03, 0x08, 0x22, 0xD3, 0x03, 0x08, 0x22, 0xD3, 0x03, 0x08, 0x22, 0xD3, 0x03, 0x08
    .byte 0x04, 0xD3, 0x03, 0x08, 0x0C, 0xD3, 0x03, 0x08, 0x14, 0xD3, 0x03, 0x08, 0x1C, 0xD3, 0x03, 0x08
    .byte 0x20, 0x1C, 0x1D, 0xF0, 0xFD, 0xFC, 0x0E, 0xE0, 0x20, 0x1C, 0x1D, 0xF0, 0xF5, 0xFD, 0x0A, 0xE0
    .byte 0x20, 0x1C, 0x1D, 0xF0, 0x2B, 0xFD, 0x06, 0xE0, 0x20, 0x1C, 0x1D, 0xF0, 0x07, 0xFE, 0x02, 0xE0
    .byte 0x20, 0x1C, 0x1D, 0xF0, 0x0D, 0xFE
_0803D322:
    pop {r4, r5}
    pop {r0}
    bx r0
    thumb_func_start sub_803D328
sub_803D328:
    push {r4, lr}
    adds r4, r0, #0x0
    lsls r2, r2, #0x18
    lsrs r3, r2, #0x18
    ldrh r2, [r4, #0x24]
    adds r0, #0x6E
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x1C
    lsrs r0, r0, #0x1C
    subs r0, #0x02
    cmp r0, #0x0D
    bhi _0803D3AA
    lsls r0, r0, #0x02
    ldr r1, _0803D34C @ =0x0803D350
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_0803D34C: .4byte 0x0803D350
    .byte 0x90, 0xD3, 0x03, 0x08, 0xAA, 0xD3, 0x03, 0x08, 0xAA, 0xD3, 0x03, 0x08, 0xAA, 0xD3, 0x03, 0x08
    .byte 0xAA, 0xD3, 0x03, 0x08, 0xAA, 0xD3, 0x03, 0x08, 0xA2, 0xD3, 0x03, 0x08, 0xA2, 0xD3, 0x03, 0x08
    .byte 0x9A, 0xD3, 0x03, 0x08, 0xAA, 0xD3, 0x03, 0x08, 0xAA, 0xD3, 0x03, 0x08, 0xAA, 0xD3, 0x03, 0x08
    .byte 0xAA, 0xD3, 0x03, 0x08, 0x88, 0xD3, 0x03, 0x08, 0x20, 0x1C, 0x1D, 0xF0, 0x0B, 0xFE, 0x0C, 0xE0
    .byte 0x20, 0x1C, 0x19, 0x1C, 0x1D, 0xF0, 0xBA, 0xFA, 0x07, 0xE0, 0x20, 0x1C, 0x1D, 0xF0, 0x0C, 0xFC
    .byte 0x03, 0xE0, 0x20, 0x1C, 0x19, 0x1C, 0x1D, 0xF0, 0xA3, 0xFB
_0803D3AA:
    ldr r0, [r4, #0x70]
    lsls r0, r0, #0x1C
    lsrs r0, r0, #0x1C
    subs r0, #0x01
    cmp r0, #0x06
    bhi _0803D406
    lsls r0, r0, #0x02
    ldr r1, _0803D3C0 @ =0x0803D3C4
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_0803D3C0: .4byte 0x0803D3C4
    .byte 0xE0, 0xD3, 0x03, 0x08, 0x06, 0xD4, 0x03, 0x08, 0x06, 0xD4, 0x03, 0x08, 0x00, 0xD4, 0x03, 0x08
    .byte 0xE8, 0xD3, 0x03, 0x08, 0xF0, 0xD3, 0x03, 0x08, 0xF8, 0xD3, 0x03, 0x08, 0x20, 0x1C, 0x1D, 0xF0
    .byte 0x1F, 0xFA, 0x0E, 0xE0, 0x20, 0x1C, 0x1D, 0xF0, 0xBB, 0xFE, 0x0A, 0xE0, 0x20, 0x1C, 0x1D, 0xF0
    .byte 0x03, 0xFF, 0x06, 0xE0, 0x20, 0x1C, 0x1D, 0xF0, 0x4F, 0xFF, 0x02, 0xE0, 0x20, 0x1C, 0x1D, 0xF0
    .byte 0x3B, 0xFE
_0803D406:
    adds r0, r4, #0x0
    adds r0, #0x72
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x1C
    lsrs r0, r0, #0x1C
    subs r0, #0x03
    cmp r0, #0x0B
    bhi _0803D47A
    lsls r0, r0, #0x02
    ldr r1, _0803D420 @ =0x0803D424
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_0803D420: .4byte 0x0803D424
    .byte 0x54, 0xD4, 0x03, 0x08, 0x7A, 0xD4, 0x03, 0x08, 0x7A, 0xD4, 0x03, 0x08, 0x7A, 0xD4, 0x03, 0x08
    .byte 0x7A, 0xD4, 0x03, 0x08, 0x7A, 0xD4, 0x03, 0x08, 0x7A, 0xD4, 0x03, 0x08, 0x7A, 0xD4, 0x03, 0x08
    .byte 0x5C, 0xD4, 0x03, 0x08, 0x64, 0xD4, 0x03, 0x08, 0x6C, 0xD4, 0x03, 0x08, 0x74, 0xD4, 0x03, 0x08
    .byte 0x20, 0x1C, 0x1D, 0xF0, 0xFF, 0xFB, 0x0E, 0xE0, 0x20, 0x1C, 0x1D, 0xF0, 0x53, 0xFD, 0x0A, 0xE0
    .byte 0x20, 0x1C, 0x1D, 0xF0, 0xDB, 0xFC, 0x06, 0xE0, 0x20, 0x1C, 0x1D, 0xF0, 0x87, 0xFD, 0x02, 0xE0
    .byte 0x20, 0x1C, 0x1D, 0xF0, 0x93, 0xFD
_0803D47A:
    pop {r4}
    pop {r0}
    bx r0
    thumb_func_start sub_803D480
sub_803D480:
    push {r4, r5, lr}
    mov r12, r0
    mov r2, r12
    adds r2, #0x6E
    ldrb r1, [r2, #0x00]
    movs r5, #0x10
    negs r5, r5
    adds r0, r5, #0x0
    ands r0, r1
    strb r0, [r2, #0x00]
    ldrh r1, [r2, #0x00]
    ldr r4, _0803D4E0 @ =0xFFFFFE0F
    adds r0, r4, #0x0
    ands r0, r1
    strh r0, [r2, #0x00]
    ldrb r1, [r2, #0x01]
    movs r3, #0x01
    adds r0, r3, #0x0
    ands r0, r1
    strb r0, [r2, #0x01]
    mov r1, r12
    adds r1, #0x70
    ldrb r2, [r1, #0x00]
    adds r0, r5, #0x0
    ands r0, r2
    strb r0, [r1, #0x00]
    ldrh r2, [r1, #0x00]
    adds r0, r4, #0x0
    ands r0, r2
    strh r0, [r1, #0x00]
    ldrb r2, [r1, #0x01]
    adds r0, r3, #0x0
    ands r0, r2
    strb r0, [r1, #0x01]
    mov r0, r12
    adds r0, #0x72
    ldrb r1, [r0, #0x00]
    ands r5, r1
    strb r5, [r0, #0x00]
    ldrh r1, [r0, #0x00]
    ands r4, r1
    strh r4, [r0, #0x00]
    ldrb r1, [r0, #0x01]
    ands r3, r1
    strb r3, [r0, #0x01]
    pop {r4, r5}
    pop {r0}
    bx r0
_0803D4E0: .4byte 0xFFFFFE0F
    thumb_func_start sub_803D4E4
sub_803D4E4:
    push {r4, r5, r6, r7, lr}
    adds r7, r0, #0x0
    lsls r1, r1, #0x18
    lsrs r5, r1, #0x18
    movs r3, #0x00
    ldr r1, [r7, #0x48]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _0803D4FA
    b _0803D6A6
_0803D4FA:
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r1, r0
    cmp r1, #0x00
    bne _0803D506
    b _0803D6A6
_0803D506:
    ldr r1, _0803D52C @ =0x03002E20
    movs r4, #0x00
    ldr r2, _0803D530 @ =0x00000CAC
    adds r0, r1, r2
    ldr r2, [r0, #0x00]
    mov r12, r1
    cmp r2, #0x00
    bge _0803D534
    movs r0, #0x01
    ands r0, r2
    cmp r0, #0x00
    bne _0803D590
    movs r0, #0xFF
    lsls r0, r0, #0x08
    ands r2, r0
    cmp r2, #0x00
    beq _0803D58A
    b _0803D590
    .byte 0x00, 0x00
_0803D52C: .4byte 0x03002E20
_0803D530: .4byte 0x00000CAC
_0803D534:
    ldr r0, _0803D554 @ =0x000007FE
    add r0, r12
    ldrh r2, [r0, #0x00]
    movs r1, #0xF0
    lsls r1, r1, #0x04
    ands r1, r2
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    beq _0803D558
    movs r0, #0x80
    lsls r0, r0, #0x03
    cmp r1, r0
    beq _0803D578
    b _0803D58A
    .byte 0x00, 0x00
_0803D554: .4byte 0x000007FE
_0803D558:
    movs r0, #0x10
    ands r0, r2
    cmp r0, #0x00
    beq _0803D590
    movs r1, #0x00
    ldr r0, _0803D574 @ =0x03002C60
    ldrh r0, [r0, #0x12]
    cmp r0, #0x00
    bne _0803D56C
    movs r1, #0x01
_0803D56C:
    movs r4, #0x00
    cmp r1, #0x00
    beq _0803D58A
    b _0803D590
_0803D574: .4byte 0x03002C60
_0803D578:
    movs r1, #0x00
    ldr r0, _0803D5A0 @ =0x03002C60
    ldrh r0, [r0, #0x0C]
    cmp r0, #0x00
    bne _0803D584
    movs r1, #0x01
_0803D584:
    cmp r1, #0x00
    beq _0803D58A
    movs r4, #0x01
_0803D58A:
    cmp r4, #0x00
    bne _0803D590
    b _0803D6A6
_0803D590:
    subs r6, r5, #0x1
    cmp r6, #0x04
    bhi _0803D5CA
    lsls r0, r6, #0x02
    ldr r1, _0803D5A4 @ =0x0803D5A8
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_0803D5A0: .4byte 0x03002C60
_0803D5A4: .4byte 0x0803D5A8
    .byte 0xC0, 0xD5, 0x03, 0x08, 0xBC, 0xD5, 0x03, 0x08, 0xC8, 0xD5, 0x03, 0x08, 0xC4, 0xD5, 0x03, 0x08
    .byte 0xC8, 0xD5, 0x03, 0x08, 0x02, 0x23, 0x04, 0xE0, 0x04, 0x23, 0x02, 0xE0, 0x08, 0x23, 0x00, 0xE0
    .byte 0x01, 0x23
_0803D5CA:
    movs r4, #0xBC
    lsls r4, r4, #0x01
    adds r1, r7, r4
    ldrh r0, [r1, #0x00]
    cmp r3, r0
    ble _0803D5D8
    adds r3, r0, #0x0
_0803D5D8:
    subs r0, r0, r3
    strh r0, [r1, #0x00]
    ldrh r5, [r7, #0x24]
    ldrh r4, [r7, #0x20]
    ldrh r2, [r7, #0x22]
    cmp r3, #0x00
    beq _0803D6A6
    ldr r0, _0803D600 @ =0x00000838
    add r0, r12
    ldr r0, [r0, #0x00]
    cmp r7, r0
    bne _0803D6A6
    cmp r6, #0x04
    bhi _0803D6A6
    lsls r0, r6, #0x02
    ldr r1, _0803D604 @ =0x0803D608
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_0803D600: .4byte 0x00000838
_0803D604: .4byte 0x0803D608
    .byte 0x58, 0xD6, 0x03, 0x08, 0x1C, 0xD6, 0x03, 0x08, 0x38, 0xD6, 0x03, 0x08, 0x68, 0xD6, 0x03, 0x08
    .byte 0x84, 0xD6, 0x03, 0x08, 0x20, 0x04, 0x00, 0x14, 0x11, 0x04, 0x09, 0x14, 0x2A, 0x04, 0x80, 0x24
    .byte 0x64, 0x02, 0x12, 0x19, 0x12, 0x14, 0x1B, 0x06, 0x1B, 0x0E, 0x1E, 0xF0, 0x5F, 0xF9, 0x36, 0xE0
    .byte 0x20, 0x04, 0x00, 0x14, 0x11, 0x04, 0x09, 0x14, 0x2A, 0x04, 0x80, 0x23, 0x5B, 0x02, 0xD2, 0x18
    .byte 0x12, 0x14, 0x64, 0x46, 0x23, 0x69, 0x01, 0x24, 0x23, 0x40, 0x1E, 0xF0, 0x3D, 0xF9, 0x26, 0xE0
    .byte 0x61, 0x46, 0x08, 0x69, 0x07, 0x21, 0x08, 0x40, 0x04, 0x38, 0x20, 0x1A, 0x00, 0x04, 0x00, 0xE0
    .byte 0x20, 0x04, 0x00, 0x14, 0x11, 0x04, 0x09, 0x14, 0x2A, 0x04, 0x80, 0x24, 0x64, 0x02, 0x12, 0x19
    .byte 0x12, 0x14, 0x1B, 0x06, 0x1B, 0x0E, 0x1E, 0xF0, 0x5F, 0xF9, 0x10, 0xE0, 0x20, 0x04, 0x00, 0x14
    .byte 0x11, 0x04, 0x09, 0x14, 0x2A, 0x04, 0x80, 0x23, 0x5B, 0x02, 0xD2, 0x18, 0x12, 0x14, 0xBC, 0x24
    .byte 0x64, 0x00, 0x3B, 0x19, 0x1C, 0x88, 0x01, 0x23, 0x23, 0x40, 0x1E, 0xF0, 0x15, 0xF9
_0803D6A6:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    thumb_func_start sub_803D6AC
sub_803D6AC:
    adds r1, r0, #0x0
    ldr r0, _0803D6D0 @ =0x00001005
    cmp r1, r0
    beq _0803D702
    cmp r1, r0
    bgt _0803D6E8
    subs r0, #0x03
    cmp r1, r0
    beq _0803D702
    cmp r1, r0
    bgt _0803D6D4
_0803D6C2:
    subs r0, #0x02
    cmp r1, r0
    beq _0803D702
    adds r0, #0x01
    cmp r1, r0
    beq _0803D710
    b _0803D714
_0803D6D0: .4byte 0x00001005
_0803D6D4:
    ldr r0, _0803D6E4 @ =0x00001003
    cmp r1, r0
    beq _0803D710
    adds r0, #0x01
    cmp r1, r0
    beq _0803D702
    b _0803D714
    .byte 0x00, 0x00
_0803D6E4: .4byte 0x00001003
_0803D6E8:
    ldr r0, _0803D708 @ =0x00002002
    cmp r1, r0
    beq _0803D702
    cmp r1, r0
    ble _0803D6C2
    ldr r0, _0803D70C @ =0x00002004
    cmp r1, r0
    beq _0803D702
    cmp r1, r0
    blt _0803D710
    adds r0, #0x01
    cmp r1, r0
    bne _0803D714
_0803D702:
    movs r0, #0x01
    b _0803D716
    .byte 0x00, 0x00
_0803D708: .4byte 0x00002002
_0803D70C: .4byte 0x00002004
_0803D710:
    movs r0, #0x03
    b _0803D716
_0803D714:
    movs r0, #0x00
_0803D716:
    bx lr
    thumb_func_start sub_803D718
sub_803D718:
    push {r4, lr}
    mov r12, r0
    ldr r4, [sp, #0x008]
    str r1, [r0, #0x00]
    str r2, [r0, #0x04]
    str r3, [r0, #0x08]
    cmp r2, #0x00
    bge _0803D72C
    ldr r0, _0803D754 @ =0x0000FFFF
    adds r2, r2, r0
_0803D72C:
    asrs r1, r2, #0x10
    mov r0, r12
    adds r0, #0xF0
    strh r1, [r0, #0x00]
    subs r0, #0x9A
    strh r4, [r0, #0x00]
    ldr r0, _0803D754 @ =0x0000FFFF
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    ands r0, r1
    mov r2, r12
    adds r2, #0x7A
    strh r0, [r2, #0x00]
    ands r0, r1
    mov r1, r12
    adds r1, #0x7C
    strh r0, [r1, #0x00]
    pop {r4}
    pop {r0}
    bx r0
_0803D754: .4byte 0x0000FFFF
    .byte 0x30, 0xB5, 0x04, 0x1C, 0x0D, 0x1C, 0x01, 0x20, 0xF0, 0xF7, 0x66, 0xFF, 0x01, 0x1C, 0xEC, 0x34
    .byte 0x20, 0x78, 0x08, 0x30, 0x40, 0x01, 0x09, 0x18, 0x28, 0x1C, 0x08, 0x22, 0x23, 0xF0, 0xEA, 0xFD
    .byte 0x01, 0x20, 0xF0, 0xF7, 0x75, 0xFF, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x03, 0x1C, 0x0A, 0x48
    .byte 0x0A, 0x4A, 0x80, 0x18, 0x02, 0x88, 0x12, 0x0A, 0x18, 0x1C, 0x91, 0x30, 0x00, 0x78, 0x01, 0x30
    .byte 0x12, 0x1A, 0x89, 0x8A, 0x10, 0x1C, 0x48, 0x43, 0x40, 0x18, 0x90, 0x33, 0x19, 0x78, 0x01, 0x31
    .byte 0x40, 0x1A, 0x00, 0x04, 0x00, 0x0C, 0x70, 0x47, 0x20, 0x2E, 0x00, 0x03, 0x0A, 0x08, 0x00, 0x00
    thumb_func_start sub_803D7B8
sub_803D7B8:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    adds r4, r1, #0x0
    bl sub_804F0AC
    ldr r1, _0803D80C @ =0x03002E20
    ldr r2, _0803D810 @ =0x0000080A
    adds r1, r1, r2
    ldrh r2, [r1, #0x00]
    lsrs r2, r2, #0x08
    adds r1, r5, #0x0
    adds r1, #0x91
    ldrb r1, [r1, #0x00]
    adds r1, #0x01
    subs r2, r2, r1
    ldrh r1, [r4, #0x14]
    muls r2, r1
    adds r2, r2, r1
    adds r1, r5, #0x0
    adds r1, #0x90
    ldrb r1, [r1, #0x00]
    adds r1, #0x01
    subs r2, r2, r1
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    movs r1, #0x0D
    muls r1, r2
    adds r0, r0, r1
    adds r1, r5, #0x0
    adds r1, #0xBA
    ldrh r1, [r1, #0x00]
    lsrs r1, r1, #0x01
    adds r0, r0, r1
    ldr r1, _0803D814 @ =0x0000EA5F
    cmp r0, r1
    bls _0803D802
    adds r0, r1, #0x0
_0803D802:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    pop {r4, r5}
    pop {r1}
    bx r1
_0803D80C: .4byte 0x03002E20
_0803D810: .4byte 0x0000080A
_0803D814: .4byte 0x0000EA5F
    thumb_func_start sub_803D818
sub_803D818:
    adds r1, r0, #0x0
    adds r0, #0x78
    ldrb r0, [r0, #0x00]
    subs r0, #0x03
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x01
    bhi _0803D82E
    ldr r0, [r1, #0x08]
    cmp r0, #0x00
    beq _0803D84C
_0803D82E:
    adds r0, r1, #0x0
    adds r0, #0x76
    ldrh r0, [r0, #0x00]
    cmp r0, #0x0F
    beq _0803D84C
    adds r0, r1, #0x0
    adds r0, #0x78
    ldrb r0, [r0, #0x00]
    cmp r0, #0x08
    bne _0803D850
    adds r0, r1, #0x0
    adds r0, #0x9C
    ldrh r0, [r0, #0x00]
    cmp r0, #0x3C
    bhi _0803D850
_0803D84C:
    movs r0, #0x01
    b _0803D852
_0803D850:
    movs r0, #0x00
_0803D852:
    bx lr
    thumb_func_start sub_803D854
sub_803D854:
    push {lr}
    cmp r1, #0x00
    beq _0803D862
    movs r1, #0x09
    bl sub_803D214
    b _0803D868
_0803D862:
    movs r1, #0x08
    bl sub_803D214
_0803D868:
    pop {r0}
    bx r0
    .byte 0x30, 0xB5, 0x05, 0x1C, 0x0C, 0x1C, 0xF1, 0xF7, 0xBF, 0xFE, 0x00, 0x28, 0x0C, 0xD0, 0x28, 0x1C
    .byte 0x21, 0x1C, 0xF1, 0xF7, 0xC3, 0xFE, 0x00, 0x28, 0x01, 0xD0, 0x28, 0x1C, 0x0B, 0xE0, 0x28, 0x1C
    .byte 0x08, 0x21, 0xFF, 0xF7, 0xC1, 0xFC, 0x0E, 0xE0, 0x20, 0x1C, 0x29, 0x1C, 0xF1, 0xF7, 0xB6, 0xFE
    .byte 0x00, 0x28, 0x04, 0xD0, 0x20, 0x1C, 0x09, 0x21, 0xFF, 0xF7, 0xB6, 0xFC, 0x03, 0xE0, 0x20, 0x1C
    .byte 0x08, 0x21, 0xFF, 0xF7, 0xB1, 0xFC, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x70, 0xB5, 0x10, 0x4A
    .byte 0x16, 0x1C, 0x24, 0x36, 0x90, 0x30, 0x00, 0x78, 0x7F, 0x22, 0x14, 0x1C, 0x04, 0x40, 0x90, 0x31
    .byte 0x08, 0x78, 0x15, 0x1C, 0x05, 0x40, 0xAC, 0x42, 0x0F, 0xD0, 0x30, 0x1C, 0x21, 0x1C, 0xF5, 0xF7
    .byte 0xD7, 0xF9, 0x00, 0x06, 0x00, 0x0E, 0xA8, 0x42, 0x07, 0xD0, 0x30, 0x1C, 0x21, 0x1C, 0xF5, 0xF7
    .byte 0xC3, 0xF9, 0x00, 0x06, 0x00, 0x0E, 0xA8, 0x42, 0x04, 0xD1, 0x01, 0x20, 0x03, 0xE0, 0x00, 0x00
    .byte 0x20, 0x2E, 0x00, 0x03, 0x00, 0x20, 0x70, 0xBC, 0x02, 0xBC, 0x08, 0x47
    thumb_func_start sub_803D908
sub_803D908:
    adds r1, r0, #0x0
    adds r1, #0x6E
    ldr r0, [r1, #0x00]
    lsls r0, r0, #0x1C
    lsrs r0, r0, #0x1C
    cmp r0, #0x02
    beq _0803D922
    cmp r0, #0x02
    blt _0803D932
    cmp r0, #0x09
    bgt _0803D932
    cmp r0, #0x08
    blt _0803D932
_0803D922:
    ldrh r0, [r1, #0x00]
    movs r1, #0xF8
    lsls r1, r1, #0x01
    ands r1, r0
    negs r0, r1
    orrs r0, r1
    lsrs r0, r0, #0x1F
    b _0803D934
_0803D932:
    movs r0, #0x00
_0803D934:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_803D938
sub_803D938:
    ldr r0, [r0, #0x70]
    lsls r0, r0, #0x1C
    lsrs r0, r0, #0x1C
    movs r1, #0x00
    cmp r0, #0x06
    bgt _0803D94A
    cmp r0, #0x05
    blt _0803D94A
    movs r1, #0x01
_0803D94A:
    adds r0, r1, #0x0
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_803D950
sub_803D950:
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x17
    adds r1, r1, r0
    adds r1, #0x6E
    ldrb r2, [r1, #0x00]
    movs r0, #0x10
    negs r0, r0
    ands r0, r2
    strb r0, [r1, #0x00]
    ldrh r2, [r1, #0x00]
    ldr r0, _0803D974 @ =0xFFFFFE0F
    ands r0, r2
    strh r0, [r1, #0x00]
    ldrb r2, [r1, #0x01]
    movs r0, #0x01
    ands r0, r2
    strb r0, [r1, #0x01]
    bx lr
_0803D974: .4byte 0xFFFFFE0F
    thumb_func_start sub_803D978
sub_803D978:
    adds r2, r0, #0x0
    ldr r0, [r2, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x06
    ands r0, r1
    cmp r0, #0x00
    beq _0803D998
    adds r1, r2, #0x0
    adds r1, #0x56
    ldr r2, _0803D994 @ =0xFFFF8000
    adds r0, r2, #0x0
    ldrh r1, [r1, #0x00]
    b _0803D9AA
    .byte 0x00, 0x00
_0803D994: .4byte 0xFFFF8000
_0803D998:
    adds r1, r2, #0x0
    adds r1, #0x7C
    adds r0, r2, #0x0
    adds r0, #0x82
    ldrh r0, [r0, #0x00]
    ldrh r1, [r1, #0x00]
    adds r0, r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x08
_0803D9AA:
    adds r0, r0, r1
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_803D9B4
sub_803D9B4:
    adds r2, r0, #0x0
    ldr r0, [r2, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x06
    ands r0, r1
    cmp r0, #0x00
    beq _0803D9C8
    adds r0, r2, #0x0
    adds r0, #0x56
    b _0803D9CC
_0803D9C8:
    adds r0, r2, #0x0
    adds r0, #0x7C
_0803D9CC:
    movs r1, #0x00
    ldsh r0, [r0, r1]
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_803D9D4
sub_803D9D4:
    push {r4, r5, r6, lr}
    mov r6, r8
    push {r6}
    adds r6, r0, #0x0
    mov r8, r1
    ldr r5, _0803DA10 @ =0x03002E20
    mov r0, r8
    bl sub_803D6AC
    adds r4, r0, #0x0
    movs r0, #0xBD
    lsls r0, r0, #0x01
    adds r6, r6, r0
    ldrh r0, [r6, #0x00]
    bl sub_803D6AC
    ldr r1, _0803DA14 @ =0x00000CA8
    adds r5, r5, r1
    subs r4, r4, r0
    ldrb r0, [r5, #0x00]
    adds r4, r4, r0
    strb r4, [r5, #0x00]
    mov r1, r8
    strh r1, [r6, #0x00]
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0803DA10: .4byte 0x03002E20
_0803DA14: .4byte 0x00000CA8
    thumb_func_start sub_803DA18
sub_803DA18:
    push {r4, lr}
    adds r4, r0, #0x0
    bl sub_8037AB0
    movs r2, #0xCB
    lsls r2, r2, #0x01
    adds r1, r4, r2
    movs r2, #0x00
    ldsh r1, [r1, r2]
    muls r0, r1
    asrs r0, r0, #0x08
    pop {r4}
    pop {r1}
    bx r1
    thumb_func_start sub_803DA34
sub_803DA34:
    push {r4, lr}
    adds r4, r0, #0x0
    bl sub_8037AB0
    adds r1, r0, #0x0
    movs r0, #0xCC
    lsls r0, r0, #0x01
    adds r4, r4, r0
    movs r2, #0x00
    ldsh r0, [r4, r2]
    muls r0, r1
    asrs r1, r0, #0x08
    adds r0, r1, #0x0
    pop {r4}
    pop {r1}
    bx r1
    thumb_func_start sub_803DA54
sub_803DA54:
    push {lr}
    adds r2, r0, #0x0
    ldr r0, _0803DA8C @ =0x03002E20
    ldr r1, [r0, #0x10]
    movs r0, #0x07
    ands r1, r0
    ldr r3, _0803DA90 @ =0x000007F1
    adds r0, r2, r3
    ldrb r0, [r0, #0x00]
    cmp r1, r0
    bge _0803DAA4
    lsls r1, r1, #0x02
    adds r3, #0x03
    adds r0, r2, r3
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    ldr r2, [r1, #0x48]
    cmp r2, #0x00
    beq _0803DAA4
    movs r0, #0x20
    ands r0, r2
    cmp r0, #0x00
    beq _0803DA94
    adds r0, r1, #0x0
    bl sub_8042FFC
    b _0803DAA4
    .byte 0x00, 0x00
_0803DA8C: .4byte 0x03002E20
_0803DA90: .4byte 0x000007F1
_0803DA94:
    movs r0, #0x80
    lsls r0, r0, #0x06
    ands r2, r0
    cmp r2, #0x00
    beq _0803DAA4
    adds r0, r1, #0x0
    bl sub_8042FFC
_0803DAA4:
    pop {r0}
    bx r0
    thumb_func_start sub_803DAA8
sub_803DAA8:
    adds r1, r0, #0x0
    adds r0, #0x91
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x08
    adds r1, #0x90
    ldrb r1, [r1, #0x00]
    adds r0, r0, r1
    bx lr
    thumb_func_start sub_803DAB8
sub_803DAB8:
    lsls r1, r1, #0x01
    adds r0, #0xDC
    adds r0, r0, r1
    ldrh r0, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_803DAC4
sub_803DAC4:
    movs r3, #0x00
    adds r1, r0, #0x0
    adds r1, #0xDC
    movs r2, #0x04
_0803DACC:
    ldrh r0, [r1, #0x00]
    adds r3, r3, r0
    adds r1, #0x02
    subs r2, #0x01
    cmp r2, #0x00
    bge _0803DACC
    ldr r0, _0803DAE8 @ =0x0000EA5F
    cmp r3, r0
    ble _0803DAE0
    adds r3, r0, #0x0
_0803DAE0:
    lsls r0, r3, #0x10
    lsrs r0, r0, #0x10
    bx lr
    .byte 0x00, 0x00
_0803DAE8: .4byte 0x0000EA5F
    thumb_func_start sub_803DAEC
sub_803DAEC:
    push {r4, lr}
    adds r2, r0, #0x0
    adds r3, r2, #0x0
    adds r3, #0x7E
    ldrb r0, [r3, #0x00]
    cmp r0, #0x0B
    bne _0803DB3C
    adds r1, r2, #0x0
    adds r1, #0x80
    movs r4, #0x00
    ldsh r0, [r1, r4]
    cmp r0, #0x00
    beq _0803DB38
    adds r1, r0, #0x0
    cmp r1, #0x00
    bge _0803DB0E
    negs r1, r1
_0803DB0E:
    ldr r0, _0803DB30 @ =0x00003FFF
    cmp r1, r0
    ble _0803DB18
    movs r1, #0xFC
    lsls r1, r1, #0x06
_0803DB18:
    asrs r0, r1, #0x0B
    movs r1, #0x07
    ands r0, r1
    adds r2, #0xC0
    ldr r1, _0803DB34 @ =0x080EC248
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x10
    str r0, [r2, #0x00]
    b _0803DB44
    .byte 0x00, 0x00
_0803DB30: .4byte 0x00003FFF
_0803DB34: .4byte 0x080EC248
_0803DB38:
    movs r0, #0x0E
    strb r0, [r3, #0x00]
_0803DB3C:
    adds r1, r2, #0x0
    adds r1, #0x84
    movs r0, #0x00
    strb r0, [r1, #0x00]
_0803DB44:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_803DB4C
sub_803DB4C:
    adds r3, r0, #0x0
    adds r0, #0xA8
    ldr r0, [r0, #0x00]
    subs r1, r1, r0
    asrs r1, r1, #0x10
    ldr r0, _0803DB7C @ =0x000001FF
    cmp r1, r0
    ble _0803DB5E
    adds r1, r0, #0x0
_0803DB5E:
    asrs r0, r1, #0x06
    movs r1, #0x07
    ands r0, r1
    adds r3, #0xC0
    ldrh r1, [r3, #0x00]
    str r1, [r3, #0x00]
    ldr r2, _0803DB80 @ =0x080EBF48
    lsls r0, r0, #0x01
    adds r0, r0, r2
    movs r2, #0x00
    ldsh r0, [r0, r2]
    lsls r0, r0, #0x10
    orrs r1, r0
    str r1, [r3, #0x00]
    bx lr
_0803DB7C: .4byte 0x000001FF
_0803DB80: .4byte 0x080EBF48
    thumb_func_start sub_803DB84
sub_803DB84:
    push {r4, r5, r6, r7, lr}
    adds r6, r0, #0x0
    ldr r0, _0803DBCC @ =0x080EBE28
    lsls r1, r1, #0x04
    adds r1, r1, r0
    ldrh r4, [r1, #0x0C]
    ldrh r7, [r1, #0x0E]
    adds r5, r6, #0x0
    adds r5, #0x82
    movs r1, #0x00
    ldsh r0, [r5, r1]
    cmp r0, #0x00
    ble _0803DBB6
    adds r0, r6, #0x0
    bl sub_803DC1C
    movs r2, #0x00
    ldsh r1, [r5, r2]
    lsls r0, r7, #0x10
    asrs r0, r0, #0x10
    cmp r1, r0
    ble _0803DBB6
    lsls r0, r4, #0x10
    negs r0, r0
    lsrs r4, r0, #0x10
_0803DBB6:
    adds r1, r6, #0x0
    adds r1, #0x82
    lsls r0, r4, #0x10
    asrs r0, r0, #0x10
    ldrh r2, [r1, #0x00]
    adds r0, r0, r2
    strh r0, [r1, #0x00]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0803DBCC: .4byte 0x080EBE28
    thumb_func_start sub_803DBD0
sub_803DBD0:
    push {r4, r5, r6, r7, lr}
    adds r6, r0, #0x0
    ldr r0, _0803DC18 @ =0x080EBE28
    lsls r1, r1, #0x04
    adds r1, r1, r0
    ldrh r4, [r1, #0x0C]
    ldrh r7, [r1, #0x0E]
    adds r5, r6, #0x0
    adds r5, #0x82
    movs r1, #0x00
    ldsh r0, [r5, r1]
    cmp r0, #0x00
    bge _0803DC04
    adds r0, r6, #0x0
    bl sub_803DC1C
    movs r0, #0x00
    ldsh r1, [r5, r0]
    negs r1, r1
    lsls r0, r7, #0x10
    asrs r0, r0, #0x10
    cmp r1, r0
    ble _0803DC04
    lsls r0, r4, #0x10
    negs r0, r0
    lsrs r4, r0, #0x10
_0803DC04:
    adds r2, r6, #0x0
    adds r2, #0x82
    ldrh r1, [r2, #0x00]
    lsls r0, r4, #0x10
    asrs r0, r0, #0x10
    subs r1, r1, r0
    strh r1, [r2, #0x00]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0803DC18: .4byte 0x080EBE28
    thumb_func_start sub_803DC1C
sub_803DC1C:
    push {r4, lr}
    adds r4, r0, #0x0
    adds r4, #0xB4
    ldrh r2, [r4, #0x00]
    movs r1, #0x25
    negs r1, r1
    ands r2, r1
    adds r0, #0x82
    ldrh r3, [r0, #0x00]
    movs r1, #0xC0
    lsls r1, r1, #0x04
    adds r0, r3, r1
    lsls r0, r0, #0x10
    ldr r1, _0803DC5C @ =0x17FF0000
    cmp r0, r1
    bls _0803DC40
    movs r0, #0x04
    orrs r2, r0
_0803DC40:
    movs r1, #0xC0
    lsls r1, r1, #0x05
    adds r0, r3, r1
    lsls r0, r0, #0x10
    ldr r1, _0803DC60 @ =0x2FFF0000
    cmp r0, r1
    bls _0803DC52
    movs r0, #0x20
    orrs r2, r0
_0803DC52:
    strh r2, [r4, #0x00]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0803DC5C: .4byte 0x17FF0000
_0803DC60: .4byte 0x2FFF0000
    thumb_func_start sub_803DC64
sub_803DC64:
    push {lr}
    adds r3, r0, #0x0
    cmp r2, #0x01
    beq _0803DC92
    cmp r2, #0x01
    bgt _0803DC76
    cmp r2, #0x00
    beq _0803DC7E
    b _0803DC9C
_0803DC76:
    cmp r2, #0x02
    beq _0803DC88
    cmp r2, #0x03
    bne _0803DC9C
_0803DC7E:
    adds r2, r3, #0x0
    adds r2, #0x4E
    ldrh r0, [r2, #0x00]
    negs r0, r0
    strh r0, [r2, #0x00]
_0803DC88:
    adds r0, r3, #0x0
    movs r2, #0x02
    bl sub_803B018
    b _0803DC9E
_0803DC92:
    adds r0, r3, #0x0
    movs r2, #0x00
    bl sub_803B018
    b _0803DC9E
_0803DC9C:
    movs r0, #0x01
_0803DC9E:
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_803DCA4
sub_803DCA4:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    adds r0, #0x91
    ldrb r0, [r0, #0x00]
    movs r5, #0x7F
    ands r5, r0
    cmp r0, #0x7F
    beq _0803DCE2
    ldr r2, [r4, #0x48]
    movs r0, #0x20
    ands r0, r2
    cmp r0, #0x00
    bne _0803DCD8
    adds r0, r1, #0x0
    bl sub_8032C44
    adds r1, r4, #0x0
    adds r1, #0xBA
    ldrh r1, [r1, #0x00]
    lsrs r1, r1, #0x01
    movs r2, #0x05
    muls r1, r2
    adds r0, r0, r5
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    b _0803DCE8
_0803DCD8:
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r2, r0
    cmp r2, #0x00
    bne _0803DCE6
_0803DCE2:
    movs r0, #0x00
    b _0803DCE8
_0803DCE6:
    movs r0, #0x01
_0803DCE8:
    pop {r4, r5}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_803DCF0
sub_803DCF0:
    push {r4, r5, r6, r7, lr}
    adds r5, r0, #0x0
    adds r7, r1, #0x0
    adds r0, #0xC6
    ldrh r0, [r0, #0x00]
    lsrs r0, r0, #0x08
    adds r4, r0, #0x0
    subs r4, #0x81
    cmp r4, #0x04
    bhi _0803DD4E
    bl sub_804F0AC
    adds r2, r5, #0x0
    adds r2, #0xE8
    ldr r1, [r2, #0x00]
    subs r0, r0, r1
    ldr r3, _0803DD2C @ =0x0000EA5F
    adds r6, r2, #0x0
    cmp r0, r3
    bhi _0803DD30
    bl sub_804F0AC
    lsls r2, r4, #0x01
    adds r1, r5, #0x0
    adds r1, #0xDC
    adds r1, r1, r2
    ldr r2, [r6, #0x00]
    subs r0, r0, r2
    strh r0, [r1, #0x00]
    b _0803DD3A
_0803DD2C: .4byte 0x0000EA5F
_0803DD30:
    lsls r1, r4, #0x01
    adds r0, r5, #0x0
    adds r0, #0xDC
    adds r0, r0, r1
    strh r3, [r0, #0x00]
_0803DD3A:
    ldr r1, _0803DD54 @ =0x00000814
    adds r0, r7, r1
    ldr r0, [r0, #0x00]
    cmp r5, r0
    bne _0803DD48
    bl sub_804F534
_0803DD48:
    bl sub_804F0AC
    str r0, [r6, #0x00]
_0803DD4E:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0803DD54: .4byte 0x00000814
    thumb_func_start sub_803DD58
sub_803DD58:
    push {r4, lr}
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r4, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r1, r4
    movs r0, #0x80
    lsls r0, r0, #0x06
    cmp r1, r0
    beq _0803DDA2
    cmp r1, r0
    bgt _0803DD7C
    movs r0, #0x80
    lsls r0, r0, #0x05
    cmp r1, r0
    beq _0803DD86
    b _0803DDBC
_0803DD7C:
    movs r0, #0x80
    lsls r0, r0, #0x08
    cmp r1, r0
    beq _0803DD90
    b _0803DDBC
_0803DD86:
    adds r0, r3, #0x0
    adds r1, r2, #0x0
    bl sub_8040128
    b _0803DDBC
_0803DD90:
    movs r0, #0x88
    lsls r0, r0, #0x08
    cmp r4, r0
    beq _0803DDBC
    adds r0, r3, #0x0
    adds r1, r2, #0x0
    bl sub_803F8C8
    b _0803DDBC
_0803DDA2:
    ldr r0, _0803DDC4 @ =0x03002E20
    ldr r1, _0803DDC8 @ =0x000007FE
    adds r0, r0, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    bne _0803DDBC
    adds r0, r3, #0x0
    adds r1, r2, #0x0
    bl sub_803F450
_0803DDBC:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0803DDC4: .4byte 0x03002E20
_0803DDC8: .4byte 0x000007FE
    .byte 0x00, 0xB5, 0x20, 0x20, 0x14, 0xF0, 0x68, 0xFA, 0x01, 0xBC, 0x00, 0x47, 0x00, 0xB5, 0x20, 0x20
    .byte 0x14, 0xF0, 0xFE, 0xFA, 0x01, 0xBC, 0x00, 0x47, 0xC4, 0x30, 0x00, 0x21, 0x01, 0x70, 0x70, 0x47
    .byte 0x6C, 0x30, 0x01, 0x88, 0x80, 0x20, 0xC0, 0x01, 0x08, 0x40, 0x00, 0x28, 0x01, 0xD1, 0x00, 0x20
    .byte 0x00, 0xE0, 0x01, 0x20, 0x70, 0x47, 0x00, 0x00
    thumb_func_start sub_803DE04
sub_803DE04:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrb r0, [r2, #0x08]
    mov r9, r0
    movs r0, #0x08
    ldsb r0, [r2, r0]
    cmp r0, #0x00
    beq _0803DF04
    ldrh r0, [r2, #0x0A]
    ldr r7, _0803DEC8 @ =0x080E645C
    lsls r0, r0, #0x19
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0803DE2A
    adds r0, #0x3F
_0803DE2A:
    asrs r0, r0, #0x06
    movs r1, #0x80
    lsls r1, r1, #0x01
    mov r8, r1
    subs r0, r1, r0
    ldr r5, _0803DECC @ =0x000003FF
    ands r0, r5
    lsls r0, r0, #0x02
    adds r0, r0, r7
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bge _0803DE44
    adds r0, #0x7F
_0803DE44:
    asrs r0, r0, #0x07
    ldrh r1, [r2, #0x0C]
    adds r1, r1, r0
    mov r12, r1
    movs r6, #0x00
    strh r1, [r2, #0x0C]
    lsls r0, r3, #0x19
    asrs r3, r0, #0x10
    adds r0, r3, #0x0
    cmp r3, #0x00
    bge _0803DE5C
    adds r0, #0x3F
_0803DE5C:
    asrs r4, r0, #0x06
    adds r0, r4, #0x0
    ands r0, r5
    lsls r0, r0, #0x02
    adds r0, r0, r7
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x02
    adds r0, r0, r1
    lsls r1, r0, #0x04
    adds r0, r0, r1
    lsls r1, r0, #0x08
    adds r0, r0, r1
    cmp r0, #0x00
    bge _0803DE7C
    ldr r1, _0803DED0 @ =0x00FFFFFF
    adds r0, r0, r1
_0803DE7C:
    asrs r0, r0, #0x18
    ldrh r1, [r2, #0x0E]
    adds r0, r0, r1
    strh r0, [r2, #0x0E]
    mov r1, r8
    subs r0, r1, r4
    ands r0, r5
    lsls r0, r0, #0x02
    adds r0, r0, r7
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bge _0803DE96
    adds r0, #0x3F
_0803DE96:
    asrs r0, r0, #0x06
    add r0, r12
    strh r0, [r2, #0x0C]
    mov r0, r9
    adds r0, #0x01
    strb r0, [r2, #0x08]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0x1D
    ble _0803DF04
    movs r0, #0x00
    strb r0, [r2, #0x08]
    ldr r3, _0803DED4 @ =0x03005C40
    ldr r0, [r3, #0x00]
    cmp r0, #0x00
    beq _0803DF04
    cmp r2, r0
    bne _0803DEE4
    ldr r1, _0803DED8 @ =0x03005C44
    ldr r0, [r1, #0x00]
    cmp r2, r0
    bne _0803DEDC
    str r6, [r1, #0x00]
    str r6, [r3, #0x00]
    b _0803DF04
_0803DEC8: .4byte 0x080E645C
_0803DECC: .4byte 0x000003FF
_0803DED0: .4byte 0x00FFFFFF
_0803DED4: .4byte 0x03005C40
_0803DED8: .4byte 0x03005C44
_0803DEDC:
    ldr r0, [r2, #0x00]
    str r0, [r3, #0x00]
    str r6, [r0, #0x04]
    b _0803DF04
_0803DEE4:
    ldr r1, _0803DEF4 @ =0x03005C44
    ldr r0, [r1, #0x00]
    cmp r2, r0
    bne _0803DEF8
    ldr r0, [r2, #0x04]
    str r0, [r1, #0x00]
    str r6, [r0, #0x00]
    b _0803DF04
_0803DEF4: .4byte 0x03005C44
_0803DEF8:
    ldr r1, [r2, #0x00]
    ldr r0, [r2, #0x04]
    str r0, [r1, #0x04]
    ldr r1, [r2, #0x04]
    ldr r0, [r2, #0x00]
    str r0, [r1, #0x00]
_0803DF04:
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    thumb_func_start sub_803DF10
sub_803DF10:
    push {r4, r5, r6, lr}
    add sp, #-0x00C
    adds r3, r0, #0x0
    adds r6, r1, #0x0
    movs r4, #0x00
    ldrb r1, [r3, #0x08]
    movs r0, #0x08
    ldsb r0, [r3, r0]
    cmp r0, #0x00
    bne _0803DF26
    b _0803E036
_0803DF26:
    ldrb r0, [r3, #0x09]
    subs r0, #0x01
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    adds r5, r1, #0x0
    cmp r0, #0x04
    bhi _0803DFEC
    lsls r0, r0, #0x02
    ldr r1, _0803DF40 @ =0x0803DF44
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_0803DF40: .4byte 0x0803DF44
    .byte 0x58, 0xDF, 0x03, 0x08, 0x80, 0xDF, 0x03, 0x08, 0xA8, 0xDF, 0x03, 0x08, 0xD0, 0xDF, 0x03, 0x08
    .byte 0xD0, 0xDF, 0x03, 0x08, 0x08, 0x20, 0x18, 0x56, 0x1D, 0x7A, 0x09, 0x28, 0x04, 0xDC, 0x01, 0x4C
    .byte 0x42, 0xE0, 0x00, 0x00, 0xCC, 0xAF, 0x07, 0x08, 0x02, 0x4C, 0x13, 0x28, 0x3C, 0xDC, 0x02, 0x4C
    .byte 0x3A, 0xE0, 0x00, 0x00, 0xDC, 0xAF, 0x07, 0x08, 0xD4, 0xAF, 0x07, 0x08, 0x08, 0x20, 0x18, 0x56
    .byte 0x1D, 0x7A, 0x09, 0x28, 0x04, 0xDC, 0x01, 0x4C, 0x2E, 0xE0, 0x00, 0x00, 0xFC, 0xAF, 0x07, 0x08
    .byte 0x02, 0x4C, 0x13, 0x28, 0x28, 0xDC, 0x02, 0x4C, 0x26, 0xE0, 0x00, 0x00, 0x0C, 0xB0, 0x07, 0x08
    .byte 0x04, 0xB0, 0x07, 0x08, 0x08, 0x20, 0x18, 0x56, 0x1D, 0x7A, 0x09, 0x28, 0x04, 0xDC, 0x01, 0x4C
    .byte 0x1A, 0xE0, 0x00, 0x00, 0x14, 0xB0, 0x07, 0x08, 0x02, 0x4C, 0x13, 0x28, 0x14, 0xDC, 0x02, 0x4C
    .byte 0x12, 0xE0, 0x00, 0x00, 0x24, 0xB0, 0x07, 0x08, 0x1C, 0xB0, 0x07, 0x08, 0x08, 0x20, 0x18, 0x56
    .byte 0x1D, 0x7A, 0x05, 0x28, 0x04, 0xDC, 0x01, 0x4C, 0x06, 0xE0, 0x00, 0x00, 0x44, 0xB0, 0x07, 0x08
    .byte 0x16, 0x4C, 0x0B, 0x28, 0x00, 0xDC, 0x16, 0x4C
_0803DFEC:
    movs r1, #0x0C
    ldsh r0, [r3, r1]
    cmp r0, #0x00
    bge _0803DFF6
    adds r0, #0x7F
_0803DFF6:
    lsls r0, r0, #0x09
    lsrs r0, r0, #0x10
    ldr r1, _0803E048 @ =0xFFFF0000
    ldr r2, [sp, #0x008]
    ands r2, r1
    orrs r2, r0
    str r2, [sp, #0x008]
    movs r1, #0x0E
    ldsh r0, [r3, r1]
    cmp r0, #0x00
    bge _0803E00E
    adds r0, #0x7F
_0803E00E:
    lsls r0, r0, #0x09
    lsrs r0, r0, #0x10
    lsls r0, r0, #0x10
    ldr r1, _0803E04C @ =0x0000FFFF
    ands r2, r1
    orrs r2, r0
    str r2, [sp, #0x008]
    movs r0, #0x03
    ands r0, r5
    cmp r0, #0x00
    beq _0803E036
    movs r0, #0x00
    str r0, [sp, #0x000]
    str r6, [sp, #0x004]
    adds r0, r4, #0x0
    add r1, sp, #0x008
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
_0803E036:
    add sp, #0x00C
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00, 0x54, 0xB0, 0x07, 0x08, 0x4C, 0xB0, 0x07, 0x08
_0803E048: .4byte 0xFFFF0000
_0803E04C: .4byte 0x0000FFFF
    thumb_func_start sub_803E050
sub_803E050:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    mov r12, r0
    adds r7, r1, #0x0
    mov r8, r3
    cmp r3, #0x00
    bne _0803E066
    b _0803E190
_0803E066:
    ldr r1, _0803E0D8 @ =0x03005BE0
    adds r0, r7, #0x0
    subs r0, #0x18
    lsls r5, r0, #0x19
    ldr r6, _0803E0DC @ =0x080E645C
    ldr r0, _0803E0E0 @ =0x03005C44
    mov r9, r0
    adds r3, r1, #0x0
    adds r0, r7, #0x0
    adds r0, #0x18
    lsls r4, r0, #0x19
    movs r0, #0x00
    mov r10, r0
_0803E080:
    movs r0, #0x08
    ldsb r0, [r3, r0]
    cmp r0, #0x00
    beq _0803E08A
    b _0803E184
_0803E08A:
    cmp r2, #0x00
    bne _0803E0F0
    asrs r2, r5, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _0803E098
    adds r0, #0x3F
_0803E098:
    asrs r4, r0, #0x06
    ldr r0, _0803E0E4 @ =0x000003FF
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x01
    cmp r0, #0x00
    bge _0803E0B6
    ldr r1, _0803E0E8 @ =0x0000FFFF
    adds r0, r0, r1
_0803E0B6:
    asrs r5, r0, #0x10
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r4
    ldr r1, _0803E0E4 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bge _0803E0D0
    ldr r1, _0803E0EC @ =0x000007FF
    adds r0, r0, r1
_0803E0D0:
    asrs r2, r0, #0x0B
    subs r1, r7, #0x4
    b _0803E138
    .byte 0x00, 0x00
_0803E0D8: .4byte 0x03005BE0
_0803E0DC: .4byte 0x080E645C
_0803E0E0: .4byte 0x03005C44
_0803E0E4: .4byte 0x000003FF
_0803E0E8: .4byte 0x0000FFFF
_0803E0EC: .4byte 0x000007FF
_0803E0F0:
    adds r5, r6, #0x0
    asrs r2, r4, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _0803E0FC
    adds r0, #0x3F
_0803E0FC:
    asrs r4, r0, #0x06
    ldr r0, _0803E168 @ =0x000003FF
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x01
    cmp r0, #0x00
    bge _0803E11A
    ldr r1, _0803E16C @ =0x0000FFFF
    adds r0, r0, r1
_0803E11A:
    asrs r5, r0, #0x10
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r4
    ldr r1, _0803E168 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bge _0803E134
    ldr r1, _0803E170 @ =0x000007FF
    adds r0, r0, r1
_0803E134:
    asrs r2, r0, #0x0B
    adds r1, r7, #0x4
_0803E138:
    movs r0, #0x01
    strb r0, [r3, #0x08]
    strh r1, [r3, #0x0A]
    mov r0, r8
    strb r0, [r3, #0x09]
    mov r1, r12
    ldrh r0, [r1, #0x00]
    adds r0, r0, r2
    lsls r0, r0, #0x07
    strh r0, [r3, #0x0C]
    ldrh r0, [r1, #0x02]
    adds r0, r0, r5
    adds r0, #0x08
    lsls r0, r0, #0x07
    strh r0, [r3, #0x0E]
    mov r0, r10
    str r0, [r3, #0x04]
    str r0, [r3, #0x00]
    ldr r1, _0803E174 @ =0x03005C40
    ldr r0, [r1, #0x00]
    cmp r0, #0x00
    bne _0803E178
    mov r0, r9
    b _0803E17E
_0803E168: .4byte 0x000003FF
_0803E16C: .4byte 0x0000FFFF
_0803E170: .4byte 0x000007FF
_0803E174: .4byte 0x03005C40
_0803E178:
    mov r1, r9
    ldr r0, [r1, #0x00]
    str r0, [r3, #0x04]
_0803E17E:
    str r3, [r0, #0x00]
    str r3, [r1, #0x00]
    b _0803E190
_0803E184:
    adds r3, #0x10
    adds r0, r1, #0x0
    adds r0, #0x50
    cmp r3, r0
    bgt _0803E190
    b _0803E080
_0803E190:
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_803E1A0
sub_803E1A0:
    push {r4, r5, r6, lr}
    adds r3, r0, #0x0
    adds r4, r1, #0x0
    adds r6, r2, #0x0
    ldr r0, [r3, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0803E1EA
    movs r1, #0x14
    ldsh r0, [r4, r1]
    adds r1, r3, #0x0
    adds r1, #0x7A
    ldrh r1, [r1, #0x00]
    subs r0, r0, r1
    asrs r0, r0, #0x09
    adds r0, #0x20
    movs r2, #0x7F
    ands r0, r2
    movs r1, #0xBF
    subs r5, r1, r0
    ands r5, r2
    ldr r0, _0803E1F0 @ =0x03005C40
    ldr r4, [r0, #0x00]
    cmp r4, #0x00
    beq _0803E1EA
_0803E1D4:
    adds r0, r5, #0x0
    adds r1, r4, #0x0
    bl sub_803DE04
    adds r0, r4, #0x0
    adds r1, r6, #0x0
    bl sub_803DF10
    ldr r4, [r4, #0x00]
    cmp r4, #0x00
    bne _0803E1D4
_0803E1EA:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0803E1F0: .4byte 0x03005C40
    thumb_func_start sub_803E1F4
sub_803E1F4:
    push {r4, r5, lr}
    adds r3, r0, #0x0
    adds r4, r2, #0x0
    ldr r5, [sp, #0x00C]
    cmp r1, #0x00
    beq _0803E218
    movs r2, #0x14
    ldsh r0, [r1, r2]
    adds r1, r3, #0x0
    adds r1, #0x56
    ldrh r1, [r1, #0x00]
    subs r0, r0, r1
    asrs r0, r0, #0x09
    adds r3, r0, #0x0
    adds r3, #0x20
    movs r0, #0x7F
    ands r3, r0
    b _0803E21A
_0803E218:
    movs r3, #0x00
_0803E21A:
    cmp r5, #0x00
    beq _0803E24C
    movs r0, #0xBF
    subs r3, r0, r3
    movs r0, #0x7F
    ands r3, r0
    ldr r2, _0803E254 @ =0x0300232C
    ldr r0, [r2, #0x00]
    adds r0, #0x01
    movs r1, #0x03
    ands r0, r1
    str r0, [r2, #0x00]
    cmp r0, #0x00
    bne _0803E24C
    ldr r0, _0803E258 @ =0x03002328
    ldr r2, [r0, #0x00]
    adds r2, #0x01
    movs r1, #0x01
    ands r2, r1
    str r2, [r0, #0x00]
    adds r0, r4, #0x0
    adds r1, r3, #0x0
    adds r3, r5, #0x0
    bl sub_803E050
_0803E24C:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0803E254: .4byte 0x0300232C
_0803E258: .4byte 0x03002328
    thumb_func_start sub_803E25C
sub_803E25C:
    ldr r2, _0803E278 @ =0x03005C40
    ldr r1, _0803E27C @ =0x03005C44
    movs r0, #0x00
    str r0, [r1, #0x00]
    str r0, [r2, #0x00]
    ldr r1, _0803E280 @ =0x03005BE0
    movs r2, #0x00
    adds r0, r1, #0x0
    adds r0, #0x50
_0803E26E:
    strb r2, [r0, #0x08]
    subs r0, #0x10
    cmp r0, r1
    bge _0803E26E
    bx lr
_0803E278: .4byte 0x03005C40
_0803E27C: .4byte 0x03005C44
_0803E280: .4byte 0x03005BE0
    .byte 0x70, 0xB5, 0x06, 0x1C, 0x0D, 0x1C, 0x09, 0x48, 0x04, 0x68, 0x00, 0x2C, 0x0A, 0xD0, 0x30, 0x1C
    .byte 0x21, 0x1C, 0xFF, 0xF7, 0xB5, 0xFD, 0x20, 0x1C, 0x29, 0x1C, 0xFF, 0xF7, 0x37, 0xFE, 0x24, 0x68
    .byte 0x00, 0x2C, 0xF4, 0xD1, 0x70, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x40, 0x5C, 0x00, 0x03
    .byte 0x70, 0xB5, 0x0C, 0x49, 0x0B, 0x1C, 0x24, 0x33, 0x44, 0x6D, 0x0B, 0x48, 0x09, 0x18, 0x0A, 0x68
    .byte 0x90, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x47, 0xD1, 0xA2, 0x42, 0x0E, 0xD0, 0x18, 0x1C
    .byte 0x21, 0x1C, 0x0E, 0xF0, 0x27, 0xFD, 0x00, 0x04, 0x02, 0x0C, 0x3F, 0x2A, 0x00, 0xDC, 0x40, 0x22
    .byte 0x01, 0x20, 0x06, 0xE0, 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x80, 0x22, 0x52, 0x00
    .byte 0x00, 0x20, 0x09, 0x4E, 0x85, 0x00, 0x20, 0x1C, 0x4C, 0x30, 0x01, 0x78, 0x07, 0x20, 0x08, 0x40
    .byte 0xC3, 0x00, 0x20, 0x1C, 0x58, 0x30, 0x01, 0x88, 0x10, 0x20, 0x08, 0x40, 0x00, 0x28, 0x05, 0xD1
    .byte 0x98, 0x1C, 0x28, 0x18, 0x03, 0xE0, 0x00, 0x00, 0xC8, 0xCB, 0x0E, 0x08, 0xE8, 0x18, 0x30, 0x18
    .byte 0x04, 0x88, 0x16, 0x1C, 0x00, 0x2E, 0x18, 0xD0, 0x20, 0x1C, 0x21, 0xF0, 0xF7, 0xFD, 0x0C, 0x4D
    .byte 0x0C, 0x48, 0xE4, 0x00, 0x24, 0x18, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19
    .byte 0x00, 0x68, 0x21, 0xF0, 0xE3, 0xFE, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19
    .byte 0x00, 0x68, 0x01, 0x21, 0x32, 0x1C, 0x22, 0xF0, 0x91, 0xFD, 0x70, 0xBC, 0x01, 0xBC, 0x00, 0x47
    .byte 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08, 0x70, 0xB5, 0x0C, 0x49, 0x0B, 0x1C, 0x24, 0x33
    .byte 0x44, 0x6D, 0x0B, 0x48, 0x09, 0x18, 0x0A, 0x68, 0x90, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28
    .byte 0x47, 0xD1, 0xA2, 0x42, 0x0E, 0xD0, 0x18, 0x1C, 0x21, 0x1C, 0x0E, 0xF0, 0xCB, 0xFC, 0x00, 0x04
    .byte 0x02, 0x0C, 0x3F, 0x2A, 0x00, 0xDC, 0x40, 0x22, 0x01, 0x20, 0x06, 0xE0, 0x20, 0x2E, 0x00, 0x03
    .byte 0x38, 0x08, 0x00, 0x00, 0x80, 0x22, 0x52, 0x00, 0x00, 0x20, 0x09, 0x4E, 0x85, 0x00, 0x20, 0x1C
    .byte 0x4C, 0x30, 0x01, 0x78, 0x07, 0x20, 0x08, 0x40, 0xC3, 0x00, 0x20, 0x1C, 0x58, 0x30, 0x01, 0x88
    .byte 0x10, 0x20, 0x08, 0x40, 0x00, 0x28, 0x05, 0xD1, 0x98, 0x1C, 0x28, 0x18, 0x03, 0xE0, 0x00, 0x00
    .byte 0xC8, 0xCB, 0x0E, 0x08, 0xE8, 0x18, 0x30, 0x18, 0x04, 0x88, 0x16, 0x1C, 0x00, 0x2E, 0x18, 0xD0
    .byte 0x20, 0x1C, 0x21, 0xF0, 0x9B, 0xFD, 0x0C, 0x4D, 0x0C, 0x48, 0xE4, 0x00, 0x24, 0x18, 0xA1, 0x88
    .byte 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x21, 0xF0, 0x87, 0xFE, 0xA1, 0x88
    .byte 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x01, 0x21, 0x32, 0x1C, 0x22, 0xF0
    .byte 0x35, 0xFD, 0x70, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08
    thumb_func_start sub_803E424
sub_803E424:
    push {r4, lr}
    adds r3, r0, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _0803E44C
    adds r0, r3, #0x0
    adds r0, #0x58
    ldrh r2, [r0, #0x00]
    movs r0, #0x40
    ands r0, r2
    cmp r0, #0x00
    bne _0803E444
    movs r0, #0x01
    b _0803E486
_0803E444:
    movs r0, #0x20
    ands r0, r2
    cmp r0, #0x00
    beq _0803E452
_0803E44C:
    movs r0, #0x80
    lsls r0, r0, #0x0A
    b _0803E486
_0803E452:
    ldr r4, _0803E48C @ =0x080EC8B4
    movs r1, #0x07
    ands r1, r2
    movs r0, #0x10
    ands r0, r2
    lsls r1, r1, #0x03
    cmp r0, #0x00
    bne _0803E464
    adds r1, #0x04
_0803E464:
    adds r0, r1, r4
    ldr r2, [r0, #0x00]
    ldr r0, [r3, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0803E484
    movs r1, #0xBC
    lsls r1, r1, #0x01
    adds r0, r3, r1
    ldrh r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r2, r2, r0
_0803E484:
    adds r0, r2, #0x0
_0803E486:
    pop {r4}
    pop {r1}
    bx r1
_0803E48C: .4byte 0x080EC8B4
    thumb_func_start sub_803E490
sub_803E490:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    adds r5, r1, #0x0
    ldr r0, _0803E4B0 @ =0x03002E20
    ldr r0, [r0, #0x10]
    movs r1, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _0803E4B4
    adds r2, r4, #0x0
    adds r2, #0xB4
    ldrh r1, [r2, #0x00]
    movs r3, #0xC0
    lsls r3, r3, #0x02
    b _0803E4BE
    .byte 0x00, 0x00
_0803E4B0: .4byte 0x03002E20
_0803E4B4:
    adds r2, r4, #0x0
    adds r2, #0xB4
    ldrh r1, [r2, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x02
_0803E4BE:
    adds r0, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    ldr r0, [r4, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0803E4DA
    adds r1, r4, #0x0
    adds r1, #0xB6
    movs r0, #0x80
    lsls r0, r0, #0x05
    b _0803E4FE
_0803E4DA:
    adds r0, r4, #0x0
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r0, r0, #0x01
    adds r1, r5, #0x0
    bl sub_8042FC8
    cmp r0, #0x00
    beq _0803E4F6
    adds r1, r4, #0x0
    adds r1, #0xB6
    movs r0, #0x80
    lsls r0, r0, #0x05
    b _0803E4FE
_0803E4F6:
    adds r1, r4, #0x0
    adds r1, #0xB6
    movs r0, #0x80
    lsls r0, r0, #0x06
_0803E4FE:
    strh r0, [r1, #0x00]
    adds r2, r4, #0x0
    adds r2, #0x74
    ldrh r1, [r2, #0x00]
    movs r0, #0x03
    orrs r0, r1
    strh r0, [r2, #0x00]
    adds r0, r4, #0x0
    movs r1, #0x01
    bl sub_803D4E4
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl sub_8043460
    ldr r1, _0803E598 @ =0x00000814
    adds r0, r5, r1
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _0803E592
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0803E592
    movs r6, #0x00
    movs r5, #0x00
    ldr r2, _0803E59C @ =0x08102414
    ldr r3, _0803E5A0 @ =0x08102498
    movs r0, #0xA2
    lsls r0, r0, #0x03
    adds r4, r3, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    ldrh r0, [r1, #0x04]
    cmp r0, #0x00
    beq _0803E55A
    ldr r1, [r1, #0x00]
    ldr r0, [r4, #0x00]
    cmp r1, r0
    bne _0803E55A
    movs r5, #0x01
_0803E55A:
    cmp r5, #0x00
    beq _0803E588
    movs r4, #0x00
    movs r1, #0xA2
    lsls r1, r1, #0x03
    adds r3, r3, r1
    ldrh r0, [r3, #0x04]
    lsls r1, r0, #0x01
    adds r1, r1, r0
    lsls r1, r1, #0x02
    adds r1, r1, r2
    ldr r1, [r1, #0x00]
    ldr r0, [r1, #0x04]
    cmp r0, #0x00
    bge _0803E582
    ldr r1, [r1, #0x00]
    ldr r0, [r3, #0x00]
    cmp r1, r0
    bne _0803E582
    movs r4, #0x01
_0803E582:
    cmp r4, #0x00
    bne _0803E588
    movs r6, #0x01
_0803E588:
    cmp r6, #0x00
    bne _0803E592
    movs r0, #0xA2
    bl m4aSongNumStart
_0803E592:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0803E598: .4byte 0x00000814
_0803E59C: .4byte 0x08102414
_0803E5A0: .4byte 0x08102498
    thumb_func_start sub_803E5A4
sub_803E5A4:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    adds r4, r3, #0x0
    ldr r0, [r5, #0x00]
    subs r0, r0, r1
    cmp r0, #0x00
    bge _0803E5B6
    ldr r1, _0803E5D4 @ =0x0000FFFF
    adds r0, r0, r1
_0803E5B6:
    asrs r1, r0, #0x10
    ldr r0, [r5, #0x04]
    subs r0, r0, r2
    cmp r0, #0x00
    bge _0803E5C4
    ldr r2, _0803E5D4 @ =0x0000FFFF
    adds r0, r0, r2
_0803E5C4:
    asrs r2, r0, #0x10
    cmp r1, #0x00
    bne _0803E5D8
    cmp r2, #0x00
    bne _0803E5D8
    ldr r2, [sp, #0x010]
    b _0803E5E8
    .byte 0x00, 0x00
_0803E5D4: .4byte 0x0000FFFF
_0803E5D8:
    lsls r0, r1, #0x10
    asrs r0, r0, #0x10
    lsls r1, r2, #0x10
    asrs r1, r1, #0x10
    bl sub_802EC38
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
_0803E5E8:
    movs r1, #0xC0
    lsls r1, r1, #0x01
    cmp r4, r1
    bgt _0803E5F2
    adds r4, r1, #0x0
_0803E5F2:
    ldr r0, _0803E614 @ =0x000003FF
    cmp r4, r0
    ble _0803E5FC
    movs r4, #0x80
    lsls r4, r4, #0x03
_0803E5FC:
    cmp r4, r1
    beq _0803E620
    ldr r0, _0803E618 @ =0x03002E20
    ldr r0, [r0, #0x10]
    movs r1, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _0803E61C
    movs r0, #0x80
    lsls r0, r0, #0x07
    adds r2, r2, r0
    b _0803E620
_0803E614: .4byte 0x000003FF
_0803E618: .4byte 0x03002E20
_0803E61C:
    ldr r1, _0803E67C @ =0xFFFFC000
    adds r2, r2, r1
_0803E620:
    ldr r6, _0803E680 @ =0x080E645C
    lsls r0, r2, #0x10
    asrs r2, r0, #0x10
    adds r1, r2, #0x0
    cmp r2, #0x00
    bge _0803E62E
    adds r1, #0x3F
_0803E62E:
    asrs r3, r1, #0x06
    ldr r1, _0803E684 @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r3, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    adds r1, r1, r6
    ldr r0, [r1, #0x00]
    muls r0, r4
    cmp r0, #0x00
    bge _0803E648
    ldr r1, _0803E688 @ =0x00007FFF
    adds r0, r0, r1
_0803E648:
    asrs r0, r0, #0x0F
    adds r1, r5, #0x0
    adds r1, #0x4E
    strh r0, [r1, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r1, _0803E684 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r0, [r0, #0x00]
    negs r0, r0
    adds r1, r4, #0x0
    muls r1, r0
    cmp r1, #0x00
    bge _0803E66E
    ldr r2, _0803E688 @ =0x00007FFF
    adds r1, r1, r2
_0803E66E:
    asrs r1, r1, #0x0F
    adds r0, r5, #0x0
    adds r0, #0x50
    strh r1, [r0, #0x00]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0803E67C: .4byte 0xFFFFC000
_0803E680: .4byte 0x080E645C
_0803E684: .4byte 0x000003FF
_0803E688: .4byte 0x00007FFF
    thumb_func_start sub_803E68C
sub_803E68C:
    push {r4, r5, r6, r7, lr}
    adds r6, r0, #0x0
    adds r4, r1, #0x0
    adds r5, r3, #0x0
    ldr r0, [sp, #0x014]
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    ldr r0, [r6, #0x00]
    subs r0, r0, r4
    cmp r0, #0x00
    bge _0803E6A6
    ldr r1, _0803E6D4 @ =0x0000FFFF
    adds r0, r0, r1
_0803E6A6:
    asrs r4, r0, #0x10
    ldr r0, [r6, #0x04]
    subs r1, r0, r2
    cmp r1, #0x00
    bge _0803E6B4
    ldr r2, _0803E6D4 @ =0x0000FFFF
    adds r1, r1, r2
_0803E6B4:
    lsls r0, r4, #0x10
    asrs r0, r0, #0x10
    asrs r1, r1, #0x10
    bl sub_802EC38
    lsls r0, r0, #0x10
    lsls r1, r7, #0x10
    asrs r1, r1, #0x10
    asrs r0, r0, #0x10
    subs r0, r1, r0
    lsls r0, r0, #0x10
    cmp r0, #0x00
    blt _0803E6DC
    ldr r2, _0803E6D8 @ =0xFFFFC000
    b _0803E6E0
    .byte 0x00, 0x00
_0803E6D4: .4byte 0x0000FFFF
_0803E6D8: .4byte 0xFFFFC000
_0803E6DC:
    movs r2, #0x80
    lsls r2, r2, #0x07
_0803E6E0:
    adds r0, r1, r2
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    movs r2, #0xC0
    lsls r2, r2, #0x01
    cmp r5, r2
    bgt _0803E6F0
    adds r5, r2, #0x0
_0803E6F0:
    ldr r4, _0803E754 @ =0x000003FF
    cmp r5, r4
    ble _0803E6FA
    movs r5, #0x80
    lsls r5, r5, #0x03
_0803E6FA:
    lsls r0, r0, #0x10
    asrs r7, r0, #0x10
    ldr r0, _0803E758 @ =0x080E645C
    mov r12, r0
    adds r2, r7, #0x0
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _0803E70C
    adds r0, #0x3F
_0803E70C:
    asrs r3, r0, #0x06
    adds r0, r3, #0x0
    ands r0, r4
    lsls r0, r0, #0x02
    add r0, r12
    ldr r0, [r0, #0x00]
    muls r0, r5
    cmp r0, #0x00
    bge _0803E722
    ldr r1, _0803E75C @ =0x00007FFF
    adds r0, r0, r1
_0803E722:
    asrs r0, r0, #0x0F
    adds r1, r6, #0x0
    adds r1, #0x4E
    strh r0, [r1, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ands r0, r4
    lsls r0, r0, #0x02
    add r0, r12
    ldr r0, [r0, #0x00]
    negs r0, r0
    muls r0, r5
    cmp r0, #0x00
    bge _0803E744
    ldr r2, _0803E75C @ =0x00007FFF
    adds r0, r0, r2
_0803E744:
    asrs r1, r0, #0x0F
    adds r0, r6, #0x0
    adds r0, #0x50
    strh r1, [r0, #0x00]
    adds r0, r7, #0x0
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
_0803E754: .4byte 0x000003FF
_0803E758: .4byte 0x080E645C
_0803E75C: .4byte 0x00007FFF
    thumb_func_start sub_803E760
sub_803E760:
    adds r3, r0, #0x0
    adds r0, #0x4E
    movs r1, #0x00
    ldsh r2, [r0, r1]
    negs r1, r2
    cmp r1, #0x00
    blt _0803E788
    cmp r1, #0x80
    bgt _0803E776
    movs r1, #0x80
    b _0803E79A
_0803E776:
    ldr r0, _0803E784 @ =0x000003FF
    cmp r1, r0
    ble _0803E79A
    movs r1, #0x80
    lsls r1, r1, #0x03
    b _0803E79A
    .byte 0x00, 0x00
_0803E784: .4byte 0x000003FF
_0803E788:
    cmp r2, #0x80
    bgt _0803E792
    movs r1, #0x80
    negs r1, r1
    b _0803E79A
_0803E792:
    ldr r0, _0803E7B8 @ =0x000003FF
    cmp r2, r0
    ble _0803E79A
    ldr r1, _0803E7BC @ =0xFFFFFC00
_0803E79A:
    adds r0, r3, #0x0
    adds r0, #0x4E
    strh r1, [r0, #0x00]
    adds r0, #0x02
    movs r1, #0x00
    ldsh r2, [r0, r1]
    negs r1, r2
    adds r3, r0, #0x0
    cmp r1, #0x00
    blt _0803E7D0
    cmp r1, #0x80
    bgt _0803E7C0
    movs r1, #0x80
    b _0803E7E2
    .byte 0x00, 0x00
_0803E7B8: .4byte 0x000003FF
_0803E7BC: .4byte 0xFFFFFC00
_0803E7C0:
    ldr r0, _0803E7CC @ =0x000003FF
    cmp r1, r0
    ble _0803E7E2
    movs r1, #0x80
    lsls r1, r1, #0x03
    b _0803E7E2
_0803E7CC: .4byte 0x000003FF
_0803E7D0:
    cmp r2, #0x80
    bgt _0803E7DA
    movs r1, #0x80
    negs r1, r1
    b _0803E7E2
_0803E7DA:
    ldr r0, _0803E7E8 @ =0x000003FF
    cmp r2, r0
    ble _0803E7E2
    ldr r1, _0803E7EC @ =0xFFFFFC00
_0803E7E2:
    strh r1, [r3, #0x00]
    bx lr
    .byte 0x00, 0x00
_0803E7E8: .4byte 0x000003FF
_0803E7EC: .4byte 0xFFFFFC00
    thumb_func_start sub_803E7F0
sub_803E7F0:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    add sp, #-0x010
    adds r6, r0, #0x0
    adds r7, r1, #0x0
    ldr r1, _0803E910 @ =0x00000814
    adds r0, r7, r1
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0803E854
    adds r0, r7, #0x0
    adds r1, r6, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    cmp r5, #0x00
    beq _0803E854
    movs r0, #0xC3
    lsls r0, r0, #0x01
    bl m4aSongNumStart
    ldr r0, _0803E914 @ =0x08102414
    mov r8, r0
    ldr r4, _0803E918 @ =0x08102498
    movs r1, #0xC3
    lsls r1, r1, #0x04
    adds r4, r4, r1
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r5, #0x0
    bl m4aMPlayVolumeControl
_0803E854:
    ldr r1, _0803E910 @ =0x00000814
    adds r0, r7, r1
    ldr r0, [r0, #0x00]
    cmp r6, r0
    bne _0803E864
    adds r0, r6, #0x0
    bl sub_805BFE8
_0803E864:
    ldrh r1, [r6, #0x34]
    ldr r0, _0803E91C @ =0x0000FFFE
    ands r0, r1
    movs r5, #0x00
    movs r4, #0x00
    ldr r1, _0803E920 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r6, #0x34]
    adds r0, r6, #0x0
    adds r0, #0xBC
    str r4, [r0, #0x00]
    adds r0, #0x04
    str r4, [r0, #0x00]
    subs r0, #0x38
    strh r4, [r0, #0x00]
    subs r0, #0x0A
    strb r5, [r0, #0x00]
    adds r0, #0x02
    strh r4, [r0, #0x00]
    adds r0, #0x02
    strh r4, [r0, #0x00]
    ldr r0, _0803E924 @ =0x03002E20
    adds r0, #0x24
    adds r1, r6, #0x0
    adds r1, #0xEC
    ldrb r1, [r1, #0x00]
    add r3, sp, #0x008
    add r2, sp, #0x00C
    str r2, [sp, #0x000]
    add r2, sp, #0x004
    bl sub_8032AA0
    ldr r0, [sp, #0x00C]
    adds r1, r6, #0x0
    adds r1, #0xA2
    strh r0, [r1, #0x00]
    ldr r0, [sp, #0x004]
    cmp r0, #0x00
    bge _0803E8B6
    ldr r1, _0803E928 @ =0x0000FFFF
    adds r0, r0, r1
_0803E8B6:
    asrs r0, r0, #0x10
    adds r1, r6, #0x0
    adds r1, #0x9E
    strh r0, [r1, #0x00]
    ldr r1, [sp, #0x008]
    cmp r1, #0x00
    bge _0803E8C8
    ldr r0, _0803E928 @ =0x0000FFFF
    adds r1, r1, r0
_0803E8C8:
    asrs r1, r1, #0x10
    adds r0, r6, #0x0
    adds r0, #0xA0
    strh r1, [r0, #0x00]
    adds r1, r6, #0x0
    adds r1, #0x9C
    movs r0, #0x3C
    strh r0, [r1, #0x00]
    adds r0, #0xC4
    str r0, [r6, #0x08]
    subs r1, #0x18
    movs r0, #0x02
    strb r0, [r1, #0x00]
    subs r1, #0x0C
    movs r0, #0x09
    strb r0, [r1, #0x00]
    ldr r0, [r6, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x04
    orrs r0, r1
    str r0, [r6, #0x48]
    adds r0, r6, #0x0
    adds r0, #0x68
    strh r4, [r0, #0x00]
    adds r2, r6, #0x0
    adds r2, #0x58
    ldrh r0, [r2, #0x00]
    movs r1, #0x10
    orrs r0, r1
    strh r0, [r2, #0x00]
    add sp, #0x010
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0803E910: .4byte 0x00000814
_0803E914: .4byte 0x08102414
_0803E918: .4byte 0x08102498
_0803E91C: .4byte 0x0000FFFE
_0803E920: .4byte 0x0000FFFD
_0803E924: .4byte 0x03002E20
_0803E928: .4byte 0x0000FFFF
    thumb_func_start sub_803E92C
sub_803E92C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x040
    adds r6, r0, #0x0
    adds r7, r1, #0x0
    ldr r2, _0803E960 @ =0x03002E20
    movs r0, #0x24
    adds r0, r0, r2
    mov r9, r0
    movs r3, #0x00
    ldr r1, _0803E964 @ =0x00000CAC
    adds r0, r2, r1
    ldr r1, [r0, #0x00]
    cmp r1, #0x00
    bge _0803E968
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    bne _0803E9B0
    movs r0, #0xFF
    lsls r0, r0, #0x08
    ands r1, r0
    b _0803E9AC
_0803E960: .4byte 0x03002E20
_0803E964: .4byte 0x00000CAC
_0803E968:
    ldr r1, _0803E988 @ =0x000007FE
    adds r0, r2, r1
    ldrh r2, [r0, #0x00]
    movs r1, #0xF0
    lsls r1, r1, #0x04
    ands r1, r2
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    beq _0803E98C
    movs r0, #0x80
    lsls r0, r0, #0x03
    cmp r1, r0
    beq _0803E9A0
    b _0803E9B2
    .byte 0x00, 0x00
_0803E988: .4byte 0x000007FE
_0803E98C:
    movs r0, #0x10
    ands r0, r2
    cmp r0, #0x00
    beq _0803E9B0
    movs r1, #0x00
    ldr r0, _0803E99C @ =0x03002C60
    ldrh r0, [r0, #0x12]
    b _0803E9A6
_0803E99C: .4byte 0x03002C60
_0803E9A0:
    movs r1, #0x00
    ldr r0, _0803EA3C @ =0x03002C60
    ldrh r0, [r0, #0x0C]
_0803E9A6:
    cmp r0, #0x00
    bne _0803E9AC
    movs r1, #0x01
_0803E9AC:
    cmp r1, #0x00
    beq _0803E9B2
_0803E9B0:
    movs r3, #0x01
_0803E9B2:
    mov r8, r3
    adds r2, r6, #0x0
    adds r2, #0x4C
    ldrb r1, [r2, #0x00]
    movs r5, #0x08
    adds r0, r5, #0x0
    ands r0, r1
    str r2, [sp, #0x020]
    cmp r0, #0x00
    beq _0803EA48
    adds r0, r6, #0x0
    mov r1, r9
    bl sub_803E7F0
    adds r0, r7, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    adds r0, r5, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _0803E9E4
    adds r0, r7, #0x0
    mov r1, r9
    bl sub_803E7F0
_0803E9E4:
    adds r0, r7, #0x0
    adds r0, #0x58
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    cmp r4, #0x00
    beq _0803E9FC
    bl sub_803F42C
_0803E9FC:
    ldr r0, _0803EA40 @ =0x00000814
    add r0, r9
    ldr r0, [r0, #0x00]
    cmp r7, r0
    bne _0803EA0C
    adds r0, r7, #0x0
    bl sub_805BFE8
_0803EA0C:
    adds r1, r7, #0x0
    adds r1, #0x5A
    ldr r0, _0803EA44 @ =0x00008007
    strh r0, [r1, #0x00]
    ldr r0, [r7, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x05
    orrs r0, r1
    str r0, [r7, #0x48]
    strh r5, [r7, #0x38]
    adds r0, r7, #0x0
    mov r1, r9
    bl sub_803E490
    ldr r1, [r6, #0x00]
    ldr r2, [r6, #0x04]
    str r4, [sp, #0x000]
    adds r0, r7, #0x0
    movs r3, #0x80
    lsls r3, r3, #0x02
    bl sub_803E5A4
    b _0803EFBE
    .byte 0x00, 0x00
_0803EA3C: .4byte 0x03002C60
_0803EA40: .4byte 0x00000814
_0803EA44: .4byte 0x00008007
_0803EA48:
    adds r0, r7, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    adds r0, r5, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _0803EABC
    adds r0, r7, #0x0
    mov r1, r9
    bl sub_803E7F0
    adds r0, r6, #0x0
    adds r0, #0x58
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    cmp r4, #0x00
    beq _0803EA76
    bl sub_803F42C
_0803EA76:
    ldr r0, _0803EAB4 @ =0x00000814
    add r0, r9
    ldr r0, [r0, #0x00]
    cmp r6, r0
    bne _0803EA86
    adds r0, r6, #0x0
    bl sub_805BFE8
_0803EA86:
    adds r1, r6, #0x0
    adds r1, #0x5A
    ldr r0, _0803EAB8 @ =0x00008007
    strh r0, [r1, #0x00]
    ldr r0, [r6, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x05
    orrs r0, r1
    str r0, [r6, #0x48]
    strh r5, [r6, #0x38]
    adds r0, r6, #0x0
    mov r1, r9
    bl sub_803E490
    ldr r1, [r7, #0x00]
    ldr r2, [r7, #0x04]
    str r4, [sp, #0x000]
    adds r0, r6, #0x0
    movs r3, #0x80
    lsls r3, r3, #0x02
    bl sub_803E5A4
    b _0803F014
_0803EAB4: .4byte 0x00000814
_0803EAB8: .4byte 0x00008007
_0803EABC:
    adds r2, r6, #0x0
    adds r2, #0x58
    ldrh r1, [r2, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x08
    adds r0, r3, #0x0
    ands r0, r1
    mov r10, r2
    cmp r0, #0x00
    beq _0803EAF8
    adds r2, r7, #0x0
    adds r2, #0x58
    ldrh r1, [r2, #0x00]
    adds r0, r3, #0x0
    ands r0, r1
    cmp r0, #0x00
    bne _0803EB20
    adds r1, r7, #0x0
    adds r1, #0x5A
    ldr r0, _0803EAF4 @ =0x00008007
    strh r0, [r1, #0x00]
    ldr r0, [r7, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x05
    orrs r0, r1
    str r0, [r7, #0x48]
    strh r5, [r7, #0x38]
    b _0803EF9E
_0803EAF4: .4byte 0x00008007
_0803EAF8:
    adds r2, r7, #0x0
    adds r2, #0x58
    ldrh r1, [r2, #0x00]
    adds r0, r3, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _0803EB20
    adds r1, r6, #0x0
    adds r1, #0x5A
    ldr r0, _0803EB1C @ =0x00008007
    strh r0, [r1, #0x00]
    ldr r0, [r6, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x05
    orrs r0, r1
    str r0, [r6, #0x48]
    strh r5, [r6, #0x38]
    b _0803EFF4
_0803EB1C: .4byte 0x00008007
_0803EB20:
    mov r0, r10
    ldrh r3, [r0, #0x00]
    movs r5, #0x80
    lsls r5, r5, #0x08
    adds r0, r5, #0x0
    ands r0, r3
    cmp r0, #0x00
    beq _0803EB3C
    ldrh r1, [r2, #0x00]
    adds r0, r5, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _0803EB3C
    b _0803F0E8
_0803EB3C:
    movs r4, #0x40
    adds r0, r4, #0x0
    ands r0, r3
    cmp r0, #0x00
    beq _0803EB48
    b _0803ECE4
_0803EB48:
    ldrh r1, [r2, #0x00]
    adds r0, r4, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _0803EB54
    b _0803ECFC
_0803EB54:
    adds r1, r6, #0x0
    adds r1, #0x5A
    ldr r0, _0803EBBC @ =0x00008007
    strh r0, [r1, #0x00]
    ldr r0, [r6, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x05
    orrs r0, r1
    str r0, [r6, #0x48]
    movs r0, #0x08
    strh r0, [r6, #0x38]
    adds r0, r6, #0x0
    mov r1, r9
    bl sub_803E490
    ldr r1, [r7, #0x00]
    ldr r2, [r7, #0x04]
    adds r0, r7, #0x0
    adds r0, #0x7A
    movs r3, #0x00
    ldsh r0, [r0, r3]
    str r0, [sp, #0x000]
    adds r0, r6, #0x0
    movs r3, #0x80
    lsls r3, r3, #0x02
    bl sub_803E68C
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    str r0, [sp, #0x014]
    ldr r0, _0803EBC0 @ =0x00000814
    add r0, r9
    ldr r2, [r0, #0x00]
    ldr r0, [r2, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0803EC2E
    cmp r2, r6
    beq _0803EBC4
    mov r0, r9
    adds r1, r6, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #0x3F
    bgt _0803EBB6
    movs r2, #0x40
_0803EBB6:
    movs r0, #0x01
    b _0803EBCA
    .byte 0x00, 0x00
_0803EBBC: .4byte 0x00008007
_0803EBC0: .4byte 0x00000814
_0803EBC4:
    movs r2, #0x80
    lsls r2, r2, #0x01
    movs r0, #0x00
_0803EBCA:
    ldr r5, _0803EBEC @ =0x080ECBC8
    lsls r4, r0, #0x02
    ldr r0, [sp, #0x020]
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    lsls r3, r0, #0x03
    mov r0, r10
    ldrh r1, [r0, #0x00]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    bne _0803EBF0
    adds r0, r3, #0x2
    adds r0, r4, r0
    b _0803EBF2
    .byte 0x00, 0x00
_0803EBEC: .4byte 0x080ECBC8
_0803EBF0:
    adds r0, r4, r3
_0803EBF2:
    adds r0, r5, r0
    ldrh r4, [r0, #0x00]
    mov r8, r2
    cmp r2, #0x00
    beq _0803EC2E
    adds r0, r4, #0x0
    bl m4aSongNumStart
    ldr r5, _0803ECC8 @ =0x08102414
    ldr r0, _0803ECCC @ =0x08102498
    lsls r4, r4, #0x03
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    mov r2, r8
    bl m4aMPlayVolumeControl
_0803EC2E:
    adds r1, r7, #0x0
    adds r1, #0x5A
    ldr r0, _0803ECD0 @ =0x00008007
    strh r0, [r1, #0x00]
    ldr r0, [r7, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x05
    orrs r0, r1
    str r0, [r7, #0x48]
    movs r0, #0x08
    strh r0, [r7, #0x38]
    adds r0, r7, #0x0
    mov r1, r9
    bl sub_803E490
    ldr r1, [sp, #0x014]
    lsls r0, r1, #0x10
    ldr r4, _0803ECD4 @ =0x080E645C
    movs r2, #0x80
    lsls r2, r2, #0x18
    adds r0, r0, r2
    asrs r2, r0, #0x10
    adds r1, r2, #0x0
    cmp r2, #0x00
    bge _0803EC62
    adds r1, #0x3F
_0803EC62:
    asrs r3, r1, #0x06
    ldr r1, _0803ECD8 @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r3, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    adds r1, r1, r4
    ldr r0, [r1, #0x00]
    movs r1, #0x80
    lsls r1, r1, #0x02
    muls r0, r1
    cmp r0, #0x00
    bge _0803EC80
    ldr r1, _0803ECDC @ =0x00007FFF
    adds r0, r0, r1
_0803EC80:
    asrs r0, r0, #0x0F
    adds r1, r7, #0x0
    adds r1, #0x4E
    strh r0, [r1, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r1, _0803ECD8 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r4
    ldr r0, [r0, #0x00]
    negs r0, r0
    movs r2, #0x80
    lsls r2, r2, #0x02
    adds r1, r2, #0x0
    muls r1, r0
    cmp r1, #0x00
    bge _0803ECAA
    ldr r3, _0803ECDC @ =0x00007FFF
    adds r1, r1, r3
_0803ECAA:
    asrs r1, r1, #0x0F
    adds r0, r7, #0x0
    adds r0, #0x50
    strh r1, [r0, #0x00]
    ldr r4, _0803ECE0 @ =0x080EC934
    movs r0, #0x00
    adds r1, r4, #0x0
    movs r2, #0x00
    bl sub_8030224
    str r6, [r0, #0x54]
    movs r0, #0x00
    adds r1, r4, #0x0
    b _0803EFC2
    .byte 0x00, 0x00
_0803ECC8: .4byte 0x08102414
_0803ECCC: .4byte 0x08102498
_0803ECD0: .4byte 0x00008007
_0803ECD4: .4byte 0x080E645C
_0803ECD8: .4byte 0x000003FF
_0803ECDC: .4byte 0x00007FFF
_0803ECE0: .4byte 0x080EC934
_0803ECE4:
    movs r1, #0xBC
    lsls r1, r1, #0x01
    adds r0, r6, r1
    ldrh r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0803ECF2
    b _0803EEB8
_0803ECF2:
    ldr r0, [r6, #0x48]
    ands r0, r5
    cmp r0, #0x00
    bne _0803ECFC
    b _0803EEB8
_0803ECFC:
    ldrh r1, [r2, #0x00]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0x00
    beq _0803ED22
    movs r3, #0xBC
    lsls r3, r3, #0x01
    adds r0, r7, r3
    ldrh r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0803ED14
    b _0803EEB8
_0803ED14:
    ldr r0, [r7, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _0803ED22
    b _0803EEB8
_0803ED22:
    mov r0, r8
    cmp r0, #0x00
    bne _0803ED2A
    b _0803EEB8
_0803ED2A:
    adds r1, r6, #0x0
    adds r1, #0x5A
    ldr r0, _0803ED90 @ =0x00008007
    strh r0, [r1, #0x00]
    ldr r0, [r6, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x05
    orrs r0, r1
    str r0, [r6, #0x48]
    movs r0, #0x08
    strh r0, [r6, #0x38]
    adds r0, r6, #0x0
    mov r1, r9
    bl sub_803E490
    ldr r1, [r7, #0x00]
    ldr r2, [r7, #0x04]
    adds r0, r7, #0x0
    adds r0, #0x7A
    movs r3, #0x00
    ldsh r0, [r0, r3]
    str r0, [sp, #0x000]
    adds r0, r6, #0x0
    movs r3, #0x80
    lsls r3, r3, #0x02
    bl sub_803E68C
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    str r0, [sp, #0x018]
    ldr r0, _0803ED94 @ =0x00000814
    add r0, r9
    ldr r2, [r0, #0x00]
    ldr r0, [r2, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0803EE02
    cmp r2, r6
    beq _0803ED98
    mov r0, r9
    adds r1, r6, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #0x3F
    bgt _0803ED8C
    movs r2, #0x40
_0803ED8C:
    movs r0, #0x01
    b _0803ED9E
_0803ED90: .4byte 0x00008007
_0803ED94: .4byte 0x00000814
_0803ED98:
    movs r2, #0x80
    lsls r2, r2, #0x01
    movs r0, #0x00
_0803ED9E:
    ldr r5, _0803EDC0 @ =0x080ECBC8
    lsls r4, r0, #0x02
    ldr r0, [sp, #0x020]
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    lsls r3, r0, #0x03
    mov r0, r10
    ldrh r1, [r0, #0x00]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    bne _0803EDC4
    adds r0, r3, #0x2
    adds r0, r4, r0
    b _0803EDC6
    .byte 0x00, 0x00
_0803EDC0: .4byte 0x080ECBC8
_0803EDC4:
    adds r0, r4, r3
_0803EDC6:
    adds r0, r5, r0
    ldrh r4, [r0, #0x00]
    mov r8, r2
    cmp r2, #0x00
    beq _0803EE02
    adds r0, r4, #0x0
    bl m4aSongNumStart
    ldr r5, _0803EE9C @ =0x08102414
    ldr r0, _0803EEA0 @ =0x08102498
    lsls r4, r4, #0x03
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    mov r2, r8
    bl m4aMPlayVolumeControl
_0803EE02:
    adds r1, r7, #0x0
    adds r1, #0x5A
    ldr r0, _0803EEA4 @ =0x00008007
    strh r0, [r1, #0x00]
    ldr r0, [r7, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x05
    orrs r0, r1
    str r0, [r7, #0x48]
    movs r0, #0x08
    strh r0, [r7, #0x38]
    adds r0, r7, #0x0
    mov r1, r9
    bl sub_803E490
    ldr r1, [sp, #0x018]
    lsls r0, r1, #0x10
    ldr r4, _0803EEA8 @ =0x080E645C
    movs r2, #0x80
    lsls r2, r2, #0x18
    adds r0, r0, r2
    asrs r2, r0, #0x10
    adds r1, r2, #0x0
    cmp r2, #0x00
    bge _0803EE36
    adds r1, #0x3F
_0803EE36:
    asrs r3, r1, #0x06
    ldr r1, _0803EEAC @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r3, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    adds r1, r1, r4
    ldr r0, [r1, #0x00]
    movs r1, #0x80
    lsls r1, r1, #0x02
    muls r0, r1
    cmp r0, #0x00
    bge _0803EE54
    ldr r1, _0803EEB0 @ =0x00007FFF
    adds r0, r0, r1
_0803EE54:
    asrs r0, r0, #0x0F
    adds r1, r7, #0x0
    adds r1, #0x4E
    strh r0, [r1, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r1, _0803EEAC @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r4
    ldr r0, [r0, #0x00]
    negs r0, r0
    movs r2, #0x80
    lsls r2, r2, #0x02
    adds r1, r2, #0x0
    muls r1, r0
    cmp r1, #0x00
    bge _0803EE7E
    ldr r3, _0803EEB0 @ =0x00007FFF
    adds r1, r1, r3
_0803EE7E:
    asrs r1, r1, #0x0F
    adds r0, r7, #0x0
    adds r0, #0x50
    strh r1, [r0, #0x00]
    ldr r4, _0803EEB4 @ =0x080EC934
    movs r0, #0x00
    adds r1, r4, #0x0
    movs r2, #0x00
    bl sub_8030224
    str r6, [r0, #0x54]
    movs r0, #0x00
    adds r1, r4, #0x0
    b _0803EFC2
    .byte 0x00, 0x00
_0803EE9C: .4byte 0x08102414
_0803EEA0: .4byte 0x08102498
_0803EEA4: .4byte 0x00008007
_0803EEA8: .4byte 0x080E645C
_0803EEAC: .4byte 0x000003FF
_0803EEB0: .4byte 0x00007FFF
_0803EEB4: .4byte 0x080EC934
_0803EEB8:
    mov r0, r10
    ldrh r1, [r0, #0x00]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0x00
    bne _0803EEC6
    b _0803EFDE
_0803EEC6:
    movs r1, #0xBC
    lsls r1, r1, #0x01
    adds r0, r6, r1
    ldrh r0, [r0, #0x00]
    cmp r0, #0x00
    bne _0803EEE6
    ldr r0, [r6, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0803EEE6
    mov r3, r8
    cmp r3, #0x00
    beq _0803EEE6
    b _0803EFDE
_0803EEE6:
    ldrh r1, [r2, #0x00]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0x00
    bne _0803EF20
    adds r1, r7, #0x0
    adds r1, #0x5A
    ldr r0, _0803EF1C @ =0x00008007
    strh r0, [r1, #0x00]
    ldr r0, [r7, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x05
    orrs r0, r1
    str r0, [r7, #0x48]
    movs r0, #0x08
    strh r0, [r7, #0x38]
    adds r0, r7, #0x0
    mov r1, r9
    bl sub_803E490
    ldr r1, [r6, #0x00]
    ldr r2, [r6, #0x04]
    adds r0, r6, #0x0
    adds r0, #0x7A
    movs r6, #0x00
    ldsh r0, [r0, r6]
    b _0803EFB2
_0803EF1C: .4byte 0x00008007
_0803EF20:
    movs r1, #0xBC
    lsls r1, r1, #0x01
    adds r0, r7, r1
    ldrh r0, [r0, #0x00]
    cmp r0, #0x00
    bne _0803EF70
    ldr r0, [r7, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0803EF70
    mov r3, r8
    cmp r3, #0x00
    beq _0803EF70
    adds r1, r7, #0x0
    adds r1, #0x5A
    ldr r0, _0803EF6C @ =0x00008007
    strh r0, [r1, #0x00]
    ldr r0, [r7, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x05
    orrs r0, r1
    str r0, [r7, #0x48]
    movs r0, #0x08
    strh r0, [r7, #0x38]
    adds r0, r7, #0x0
    mov r1, r9
    bl sub_803E490
    ldr r1, [r6, #0x00]
    ldr r2, [r6, #0x04]
    adds r0, r6, #0x0
    adds r0, #0x7A
    movs r6, #0x00
    ldsh r0, [r0, r6]
    b _0803EFB2
    .byte 0x00, 0x00
_0803EF6C: .4byte 0x00008007
_0803EF70:
    mov r0, r10
    ldrh r1, [r0, #0x00]
    movs r3, #0x10
    adds r0, r3, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _0803EFD4
    ldrh r1, [r2, #0x00]
    adds r0, r3, #0x0
    ands r0, r1
    cmp r0, #0x00
    bne _0803F02C
    adds r1, r7, #0x0
    adds r1, #0x5A
    ldr r0, _0803EFCC @ =0x00008007
    strh r0, [r1, #0x00]
    ldr r0, [r7, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x05
    orrs r0, r1
    str r0, [r7, #0x48]
    movs r0, #0x08
    strh r0, [r7, #0x38]
_0803EF9E:
    adds r0, r7, #0x0
    mov r1, r9
    bl sub_803E490
    ldr r1, [r6, #0x00]
    ldr r2, [r6, #0x04]
    adds r0, r6, #0x0
    adds r0, #0x7A
    movs r3, #0x00
    ldsh r0, [r0, r3]
_0803EFB2:
    str r0, [sp, #0x000]
    adds r0, r7, #0x0
    movs r3, #0x80
    lsls r3, r3, #0x02
    bl sub_803E68C
_0803EFBE:
    ldr r1, _0803EFD0 @ =0x080EC934
    movs r0, #0x00
_0803EFC2:
    movs r2, #0x00
    bl sub_8030224
    str r7, [r0, #0x54]
    b sub_803F42C
_0803EFCC: .4byte 0x00008007
_0803EFD0: .4byte 0x080EC934
_0803EFD4:
    ldrh r1, [r2, #0x00]
    adds r0, r3, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _0803F02C
_0803EFDE:
    adds r1, r6, #0x0
    adds r1, #0x5A
    ldr r0, _0803F024 @ =0x00008007
    strh r0, [r1, #0x00]
    ldr r0, [r6, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x05
    orrs r0, r1
    str r0, [r6, #0x48]
    movs r0, #0x08
    strh r0, [r6, #0x38]
_0803EFF4:
    adds r0, r6, #0x0
    mov r1, r9
    bl sub_803E490
    ldr r1, [r7, #0x00]
    ldr r2, [r7, #0x04]
    adds r0, r7, #0x0
    adds r0, #0x7A
    movs r3, #0x00
    ldsh r0, [r0, r3]
    str r0, [sp, #0x000]
    adds r0, r6, #0x0
    movs r3, #0x80
    lsls r3, r3, #0x02
    bl sub_803E68C
_0803F014:
    ldr r1, _0803F028 @ =0x080EC934
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
    str r6, [r0, #0x54]
    b sub_803F42C
    .byte 0x00, 0x00
_0803F024: .4byte 0x00008007
_0803F028: .4byte 0x080EC934
_0803F02C:
    mov r0, r10
    ldrh r1, [r0, #0x00]
    movs r3, #0x20
    adds r0, r3, #0x0
    ands r0, r1
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    mov r9, r0
    cmp r0, #0x00
    beq _0803F094
    ldrh r1, [r2, #0x00]
    adds r0, r3, #0x0
    ands r0, r1
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    mov r8, r0
    cmp r0, #0x00
    bne _0803F0E8
    movs r1, #0x5A
    adds r1, r1, r7
    mov r9, r1
    ldr r2, _0803F090 @ =0x00008007
    mov r10, r2
    mov r3, r10
    strh r3, [r1, #0x00]
    ldr r0, [r7, #0x48]
    movs r5, #0x80
    lsls r5, r5, #0x05
    orrs r0, r5
    str r0, [r7, #0x48]
    movs r4, #0x08
    strh r4, [r7, #0x38]
    ldr r1, [r6, #0x00]
    ldr r2, [r6, #0x04]
    movs r3, #0x80
    lsls r3, r3, #0x02
    mov r6, r8
    str r6, [sp, #0x000]
    adds r0, r7, #0x0
    bl sub_803E5A4
    mov r1, r10
    mov r0, r9
    strh r1, [r0, #0x00]
    ldr r0, [r7, #0x48]
    orrs r0, r5
    str r0, [r7, #0x48]
    strh r4, [r7, #0x38]
    adds r0, r7, #0x0
    b _0803F0DC
_0803F090: .4byte 0x00008007
_0803F094:
    ldrh r1, [r2, #0x00]
    adds r0, r3, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _0803F0E8
    movs r2, #0x5A
    adds r2, r2, r6
    mov r8, r2
    ldr r3, _0803F0E4 @ =0x00008007
    mov r10, r3
    mov r0, r10
    strh r0, [r2, #0x00]
    ldr r0, [r6, #0x48]
    movs r5, #0x80
    lsls r5, r5, #0x05
    orrs r0, r5
    str r0, [r6, #0x48]
    movs r4, #0x08
    strh r4, [r6, #0x38]
    ldr r1, [r7, #0x00]
    ldr r2, [r7, #0x04]
    movs r3, #0x80
    lsls r3, r3, #0x02
    mov r0, r9
    str r0, [sp, #0x000]
    adds r0, r6, #0x0
    bl sub_803E5A4
    mov r2, r10
    mov r1, r8
    strh r2, [r1, #0x00]
    ldr r0, [r6, #0x48]
    orrs r0, r5
    str r0, [r6, #0x48]
    strh r4, [r6, #0x38]
    adds r0, r6, #0x0
_0803F0DC:
    movs r1, #0x03
    bl sub_803D4E4
    b sub_803F42C
_0803F0E4: .4byte 0x00008007
_0803F0E8:
    adds r0, r6, #0x0
    bl sub_803E424
    str r0, [sp, #0x010]
    adds r0, r7, #0x0
    bl sub_803E424
    mov r10, r0
    ldr r3, [sp, #0x010]
    cmp r3, r10
    bge _0803F10C
    adds r0, r6, #0x0
    adds r1, r3, #0x0
    adds r6, r7, #0x0
    adds r7, r0, #0x0
    mov r0, r10
    str r0, [sp, #0x010]
    mov r10, r1
_0803F10C:
    adds r0, r6, #0x0
    adds r0, #0x5A
    ldr r3, _0803F1A8 @ =0x00008007
    strh r3, [r0, #0x00]
    ldr r0, [r6, #0x48]
    movs r2, #0x80
    lsls r2, r2, #0x05
    orrs r0, r2
    str r0, [r6, #0x48]
    movs r1, #0x08
    strh r1, [r6, #0x38]
    adds r0, r7, #0x0
    adds r0, #0x5A
    strh r3, [r0, #0x00]
    ldr r0, [r7, #0x48]
    orrs r0, r2
    str r0, [r7, #0x48]
    strh r1, [r7, #0x38]
    adds r0, r6, #0x0
    movs r1, #0x03
    bl sub_803D4E4
    adds r0, r7, #0x0
    movs r1, #0x03
    bl sub_803D4E4
    adds r0, r6, #0x0
    adds r0, #0xEE
    movs r1, #0x00
    ldsh r0, [r0, r1]
    adds r1, r7, #0x0
    adds r1, #0xEE
    movs r2, #0x00
    ldsh r1, [r1, r2]
    subs r0, r0, r1
    adds r1, r6, #0x0
    adds r1, #0xF0
    movs r3, #0x00
    ldsh r1, [r1, r3]
    adds r2, r7, #0x0
    adds r2, #0xF0
    movs r3, #0x00
    ldsh r2, [r2, r3]
    subs r1, r1, r2
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    bl sub_802EC38
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    adds r0, r6, #0x0
    adds r0, #0x7A
    ldrh r4, [r0, #0x00]
    ldr r0, _0803F1AC @ =0xFFFF8000
    adds r3, r4, r0
    subs r0, r3, r2
    lsls r0, r0, #0x10
    asrs r1, r0, #0x10
    cmp r1, #0x00
    blt _0803F1B4
    movs r5, #0x80
    lsls r5, r5, #0x06
    cmp r1, r5
    bgt _0803F19A
    movs r1, #0xC0
    lsls r1, r1, #0x07
    adds r0, r4, r1
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
_0803F19A:
    subs r0, r3, r2
    lsls r0, r0, #0x10
    ldr r1, _0803F1B0 @ =0x5FFF0000
    cmp r0, r1
    ble _0803F1DA
    adds r0, r4, r5
    b _0803F1D6
_0803F1A8: .4byte 0x00008007
_0803F1AC: .4byte 0xFFFF8000
_0803F1B0: .4byte 0x5FFF0000
_0803F1B4:
    ldr r0, _0803F314 @ =0xFFFFE000
    cmp r1, r0
    blt _0803F1C4
    movs r2, #0xA0
    lsls r2, r2, #0x08
    adds r0, r4, r2
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
_0803F1C4:
    subs r0, r3, r2
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    ldr r1, _0803F318 @ =0xFFFFA000
    cmp r0, r1
    bgt _0803F1DA
    movs r3, #0xE0
    lsls r3, r3, #0x08
    adds r0, r4, r3
_0803F1D6:
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
_0803F1DA:
    lsls r0, r2, #0x10
    asrs r4, r0, #0x10
    adds r1, r4, #0x0
    str r0, [sp, #0x01C]
    cmp r4, #0x00
    bge _0803F1E8
    adds r1, #0x3F
_0803F1E8:
    asrs r5, r1, #0x06
    ldr r0, _0803F31C @ =0x000003FF
    adds r1, r0, #0x0
    adds r0, r5, #0x0
    ands r0, r1
    lsls r0, r0, #0x02
    ldr r1, _0803F320 @ =0x080E645C
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x01
    subs r0, r2, r5
    ldr r3, _0803F31C @ =0x000003FF
    ands r0, r3
    lsls r0, r0, #0x02
    ldr r2, _0803F320 @ =0x080E645C
    adds r0, r0, r2
    ldr r0, [r0, #0x00]
    mov r8, r0
    adds r3, r6, #0x0
    adds r3, #0x4E
    movs r2, #0x00
    ldsh r0, [r3, r2]
    mov r12, r0
    mov r0, r12
    muls r0, r1
    str r0, [sp, #0x034]
    adds r1, r6, #0x0
    adds r1, #0x50
    movs r0, #0x00
    ldsh r2, [r1, r0]
    mov r9, r2
    mov r2, r8
    mov r0, r9
    muls r0, r2
    ldr r2, [sp, #0x034]
    subs r0, r2, r0
    str r3, [sp, #0x024]
    str r1, [sp, #0x02C]
    cmp r0, #0x00
    bge _0803F23E
    ldr r3, _0803F324 @ =0x00007FFF
    adds r0, r0, r3
_0803F23E:
    asrs r0, r0, #0x0F
    str r0, [sp, #0x004]
    adds r0, r5, #0x0
    ldr r1, _0803F31C @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    ldr r2, _0803F320 @ =0x080E645C
    adds r0, r0, r2
    ldr r5, [r0, #0x00]
    mov r3, r8
    mov r1, r12
    muls r1, r3
    mov r0, r9
    muls r0, r5
    adds r0, r1, r0
    cmp r0, #0x00
    bge _0803F264
    ldr r1, _0803F324 @ =0x00007FFF
    adds r0, r0, r1
_0803F264:
    asrs r0, r0, #0x0F
    str r0, [sp, #0x008]
    adds r2, r7, #0x0
    adds r2, #0x4E
    str r2, [sp, #0x03C]
    movs r0, #0x00
    ldsh r3, [r2, r0]
    mov r9, r3
    mov r1, r9
    muls r1, r5
    str r1, [sp, #0x034]
    adds r1, r7, #0x0
    adds r1, #0x50
    movs r3, #0x00
    ldsh r2, [r1, r3]
    mov r12, r2
    mov r2, r8
    mov r0, r12
    muls r0, r2
    ldr r3, [sp, #0x034]
    subs r2, r3, r0
    ldr r0, [sp, #0x03C]
    str r0, [sp, #0x028]
    str r1, [sp, #0x030]
    cmp r2, #0x00
    bge _0803F29C
    ldr r1, _0803F324 @ =0x00007FFF
    adds r2, r2, r1
_0803F29C:
    asrs r2, r2, #0x0F
    str r2, [sp, #0x00C]
    mov r2, r8
    mov r1, r9
    muls r1, r2
    mov r0, r12
    muls r0, r5
    adds r0, r1, r0
    cmp r0, #0x00
    bge _0803F2B4
    ldr r3, _0803F324 @ =0x00007FFF
    adds r0, r0, r3
_0803F2B4:
    asrs r0, r0, #0x0F
    mov r9, r0
    ldr r1, [sp, #0x010]
    mov r2, r10
    subs r0, r1, r2
    ldr r3, [sp, #0x004]
    muls r0, r3
    ldr r2, [sp, #0x00C]
    lsls r1, r2, #0x01
    mov r3, r10
    muls r3, r1
    adds r1, r3, #0x0
    adds r0, r0, r1
    ldr r4, [sp, #0x010]
    add r4, r10
    adds r1, r4, #0x0
    bl __divsi3
    adds r5, r0, #0x0
    ldr r1, [sp, #0x004]
    lsls r0, r1, #0x01
    ldr r2, [sp, #0x010]
    muls r0, r2
    mov r3, r10
    subs r1, r3, r2
    ldr r2, [sp, #0x00C]
    muls r1, r2
    adds r0, r0, r1
    adds r1, r4, #0x0
    bl __divsi3
    adds r4, r0, #0x0
    adds r0, r6, #0x0
    adds r0, #0x58
    adds r1, r7, #0x0
    adds r1, #0x58
    ldrh r0, [r0, #0x00]
    ldrh r1, [r1, #0x00]
    cmp r0, r1
    beq _0803F32C
    subs r1, r5, r4
    movs r0, #0x80
    lsls r0, r0, #0x02
    cmp r1, r0
    bgt _0803F352
    ldr r3, _0803F328 @ =0xFFFFFE00
    adds r4, r5, r3
    b _0803F352
_0803F314: .4byte 0xFFFFE000
_0803F318: .4byte 0xFFFFA000
_0803F31C: .4byte 0x000003FF
_0803F320: .4byte 0x080E645C
_0803F324: .4byte 0x00007FFF
_0803F328: .4byte 0xFFFFFE00
_0803F32C:
    subs r1, r5, r4
    movs r0, #0x80
    lsls r0, r0, #0x02
    cmp r1, r0
    bgt _0803F352
    lsrs r0, r1, #0x1F
    adds r0, r1, r0
    asrs r0, r0, #0x01
    adds r0, r4, r0
    movs r6, #0x80
    lsls r6, r6, #0x01
    adds r5, r0, r6
    subs r0, r5, r4
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r0, r0, #0x01
    adds r0, r4, r0
    ldr r1, _0803F43C @ =0xFFFFFF00
    adds r4, r0, r1
_0803F352:
    ldr r7, _0803F440 @ =0x080E645C
    ldr r2, [sp, #0x01C]
    asrs r3, r2, #0x10
    adds r0, r3, #0x0
    cmp r3, #0x00
    bge _0803F360
    adds r0, #0x3F
_0803F360:
    asrs r2, r0, #0x06
    ldr r6, _0803F444 @ =0x000003FF
    adds r1, r6, #0x0
    adds r0, r2, #0x0
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r7
    ldr r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r2
    ldr r6, _0803F444 @ =0x000003FF
    mov r10, r6
    ands r0, r6
    lsls r0, r0, #0x02
    adds r0, r0, r7
    ldr r7, [r0, #0x00]
    muls r1, r5
    ldr r6, [sp, #0x008]
    adds r0, r6, #0x0
    muls r0, r7
    adds r0, r1, r0
    cmp r0, #0x00
    bge _0803F394
    ldr r1, _0803F448 @ =0x00007FFF
    adds r0, r0, r1
_0803F394:
    asrs r0, r0, #0x0F
    mov r8, r0
    adds r0, r2, #0x0
    mov r2, r10
    ands r0, r2
    lsls r0, r0, #0x02
    ldr r6, _0803F440 @ =0x080E645C
    adds r0, r0, r6
    ldr r2, [r0, #0x00]
    ldr r0, [sp, #0x008]
    adds r1, r0, #0x0
    muls r1, r2
    adds r0, r5, #0x0
    muls r0, r7
    subs r0, r1, r0
    cmp r0, #0x00
    bge _0803F3BA
    ldr r1, _0803F448 @ =0x00007FFF
    adds r0, r0, r1
_0803F3BA:
    asrs r6, r0, #0x0F
    adds r1, r4, #0x0
    muls r1, r2
    mov r0, r9
    muls r0, r7
    adds r1, r1, r0
    cmp r1, #0x00
    bge _0803F3CE
    ldr r0, _0803F448 @ =0x00007FFF
    adds r1, r1, r0
_0803F3CE:
    asrs r5, r1, #0x0F
    mov r1, r9
    muls r1, r2
    adds r0, r4, #0x0
    muls r0, r7
    subs r0, r1, r0
    cmp r0, #0x00
    bge _0803F3E2
    ldr r1, _0803F448 @ =0x00007FFF
    adds r0, r0, r1
_0803F3E2:
    asrs r0, r0, #0x0F
    movs r4, #0x80
    lsls r4, r4, #0x03
    cmp r8, r4
    ble _0803F3EE
    mov r8, r4
_0803F3EE:
    ldr r3, _0803F44C @ =0xFFFFFC00
    cmp r8, r3
    bge _0803F3F6
    mov r8, r3
_0803F3F6:
    cmp r6, r4
    ble _0803F3FC
    adds r6, r4, #0x0
_0803F3FC:
    cmp r6, r3
    bge _0803F402
    adds r6, r3, #0x0
_0803F402:
    cmp r5, r4
    ble _0803F408
    adds r5, r4, #0x0
_0803F408:
    cmp r5, r3
    bge _0803F40E
    adds r5, r3, #0x0
_0803F40E:
    cmp r0, r4
    ble _0803F414
    adds r0, r4, #0x0
_0803F414:
    cmp r0, r3
    bge _0803F41A
    adds r0, r3, #0x0
_0803F41A:
    mov r3, r8
    ldr r2, [sp, #0x024]
    strh r3, [r2, #0x00]
    ldr r1, [sp, #0x02C]
    strh r6, [r1, #0x00]
    ldr r2, [sp, #0x028]
    strh r5, [r2, #0x00]
    ldr r3, [sp, #0x030]
    strh r0, [r3, #0x00]
    thumb_func_start sub_803F42C
sub_803F42C:
    add sp, #0x040
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0803F43C: .4byte 0xFFFFFF00
_0803F440: .4byte 0x080E645C
_0803F444: .4byte 0x000003FF
_0803F448: .4byte 0x00007FFF
_0803F44C: .4byte 0xFFFFFC00
    thumb_func_start sub_803F450
sub_803F450:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x004
    mov r9, r0
    mov r10, r1
    ldrh r0, [r0, #0x38]
    str r0, [sp, #0x000]
    ldrh r0, [r1, #0x38]
    ldr r1, [sp, #0x000]
    orrs r1, r0
    str r1, [sp, #0x000]
    cmp r1, #0x01
    ble _0803F472
    b _0803F622
_0803F472:
    mov r0, r9
    adds r0, #0x60
    mov r1, r10
    adds r1, #0x60
    ldrh r2, [r0, #0x00]
    ldrh r0, [r1, #0x00]
    orrs r0, r2
    cmp r0, #0x00
    beq _0803F486
    b _0803F622
_0803F486:
    mov r0, r9
    adds r0, #0x78
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    bls _0803F492
    b _0803F622
_0803F492:
    mov r0, r10
    adds r0, #0x78
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    bls _0803F49E
    b _0803F622
_0803F49E:
    mov r2, r9
    ldr r0, [r2, #0x08]
    ldr r1, _0803F634 @ =0x0004FFFF
    cmp r0, r1
    ble _0803F4AA
    b _0803F622
_0803F4AA:
    mov r2, r10
    ldr r0, [r2, #0x08]
    cmp r0, r1
    ble _0803F4B4
    b _0803F622
_0803F4B4:
    mov r0, r9
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _0803F4C2
    b _0803F622
_0803F4C2:
    mov r0, r10
    adds r0, #0x66
    movs r2, #0x00
    ldsh r0, [r0, r2]
    cmp r0, #0x00
    beq _0803F4D0
    b _0803F622
_0803F4D0:
    mov r0, r9
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r2, #0x08
    adds r0, r2, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _0803F4E2
    b _0803F618
_0803F4E2:
    mov r0, r10
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    adds r0, r2, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _0803F4F2
    b _0803F618
_0803F4F2:
    ldr r2, _0803F638 @ =0x03002E20
    mov r1, r9
    adds r1, #0xBC
    mov r0, r10
    adds r0, #0xBC
    ldr r7, [r0, #0x00]
    ldr r1, [r1, #0x00]
    cmp r7, r1
    bge _0803F506
    adds r7, r1, #0x0
_0803F506:
    ldr r1, _0803F63C @ =0x00000838
    adds r0, r2, r1
    ldr r0, [r0, #0x00]
    cmp r9, r0
    bne _0803F58E
    mov r2, r9
    ldr r0, [r2, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0803F58E
    adds r0, r7, #0x0
    cmp r7, #0x00
    bge _0803F524
    negs r0, r7
_0803F524:
    lsls r0, r0, #0x06
    lsrs r0, r0, #0x16
    ldr r1, _0803F640 @ =0xFFFFFE00
    adds r0, r0, r1
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    adds r4, r7, #0x0
    cmp r7, #0x00
    bge _0803F538
    negs r4, r7
_0803F538:
    asrs r4, r4, #0x14
    movs r0, #0x3F
    ands r4, r0
    adds r4, #0xC0
    lsls r6, r6, #0x10
    asrs r6, r6, #0x10
    movs r0, #0xA7
    bl m4aSongNumStart
    ldr r2, _0803F644 @ =0x08102414
    mov r8, r2
    ldr r5, _0803F648 @ =0x08102498
    movs r0, #0xA7
    lsls r0, r0, #0x03
    adds r5, r5, r0
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r4, #0x0
    bl m4aMPlayVolumeControl
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayPitchControl
_0803F58E:
    ldr r1, _0803F64C @ =0x03002E44
    ldr r2, _0803F650 @ =0x00000814
    adds r0, r1, r2
    ldr r0, [r0, #0x00]
    cmp r10, r0
    bne _0803F618
    mov r1, r10
    ldr r0, [r1, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0803F618
    adds r0, r7, #0x0
    cmp r7, #0x00
    bge _0803F5AE
    negs r0, r7
_0803F5AE:
    lsls r0, r0, #0x06
    lsrs r0, r0, #0x16
    ldr r2, _0803F640 @ =0xFFFFFE00
    adds r0, r0, r2
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    adds r0, r7, #0x0
    cmp r0, #0x00
    bge _0803F5C2
    negs r0, r0
_0803F5C2:
    asrs r4, r0, #0x14
    movs r0, #0x3F
    ands r4, r0
    adds r4, #0xC0
    lsls r6, r6, #0x10
    asrs r6, r6, #0x10
    movs r0, #0xA7
    bl m4aSongNumStart
    ldr r0, _0803F644 @ =0x08102414
    mov r8, r0
    ldr r5, _0803F648 @ =0x08102498
    movs r1, #0xA7
    lsls r1, r1, #0x03
    adds r5, r5, r1
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r4, #0x0
    bl m4aMPlayVolumeControl
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayPitchControl
_0803F618:
    mov r0, r9
    mov r1, r10
    ldr r2, [sp, #0x000]
    bl sub_803E92C
_0803F622:
    add sp, #0x004
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0803F634: .4byte 0x0004FFFF
_0803F638: .4byte 0x03002E20
_0803F63C: .4byte 0x00000838
_0803F640: .4byte 0xFFFFFE00
_0803F644: .4byte 0x08102414
_0803F648: .4byte 0x08102498
_0803F64C: .4byte 0x03002E44
_0803F650: .4byte 0x00000814
    thumb_func_start sub_803F654
sub_803F654:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r6, r0, #0x0
    ldr r5, _0803F714 @ =0x03002E20
    adds r4, r5, #0x0
    adds r4, #0x24
    movs r0, #0x03
    strh r0, [r6, #0x38]
    ldr r0, [r6, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x06
    ands r0, r1
    cmp r0, #0x00
    bne _0803F728
    adds r2, r6, #0x0
    adds r2, #0xB4
    ldrh r0, [r2, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x05
    adds r1, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    adds r0, r6, #0x0
    adds r0, #0xBC
    ldr r4, [r0, #0x00]
    ldr r1, _0803F718 @ =0x00000838
    adds r0, r5, r1
    ldr r0, [r0, #0x00]
    cmp r6, r0
    beq _0803F694
    b _0803F7DA
_0803F694:
    ldr r0, [r6, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _0803F6A0
    b _0803F7DA
_0803F6A0:
    adds r0, r4, #0x0
    cmp r4, #0x00
    bge _0803F6A8
    negs r0, r4
_0803F6A8:
    lsls r0, r0, #0x06
    lsrs r0, r0, #0x16
    ldr r3, _0803F71C @ =0xFFFFFE00
    adds r0, r0, r3
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    adds r0, r4, #0x0
    cmp r0, #0x00
    bge _0803F6BC
    negs r0, r0
_0803F6BC:
    asrs r4, r0, #0x14
    movs r0, #0x3F
    ands r4, r0
    adds r4, #0xC0
    lsls r6, r6, #0x10
    asrs r6, r6, #0x10
    movs r0, #0x87
    bl m4aSongNumStart
    ldr r0, _0803F720 @ =0x08102414
    mov r8, r0
    ldr r5, _0803F724 @ =0x08102498
    movs r1, #0x87
    lsls r1, r1, #0x03
    adds r5, r5, r1
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r4, #0x0
    bl m4aMPlayVolumeControl
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayPitchControl
    b _0803F7DA
_0803F714: .4byte 0x03002E20
_0803F718: .4byte 0x00000838
_0803F71C: .4byte 0xFFFFFE00
_0803F720: .4byte 0x08102414
_0803F724: .4byte 0x08102498
_0803F728:
    adds r0, r6, #0x0
    adds r1, r4, #0x0
    bl sub_803E490
    ldr r3, _0803F75C @ =0x00000838
    adds r0, r5, r3
    ldr r2, [r0, #0x00]
    ldr r0, [r2, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0803F7CE
    cmp r2, r6
    beq _0803F760
    adds r0, r4, #0x0
    adds r1, r6, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #0x3F
    bgt _0803F756
    movs r2, #0x40
_0803F756:
    movs r0, #0x01
    b _0803F766
    .byte 0x00, 0x00
_0803F75C: .4byte 0x00000838
_0803F760:
    movs r2, #0x80
    lsls r2, r2, #0x01
    movs r0, #0x00
_0803F766:
    ldr r5, _0803F78C @ =0x080ECBC8
    lsls r4, r0, #0x02
    adds r0, r6, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    lsls r3, r0, #0x03
    adds r0, r6, #0x0
    adds r0, #0x58
    ldrh r1, [r0, #0x00]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    bne _0803F790
    adds r0, r3, #0x2
    adds r0, r4, r0
    b _0803F792
    .byte 0x00, 0x00
_0803F78C: .4byte 0x080ECBC8
_0803F790:
    adds r0, r4, r3
_0803F792:
    adds r0, r5, r0
    ldrh r4, [r0, #0x00]
    adds r7, r2, #0x0
    cmp r7, #0x00
    beq _0803F7CE
    adds r0, r4, #0x0
    bl m4aSongNumStart
    ldr r5, _0803F7E4 @ =0x08102414
    ldr r0, _0803F7E8 @ =0x08102498
    lsls r4, r4, #0x03
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r7, #0x0
    bl m4aMPlayVolumeControl
_0803F7CE:
    adds r0, r6, #0x0
    adds r0, #0x4E
    movs r1, #0x00
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
_0803F7DA:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0803F7E4: .4byte 0x08102414
_0803F7E8: .4byte 0x08102498
    thumb_func_start sub_803F7EC
sub_803F7EC:
    push {r4, r5, r6, r7, lr}
    add sp, #-0x004
    adds r5, r0, #0x0
    adds r6, r1, #0x0
    ldr r0, _0803F818 @ =0x03002E20
    adds r7, r0, #0x0
    adds r7, #0x24
    adds r4, r6, #0x0
    ldrh r1, [r6, #0x10]
    ldr r0, _0803F81C @ =0x00008403
    cmp r1, r0
    bne _0803F840
    adds r2, r5, #0x0
    adds r2, #0x4E
    movs r1, #0x00
    ldsh r0, [r2, r1]
    movs r1, #0x80
    lsls r1, r1, #0x01
    cmp r0, r1
    ble _0803F820
    adds r3, r0, #0x0
    b _0803F822
_0803F818: .4byte 0x03002E20
_0803F81C: .4byte 0x00008403
_0803F820:
    adds r3, r1, #0x0
_0803F822:
    adds r2, r5, #0x0
    adds r2, #0x50
    movs r1, #0x00
    ldsh r0, [r2, r1]
    movs r1, #0x80
    lsls r1, r1, #0x01
    cmp r0, r1
    ble _0803F834
    adds r1, r0, #0x0
_0803F834:
    lsls r0, r3, #0x07
    str r0, [r4, #0x28]
    lsls r0, r1, #0x07
    str r0, [r4, #0x2C]
    movs r0, #0x08
    strh r0, [r4, #0x38]
_0803F840:
    adds r0, r5, #0x0
    adds r1, r7, #0x0
    bl sub_803E490
    ldr r1, [r4, #0x00]
    ldr r2, [r4, #0x04]
    adds r0, r6, #0x0
    adds r0, #0x71
    ldrb r3, [r0, #0x00]
    lsls r3, r3, #0x03
    movs r0, #0x00
    str r0, [sp, #0x000]
    adds r0, r5, #0x0
    bl sub_803E5A4
    ldr r1, _0803F8BC @ =0x00000814
    adds r0, r7, r1
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0803F8B2
    adds r0, r7, #0x0
    adds r1, r5, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    cmp r6, #0x00
    beq _0803F8B2
    movs r0, #0x84
    bl m4aSongNumStart
    ldr r5, _0803F8C0 @ =0x08102414
    ldr r4, _0803F8C4 @ =0x08102498
    movs r0, #0x84
    lsls r0, r0, #0x03
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayVolumeControl
_0803F8B2:
    add sp, #0x004
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0803F8BC: .4byte 0x00000814
_0803F8C0: .4byte 0x08102414
_0803F8C4: .4byte 0x08102498
    thumb_func_start sub_803F8C8
sub_803F8C8:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    adds r5, r1, #0x0
    ldr r6, _0803F97C @ =0x03002E20
    adds r7, r6, #0x0
    adds r7, #0x24
    adds r0, #0x60
    adds r1, #0x50
    ldrh r2, [r0, #0x00]
    ldrh r0, [r1, #0x00]
    orrs r0, r2
    cmp r0, #0x00
    beq _0803F8E4
    b _0803FA24
_0803F8E4:
    adds r0, r4, #0x0
    adds r0, #0x78
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    bls _0803F8F0
    b _0803FA24
_0803F8F0:
    ldr r0, [r4, #0x08]
    ldr r1, _0803F980 @ =0x00041FFF
    cmp r0, r1
    ble _0803F8FA
    b _0803FA24
_0803F8FA:
    ldr r0, [r5, #0x08]
    cmp r0, r1
    ble _0803F902
    b _0803FA24
_0803F902:
    adds r0, r4, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _0803F910
    b _0803FA24
_0803F910:
    ldrh r2, [r5, #0x10]
    ldr r0, _0803F984 @ =0x00008003
    cmp r2, r0
    bne _0803F91A
    b _0803FA24
_0803F91A:
    adds r0, r4, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _0803F994
    ldr r2, _0803F988 @ =0x00000838
    adds r0, r6, r2
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0803FA24
    adds r0, r7, #0x0
    adds r1, r4, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    cmp r6, #0x00
    beq _0803FA24
    movs r0, #0x7C
    bl m4aSongNumStart
    ldr r5, _0803F98C @ =0x08102414
    ldr r4, _0803F990 @ =0x08102498
    movs r0, #0xF8
    lsls r0, r0, #0x02
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayVolumeControl
    b _0803FA24
_0803F97C: .4byte 0x03002E20
_0803F980: .4byte 0x00041FFF
_0803F984: .4byte 0x00008003
_0803F988: .4byte 0x00000838
_0803F98C: .4byte 0x08102414
_0803F990: .4byte 0x08102498
_0803F994:
    adds r3, r4, #0x0
    adds r3, #0x5A
    ldr r0, _0803F9C0 @ =0x00008007
    strh r0, [r3, #0x00]
    ldr r0, [r4, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x05
    orrs r0, r1
    str r0, [r4, #0x48]
    movs r0, #0x08
    strh r0, [r4, #0x38]
    adds r1, r4, #0x0
    adds r1, #0x4C
    ldrb r1, [r1, #0x00]
    ands r0, r1
    cmp r0, #0x00
    beq _0803F9C4
    adds r0, r4, #0x0
    adds r1, r7, #0x0
    bl sub_803E7F0
    b _0803FA24
_0803F9C0: .4byte 0x00008007
_0803F9C4:
    ldr r0, _0803F9DC @ =0x00008001
    cmp r2, r0
    bne _0803F9E0
    ldrh r1, [r3, #0x00]
    subs r0, #0x02
    ands r0, r1
    strh r0, [r3, #0x00]
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl sub_803F654
    b _0803FA24
_0803F9DC: .4byte 0x00008001
_0803F9E0:
    cmp r2, r0
    blt _0803FA24
    ldr r0, _0803FA0C @ =0x00008403
    cmp r2, r0
    bgt _0803FA24
    subs r0, #0x02
    cmp r2, r0
    blt _0803FA24
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl sub_803F7EC
    ldr r1, [r5, #0x54]
    cmp r1, r4
    beq _0803FA18
    ldr r2, _0803FA10 @ =0x00000838
    adds r0, r6, r2
    ldr r0, [r0, #0x00]
    cmp r1, r0
    bne _0803FA18
    ldr r1, _0803FA14 @ =0x080EC8F4
    b _0803FA1A
_0803FA0C: .4byte 0x00008403
_0803FA10: .4byte 0x00000838
_0803FA14: .4byte 0x080EC8F4
_0803FA18:
    ldr r1, _0803FA2C @ =0x080EC91C
_0803FA1A:
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
    str r4, [r0, #0x54]
_0803FA24:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0803FA2C: .4byte 0x080EC91C
    thumb_func_start sub_803FA30
sub_803FA30:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x00C
    adds r6, r0, #0x0
    adds r0, #0xEE
    movs r3, #0x00
    ldsh r2, [r0, r3]
    ldr r0, [r1, #0x00]
    cmp r0, #0x00
    bge _0803FA4E
    ldr r4, _0803FAAC @ =0x0000FFFF
    adds r0, r0, r4
_0803FA4E:
    asrs r0, r0, #0x10
    subs r2, r2, r0
    adds r0, r6, #0x0
    adds r0, #0xF0
    movs r3, #0x00
    ldsh r0, [r0, r3]
    ldr r1, [r1, #0x04]
    cmp r1, #0x00
    bge _0803FA64
    ldr r4, _0803FAAC @ =0x0000FFFF
    adds r1, r1, r4
_0803FA64:
    asrs r1, r1, #0x10
    subs r1, r0, r1
    lsls r0, r2, #0x10
    asrs r0, r0, #0x10
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    bl sub_802EC38
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    adds r0, r6, #0x0
    adds r0, #0x7A
    ldrh r4, [r0, #0x00]
    ldr r0, _0803FAB0 @ =0xFFFF8000
    adds r3, r4, r0
    subs r0, r3, r2
    lsls r0, r0, #0x10
    asrs r1, r0, #0x10
    cmp r1, #0x00
    blt _0803FAB8
    movs r5, #0x80
    lsls r5, r5, #0x04
    cmp r1, r5
    bgt _0803FA9E
    movs r1, #0xF0
    lsls r1, r1, #0x07
    adds r0, r4, r1
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
_0803FA9E:
    subs r0, r3, r2
    lsls r0, r0, #0x10
    ldr r1, _0803FAB4 @ =0x77FF0000
    cmp r0, r1
    ble _0803FADE
    adds r0, r4, r5
    b _0803FADA
_0803FAAC: .4byte 0x0000FFFF
_0803FAB0: .4byte 0xFFFF8000
_0803FAB4: .4byte 0x77FF0000
_0803FAB8:
    ldr r0, _0803FBE4 @ =0xFFFFF800
    cmp r1, r0
    blt _0803FAC8
    movs r2, #0x88
    lsls r2, r2, #0x08
    adds r0, r4, r2
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
_0803FAC8:
    subs r0, r3, r2
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    ldr r1, _0803FBE8 @ =0xFFFF8800
    cmp r0, r1
    bgt _0803FADE
    movs r3, #0xF8
    lsls r3, r3, #0x08
    adds r0, r4, r3
_0803FADA:
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
_0803FADE:
    lsls r0, r2, #0x10
    asrs r4, r0, #0x10
    adds r0, r4, #0x0
    cmp r4, #0x00
    bge _0803FAEA
    adds r0, #0x3F
_0803FAEA:
    asrs r5, r0, #0x06
    ldr r0, _0803FBEC @ =0x000003FF
    adds r1, r0, #0x0
    adds r0, r5, #0x0
    ands r0, r1
    lsls r0, r0, #0x02
    ldr r1, _0803FBF0 @ =0x080E645C
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    str r5, [sp, #0x000]
    movs r2, #0x80
    lsls r2, r2, #0x01
    mov r10, r2
    subs r0, r2, r5
    ldr r3, _0803FBEC @ =0x000003FF
    mov r9, r3
    ands r0, r3
    lsls r0, r0, #0x02
    ldr r2, _0803FBF0 @ =0x080E645C
    adds r0, r0, r2
    ldr r7, [r0, #0x00]
    adds r3, r6, #0x0
    adds r3, #0x4E
    movs r2, #0x00
    ldsh r0, [r3, r2]
    mov r8, r0
    mov r2, r8
    muls r2, r1
    adds r1, r6, #0x0
    adds r1, #0x50
    movs r0, #0x00
    ldsh r6, [r1, r0]
    mov r12, r6
    mov r0, r12
    muls r0, r7
    subs r0, r2, r0
    str r3, [sp, #0x004]
    str r1, [sp, #0x008]
    cmp r0, #0x00
    bge _0803FB3E
    ldr r1, _0803FBF4 @ =0x00007FFF
    adds r0, r0, r1
_0803FB3E:
    asrs r2, r0, #0x0F
    adds r0, r5, #0x0
    mov r3, r9
    ands r0, r3
    lsls r0, r0, #0x02
    ldr r6, _0803FBF0 @ =0x080E645C
    adds r0, r0, r6
    ldr r6, [r0, #0x00]
    mov r1, r8
    muls r1, r7
    mov r0, r12
    muls r0, r6
    adds r0, r1, r0
    cmp r0, #0x00
    bge _0803FB60
    ldr r1, _0803FBF4 @ =0x00007FFF
    adds r0, r0, r1
_0803FB60:
    asrs r5, r0, #0x0F
    lsrs r0, r0, #0x1F
    adds r0, r5, r0
    asrs r5, r0, #0x01
    negs r0, r2
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r2, r0, #0x01
    cmp r2, #0xFF
    bgt _0803FB76
    mov r2, r10
_0803FB76:
    adds r1, r2, #0x0
    muls r1, r6
    adds r0, r5, #0x0
    muls r0, r7
    adds r0, r1, r0
    cmp r0, #0x00
    bge _0803FB88
    ldr r3, _0803FBF4 @ =0x00007FFF
    adds r0, r0, r3
_0803FB88:
    asrs r3, r0, #0x0F
    mov r4, r10
    ldr r1, [sp, #0x000]
    subs r0, r4, r1
    mov r4, r9
    ands r0, r4
    lsls r0, r0, #0x02
    ldr r1, _0803FBF0 @ =0x080E645C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    adds r1, r5, #0x0
    muls r1, r6
    muls r0, r2
    subs r0, r1, r0
    cmp r0, #0x00
    bge _0803FBAC
    ldr r2, _0803FBF4 @ =0x00007FFF
    adds r0, r0, r2
_0803FBAC:
    asrs r0, r0, #0x0F
    movs r2, #0x80
    lsls r2, r2, #0x03
    cmp r3, r2
    ble _0803FBB8
    adds r3, r2, #0x0
_0803FBB8:
    ldr r1, _0803FBF8 @ =0xFFFFFC00
    cmp r3, r1
    bge _0803FBC0
    adds r3, r1, #0x0
_0803FBC0:
    cmp r0, r2
    ble _0803FBC6
    adds r0, r2, #0x0
_0803FBC6:
    cmp r0, r1
    bge _0803FBCC
    adds r0, r1, #0x0
_0803FBCC:
    ldr r4, [sp, #0x004]
    strh r3, [r4, #0x00]
    ldr r6, [sp, #0x008]
    strh r0, [r6, #0x00]
    add sp, #0x00C
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0803FBE4: .4byte 0xFFFFF800
_0803FBE8: .4byte 0xFFFF8800
_0803FBEC: .4byte 0x000003FF
_0803FBF0: .4byte 0x080E645C
_0803FBF4: .4byte 0x00007FFF
_0803FBF8: .4byte 0xFFFFFC00
    thumb_func_start sub_803FBFC
sub_803FBFC:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    adds r2, r1, #0x0
    ldr r1, [r5, #0x00]
    ldr r0, [r2, #0x00]
    subs r0, r1, r0
    cmp r0, #0x00
    bge _0803FC10
    ldr r1, _0803FCA0 @ =0x0000FFFF
    adds r0, r0, r1
_0803FC10:
    asrs r3, r0, #0x10
    ldr r1, [r5, #0x04]
    ldr r0, [r2, #0x04]
    subs r1, r1, r0
    cmp r1, #0x00
    bge _0803FC20
    ldr r0, _0803FCA0 @ =0x0000FFFF
    adds r1, r1, r0
_0803FC20:
    adds r0, r3, #0x0
    asrs r1, r1, #0x10
    bl sub_802EC38
    ldr r6, _0803FCA4 @ =0x080E645C
    lsls r0, r0, #0x10
    asrs r2, r0, #0x10
    adds r1, r2, #0x0
    cmp r2, #0x00
    bge _0803FC36
    adds r1, #0x3F
_0803FC36:
    asrs r4, r1, #0x06
    ldr r1, _0803FCA8 @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r4, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    adds r1, r1, r6
    ldr r0, [r1, #0x00]
    lsls r0, r0, #0x09
    cmp r0, #0x00
    bge _0803FC50
    ldr r1, _0803FCAC @ =0x00007FFF
    adds r0, r0, r1
_0803FC50:
    asrs r3, r0, #0x0F
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r4
    ldr r1, _0803FCA8 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x09
    negs r0, r0
    cmp r0, #0x00
    bge _0803FC6E
    ldr r1, _0803FCAC @ =0x00007FFF
    adds r0, r0, r1
_0803FC6E:
    asrs r1, r0, #0x0F
    movs r0, #0x80
    lsls r0, r0, #0x03
    cmp r3, r0
    ble _0803FC7A
    adds r3, r0, #0x0
_0803FC7A:
    cmp r1, r0
    ble _0803FC80
    adds r1, r0, #0x0
_0803FC80:
    ldr r0, _0803FCB0 @ =0xFFFFFC00
    cmp r3, r0
    bge _0803FC88
    adds r3, r0, #0x0
_0803FC88:
    cmp r1, r0
    bge _0803FC8E
    adds r1, r0, #0x0
_0803FC8E:
    adds r0, r5, #0x0
    adds r0, #0x4E
    strh r3, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0803FCA0: .4byte 0x0000FFFF
_0803FCA4: .4byte 0x080E645C
_0803FCA8: .4byte 0x000003FF
_0803FCAC: .4byte 0x00007FFF
_0803FCB0: .4byte 0xFFFFFC00
    thumb_func_start sub_803FCB4
sub_803FCB4:
    push {r4, r5, r6, r7, lr}
    adds r6, r0, #0x0
    adds r5, r1, #0x0
    ldr r4, _0803FCF8 @ =0x03002E20
    adds r7, r4, #0x0
    adds r7, #0x24
    adds r1, r7, #0x0
    bl sub_803E490
    adds r0, r6, #0x0
    adds r1, r5, #0x0
    bl sub_803FA30
    ldr r0, _0803FCFC @ =0x00000838
    adds r4, r4, r0
    ldr r4, [r4, #0x00]
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0803FD6E
    cmp r4, r6
    beq _0803FD00
    adds r0, r7, #0x0
    adds r1, r6, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #0x3F
    bgt _0803FCF4
    movs r2, #0x40
_0803FCF4:
    movs r0, #0x01
    b _0803FD06
_0803FCF8: .4byte 0x03002E20
_0803FCFC: .4byte 0x00000838
_0803FD00:
    movs r2, #0x80
    lsls r2, r2, #0x01
    movs r0, #0x00
_0803FD06:
    ldr r5, _0803FD2C @ =0x080ECBC8
    lsls r4, r0, #0x02
    adds r0, r6, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    lsls r3, r0, #0x03
    adds r0, r6, #0x0
    adds r0, #0x58
    ldrh r1, [r0, #0x00]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    bne _0803FD30
    adds r0, r3, #0x2
    adds r0, r4, r0
    b _0803FD32
    .byte 0x00, 0x00
_0803FD2C: .4byte 0x080ECBC8
_0803FD30:
    adds r0, r4, r3
_0803FD32:
    adds r0, r5, r0
    ldrh r4, [r0, #0x00]
    adds r6, r2, #0x0
    cmp r6, #0x00
    beq _0803FD6E
    adds r0, r4, #0x0
    bl m4aSongNumStart
    ldr r5, _0803FD74 @ =0x08102414
    ldr r0, _0803FD78 @ =0x08102498
    lsls r4, r4, #0x03
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayVolumeControl
_0803FD6E:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0803FD74: .4byte 0x08102414
_0803FD78: .4byte 0x08102498
    thumb_func_start sub_803FD7C
sub_803FD7C:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    adds r2, r1, #0x0
    ldr r1, [r2, #0x08]
    movs r0, #0x80
    lsls r0, r0, #0x09
    cmp r1, r0
    ble _0803FD92
    ldr r0, [r2, #0x30]
    cmp r0, #0x00
    blt _0803FDB8
_0803FD92:
    adds r0, r4, #0x0
    bl sub_803E760
    adds r2, r4, #0x0
    adds r2, #0x4E
    movs r1, #0x00
    ldsh r0, [r2, r1]
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r0, r0, #0x01
    strh r0, [r2, #0x00]
    adds r2, #0x02
    movs r1, #0x00
    ldsh r0, [r2, r1]
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r0, r0, #0x01
    strh r0, [r2, #0x00]
    b _0803FEAA
_0803FDB8:
    adds r0, r4, #0x0
    adds r0, #0x88
    movs r3, #0x00
    strh r3, [r0, #0x00]
    subs r0, #0x3A
    strh r3, [r0, #0x00]
    adds r0, #0x02
    strh r3, [r0, #0x00]
    adds r2, r4, #0x0
    adds r2, #0xB4
    ldrh r1, [r2, #0x00]
    ldr r0, _0803FE30 @ =0x0000FFD3
    ands r0, r1
    strh r0, [r2, #0x00]
    movs r0, #0xE0
    lsls r0, r0, #0x07
    strh r0, [r4, #0x38]
    adds r1, r4, #0x0
    adds r1, #0x64
    movs r0, #0x01
    strb r0, [r1, #0x00]
    adds r0, r4, #0x0
    adds r0, #0x96
    strh r3, [r0, #0x00]
    movs r0, #0xA4
    bl m4aSongNumStop
    adds r0, r4, #0x0
    movs r1, #0x05
    bl sub_803D214
    adds r0, r4, #0x0
    movs r1, #0x04
    bl sub_803D4E4
    ldr r0, _0803FE34 @ =0x03002E20
    adds r3, r0, #0x0
    adds r3, #0x24
    ldr r1, _0803FE38 @ =0x00000838
    adds r0, r0, r1
    ldr r2, [r0, #0x00]
    ldr r0, [r2, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0803FEAA
    cmp r2, r4
    beq _0803FE3C
    adds r0, r3, #0x0
    adds r1, r4, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #0x3F
    bgt _0803FE2A
    movs r2, #0x40
_0803FE2A:
    movs r0, #0x01
    b _0803FE42
    .byte 0x00, 0x00
_0803FE30: .4byte 0x0000FFD3
_0803FE34: .4byte 0x03002E20
_0803FE38: .4byte 0x00000838
_0803FE3C:
    movs r2, #0x80
    lsls r2, r2, #0x01
    movs r0, #0x00
_0803FE42:
    ldr r6, _0803FE68 @ =0x080ECBC8
    lsls r5, r0, #0x02
    adds r0, r4, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    lsls r3, r0, #0x03
    adds r0, r4, #0x0
    adds r0, #0x58
    ldrh r1, [r0, #0x00]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    bne _0803FE6C
    adds r0, r3, #0x2
    adds r0, r5, r0
    b _0803FE6E
    .byte 0x00, 0x00
_0803FE68: .4byte 0x080ECBC8
_0803FE6C:
    adds r0, r5, r3
_0803FE6E:
    adds r0, r6, r0
    ldrh r4, [r0, #0x00]
    adds r6, r2, #0x0
    cmp r6, #0x00
    beq _0803FEAA
    adds r0, r4, #0x0
    bl m4aSongNumStart
    ldr r5, _0803FEB0 @ =0x08102414
    ldr r0, _0803FEB4 @ =0x08102498
    lsls r4, r4, #0x03
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayVolumeControl
_0803FEAA:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0803FEB0: .4byte 0x08102414
_0803FEB4: .4byte 0x08102498
    thumb_func_start sub_803FEB8
sub_803FEB8:
    push {r4, r5, r6, r7, lr}
    adds r6, r0, #0x0
    adds r5, r1, #0x0
    ldr r4, _0803FEFC @ =0x03002E20
    adds r7, r4, #0x0
    adds r7, #0x24
    adds r1, r7, #0x0
    bl sub_803E490
    adds r0, r6, #0x0
    adds r1, r5, #0x0
    bl sub_803FBFC
    ldr r0, _0803FF00 @ =0x00000838
    adds r4, r4, r0
    ldr r4, [r4, #0x00]
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0803FF72
    cmp r4, r6
    beq _0803FF04
    adds r0, r7, #0x0
    adds r1, r6, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #0x3F
    bgt _0803FEF8
    movs r2, #0x40
_0803FEF8:
    movs r0, #0x01
    b _0803FF0A
_0803FEFC: .4byte 0x03002E20
_0803FF00: .4byte 0x00000838
_0803FF04:
    movs r2, #0x80
    lsls r2, r2, #0x01
    movs r0, #0x00
_0803FF0A:
    ldr r5, _0803FF30 @ =0x080ECBC8
    lsls r4, r0, #0x02
    adds r0, r6, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    lsls r3, r0, #0x03
    adds r0, r6, #0x0
    adds r0, #0x58
    ldrh r1, [r0, #0x00]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    bne _0803FF34
    adds r0, r3, #0x2
    adds r0, r4, r0
    b _0803FF36
    .byte 0x00, 0x00
_0803FF30: .4byte 0x080ECBC8
_0803FF34:
    adds r0, r4, r3
_0803FF36:
    adds r0, r5, r0
    ldrh r4, [r0, #0x00]
    adds r6, r2, #0x0
    cmp r6, #0x00
    beq _0803FF72
    adds r0, r4, #0x0
    bl m4aSongNumStart
    ldr r5, _0803FF78 @ =0x08102414
    ldr r0, _0803FF7C @ =0x08102498
    lsls r4, r4, #0x03
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayVolumeControl
_0803FF72:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0803FF78: .4byte 0x08102414
_0803FF7C: .4byte 0x08102498
    thumb_func_start sub_803FF80
sub_803FF80:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    ldr r5, _0803FFA8 @ =0x03002E20
    adds r6, r5, #0x0
    adds r6, #0x24
    ldr r0, [r4, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x06
    ands r0, r1
    cmp r0, #0x00
    bne _0803FFAC
    adds r2, r4, #0x0
    adds r2, #0xB4
    ldrh r1, [r2, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x05
    adds r0, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    b _08040052
_0803FFA8: .4byte 0x03002E20
_0803FFAC:
    adds r0, r4, #0x0
    adds r1, r6, #0x0
    bl sub_803E490
    ldr r1, _0803FFE0 @ =0x00000838
    adds r0, r5, r1
    ldr r2, [r0, #0x00]
    ldr r0, [r2, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08040052
    cmp r2, r4
    beq _0803FFE4
    adds r0, r6, #0x0
    adds r1, r4, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #0x3F
    bgt _0803FFDA
    movs r2, #0x40
_0803FFDA:
    movs r0, #0x01
    b _0803FFEA
    .byte 0x00, 0x00
_0803FFE0: .4byte 0x00000838
_0803FFE4:
    movs r2, #0x80
    lsls r2, r2, #0x01
    movs r0, #0x00
_0803FFEA:
    ldr r6, _08040010 @ =0x080ECBC8
    lsls r5, r0, #0x02
    adds r0, r4, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    lsls r3, r0, #0x03
    adds r0, r4, #0x0
    adds r0, #0x58
    ldrh r1, [r0, #0x00]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    bne _08040014
    adds r0, r3, #0x2
    adds r0, r5, r0
    b _08040016
    .byte 0x00, 0x00
_08040010: .4byte 0x080ECBC8
_08040014:
    adds r0, r5, r3
_08040016:
    adds r0, r6, r0
    ldrh r4, [r0, #0x00]
    adds r6, r2, #0x0
    cmp r6, #0x00
    beq _08040052
    adds r0, r4, #0x0
    bl m4aSongNumStart
    ldr r5, _08040058 @ =0x08102414
    ldr r0, _0804005C @ =0x08102498
    lsls r4, r4, #0x03
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayVolumeControl
_08040052:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_08040058: .4byte 0x08102414
_0804005C: .4byte 0x08102498
    thumb_func_start sub_8040060
sub_8040060:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    ldr r4, _080400A4 @ =0x03002E20
    adds r6, r4, #0x0
    adds r6, #0x24
    adds r1, r6, #0x0
    bl sub_803E490
    adds r1, r5, #0x0
    adds r1, #0x68
    movs r0, #0xB4
    lsls r0, r0, #0x01
    strh r0, [r1, #0x00]
    ldr r0, _080400A8 @ =0x00000838
    adds r4, r4, r0
    ldr r4, [r4, #0x00]
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0804011A
    cmp r4, r5
    beq _080400AC
    adds r0, r6, #0x0
    adds r1, r5, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #0x3F
    bgt _080400A0
    movs r2, #0x40
_080400A0:
    movs r0, #0x01
    b _080400B2
_080400A4: .4byte 0x03002E20
_080400A8: .4byte 0x00000838
_080400AC:
    movs r2, #0x80
    lsls r2, r2, #0x01
    movs r0, #0x00
_080400B2:
    ldr r6, _080400D8 @ =0x080ECBC8
    lsls r4, r0, #0x02
    adds r0, r5, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    lsls r3, r0, #0x03
    adds r0, r5, #0x0
    adds r0, #0x58
    ldrh r1, [r0, #0x00]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    bne _080400DC
    adds r0, r3, #0x2
    adds r0, r4, r0
    b _080400DE
    .byte 0x00, 0x00
_080400D8: .4byte 0x080ECBC8
_080400DC:
    adds r0, r4, r3
_080400DE:
    adds r0, r6, r0
    ldrh r4, [r0, #0x00]
    adds r6, r2, #0x0
    cmp r6, #0x00
    beq _0804011A
    adds r0, r4, #0x0
    bl m4aSongNumStart
    ldr r5, _08040120 @ =0x08102414
    ldr r0, _08040124 @ =0x08102498
    lsls r4, r4, #0x03
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayVolumeControl
_0804011A:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_08040120: .4byte 0x08102414
_08040124: .4byte 0x08102498
    thumb_func_start sub_8040128
sub_8040128:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    adds r7, r0, #0x0
    mov r9, r1
    ldrh r2, [r7, #0x38]
    cmp r2, #0x01
    ble _0804013C
    b _08040564
_0804013C:
    adds r0, #0x78
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    bls _08040146
    b _08040564
_08040146:
    adds r0, r7, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _08040154
    b _08040564
_08040154:
    adds r0, r7, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _080401B4
    ldr r0, _080401A8 @ =0x03002E20
    ldr r2, _080401AC @ =0x00000838
    adds r1, r0, r2
    ldr r1, [r1, #0x00]
    adds r2, r0, #0x0
    cmp r7, r1
    beq _08040170
    b _08040564
_08040170:
    mov r0, r9
    ldrh r1, [r0, #0x10]
    ldr r0, _080401B0 @ =0x00001007
    cmp r1, r0
    bne _0804017C
    b _08040564
_0804017C:
    cmp r1, r0
    blt _0804018E
    adds r0, #0x13
    cmp r1, r0
    bgt _0804018E
    subs r0, #0x01
    cmp r1, r0
    blt _0804018E
    b _08040564
_0804018E:
    ldr r1, _080401AC @ =0x00000838
    adds r0, r2, r1
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _080401A0
    b _08040564
_080401A0:
    movs r0, #0xA0
    bl m4aSongNumStart
    b _08040564
_080401A8: .4byte 0x03002E20
_080401AC: .4byte 0x00000838
_080401B0: .4byte 0x00001007
_080401B4:
    mov r0, r9
    ldrh r1, [r0, #0x10]
    ldr r0, _08040210 @ =0x00001007
    cmp r1, r0
    bne _08040224
    movs r4, #0x00
    ldr r2, _08040214 @ =0x08102414
    ldr r0, _08040218 @ =0x08102498
    movs r1, #0xBE
    lsls r1, r1, #0x04
    adds r3, r0, r1
    ldrh r1, [r3, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    ldrh r0, [r1, #0x04]
    cmp r0, #0x00
    beq _080401E6
    ldr r1, [r1, #0x00]
    ldr r0, [r3, #0x00]
    cmp r1, r0
    bne _080401E6
    movs r4, #0x01
_080401E6:
    cmp r4, #0x00
    beq _080401EC
    b _08040564
_080401EC:
    ldr r0, _0804021C @ =0x03002E20
    ldr r2, _08040220 @ =0x00000838
    adds r0, r0, r2
    ldr r0, [r0, #0x00]
    cmp r7, r0
    beq _080401FA
    b _08040564
_080401FA:
    ldr r0, [r7, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _08040206
    b _08040564
_08040206:
    movs r0, #0xBE
    lsls r0, r0, #0x01
    bl m4aSongNumStart
    b _08040564
_08040210: .4byte 0x00001007
_08040214: .4byte 0x08102414
_08040218: .4byte 0x08102498
_0804021C: .4byte 0x03002E20
_08040220: .4byte 0x00000838
_08040224:
    ldr r0, _080402BC @ =0x0000100C
    cmp r1, r0
    bne _080402DC
    ldr r0, _080402C0 @ =0x03002E20
    adds r1, r7, #0x0
    adds r1, #0xBC
    ldr r4, [r1, #0x00]
    ldr r1, _080402C4 @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r7, r0
    beq _0804023E
    b _08040564
_0804023E:
    ldr r0, [r7, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _0804024A
    b _08040564
_0804024A:
    adds r0, r4, #0x0
    cmp r4, #0x00
    bge _08040252
    negs r0, r4
_08040252:
    lsls r0, r0, #0x06
    lsrs r0, r0, #0x16
    ldr r2, _080402C8 @ =0xFFFFFE00
    adds r0, r0, r2
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    adds r1, r4, #0x0
    cmp r1, #0x00
    bge _08040266
    negs r1, r1
_08040266:
    asrs r4, r1, #0x14
    movs r0, #0x3F
    ands r4, r0
    adds r4, #0xC0
    lsls r6, r6, #0x10
    asrs r6, r6, #0x10
    ldr r0, _080402CC @ =0x00000181
    bl m4aSongNumStart
    ldr r0, _080402D0 @ =0x08102414
    mov r8, r0
    ldr r5, _080402D4 @ =0x08102498
    ldr r1, _080402D8 @ =0x00000C08
    adds r5, r5, r1
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r4, #0x0
    bl m4aMPlayVolumeControl
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayPitchControl
    b _08040564
_080402BC: .4byte 0x0000100C
_080402C0: .4byte 0x03002E20
_080402C4: .4byte 0x00000838
_080402C8: .4byte 0xFFFFFE00
_080402CC: .4byte 0x00000181
_080402D0: .4byte 0x08102414
_080402D4: .4byte 0x08102498
_080402D8: .4byte 0x00000C08
_080402DC:
    cmp r2, #0x00
    beq _08040304
    adds r1, r7, #0x0
    adds r1, #0x5A
    ldr r0, _08040300 @ =0x00008007
    strh r0, [r1, #0x00]
    ldr r0, [r7, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x05
    orrs r0, r1
    str r0, [r7, #0x48]
    movs r0, #0x08
    strh r0, [r7, #0x38]
    adds r0, r7, #0x0
    mov r1, r9
    bl sub_803FBFC
    b _08040564
_08040300: .4byte 0x00008007
_08040304:
    ldr r2, _08040318 @ =0xFFFFF000
    adds r0, r1, r2
    cmp r0, #0x1D
    bls _0804030E
    b _08040450
_0804030E:
    lsls r0, r0, #0x02
    ldr r1, _0804031C @ =0x08040320
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08040318: .4byte 0xFFFFF000
_0804031C: .4byte 0x08040320
    .byte 0xBE, 0x03, 0x04, 0x08, 0xB6, 0x03, 0x04, 0x08, 0xBE, 0x03, 0x04, 0x08, 0xA8, 0x03, 0x04, 0x08
    .byte 0x9E, 0x03, 0x04, 0x08, 0x50, 0x04, 0x04, 0x08, 0x50, 0x04, 0x04, 0x08, 0x50, 0x04, 0x04, 0x08
    .byte 0xB0, 0x03, 0x04, 0x08, 0x50, 0x04, 0x04, 0x08, 0x50, 0x04, 0x04, 0x08, 0x50, 0x04, 0x04, 0x08
    .byte 0x50, 0x04, 0x04, 0x08, 0x50, 0x04, 0x04, 0x08, 0xBE, 0x03, 0x04, 0x08, 0xBE, 0x03, 0x04, 0x08
    .byte 0x98, 0x03, 0x04, 0x08, 0xA8, 0x03, 0x04, 0x08, 0xA8, 0x03, 0x04, 0x08, 0xB6, 0x03, 0x04, 0x08
    .byte 0xBE, 0x03, 0x04, 0x08, 0xA8, 0x03, 0x04, 0x08, 0xA8, 0x03, 0x04, 0x08, 0xBA, 0x03, 0x04, 0x08
    .byte 0xC2, 0x03, 0x04, 0x08, 0xC2, 0x03, 0x04, 0x08, 0x50, 0x04, 0x04, 0x08, 0x50, 0x04, 0x04, 0x08
    .byte 0xBE, 0x03, 0x04, 0x08, 0x9E, 0x03, 0x04, 0x08, 0xBB, 0x25, 0x6D, 0x00, 0x12, 0xE0, 0x01, 0x4D
    .byte 0x10, 0xE0, 0x00, 0x00, 0x79, 0x01, 0x00, 0x00, 0x00, 0x4D, 0x0B, 0xE0, 0x75, 0x01, 0x00, 0x00
    .byte 0xBE, 0x25, 0x6D, 0x00, 0x06, 0xE0, 0xAA, 0x25, 0x04, 0xE0, 0xA8, 0x25, 0x02, 0xE0, 0xA9, 0x25
    .byte 0x00, 0xE0, 0x2E, 0x4D, 0x2E, 0x48, 0x39, 0x1C, 0xBC, 0x31, 0x0C, 0x68, 0x2D, 0x49, 0x40, 0x18
    .byte 0x00, 0x68, 0x87, 0x42, 0x3C, 0xD1, 0xB8, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x37, 0xD1
    .byte 0x20, 0x1C, 0x00, 0x2C, 0x00, 0xDA, 0x60, 0x42, 0x80, 0x01, 0x80, 0x0D, 0x26, 0x4A, 0x80, 0x18
    .byte 0x00, 0x04, 0x06, 0x0C, 0x21, 0x1C, 0x00, 0x29, 0x00, 0xDA, 0x49, 0x42, 0x0C, 0x15, 0x3F, 0x20
    .byte 0x04, 0x40, 0xC0, 0x34, 0x36, 0x04, 0x36, 0x14, 0x28, 0x1C, 0x1F, 0xF0, 0x89, 0xFD, 0x1F, 0x48
    .byte 0x80, 0x46, 0x1F, 0x48, 0xED, 0x00, 0x2D, 0x18, 0xA9, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00
    .byte 0x40, 0x44, 0x00, 0x68, 0x1F, 0xF0, 0x74, 0xFE, 0xA9, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00
    .byte 0x40, 0x44, 0x00, 0x68, 0x01, 0x21, 0x22, 0x1C, 0x20, 0xF0, 0x22, 0xFD, 0xA9, 0x88, 0x48, 0x00
    .byte 0x40, 0x18, 0x80, 0x00, 0x40, 0x44, 0x00, 0x68, 0x01, 0x21, 0x32, 0x1C, 0x20, 0xF0, 0x4C, 0xFD
_08040450:
    adds r1, r7, #0x0
    adds r1, #0x5A
    ldr r0, _08040494 @ =0x00008007
    strh r0, [r1, #0x00]
    ldr r0, [r7, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x05
    orrs r0, r1
    str r0, [r7, #0x48]
    movs r0, #0x08
    strh r0, [r7, #0x38]
    mov r1, r9
    ldrh r0, [r1, #0x10]
    ldr r2, _08040498 @ =0xFFFFF000
    adds r0, r0, r2
    cmp r0, #0x1D
    bhi _08040564
    lsls r0, r0, #0x02
    ldr r1, _0804049C @ =0x080404A0
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x73, 0x01, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF
    .byte 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08
_08040494: .4byte 0x00008007
_08040498: .4byte 0xFFFFF000
_0804049C: .4byte 0x080404A0
    .byte 0x18, 0x05, 0x04, 0x08, 0x18, 0x05, 0x04, 0x08, 0x22, 0x05, 0x04, 0x08, 0x36, 0x05, 0x04, 0x08
    .byte 0x40, 0x05, 0x04, 0x08, 0x64, 0x05, 0x04, 0x08, 0x64, 0x05, 0x04, 0x08, 0x64, 0x05, 0x04, 0x08
    .byte 0x64, 0x05, 0x04, 0x08, 0x64, 0x05, 0x04, 0x08, 0x64, 0x05, 0x04, 0x08, 0x64, 0x05, 0x04, 0x08
    .byte 0x64, 0x05, 0x04, 0x08, 0x64, 0x05, 0x04, 0x08, 0x18, 0x05, 0x04, 0x08, 0x18, 0x05, 0x04, 0x08
    .byte 0x5C, 0x05, 0x04, 0x08, 0x2C, 0x05, 0x04, 0x08, 0x18, 0x05, 0x04, 0x08, 0x52, 0x05, 0x04, 0x08
    .byte 0x18, 0x05, 0x04, 0x08, 0x36, 0x05, 0x04, 0x08, 0x36, 0x05, 0x04, 0x08, 0x18, 0x05, 0x04, 0x08
    .byte 0x64, 0x05, 0x04, 0x08, 0x64, 0x05, 0x04, 0x08, 0x64, 0x05, 0x04, 0x08, 0x64, 0x05, 0x04, 0x08
    .byte 0x36, 0x05, 0x04, 0x08, 0x40, 0x05, 0x04, 0x08, 0x38, 0x1C, 0x49, 0x46, 0xFF, 0xF7, 0x88, 0xFA
    .byte 0x20, 0xE0, 0x38, 0x1C, 0x49, 0x46, 0xFF, 0xF7, 0x29, 0xFC, 0x1B, 0xE0, 0x38, 0x1C, 0x49, 0x46
    .byte 0xFF, 0xF7, 0xC0, 0xFB, 0x16, 0xE0, 0x38, 0x1C, 0x49, 0x46, 0xFF, 0xF7, 0x21, 0xFD, 0x11, 0xE0
    .byte 0x38, 0x1C, 0x49, 0x46, 0xFF, 0xF7, 0x1C, 0xFD, 0x38, 0x1C, 0x03, 0x21, 0xFC, 0xF7, 0x62, 0xFE
    .byte 0x08, 0xE0, 0x38, 0x1C, 0x49, 0x46, 0xFF, 0xF7, 0xAF, 0xFC, 0x03, 0xE0, 0x38, 0x1C, 0x49, 0x46
    .byte 0xFF, 0xF7, 0x7E, 0xFD
_08040564:
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    thumb_func_start sub_8040570
sub_8040570:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x00C
    adds r5, r0, #0x0
    adds r0, r1, #0x0
    adds r1, r2, #0x0
    adds r3, r5, #0x0
    adds r3, #0x5A
    ldr r2, _080405F0 @ =0x00008007
    strh r2, [r3, #0x00]
    ldr r2, [r5, #0x48]
    movs r3, #0x80
    lsls r3, r3, #0x05
    orrs r2, r3
    str r2, [r5, #0x48]
    movs r2, #0x08
    strh r2, [r5, #0x38]
    adds r2, r5, #0x0
    adds r2, #0xEE
    movs r3, #0x00
    ldsh r2, [r2, r3]
    subs r0, r2, r0
    adds r2, r5, #0x0
    adds r2, #0xF0
    movs r4, #0x00
    ldsh r2, [r2, r4]
    subs r1, r2, r1
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    bl sub_802EC38
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    adds r0, r5, #0x0
    adds r0, #0x7A
    ldrh r4, [r0, #0x00]
    ldr r0, _080405F4 @ =0xFFFF8000
    adds r3, r4, r0
    subs r0, r3, r2
    lsls r0, r0, #0x10
    asrs r1, r0, #0x10
    cmp r1, #0x00
    blt _080405FC
    movs r6, #0x80
    lsls r6, r6, #0x04
    cmp r1, r6
    bgt _080405E2
    movs r1, #0xF0
    lsls r1, r1, #0x07
    adds r0, r4, r1
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
_080405E2:
    subs r0, r3, r2
    lsls r0, r0, #0x10
    ldr r1, _080405F8 @ =0x77FF0000
    cmp r0, r1
    ble _08040622
    adds r0, r4, r6
    b _0804061E
_080405F0: .4byte 0x00008007
_080405F4: .4byte 0xFFFF8000
_080405F8: .4byte 0x77FF0000
_080405FC:
    ldr r0, _08040724 @ =0xFFFFF800
    cmp r1, r0
    blt _0804060C
    movs r2, #0x88
    lsls r2, r2, #0x08
    adds r0, r4, r2
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
_0804060C:
    subs r0, r3, r2
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    ldr r1, _08040728 @ =0xFFFF8800
    cmp r0, r1
    bgt _08040622
    movs r3, #0xF8
    lsls r3, r3, #0x08
    adds r0, r4, r3
_0804061E:
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
_08040622:
    ldr r4, _0804072C @ =0x080E645C
    mov r10, r4
    lsls r0, r2, #0x10
    asrs r4, r0, #0x10
    adds r0, r4, #0x0
    cmp r4, #0x00
    bge _08040632
    adds r0, #0x3F
_08040632:
    asrs r6, r0, #0x06
    ldr r0, _08040730 @ =0x000003FF
    adds r1, r0, #0x0
    adds r0, r6, #0x0
    ands r0, r1
    lsls r0, r0, #0x02
    add r0, r10
    ldr r1, [r0, #0x00]
    str r6, [sp, #0x000]
    movs r2, #0x80
    lsls r2, r2, #0x01
    mov r9, r2
    subs r0, r2, r6
    ldr r3, _08040730 @ =0x000003FF
    mov r8, r3
    ands r0, r3
    lsls r0, r0, #0x02
    add r0, r10
    ldr r7, [r0, #0x00]
    adds r3, r5, #0x0
    adds r3, #0x4E
    movs r2, #0x00
    ldsh r0, [r3, r2]
    mov r12, r0
    mov r2, r12
    muls r2, r1
    adds r1, r5, #0x0
    adds r1, #0x50
    movs r0, #0x00
    ldsh r5, [r1, r0]
    adds r0, r5, #0x0
    muls r0, r7
    subs r0, r2, r0
    str r3, [sp, #0x004]
    str r1, [sp, #0x008]
    cmp r0, #0x00
    bge _08040680
    ldr r1, _08040734 @ =0x00007FFF
    adds r0, r0, r1
_08040680:
    asrs r2, r0, #0x0F
    adds r0, r6, #0x0
    mov r3, r8
    ands r0, r3
    lsls r0, r0, #0x02
    add r0, r10
    ldr r6, [r0, #0x00]
    mov r1, r12
    muls r1, r7
    adds r0, r5, #0x0
    muls r0, r6
    adds r0, r1, r0
    cmp r0, #0x00
    bge _080406A0
    ldr r1, _08040734 @ =0x00007FFF
    adds r0, r0, r1
_080406A0:
    asrs r5, r0, #0x0F
    lsrs r0, r0, #0x1F
    adds r0, r5, r0
    asrs r5, r0, #0x01
    negs r0, r2
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r2, r0, #0x01
    cmp r2, #0xFF
    bgt _080406B6
    mov r2, r9
_080406B6:
    adds r1, r2, #0x0
    muls r1, r6
    adds r0, r5, #0x0
    muls r0, r7
    adds r0, r1, r0
    cmp r0, #0x00
    bge _080406C8
    ldr r3, _08040734 @ =0x00007FFF
    adds r0, r0, r3
_080406C8:
    asrs r3, r0, #0x0F
    mov r4, r9
    ldr r1, [sp, #0x000]
    subs r0, r4, r1
    mov r4, r8
    ands r0, r4
    lsls r0, r0, #0x02
    add r0, r10
    ldr r0, [r0, #0x00]
    adds r1, r5, #0x0
    muls r1, r6
    muls r0, r2
    subs r0, r1, r0
    cmp r0, #0x00
    bge _080406EA
    ldr r1, _08040734 @ =0x00007FFF
    adds r0, r0, r1
_080406EA:
    asrs r0, r0, #0x0F
    movs r2, #0x80
    lsls r2, r2, #0x03
    cmp r3, r2
    ble _080406F6
    adds r3, r2, #0x0
_080406F6:
    ldr r1, _08040738 @ =0xFFFFFC00
    cmp r3, r1
    bge _080406FE
    adds r3, r1, #0x0
_080406FE:
    cmp r0, r2
    ble _08040704
    adds r0, r2, #0x0
_08040704:
    cmp r0, r1
    bge _0804070A
    adds r0, r1, #0x0
_0804070A:
    ldr r2, [sp, #0x004]
    strh r3, [r2, #0x00]
    ldr r3, [sp, #0x008]
    strh r0, [r3, #0x00]
    add sp, #0x00C
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08040724: .4byte 0xFFFFF800
_08040728: .4byte 0xFFFF8800
_0804072C: .4byte 0x080E645C
_08040730: .4byte 0x000003FF
_08040734: .4byte 0x00007FFF
_08040738: .4byte 0xFFFFFC00
    thumb_func_start sub_804073C
sub_804073C:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    adds r3, r1, #0x0
    adds r1, r4, #0x0
    adds r1, #0x5A
    ldr r0, _080407F8 @ =0x00008007
    strh r0, [r1, #0x00]
    ldr r0, [r4, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x05
    orrs r0, r1
    str r0, [r4, #0x48]
    movs r0, #0x08
    strh r0, [r4, #0x38]
    ldr r0, [r4, #0x00]
    cmp r0, #0x00
    bge _08040762
    ldr r1, _080407FC @ =0x0000FFFF
    adds r0, r0, r1
_08040762:
    asrs r0, r0, #0x10
    subs r3, r0, r3
    ldr r0, [r4, #0x04]
    cmp r0, #0x00
    bge _08040770
    ldr r1, _080407FC @ =0x0000FFFF
    adds r0, r0, r1
_08040770:
    asrs r0, r0, #0x10
    subs r2, r0, r2
    lsls r0, r3, #0x10
    asrs r0, r0, #0x10
    lsls r1, r2, #0x10
    asrs r1, r1, #0x10
    bl sub_802EC38
    ldr r6, _08040800 @ =0x080E645C
    lsls r0, r0, #0x10
    asrs r2, r0, #0x10
    adds r1, r2, #0x0
    cmp r2, #0x00
    bge _0804078E
    adds r1, #0x3F
_0804078E:
    asrs r5, r1, #0x06
    ldr r1, _08040804 @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r5, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    adds r1, r1, r6
    ldr r0, [r1, #0x00]
    lsls r0, r0, #0x09
    cmp r0, #0x00
    bge _080407A8
    ldr r1, _08040808 @ =0x00007FFF
    adds r0, r0, r1
_080407A8:
    asrs r3, r0, #0x0F
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r5
    ldr r1, _08040804 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x09
    negs r0, r0
    cmp r0, #0x00
    bge _080407C6
    ldr r1, _08040808 @ =0x00007FFF
    adds r0, r0, r1
_080407C6:
    asrs r1, r0, #0x0F
    movs r2, #0x80
    lsls r2, r2, #0x03
    cmp r3, r2
    ble _080407D2
    adds r3, r2, #0x0
_080407D2:
    ldr r0, _0804080C @ =0xFFFFFC00
    cmp r3, r0
    bge _080407DA
    adds r3, r0, #0x0
_080407DA:
    cmp r1, r2
    ble _080407E0
    adds r1, r2, #0x0
_080407E0:
    cmp r1, r0
    bge _080407E6
    adds r1, r0, #0x0
_080407E6:
    adds r0, r4, #0x0
    adds r0, #0x4E
    strh r3, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_080407F8: .4byte 0x00008007
_080407FC: .4byte 0x0000FFFF
_08040800: .4byte 0x080E645C
_08040804: .4byte 0x000003FF
_08040808: .4byte 0x00007FFF
_0804080C: .4byte 0xFFFFFC00
    thumb_func_start sub_8040810
sub_8040810:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x008
    adds r7, r0, #0x0
    mov r9, r1
    mov r10, r2
    ldrh r0, [r7, #0x38]
    str r0, [sp, #0x000]
    cmp r0, #0x01
    ble _0804082C
    b _08040A32
_0804082C:
    adds r0, r7, #0x0
    adds r0, #0x78
    ldrb r0, [r0, #0x00]
    cmp r0, #0x06
    bne _08040838
    b _08040A32
_08040838:
    adds r0, r7, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _08040846
    b _08040A32
_08040846:
    adds r0, r7, #0x0
    adds r0, #0x6A
    movs r2, #0x00
    ldsh r0, [r0, r2]
    cmp r0, #0x00
    beq _080408EC
    ldr r1, _080408D8 @ =0x03002E20
    movs r3, #0xE2
    lsls r3, r3, #0x03
    adds r0, r1, r3
    ldr r2, [r0, #0x08]
    mov r0, r9
    cmp r0, #0x00
    bge _08040864
    adds r0, #0x07
_08040864:
    asrs r4, r0, #0x03
    mov r0, r10
    cmp r0, #0x00
    bge _0804086E
    adds r0, #0x07
_0804086E:
    asrs r3, r0, #0x03
    cmp r2, #0x00
    beq _0804089A
_08040874:
    ldr r0, [r2, #0x00]
    cmp r0, #0x00
    bge _0804087E
    ldr r5, _080408DC @ =0x0007FFFF
    adds r0, r0, r5
_0804087E:
    asrs r0, r0, #0x13
    cmp r0, r4
    bne _08040894
    ldr r0, [r2, #0x04]
    cmp r0, #0x00
    bge _0804088E
    ldr r5, _080408DC @ =0x0007FFFF
    adds r0, r0, r5
_0804088E:
    asrs r0, r0, #0x13
    cmp r0, r3
    beq _080408E4
_08040894:
    ldr r2, [r2, #0x3C]
    cmp r2, #0x00
    bne _08040874
_0804089A:
    movs r0, #0x00
    str r0, [sp, #0x004]
_0804089E:
    ldr r2, [sp, #0x004]
    ldr r0, [r2, #0x60]
    cmp r0, #0x00
    beq _080408A8
    b _08040A32
_080408A8:
    ldr r3, _080408E0 @ =0x00000838
    adds r0, r1, r3
    ldr r0, [r0, #0x00]
    cmp r7, r0
    bne _080408C2
    ldr r0, [r7, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _080408C2
    movs r0, #0xA0
    bl m4aSongNumStart
_080408C2:
    ldr r5, [sp, #0x004]
    ldr r2, [r5, #0x18]
    cmp r2, #0x00
    bne _080408CC
    b _08040A32
_080408CC:
    adds r0, r5, #0x0
    adds r1, r7, #0x0
    bl _call_via_r2
    b _08040A32
    .byte 0x00, 0x00
_080408D8: .4byte 0x03002E20
_080408DC: .4byte 0x0007FFFF
_080408E0: .4byte 0x00000838
_080408E4:
    str r2, [sp, #0x004]
    b _0804089E
_080408E8:
    str r2, [sp, #0x004]
    b _08040938
_080408EC:
    ldr r1, _080409FC @ =0x03002E20
    movs r2, #0xE2
    lsls r2, r2, #0x03
    adds r0, r1, r2
    ldr r2, [r0, #0x08]
    mov r0, r9
    cmp r0, #0x00
    bge _080408FE
    adds r0, #0x07
_080408FE:
    asrs r4, r0, #0x03
    mov r0, r10
    cmp r0, #0x00
    bge _08040908
    adds r0, #0x07
_08040908:
    asrs r3, r0, #0x03
    cmp r2, #0x00
    beq _08040934
_0804090E:
    ldr r0, [r2, #0x00]
    cmp r0, #0x00
    bge _08040918
    ldr r5, _08040A00 @ =0x0007FFFF
    adds r0, r0, r5
_08040918:
    asrs r0, r0, #0x13
    cmp r0, r4
    bne _0804092E
    ldr r0, [r2, #0x04]
    cmp r0, #0x00
    bge _08040928
    ldr r5, _08040A00 @ =0x0007FFFF
    adds r0, r0, r5
_08040928:
    asrs r0, r0, #0x13
    cmp r0, r3
    beq _080408E8
_0804092E:
    ldr r2, [r2, #0x3C]
    cmp r2, #0x00
    bne _0804090E
_08040934:
    movs r0, #0x00
    str r0, [sp, #0x004]
_08040938:
    ldr r2, [sp, #0x004]
    ldr r0, [r2, #0x60]
    cmp r0, #0x00
    bne _08040A32
    cmp r2, #0x00
    beq _080409E8
    ldr r2, [r2, #0x50]
    ldr r0, _08040A04 @ =0x000A0004
    cmp r2, r0
    blt _0804095A
    adds r0, #0x02
    cmp r2, r0
    ble _0804095A
    movs r0, #0x86
    lsls r0, r0, #0x10
    cmp r2, r0
    beq _080409E8
_0804095A:
    movs r0, #0xAA
    adds r5, r0, #0x0
    adds r0, r7, #0x0
    adds r0, #0xBC
    ldr r4, [r0, #0x00]
    ldr r3, _08040A08 @ =0x00000838
    adds r0, r1, r3
    ldr r0, [r0, #0x00]
    cmp r7, r0
    bne _080409E8
    ldr r0, [r7, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _080409E8
    adds r0, r4, #0x0
    cmp r4, #0x00
    bge _08040980
    negs r0, r4
_08040980:
    lsls r0, r0, #0x06
    lsrs r0, r0, #0x16
    ldr r1, _08040A0C @ =0xFFFFFE00
    adds r0, r0, r1
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    adds r0, r4, #0x0
    cmp r0, #0x00
    bge _08040994
    negs r0, r0
_08040994:
    asrs r4, r0, #0x14
    movs r0, #0x3F
    ands r4, r0
    adds r4, #0xC0
    lsls r6, r6, #0x10
    asrs r6, r6, #0x10
    adds r0, r5, #0x0
    bl m4aSongNumStart
    ldr r2, _08040A10 @ =0x08102414
    mov r8, r2
    ldr r0, _08040A14 @ =0x08102498
    lsls r5, r5, #0x03
    adds r5, r5, r0
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r4, #0x0
    bl m4aMPlayVolumeControl
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayPitchControl
_080409E8:
    ldr r3, [sp, #0x000]
    cmp r3, #0x00
    beq _08040A18
    adds r0, r7, #0x0
    mov r1, r9
    mov r2, r10
    bl sub_804073C
    b _08040A32
    .byte 0x00, 0x00
_080409FC: .4byte 0x03002E20
_08040A00: .4byte 0x0007FFFF
_08040A04: .4byte 0x000A0004
_08040A08: .4byte 0x00000838
_08040A0C: .4byte 0xFFFFFE00
_08040A10: .4byte 0x08102414
_08040A14: .4byte 0x08102498
_08040A18:
    adds r0, r7, #0x0
    mov r1, r9
    mov r2, r10
    bl sub_8040570
    ldr r5, [sp, #0x004]
    ldr r2, [r5, #0x18]
    cmp r2, #0x00
    beq _08040A32
    adds r0, r5, #0x0
    adds r1, r7, #0x0
    bl _call_via_r2
_08040A32:
    add sp, #0x008
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_8040A44
sub_8040A44:
    push {r4, r5, r6, r7, lr}
    mov r12, r0
    ldr r2, _08040AD0 @ =0x03002E20
    adds r7, r2, #0x0
    adds r7, #0x24
    adds r0, #0x58
    ldrh r1, [r0, #0x00]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _08040A5C
    b _08040C26
_08040A5C:
    mov r0, r12
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _08040A6A
    b _08040C26
_08040A6A:
    mov r0, r12
    adds r0, #0x66
    movs r3, #0x00
    ldsh r0, [r0, r3]
    cmp r0, #0x00
    beq _08040A78
    b _08040C26
_08040A78:
    mov r0, r12
    ldr r5, [r0, #0x00]
    ldr r6, [r0, #0x04]
    adds r0, r5, #0x0
    cmp r5, #0x00
    bge _08040A88
    ldr r1, _08040AD4 @ =0x0000FFFF
    adds r0, r5, r1
_08040A88:
    asrs r1, r0, #0x10
    adds r0, r6, #0x0
    cmp r6, #0x00
    bge _08040A94
    ldr r3, _08040AD4 @ =0x0000FFFF
    adds r0, r6, r3
_08040A94:
    adds r4, r1, #0x0
    asrs r3, r0, #0x10
    movs r1, #0xE2
    lsls r1, r1, #0x03
    adds r0, r2, r1
    ldr r2, [r0, #0x08]
    adds r0, r4, #0x0
    cmp r4, #0x00
    bge _08040AA8
    adds r0, r4, #0x7
_08040AA8:
    asrs r4, r0, #0x03
    adds r0, r3, #0x0
    cmp r3, #0x00
    bge _08040AB2
    adds r0, r3, #0x7
_08040AB2:
    asrs r3, r0, #0x03
    cmp r2, #0x00
    beq _08040B10
_08040AB8:
    ldr r0, [r2, #0x00]
    cmp r0, #0x00
    bge _08040AC2
    ldr r1, _08040AD8 @ =0x0007FFFF
    adds r0, r0, r1
_08040AC2:
    asrs r0, r0, #0x13
    subs r1, r4, r0
    cmp r1, #0x00
    blt _08040ADC
    cmp r1, #0x04
    bgt _08040B0A
    b _08040AE2
_08040AD0: .4byte 0x03002E20
_08040AD4: .4byte 0x0000FFFF
_08040AD8: .4byte 0x0007FFFF
_08040ADC:
    subs r0, r0, r4
    cmp r0, #0x04
    bgt _08040B0A
_08040AE2:
    ldr r0, [r2, #0x04]
    cmp r0, #0x00
    bge _08040AEC
    ldr r1, _08040AFC @ =0x0007FFFF
    adds r0, r0, r1
_08040AEC:
    asrs r0, r0, #0x13
    subs r1, r3, r0
    cmp r1, #0x00
    blt _08040B00
    cmp r1, #0x04
    bgt _08040B0A
    b _08040B06
    .byte 0x00, 0x00
_08040AFC: .4byte 0x0007FFFF
_08040B00:
    subs r0, r0, r3
    cmp r0, #0x04
    bgt _08040B0A
_08040B06:
    adds r4, r2, #0x0
    b _08040B12
_08040B0A:
    ldr r2, [r2, #0x3C]
    cmp r2, #0x00
    bne _08040AB8
_08040B10:
    movs r4, #0x00
_08040B12:
    ldrh r0, [r4, #0x34]
    movs r1, #0x02
    ands r0, r1
    cmp r0, #0x00
    bne _08040B1E
    b _08040C26
_08040B1E:
    mov r1, r12
    adds r1, #0x9C
    movs r3, #0x00
    movs r2, #0x00
    movs r0, #0x5C
    strh r0, [r1, #0x00]
    subs r1, #0x24
    movs r0, #0x08
    strb r0, [r1, #0x00]
    subs r1, #0x16
    movs r0, #0x01
    strh r0, [r1, #0x00]
    mov r1, r12
    ldr r0, [r1, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x07
    orrs r0, r1
    mov r1, r12
    str r0, [r1, #0x48]
    mov r0, r12
    adds r0, #0x88
    strh r2, [r0, #0x00]
    ldr r0, [r1, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x04
    orrs r0, r1
    mov r2, r12
    str r0, [r2, #0x48]
    mov r0, r12
    adds r0, #0x7E
    strb r3, [r0, #0x00]
    cmp r4, #0x00
    beq _08040B88
    ldr r0, [r4, #0x00]
    ldr r1, [r4, #0x04]
    subs r0, r0, r5
    cmp r0, #0x00
    bge _08040B6E
    ldr r3, _08040C2C @ =0x00001FFF
    adds r0, r0, r3
_08040B6E:
    asrs r0, r0, #0x0D
    mov r2, r12
    adds r2, #0x4E
    strh r0, [r2, #0x00]
    subs r0, r1, r6
    cmp r0, #0x00
    bge _08040B80
    ldr r1, _08040C2C @ =0x00001FFF
    adds r0, r0, r1
_08040B80:
    asrs r1, r0, #0x0D
    mov r0, r12
    adds r0, #0x50
    strh r1, [r0, #0x00]
_08040B88:
    mov r2, r12
    ldr r0, [r2, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x06
    ands r0, r1
    cmp r0, #0x00
    beq _08040BAE
    adds r2, #0xB4
    ldrh r1, [r2, #0x00]
    movs r3, #0xC0
    lsls r3, r3, #0x02
    adds r0, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    mov r1, r12
    adds r1, #0xB6
    movs r0, #0x80
    lsls r0, r0, #0x05
    strh r0, [r1, #0x00]
_08040BAE:
    ldr r1, _08040C30 @ =0x00000814
    adds r0, r7, r1
    ldr r0, [r0, #0x00]
    cmp r12, r0
    bne _08040C26
    mov r2, r12
    ldr r0, [r2, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08040C26
    movs r6, #0x00
    movs r5, #0x00
    ldr r2, _08040C34 @ =0x08102414
    ldr r3, _08040C38 @ =0x08102498
    movs r0, #0xA2
    lsls r0, r0, #0x03
    adds r4, r3, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    ldrh r0, [r1, #0x04]
    cmp r0, #0x00
    beq _08040BEE
    ldr r1, [r1, #0x00]
    ldr r0, [r4, #0x00]
    cmp r1, r0
    bne _08040BEE
    movs r5, #0x01
_08040BEE:
    cmp r5, #0x00
    beq _08040C1C
    movs r4, #0x00
    movs r1, #0xA2
    lsls r1, r1, #0x03
    adds r3, r3, r1
    ldrh r0, [r3, #0x04]
    lsls r1, r0, #0x01
    adds r1, r1, r0
    lsls r1, r1, #0x02
    adds r1, r1, r2
    ldr r1, [r1, #0x00]
    ldr r0, [r1, #0x04]
    cmp r0, #0x00
    bge _08040C16
    ldr r1, [r1, #0x00]
    ldr r0, [r3, #0x00]
    cmp r1, r0
    bne _08040C16
    movs r4, #0x01
_08040C16:
    cmp r4, #0x00
    bne _08040C1C
    movs r6, #0x01
_08040C1C:
    cmp r6, #0x00
    bne _08040C26
    movs r0, #0xA2
    bl m4aSongNumStart
_08040C26:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08040C2C: .4byte 0x00001FFF
_08040C30: .4byte 0x00000814
_08040C34: .4byte 0x08102414
_08040C38: .4byte 0x08102498
    thumb_func_start sub_8040C3C
sub_8040C3C:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    ldr r0, _08040C84 @ =0x03002E20
    adds r6, r0, #0x0
    adds r6, #0x24
    adds r7, r6, #0x0
    adds r1, r4, #0x0
    adds r1, #0x62
    movs r2, #0x00
    movs r0, #0x01
    strh r0, [r1, #0x00]
    adds r3, r4, #0x0
    adds r3, #0x9C
    ldrh r0, [r3, #0x00]
    cmp r0, #0x3B
    bls _08040C88
    adds r2, r4, #0x0
    adds r2, #0xB4
    ldrh r0, [r2, #0x00]
    movs r1, #0x08
    orrs r0, r1
    strh r0, [r2, #0x00]
    ldrh r0, [r3, #0x00]
    subs r0, #0x01
    strh r0, [r3, #0x00]
    adds r1, r4, #0x0
    adds r1, #0x82
    movs r3, #0xC0
    lsls r3, r3, #0x04
    adds r0, r3, #0x0
    ldrh r3, [r1, #0x00]
    adds r0, r0, r3
    strh r0, [r1, #0x00]
    adds r5, r2, #0x0
    b _08040CAC
    .byte 0x00, 0x00
_08040C84: .4byte 0x03002E20
_08040C88:
    adds r5, r4, #0x0
    adds r5, #0xB4
    cmp r0, #0x00
    beq _08040CB6
    ldrh r1, [r5, #0x00]
    ldr r0, _08040D58 @ =0x0000FFF7
    ands r0, r1
    strh r0, [r5, #0x00]
    ldrh r0, [r3, #0x00]
    subs r0, #0x01
    strh r0, [r3, #0x00]
    adds r0, r4, #0x0
    adds r0, #0xBC
    str r2, [r0, #0x00]
    subs r0, #0x6E
    strh r2, [r0, #0x00]
    adds r0, #0x02
    strh r2, [r0, #0x00]
_08040CAC:
    adds r0, r4, #0x0
    adds r0, #0x9C
    ldrh r0, [r0, #0x00]
    cmp r0, #0x00
    bne _08040D52
_08040CB6:
    adds r0, r4, #0x0
    adds r0, #0x4E
    movs r2, #0x00
    strh r2, [r0, #0x00]
    adds r0, #0x02
    strh r2, [r0, #0x00]
    adds r1, r4, #0x0
    adds r1, #0x52
    movs r0, #0xBC
    lsls r0, r0, #0x02
    strh r0, [r1, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    str r0, [r4, #0x08]
    movs r0, #0x80
    lsls r0, r0, #0x08
    strh r0, [r5, #0x00]
    adds r0, r4, #0x0
    adds r0, #0x78
    movs r1, #0x01
    strb r1, [r0, #0x00]
    adds r0, #0x0C
    strb r1, [r0, #0x00]
    adds r1, r4, #0x0
    adds r1, #0x7E
    movs r0, #0x0C
    strb r0, [r1, #0x00]
    adds r0, r4, #0x0
    adds r0, #0x80
    strh r2, [r0, #0x00]
    adds r0, #0x02
    strh r2, [r0, #0x00]
    adds r0, #0x3E
    str r2, [r0, #0x00]
    adds r1, #0x3E
    movs r0, #0xF8
    lsls r0, r0, #0x11
    str r0, [r1, #0x00]
    ldr r1, [r4, #0x00]
    cmp r1, #0x00
    bge _08040D0C
    ldr r0, _08040D5C @ =0x0000FFFF
    adds r1, r1, r0
_08040D0C:
    lsrs r1, r1, #0x10
    ldr r2, [r4, #0x04]
    cmp r2, #0x00
    bge _08040D18
    ldr r3, _08040D5C @ =0x0000FFFF
    adds r2, r2, r3
_08040D18:
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    asrs r2, r2, #0x10
    adds r0, r7, #0x0
    movs r3, #0x00
    bl sub_803285C
    adds r1, r4, #0x0
    adds r1, #0x7C
    strh r0, [r1, #0x00]
    adds r2, r4, #0x0
    adds r2, #0x7A
    strh r0, [r2, #0x00]
    ldrh r0, [r1, #0x00]
    subs r1, #0x26
    strh r0, [r1, #0x00]
    ldr r1, _08040D60 @ =0x00000814
    adds r0, r6, r1
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _08040D52
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08040D52
    ldr r0, _08040D64 @ =0x0000017D
    bl m4aSongNumStart
_08040D52:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08040D58: .4byte 0x0000FFF7
_08040D5C: .4byte 0x0000FFFF
_08040D60: .4byte 0x00000814
_08040D64: .4byte 0x0000017D
    thumb_func_start sub_8040D68
sub_8040D68:
    adds r2, r0, #0x0
    ldr r1, [r2, #0x00]
    adds r0, #0x4E
    movs r3, #0x00
    ldsh r0, [r0, r3]
    lsls r0, r0, #0x08
    adds r1, r1, r0
    str r1, [r2, #0x00]
    ldr r1, [r2, #0x04]
    adds r0, r2, #0x0
    adds r0, #0x50
    movs r3, #0x00
    ldsh r0, [r0, r3]
    lsls r0, r0, #0x08
    adds r1, r1, r0
    str r1, [r2, #0x04]
    bx lr
    .byte 0x00, 0x00, 0x00, 0xB5, 0x0F, 0x48, 0x0F, 0x49, 0x40, 0x18, 0x02, 0x68, 0x90, 0x6C, 0x20, 0x21
    .byte 0x08, 0x40, 0x00, 0x28, 0x12, 0xD1, 0x0C, 0x4B, 0x10, 0x1C, 0x4C, 0x30, 0x00, 0x78, 0x07, 0x21
    .byte 0x01, 0x40, 0x10, 0x1C, 0x58, 0x30, 0x02, 0x88, 0x10, 0x20, 0x10, 0x40, 0x89, 0x00, 0x00, 0x28
    .byte 0x00, 0xD1, 0x02, 0x31, 0xC8, 0x18, 0x00, 0x88, 0x1F, 0xF0, 0xAD, 0xF8, 0x01, 0xBC, 0x00, 0x47
    .byte 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x88, 0xCC, 0x0E, 0x08
    thumb_func_start sub_8040DD8
sub_8040DD8:
    mov r12, r0
    mov r3, r12
    adds r3, #0x92
    movs r0, #0x00
    ldsh r2, [r3, r0]
    ldr r0, _08040E08 @ =0x000005BF
    cmp r2, r0
    ble _08040E10
    adds r3, #0x20
    ldrh r1, [r3, #0x00]
    ldr r0, _08040E0C @ =0x0000FFFE
    ands r0, r1
    strh r0, [r3, #0x00]
    mov r2, r12
    adds r2, #0xB4
    ldrh r0, [r2, #0x00]
    movs r1, #0x01
    orrs r0, r1
    strh r0, [r2, #0x00]
    ldrh r1, [r3, #0x00]
    movs r0, #0x02
    orrs r0, r1
    b _08040E7E
    .byte 0x00, 0x00
_08040E08: .4byte 0x000005BF
_08040E0C: .4byte 0x0000FFFE
_08040E10:
    ldr r0, _08040E3C @ =0x000003BF
    cmp r2, r0
    bgt _08040E60
    movs r2, #0x00
    ldsh r0, [r3, r2]
    cmp r0, r1
    blt _08040E60
    mov r0, r12
    adds r0, #0x96
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _08040E40
    mov r0, r12
    adds r0, #0xB2
    ldrh r2, [r0, #0x00]
    movs r1, #0x01
    orrs r1, r2
    b _08040E4A
    .byte 0x00, 0x00
_08040E3C: .4byte 0x000003BF
_08040E40:
    mov r0, r12
    adds r0, #0xB2
    ldrh r2, [r0, #0x00]
    ldr r1, _08040E5C @ =0x0000FFFE
    ands r1, r2
_08040E4A:
    strh r1, [r0, #0x00]
    adds r3, r0, #0x0
    mov r2, r12
    adds r2, #0xB4
    ldrh r1, [r2, #0x00]
    ldr r0, _08040E5C @ =0x0000FFFE
    ands r0, r1
    strh r0, [r2, #0x00]
    b _08040E78
_08040E5C: .4byte 0x0000FFFE
_08040E60:
    mov r3, r12
    adds r3, #0xB2
    ldrh r2, [r3, #0x00]
    ldr r1, _08040E84 @ =0x0000FFFE
    adds r0, r1, #0x0
    ands r0, r2
    strh r0, [r3, #0x00]
    mov r2, r12
    adds r2, #0xB4
    ldrh r0, [r2, #0x00]
    ands r1, r0
    strh r1, [r2, #0x00]
_08040E78:
    ldrh r1, [r3, #0x00]
    ldr r0, _08040E88 @ =0x0000FFFD
    ands r0, r1
_08040E7E:
    strh r0, [r3, #0x00]
    bx lr
    .byte 0x00, 0x00
_08040E84: .4byte 0x0000FFFE
_08040E88: .4byte 0x0000FFFD
    thumb_func_start sub_8040E8C
sub_8040E8C:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    adds r5, r4, #0x0
    adds r5, #0x96
    strh r1, [r5, #0x00]
    movs r1, #0xE0
    lsls r1, r1, #0x01
    bl sub_8040DD8
    ldrh r1, [r5, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _08040EC8
    adds r0, r4, #0x0
    adds r0, #0x98
    ldrh r0, [r0, #0x00]
    adds r3, r4, #0x0
    adds r3, #0x92
    cmp r0, #0x00
    bne _08040F0C
    ldr r1, _08040EC4 @ =0xFFFFFF00
    adds r0, r1, #0x0
    ldrh r2, [r3, #0x00]
    adds r0, r0, r2
    strh r0, [r3, #0x00]
    b _08040F0C
_08040EC4: .4byte 0xFFFFFF00
_08040EC8:
    adds r5, r4, #0x0
    adds r5, #0x98
    ldrh r0, [r5, #0x00]
    cmp r0, #0x00
    bne _08040EF0
    adds r0, r4, #0x0
    adds r0, #0x92
    ldrh r1, [r0, #0x00]
    adds r1, #0x20
    strh r1, [r0, #0x00]
    lsls r1, r1, #0x10
    ldr r2, _08040EEC @ =0x0FBF0000
    adds r3, r0, #0x0
    cmp r1, r2
    ble _08040F1A
    ldrh r0, [r5, #0x00]
    subs r0, #0x01
    b _08040F0A
_08040EEC: .4byte 0x0FBF0000
_08040EF0:
    adds r0, r4, #0x0
    adds r0, #0x92
    ldr r2, _08040F2C @ =0xFFFFFE00
    adds r1, r2, #0x0
    ldrh r2, [r0, #0x00]
    adds r1, r1, r2
    strh r1, [r0, #0x00]
    lsls r1, r1, #0x10
    ldr r2, _08040F30 @ =0x0DBF0000
    adds r3, r0, #0x0
    cmp r1, r2
    bgt _08040F0C
    movs r0, #0x00
_08040F0A:
    strh r0, [r5, #0x00]
_08040F0C:
    movs r0, #0x00
    ldsh r1, [r3, r0]
    ldr r0, _08040F34 @ =0x00000FBF
    cmp r1, r0
    ble _08040F1A
    adds r0, #0x01
    strh r0, [r3, #0x00]
_08040F1A:
    movs r1, #0x00
    ldsh r0, [r3, r1]
    cmp r0, #0x00
    bge _08040F26
    movs r0, #0x00
    strh r0, [r3, #0x00]
_08040F26:
    pop {r4, r5}
    pop {r0}
    bx r0
_08040F2C: .4byte 0xFFFFFE00
_08040F30: .4byte 0x0DBF0000
_08040F34: .4byte 0x00000FBF
    thumb_func_start sub_8040F38
sub_8040F38:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    movs r1, #0xE0
    lsls r1, r1, #0x01
    bl sub_8040DD8
    adds r0, r4, #0x0
    adds r0, #0x96
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _08040F74
    adds r0, r4, #0x0
    adds r0, #0x98
    ldrh r0, [r0, #0x00]
    adds r3, r4, #0x0
    adds r3, #0x92
    cmp r0, #0x00
    bne _08040FC0
    ldr r1, _08040F70 @ =0xFFFFF800
    adds r0, r1, #0x0
    ldrh r2, [r3, #0x00]
    adds r0, r0, r2
    strh r0, [r3, #0x00]
    b _08040FC0
    .byte 0x00, 0x00
_08040F70: .4byte 0xFFFFF800
_08040F74:
    adds r5, r4, #0x0
    adds r5, #0x98
    ldrh r0, [r5, #0x00]
    cmp r0, #0x00
    bne _08040FA4
    adds r0, r4, #0x0
    adds r0, #0x92
    movs r2, #0x80
    lsls r2, r2, #0x01
    adds r1, r2, #0x0
    ldrh r2, [r0, #0x00]
    adds r1, r1, r2
    strh r1, [r0, #0x00]
    lsls r1, r1, #0x10
    ldr r2, _08040FA0 @ =0x0FBF0000
    adds r3, r0, #0x0
    cmp r1, r2
    ble _08040FCE
    ldrh r0, [r5, #0x00]
    subs r0, #0x01
    b _08040FBE
    .byte 0x00, 0x00
_08040FA0: .4byte 0x0FBF0000
_08040FA4:
    adds r0, r4, #0x0
    adds r0, #0x92
    ldr r2, _08040FE0 @ =0xFFFFF000
    adds r1, r2, #0x0
    ldrh r2, [r0, #0x00]
    adds r1, r1, r2
    strh r1, [r0, #0x00]
    lsls r1, r1, #0x10
    ldr r2, _08040FE4 @ =0x0DBF0000
    adds r3, r0, #0x0
    cmp r1, r2
    bgt _08040FC0
    movs r0, #0x00
_08040FBE:
    strh r0, [r5, #0x00]
_08040FC0:
    movs r0, #0x00
    ldsh r1, [r3, r0]
    ldr r0, _08040FE8 @ =0x00000FBF
    cmp r1, r0
    ble _08040FCE
    adds r0, #0x01
    strh r0, [r3, #0x00]
_08040FCE:
    movs r1, #0x00
    ldsh r0, [r3, r1]
    cmp r0, #0x00
    bge _08040FDA
    movs r0, #0x00
    strh r0, [r3, #0x00]
_08040FDA:
    pop {r4, r5}
    pop {r0}
    bx r0
_08040FE0: .4byte 0xFFFFF000
_08040FE4: .4byte 0x0DBF0000
_08040FE8: .4byte 0x00000FBF
    thumb_func_start sub_8040FEC
sub_8040FEC:
    push {r4, r5, r6, lr}
    adds r3, r0, #0x0
    adds r0, #0x78
    ldrb r2, [r0, #0x00]
    cmp r2, #0x01
    bne _08040FFA
    b _0804113C
_08040FFA:
    cmp r2, #0x02
    bne _08041000
    b _0804113C
_08041000:
    cmp r2, #0x03
    bne _08041006
    b _0804113C
_08041006:
    cmp r2, #0x04
    bne _0804100C
    b _0804113C
_0804100C:
    cmp r2, #0x05
    bne _08041012
    b _0804113C
_08041012:
    cmp r2, #0x06
    bne _08041018
    b _0804113C
_08041018:
    cmp r2, #0x07
    bne _08041024
    adds r0, r3, #0x0
    bl sub_8040F38
    b _0804113C
_08041024:
    ldr r0, _08041078 @ =0x03002E20
    movs r1, #0x80
    lsls r1, r1, #0x04
    adds r0, r0, r1
    ldrb r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    ldr r1, _0804107C @ =0x080EC94C
    adds r4, r0, r1
    cmp r2, #0x08
    beq _0804105C
    adds r0, r3, #0x0
    adds r0, #0x7E
    ldrb r0, [r0, #0x00]
    cmp r0, #0x0D
    beq _0804105C
    subs r0, #0x05
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x02
    bhi _08041080
    adds r0, r3, #0x0
    adds r0, #0xB8
    movs r2, #0x00
    ldsh r0, [r0, r2]
    cmp r0, #0x00
    bne _08041080
_0804105C:
    adds r1, r3, #0x0
    adds r1, #0x92
    movs r3, #0x06
    ldsh r0, [r4, r3]
    lsls r0, r0, #0x03
    ldrh r5, [r1, #0x00]
    adds r0, r0, r5
    strh r0, [r1, #0x00]
    lsls r0, r0, #0x10
    cmp r0, #0x00
    bge _0804113C
    movs r0, #0x00
    strh r0, [r1, #0x00]
    b _0804113C
_08041078: .4byte 0x03002E20
_0804107C: .4byte 0x080EC94C
_08041080:
    adds r0, r3, #0x0
    adds r0, #0x96
    ldrh r0, [r0, #0x00]
    movs r1, #0xC0
    lsls r1, r1, #0x08
    ands r1, r0
    movs r0, #0x80
    lsls r0, r0, #0x08
    cmp r1, r0
    bne _0804109E
    adds r0, r3, #0x0
    adds r0, #0x64
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    beq _080410AA
_0804109E:
    adds r1, r3, #0x0
    adds r1, #0x92
    ldrh r0, [r4, #0x04]
    ldrh r6, [r1, #0x00]
    adds r0, r0, r6
    b _080410F6
_080410AA:
    adds r0, r3, #0x0
    adds r0, #0x86
    ldrb r0, [r0, #0x00]
    cmp r0, #0x09
    bhi _080410FC
    adds r0, r3, #0x0
    adds r0, #0xB4
    ldrh r1, [r0, #0x00]
    movs r0, #0x04
    ands r0, r1
    cmp r0, #0x00
    beq _080410EC
    adds r0, r3, #0x0
    adds r0, #0x92
    movs r1, #0x00
    ldsh r2, [r0, r1]
    movs r3, #0x00
    ldsh r1, [r4, r3]
    ldr r5, _080410E0 @ =0xFFFFFE00
    adds r1, r1, r5
    adds r3, r0, #0x0
    cmp r2, r1
    blt _080410E4
    ldrh r0, [r4, #0x08]
    ldrh r6, [r3, #0x00]
    adds r0, r0, r6
    b _0804111C
_080410E0: .4byte 0xFFFFFE00
_080410E4:
    ldrh r0, [r4, #0x02]
    ldrh r1, [r3, #0x00]
    adds r0, r0, r1
    b _0804111C
_080410EC:
    adds r1, r3, #0x0
    adds r1, #0x92
    ldrh r0, [r4, #0x02]
    ldrh r2, [r1, #0x00]
    adds r0, r0, r2
_080410F6:
    strh r0, [r1, #0x00]
    adds r3, r1, #0x0
    b _0804111E
_080410FC:
    movs r5, #0x00
    ldsh r0, [r4, r5]
    adds r3, #0x92
    cmp r0, #0x00
    bge _08041108
    adds r0, #0x03
_08041108:
    ldrh r2, [r3, #0x00]
    movs r6, #0x00
    ldsh r1, [r3, r6]
    asrs r0, r0, #0x02
    cmp r1, r0
    blt _08041118
    ldrh r0, [r4, #0x06]
    b _0804111A
_08041118:
    ldrh r0, [r4, #0x02]
_0804111A:
    adds r0, r2, r0
_0804111C:
    strh r0, [r3, #0x00]
_0804111E:
    adds r2, r3, #0x0
    movs r0, #0x00
    ldsh r1, [r2, r0]
    ldrh r5, [r4, #0x00]
    movs r6, #0x00
    ldsh r0, [r4, r6]
    cmp r1, r0
    blt _08041130
    strh r5, [r2, #0x00]
_08041130:
    movs r1, #0x00
    ldsh r0, [r3, r1]
    cmp r0, #0x00
    bge _0804113C
    movs r0, #0x00
    strh r0, [r3, #0x00]
_0804113C:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_8041144
sub_8041144:
    push {r4, lr}
    adds r2, r0, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0804115A
    movs r0, #0x80
    lsls r0, r0, #0x01
    b _080411C2
_0804115A:
    adds r0, r2, #0x0
    adds r0, #0x92
    movs r1, #0x00
    ldsh r3, [r0, r1]
    movs r1, #0x00
    subs r0, #0x0E
    ldrb r0, [r0, #0x00]
    cmp r0, #0x0C
    bne _08041170
    movs r1, #0x80
    lsls r1, r1, #0x02
_08041170:
    cmp r0, #0x08
    bne _0804117A
    movs r4, #0x80
    lsls r4, r4, #0x02
    adds r1, r1, r4
_0804117A:
    adds r0, r2, #0x0
    adds r0, #0x68
    movs r4, #0x00
    ldsh r0, [r0, r4]
    cmp r0, #0x00
    beq _0804118C
    movs r0, #0x80
    lsls r0, r0, #0x03
    adds r1, r1, r0
_0804118C:
    movs r4, #0xBC
    lsls r4, r4, #0x01
    adds r0, r2, r4
    ldrh r0, [r0, #0x00]
    lsls r0, r0, #0x01
    adds r1, r1, r0
    ldr r0, _080411C8 @ =0xFFFFF000
    adds r2, r3, r0
    adds r0, r2, #0x0
    muls r0, r2
    cmp r0, #0x00
    bge _080411A8
    ldr r3, _080411CC @ =0x00000FFF
    adds r0, r0, r3
_080411A8:
    asrs r0, r0, #0x0C
    muls r0, r2
    cmp r0, #0x00
    bge _080411B4
    ldr r4, _080411CC @ =0x00000FFF
    adds r0, r0, r4
_080411B4:
    asrs r0, r0, #0x0C
    movs r2, #0x80
    lsls r2, r2, #0x05
    adds r1, r1, r2
    adds r0, r0, r1
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
_080411C2:
    pop {r4}
    pop {r1}
    bx r1
_080411C8: .4byte 0xFFFFF000
_080411CC: .4byte 0x00000FFF
    thumb_func_start sub_80411D0
sub_80411D0:
    adds r2, r0, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _080411E4
    movs r0, #0x80
    lsls r0, r0, #0x01
    b _08041238
_080411E4:
    adds r0, r2, #0x0
    adds r0, #0xBC
    ldr r0, [r0, #0x00]
    asrs r3, r0, #0x0F
    movs r1, #0x00
    adds r0, r2, #0x0
    adds r0, #0x84
    ldrb r0, [r0, #0x00]
    cmp r0, #0x08
    bne _080411FC
    movs r1, #0x80
    lsls r1, r1, #0x02
_080411FC:
    adds r0, r2, #0x0
    adds r0, #0x68
    movs r2, #0x00
    ldsh r0, [r0, r2]
    cmp r0, #0x08
    bne _0804120E
    movs r0, #0x80
    lsls r0, r0, #0x03
    adds r1, r1, r0
_0804120E:
    ldr r0, _0804123C @ =0xFFFFF000
    adds r2, r3, r0
    adds r0, r2, #0x0
    muls r0, r2
    cmp r0, #0x00
    bge _0804121E
    ldr r3, _08041240 @ =0x00000FFF
    adds r0, r0, r3
_0804121E:
    asrs r0, r0, #0x0C
    muls r0, r2
    cmp r0, #0x00
    bge _0804122A
    ldr r2, _08041240 @ =0x00000FFF
    adds r0, r0, r2
_0804122A:
    asrs r0, r0, #0x0C
    movs r3, #0x80
    lsls r3, r3, #0x05
    adds r1, r1, r3
    adds r0, r0, r1
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
_08041238:
    bx lr
    .byte 0x00, 0x00
_0804123C: .4byte 0xFFFFF000
_08041240: .4byte 0x00000FFF
    thumb_func_start sub_8041244
sub_8041244:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x004
    adds r6, r0, #0x0
    adds r3, r1, #0x0
    ldr r0, [r6, #0x48]
    movs r5, #0x20
    ands r0, r5
    cmp r0, #0x00
    beq _080412B0
    movs r0, #0xCD
    lsls r0, r0, #0x01
    adds r4, r6, r0
    ldrb r1, [r4, #0x00]
    movs r0, #0x03
    ands r0, r1
    cmp r0, #0x00
    bne _08041270
    b _080416F2
_08041270:
    ldr r2, _080412A4 @ =0x080ECBA8
    adds r0, r6, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    lsls r0, r0, #0x01
    adds r0, r0, r2
    ldrh r0, [r0, #0x00]
    ldr r2, _080412A8 @ =0x08102414
    ldr r1, _080412AC @ =0x08102498
    lsls r0, r0, #0x03
    adds r0, r0, r1
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r0, [r0, #0x00]
    bl m4aMPlayStop
    ldrb r1, [r4, #0x00]
    movs r0, #0xFC
    ands r0, r1
    strb r0, [r4, #0x00]
    b _080416F2
_080412A4: .4byte 0x080ECBA8
_080412A8: .4byte 0x08102414
_080412AC: .4byte 0x08102498
_080412B0:
    ldr r1, _0804133C @ =0x000007D4
    adds r0, r3, r1
    ldrb r1, [r0, #0x00]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0x00
    beq _08041350
    ldr r2, _08041340 @ =0x00000814
    adds r4, r3, r2
    ldr r0, [r4, #0x00]
    cmp r6, r0
    bne _08041300
    ldr r2, _08041344 @ =0x080ECBA8
    adds r0, r6, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    lsls r0, r0, #0x01
    adds r0, r0, r2
    ldrh r0, [r0, #0x00]
    ldr r2, _08041348 @ =0x08102414
    ldr r1, _0804134C @ =0x08102498
    lsls r0, r0, #0x03
    adds r0, r0, r1
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r0, [r0, #0x00]
    bl m4aMPlayStop
    movs r0, #0xCD
    lsls r0, r0, #0x01
    adds r2, r6, r0
    ldrb r1, [r2, #0x00]
    movs r0, #0xFC
    ands r0, r1
    strb r0, [r2, #0x00]
_08041300:
    ldr r0, [r4, #0x00]
    cmp r6, r0
    beq _08041308
    b _080416F2
_08041308:
    ldr r0, [r6, #0x48]
    ands r0, r5
    cmp r0, #0x00
    beq _08041312
    b _080416F2
_08041312:
    ldr r2, _08041348 @ =0x08102414
    ldr r0, _0804134C @ =0x08102498
    movs r1, #0xA1
    lsls r1, r1, #0x03
    adds r0, r0, r1
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r0, [r0, #0x00]
    bl m4aMPlayStop
    movs r0, #0xCD
    lsls r0, r0, #0x01
    adds r2, r6, r0
    ldrb r1, [r2, #0x00]
    movs r0, #0xFC
    ands r0, r1
    movs r1, #0xDF
    b _08041632
_0804133C: .4byte 0x000007D4
_08041340: .4byte 0x00000814
_08041344: .4byte 0x080ECBA8
_08041348: .4byte 0x08102414
_0804134C: .4byte 0x08102498
_08041350:
    adds r0, r6, #0x0
    adds r0, #0x78
    ldrb r1, [r0, #0x00]
    adds r4, r0, #0x0
    cmp r1, #0x03
    bne _0804135E
    b _080416F2
_0804135E:
    cmp r1, #0x04
    bne _080413E0
    movs r1, #0xCD
    lsls r1, r1, #0x01
    adds r0, r6, r1
    ldrb r1, [r0, #0x00]
    adds r0, r5, #0x0
    ands r0, r1
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    cmp r2, #0x00
    beq _08041378
    b _080416F2
_08041378:
    ldr r1, _080413D0 @ =0x00000814
    adds r0, r3, r1
    ldr r1, [r0, #0x00]
    adds r0, r6, #0x0
    adds r0, #0x92
    strh r2, [r0, #0x00]
    adds r0, #0x02
    strh r2, [r0, #0x00]
    cmp r6, r1
    beq _0804138E
    b _080416F2
_0804138E:
    ldr r0, [r6, #0x48]
    ands r0, r5
    cmp r0, #0x00
    beq _08041398
    b _080416F2
_08041398:
    ldr r0, _080413D4 @ =0x080ECBA8
    ldrh r0, [r0, #0x00]
    ldr r2, _080413D8 @ =0x08102414
    ldr r1, _080413DC @ =0x08102498
    lsls r0, r0, #0x03
    adds r0, r0, r1
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r0, [r0, #0x00]
    bl m4aMPlayStop
    movs r0, #0xA1
    bl m4aSongNumStart
    movs r0, #0xCD
    lsls r0, r0, #0x01
    adds r2, r6, r0
    ldrb r1, [r2, #0x00]
    movs r0, #0xFC
    ands r0, r1
    movs r1, #0x20
    orrs r0, r1
    strb r0, [r2, #0x00]
    b _080416F2
    .byte 0x00, 0x00
_080413D0: .4byte 0x00000814
_080413D4: .4byte 0x080ECBA8
_080413D8: .4byte 0x08102414
_080413DC: .4byte 0x08102498
_080413E0:
    cmp r1, #0x05
    bne _080413E6
    b _080416F2
_080413E6:
    cmp r1, #0x06
    bne _080413EC
    b _080416F2
_080413EC:
    adds r2, r6, #0x0
    adds r2, #0x4C
    ldrb r1, [r2, #0x00]
    movs r3, #0x08
    adds r0, r3, #0x0
    ands r0, r1
    mov r10, r2
    cmp r0, #0x00
    beq _08041430
    ldr r0, [r6, #0x08]
    cmp r0, #0x00
    beq _08041406
    b _080416F2
_08041406:
    movs r1, #0xCD
    lsls r1, r1, #0x01
    adds r0, r6, r1
    ldrb r1, [r0, #0x00]
    movs r0, #0x04
    ands r0, r1
    cmp r0, #0x00
    beq _0804141E
    movs r0, #0x62
    bl m4aSongNumStart
    b _080416F2
_0804141E:
    adds r0, r3, #0x0
    ands r0, r1
    cmp r0, #0x00
    bne _08041428
    b _080416F2
_08041428:
    movs r0, #0x61
    bl m4aSongNumStart
    b _080416F2
_08041430:
    adds r0, r6, #0x0
    bl sub_8041144
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    adds r0, r6, #0x0
    adds r0, #0x94
    movs r2, #0x00
    ldsh r1, [r0, r2]
    adds r7, r0, #0x0
    cmp r1, #0x00
    bgt _0804147C
    lsls r0, r5, #0x10
    asrs r0, r0, #0x18
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    cmp r0, #0x00
    bge _08041456
    movs r3, #0x00
_08041456:
    lsls r0, r3, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x0F
    ble _08041460
    movs r3, #0x0F
_08041460:
    ldr r2, _08041478 @ =0x080EC970
    mov r1, r10
    ldrb r0, [r1, #0x00]
    movs r1, #0x07
    ands r1, r0
    lsls r0, r3, #0x10
    asrs r0, r0, #0x0E
    lsls r1, r1, #0x06
    adds r0, r0, r1
    adds r0, r0, r2
    ldrh r2, [r0, #0x00]
    b _080414C0
_08041478: .4byte 0x080EC970
_0804147C:
    lsls r0, r5, #0x10
    asrs r0, r0, #0x18
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    cmp r0, #0x00
    bge _0804148A
    movs r3, #0x00
_0804148A:
    lsls r0, r3, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x0F
    ble _08041494
    movs r3, #0x0F
_08041494:
    ldr r2, _080415A4 @ =0x080EC970
    mov r1, r10
    ldrb r0, [r1, #0x00]
    movs r1, #0x07
    ands r1, r0
    lsls r0, r3, #0x10
    asrs r0, r0, #0x0E
    lsls r1, r1, #0x06
    adds r0, r0, r1
    adds r0, r0, r2
    ldrh r1, [r0, #0x00]
    movs r2, #0x00
    ldsh r0, [r7, r2]
    muls r1, r0
    ldr r0, _080415A8 @ =0x00000155
    muls r0, r1
    cmp r0, #0x00
    bge _080414BC
    ldr r1, _080415AC @ =0x00007FFF
    adds r0, r0, r1
_080414BC:
    lsls r0, r0, #0x01
    lsrs r2, r0, #0x10
_080414C0:
    ldr r0, _080415B0 @ =0x03002E20
    adds r3, r0, #0x0
    adds r3, #0x24
    ldrb r0, [r4, #0x00]
    cmp r0, #0x02
    bne _080414EC
    adds r0, r6, #0x0
    adds r0, #0x9C
    ldrh r0, [r0, #0x00]
    muls r0, r2
    cmp r0, #0x00
    bge _080414DA
    adds r0, #0x3F
_080414DA:
    lsls r0, r0, #0x0A
    lsrs r5, r0, #0x10
    adds r2, r5, #0x0
    lsls r0, r2, #0x10
    asrs r1, r0, #0x10
    lsrs r0, r0, #0x1F
    adds r1, r1, r0
    lsls r1, r1, #0x0F
    lsrs r5, r1, #0x10
_080414EC:
    mov r8, r10
    mov r0, r8
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    lsls r0, r0, #0x01
    ldr r1, _080415B4 @ =0x080ECBA8
    adds r0, r0, r1
    ldrh r0, [r0, #0x00]
    ldr r1, _080415B8 @ =0x08102414
    mov r9, r1
    ldr r4, _080415BC @ =0x08102498
    lsls r0, r0, #0x03
    adds r0, r0, r4
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r9
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    str r3, [sp, #0x000]
    bl m4aMPlayVolumeControl
    mov r2, r8
    ldrb r1, [r2, #0x00]
    movs r0, #0x07
    ands r0, r1
    lsls r0, r0, #0x01
    ldr r1, _080415B4 @ =0x080ECBA8
    adds r0, r0, r1
    ldrh r0, [r0, #0x00]
    lsls r0, r0, #0x03
    adds r0, r0, r4
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r9
    ldr r0, [r0, #0x00]
    lsls r2, r5, #0x10
    asrs r2, r2, #0x10
    movs r1, #0x01
    bl m4aMPlayPitchControl
    adds r0, r6, #0x0
    adds r0, #0x7E
    ldrb r0, [r0, #0x00]
    ldr r3, [sp, #0x000]
    cmp r0, #0x0D
    bne _080415C8
    movs r2, #0xCD
    lsls r2, r2, #0x01
    adds r0, r6, r2
    ldrb r1, [r0, #0x00]
    movs r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    beq _08041564
    b _080416F2
_08041564:
    ldr r1, _080415C0 @ =0x00000814
    adds r0, r3, r1
    ldr r0, [r0, #0x00]
    cmp r6, r0
    bne _0804159E
    ldr r0, [r6, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0804159E
    ldr r2, _080415C4 @ =0x080ECB88
    mov r0, r8
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    lsls r0, r0, #0x01
    adds r0, r0, r2
    ldrh r0, [r0, #0x00]
    bl m4aSongNumStart
    movs r1, #0xCD
    lsls r1, r1, #0x01
    adds r2, r6, r1
    ldrb r1, [r2, #0x00]
    movs r0, #0xFE
    ands r0, r1
    movs r1, #0x02
    orrs r0, r1
    strb r0, [r2, #0x00]
_0804159E:
    movs r0, #0x00
    b _080416F0
    .byte 0x00, 0x00
_080415A4: .4byte 0x080EC970
_080415A8: .4byte 0x00000155
_080415AC: .4byte 0x00007FFF
_080415B0: .4byte 0x03002E20
_080415B4: .4byte 0x080ECBA8
_080415B8: .4byte 0x08102414
_080415BC: .4byte 0x08102498
_080415C0: .4byte 0x00000814
_080415C4: .4byte 0x080ECB88
_080415C8:
    movs r2, #0xC6
    lsls r2, r2, #0x04
    adds r0, r3, r2
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    bne _080415D6
    b _080416F2
_080415D6:
    adds r0, r6, #0x0
    adds r0, #0x96
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _08041640
    movs r0, #0x00
    strh r0, [r7, #0x00]
    movs r1, #0xCD
    lsls r1, r1, #0x01
    adds r0, r6, r1
    ldrb r1, [r0, #0x00]
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _080415FC
    b _080416F2
_080415FC:
    ldr r2, _08041638 @ =0x00000814
    adds r0, r3, r2
    ldr r0, [r0, #0x00]
    cmp r6, r0
    bne _080416F2
    ldr r0, [r6, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _080416F2
    mov r0, r8
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    lsls r0, r0, #0x01
    ldr r1, _0804163C @ =0x080ECBA8
    adds r0, r0, r1
    ldrh r0, [r0, #0x00]
    bl m4aSongNumStart
    movs r0, #0xCD
    lsls r0, r0, #0x01
    adds r2, r6, r0
    ldrb r1, [r2, #0x00]
    movs r0, #0x01
    orrs r0, r1
    movs r1, #0xFD
_08041632:
    ands r0, r1
    strb r0, [r2, #0x00]
    b _080416F2
_08041638: .4byte 0x00000814
_0804163C: .4byte 0x080ECBA8
_08041640:
    movs r1, #0xCD
    lsls r1, r1, #0x01
    adds r0, r6, r1
    ldrb r1, [r0, #0x00]
    movs r4, #0x02
    movs r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    bne _080416E4
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _0804169C
    movs r2, #0x00
    ldsh r0, [r7, r2]
    cmp r0, #0x00
    bne _08041666
    movs r0, #0x60
    strh r0, [r7, #0x00]
_08041666:
    ldrh r1, [r7, #0x00]
    movs r2, #0x00
    ldsh r0, [r7, r2]
    cmp r0, #0x00
    ble _08041674
    subs r0, r1, #0x1
    strh r0, [r7, #0x00]
_08041674:
    movs r0, #0x00
    ldsh r1, [r7, r0]
    cmp r1, #0x20
    bne _080416F2
    ldr r2, _08041694 @ =0x00000814
    adds r0, r3, r2
    ldr r0, [r0, #0x00]
    cmp r6, r0
    bne _080416F2
    ldr r0, [r6, #0x48]
    ands r0, r1
    cmp r0, #0x00
    bne _080416F2
    ldr r2, _08041698 @ =0x080ECB88
    mov r0, r8
    b _080416B8
_08041694: .4byte 0x00000814
_08041698: .4byte 0x080ECB88
_0804169C:
    ldr r2, _080416DC @ =0x00000814
    adds r0, r3, r2
    ldr r0, [r0, #0x00]
    cmp r6, r0
    bne _080416F2
    ldr r0, [r6, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _080416F2
    movs r0, #0x60
    strh r0, [r7, #0x00]
    ldr r2, _080416E0 @ =0x080ECB98
    mov r0, r10
_080416B8:
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    lsls r0, r0, #0x01
    adds r0, r0, r2
    ldrh r0, [r0, #0x00]
    bl m4aSongNumStart
    movs r1, #0xCD
    lsls r1, r1, #0x01
    adds r2, r6, r1
    ldrb r1, [r2, #0x00]
    movs r0, #0xFE
    ands r0, r1
    orrs r0, r4
    strb r0, [r2, #0x00]
    b _080416F2
    .byte 0x00, 0x00
_080416DC: .4byte 0x00000814
_080416E0: .4byte 0x080ECB98
_080416E4:
    ldrh r1, [r7, #0x00]
    movs r2, #0x00
    ldsh r0, [r7, r2]
    cmp r0, #0x5F
    bgt _080416F2
    adds r0, r1, #0x1
_080416F0:
    strh r0, [r7, #0x00]
_080416F2:
    add sp, #0x004
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_8041704
sub_8041704:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    adds r6, r1, #0x0
    ldr r2, [r4, #0x48]
    movs r3, #0x80
    lsls r3, r3, #0x07
    adds r0, r2, #0x0
    ands r0, r3
    cmp r0, #0x00
    beq _0804171A
    b _080418A4
_0804171A:
    movs r0, #0x20
    ands r0, r2
    cmp r0, #0x00
    bne _080417DA
    adds r0, r4, #0x0
    adds r0, #0x78
    ldrb r1, [r0, #0x00]
    adds r7, r0, #0x0
    cmp r1, #0x04
    bne _08041730
    b _080418A4
_08041730:
    adds r5, r4, #0x0
    adds r5, #0x96
    ldrh r1, [r5, #0x00]
    adds r0, r3, #0x0
    ands r0, r1
    cmp r0, #0x00
    bne _08041740
    b _08041868
_08041740:
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _080417C4
    adds r0, r4, #0x0
    adds r0, #0x7E
    ldrb r0, [r0, #0x00]
    cmp r0, #0x0F
    bne _080417C4
    ldr r1, _080417B8 @ =0x000007D4
    adds r0, r6, r1
    ldrb r1, [r0, #0x00]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0x00
    bne _080417C4
    movs r0, #0xCD
    lsls r0, r0, #0x01
    adds r2, r4, r0
    ldrb r1, [r2, #0x00]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    bne _08041788
    movs r0, #0x10
    orrs r0, r1
    strb r0, [r2, #0x00]
    movs r0, #0xA4
    bl m4aSongNumStart
    ldr r0, [r4, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x0B
    orrs r0, r1
    str r0, [r4, #0x48]
_08041788:
    ldrh r1, [r5, #0x00]
    movs r0, #0xC0
    lsls r0, r0, #0x02
    ands r0, r1
    movs r2, #0x80
    lsls r2, r2, #0x01
    cmp r0, #0x00
    beq _0804179A
    adds r2, #0xDE
_0804179A:
    ldr r3, _080417BC @ =0x08102414
    ldr r0, _080417C0 @ =0x08102498
    movs r1, #0xA4
    lsls r1, r1, #0x03
    adds r0, r0, r1
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r3
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    bl m4aMPlayVolumeControl
    b _080418A4
_080417B8: .4byte 0x000007D4
_080417BC: .4byte 0x08102414
_080417C0: .4byte 0x08102498
_080417C4:
    movs r0, #0xCD
    lsls r0, r0, #0x01
    adds r5, r4, r0
    ldrb r1, [r5, #0x00]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    beq _080417E2
    movs r0, #0xEF
    ands r0, r1
    strb r0, [r5, #0x00]
_080417DA:
    movs r0, #0xA4
    bl m4aSongNumStop
    b _080418A4
_080417E2:
    adds r0, r4, #0x0
    adds r0, #0xBC
    ldr r1, [r0, #0x00]
    cmp r1, #0x00
    ble _080417F2
    ldrb r0, [r7, #0x00]
    cmp r0, #0x00
    beq _08041834
_080417F2:
    ldr r0, [r4, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x0B
    ands r0, r1
    cmp r0, #0x00
    beq _080418A4
    ldr r0, _08041824 @ =0x080ECB70
    ldrh r0, [r0, #0x00]
    ldr r2, _08041828 @ =0x08102414
    ldr r1, _0804182C @ =0x08102498
    lsls r0, r0, #0x03
    adds r0, r0, r1
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r0, [r0, #0x00]
    bl m4aMPlayStop
    ldr r0, [r4, #0x48]
    ldr r1, _08041830 @ =0xFFFBFFFF
    ands r0, r1
    b _08041858
    .byte 0x00, 0x00
_08041824: .4byte 0x080ECB70
_08041828: .4byte 0x08102414
_0804182C: .4byte 0x08102498
_08041830: .4byte 0xFFFBFFFF
_08041834:
    ldr r0, [r4, #0x48]
    movs r6, #0x80
    lsls r6, r6, #0x0B
    ands r0, r6
    cmp r0, #0x00
    bne _080418A4
    ldr r2, _08041864 @ =0x080ECB70
    asrs r0, r1, #0x18
    cmp r0, #0x03
    ble _0804184A
    movs r0, #0x03
_0804184A:
    lsls r0, r0, #0x01
    adds r0, r0, r2
    ldrh r0, [r0, #0x00]
    bl m4aSongNumStart
    ldr r0, [r4, #0x48]
    orrs r0, r6
_08041858:
    str r0, [r4, #0x48]
    ldrb r1, [r5, #0x00]
    movs r0, #0xEF
    ands r0, r1
    strb r0, [r5, #0x00]
    b _080418A4
_08041864: .4byte 0x080ECB70
_08041868:
    movs r0, #0x80
    lsls r0, r0, #0x0B
    ands r2, r0
    cmp r2, #0x00
    beq _080418A4
    ldr r0, _080418AC @ =0x080ECB70
    ldrh r0, [r0, #0x00]
    ldr r2, _080418B0 @ =0x08102414
    ldr r1, _080418B4 @ =0x08102498
    lsls r0, r0, #0x03
    adds r0, r0, r1
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r0, [r0, #0x00]
    bl m4aMPlayStop
    ldr r0, [r4, #0x48]
    ldr r1, _080418B8 @ =0xFFFBFFFF
    ands r0, r1
    str r0, [r4, #0x48]
    movs r1, #0xCD
    lsls r1, r1, #0x01
    adds r2, r4, r1
    ldrb r1, [r2, #0x00]
    movs r0, #0xEF
    ands r0, r1
    strb r0, [r2, #0x00]
_080418A4:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_080418AC: .4byte 0x080ECB70
_080418B0: .4byte 0x08102414
_080418B4: .4byte 0x08102498
_080418B8: .4byte 0xFFFBFFFF
    thumb_func_start sub_80418BC
sub_80418BC:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    adds r5, r0, #0x0
    movs r0, #0x80
    lsls r0, r0, #0x0B
    mov r8, r0
    ldr r1, _08041968 @ =0x00000824
    adds r2, r5, r1
    ldr r6, _0804196C @ =0x00000814
    adds r0, r5, r6
    ldr r0, [r0, #0x00]
    mov r10, r0
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _080419B6
    ldr r0, [r2, #0x18]
    mov r9, r0
    ldr r2, [r2, #0x1C]
    mov r12, r2
    movs r1, #0xFE
    lsls r1, r1, #0x03
    adds r0, r5, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0804194A
    ldr r7, _08041970 @ =0x0000FFFF
    ldr r2, _08041974 @ =0x000007F4
    adds r3, r5, r2
    adds r4, r0, #0x0
_08041900:
    ldr r2, [r3, #0x00]
    cmp r2, r10
    beq _08041942
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r6, #0x00
    ldsh r0, [r0, r6]
    cmp r0, #0x00
    beq _08041942
    ldr r0, [r2, #0x00]
    mov r6, r9
    subs r1, r6, r0
    cmp r1, #0x00
    bge _0804191E
    adds r1, r1, r7
_0804191E:
    asrs r1, r1, #0x10
    ldr r0, [r2, #0x04]
    mov r2, r12
    subs r0, r2, r0
    cmp r0, #0x00
    bge _0804192C
    adds r0, r0, r7
_0804192C:
    asrs r0, r0, #0x10
    adds r6, r1, #0x0
    muls r6, r1
    adds r1, r6, #0x0
    adds r2, r0, #0x0
    muls r2, r0
    adds r0, r2, #0x0
    adds r0, r1, r0
    cmp r0, r8
    bge _08041942
    mov r8, r0
_08041942:
    adds r3, #0x04
    subs r4, #0x01
    cmp r4, #0x00
    bne _08041900
_0804194A:
    ldr r0, _08041978 @ =0x00007FFF
    cmp r8, r0
    bgt _080419B6
    ldr r6, _0804197C @ =0x00000C82
    adds r1, r5, r6
    ldrb r0, [r1, #0x00]
    cmp r0, #0x00
    bne _08041980
    movs r0, #0x18
    strb r0, [r1, #0x00]
    movs r0, #0x88
    bl m4aSongNumStart
    b _08041984
    .byte 0x00, 0x00
_08041968: .4byte 0x00000824
_0804196C: .4byte 0x00000814
_08041970: .4byte 0x0000FFFF
_08041974: .4byte 0x000007F4
_08041978: .4byte 0x00007FFF
_0804197C: .4byte 0x00000C82
_08041980:
    subs r0, #0x01
    strb r0, [r1, #0x00]
_08041984:
    mov r0, r8
    cmp r0, #0x00
    bge _0804198E
    ldr r1, _080419C4 @ =0x000003FF
    adds r0, r0, r1
_0804198E:
    asrs r0, r0, #0x0A
    movs r2, #0x80
    lsls r2, r2, #0x01
    subs r2, r2, r0
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    ldr r3, _080419C8 @ =0x08102414
    ldr r0, _080419CC @ =0x08102498
    movs r6, #0x88
    lsls r6, r6, #0x03
    adds r0, r0, r6
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r3
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    bl m4aMPlayVolumeControl
_080419B6:
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_080419C4: .4byte 0x000003FF
_080419C8: .4byte 0x08102414
_080419CC: .4byte 0x08102498
    thumb_func_start sub_80419D0
sub_80419D0:
    push {r4, lr}
    adds r4, r0, #0x0
    lsls r1, r1, #0x10
    asrs r1, r1, #0x18
    lsls r1, r1, #0x10
    lsrs r3, r1, #0x10
    cmp r1, #0x00
    bge _080419E2
    movs r3, #0x00
_080419E2:
    lsls r0, r3, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x0F
    ble _080419EC
    movs r3, #0x0F
_080419EC:
    ldr r2, _08041A0C @ =0x080EC970
    adds r0, r4, #0x0
    adds r0, #0x4C
    ldrb r0, [r0, #0x00]
    movs r1, #0x07
    ands r1, r0
    lsls r0, r3, #0x10
    asrs r0, r0, #0x0E
    lsls r1, r1, #0x06
    adds r0, r0, r1
    adds r0, r0, r2
    ldrh r0, [r0, #0x00]
    pop {r4}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_08041A0C: .4byte 0x080EC970
    thumb_func_start sub_8041A10
sub_8041A10:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x008
    adds r7, r0, #0x0
    adds r6, r1, #0x0
    ldr r1, _08041A88 @ =0x00000C64
    adds r0, r6, r1
    ldrb r0, [r0, #0x00]
    str r0, [sp, #0x000]
    adds r0, r7, #0x0
    adds r0, #0x91
    ldrb r0, [r0, #0x00]
    adds r0, #0x01
    mov r8, r0
    movs r0, #0x07
    mov r3, r8
    ands r3, r0
    mov r8, r3
    ldr r1, _08041A8C @ =0x000007DC
    adds r0, r6, r1
    ldrb r0, [r0, #0x00]
    str r0, [sp, #0x004]
    adds r0, r6, #0x0
    movs r1, #0x01
    bl sub_804AED4
    adds r2, r0, #0x0
    ldr r0, [r2, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _08041A72
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r3, #0x00
    ldsh r0, [r0, r3]
    cmp r0, #0x00
    beq _08041A66
    b _08041B64
_08041A66:
    adds r0, r7, #0x0
    adds r0, #0xAE
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x06
    bgt _08041B2E
_08041A72:
    mov r3, r8
    cmp r3, #0x01
    bne _08041A94
    adds r0, r7, #0x0
    adds r0, #0xAE
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x02
    bgt _08041B2E
    b _08041B52
    .byte 0x00, 0x00
_08041A88: .4byte 0x00000C64
_08041A8C: .4byte 0x000007DC
_08041A90:
    adds r4, r2, #0x0
    b _08041AD0
_08041A94:
    movs r4, #0x00
    ldr r3, _08041B34 @ =0x000007F1
    adds r0, r6, r3
    movs r1, #0x91
    adds r1, r1, r7
    mov r9, r1
    adds r5, r0, #0x0
    movs r3, #0x90
    adds r3, r3, r7
    mov r10, r3
    ldrb r0, [r5, #0x00]
    cmp r4, r0
    bge _08041ACE
_08041AAE:
    lsls r1, r4, #0x18
    lsrs r1, r1, #0x18
    adds r0, r6, #0x0
    bl sub_804AED4
    adds r2, r0, #0x0
    ldr r0, [r2, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _08041A90
    adds r4, #0x01
    ldrb r1, [r5, #0x00]
    cmp r4, r1
    blt _08041AAE
_08041ACE:
    movs r4, #0x00
_08041AD0:
    ldr r0, _08041B38 @ =0x03002E20
    ldrh r3, [r0, #0x38]
    mov r0, r9
    ldrb r1, [r0, #0x00]
    adds r1, #0x01
    movs r2, #0x07
    ands r1, r2
    adds r0, r4, #0x0
    adds r0, #0x91
    ldrb r0, [r0, #0x00]
    adds r0, #0x01
    ands r0, r2
    subs r1, r1, r0
    adds r2, r3, #0x0
    muls r2, r1
    mov r1, r10
    ldrb r0, [r1, #0x00]
    adds r1, r4, #0x0
    adds r1, #0x90
    ldrb r1, [r1, #0x00]
    subs r0, r0, r1
    adds r2, r2, r0
    ldr r1, _08041B3C @ =0x080ECCCC
    ldr r3, _08041B40 @ =0x000007DC
    adds r0, r6, r3
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x02
    add r0, r8
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r2, r0
    bge _08041B64
    adds r0, r7, #0x0
    adds r0, #0xAE
    movs r1, #0x00
    ldsh r2, [r0, r1]
    ldr r3, _08041B44 @ =0x080ECCA8
    ldr r1, [sp, #0x004]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    ldr r1, [sp, #0x000]
    adds r0, r0, r1
    lsls r1, r0, #0x02
    adds r0, r1, r3
    ldrb r0, [r0, #0x00]
    cmp r2, r0
    blt _08041B48
_08041B2E:
    movs r0, #0x01
    b _08041B66
    .byte 0x00, 0x00
_08041B34: .4byte 0x000007F1
_08041B38: .4byte 0x03002E20
_08041B3C: .4byte 0x080ECCCC
_08041B40: .4byte 0x000007DC
_08041B44: .4byte 0x080ECCA8
_08041B48:
    adds r0, r3, #0x1
    adds r0, r1, r0
    ldrb r0, [r0, #0x00]
    cmp r2, r0
    blt _08041B56
_08041B52:
    movs r0, #0x00
    b _08041B66
_08041B56:
    adds r0, r3, #0x2
    adds r0, r1, r0
    ldrb r0, [r0, #0x00]
    cmp r2, r0
    bge _08041B64
    movs r0, #0x03
    b _08041B66
_08041B64:
    movs r0, #0x02
_08041B66:
    add sp, #0x008
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_8041B78
sub_8041B78:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    adds r6, r0, #0x0
    mov r8, r1
    adds r0, #0xBA
    ldrh r4, [r0, #0x00]
    lsrs r4, r4, #0x01
    subs r1, r4, #0x1
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    mov r0, r8
    bl sub_804AED4
    adds r7, r0, #0x0
    adds r5, r6, #0x0
    adds r5, #0xAE
    movs r0, #0x00
    ldsh r1, [r5, r0]
    adds r0, r7, #0x0
    adds r0, #0xAE
    movs r2, #0x00
    ldsh r0, [r0, r2]
    subs r1, r1, r0
    mov r9, r1
    adds r4, #0x01
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    mov r0, r8
    adds r1, r4, #0x0
    bl sub_804AED4
    mov r12, r0
    movs r0, #0x00
    ldsh r1, [r5, r0]
    mov r0, r12
    adds r0, #0xAE
    movs r2, #0x00
    ldsh r0, [r0, r2]
    subs r1, r1, r0
    mov r10, r1
    mov r1, r12
    ldr r0, [r1, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _08041BF4
    mov r0, r12
    adds r0, #0x6A
    movs r2, #0x00
    ldsh r0, [r0, r2]
    cmp r0, #0x00
    beq _08041BEC
    movs r0, #0x02
    b _08041CE4
_08041BEC:
    movs r1, #0x00
    ldsh r0, [r5, r1]
    cmp r0, #0x06
    bgt _08041CE2
_08041BF4:
    ldr r0, [r7, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _08041C5C
    adds r0, r6, #0x0
    adds r0, #0xAE
    movs r2, #0x00
    ldsh r0, [r0, r2]
    cmp r0, #0x03
    ble _08041C5C
    ldr r0, _08041C50 @ =0x03002E20
    ldrh r3, [r0, #0x38]
    adds r0, r7, #0x0
    adds r0, #0x91
    ldrb r1, [r0, #0x00]
    adds r1, #0x01
    movs r2, #0x07
    ands r1, r2
    adds r0, r6, #0x0
    adds r0, #0x91
    ldrb r0, [r0, #0x00]
    adds r0, #0x01
    ands r0, r2
    subs r1, r1, r0
    adds r2, r3, #0x0
    muls r2, r1
    adds r0, r7, #0x0
    adds r0, #0x90
    ldrb r0, [r0, #0x00]
    adds r1, r6, #0x0
    adds r1, #0x90
    ldrb r1, [r1, #0x00]
    subs r0, r0, r1
    adds r2, r2, r0
    ldr r1, _08041C54 @ =0x080ECCE4
    ldr r0, _08041C58 @ =0x000007DC
    add r0, r8
    ldrb r0, [r0, #0x00]
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r2, r0
    blt _08041CE2
    movs r0, #0x04
    b _08041CE4
_08041C50: .4byte 0x03002E20
_08041C54: .4byte 0x080ECCE4
_08041C58: .4byte 0x000007DC
_08041C5C:
    mov r0, r9
    cmp r0, #0x00
    ble _08041C66
    movs r0, #0x41
    b _08041CE4
_08041C66:
    movs r0, #0x04
    negs r0, r0
    cmp r10, r0
    bgt _08041C72
    movs r0, #0x82
    b _08041CE4
_08041C72:
    ldr r0, _08041CD4 @ =0x03002E20
    ldrh r5, [r0, #0x38]
    adds r0, r7, #0x0
    adds r0, #0x91
    ldrb r0, [r0, #0x00]
    adds r0, #0x01
    movs r3, #0x07
    ands r0, r3
    adds r1, r6, #0x0
    adds r1, #0x91
    ldrb r2, [r1, #0x00]
    adds r2, #0x01
    ands r2, r3
    subs r0, r0, r2
    adds r4, r5, #0x0
    muls r4, r0
    adds r0, r7, #0x0
    adds r0, #0x90
    ldrb r0, [r0, #0x00]
    subs r1, #0x01
    ldrb r1, [r1, #0x00]
    subs r0, r0, r1
    adds r4, r4, r0
    mov r0, r12
    adds r0, #0x91
    ldrb r0, [r0, #0x00]
    adds r0, #0x01
    ands r0, r3
    subs r2, r2, r0
    muls r2, r5
    mov r0, r12
    adds r0, #0x90
    ldrb r0, [r0, #0x00]
    subs r1, r1, r0
    adds r1, r2, r1
    lsrs r0, r4, #0x1F
    adds r0, r4, r0
    asrs r0, r0, #0x01
    adds r0, r4, r0
    subs r0, r0, r1
    cmp r0, #0x00
    bge _08041CE2
    lsls r0, r4, #0x01
    subs r0, r0, r1
    cmp r0, #0x00
    bgt _08041CD8
    movs r0, #0x03
    b _08041CE4
    .byte 0x00, 0x00
_08041CD4: .4byte 0x03002E20
_08041CD8:
    mov r1, r10
    cmp r1, #0x01
    bgt _08041CE2
    movs r0, #0x00
    b _08041CE4
_08041CE2:
    movs r0, #0x01
_08041CE4:
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_8041CF4
sub_8041CF4:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    mov r8, r0
    adds r5, r1, #0x0
    adds r0, #0xBA
    ldrh r4, [r0, #0x00]
    lsrs r4, r4, #0x01
    subs r1, r4, #0x1
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    adds r0, r5, #0x0
    bl sub_804AED4
    adds r7, r0, #0x0
    mov r6, r8
    adds r6, #0xAE
    movs r0, #0x00
    ldsh r1, [r6, r0]
    adds r0, r7, #0x0
    adds r0, #0xAE
    movs r2, #0x00
    ldsh r0, [r0, r2]
    subs r1, r1, r0
    mov r9, r1
    adds r4, #0x01
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    adds r0, r5, #0x0
    adds r1, r4, #0x0
    bl sub_804AED4
    mov r12, r0
    movs r0, #0x00
    ldsh r1, [r6, r0]
    mov r0, r12
    adds r0, #0xAE
    movs r2, #0x00
    ldsh r0, [r0, r2]
    subs r1, r1, r0
    mov r10, r1
    mov r1, r12
    ldr r0, [r1, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _08041D70
    mov r0, r12
    adds r0, #0x6A
    movs r2, #0x00
    ldsh r0, [r0, r2]
    cmp r0, #0x00
    beq _08041D68
    movs r0, #0x02
    b _08041E10
_08041D68:
    movs r1, #0x00
    ldsh r0, [r6, r1]
    cmp r0, #0x06
    bgt _08041E0E
_08041D70:
    ldr r0, [r7, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _08041D88
    mov r0, r8
    adds r0, #0xAE
    movs r2, #0x00
    ldsh r0, [r0, r2]
    cmp r0, #0x03
    bgt _08041E0E
_08041D88:
    mov r0, r9
    cmp r0, #0x00
    ble _08041D92
    movs r0, #0x41
    b _08041E10
_08041D92:
    movs r0, #0x04
    negs r0, r0
    cmp r10, r0
    bgt _08041D9E
    movs r0, #0x82
    b _08041E10
_08041D9E:
    ldr r0, _08041E00 @ =0x03002E20
    ldrh r5, [r0, #0x38]
    adds r0, r7, #0x0
    adds r0, #0x91
    ldrb r0, [r0, #0x00]
    adds r0, #0x01
    movs r3, #0x07
    ands r0, r3
    mov r1, r8
    adds r1, #0x91
    ldrb r2, [r1, #0x00]
    adds r2, #0x01
    ands r2, r3
    subs r0, r0, r2
    adds r4, r5, #0x0
    muls r4, r0
    adds r0, r7, #0x0
    adds r0, #0x90
    ldrb r0, [r0, #0x00]
    subs r1, #0x01
    ldrb r1, [r1, #0x00]
    subs r0, r0, r1
    adds r4, r4, r0
    mov r0, r12
    adds r0, #0x91
    ldrb r0, [r0, #0x00]
    adds r0, #0x01
    ands r0, r3
    subs r2, r2, r0
    muls r2, r5
    mov r0, r12
    adds r0, #0x90
    ldrb r0, [r0, #0x00]
    subs r1, r1, r0
    adds r1, r2, r1
    lsrs r0, r4, #0x1F
    adds r0, r4, r0
    asrs r0, r0, #0x01
    adds r0, r4, r0
    subs r0, r0, r1
    cmp r0, #0x00
    bge _08041E0E
    lsls r0, r4, #0x01
    subs r0, r0, r1
    cmp r0, #0x00
    bgt _08041E04
    movs r0, #0x03
    b _08041E10
    .byte 0x00, 0x00
_08041E00: .4byte 0x03002E20
_08041E04:
    mov r1, r10
    cmp r1, #0x01
    bgt _08041E0E
    movs r0, #0x00
    b _08041E10
_08041E0E:
    movs r0, #0x01
_08041E10:
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_8041E20
sub_8041E20:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    adds r7, r0, #0x0
    adds r4, r1, #0x0
    adds r0, #0x91
    ldrb r0, [r0, #0x00]
    adds r0, #0x01
    mov r9, r0
    movs r0, #0x07
    mov r1, r9
    ands r1, r0
    mov r9, r1
    ldr r2, _08041E8C @ =0x000007DC
    adds r0, r4, r2
    ldrb r0, [r0, #0x00]
    mov r10, r0
    adds r0, r4, #0x0
    movs r1, #0x06
    bl sub_804AED4
    adds r5, r0, #0x0
    adds r6, r7, #0x0
    adds r6, #0xAE
    movs r3, #0x00
    ldsh r1, [r6, r3]
    adds r0, #0xAE
    movs r2, #0x00
    ldsh r0, [r0, r2]
    subs r1, r1, r0
    mov r8, r1
    adds r0, r4, #0x0
    movs r1, #0x00
    bl sub_804AED4
    mov r12, r0
    ldr r0, [r5, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _08041E80
    movs r3, #0x00
    ldsh r0, [r6, r3]
    cmp r0, #0x03
    bgt _08041EF0
_08041E80:
    mov r0, r8
    cmp r0, #0x00
    ble _08041E90
    movs r0, #0x41
    b _08041F08
    .byte 0x00, 0x00
_08041E8C: .4byte 0x000007DC
_08041E90:
    ldr r0, _08041EF4 @ =0x03002E20
    ldrh r0, [r0, #0x38]
    mov r8, r0
    adds r0, r5, #0x0
    adds r0, #0x91
    ldrb r0, [r0, #0x00]
    adds r0, #0x01
    movs r6, #0x07
    ands r0, r6
    adds r1, r7, #0x0
    adds r1, #0x91
    ldrb r1, [r1, #0x00]
    adds r3, r1, #0x1
    ands r3, r6
    subs r0, r0, r3
    mov r2, r8
    muls r2, r0
    adds r0, r5, #0x0
    adds r0, #0x90
    ldrb r0, [r0, #0x00]
    adds r1, r7, #0x0
    adds r1, #0x90
    ldrb r4, [r1, #0x00]
    subs r0, r0, r4
    adds r2, r2, r0
    cmp r2, #0x01
    ble _08041F06
    mov r0, r12
    adds r0, #0x91
    ldrb r0, [r0, #0x00]
    adds r0, #0x01
    ands r0, r6
    subs r0, r0, r3
    mov r1, r8
    muls r1, r0
    mov r0, r12
    adds r0, #0x90
    ldrb r0, [r0, #0x00]
    subs r0, r0, r4
    adds r2, r1, r0
    ldr r1, _08041EF8 @ =0x080ECCD8
    mov r3, r10
    lsls r0, r3, #0x02
    add r0, r9
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r2, r0
    blt _08041EFC
_08041EF0:
    movs r0, #0x01
    b _08041F08
_08041EF4: .4byte 0x03002E20
_08041EF8: .4byte 0x080ECCD8
_08041EFC:
    lsrs r0, r0, #0x01
    cmp r2, r0
    blt _08041F06
    movs r0, #0x00
    b _08041F08
_08041F06:
    movs r0, #0x02
_08041F08:
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_8041F18
sub_8041F18:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    adds r6, r1, #0x0
    adds r1, r4, #0x0
    adds r1, #0xBA
    ldrh r1, [r1, #0x00]
    lsrs r7, r1, #0x01
    ldr r1, [r4, #0x48]
    movs r2, #0x20
    ands r1, r2
    cmp r1, #0x00
    bne _08041FA0
    adds r1, r4, #0x0
    adds r1, #0x6A
    movs r2, #0x00
    ldsh r1, [r1, r2]
    cmp r1, #0x00
    beq _08041F88
    movs r5, #0x00
    cmp r5, r7
    bge _08041F62
_08041F42:
    lsls r1, r5, #0x18
    lsrs r1, r1, #0x18
    adds r0, r6, #0x0
    bl sub_804AED4
    ldr r0, [r0, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _08041F5C
    movs r0, #0x04
    b _08041FFE
_08041F5C:
    adds r5, #0x01
    cmp r5, r7
    blt _08041F42
_08041F62:
    cmp r7, #0x07
    beq _08041F84
    adds r1, r7, #0x1
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    adds r0, r6, #0x0
    bl sub_804AED4
    adds r0, #0x90
    adds r1, r4, #0x0
    adds r1, #0x90
    ldrb r1, [r1, #0x00]
    ldrb r0, [r0, #0x00]
    cmp r1, r0
    bne _08041F84
    movs r0, #0x00
    b _08041FFE
_08041F84:
    movs r0, #0x02
    b _08041FFE
_08041F88:
    adds r1, r4, #0x0
    adds r1, #0xAC
    movs r2, #0x00
    ldsh r1, [r1, r2]
    cmp r1, #0x00
    bne _08041FA0
    adds r1, r4, #0x0
    adds r1, #0x68
    movs r2, #0x00
    ldsh r1, [r1, r2]
    cmp r1, #0x00
    beq _08041FA4
_08041FA0:
    movs r0, #0x03
    b _08041FFE
_08041FA4:
    cmp r7, #0x07
    bhi _08041FFE
    lsls r0, r7, #0x02
    ldr r1, _08041FB4 @ =0x08041FB8
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_08041FB4: .4byte 0x08041FB8
    .byte 0xD8, 0x1F, 0x04, 0x08, 0xE2, 0x1F, 0x04, 0x08, 0xEC, 0x1F, 0x04, 0x08, 0xEC, 0x1F, 0x04, 0x08
    .byte 0xEC, 0x1F, 0x04, 0x08, 0xEC, 0x1F, 0x04, 0x08, 0xEC, 0x1F, 0x04, 0x08, 0xF6, 0x1F, 0x04, 0x08
    .byte 0x20, 0x1C, 0x31, 0x1C, 0xFF, 0xF7, 0x18, 0xFD, 0x0D, 0xE0, 0x20, 0x1C, 0x31, 0x1C, 0xFF, 0xF7
    .byte 0xC7, 0xFD, 0x08, 0xE0, 0x20, 0x1C, 0x31, 0x1C, 0xFF, 0xF7, 0x80, 0xFE, 0x03, 0xE0, 0x20, 0x1C
    .byte 0x31, 0x1C, 0xFF, 0xF7, 0x11, 0xFF
_08041FFE:
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    thumb_func_start sub_8042004
sub_8042004:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r2, _0804201C @ =0x000007DC
    adds r0, r1, r2
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    beq _08042020
    cmp r0, #0x01
    ble _0804202A
    cmp r0, #0x02
    beq _08042026
    b _0804202A
_0804201C: .4byte 0x000007DC
_08042020:
    movs r2, #0x87
    lsls r2, r2, #0x01
    b _0804202E
_08042026:
    movs r2, #0x96
    b _0804202E
_0804202A:
    movs r2, #0xFF
    lsls r2, r2, #0x01
_0804202E:
    ldr r3, _08042060 @ =0x00000C62
    adds r0, r1, r3
    strh r2, [r0, #0x00]
    ldr r0, _08042064 @ =0x03002E20
    movs r1, #0xE6
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_804F7AC
    adds r2, r0, #0x0
    str r4, [r2, #0x54]
    movs r3, #0xBD
    lsls r3, r3, #0x01
    adds r0, r4, r3
    ldrh r0, [r0, #0x00]
    ldr r1, _08042068 @ =0xFFFFF000
    adds r0, r0, r1
    cmp r0, #0x0C
    bhi _080420E2
    lsls r0, r0, #0x02
    ldr r1, _0804206C @ =0x08042070
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_08042060: .4byte 0x00000C62
_08042064: .4byte 0x03002E20
_08042068: .4byte 0xFFFFF000
_0804206C: .4byte 0x08042070
    .byte 0xA4, 0x20, 0x04, 0x08, 0xE2, 0x20, 0x04, 0x08, 0xAC, 0x20, 0x04, 0x08, 0xE2, 0x20, 0x04, 0x08
    .byte 0xB4, 0x20, 0x04, 0x08, 0xBC, 0x20, 0x04, 0x08, 0xE2, 0x20, 0x04, 0x08, 0xC4, 0x20, 0x04, 0x08
    .byte 0xE2, 0x20, 0x04, 0x08, 0xE2, 0x20, 0x04, 0x08, 0xD4, 0x20, 0x04, 0x08, 0xDC, 0x20, 0x04, 0x08
    .byte 0xCC, 0x20, 0x04, 0x08, 0x10, 0x1C, 0x05, 0xF0, 0x5F, 0xF9, 0x1A, 0xE0, 0x10, 0x1C, 0x05, 0xF0
    .byte 0x0D, 0xFA, 0x16, 0xE0, 0x10, 0x1C, 0x05, 0xF0, 0xBB, 0xFA, 0x12, 0xE0, 0x10, 0x1C, 0x05, 0xF0
    .byte 0xE7, 0xFF, 0x0E, 0xE0, 0x10, 0x1C, 0x06, 0xF0, 0xE5, 0xF8, 0x0A, 0xE0, 0x10, 0x1C, 0x06, 0xF0
    .byte 0x67, 0xF9, 0x06, 0xE0, 0x10, 0x1C, 0x06, 0xF0, 0x81, 0xFA, 0x02, 0xE0, 0x10, 0x1C, 0x06, 0xF0
    .byte 0xD9, 0xFA
_080420E2:
    movs r2, #0xBD
    lsls r2, r2, #0x01
    adds r0, r4, r2
    ldrh r1, [r0, #0x00]
    ldr r0, _08042100 @ =0x0000100B
    cmp r1, r0
    beq _080420F8
    adds r0, r4, #0x0
    movs r1, #0x00
    bl sub_803D9D4
_080420F8:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08042100: .4byte 0x0000100B
    thumb_func_start sub_8042104
sub_8042104:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r5, r0, #0x0
    adds r6, r1, #0x0
    movs r0, #0x00
    mov r8, r0
    movs r7, #0x00
    adds r0, r5, #0x0
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r4, r0, #0x01
    movs r1, #0xC8
    lsls r1, r1, #0x01
    adds r2, r5, r1
    ldrb r1, [r2, #0x00]
    movs r0, #0xFD
    ands r0, r1
    movs r1, #0x01
    orrs r0, r1
    strb r0, [r2, #0x00]
    movs r3, #0xC7
    lsls r3, r3, #0x01
    adds r1, r5, r3
    movs r0, #0x30
    strh r0, [r1, #0x00]
    cmp r4, #0x00
    beq _0804214A
    subs r1, r4, #0x1
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    adds r0, r6, #0x0
    bl sub_804AED4
    mov r8, r0
_0804214A:
    cmp r4, #0x07
    beq _0804215C
    adds r1, r4, #0x1
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    adds r0, r6, #0x0
    bl sub_804AED4
    adds r7, r0, #0x0
_0804215C:
    cmp r4, #0x00
    beq _08042172
    mov r1, r8
    ldr r0, [r1, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _08042172
    cmp r4, #0x05
    ble _080421B8
_08042172:
    cmp r4, #0x07
    beq _08042182
    ldr r0, [r7, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _080421B8
_08042182:
    cmp r4, #0x00
    beq _080421A0
    adds r2, r5, #0x0
    adds r2, #0xAE
    movs r3, #0x00
    ldsh r1, [r2, r3]
    mov r0, r8
    adds r0, #0xAE
    movs r3, #0x00
    ldsh r0, [r0, r3]
    subs r1, r1, r0
    adds r7, r2, #0x0
    cmp r1, #0x01
    ble _080421C2
    b _080421B8
_080421A0:
    adds r2, r5, #0x0
    adds r2, #0xAE
    movs r0, #0x00
    ldsh r1, [r2, r0]
    adds r0, r7, #0x0
    adds r0, #0xAE
    movs r3, #0x00
    ldsh r0, [r0, r3]
    subs r1, r1, r0
    adds r7, r2, #0x0
    cmp r1, #0x02
    ble _080421C2
_080421B8:
    adds r0, r5, #0x0
    adds r1, r6, #0x0
    bl sub_8042004
    b _080421EA
_080421C2:
    adds r0, r6, #0x0
    movs r1, #0x00
    bl sub_804AED4
    ldr r0, [r0, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _080421EA
    cmp r4, #0x07
    beq _080421E2
    movs r1, #0x00
    ldsh r0, [r7, r1]
    cmp r0, #0x02
    ble _080421EA
_080421E2:
    adds r0, r5, #0x0
    adds r1, r6, #0x0
    bl sub_8042004
_080421EA:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    thumb_func_start sub_80421F4
sub_80421F4:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r4, r0, #0x0
    adds r7, r1, #0x0
    movs r6, #0x00
    mov r8, r6
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r5, r0, #0x01
    movs r0, #0xC7
    lsls r0, r0, #0x01
    adds r1, r4, r0
    ldrh r0, [r1, #0x00]
    cmp r0, #0x00
    beq _0804221A
    subs r0, #0x01
    strh r0, [r1, #0x00]
    b _08042448
_0804221A:
    cmp r5, #0x00
    beq _0804222C
    subs r1, r5, #0x1
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    adds r0, r7, #0x0
    bl sub_804AED4
    adds r6, r0, #0x0
_0804222C:
    cmp r5, #0x07
    beq _0804223E
    adds r1, r5, #0x1
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    adds r0, r7, #0x0
    bl sub_804AED4
    mov r8, r0
_0804223E:
    cmp r5, #0x00
    beq _080422E2
    ldr r0, [r6, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _080422E2
    cmp r5, #0x05
    bgt _080422E2
    ldr r0, _080422A4 @ =0x03002E20
    ldrh r3, [r0, #0x38]
    adds r0, r6, #0x0
    adds r0, #0x91
    ldrb r1, [r0, #0x00]
    adds r1, #0x01
    movs r2, #0x07
    ands r1, r2
    adds r0, r4, #0x0
    adds r0, #0x91
    ldrb r0, [r0, #0x00]
    adds r0, #0x01
    ands r0, r2
    subs r1, r1, r0
    adds r2, r3, #0x0
    muls r2, r1
    adds r0, r6, #0x0
    adds r0, #0x90
    ldrb r0, [r0, #0x00]
    adds r1, r4, #0x0
    adds r1, #0x90
    ldrb r1, [r1, #0x00]
    subs r0, r0, r1
    adds r1, r2, r0
    cmp r1, #0x00
    bge _08042288
    b _08042448
_08042288:
    cmp r1, #0x03
    ble _0804228E
    movs r1, #0x03
_0804228E:
    ldr r0, _080422A8 @ =0x080ECCE7
    adds r0, r1, r0
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    beq _080422BE
    cmp r0, #0x01
    bgt _080422AC
    cmp r0, #0x00
    beq _080422B6
    b _08042448
    .byte 0x00, 0x00
_080422A4: .4byte 0x03002E20
_080422A8: .4byte 0x080ECCE7
_080422AC:
    cmp r0, #0x02
    beq _080422CC
    cmp r0, #0x03
    beq _080422DA
    b _08042448
_080422B6:
    movs r1, #0xC8
    lsls r1, r1, #0x01
    adds r2, r4, r1
    b _080423FE
_080422BE:
    movs r3, #0xC8
    lsls r3, r3, #0x01
    adds r2, r4, r3
    ldrb r1, [r2, #0x00]
    movs r0, #0x02
    orrs r0, r1
    b _08042404
_080422CC:
    movs r0, #0xC8
    lsls r0, r0, #0x01
    adds r2, r4, r0
    ldrb r1, [r2, #0x00]
    movs r0, #0xFD
    ands r0, r1
    b _08042386
_080422DA:
    movs r1, #0xC8
    lsls r1, r1, #0x01
    adds r2, r4, r1
    b _08042380
_080422E2:
    cmp r5, #0x07
    beq _0804238E
    mov r3, r8
    ldr r0, [r3, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0804238E
    ldr r0, _08042344 @ =0x03002E20
    ldrh r3, [r0, #0x38]
    adds r0, r4, #0x0
    adds r0, #0x91
    ldrb r1, [r0, #0x00]
    adds r1, #0x01
    movs r2, #0x07
    ands r1, r2
    mov r0, r8
    adds r0, #0x91
    ldrb r0, [r0, #0x00]
    adds r0, #0x01
    ands r0, r2
    subs r1, r1, r0
    adds r2, r3, #0x0
    muls r2, r1
    adds r0, r4, #0x0
    adds r0, #0x90
    ldrb r0, [r0, #0x00]
    mov r1, r8
    adds r1, #0x90
    ldrb r1, [r1, #0x00]
    subs r0, r0, r1
    adds r1, r2, r0
    cmp r1, #0x00
    bge _0804232A
    b _08042448
_0804232A:
    cmp r1, #0x03
    ble _08042330
    movs r1, #0x03
_08042330:
    ldr r0, _08042348 @ =0x080ECCEB
    adds r0, r1, r0
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    beq _0804235E
    cmp r0, #0x01
    bgt _0804234C
    cmp r0, #0x00
    beq _08042356
    b _08042448
_08042344: .4byte 0x03002E20
_08042348: .4byte 0x080ECCEB
_0804234C:
    cmp r0, #0x02
    beq _0804236C
    cmp r0, #0x03
    beq _0804237A
    b _08042448
_08042356:
    movs r0, #0xC8
    lsls r0, r0, #0x01
    adds r2, r4, r0
    b _080423FE
_0804235E:
    movs r1, #0xC8
    lsls r1, r1, #0x01
    adds r2, r4, r1
    ldrb r1, [r2, #0x00]
    movs r0, #0x02
    orrs r0, r1
    b _08042404
_0804236C:
    movs r3, #0xC8
    lsls r3, r3, #0x01
    adds r2, r4, r3
    ldrb r1, [r2, #0x00]
    movs r0, #0xFD
    ands r0, r1
    b _08042386
_0804237A:
    movs r0, #0xC8
    lsls r0, r0, #0x01
    adds r2, r4, r0
_08042380:
    ldrb r1, [r2, #0x00]
    movs r0, #0x02
    orrs r0, r1
_08042386:
    movs r1, #0x01
    orrs r0, r1
    strb r0, [r2, #0x00]
    b _08042448
_0804238E:
    cmp r5, #0x00
    beq _080423B2
    adds r2, r4, #0x0
    adds r2, #0xAE
    movs r3, #0x00
    ldsh r1, [r2, r3]
    adds r0, r6, #0x0
    adds r0, #0xAE
    movs r3, #0x00
    ldsh r0, [r0, r3]
    subs r1, r1, r0
    adds r6, r2, #0x0
    cmp r1, #0x01
    ble _080423D8
    movs r0, #0xC8
    lsls r0, r0, #0x01
    adds r2, r4, r0
    b _080423FE
_080423B2:
    adds r2, r4, #0x0
    adds r2, #0xAE
    movs r3, #0x00
    ldsh r1, [r2, r3]
    mov r0, r8
    adds r0, #0xAE
    movs r3, #0x00
    ldsh r0, [r0, r3]
    subs r1, r1, r0
    adds r6, r2, #0x0
    cmp r1, #0x02
    ble _080423D8
    movs r0, #0xC8
    lsls r0, r0, #0x01
    adds r2, r4, r0
    ldrb r1, [r2, #0x00]
    movs r0, #0x02
    orrs r0, r1
    b _08042404
_080423D8:
    adds r0, r7, #0x0
    movs r1, #0x00
    bl sub_804AED4
    ldr r0, [r0, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0804240C
    cmp r5, #0x07
    beq _080423F8
    movs r1, #0x00
    ldsh r0, [r6, r1]
    cmp r0, #0x02
    ble _0804240C
_080423F8:
    movs r3, #0xC8
    lsls r3, r3, #0x01
    adds r2, r4, r3
_080423FE:
    ldrb r1, [r2, #0x00]
    movs r0, #0xFD
    ands r0, r1
_08042404:
    movs r1, #0xFE
    ands r0, r1
    strb r0, [r2, #0x00]
    b _08042448
_0804240C:
    movs r6, #0x00
    movs r0, #0xC8
    lsls r0, r0, #0x01
    adds r4, r4, r0
    cmp r6, r5
    bge _0804243C
_08042418:
    lsls r1, r6, #0x18
    lsrs r1, r1, #0x18
    adds r0, r7, #0x0
    bl sub_804AED4
    ldr r0, [r0, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _08042436
    ldrb r0, [r4, #0x00]
    movs r1, #0xFD
    ands r1, r0
    b _08042442
_08042436:
    adds r6, #0x01
    cmp r6, r5
    blt _08042418
_0804243C:
    ldrb r0, [r4, #0x00]
    movs r1, #0x02
    orrs r1, r0
_08042442:
    movs r0, #0x01
    orrs r1, r0
    strb r1, [r4, #0x00]
_08042448:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_8042454
sub_8042454:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r4, r0, #0x0
    adds r7, r1, #0x0
    movs r6, #0x00
    mov r8, r6
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r5, r0, #0x01
    movs r0, #0xC7
    lsls r0, r0, #0x01
    adds r1, r4, r0
    ldrh r0, [r1, #0x00]
    cmp r0, #0x00
    beq _0804247A
    subs r0, #0x01
    strh r0, [r1, #0x00]
    b _080426A0
_0804247A:
    cmp r5, #0x00
    beq _0804248C
    subs r1, r5, #0x1
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    adds r0, r7, #0x0
    bl sub_804AED4
    adds r6, r0, #0x0
_0804248C:
    cmp r5, #0x07
    beq _0804249E
    adds r1, r5, #0x1
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    adds r0, r7, #0x0
    bl sub_804AED4
    mov r8, r0
_0804249E:
    cmp r5, #0x00
    beq _0804253A
    ldr r0, [r6, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0804253A
    cmp r5, #0x05
    bgt _0804253A
    ldr r0, _08042504 @ =0x03002E20
    ldrh r3, [r0, #0x38]
    adds r0, r6, #0x0
    adds r0, #0x91
    ldrb r1, [r0, #0x00]
    adds r1, #0x01
    movs r2, #0x07
    ands r1, r2
    adds r0, r4, #0x0
    adds r0, #0x91
    ldrb r0, [r0, #0x00]
    adds r0, #0x01
    ands r0, r2
    subs r1, r1, r0
    adds r2, r3, #0x0
    muls r2, r1
    adds r0, r6, #0x0
    adds r0, #0x90
    ldrb r0, [r0, #0x00]
    adds r1, r4, #0x0
    adds r1, #0x90
    ldrb r1, [r1, #0x00]
    subs r0, r0, r1
    adds r1, r2, r0
    cmp r1, #0x00
    bge _080424E8
    b _080426A0
_080424E8:
    cmp r1, #0x03
    ble _080424EE
    movs r1, #0x03
_080424EE:
    ldr r0, _08042508 @ =0x080ECCEF
    adds r0, r1, r0
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    bne _080424FA
    b _08042650
_080424FA:
    cmp r0, #0x01
    bgt _0804250C
    cmp r0, #0x00
    beq _08042516
    b _080426A0
_08042504: .4byte 0x03002E20
_08042508: .4byte 0x080ECCEF
_0804250C:
    cmp r0, #0x02
    beq _08042524
    cmp r0, #0x03
    beq _08042532
    b _080426A0
_08042516:
    movs r1, #0xC8
    lsls r1, r1, #0x01
    adds r2, r4, r1
    ldrb r1, [r2, #0x00]
    movs r0, #0xFD
    ands r0, r1
    b _0804265C
_08042524:
    movs r0, #0xC8
    lsls r0, r0, #0x01
    adds r2, r4, r0
    ldrb r1, [r2, #0x00]
    movs r0, #0xFD
    ands r0, r1
    b _080425DE
_08042532:
    movs r1, #0xC8
    lsls r1, r1, #0x01
    adds r2, r4, r1
    b _080425D8
_0804253A:
    cmp r5, #0x07
    beq _080425E6
    mov r3, r8
    ldr r0, [r3, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _080425E6
    ldr r0, _0804259C @ =0x03002E20
    ldrh r3, [r0, #0x38]
    adds r0, r4, #0x0
    adds r0, #0x91
    ldrb r1, [r0, #0x00]
    adds r1, #0x01
    movs r2, #0x07
    ands r1, r2
    mov r0, r8
    adds r0, #0x91
    ldrb r0, [r0, #0x00]
    adds r0, #0x01
    ands r0, r2
    subs r1, r1, r0
    adds r2, r3, #0x0
    muls r2, r1
    adds r0, r4, #0x0
    adds r0, #0x90
    ldrb r0, [r0, #0x00]
    mov r1, r8
    adds r1, #0x90
    ldrb r1, [r1, #0x00]
    subs r0, r0, r1
    adds r1, r2, r0
    cmp r1, #0x00
    bge _08042582
    b _080426A0
_08042582:
    cmp r1, #0x03
    ble _08042588
    movs r1, #0x03
_08042588:
    ldr r0, _080425A0 @ =0x080ECCF3
    adds r0, r1, r0
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    beq _080425BC
    cmp r0, #0x01
    bgt _080425A4
    cmp r0, #0x00
    beq _080425AE
    b _080426A0
_0804259C: .4byte 0x03002E20
_080425A0: .4byte 0x080ECCF3
_080425A4:
    cmp r0, #0x02
    beq _080425C4
    cmp r0, #0x03
    beq _080425D2
    b _080426A0
_080425AE:
    movs r0, #0xC8
    lsls r0, r0, #0x01
    adds r2, r4, r0
    ldrb r1, [r2, #0x00]
    movs r0, #0xFD
    ands r0, r1
    b _0804265C
_080425BC:
    movs r1, #0xC8
    lsls r1, r1, #0x01
    adds r2, r4, r1
    b _08042656
_080425C4:
    movs r3, #0xC8
    lsls r3, r3, #0x01
    adds r2, r4, r3
    ldrb r1, [r2, #0x00]
    movs r0, #0xFD
    ands r0, r1
    b _080425DE
_080425D2:
    movs r0, #0xC8
    lsls r0, r0, #0x01
    adds r2, r4, r0
_080425D8:
    ldrb r1, [r2, #0x00]
    movs r0, #0x02
    orrs r0, r1
_080425DE:
    movs r1, #0x01
    orrs r0, r1
    strb r0, [r2, #0x00]
    b _080426A0
_080425E6:
    cmp r5, #0x00
    beq _08042610
    adds r2, r4, #0x0
    adds r2, #0xAE
    movs r3, #0x00
    ldsh r1, [r2, r3]
    adds r0, r6, #0x0
    adds r0, #0xAE
    movs r3, #0x00
    ldsh r0, [r0, r3]
    subs r1, r1, r0
    adds r6, r2, #0x0
    cmp r1, #0x01
    ble _08042630
    movs r0, #0xC8
    lsls r0, r0, #0x01
    adds r2, r4, r0
    ldrb r1, [r2, #0x00]
    movs r0, #0xFD
    ands r0, r1
    b _0804265C
_08042610:
    adds r2, r4, #0x0
    adds r2, #0xAE
    movs r3, #0x00
    ldsh r1, [r2, r3]
    mov r0, r8
    adds r0, #0xAE
    movs r3, #0x00
    ldsh r0, [r0, r3]
    subs r1, r1, r0
    adds r6, r2, #0x0
    cmp r1, #0x02
    ble _08042630
    movs r0, #0xC8
    lsls r0, r0, #0x01
    adds r2, r4, r0
    b _08042656
_08042630:
    adds r0, r7, #0x0
    movs r1, #0x00
    bl sub_804AED4
    ldr r0, [r0, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _08042664
    cmp r5, #0x07
    beq _08042650
    movs r1, #0x00
    ldsh r0, [r6, r1]
    cmp r0, #0x02
    ble _08042664
_08042650:
    movs r3, #0xC8
    lsls r3, r3, #0x01
    adds r2, r4, r3
_08042656:
    ldrb r1, [r2, #0x00]
    movs r0, #0x02
    orrs r0, r1
_0804265C:
    movs r1, #0xFE
    ands r0, r1
    strb r0, [r2, #0x00]
    b _080426A0
_08042664:
    movs r6, #0x00
    movs r0, #0xC8
    lsls r0, r0, #0x01
    adds r4, r4, r0
    cmp r6, r5
    bge _08042694
_08042670:
    lsls r1, r6, #0x18
    lsrs r1, r1, #0x18
    adds r0, r7, #0x0
    bl sub_804AED4
    ldr r0, [r0, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0804268E
    ldrb r0, [r4, #0x00]
    movs r1, #0xFD
    ands r1, r0
    b _0804269A
_0804268E:
    adds r6, #0x01
    cmp r6, r5
    blt _08042670
_08042694:
    ldrb r0, [r4, #0x00]
    movs r1, #0x02
    orrs r1, r0
_0804269A:
    movs r0, #0x01
    orrs r1, r0
    strb r1, [r4, #0x00]
_080426A0:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_80426AC
sub_80426AC:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r5, r0, #0x0
    adds r6, r1, #0x0
    movs r0, #0x00
    mov r8, r0
    movs r7, #0x00
    adds r0, r5, #0x0
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r4, r0, #0x01
    movs r1, #0xC8
    lsls r1, r1, #0x01
    adds r2, r5, r1
    ldrb r1, [r2, #0x00]
    movs r0, #0xFD
    ands r0, r1
    movs r1, #0x01
    orrs r0, r1
    strb r0, [r2, #0x00]
    movs r3, #0xC7
    lsls r3, r3, #0x01
    adds r1, r5, r3
    movs r0, #0x30
    strh r0, [r1, #0x00]
    cmp r4, #0x00
    beq _080426F2
    subs r1, r4, #0x1
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    adds r0, r6, #0x0
    bl sub_804AED4
    mov r8, r0
_080426F2:
    cmp r4, #0x07
    beq _08042704
    adds r1, r4, #0x1
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    adds r0, r6, #0x0
    bl sub_804AED4
    adds r7, r0, #0x0
_08042704:
    cmp r4, #0x00
    beq _0804271A
    mov r1, r8
    ldr r0, [r1, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0804271A
    cmp r4, #0x05
    ble _08042760
_0804271A:
    cmp r4, #0x07
    beq _0804272A
    ldr r0, [r7, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _08042760
_0804272A:
    cmp r4, #0x00
    beq _08042748
    adds r2, r5, #0x0
    adds r2, #0xAE
    movs r3, #0x00
    ldsh r1, [r2, r3]
    mov r0, r8
    adds r0, #0xAE
    movs r3, #0x00
    ldsh r0, [r0, r3]
    subs r1, r1, r0
    adds r7, r2, #0x0
    cmp r1, #0x01
    ble _0804276A
    b _08042760
_08042748:
    adds r2, r5, #0x0
    adds r2, #0xAE
    movs r0, #0x00
    ldsh r1, [r2, r0]
    adds r0, r7, #0x0
    adds r0, #0xAE
    movs r3, #0x00
    ldsh r0, [r0, r3]
    subs r1, r1, r0
    adds r7, r2, #0x0
    cmp r1, #0x02
    ble _0804276A
_08042760:
    adds r0, r5, #0x0
    adds r1, r6, #0x0
    bl sub_8042004
    b _08042792
_0804276A:
    adds r0, r6, #0x0
    movs r1, #0x00
    bl sub_804AED4
    ldr r0, [r0, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _08042792
    cmp r4, #0x07
    beq _0804278A
    movs r1, #0x00
    ldsh r0, [r7, r1]
    cmp r0, #0x02
    ble _08042792
_0804278A:
    adds r0, r5, #0x0
    adds r1, r6, #0x0
    bl sub_8042004
_08042792:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    thumb_func_start sub_804279C
sub_804279C:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r4, r0, #0x0
    adds r7, r1, #0x0
    movs r6, #0x00
    mov r8, r6
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r5, r0, #0x01
    movs r0, #0xC7
    lsls r0, r0, #0x01
    adds r1, r4, r0
    ldrh r0, [r1, #0x00]
    cmp r0, #0x00
    beq _080427C2
    subs r0, #0x01
    strh r0, [r1, #0x00]
    b _08042A1E
_080427C2:
    cmp r5, #0x00
    beq _080427D4
    subs r1, r5, #0x1
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    adds r0, r7, #0x0
    bl sub_804AED4
    adds r6, r0, #0x0
_080427D4:
    cmp r5, #0x07
    beq _080427E6
    adds r1, r5, #0x1
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    adds r0, r7, #0x0
    bl sub_804AED4
    mov r8, r0
_080427E6:
    cmp r5, #0x00
    beq _08042892
    ldr r0, [r6, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _08042892
    cmp r5, #0x05
    bgt _08042892
    ldr r0, _0804284C @ =0x03002E20
    ldrh r3, [r0, #0x38]
    adds r0, r6, #0x0
    adds r0, #0x91
    ldrb r1, [r0, #0x00]
    adds r1, #0x01
    movs r2, #0x07
    ands r1, r2
    adds r0, r4, #0x0
    adds r0, #0x91
    ldrb r0, [r0, #0x00]
    adds r0, #0x01
    ands r0, r2
    subs r1, r1, r0
    adds r2, r3, #0x0
    muls r2, r1
    adds r0, r6, #0x0
    adds r0, #0x90
    ldrb r0, [r0, #0x00]
    adds r1, r4, #0x0
    adds r1, #0x90
    ldrb r1, [r1, #0x00]
    subs r0, r0, r1
    adds r1, r2, r0
    cmp r1, #0x00
    bge _08042830
    b _08042A1E
_08042830:
    cmp r1, #0x03
    ble _08042836
    movs r1, #0x03
_08042836:
    ldr r0, _08042850 @ =0x080ECCF7
    adds r0, r1, r0
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    beq _08042872
    cmp r0, #0x01
    bgt _08042854
    cmp r0, #0x00
    beq _08042860
    b _08042A1E
    .byte 0x00, 0x00
_0804284C: .4byte 0x03002E20
_08042850: .4byte 0x080ECCF7
_08042854:
    cmp r0, #0x02
    beq _08042884
    cmp r0, #0x03
    bne _0804285E
    b _08042A0C
_0804285E:
    b _08042A1E
_08042860:
    movs r1, #0xC8
    lsls r1, r1, #0x01
    adds r2, r4, r1
    ldrb r1, [r2, #0x00]
    movs r0, #0xFD
    ands r0, r1
    movs r1, #0xFE
    ands r0, r1
    b _08042A1C
_08042872:
    movs r3, #0xC8
    lsls r3, r3, #0x01
    adds r2, r4, r3
    ldrb r1, [r2, #0x00]
    movs r0, #0x02
    orrs r0, r1
    movs r1, #0xFE
    ands r0, r1
    b _08042A1C
_08042884:
    movs r0, #0xC8
    lsls r0, r0, #0x01
    adds r2, r4, r0
    ldrb r1, [r2, #0x00]
    movs r0, #0xFD
    ands r0, r1
    b _08042A18
_08042892:
    cmp r5, #0x07
    beq _08042940
    mov r3, r8
    ldr r0, [r3, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _08042940
    ldr r0, _080428F4 @ =0x03002E20
    ldrh r3, [r0, #0x38]
    adds r0, r4, #0x0
    adds r0, #0x91
    ldrb r1, [r0, #0x00]
    adds r1, #0x01
    movs r2, #0x07
    ands r1, r2
    mov r0, r8
    adds r0, #0x91
    ldrb r0, [r0, #0x00]
    adds r0, #0x01
    ands r0, r2
    subs r1, r1, r0
    adds r2, r3, #0x0
    muls r2, r1
    adds r0, r4, #0x0
    adds r0, #0x90
    ldrb r0, [r0, #0x00]
    mov r1, r8
    adds r1, #0x90
    ldrb r1, [r1, #0x00]
    subs r0, r0, r1
    adds r1, r2, r0
    cmp r1, #0x00
    bge _080428DA
    b _08042A1E
_080428DA:
    cmp r1, #0x03
    ble _080428E0
    movs r1, #0x03
_080428E0:
    ldr r0, _080428F8 @ =0x080ECCFB
    adds r0, r1, r0
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    beq _08042918
    cmp r0, #0x01
    bgt _080428FC
    cmp r0, #0x00
    beq _08042906
    b _08042A1E
_080428F4: .4byte 0x03002E20
_080428F8: .4byte 0x080ECCFB
_080428FC:
    cmp r0, #0x02
    beq _0804292A
    cmp r0, #0x03
    beq _08042938
    b _08042A1E
_08042906:
    movs r0, #0xC8
    lsls r0, r0, #0x01
    adds r2, r4, r0
    ldrb r1, [r2, #0x00]
    movs r0, #0xFD
    ands r0, r1
    movs r1, #0xFE
    ands r0, r1
    b _08042A1C
_08042918:
    movs r1, #0xC8
    lsls r1, r1, #0x01
    adds r2, r4, r1
    ldrb r1, [r2, #0x00]
    movs r0, #0x02
    orrs r0, r1
    movs r1, #0xFE
    ands r0, r1
    b _08042A1C
_0804292A:
    movs r3, #0xC8
    lsls r3, r3, #0x01
    adds r2, r4, r3
    ldrb r1, [r2, #0x00]
    movs r0, #0xFD
    ands r0, r1
    b _08042A18
_08042938:
    movs r0, #0xC8
    lsls r0, r0, #0x01
    adds r2, r4, r0
    b _08042A12
_08042940:
    cmp r5, #0x00
    beq _0804296E
    adds r2, r4, #0x0
    adds r2, #0xAE
    movs r3, #0x00
    ldsh r1, [r2, r3]
    adds r0, r6, #0x0
    adds r0, #0xAE
    movs r3, #0x00
    ldsh r0, [r0, r3]
    subs r1, r1, r0
    adds r6, r2, #0x0
    cmp r1, #0x01
    ble _08042998
    movs r0, #0xC8
    lsls r0, r0, #0x01
    adds r2, r4, r0
    ldrb r1, [r2, #0x00]
    movs r0, #0xFD
    ands r0, r1
    movs r1, #0xFE
    ands r0, r1
    b _08042A1C
_0804296E:
    adds r2, r4, #0x0
    adds r2, #0xAE
    movs r3, #0x00
    ldsh r1, [r2, r3]
    mov r0, r8
    adds r0, #0xAE
    movs r3, #0x00
    ldsh r0, [r0, r3]
    subs r1, r1, r0
    adds r6, r2, #0x0
    cmp r1, #0x02
    ble _08042998
    movs r0, #0xC8
    lsls r0, r0, #0x01
    adds r2, r4, r0
    ldrb r1, [r2, #0x00]
    movs r0, #0x02
    orrs r0, r1
    movs r1, #0xFE
    ands r0, r1
    b _08042A1C
_08042998:
    adds r0, r7, #0x0
    movs r1, #0x00
    bl sub_804AED4
    ldr r0, [r0, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _080429CA
    cmp r5, #0x07
    beq _080429B8
    movs r1, #0x00
    ldsh r0, [r6, r1]
    cmp r0, #0x02
    ble _080429CA
_080429B8:
    movs r3, #0xC8
    lsls r3, r3, #0x01
    adds r2, r4, r3
    ldrb r1, [r2, #0x00]
    movs r0, #0x02
    orrs r0, r1
    movs r1, #0xFE
    ands r0, r1
    b _08042A1C
_080429CA:
    cmp r5, #0x05
    bgt _08042A0C
    movs r6, #0x00
    movs r0, #0xC8
    lsls r0, r0, #0x01
    adds r4, r4, r0
    cmp r6, r5
    bge _080429FE
_080429DA:
    lsls r1, r6, #0x18
    lsrs r1, r1, #0x18
    adds r0, r7, #0x0
    bl sub_804AED4
    ldr r0, [r0, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _080429F8
    ldrb r0, [r4, #0x00]
    movs r1, #0xFD
    ands r1, r0
    b _08042A04
_080429F8:
    adds r6, #0x01
    cmp r6, r5
    blt _080429DA
_080429FE:
    ldrb r0, [r4, #0x00]
    movs r1, #0x02
    orrs r1, r0
_08042A04:
    movs r0, #0x01
    orrs r1, r0
    strb r1, [r4, #0x00]
    b _08042A1E
_08042A0C:
    movs r1, #0xC8
    lsls r1, r1, #0x01
    adds r2, r4, r1
_08042A12:
    ldrb r1, [r2, #0x00]
    movs r0, #0x02
    orrs r0, r1
_08042A18:
    movs r1, #0x01
    orrs r0, r1
_08042A1C:
    strb r0, [r2, #0x00]
_08042A1E:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    thumb_func_start sub_8042A28
sub_8042A28:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r4, r0, #0x0
    adds r5, r1, #0x0
    movs r0, #0x00
    mov r8, r0
    movs r7, #0x00
    adds r0, r4, #0x0
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r6, r0, #0x01
    cmp r6, #0x00
    beq _08042A52
    subs r1, r6, #0x1
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    adds r0, r5, #0x0
    bl sub_804AED4
    mov r8, r0
_08042A52:
    cmp r6, #0x07
    beq _08042A70
    adds r1, r6, #0x1
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    adds r0, r5, #0x0
    bl sub_804AED4
    adds r7, r0, #0x0
    ldr r0, [r7, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _08042AA6
_08042A70:
    cmp r6, #0x00
    beq _08042A8E
    mov r1, r8
    ldr r0, [r1, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _08042AA6
    adds r2, r4, #0x0
    adds r2, #0xAE
    movs r3, #0x00
    ldsh r1, [r2, r3]
    mov r0, r8
    b _08042A98
_08042A8E:
    adds r2, r4, #0x0
    adds r2, #0xAE
    movs r0, #0x00
    ldsh r1, [r2, r0]
    adds r0, r7, #0x0
_08042A98:
    adds r0, #0xAE
    movs r3, #0x00
    ldsh r0, [r0, r3]
    subs r1, r1, r0
    adds r7, r2, #0x0
    cmp r1, #0x01
    ble _08042AB0
_08042AA6:
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl sub_8042004
    b _08042AD8
_08042AB0:
    adds r0, r5, #0x0
    movs r1, #0x00
    bl sub_804AED4
    ldr r0, [r0, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _08042AD8
    cmp r6, #0x07
    beq _08042AD0
    movs r1, #0x00
    ldsh r0, [r7, r1]
    cmp r0, #0x02
    ble _08042AD8
_08042AD0:
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl sub_8042004
_08042AD8:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_8042AE4
sub_8042AE4:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    ldr r1, _08042B3C @ =0x03002E20
    adds r6, r1, #0x0
    adds r6, #0x24
    adds r7, r6, #0x0
    movs r2, #0xBD
    lsls r2, r2, #0x01
    adds r0, r4, r2
    ldrh r0, [r0, #0x00]
    adds r5, r1, #0x0
    cmp r0, #0x00
    bne _08042B00
    b _08042DDA
_08042B00:
    ldr r1, [r4, #0x48]
    movs r0, #0x80
    lsls r0, r0, #0x04
    ands r0, r1
    adds r2, r1, #0x0
    cmp r0, #0x00
    beq _08042B10
    b _08042DDA
_08042B10:
    ldr r1, _08042B40 @ =0x000007FE
    adds r0, r5, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _08042B20
    b _08042DDA
_08042B20:
    movs r1, #0xC6
    lsls r1, r1, #0x01
    adds r0, r4, r1
    ldrh r1, [r0, #0x00]
    ldr r0, _08042B44 @ =0x00001002
    cmp r1, r0
    beq _08042B66
    cmp r1, r0
    bgt _08042B48
    subs r0, #0x02
    cmp r1, r0
    beq _08042B5C
    b _08042B7A
    .byte 0x00, 0x00
_08042B3C: .4byte 0x03002E20
_08042B40: .4byte 0x000007FE
_08042B44: .4byte 0x00001002
_08042B48:
    ldr r0, _08042B58 @ =0x00001004
    cmp r1, r0
    beq _08042B66
    adds r0, #0x01
    cmp r1, r0
    beq _08042B70
    b _08042B7A
    .byte 0x00, 0x00
_08042B58: .4byte 0x00001004
_08042B5C:
    adds r0, r4, #0x0
    adds r1, r6, #0x0
    bl sub_80421F4
    b _08042DDA
_08042B66:
    adds r0, r4, #0x0
    adds r1, r6, #0x0
    bl sub_804279C
    b _08042DDA
_08042B70:
    adds r0, r4, #0x0
    adds r1, r6, #0x0
    bl sub_8042454
    b _08042DDA
_08042B7A:
    movs r0, #0x20
    ands r0, r2
    cmp r0, #0x00
    beq _08042B84
    b _08042DDA
_08042B84:
    movs r2, #0xBD
    lsls r2, r2, #0x01
    adds r0, r4, r2
    ldrh r0, [r0, #0x00]
    cmp r0, #0x01
    bne _08042B92
    b _08042DDA
_08042B92:
    ldr r1, _08042BB4 @ =0x00000C62
    adds r0, r6, r1
    ldrh r0, [r0, #0x00]
    cmp r0, #0x00
    beq _08042B9E
    b _08042DDA
_08042B9E:
    ldr r2, _08042BB8 @ =0x000007DC
    adds r0, r6, r2
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    beq _08042BBC
    cmp r0, #0x01
    ble _08042BC4
    cmp r0, #0x02
    beq _08042BC0
    b _08042BC4
    .byte 0x00, 0x00
_08042BB4: .4byte 0x00000C62
_08042BB8: .4byte 0x000007DC
_08042BBC:
    movs r3, #0x80
    b _08042BC8
_08042BC0:
    movs r3, #0x40
    b _08042BC8
_08042BC4:
    movs r3, #0x80
    lsls r3, r3, #0x01
_08042BC8:
    adds r0, r4, #0x0
    adds r0, #0xEC
    ldrb r0, [r0, #0x00]
    adds r2, r0, #0x0
    muls r2, r3
    ldr r1, [r5, #0x10]
    lsls r0, r3, #0x03
    subs r0, #0x01
    ands r1, r0
    eors r2, r1
    negs r0, r2
    orrs r0, r2
    cmp r0, #0x00
    bge _08042BE6
    b _08042DDA
_08042BE6:
    adds r2, r4, #0x0
    adds r2, #0x91
    ldrb r1, [r2, #0x00]
    movs r0, #0x7F
    ands r0, r1
    movs r3, #0x00
    cmp r0, #0x00
    bne _08042C06
    adds r0, r4, #0x0
    adds r0, #0x90
    ldrh r1, [r7, #0x14]
    ldrb r0, [r0, #0x00]
    lsrs r1, r1, #0x01
    cmp r0, r1
    bhi _08042C06
    movs r3, #0x01
_08042C06:
    cmp r3, #0x00
    beq _08042C0C
    b _08042DDA
_08042C0C:
    ldrb r0, [r2, #0x00]
    movs r2, #0x7F
    ands r2, r0
    ldr r1, _08042C54 @ =0x000007E6
    adds r0, r6, r1
    ldrh r0, [r0, #0x00]
    lsrs r0, r0, #0x08
    movs r1, #0x7F
    ands r0, r1
    subs r0, #0x01
    movs r3, #0x00
    cmp r2, r0
    bne _08042C36
    adds r0, r4, #0x0
    adds r0, #0x90
    ldrh r1, [r7, #0x14]
    ldrb r0, [r0, #0x00]
    lsrs r1, r1, #0x01
    cmp r0, r1
    bcc _08042C36
    movs r3, #0x01
_08042C36:
    cmp r3, #0x00
    beq _08042C3C
    b _08042DDA
_08042C3C:
    movs r2, #0xBD
    lsls r2, r2, #0x01
    adds r0, r4, r2
    ldrh r1, [r0, #0x00]
    ldr r0, _08042C58 @ =0x00001001
    cmp r1, r0
    beq _08042C5C
    adds r0, #0x02
    cmp r1, r0
    beq _08042C6C
    b _08042C74
    .byte 0x00, 0x00
_08042C54: .4byte 0x000007E6
_08042C58: .4byte 0x00001001
_08042C5C:
    ldr r1, _08042C68 @ =0x0000100C
    adds r0, r4, #0x0
    bl sub_803D9D4
    b _08042C74
    .byte 0x00, 0x00
_08042C68: .4byte 0x0000100C
_08042C6C:
    ldr r1, _08042C90 @ =0x00001005
    adds r0, r4, #0x0
    bl sub_803D9D4
_08042C74:
    movs r1, #0xBD
    lsls r1, r1, #0x01
    adds r0, r4, r1
    ldrh r0, [r0, #0x00]
    ldr r2, _08042C94 @ =0xFFFFF000
    adds r0, r0, r2
    cmp r0, #0x0C
    bls _08042C86
    b _08042DDA
_08042C86:
    lsls r0, r0, #0x02
    ldr r1, _08042C98 @ =0x08042C9C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08042C90: .4byte 0x00001005
_08042C94: .4byte 0xFFFFF000
_08042C98: .4byte 0x08042C9C
    .byte 0xD0, 0x2C, 0x04, 0x08, 0xDA, 0x2D, 0x04, 0x08, 0xDA, 0x2C, 0x04, 0x08, 0xDA, 0x2D, 0x04, 0x08
    .byte 0xDA, 0x2C, 0x04, 0x08, 0xD0, 0x2C, 0x04, 0x08, 0xDA, 0x2D, 0x04, 0x08, 0xE4, 0x2C, 0x04, 0x08
    .byte 0xDA, 0x2D, 0x04, 0x08, 0xDA, 0x2D, 0x04, 0x08, 0xE4, 0x2C, 0x04, 0x08, 0x5C, 0x2D, 0x04, 0x08
    .byte 0xEE, 0x2C, 0x04, 0x08, 0x20, 0x1C, 0x31, 0x1C, 0xFF, 0xF7, 0x16, 0xFA, 0x7F, 0xE0, 0x20, 0x1C
    .byte 0x31, 0x1C, 0xFF, 0xF7, 0xE5, 0xFC, 0x7A, 0xE0, 0x20, 0x1C, 0x31, 0x1C, 0xFF, 0xF7, 0x9E, 0xFE
    .byte 0x75, 0xE0, 0x00, 0x27, 0x20, 0x1C, 0xBA, 0x30, 0x00, 0x88, 0x45, 0x08, 0x00, 0x2D, 0x06, 0xD0
    .byte 0x69, 0x1E, 0x09, 0x06, 0x09, 0x0E, 0x30, 0x1C, 0x08, 0xF0, 0xE6, 0xF8, 0x07, 0x1C, 0x07, 0x2D
    .byte 0x0B, 0xD0, 0x69, 0x1C, 0x09, 0x06, 0x09, 0x0E, 0x30, 0x1C, 0x08, 0xF0, 0xDD, 0xF8, 0x80, 0x6C
    .byte 0x80, 0x21, 0x09, 0x02, 0x08, 0x40, 0x00, 0x28, 0x3E, 0xD1, 0x00, 0x2D, 0x05, 0xD0, 0xB8, 0x6C
    .byte 0x80, 0x21, 0x09, 0x02, 0x08, 0x40, 0x00, 0x28, 0x36, 0xD1, 0x30, 0x1C, 0x00, 0x21, 0x08, 0xF0
    .byte 0xCB, 0xF8, 0x80, 0x6C, 0x80, 0x21, 0x09, 0x02, 0x08, 0x40, 0x00, 0x28, 0x47, 0xD0, 0x07, 0x2D
    .byte 0x2A, 0xD0, 0x20, 0x1C, 0xAE, 0x30, 0x00, 0x21, 0x40, 0x5E, 0x02, 0x28, 0x3F, 0xDD, 0x23, 0xE0
    .byte 0x00, 0x27, 0x20, 0x1C, 0xBA, 0x30, 0x00, 0x88, 0x45, 0x08, 0x00, 0x2D, 0x06, 0xD0, 0x69, 0x1E
    .byte 0x09, 0x06, 0x09, 0x0E, 0x30, 0x1C, 0x08, 0xF0, 0xAF, 0xF8, 0x07, 0x1C, 0x07, 0x2D, 0x0B, 0xD0
    .byte 0x69, 0x1C, 0x09, 0x06, 0x09, 0x0E, 0x30, 0x1C, 0x08, 0xF0, 0xA6, 0xF8, 0x80, 0x6C, 0x80, 0x21
    .byte 0x09, 0x02, 0x08, 0x40, 0x00, 0x28, 0x07, 0xD1, 0x00, 0x2D, 0x0A, 0xD0, 0xB8, 0x6C, 0x80, 0x21
    .byte 0x09, 0x02, 0x08, 0x40, 0x00, 0x28, 0x04, 0xD0, 0x20, 0x1C, 0x31, 0x1C, 0xFF, 0xF7, 0x2C, 0xF9
    .byte 0x15, 0xE0, 0x30, 0x1C, 0x00, 0x21, 0x08, 0xF0, 0x8F, 0xF8, 0x80, 0x6C, 0x80, 0x21, 0x09, 0x02
    .byte 0x08, 0x40, 0x00, 0x28, 0x0B, 0xD0, 0x07, 0x2D, 0x05, 0xD0, 0x20, 0x1C, 0xAE, 0x30, 0x00, 0x22
    .byte 0x80, 0x5E, 0x02, 0x28, 0x03, 0xDD, 0x20, 0x1C, 0x31, 0x1C, 0xFF, 0xF7, 0x15, 0xF9
_08042DDA:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    thumb_func_start sub_8042DE0
sub_8042DE0:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x044
    str r0, [sp, #0x040]
    ldr r0, _08042E0C @ =0x03002E20
    movs r1, #0x24
    adds r1, r1, r0
    mov r10, r1
    movs r2, #0x80
    lsls r2, r2, #0x04
    adds r0, r0, r2
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    beq _08042E1A
    cmp r0, #0x01
    bgt _08042E10
    cmp r0, #0x00
    beq _08042E24
    b _08042E2A
_08042E0C: .4byte 0x03002E20
_08042E10:
    cmp r0, #0x02
    beq _08042E1E
    cmp r0, #0x03
    beq _08042E24
    b _08042E2A
_08042E1A:
    movs r1, #0x02
    b _08042E2C
_08042E1E:
    movs r2, #0x04
    mov r9, r2
    b _08042E2E
_08042E24:
    movs r0, #0x00
    mov r9, r0
    b _08042E2E
_08042E2A:
    movs r1, #0x00
_08042E2C:
    mov r9, r1
_08042E2E:
    ldr r2, [sp, #0x040]
    cmp r2, #0x00
    bne _08042EB4
    movs r3, #0x00
    movs r0, #0xFE
    lsls r0, r0, #0x03
    add r0, r10
    ldrb r1, [r0, #0x00]
    cmp r3, r1
    bge _08042E60
    adds r4, r0, #0x0
    ldr r1, _08042E8C @ =0x000007F4
    add r1, r10
_08042E48:
    ldm r1!, {r2}
    adds r0, r2, #0x0
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r0, r0, #0x01
    lsls r0, r0, #0x02
    add r0, sp
    str r2, [r0, #0x00]
    adds r3, #0x01
    ldrb r2, [r4, #0x00]
    cmp r3, r2
    blt _08042E48
_08042E60:
    movs r5, #0x08
    movs r3, #0x00
    movs r0, #0xFE
    lsls r0, r0, #0x03
    add r0, r10
    ldrb r1, [r0, #0x00]
    cmp r3, r1
    bge _08042EB0
    adds r6, r0, #0x0
    mov r4, sp
    movs r7, #0x80
    lsls r7, r7, #0x08
_08042E78:
    ldr r2, [r4, #0x00]
    ldr r0, [r2, #0x48]
    ands r0, r7
    cmp r0, #0x00
    beq _08042E90
    adds r1, r2, #0x0
    adds r1, #0xAE
    movs r0, #0x04
    strh r0, [r1, #0x00]
    b _08042EA6
_08042E8C: .4byte 0x000007F4
_08042E90:
    mov r0, r9
    adds r1, r5, r0
    cmp r3, #0x03
    bgt _08042E9A
    adds r1, #0x01
_08042E9A:
    adds r0, r2, #0x0
    adds r0, #0xAE
    strh r1, [r0, #0x00]
    cmp r5, #0x00
    beq _08042EA6
    subs r5, #0x02
_08042EA6:
    adds r4, #0x04
    adds r3, #0x01
    ldrb r1, [r6, #0x00]
    cmp r3, r1
    blt _08042E78
_08042EB0:
    movs r1, #0x00
    b _08042FAE
_08042EB4:
    movs r3, #0x00
    movs r0, #0xFE
    lsls r0, r0, #0x03
    add r0, r10
    add r1, sp, #0x020
    ldrb r2, [r0, #0x00]
    cmp r3, r2
    bge _08042EE2
    adds r7, r1, #0x0
    mov r6, sp
    ldr r5, _08042F6C @ =0x000007F4
    add r5, r10
    adds r4, r0, #0x0
_08042ECE:
    ldm r5!, {r2}
    stm r6!, {r2}
    adds r0, r2, #0x0
    adds r0, #0xC4
    ldrb r0, [r0, #0x00]
    stm r7!, {r0}
    adds r3, #0x01
    ldrb r0, [r4, #0x00]
    cmp r3, r0
    blt _08042ECE
_08042EE2:
    movs r3, #0x00
    adds r6, r1, #0x0
    mov r12, r6
_08042EE8:
    lsls r1, r3, #0x02
    adds r0, r6, r1
    ldr r4, [r0, #0x00]
    adds r2, r3, #0x1
    adds r7, r1, #0x0
    adds r5, r2, #0x0
    cmp r5, #0x07
    bgt _08042F0E
    lsls r0, r5, #0x02
    add r0, r12
_08042EFC:
    ldr r1, [r0, #0x00]
    cmp r1, r4
    ble _08042F06
    adds r4, r1, #0x0
    adds r3, r2, #0x0
_08042F06:
    adds r0, #0x04
    adds r2, #0x01
    cmp r2, #0x07
    ble _08042EFC
_08042F0E:
    lsls r3, r3, #0x02
    adds r2, r6, r3
    adds r1, r6, r7
    ldr r0, [r1, #0x00]
    str r0, [r2, #0x00]
    str r4, [r1, #0x00]
    mov r1, sp
    adds r2, r1, r3
    ldr r3, [r2, #0x00]
    adds r1, r1, r7
    ldr r0, [r1, #0x00]
    str r0, [r2, #0x00]
    str r3, [r1, #0x00]
    adds r3, r5, #0x0
    cmp r3, #0x06
    ble _08042EE8
    movs r5, #0x08
    movs r6, #0x01
    negs r6, r6
    adds r7, r6, #0x0
    movs r3, #0x00
    movs r0, #0xFE
    lsls r0, r0, #0x03
    add r0, r10
    ldrb r2, [r0, #0x00]
    cmp r3, r2
    bge _08042F9E
    mov r12, r6
    mov r8, r0
    mov r4, sp
_08042F4A:
    ldr r2, [r4, #0x00]
    ldr r0, [r2, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _08042F70
    cmp r7, r12
    bne _08042F62
    adds r0, r2, #0x0
    adds r0, #0xC4
    ldrb r7, [r0, #0x00]
_08042F62:
    adds r1, r2, #0x0
    adds r1, #0xAE
    movs r0, #0x04
    strh r0, [r1, #0x00]
    b _08042F92
_08042F6C: .4byte 0x000007F4
_08042F70:
    cmp r6, r12
    bne _08042F7A
    adds r0, r2, #0x0
    adds r0, #0xC4
    ldrb r6, [r0, #0x00]
_08042F7A:
    mov r0, r9
    adds r1, r5, r0
    cmp r3, #0x03
    bgt _08042F86
    ldr r0, [sp, #0x040]
    adds r1, r1, r0
_08042F86:
    adds r0, r2, #0x0
    adds r0, #0xAE
    strh r1, [r0, #0x00]
    cmp r5, #0x00
    beq _08042F92
    subs r5, #0x02
_08042F92:
    adds r4, #0x04
    adds r3, #0x01
    mov r1, r8
    ldrb r1, [r1, #0x00]
    cmp r3, r1
    blt _08042F4A
_08042F9E:
    subs r0, r7, r6
    movs r1, #0x02
    cmp r0, #0x08
    bgt _08042FAE
    movs r1, #0x00
    cmp r0, #0x02
    ble _08042FAE
    movs r1, #0x01
_08042FAE:
    ldr r0, _08042FC4 @ =0x00000C64
    add r0, r10
    strb r1, [r0, #0x00]
    add sp, #0x044
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08042FC4: .4byte 0x00000C64
    thumb_func_start sub_8042FC8
sub_8042FC8:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    adds r6, r1, #0x0
    movs r4, #0x00
    cmp r4, r5
    bge _08042FF4
_08042FD4:
    lsls r1, r4, #0x18
    lsrs r1, r1, #0x18
    adds r0, r6, #0x0
    bl sub_804AED4
    ldr r0, [r0, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _08042FEE
    movs r0, #0x01
    b _08042FF6
_08042FEE:
    adds r4, #0x01
    cmp r4, r5
    blt _08042FD4
_08042FF4:
    movs r0, #0x00
_08042FF6:
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    thumb_func_start sub_8042FFC
sub_8042FFC:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r0, _08043028 @ =0x03002E20
    adds r1, r0, #0x0
    adds r1, #0x24
    ldr r3, _0804302C @ =0x00000C86
    adds r2, r0, r3
    ldrh r0, [r2, #0x00]
    cmp r0, #0x00
    beq _08043014
    subs r0, #0x01
    strh r0, [r2, #0x00]
_08043014:
    adds r0, r4, #0x0
    bl sub_8041F18
    adds r1, r4, #0x0
    adds r1, #0x9A
    strb r0, [r1, #0x00]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08043028: .4byte 0x03002E20
_0804302C: .4byte 0x00000C86
    thumb_func_start sub_8043030
sub_8043030:
    ldr r2, _08043060 @ =0x00000C8C
    adds r1, r0, r2
    movs r2, #0x00
    movs r3, #0x00
    strh r3, [r1, #0x08]
    strb r2, [r1, #0x0A]
    str r3, [r1, #0x0C]
    str r3, [r1, #0x10]
    strb r2, [r1, #0x14]
    strb r2, [r1, #0x15]
    strb r2, [r1, #0x16]
    strb r2, [r1, #0x17]
    strb r2, [r1, #0x18]
    strb r2, [r1, #0x19]
    strb r2, [r1, #0x1A]
    strb r2, [r1, #0x1B]
    strb r2, [r1, #0x1C]
    str r3, [r1, #0x20]
    movs r1, #0xCB
    lsls r1, r1, #0x04
    adds r0, r0, r1
    strb r2, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
_08043060: .4byte 0x00000C8C
    thumb_func_start sub_8043064
sub_8043064:
    push {r4, r5, lr}
    adds r2, r0, #0x0
    ldr r1, _080430DC @ =0x000007DA
    adds r0, r2, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    bne _080430D4
    ldr r1, _080430E0 @ =0x00000814
    adds r0, r2, r1
    ldr r5, [r0, #0x00]
    ldr r0, [r5, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _080430D4
    ldr r0, _080430E4 @ =0x00000C8C
    adds r4, r2, r0
    adds r2, r5, #0x0
    adds r2, #0x96
    ldrh r1, [r2, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _080430A6
    ldr r3, [r4, #0x0C]
    ldr r0, _080430E8 @ =0x0000FFFF
    cmp r3, r0
    bhi _080430A6
    adds r0, r3, #0x1
    str r0, [r4, #0x0C]
_080430A6:
    ldrh r1, [r2, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x07
    ands r0, r1
    cmp r0, #0x00
    beq _080430BE
    ldr r1, [r4, #0x10]
    ldr r0, _080430E8 @ =0x0000FFFF
    cmp r1, r0
    bhi _080430BE
    adds r0, r1, #0x1
    str r0, [r4, #0x10]
_080430BE:
    adds r0, r5, #0x0
    adds r0, #0x85
    ldrb r0, [r0, #0x00]
    cmp r0, #0x59
    bls _080430D4
    ldr r1, [r4, #0x20]
    ldr r0, _080430E8 @ =0x0000FFFF
    cmp r1, r0
    bhi _080430D4
    adds r0, r1, #0x1
    str r0, [r4, #0x20]
_080430D4:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_080430DC: .4byte 0x000007DA
_080430E0: .4byte 0x00000814
_080430E4: .4byte 0x00000C8C
_080430E8: .4byte 0x0000FFFF
    thumb_func_start sub_80430EC
sub_80430EC:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    mov r9, r0
    adds r4, r1, #0x0
    ldr r1, _08043160 @ =0x00000814
    adds r0, r4, r1
    ldr r0, [r0, #0x00]
    mov r8, r0
    ldr r2, _08043164 @ =0x00000C8C
    adds r5, r4, r2
    ldrh r3, [r4, #0x14]
    mov r10, r3
    subs r1, #0x37
    adds r0, r4, r1
    ldrb r0, [r0, #0x00]
    bl sub_8032BC8
    movs r6, #0x00
    cmp r0, #0x00
    beq _0804311C
    movs r6, #0x64
_0804311C:
    bl sub_8002C24
    movs r1, #0x03
    ands r1, r0
    lsls r1, r1, #0x05
    adds r1, #0x26
    adds r7, r5, r1
    ldr r2, _08043168 @ =0x000007DA
    adds r0, r4, r2
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    beq _0804313A
    b _080432C6
_0804313A:
    cmp r8, r9
    beq _08043140
    b _080432C6
_08043140:
    mov r0, r8
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r0, r0, #0x01
    cmp r0, #0x03
    bhi _08043174
    ldr r2, _0804316C @ =0x080ECD00
    lsls r1, r0, #0x02
    ldr r3, _08043170 @ =0x00000C64
    adds r0, r4, r3
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x04
    adds r1, r1, r0
    adds r1, r1, r2
    ldr r2, [r1, #0x00]
    b _08043176
_08043160: .4byte 0x00000814
_08043164: .4byte 0x00000C8C
_08043168: .4byte 0x000007DA
_0804316C: .4byte 0x080ECD00
_08043170: .4byte 0x00000C64
_08043174:
    movs r2, #0x00
_08043176:
    adds r6, r6, r2
    strh r2, [r7, #0x00]
    movs r0, #0xBC
    lsls r0, r0, #0x01
    add r0, r8
    ldrh r0, [r0, #0x00]
    lsls r2, r0, #0x02
    adds r6, r6, r2
    strh r2, [r7, #0x02]
    ldrb r1, [r5, #0x0A]
    lsls r0, r1, #0x02
    adds r0, r0, r1
    lsls r2, r0, #0x03
    adds r6, r6, r2
    strh r2, [r7, #0x04]
    mov r0, r8
    bl sub_803DAC4
    mov r0, r8
    bl sub_803DAC4
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    ldr r1, _08043248 @ =0x080ECD30
    ldr r3, _0804324C @ =0x000007DC
    adds r0, r4, r3
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov r1, r10
    muls r1, r0
    adds r0, r1, #0x0
    subs r0, r0, r2
    cmp r0, #0x00
    bge _080431C0
    adds r0, #0x07
_080431C0:
    asrs r2, r0, #0x03
    cmp r2, #0x00
    bge _080431C8
    movs r2, #0x00
_080431C8:
    adds r6, r6, r2
    strh r2, [r7, #0x06]
    ldr r2, _08043250 @ =0x080ECD3C
    mov r0, r8
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r2, [r0, #0x00]
    adds r6, r6, r2
    strh r2, [r7, #0x08]
    ldr r0, [r5, #0x0C]
    lsrs r2, r0, #0x02
    subs r6, r6, r2
    strh r2, [r7, #0x0A]
    ldr r0, [r5, #0x10]
    lsls r2, r0, #0x01
    subs r6, r6, r2
    strh r2, [r7, #0x0C]
    ldrb r1, [r5, #0x14]
    lsls r0, r1, #0x02
    adds r2, r0, r1
    ldrb r1, [r5, #0x15]
    lsls r0, r1, #0x04
    subs r0, r0, r1
    lsls r0, r0, #0x01
    adds r2, r2, r0
    ldrb r1, [r5, #0x16]
    lsls r0, r1, #0x02
    adds r0, r0, r1
    adds r2, r2, r0
    subs r6, r6, r2
    strh r2, [r7, #0x0E]
    ldrb r1, [r5, #0x17]
    lsls r0, r1, #0x04
    subs r0, r0, r1
    lsls r2, r0, #0x01
    ldrb r1, [r5, #0x18]
    lsls r0, r1, #0x04
    subs r0, r0, r1
    adds r2, r2, r0
    ldrb r1, [r5, #0x19]
    lsls r0, r1, #0x02
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r2, r2, r0
    ldrb r1, [r5, #0x1A]
    lsls r0, r1, #0x04
    subs r0, r0, r1
    adds r2, r2, r0
    subs r6, r6, r2
    strh r2, [r7, #0x10]
    bl sub_8002C3C
    movs r1, #0x03
    subs r2, r1, r0
    cmp r2, #0x00
    ble _08043254
    lsls r0, r2, #0x04
    subs r0, r0, r2
    lsls r0, r0, #0x03
    b _08043256
_08043248: .4byte 0x080ECD30
_0804324C: .4byte 0x000007DC
_08043250: .4byte 0x080ECD3C
_08043254:
    movs r0, #0x00
_08043256:
    adds r2, r0, #0x0
    subs r6, r6, r2
    strh r2, [r7, #0x12]
    ldrb r1, [r5, #0x1B]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x03
    adds r2, r0, r1
    ldrb r1, [r5, #0x1C]
    lsls r0, r1, #0x04
    subs r0, r0, r1
    adds r2, r2, r0
    adds r0, r5, #0x0
    adds r0, #0x24
    ldrb r1, [r0, #0x00]
    lsls r0, r1, #0x04
    subs r0, r0, r1
    adds r2, r2, r0
    adds r6, r6, r2
    strh r2, [r7, #0x14]
    ldr r0, [r5, #0x20]
    lsrs r2, r0, #0x02
    subs r6, r6, r2
    strh r2, [r7, #0x16]
    bl sub_8002C24
    movs r4, #0x03
    ands r0, r4
    lsls r0, r0, #0x01
    adds r0, r5, r0
    strh r6, [r0, #0x00]
    strh r6, [r7, #0x18]
    bl sub_8002C24
    ands r0, r4
    cmp r0, #0x03
    bne _080432C6
    movs r2, #0x00
    ldsh r0, [r5, r2]
    movs r3, #0x02
    ldsh r1, [r5, r3]
    adds r0, r0, r1
    movs r2, #0x04
    ldsh r1, [r5, r2]
    adds r0, r0, r1
    movs r3, #0x06
    ldsh r1, [r5, r3]
    adds r0, r0, r1
    cmp r0, #0x00
    bge _080432BC
    adds r0, #0x03
_080432BC:
    asrs r2, r0, #0x02
    strh r2, [r5, #0x08]
    adds r0, r5, #0x0
    adds r0, #0xBE
    strh r2, [r0, #0x00]
_080432C6:
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    thumb_func_start sub_80432D4
sub_80432D4:
    adds r2, r1, #0x0
    ldr r3, _08043304 @ =0x00000814
    adds r1, r2, r3
    ldr r3, [r1, #0x00]
    cmp r3, r0
    bne _08043302
    ldr r1, _08043308 @ =0x000007DA
    adds r0, r2, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    bne _08043302
    ldr r0, [r3, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08043302
    ldr r3, _0804330C @ =0x00000C8C
    adds r1, r2, r3
    ldrb r0, [r1, #0x0A]
    adds r0, #0x01
    strb r0, [r1, #0x0A]
_08043302:
    bx lr
_08043304: .4byte 0x00000814
_08043308: .4byte 0x000007DA
_0804330C: .4byte 0x00000C8C
    thumb_func_start sub_8043310
sub_8043310:
    adds r2, r1, #0x0
    ldr r3, _08043338 @ =0x00000814
    adds r1, r2, r3
    ldr r1, [r1, #0x00]
    cmp r1, r0
    bne _08043334
    ldr r1, _0804333C @ =0x000007DA
    adds r0, r2, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    bne _08043334
    ldr r3, _08043340 @ =0x00000C8C
    adds r1, r2, r3
    ldrb r0, [r1, #0x14]
    adds r0, #0x01
    strb r0, [r1, #0x14]
_08043334:
    bx lr
    .byte 0x00, 0x00
_08043338: .4byte 0x00000814
_0804333C: .4byte 0x000007DA
_08043340: .4byte 0x00000C8C
    thumb_func_start sub_8043344
sub_8043344:
    adds r2, r1, #0x0
    ldr r3, _0804336C @ =0x00000814
    adds r1, r2, r3
    ldr r1, [r1, #0x00]
    cmp r1, r0
    bne _08043368
    ldr r1, _08043370 @ =0x000007DA
    adds r0, r2, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    bne _08043368
    ldr r3, _08043374 @ =0x00000C8C
    adds r1, r2, r3
    ldrb r0, [r1, #0x15]
    adds r0, #0x01
    strb r0, [r1, #0x15]
_08043368:
    bx lr
    .byte 0x00, 0x00
_0804336C: .4byte 0x00000814
_08043370: .4byte 0x000007DA
_08043374: .4byte 0x00000C8C
    thumb_func_start sub_8043378
sub_8043378:
    adds r2, r1, #0x0
    ldr r3, _080433A0 @ =0x00000814
    adds r1, r2, r3
    ldr r1, [r1, #0x00]
    cmp r1, r0
    bne _0804339C
    ldr r1, _080433A4 @ =0x000007DA
    adds r0, r2, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    bne _0804339C
    ldr r3, _080433A8 @ =0x00000C8C
    adds r1, r2, r3
    ldrb r0, [r1, #0x16]
    adds r0, #0x01
    strb r0, [r1, #0x16]
_0804339C:
    bx lr
    .byte 0x00, 0x00
_080433A0: .4byte 0x00000814
_080433A4: .4byte 0x000007DA
_080433A8: .4byte 0x00000C8C
    thumb_func_start sub_80433AC
sub_80433AC:
    adds r2, r1, #0x0
    ldr r3, _080433DC @ =0x00000814
    adds r1, r2, r3
    ldr r3, [r1, #0x00]
    cmp r3, r0
    bne _080433DA
    ldr r1, _080433E0 @ =0x000007DA
    adds r0, r2, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    bne _080433DA
    ldr r0, [r3, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _080433DA
    ldr r3, _080433E4 @ =0x00000C8C
    adds r1, r2, r3
    ldrb r0, [r1, #0x17]
    adds r0, #0x01
    strb r0, [r1, #0x17]
_080433DA:
    bx lr
_080433DC: .4byte 0x00000814
_080433E0: .4byte 0x000007DA
_080433E4: .4byte 0x00000C8C
    thumb_func_start sub_80433E8
sub_80433E8:
    adds r2, r1, #0x0
    ldr r3, _08043418 @ =0x00000814
    adds r1, r2, r3
    ldr r3, [r1, #0x00]
    cmp r3, r0
    bne _08043416
    ldr r1, _0804341C @ =0x000007DA
    adds r0, r2, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    bne _08043416
    ldr r0, [r3, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08043416
    ldr r3, _08043420 @ =0x00000C8C
    adds r1, r2, r3
    ldrb r0, [r1, #0x18]
    adds r0, #0x01
    strb r0, [r1, #0x18]
_08043416:
    bx lr
_08043418: .4byte 0x00000814
_0804341C: .4byte 0x000007DA
_08043420: .4byte 0x00000C8C
    thumb_func_start sub_8043424
sub_8043424:
    adds r2, r1, #0x0
    ldr r3, _08043454 @ =0x00000814
    adds r1, r2, r3
    ldr r3, [r1, #0x00]
    cmp r3, r0
    bne _08043452
    ldr r1, _08043458 @ =0x000007DA
    adds r0, r2, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    bne _08043452
    ldr r0, [r3, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08043452
    ldr r3, _0804345C @ =0x00000C8C
    adds r1, r2, r3
    ldrb r0, [r1, #0x19]
    adds r0, #0x01
    strb r0, [r1, #0x19]
_08043452:
    bx lr
_08043454: .4byte 0x00000814
_08043458: .4byte 0x000007DA
_0804345C: .4byte 0x00000C8C
    thumb_func_start sub_8043460
sub_8043460:
    adds r2, r1, #0x0
    ldr r3, _08043490 @ =0x00000814
    adds r1, r2, r3
    ldr r3, [r1, #0x00]
    cmp r3, r0
    bne _0804348E
    ldr r1, _08043494 @ =0x000007DA
    adds r0, r2, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    bne _0804348E
    ldr r0, [r3, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0804348E
    ldr r3, _08043498 @ =0x00000C8C
    adds r1, r2, r3
    ldrb r0, [r1, #0x1A]
    adds r0, #0x01
    strb r0, [r1, #0x1A]
_0804348E:
    bx lr
_08043490: .4byte 0x00000814
_08043494: .4byte 0x000007DA
_08043498: .4byte 0x00000C8C
    thumb_func_start sub_804349C
sub_804349C:
    adds r2, r1, #0x0
    ldr r3, _080434CC @ =0x00000814
    adds r1, r2, r3
    ldr r3, [r1, #0x00]
    cmp r3, r0
    bne _080434CA
    ldr r1, _080434D0 @ =0x000007DA
    adds r0, r2, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    bne _080434CA
    ldr r0, [r3, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _080434CA
    ldr r3, _080434D4 @ =0x00000C8C
    adds r1, r2, r3
    ldrb r0, [r1, #0x1B]
    adds r0, #0x01
    strb r0, [r1, #0x1B]
_080434CA:
    bx lr
_080434CC: .4byte 0x00000814
_080434D0: .4byte 0x000007DA
_080434D4: .4byte 0x00000C8C
    thumb_func_start sub_80434D8
sub_80434D8:
    adds r2, r1, #0x0
    ldr r3, _08043508 @ =0x00000814
    adds r1, r2, r3
    ldr r3, [r1, #0x00]
    cmp r3, r0
    bne _08043506
    ldr r1, _0804350C @ =0x000007DA
    adds r0, r2, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    bne _08043506
    ldr r0, [r3, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08043506
    ldr r3, _08043510 @ =0x00000C8C
    adds r1, r2, r3
    ldrb r0, [r1, #0x1C]
    adds r0, #0x01
    strb r0, [r1, #0x1C]
_08043506:
    bx lr
_08043508: .4byte 0x00000814
_0804350C: .4byte 0x000007DA
_08043510: .4byte 0x00000C8C
    thumb_func_start sub_8043514
sub_8043514:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldr r1, _08043548 @ =0x000007DA
    adds r0, r2, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    bne _08043546
    ldr r1, _0804354C @ =0x00000814
    adds r0, r2, r1
    ldr r0, [r0, #0x00]
    cmp r0, r3
    bne _08043546
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08043546
    movs r0, #0xCB
    lsls r0, r0, #0x04
    adds r1, r2, r0
    ldrb r0, [r1, #0x00]
    adds r0, #0x01
    strb r0, [r1, #0x00]
_08043546:
    bx lr
_08043548: .4byte 0x000007DA
_0804354C: .4byte 0x00000814
    thumb_func_start sub_8043550
sub_8043550:
    ldr r2, _08043588 @ =0x00000C8C
    adds r1, r0, r2
    ldr r2, _0804358C @ =0x00000814
    adds r0, r0, r2
    ldr r0, [r0, #0x00]
    adds r0, #0xC4
    ldrb r0, [r0, #0x00]
    movs r2, #0x08
    ldsh r3, [r1, r2]
    movs r2, #0x03
    cmp r0, #0x23
    bgt _0804357C
    movs r2, #0x04
    cmp r0, #0x1B
    bgt _0804357C
    movs r2, #0x05
    cmp r0, #0x15
    bgt _0804357C
    movs r2, #0x07
    cmp r0, #0x0E
    ble _0804357C
    movs r2, #0x06
_0804357C:
    ldr r0, _08043590 @ =0x0000013F
    cmp r3, r0
    ble _08043594
    subs r1, r2, #0x3
    b _080435B8
    .byte 0x00, 0x00
_08043588: .4byte 0x00000C8C
_0804358C: .4byte 0x00000814
_08043590: .4byte 0x0000013F
_08043594:
    cmp r3, #0xC7
    ble _0804359C
    subs r1, r2, #0x2
    b _080435B8
_0804359C:
    cmp r3, #0x63
    ble _080435A4
    subs r1, r2, #0x1
    b _080435B8
_080435A4:
    cmp r3, #0x1D
    ble _080435AC
    adds r1, r2, #0x0
    b _080435B8
_080435AC:
    movs r0, #0x78
    negs r0, r0
    adds r1, r2, #0x2
    cmp r3, r0
    blt _080435B8
    adds r1, r2, #0x1
_080435B8:
    cmp r1, #0x07
    ble _080435BE
    movs r1, #0x07
_080435BE:
    cmp r1, #0x00
    bge _080435C4
    movs r1, #0x00
_080435C4:
    adds r0, r1, #0x0
    bx lr
    thumb_func_start sub_80435C8
sub_80435C8:
    push {r4, r5, lr}
    adds r3, r0, #0x0
    movs r4, #0x00
    ldrb r2, [r3, #0x01]
    adds r5, r2, #0x0
    ldr r1, [r3, #0x04]
    ldr r0, _080435FC @ =0x07FFFFFF
    cmp r1, r0
    bls _080436A6
    ldrb r1, [r3, #0x00]
    movs r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _08043654
    movs r0, #0x3F
    ands r0, r2
    cmp r0, #0x00
    beq _0804360C
    cmp r0, #0x3F
    beq _0804360C
    ldr r1, _08043600 @ =0x080ECD5C
    cmp r2, #0x3F
    bls _08043604
    movs r0, #0x7F
    subs r0, r0, r2
    b _08043606
_080435FC: .4byte 0x07FFFFFF
_08043600: .4byte 0x080ECD5C
_08043604:
    adds r0, r2, #0x0
_08043606:
    adds r0, r1, r0
    ldrb r1, [r0, #0x00]
    b _0804362E
_0804360C:
    ldrb r1, [r3, #0x03]
    cmp r1, #0x00
    bne _0804362E
    adds r0, r5, #0x0
    subs r0, #0x3F
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0x01
    bhi _08043628
    ldr r0, _08043624 @ =0x080ECD5C
    adds r0, #0x3F
    b _0804362A
_08043624: .4byte 0x080ECD5C
_08043628:
    ldr r0, _08043640 @ =0x080ECD5C
_0804362A:
    ldrb r0, [r0, #0x00]
    adds r1, r0, #0x0
_0804362E:
    ldrb r0, [r3, #0x02]
    cmp r0, #0x01
    beq _08043644
    cmp r0, #0x01
    ble _08043682
    cmp r0, #0x02
    beq _0804364C
    b _080436E8
    .byte 0x00, 0x00
_08043640: .4byte 0x080ECD5C
_08043644:
    lsls r0, r1, #0x09
    movs r1, #0x88
    lsls r1, r1, #0x09
    b _080436E6
_0804364C:
    lsls r0, r1, #0x07
    movs r1, #0xA4
    lsls r1, r1, #0x09
    b _080436E6
_08043654:
    cmp r2, #0x00
    beq _0804366E
    ldr r1, _08043664 @ =0x080ECD9C
    cmp r2, #0x3F
    bls _08043668
    movs r0, #0x7F
    subs r0, r0, r2
    b _0804366A
_08043664: .4byte 0x080ECD9C
_08043668:
    adds r0, r2, #0x0
_0804366A:
    adds r0, r1, r0
    b _08043676
_0804366E:
    ldrb r1, [r3, #0x03]
    cmp r1, #0x00
    bne _08043678
    ldr r0, _08043688 @ =0x080ECD9C
_08043676:
    ldrb r1, [r0, #0x00]
_08043678:
    ldrb r0, [r3, #0x02]
    cmp r0, #0x01
    beq _08043696
    cmp r0, #0x01
    bgt _0804368C
_08043682:
    cmp r0, #0x00
    beq _08043692
    b _080436E8
_08043688: .4byte 0x080ECD9C
_0804368C:
    cmp r0, #0x02
    beq _0804369E
    b _080436E8
_08043692:
    lsls r4, r1, #0x0B
    b _080436E8
_08043696:
    lsls r0, r1, #0x09
    movs r1, #0x80
    lsls r1, r1, #0x08
    b _080436E6
_0804369E:
    lsls r0, r1, #0x07
    movs r1, #0xA0
    lsls r1, r1, #0x08
    b _080436E6
_080436A6:
    ldr r1, _080436B4 @ =0x080ECD5C
    cmp r2, #0x3F
    bls _080436B8
    movs r0, #0x7F
    subs r0, r0, r2
    b _080436BA
    .byte 0x00, 0x00
_080436B4: .4byte 0x080ECD5C
_080436B8:
    adds r0, r5, #0x0
_080436BA:
    adds r0, r1, r0
    ldrb r1, [r0, #0x00]
    ldrb r0, [r3, #0x02]
    cmp r0, #0x01
    beq _080436D8
    cmp r0, #0x01
    bgt _080436CE
    cmp r0, #0x00
    beq _080436D4
    b _080436E8
_080436CE:
    cmp r0, #0x02
    beq _080436E0
    b _080436E8
_080436D4:
    lsls r4, r1, #0x06
    b _080436E8
_080436D8:
    lsls r0, r1, #0x04
    movs r1, #0xC0
    lsls r1, r1, #0x01
    b _080436E6
_080436E0:
    lsls r0, r1, #0x02
    movs r1, #0xF0
    lsls r1, r1, #0x01
_080436E6:
    adds r4, r0, r1
_080436E8:
    adds r0, r4, #0x0
    pop {r4, r5}
    pop {r1}
    bx r1
    thumb_func_start sub_80436F0
sub_80436F0:
    ldr r0, _080436F4 @ =0x03002330
    bx lr
_080436F4: .4byte 0x03002330
    thumb_func_start sub_80436F8
sub_80436F8:
    ldr r1, _08043700 @ =0x03002330
    ldr r0, _08043704 @ =0x08345800
    str r0, [r1, #0x04]
    bx lr
_08043700: .4byte 0x03002330
_08043704: .4byte 0x08345800
    thumb_func_start sub_8043708
sub_8043708:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    adds r6, r1, #0x0
    lsls r2, r2, #0x18
    lsrs r5, r2, #0x18
    bl sub_80435C8
    adds r7, r0, #0x0
    movs r0, #0x01
    strh r0, [r6, #0x00]
    adds r0, r4, #0x0
    bl sub_804378C
    strh r0, [r6, #0x02]
    adds r0, r4, #0x0
    bl sub_804379C
    strh r0, [r6, #0x04]
    ldr r2, [r4, #0x04]
    ldr r0, _08043764 @ =0x07FFFFFF
    cmp r2, r0
    bls _08043772
    adds r0, r5, #0x0
    adds r0, #0x08
    lsls r0, r0, #0x0C
    lsls r1, r5, #0x06
    movs r3, #0x80
    lsls r3, r3, #0x02
    adds r1, r1, r3
    orrs r0, r1
    strh r0, [r6, #0x06]
    ldrb r1, [r4, #0x00]
    movs r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _08043768
    adds r0, r2, r7
    movs r2, #0x07
    ands r2, r1
    lsls r1, r2, #0x01
    adds r1, r1, r2
    lsls r1, r1, #0x02
    subs r1, r1, r2
    lsls r1, r1, #0x0D
    adds r0, r0, r1
    b _08043784
_08043764: .4byte 0x07FFFFFF
_08043768:
    adds r0, r2, r7
    movs r1, #0xB0
    lsls r1, r1, #0x0C
    adds r0, r0, r1
    b _08043784
_08043772:
    adds r0, r5, #0x0
    adds r0, #0x08
    lsls r0, r0, #0x0C
    movs r3, #0x80
    lsls r3, r3, #0x02
    adds r1, r7, r3
    orrs r0, r1
    strh r0, [r6, #0x06]
    adds r0, r2, r7
_08043784:
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_804378C
sub_804378C:
    ldr r1, _08043798 @ =0x080ECDDC
    ldrb r0, [r0, #0x02]
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
_08043798: .4byte 0x080ECDDC
    thumb_func_start sub_804379C
sub_804379C:
    adds r3, r0, #0x0
    movs r2, #0x00
    ldrb r1, [r3, #0x01]
    movs r0, #0x3F
    ands r0, r1
    cmp r0, #0x00
    beq _080437C0
    cmp r0, #0x3F
    beq _080437C0
    movs r0, #0x40
    ands r1, r0
    lsls r0, r1, #0x18
    lsrs r0, r0, #0x18
    negs r0, r0
    asrs r2, r0, #0x1F
    movs r0, #0x80
    lsls r0, r0, #0x05
    ands r2, r0
_080437C0:
    ldr r0, _080437D0 @ =0x080ECDE0
    ldrb r1, [r3, #0x02]
    lsls r1, r1, #0x01
    adds r1, r1, r0
    ldrh r0, [r1, #0x00]
    orrs r2, r0
    adds r0, r2, #0x0
    bx lr
_080437D0: .4byte 0x080ECDE0
    thumb_func_start sub_80437D4
sub_80437D4:
    push {r4, lr}
    adds r4, r0, #0x0
    bl sub_802F5C0
    movs r0, #0x80
    lsls r0, r0, #0x08
    movs r1, #0x00
    strh r0, [r4, #0x10]
    str r1, [r4, #0x48]
    adds r0, r4, #0x0
    adds r0, #0x4C
    strh r1, [r0, #0x00]
    movs r2, #0x00
    movs r1, #0x04
    adds r0, #0x34
_080437F2:
    str r2, [r0, #0x00]
    subs r0, #0x04
    subs r1, #0x01
    cmp r1, #0x00
    bge _080437F2
    movs r1, #0x00
    adds r0, r4, #0x0
    adds r0, #0x4E
    strb r1, [r0, #0x00]
    adds r0, #0x02
    movs r2, #0x00
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    str r1, [r4, #0x54]
    str r1, [r4, #0x5C]
    str r1, [r4, #0x60]
    adds r0, #0x12
    strb r2, [r0, #0x00]
    str r1, [r4, #0x68]
    adds r2, r4, #0x0
    adds r2, #0x58
    movs r0, #0xC0
    strh r0, [r2, #0x00]
    adds r0, r4, #0x0
    adds r0, #0x5A
    strh r1, [r0, #0x00]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_8043830
sub_8043830:
    ldr r1, _0804383C @ =0x03002344
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    str r0, [r1, #0x00]
    bx lr
    .byte 0x00, 0x00
_0804383C: .4byte 0x03002344
    thumb_func_start sub_8043840
sub_8043840:
    ldr r2, _08043854 @ =0x03002344
    ldr r1, [r2, #0x00]
    ldr r0, _08043858 @ =0x41C64E6D
    muls r0, r1
    ldr r1, _0804385C @ =0x00003039
    adds r0, r0, r1
    str r0, [r2, #0x00]
    lsls r0, r0, #0x01
    lsrs r0, r0, #0x11
    bx lr
_08043854: .4byte 0x03002344
_08043858: .4byte 0x41C64E6D
_0804385C: .4byte 0x00003039
    thumb_func_start sub_8043860
sub_8043860:
    adds r2, r0, #0x0
    adds r2, #0x80
    movs r1, #0xB6
    str r1, [r2, #0x00]
    movs r1, #0x88
    lsls r1, r1, #0x08
    movs r2, #0x00
    strh r1, [r0, #0x10]
    movs r1, #0x03
    strh r1, [r0, #0x34]
    movs r1, #0x1E
    strb r1, [r0, #0x0E]
    strb r1, [r0, #0x0D]
    strb r1, [r0, #0x0C]
    ldr r1, _08043890 @ =0x08044361
    str r1, [r0, #0x14]
    ldr r1, _08043894 @ =0x08043AB5
    str r1, [r0, #0x18]
    ldr r1, _08043898 @ =0x0807AC64
    str r1, [r0, #0x48]
    adds r0, #0x4C
    strh r2, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
_08043890: .4byte sub_8044360
_08043894: .4byte sub_8043AB4
_08043898: .4byte 0x0807AC64
    thumb_func_start sub_804389C
sub_804389C:
    push {r4, r5, r6, r7, lr}
    add sp, #-0x00C
    ldr r0, _080438FC @ =0x03002E20
    movs r1, #0xFF
    lsls r1, r1, #0x03
    adds r0, r0, r1
    ldrb r1, [r0, #0x00]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0x00
    beq _080438B4
    b _080439E2
_080438B4:
    ldr r5, _08043900 @ =0x03002348
    ldr r1, [r5, #0x00]
    movs r0, #0x03
    ands r0, r1
    cmp r0, #0x00
    bne _080438DC
    asrs r0, r1, #0x02
    movs r1, #0x07
    ands r0, r1
    ldr r1, _08043904 @ =0x080ED9AC
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    bl dmaq_getVBlankDmaQueue
    ldr r2, _08043908 @ =0x06012C00
    ldr r3, _0804390C @ =0x80000100
    adds r1, r4, #0x0
    bl dmaq_enqueue
_080438DC:
    movs r0, #0x01
    bl pltt_getBuffer
    adds r6, r0, #0x0
    adds r6, #0xC8
    ldr r0, [r5, #0x00]
    asrs r7, r0, #0x02
    movs r1, #0x1F
    ands r7, r1
    adds r5, r1, #0x0
    ands r5, r0
    cmp r5, #0x0F
    bgt _08043910
    lsls r0, r5, #0x01
    b _08043914
    .byte 0x00, 0x00
_080438FC: .4byte 0x03002E20
_08043900: .4byte 0x03002348
_08043904: .4byte 0x080ED9AC
_08043908: .4byte 0x06012C00
_0804390C: .4byte 0x80000100
_08043910:
    subs r0, r1, r5
    lsls r0, r0, #0x01
_08043914:
    adds r5, r0, #0x0
    mov r1, sp
    adds r0, #0x0F
    movs r2, #0x1F
    ands r0, r2
    lsls r0, r0, #0x05
    movs r3, #0xF8
    lsls r3, r3, #0x07
    adds r4, r3, #0x0
    orrs r0, r4
    strh r0, [r1, #0x00]
    mov r3, sp
    movs r1, #0x37
    subs r1, r1, r5
    ands r1, r2
    lsls r1, r1, #0x05
    adds r0, r1, #0x0
    orrs r0, r2
    strh r0, [r3, #0x02]
    adds r0, r5, #0x0
    ands r0, r2
    lsls r0, r0, #0x0A
    orrs r1, r0
    strh r1, [r3, #0x04]
    subs r1, r2, r5
    ands r1, r2
    adds r0, r1, #0x0
    orrs r0, r4
    strh r0, [r3, #0x06]
    mov r2, sp
    movs r3, #0xB8
    lsls r3, r3, #0x02
    adds r0, r3, #0x0
    orrs r1, r0
    strh r1, [r2, #0x08]
    mov r0, sp
    ldrh r0, [r0, #0x00]
    strh r0, [r6, #0x02]
    cmp r7, #0x07
    bgt _08043970
    mov r0, sp
    ldrh r0, [r0, #0x08]
    strh r0, [r6, #0x00]
    mov r0, sp
    ldrh r0, [r0, #0x02]
    b _0804399A
_08043970:
    cmp r7, #0x0F
    bgt _08043980
    mov r0, sp
    ldrh r0, [r0, #0x02]
    strh r0, [r6, #0x00]
    mov r0, sp
    ldrh r0, [r0, #0x04]
    b _0804399A
_08043980:
    cmp r7, #0x17
    bgt _08043990
    mov r0, sp
    ldrh r0, [r0, #0x04]
    strh r0, [r6, #0x00]
    mov r0, sp
    ldrh r0, [r0, #0x06]
    b _0804399A
_08043990:
    mov r0, sp
    ldrh r0, [r0, #0x06]
    strh r0, [r6, #0x00]
    mov r0, sp
    ldrh r0, [r0, #0x08]
_0804399A:
    strh r0, [r6, #0x04]
    movs r0, #0x01
    bl pltt_setDirtyFlag
    ldr r0, _080439EC @ =0x03002348
    ldr r1, [r0, #0x00]
    movs r0, #0x03
    ands r0, r1
    cmp r0, #0x00
    bne _080439DA
    asrs r0, r1, #0x02
    movs r1, #0x07
    ands r0, r1
    movs r6, #0x00
    lsls r0, r0, #0x07
    ldr r1, _080439F0 @ =0x0806E73C
    ldr r5, _080439F4 @ =0x06012E00
    adds r4, r0, r1
_080439BE:
    bl dmaq_getVBlankDmaQueue
    adds r1, r4, #0x0
    adds r2, r5, #0x0
    ldr r3, _080439F8 @ =0x80000040
    bl dmaq_enqueue
    adds r5, #0x80
    movs r0, #0x80
    lsls r0, r0, #0x03
    adds r4, r4, r0
    adds r6, #0x01
    cmp r6, #0x02
    ble _080439BE
_080439DA:
    ldr r1, _080439EC @ =0x03002348
    ldr r0, [r1, #0x00]
    adds r0, #0x01
    str r0, [r1, #0x00]
_080439E2:
    add sp, #0x00C
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_080439EC: .4byte 0x03002348
_080439F0: .4byte 0x0806E73C
_080439F4: .4byte 0x06012E00
_080439F8: .4byte 0x80000040
    thumb_func_start sub_80439FC
sub_80439FC:
    push {r4, r5, lr}
    adds r3, r0, #0x0
    ldr r5, [r3, #0x70]
    ldr r2, [r3, #0x74]
    ldr r4, _08043A70 @ =0x080ED9CC
    cmp r5, #0x00
    bne _08043A1A
    cmp r2, #0x00
    bne _08043A1A
    ldr r0, [r4, #0x00]
    str r0, [r3, #0x48]
    ldr r2, [r4, #0x04]
    movs r0, #0xC0
    lsls r0, r0, #0x0C
    str r0, [r3, #0x08]
_08043A1A:
    lsls r0, r5, #0x03
    adds r0, r0, r4
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    beq _08043AAC
    subs r2, #0x01
    cmp r2, #0x00
    bne _08043A96
    adds r5, #0x01
    lsls r1, r5, #0x03
    adds r0, r4, #0x4
    adds r0, r1, r0
    ldr r2, [r0, #0x00]
    adds r1, r1, r4
    ldr r4, [r1, #0x00]
    cmp r4, #0x00
    bne _08043A94
    ldr r2, _08043A74 @ =0x03002E20
    ldrh r1, [r3, #0x34]
    ldr r0, _08043A78 @ =0x0000FFFE
    ands r0, r1
    strh r0, [r3, #0x34]
    str r4, [r3, #0x08]
    ldr r0, _08043A7C @ =0x0807AC64
    str r0, [r3, #0x48]
    adds r1, r3, #0x0
    adds r1, #0x80
    movs r0, #0xC0
    lsls r0, r0, #0x01
    str r0, [r1, #0x00]
    ldr r0, _08043A80 @ =0x000007FE
    adds r2, r2, r0
    ldrh r1, [r2, #0x00]
    movs r0, #0xF0
    lsls r0, r0, #0x04
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x04
    cmp r0, r1
    bne _08043A84
    movs r0, #0x78
    b _08043A86
    .byte 0x00, 0x00
_08043A70: .4byte 0x080ED9CC
_08043A74: .4byte 0x03002E20
_08043A78: .4byte 0x0000FFFE
_08043A7C: .4byte 0x0807AC64
_08043A80: .4byte 0x000007FE
_08043A84:
    movs r0, #0x02
_08043A86:
    str r0, [r3, #0x70]
    ldr r0, _08043A90 @ =0x08044429
    str r0, [r3, #0x14]
    b _08043AAC
    .byte 0x00, 0x00
_08043A90: .4byte sub_8044428
_08043A94:
    str r4, [r3, #0x48]
_08043A96:
    str r5, [r3, #0x70]
    str r2, [r3, #0x74]
    ldr r0, [r3, #0x08]
    movs r1, #0x80
    lsls r1, r1, #0x06
    adds r0, r0, r1
    str r0, [r3, #0x08]
    adds r1, r3, #0x0
    adds r1, #0x80
    movs r0, #0xB6
    str r0, [r1, #0x00]
_08043AAC:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_8043AB4
sub_8043AB4:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r7, r0, #0x0
    adds r5, r1, #0x0
    ldrh r3, [r5, #0x10]
    movs r0, #0xF0
    lsls r0, r0, #0x08
    mov r12, r0
    ands r3, r0
    movs r0, #0x80
    lsls r0, r0, #0x06
    cmp r3, r0
    bne _08043BA2
    ldr r6, _08043B44 @ =0x03002E20
    movs r1, #0x24
    adds r1, r1, r6
    mov r8, r1
    adds r4, r5, #0x0
    ldr r1, [r5, #0x48]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _08043B5E
    ldr r2, _08043B48 @ =0x00000838
    adds r0, r6, r2
    ldr r0, [r0, #0x00]
    cmp r5, r0
    bne _08043B0E
    movs r0, #0x20
    ands r1, r0
    cmp r1, #0x00
    bne _08043B0E
    movs r1, #0xFF
    lsls r1, r1, #0x03
    adds r0, r6, r1
    ldrb r1, [r0, #0x00]
    movs r0, #0x0F
    ands r0, r1
    cmp r0, #0x03
    bne _08043B0E
    movs r0, #0x79
    bl m4aSongNumStart
_08043B0E:
    movs r2, #0xBD
    lsls r2, r2, #0x01
    adds r0, r4, r2
    ldrh r0, [r0, #0x00]
    cmp r0, #0x00
    bne _08043B54
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08043B54
    ldr r0, _08043B4C @ =0x0000070C
    add r0, r8
    bl sub_804F7AC
    str r4, [r0, #0x54]
    bl sub_8044384
    ldr r0, _08043B50 @ =0x00000814
    add r0, r8
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _08043B96
    movs r0, #0x67
    bl m4aSongNumStart
    b _08043B96
_08043B44: .4byte 0x03002E20
_08043B48: .4byte 0x00000838
_08043B4C: .4byte 0x0000070C
_08043B50: .4byte 0x00000814
_08043B54:
    adds r0, r4, #0x0
    mov r1, r8
    bl sub_8043514
    b _08043B96
_08043B5E:
    movs r2, #0xBD
    lsls r2, r2, #0x01
    adds r0, r5, r2
    ldrh r2, [r0, #0x00]
    cmp r2, #0x00
    beq _08043B72
    mov r0, r12
    ands r0, r2
    cmp r0, r3
    bne _08043B96
_08043B72:
    movs r0, #0x20
    ands r1, r0
    cmp r1, #0x00
    bne _08043B96
    movs r1, #0xE6
    lsls r1, r1, #0x03
    adds r0, r6, r1
    bl sub_804F7AC
    adds r4, r0, #0x0
    str r5, [r4, #0x54]
    adds r0, r5, #0x0
    movs r1, #0x00
    bl sub_803D9D4
    adds r0, r4, #0x0
    bl sub_8044384
_08043B96:
    movs r1, #0x00
    str r1, [r7, #0x70]
    str r1, [r7, #0x74]
    ldr r0, _08043BAC @ =0x080439FD
    str r0, [r7, #0x14]
    str r1, [r7, #0x18]
_08043BA2:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08043BAC: .4byte sub_80439FC
    thumb_func_start sub_8043BB0
sub_8043BB0:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    ldr r0, _08043BD0 @ =0x03002E20
    adds r4, r0, #0x0
    adds r4, #0x24
    ldr r1, _08043BD4 @ =0x00000CAC
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    cmp r1, #0x00
    bge _08043BDC
    movs r0, #0x08
    ands r1, r0
    cmp r1, #0x00
    beq _08043BDC
_08043BCC:
    ldr r0, _08043BD8 @ =0x080ED080
    b _08043DDE
_08043BD0: .4byte 0x03002E20
_08043BD4: .4byte 0x00000CAC
_08043BD8: .4byte 0x080ED080
_08043BDC:
    ldr r1, _08043C00 @ =0x000007DA
    adds r0, r4, r1
    ldrh r0, [r0, #0x00]
    movs r1, #0xF0
    lsls r1, r1, #0x04
    ands r1, r0
    movs r0, #0x80
    lsls r0, r0, #0x02
    cmp r1, r0
    beq _08043C18
    cmp r1, r0
    bgt _08043C04
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    beq _08043C18
    b _08043DDC
    .byte 0x00, 0x00
_08043C00: .4byte 0x000007DA
_08043C04:
    movs r0, #0x80
    lsls r0, r0, #0x03
    cmp r1, r0
    beq _08043C18
    movs r0, #0x80
    lsls r0, r0, #0x04
    cmp r1, r0
    bne _08043C16
    b _08043DB8
_08043C16:
    b _08043DDC
_08043C18:
    adds r0, r4, #0x0
    movs r1, #0x00
    bl sub_804AED4
    ldrh r4, [r4, #0x14]
    adds r1, r0, #0x0
    adds r1, #0x91
    ldrb r1, [r1, #0x00]
    adds r3, r0, #0x0
    adds r3, #0x90
    adds r2, r1, #0x0
    muls r2, r4
    ldrb r3, [r3, #0x00]
    adds r2, r2, r3
    adds r1, r5, #0x0
    adds r1, #0x91
    ldrb r1, [r1, #0x00]
    adds r3, r5, #0x0
    adds r3, #0x90
    muls r1, r4
    ldrb r3, [r3, #0x00]
    adds r1, r1, r3
    subs r2, r2, r1
    cmp r5, r0
    bne _08043C68
    bl sub_8043840
    movs r1, #0x01
    ands r1, r0
    cmp r1, #0x00
    beq _08043C60
    ldr r0, _08043C5C @ =0x080ECE1C
    b _08043DDE
    .byte 0x00, 0x00
_08043C5C: .4byte 0x080ECE1C
_08043C60:
    ldr r0, _08043C64 @ =0x080ECE50
    b _08043DDE
_08043C64: .4byte 0x080ECE50
_08043C68:
    cmp r2, #0x3C
    bls _08043C6E
    b _08043DB0
_08043C6E:
    lsls r0, r2, #0x02
    ldr r1, _08043C78 @ =0x08043C7C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08043C78: .4byte 0x08043C7C
    .byte 0x70, 0x3D, 0x04, 0x08, 0x70, 0x3D, 0x04, 0x08, 0x70, 0x3D, 0x04, 0x08, 0x78, 0x3D, 0x04, 0x08
    .byte 0x78, 0x3D, 0x04, 0x08, 0x78, 0x3D, 0x04, 0x08, 0x78, 0x3D, 0x04, 0x08, 0x80, 0x3D, 0x04, 0x08
    .byte 0x80, 0x3D, 0x04, 0x08, 0x80, 0x3D, 0x04, 0x08, 0x80, 0x3D, 0x04, 0x08, 0x80, 0x3D, 0x04, 0x08
    .byte 0x80, 0x3D, 0x04, 0x08, 0x88, 0x3D, 0x04, 0x08, 0x88, 0x3D, 0x04, 0x08, 0x88, 0x3D, 0x04, 0x08
    .byte 0x88, 0x3D, 0x04, 0x08, 0x88, 0x3D, 0x04, 0x08, 0x88, 0x3D, 0x04, 0x08, 0x90, 0x3D, 0x04, 0x08
    .byte 0x90, 0x3D, 0x04, 0x08, 0x90, 0x3D, 0x04, 0x08, 0x90, 0x3D, 0x04, 0x08, 0x90, 0x3D, 0x04, 0x08
    .byte 0x90, 0x3D, 0x04, 0x08, 0x98, 0x3D, 0x04, 0x08, 0x98, 0x3D, 0x04, 0x08, 0x98, 0x3D, 0x04, 0x08
    .byte 0x98, 0x3D, 0x04, 0x08, 0x98, 0x3D, 0x04, 0x08, 0x98, 0x3D, 0x04, 0x08, 0x98, 0x3D, 0x04, 0x08
    .byte 0x98, 0x3D, 0x04, 0x08, 0x98, 0x3D, 0x04, 0x08, 0x98, 0x3D, 0x04, 0x08, 0x98, 0x3D, 0x04, 0x08
    .byte 0x98, 0x3D, 0x04, 0x08, 0xA0, 0x3D, 0x04, 0x08, 0xA0, 0x3D, 0x04, 0x08, 0xA0, 0x3D, 0x04, 0x08
    .byte 0xA0, 0x3D, 0x04, 0x08, 0xA0, 0x3D, 0x04, 0x08, 0xA0, 0x3D, 0x04, 0x08, 0xA0, 0x3D, 0x04, 0x08
    .byte 0xA0, 0x3D, 0x04, 0x08, 0xA0, 0x3D, 0x04, 0x08, 0xA0, 0x3D, 0x04, 0x08, 0xA0, 0x3D, 0x04, 0x08
    .byte 0xA0, 0x3D, 0x04, 0x08, 0xA0, 0x3D, 0x04, 0x08, 0xA0, 0x3D, 0x04, 0x08, 0xA8, 0x3D, 0x04, 0x08
    .byte 0xA8, 0x3D, 0x04, 0x08, 0xA8, 0x3D, 0x04, 0x08, 0xA8, 0x3D, 0x04, 0x08, 0xA8, 0x3D, 0x04, 0x08
    .byte 0xA8, 0x3D, 0x04, 0x08, 0xA8, 0x3D, 0x04, 0x08, 0xA8, 0x3D, 0x04, 0x08, 0xA8, 0x3D, 0x04, 0x08
    .byte 0xA8, 0x3D, 0x04, 0x08, 0x00, 0x48, 0x34, 0xE0, 0x84, 0xCE, 0x0E, 0x08, 0x00, 0x48, 0x30, 0xE0
    .byte 0xB0, 0xCE, 0x0E, 0x08, 0x00, 0x48, 0x2C, 0xE0, 0xE4, 0xCE, 0x0E, 0x08, 0x00, 0x48, 0x28, 0xE0
    .byte 0x10, 0xCF, 0x0E, 0x08, 0x00, 0x48, 0x24, 0xE0, 0x4C, 0xCF, 0x0E, 0x08, 0x00, 0x48, 0x20, 0xE0
    .byte 0x88, 0xCF, 0x0E, 0x08, 0x00, 0x48, 0x1C, 0xE0, 0xC4, 0xCF, 0x0E, 0x08, 0x00, 0x48, 0x18, 0xE0
    .byte 0xF8, 0xCF, 0x0E, 0x08
_08043DB0:
    ldr r0, _08043DB4 @ =0x080ED02C
    b _08043DDE
_08043DB4: .4byte 0x080ED02C
_08043DB8:
    ldr r1, _08043DCC @ =0x0000017D
    adds r0, r5, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    bne _08043DC4
    b _08043BCC
_08043DC4:
    cmp r0, #0x01
    beq _08043DD4
    ldr r0, _08043DD0 @ =0x080ED058
    b _08043DDE
_08043DCC: .4byte 0x0000017D
_08043DD0: .4byte 0x080ED058
_08043DD4:
    ldr r0, _08043DD8 @ =0x080ED06C
    b _08043DDE
_08043DD8: .4byte 0x080ED06C
_08043DDC:
    ldr r0, _08043DE4 @ =0x080ECDF0
_08043DDE:
    pop {r4, r5}
    pop {r1}
    bx r1
_08043DE4: .4byte 0x080ECDF0
    thumb_func_start sub_8043DE8
sub_8043DE8:
    push {r4, r5, lr}
    adds r2, r0, #0x0
    ldr r1, _08043E20 @ =0x03002E20
    ldr r3, _08043E24 @ =0x00000801
    adds r0, r1, r3
    ldrb r3, [r0, #0x00]
    adds r0, r2, #0x0
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r4, r0, #0x01
    movs r0, #0x07
    ands r4, r0
    adds r0, r2, #0x0
    adds r0, #0x4C
    ldrb r0, [r0, #0x00]
    movs r5, #0x07
    ands r5, r0
    movs r0, #0x80
    lsls r0, r0, #0x04
    adds r1, r1, r0
    ldrb r0, [r1, #0x00]
    cmp r0, #0x01
    beq _08043EA8
    cmp r0, #0x01
    bgt _08043E28
    cmp r0, #0x00
    beq _08043E30
    b _08043FE8
_08043E20: .4byte 0x03002E20
_08043E24: .4byte 0x00000801
_08043E28:
    cmp r0, #0x02
    bne _08043E2E
    b _08043F44
_08043E2E:
    b _08043FE8
_08043E30:
    subs r0, r3, #0x4
    cmp r0, #0x13
    bls _08043E38
    b _08043FE8
_08043E38:
    lsls r0, r0, #0x02
    ldr r1, _08043E44 @ =0x08043E48
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_08043E44: .4byte 0x08043E48
    .byte 0x1C, 0x3F, 0x04, 0x08, 0x1C, 0x3F, 0x04, 0x08, 0x1C, 0x3F, 0x04, 0x08, 0x1C, 0x3F, 0x04, 0x08
    .byte 0x1C, 0x3F, 0x04, 0x08, 0x1C, 0x3F, 0x04, 0x08, 0x1C, 0x3F, 0x04, 0x08, 0x1C, 0x3F, 0x04, 0x08
    .byte 0xB4, 0x3F, 0x04, 0x08, 0x1C, 0x3F, 0x04, 0x08, 0x1C, 0x3F, 0x04, 0x08, 0x1C, 0x3F, 0x04, 0x08
    .byte 0x1C, 0x3F, 0x04, 0x08, 0x1C, 0x3F, 0x04, 0x08, 0x1C, 0x3F, 0x04, 0x08, 0xE8, 0x3F, 0x04, 0x08
    .byte 0x1C, 0x3F, 0x04, 0x08, 0xB4, 0x3F, 0x04, 0x08, 0xB4, 0x3F, 0x04, 0x08, 0xB4, 0x3F, 0x04, 0x08
    .byte 0x00, 0x48, 0xBA, 0xE0, 0xA8, 0xD4, 0x0E, 0x08, 0x00, 0x48, 0xB6, 0xE0, 0xA8, 0xD7, 0x0E, 0x08
_08043EA8:
    subs r0, r3, #0x4
    cmp r0, #0x13
    bls _08043EB0
    b _08043FE8
_08043EB0:
    lsls r0, r0, #0x02
    ldr r1, _08043EBC @ =0x08043EC0
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_08043EBC: .4byte 0x08043EC0
    .byte 0xB4, 0x3F, 0x04, 0x08, 0xB4, 0x3F, 0x04, 0x08, 0xB4, 0x3F, 0x04, 0x08, 0x1C, 0x3F, 0x04, 0x08
    .byte 0xB4, 0x3F, 0x04, 0x08, 0xB4, 0x3F, 0x04, 0x08, 0xB4, 0x3F, 0x04, 0x08, 0xB4, 0x3F, 0x04, 0x08
    .byte 0x10, 0x3F, 0x04, 0x08, 0xB4, 0x3F, 0x04, 0x08, 0x1C, 0x3F, 0x04, 0x08, 0xB4, 0x3F, 0x04, 0x08
    .byte 0xB4, 0x3F, 0x04, 0x08, 0x10, 0x3F, 0x04, 0x08, 0xB4, 0x3F, 0x04, 0x08, 0xE8, 0x3F, 0x04, 0x08
    .byte 0xB4, 0x3F, 0x04, 0x08, 0x10, 0x3F, 0x04, 0x08, 0xE8, 0x3F, 0x04, 0x08, 0xE8, 0x3F, 0x04, 0x08
    .byte 0x01, 0x4B, 0xD0, 0x18, 0x6A, 0xE0, 0x00, 0x00, 0x91, 0x01, 0x00, 0x00, 0x05, 0x4B, 0xD0, 0x18
    .byte 0x00, 0x78, 0x01, 0x28, 0xBC, 0xD0, 0x01, 0x28, 0x08, 0xDC, 0x00, 0x28, 0x06, 0xD1, 0x02, 0x48
    .byte 0x6F, 0xE0, 0x00, 0x00, 0x91, 0x01, 0x00, 0x00, 0xA8, 0xD6, 0x0E, 0x08, 0x00, 0x48, 0x68, 0xE0
    .byte 0xA8, 0xD8, 0x0E, 0x08
_08043F44:
    subs r0, r3, #0x4
    cmp r0, #0x13
    bhi _08043FDC
    lsls r0, r0, #0x02
    ldr r1, _08043F54 @ =0x08043F58
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08043F54: .4byte 0x08043F58
    .byte 0xA8, 0x3F, 0x04, 0x08, 0xA8, 0x3F, 0x04, 0x08, 0xA8, 0x3F, 0x04, 0x08, 0xB4, 0x3F, 0x04, 0x08
    .byte 0xB4, 0x3F, 0x04, 0x08, 0xB4, 0x3F, 0x04, 0x08, 0xA8, 0x3F, 0x04, 0x08, 0xA8, 0x3F, 0x04, 0x08
    .byte 0xA8, 0x3F, 0x04, 0x08, 0xB4, 0x3F, 0x04, 0x08, 0xB4, 0x3F, 0x04, 0x08, 0xA8, 0x3F, 0x04, 0x08
    .byte 0xA8, 0x3F, 0x04, 0x08, 0xA8, 0x3F, 0x04, 0x08, 0xB4, 0x3F, 0x04, 0x08, 0xA8, 0x3F, 0x04, 0x08
    .byte 0xB4, 0x3F, 0x04, 0x08, 0xA8, 0x3F, 0x04, 0x08, 0xDC, 0x3F, 0x04, 0x08, 0xDC, 0x3F, 0x04, 0x08
    .byte 0x01, 0x4B, 0xD0, 0x18, 0x1E, 0xE0, 0x00, 0x00, 0x91, 0x01, 0x00, 0x00, 0x05, 0x49, 0x50, 0x18
    .byte 0x00, 0x78, 0x01, 0x28, 0x00, 0xD1, 0x6B, 0xE7, 0x01, 0x28, 0x07, 0xDC, 0x00, 0x28, 0x05, 0xD1
    .byte 0x01, 0x48, 0x22, 0xE0, 0x91, 0x01, 0x00, 0x00, 0xA8, 0xD3, 0x0E, 0x08, 0x00, 0x48, 0x1C, 0xE0
    .byte 0xA8, 0xD5, 0x0E, 0x08
_08043FDC:
    ldr r3, _08043FE4 @ =0x00000191
    adds r0, r2, r3
    b _08043FEC
    .byte 0x00, 0x00
_08043FE4: .4byte 0x00000191
_08043FE8:
    ldr r1, _08044000 @ =0x00000191
    adds r0, r2, r1
_08043FEC:
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    beq _08044008
    cmp r0, #0x01
    bgt _08044010
    cmp r0, #0x00
    bne _08044010
    ldr r0, _08044004 @ =0x080ED0A8
    b _08044012
    .byte 0x00, 0x00
_08044000: .4byte 0x00000191
_08044004: .4byte 0x080ED0A8
_08044008:
    ldr r0, _0804400C @ =0x080ED1A8
    b _08044012
_0804400C: .4byte 0x080ED1A8
_08044010:
    ldr r0, _08044024 @ =0x080ED2A8
_08044012:
    adds r1, r0, #0x0
    lsls r0, r5, #0x03
    orrs r0, r4
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    pop {r4, r5}
    pop {r1}
    bx r1
_08044024: .4byte 0x080ED2A8
    thumb_func_start sub_8044028
sub_8044028:
    push {r4, r5, r6, lr}
    adds r6, r1, #0x0
    bl sub_8043BB0
    adds r5, r0, #0x0
    adds r2, r5, #0x0
    movs r1, #0x00
    movs r3, #0x00
    ldsh r0, [r5, r3]
    cmp r0, #0x00
    beq _08044054
_0804403E:
    lsls r0, r1, #0x10
    asrs r0, r0, #0x10
    ldrh r1, [r2, #0x02]
    adds r0, r0, r1
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    adds r2, #0x04
    movs r3, #0x00
    ldsh r0, [r2, r3]
    cmp r0, #0x00
    bne _0804403E
_08044054:
    lsls r0, r1, #0x10
    asrs r4, r0, #0x10
    cmp r4, #0x00
    beq _08044076
    bl sub_8043840
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    adds r1, r4, #0x0
    bl DivRem
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    b _08044078
_08044070:
    movs r1, #0x00
    ldsh r0, [r4, r1]
    b _080440B8
_08044076:
    movs r0, #0x00
_08044078:
    adds r2, r5, #0x0
    b _08044084
_0804407C:
    ldrh r1, [r2, #0x02]
    asrs r0, r0, #0x10
    subs r0, r0, r1
    adds r2, #0x04
_08044084:
    lsls r0, r0, #0x10
    cmp r0, #0x00
    bge _0804407C
    subs r2, #0x04
    movs r3, #0x00
    ldsh r4, [r2, r3]
    adds r0, r4, #0x0
    bl sub_803D6AC
    cmp r0, r6
    ble _080440B6
    adds r4, r5, #0x0
    b _080440AC
_0804409E:
    movs r3, #0x00
    ldsh r0, [r4, r3]
    bl sub_803D6AC
    cmp r0, r6
    ble _08044070
    adds r4, #0x04
_080440AC:
    movs r1, #0x00
    ldsh r0, [r4, r1]
    cmp r0, #0x00
    bne _0804409E
    ldr r4, _080440C0 @ =0x00001007
_080440B6:
    adds r0, r4, #0x0
_080440B8:
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_080440C0: .4byte 0x00001007
    thumb_func_start sub_80440C4
sub_80440C4:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    adds r5, r0, #0x0
    ldr r0, _08044110 @ =0x03002E20
    movs r1, #0x24
    adds r1, r1, r0
    mov r8, r1
    ldr r2, _08044114 @ =0x00000838
    adds r0, r0, r2
    ldr r0, [r0, #0x00]
    mov r9, r0
    ldr r6, [r5, #0x54]
    movs r7, #0x00
    ldr r4, _08044118 @ =0x080ECDF0
    movs r1, #0x00
    movs r3, #0x00
    ldsh r0, [r4, r3]
    cmp r0, #0x00
    beq _080440FC
    adds r2, r4, #0x0
_080440F0:
    adds r2, #0x04
    adds r1, #0x01
    movs r3, #0x00
    ldsh r0, [r2, r3]
    cmp r0, #0x00
    bne _080440F0
_080440FC:
    cmp r1, #0x00
    beq _0804411C
    ldr r0, [r5, #0x70]
    bl DivRem
    lsls r0, r0, #0x02
    adds r0, r0, r4
    movs r1, #0x00
    ldsh r4, [r0, r1]
    b _08044120
_08044110: .4byte 0x03002E20
_08044114: .4byte 0x00000838
_08044118: .4byte 0x080ECDF0
_0804411C:
    movs r2, #0x00
    ldsh r4, [r4, r2]
_08044120:
    cmp r6, r9
    bne _08044130
    cmp r4, #0x00
    beq _08044130
    lsls r0, r4, #0x10
    lsrs r0, r0, #0x10
    bl sub_804CD98
_08044130:
    ldr r0, [r5, #0x74]
    subs r0, #0x01
    str r0, [r5, #0x74]
    cmp r0, #0x00
    bgt _0804415C
    ldr r2, [r5, #0x78]
    ldr r1, _0804414C @ =0x080EDA04
    lsls r0, r2, #0x02
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    cmp r1, #0x00
    bne _08044150
    movs r7, #0x01
    b _0804415C
_0804414C: .4byte 0x080EDA04
_08044150:
    ldr r0, [r5, #0x70]
    adds r0, #0x01
    str r0, [r5, #0x70]
    str r1, [r5, #0x74]
    adds r0, r2, #0x1
    str r0, [r5, #0x78]
_0804415C:
    adds r0, r6, #0x0
    adds r0, #0x96
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0x00
    beq _08044172
    ldr r0, [r5, #0x78]
    cmp r0, #0x02
    ble _08044172
    movs r7, #0x01
_08044172:
    cmp r7, #0x00
    beq _08044230
    ldr r0, _0804418C @ =0x000007DD
    add r0, r8
    ldrb r0, [r0, #0x00]
    subs r0, #0x04
    cmp r0, #0x13
    bhi _080441F4
    lsls r0, r0, #0x02
    ldr r1, _08044190 @ =0x08044194
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_0804418C: .4byte 0x000007DD
_08044190: .4byte 0x08044194
    .byte 0xF0, 0x41, 0x04, 0x08, 0xF0, 0x41, 0x04, 0x08, 0xF4, 0x41, 0x04, 0x08, 0xF4, 0x41, 0x04, 0x08
    .byte 0xF0, 0x41, 0x04, 0x08, 0xF0, 0x41, 0x04, 0x08, 0xE4, 0x41, 0x04, 0x08, 0xF4, 0x41, 0x04, 0x08
    .byte 0xEC, 0x41, 0x04, 0x08, 0xF4, 0x41, 0x04, 0x08, 0xF4, 0x41, 0x04, 0x08, 0xEC, 0x41, 0x04, 0x08
    .byte 0xE8, 0x41, 0x04, 0x08, 0xEC, 0x41, 0x04, 0x08, 0xEC, 0x41, 0x04, 0x08, 0xF0, 0x41, 0x04, 0x08
    .byte 0xEC, 0x41, 0x04, 0x08, 0xE8, 0x41, 0x04, 0x08, 0xEC, 0x41, 0x04, 0x08, 0xE8, 0x41, 0x04, 0x08
    .byte 0x05, 0x22, 0x06, 0xE0, 0x04, 0x22, 0x04, 0xE0, 0x06, 0x22, 0x02, 0xE0, 0x07, 0x22, 0x00, 0xE0
_080441F4:
    movs r2, #0x08
    ldr r0, _0804423C @ =0x00000C83
    add r0, r8
    ldrb r1, [r0, #0x00]
    subs r1, r2, r1
    ldr r0, _08044240 @ =0x00000C84
    add r0, r8
    ldrb r0, [r0, #0x00]
    subs r1, r1, r0
    adds r0, r6, #0x0
    bl sub_8044028
    adds r4, r0, #0x0
    adds r0, r6, #0x0
    adds r1, r4, #0x0
    bl sub_803D9D4
    cmp r6, r9
    bne _08044222
    lsls r0, r4, #0x10
    lsrs r0, r0, #0x10
    bl sub_804F128
_08044222:
    movs r0, #0x00
    str r0, [r5, #0x14]
    ldr r0, _08044244 @ =0x0000070C
    add r0, r8
    adds r1, r5, #0x0
    bl sub_804F808
_08044230:
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0804423C: .4byte 0x00000C83
_08044240: .4byte 0x00000C84
_08044244: .4byte 0x0000070C
    thumb_func_start sub_8044248
sub_8044248:
    push {r4, r5, r6, r7, lr}
    adds r7, r0, #0x0
    ldr r1, _08044260 @ =0x03002E20
    adds r2, r1, #0x0
    adds r2, #0x24
    ldr r6, [r7, #0x54]
    ldr r0, [r7, #0x70]
    cmp r0, #0x00
    beq _08044264
    subs r0, #0x01
    str r0, [r7, #0x70]
    b _08044356
_08044260: .4byte 0x03002E20
_08044264:
    ldr r3, _08044280 @ =0x00000CAC
    adds r0, r1, r3
    ldr r1, [r0, #0x00]
    cmp r1, #0x00
    bge _08044288
    movs r0, #0x08
    ands r1, r0
    cmp r1, #0x00
    beq _08044288
    ldr r1, _08044284 @ =0x00001007
    adds r0, r6, #0x0
    bl sub_803D9D4
    b _08044344
_08044280: .4byte 0x00000CAC
_08044284: .4byte 0x00001007
_08044288:
    ldr r1, _080442A0 @ =0x000007DD
    adds r0, r2, r1
    ldrb r0, [r0, #0x00]
    subs r0, #0x04
    cmp r0, #0x13
    bhi _08044308
    lsls r0, r0, #0x02
    ldr r1, _080442A4 @ =0x080442A8
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_080442A0: .4byte 0x000007DD
_080442A4: .4byte 0x080442A8
    .byte 0x04, 0x43, 0x04, 0x08, 0x04, 0x43, 0x04, 0x08, 0x08, 0x43, 0x04, 0x08, 0x08, 0x43, 0x04, 0x08
    .byte 0x04, 0x43, 0x04, 0x08, 0x04, 0x43, 0x04, 0x08, 0xF8, 0x42, 0x04, 0x08, 0x08, 0x43, 0x04, 0x08
    .byte 0x00, 0x43, 0x04, 0x08, 0x08, 0x43, 0x04, 0x08, 0x08, 0x43, 0x04, 0x08, 0x00, 0x43, 0x04, 0x08
    .byte 0xFC, 0x42, 0x04, 0x08, 0x00, 0x43, 0x04, 0x08, 0x00, 0x43, 0x04, 0x08, 0x04, 0x43, 0x04, 0x08
    .byte 0x00, 0x43, 0x04, 0x08, 0xFC, 0x42, 0x04, 0x08, 0x00, 0x43, 0x04, 0x08, 0xFC, 0x42, 0x04, 0x08
    .byte 0x05, 0x21, 0x06, 0xE0, 0x04, 0x21, 0x04, 0xE0, 0x06, 0x21, 0x02, 0xE0, 0x07, 0x21, 0x00, 0xE0
_08044308:
    movs r1, #0x08
    ldr r3, _08044334 @ =0x00000C83
    adds r0, r2, r3
    ldrb r4, [r0, #0x00]
    subs r4, r1, r4
    ldr r1, _08044338 @ =0x00000C84
    adds r0, r2, r1
    ldrb r0, [r0, #0x00]
    subs r4, r4, r0
    adds r0, r6, #0x0
    bl sub_8043DE8
    adds r5, r0, #0x0
    bl sub_803D6AC
    cmp r0, r4
    bgt _0804433C
    adds r0, r6, #0x0
    adds r1, r5, #0x0
    bl sub_803D9D4
    b _08044344
_08044334: .4byte 0x00000C83
_08044338: .4byte 0x00000C84
_0804433C:
    adds r0, r6, #0x0
    movs r1, #0x00
    bl sub_803D9D4
_08044344:
    movs r0, #0x00
    str r0, [r7, #0x14]
    ldr r0, _0804435C @ =0x03002E20
    movs r3, #0xE6
    lsls r3, r3, #0x03
    adds r0, r0, r3
    adds r1, r7, #0x0
    bl sub_804F808
_08044356:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0804435C: .4byte 0x03002E20
    thumb_func_start sub_8044360
sub_8044360:
    adds r1, r0, #0x0
    ldr r0, [r1, #0x7C]
    adds r0, #0x01
    str r0, [r1, #0x7C]
    movs r2, #0x3F
    ands r2, r0
    cmp r2, #0x1F
    ble _08044376
    movs r0, #0x40
    subs r0, r0, r2
    b _08044378
_08044376:
    adds r0, r2, #0x0
_08044378:
    adds r1, #0x80
    lsls r0, r0, #0x01
    adds r0, #0xB6
    str r0, [r1, #0x00]
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8044384
sub_8044384:
    push {lr}
    adds r2, r0, #0x0
    ldr r3, [r2, #0x54]
    ldrh r1, [r2, #0x34]
    ldr r0, _080443BC @ =0x0000FFFE
    ands r0, r1
    ldr r1, _080443C0 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x34]
    ldr r0, [r3, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _080443C8
    adds r0, r2, #0x0
    adds r0, #0x4C
    ldrh r1, [r0, #0x00]
    movs r0, #0x0F
    ands r0, r1
    str r0, [r2, #0x70]
    movs r0, #0x02
    str r0, [r2, #0x74]
    movs r0, #0x00
    str r0, [r2, #0x78]
    ldr r0, _080443C4 @ =0x080440C5
    b _080443CE
    .byte 0x00, 0x00
_080443BC: .4byte 0x0000FFFE
_080443C0: .4byte 0x0000FFFD
_080443C4: .4byte sub_80440C4
_080443C8:
    movs r0, #0x1E
    str r0, [r2, #0x70]
    ldr r0, _080443E0 @ =0x08044249
_080443CE:
    str r0, [r2, #0x14]
    movs r0, #0x00
    str r0, [r2, #0x18]
    adds r0, r3, #0x0
    movs r1, #0x01
    bl sub_803D9D4
    pop {r0}
    bx r0
_080443E0: .4byte sub_8044248
    .byte 0x02, 0x1C, 0x53, 0x6F, 0x00, 0x2B, 0x07, 0xD0, 0x90, 0x68, 0x11, 0x6F, 0x40, 0x18, 0x90, 0x60
    .byte 0x58, 0x1E, 0x50, 0x67, 0x01, 0x20, 0x00, 0xE0, 0x00, 0x20, 0x70, 0x47
    thumb_func_start sub_8044400
sub_8044400:
    movs r1, #0x16
    str r1, [r0, #0x74]
    ldr r1, _08044420 @ =0x0807AC64
    str r1, [r0, #0x48]
    adds r2, r0, #0x0
    adds r2, #0x4C
    movs r1, #0x00
    strh r1, [r2, #0x00]
    ldr r1, _08044424 @ =0x0804445D
    str r1, [r0, #0x14]
    adds r0, #0x80
    movs r1, #0xC0
    lsls r1, r1, #0x01
    str r1, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
_08044420: .4byte 0x0807AC64
_08044424: .4byte sub_804445C
    thumb_func_start sub_8044428
sub_8044428:
    adds r3, r0, #0x0
    ldr r0, [r3, #0x70]
    cmp r0, #0x00
    beq _0804443A
    subs r0, #0x01
    str r0, [r3, #0x70]
    adds r2, r3, #0x0
    adds r2, #0x80
    b _08044450
_0804443A:
    adds r2, r3, #0x0
    adds r2, #0x80
    movs r0, #0xC0
    lsls r0, r0, #0x01
    str r0, [r2, #0x00]
    ldrh r1, [r3, #0x34]
    movs r0, #0x01
    orrs r0, r1
    strh r0, [r3, #0x34]
    ldr r0, _08044458 @ =0x08044401
    str r0, [r3, #0x14]
_08044450:
    movs r0, #0xC0
    lsls r0, r0, #0x01
    str r0, [r2, #0x00]
    bx lr
_08044458: .4byte sub_8044400
    thumb_func_start sub_804445C
sub_804445C:
    push {r4, r5, r6, r7, lr}
    adds r6, r0, #0x0
    ldr r5, [r6, #0x74]
    cmp r5, #0x00
    ble _08044468
    subs r5, #0x01
_08044468:
    str r5, [r6, #0x74]
    adds r7, r6, #0x0
    adds r7, #0x80
    ldr r4, _080444A4 @ =0x080E645C
    lsls r0, r5, #0x08
    movs r1, #0x16
    bl __divsi3
    lsls r0, r0, #0x02
    adds r0, r0, r4
    ldr r1, [r0, #0x00]
    movs r0, #0xCA
    muls r0, r1
    cmp r0, #0x00
    bge _0804448A
    ldr r1, _080444A8 @ =0x00007FFF
    adds r0, r0, r1
_0804448A:
    asrs r0, r0, #0x0F
    adds r0, #0xB6
    str r0, [r7, #0x00]
    cmp r5, #0x00
    bne _0804449C
    ldr r0, _080444AC @ =0x08043AB5
    str r0, [r6, #0x18]
    ldr r0, _080444B0 @ =0x08044361
    str r0, [r6, #0x14]
_0804449C:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_080444A4: .4byte 0x080E645C
_080444A8: .4byte 0x00007FFF
_080444AC: .4byte sub_8043AB4
_080444B0: .4byte sub_8044360
    .byte 0x00, 0xB5, 0x00, 0x29, 0x03, 0xD0, 0x08, 0x04, 0x00, 0x0C, 0x08, 0xF0, 0x6B, 0xFC, 0x01, 0xBC
    .byte 0x00, 0x47, 0x00, 0x00, 0x02, 0x1C, 0x05, 0x49, 0x50, 0x18, 0x00, 0x78, 0x04, 0x38, 0x13, 0x28
    .byte 0x38, 0xD8, 0x80, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0xDD, 0x07, 0x00, 0x00
    .byte 0xE8, 0x44, 0x04, 0x08, 0x44, 0x45, 0x04, 0x08, 0x44, 0x45, 0x04, 0x08, 0x48, 0x45, 0x04, 0x08
    .byte 0x48, 0x45, 0x04, 0x08, 0x44, 0x45, 0x04, 0x08, 0x44, 0x45, 0x04, 0x08, 0x38, 0x45, 0x04, 0x08
    .byte 0x48, 0x45, 0x04, 0x08, 0x40, 0x45, 0x04, 0x08, 0x48, 0x45, 0x04, 0x08, 0x48, 0x45, 0x04, 0x08
    .byte 0x40, 0x45, 0x04, 0x08, 0x3C, 0x45, 0x04, 0x08, 0x40, 0x45, 0x04, 0x08, 0x40, 0x45, 0x04, 0x08
    .byte 0x44, 0x45, 0x04, 0x08, 0x40, 0x45, 0x04, 0x08, 0x3C, 0x45, 0x04, 0x08, 0x40, 0x45, 0x04, 0x08
    .byte 0x3C, 0x45, 0x04, 0x08, 0x05, 0x21, 0x06, 0xE0, 0x04, 0x21, 0x04, 0xE0, 0x06, 0x21, 0x02, 0xE0
    .byte 0x07, 0x21, 0x00, 0xE0, 0x08, 0x21, 0x04, 0x4B, 0xD0, 0x18, 0x00, 0x78, 0x08, 0x1A, 0x01, 0x33
    .byte 0xD1, 0x18, 0x09, 0x78, 0x40, 0x1A, 0x70, 0x47, 0x83, 0x0C, 0x00, 0x00, 0x30, 0xB5, 0x04, 0x1C
    .byte 0x0D, 0x1C, 0x21, 0x68, 0x62, 0x68, 0x28, 0x1C, 0x00, 0x23, 0xEE, 0xF7, 0x6F, 0xFB, 0x00, 0x28
    .byte 0x03, 0xD0, 0x21, 0x1C, 0x4E, 0x31, 0x26, 0x20, 0x13, 0xE0, 0x21, 0x68, 0x00, 0x29, 0x01, 0xDA
    .byte 0x0E, 0x48, 0x09, 0x18, 0x09, 0x0C, 0x62, 0x68, 0x00, 0x2A, 0x01, 0xDA, 0x0B, 0x48, 0x12, 0x18
    .byte 0x09, 0x04, 0x09, 0x14, 0x12, 0x14, 0x28, 0x1C, 0x00, 0x23, 0xEE, 0xF7, 0xF7, 0xF9, 0x21, 0x1C
    .byte 0x4E, 0x31, 0x08, 0x70, 0x09, 0x78, 0x90, 0x20, 0x08, 0x40, 0x80, 0x28, 0x08, 0xD0, 0x20, 0x20
    .byte 0x08, 0x40, 0x00, 0x28, 0x04, 0xD1, 0x00, 0x20, 0x03, 0xE0, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00
    .byte 0x01, 0x20, 0x30, 0xBC, 0x02, 0xBC, 0x08, 0x47
    thumb_func_start sub_80445CC
sub_80445CC:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    ldr r5, [r4, #0x54]
    ldr r0, _08044644 @ =0x03002E20
    adds r0, #0x24
    mov r12, r0
    ldrh r3, [r1, #0x10]
    movs r6, #0xF0
    lsls r6, r6, #0x08
    ands r6, r3
    movs r0, #0x88
    lsls r0, r0, #0x08
    cmp r3, r0
    beq _080446DC
    movs r0, #0x80
    lsls r0, r0, #0x05
    cmp r6, r0
    beq _080446DC
    ldr r0, [r4, #0x08]
    ldr r2, _08044648 @ =0x00041FFF
    cmp r0, r2
    bgt _080446DC
    ldr r0, [r1, #0x08]
    cmp r0, r2
    bgt _080446DC
    ldrh r0, [r4, #0x10]
    adds r2, r0, #0x0
    ldr r0, _0804464C @ =0x00008401
    adds r7, r2, #0x0
    cmp r2, r0
    bne _08044614
    cmp r3, r2
    bne _08044614
    ldr r0, [r1, #0x54]
    cmp r5, r0
    beq _080446DC
_08044614:
    movs r0, #0x80
    lsls r0, r0, #0x06
    cmp r6, r0
    bne _0804465C
    adds r0, r1, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _0804465C
    adds r1, r7, #0x0
    ldr r0, _08044650 @ =0x00008402
    cmp r1, r0
    bne _08044634
    movs r0, #0x00
    str r0, [r4, #0x7C]
_08044634:
    ldr r0, _08044654 @ =0x00008403
    cmp r1, r0
    bne _080446DC
    ldr r0, _08044658 @ =0x08044D4D
    str r0, [r4, #0x14]
    movs r0, #0x00
    str r0, [r4, #0x7C]
    b _080446DC
_08044644: .4byte 0x03002E20
_08044648: .4byte 0x00041FFF
_0804464C: .4byte 0x00008401
_08044650: .4byte 0x00008402
_08044654: .4byte 0x00008403
_08044658: .4byte sub_8044D4C
_0804465C:
    ldr r0, [r5, #0x48]
    ldr r1, _080446E4 @ =0xFFFEFFFF
    ands r0, r1
    str r0, [r5, #0x48]
    movs r0, #0xD0
    lsls r0, r0, #0x08
    adds r1, r4, #0x0
    adds r1, #0x5A
    movs r3, #0x00
    movs r2, #0x80
    lsls r2, r2, #0x08
    strh r2, [r1, #0x00]
    str r0, [r4, #0x30]
    ldrh r1, [r4, #0x34]
    ldr r0, _080446E8 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r4, #0x34]
    str r3, [r4, #0x18]
    ldr r0, _080446EC @ =0x08047849
    str r0, [r4, #0x14]
    cmp r6, r2
    bne _080446DC
    ldr r0, _080446F0 @ =0x00000814
    add r0, r12
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _080446DC
    mov r0, r12
    adds r1, r4, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    cmp r6, #0x00
    beq _080446DC
    movs r0, #0x7C
    bl m4aSongNumStart
    ldr r5, _080446F4 @ =0x08102414
    ldr r4, _080446F8 @ =0x08102498
    movs r0, #0xF8
    lsls r0, r0, #0x02
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayVolumeControl
_080446DC:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_080446E4: .4byte 0xFFFEFFFF
_080446E8: .4byte 0x0000FFFD
_080446EC: .4byte sub_8047848
_080446F0: .4byte 0x00000814
_080446F4: .4byte 0x08102414
_080446F8: .4byte 0x08102498
    thumb_func_start sub_80446FC
sub_80446FC:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r4, r0, #0x0
    adds r3, r1, #0x0
    ldr r0, [r4, #0x54]
    mov r12, r0
    ldr r7, _080447F4 @ =0x03002E20
    movs r1, #0x24
    adds r1, r1, r7
    mov r8, r1
    ldrh r2, [r3, #0x10]
    adds r1, r2, #0x0
    movs r5, #0xF0
    lsls r5, r5, #0x08
    adds r6, r1, #0x0
    ands r6, r5
    movs r0, #0x88
    lsls r0, r0, #0x08
    cmp r1, r0
    beq _080447EA
    ands r2, r5
    movs r0, #0x80
    lsls r0, r0, #0x05
    cmp r2, r0
    beq _080447EA
    ldr r0, [r4, #0x08]
    ldr r1, _080447F8 @ =0x00041FFF
    cmp r0, r1
    bgt _080447EA
    ldr r0, [r3, #0x08]
    cmp r0, r1
    bgt _080447EA
    movs r0, #0x80
    lsls r0, r0, #0x06
    cmp r6, r0
    bne _08044752
    adds r0, r3, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _080447EA
_08044752:
    mov r1, r12
    ldr r0, [r1, #0x48]
    ldr r1, _080447FC @ =0xFFFEFFFF
    ands r0, r1
    mov r1, r12
    str r0, [r1, #0x48]
    movs r0, #0xD0
    lsls r0, r0, #0x08
    adds r1, r4, #0x0
    adds r1, #0x5A
    movs r2, #0x00
    movs r3, #0x80
    lsls r3, r3, #0x08
    strh r3, [r1, #0x00]
    str r0, [r4, #0x30]
    ldrh r1, [r4, #0x34]
    ldr r0, _08044800 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r4, #0x34]
    str r2, [r4, #0x18]
    ldr r0, _08044804 @ =0x08047849
    str r0, [r4, #0x14]
    movs r1, #0xBE
    lsls r1, r1, #0x01
    add r1, r12
    ldrb r0, [r1, #0x00]
    subs r0, #0x01
    strb r0, [r1, #0x00]
    movs r0, #0xC6
    lsls r0, r0, #0x01
    add r0, r12
    strh r2, [r0, #0x00]
    cmp r6, r3
    bne _080447EA
    ldr r1, _08044808 @ =0x00000838
    adds r0, r7, r1
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _080447EA
    mov r0, r8
    adds r1, r4, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    cmp r6, #0x00
    beq _080447EA
    movs r0, #0x7C
    bl m4aSongNumStart
    ldr r5, _0804480C @ =0x08102414
    ldr r4, _08044810 @ =0x08102498
    movs r0, #0xF8
    lsls r0, r0, #0x02
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayVolumeControl
_080447EA:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_080447F4: .4byte 0x03002E20
_080447F8: .4byte 0x00041FFF
_080447FC: .4byte 0xFFFEFFFF
_08044800: .4byte 0x0000FFFD
_08044804: .4byte sub_8047848
_08044808: .4byte 0x00000838
_0804480C: .4byte 0x08102414
_08044810: .4byte 0x08102498
    thumb_func_start sub_8044814
sub_8044814:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r5, r0, #0x0
    adds r4, r1, #0x0
    ldr r0, _08044870 @ =0x03002E20
    adds r0, #0x24
    mov r8, r0
    ldrh r1, [r4, #0x10]
    adds r7, r1, #0x0
    movs r2, #0xF0
    lsls r2, r2, #0x08
    adds r6, r7, #0x0
    ands r6, r2
    movs r0, #0x88
    lsls r0, r0, #0x08
    cmp r7, r0
    beq _08044906
    ands r1, r2
    movs r0, #0x80
    lsls r0, r0, #0x05
    cmp r1, r0
    beq _08044906
    ldr r0, [r5, #0x08]
    ldr r1, _08044874 @ =0x00041FFF
    cmp r0, r1
    bgt _08044906
    ldr r0, [r4, #0x08]
    cmp r0, r1
    bgt _08044906
    movs r0, #0x80
    lsls r0, r0, #0x06
    cmp r6, r0
    bne _0804489C
    adds r0, r4, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _0804487C
    ldr r0, _08044878 @ =0x08044D4D
    str r0, [r5, #0x14]
    movs r0, #0x00
    str r0, [r5, #0x7C]
    b _08044906
    .byte 0x00, 0x00
_08044870: .4byte 0x03002E20
_08044874: .4byte 0x00041FFF
_08044878: .4byte sub_8044D4C
_0804487C:
    adds r0, r4, #0x0
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r0, r0, #0x01
    cmp r0, #0x00
    beq _08044894
    adds r0, r4, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _0804489C
_08044894:
    adds r0, r5, #0x0
    adds r1, r4, #0x0
    bl sub_80445CC
_0804489C:
    ldr r0, _08044910 @ =0x00008403
    cmp r7, r0
    bne _080448AA
    adds r0, r5, #0x0
    adds r1, r4, #0x0
    bl sub_80445CC
_080448AA:
    movs r0, #0x80
    lsls r0, r0, #0x08
    cmp r6, r0
    bne _08044906
    ldr r0, _08044914 @ =0x00000814
    add r0, r8
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08044906
    mov r0, r8
    adds r1, r5, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    cmp r6, #0x00
    beq _08044906
    movs r0, #0x7C
    bl m4aSongNumStart
    ldr r5, _08044918 @ =0x08102414
    ldr r4, _0804491C @ =0x08102498
    movs r0, #0xF8
    lsls r0, r0, #0x02
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayVolumeControl
_08044906:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08044910: .4byte 0x00008403
_08044914: .4byte 0x00000814
_08044918: .4byte 0x08102414
_0804491C: .4byte 0x08102498
    thumb_func_start sub_8044920
sub_8044920:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    mov r9, r0
    adds r6, r1, #0x0
    mov r5, r9
    cmp r2, #0x07
    bhi _080449DE
    lsls r0, r2, #0x02
    ldr r1, _08044940 @ =0x08044944
    adds r1, r0, r1
    ldr r1, [r1, #0x00]
    mov r8, r0
    mov pc, r1
    .byte 0x00, 0x00
_08044940: .4byte 0x08044944
    .byte 0xD0, 0x49, 0x04, 0x08, 0x64, 0x49, 0x04, 0x08, 0xD8, 0x49, 0x04, 0x08, 0x64, 0x49, 0x04, 0x08
    .byte 0xD0, 0x49, 0x04, 0x08, 0x64, 0x49, 0x04, 0x08, 0xD8, 0x49, 0x04, 0x08, 0x64, 0x49, 0x04, 0x08
    .byte 0x29, 0x68, 0x00, 0x29, 0x01, 0xDA, 0x16, 0x48, 0x09, 0x18, 0x0F, 0x0C, 0x6D, 0x68, 0x00, 0x2D
    .byte 0x01, 0xDA, 0x13, 0x48, 0x2D, 0x18, 0x2D, 0x0C, 0x12, 0x48, 0x40, 0x44, 0x01, 0x68, 0x79, 0x18
    .byte 0x30, 0x1C, 0x2A, 0x1C, 0x00, 0x23, 0xEE, 0xF7, 0x01, 0xF8, 0x80, 0x24, 0x04, 0x40, 0x24, 0x06
    .byte 0x24, 0x0E, 0x64, 0x42, 0xE4, 0x17, 0x02, 0x20, 0x04, 0x40, 0x0B, 0x48, 0x40, 0x44, 0x00, 0x68
    .byte 0x2D, 0x18, 0x30, 0x1C, 0x39, 0x1C, 0x2A, 0x1C, 0x00, 0x23, 0xED, 0xF7, 0xEF, 0xFF, 0x00, 0x06
    .byte 0xC0, 0x0F, 0x24, 0x18, 0x48, 0x46, 0x31, 0x1C, 0x22, 0x1C, 0x02, 0xF0, 0x23, 0xFF, 0x0D, 0xE0
    .byte 0xFF, 0xFF, 0x00, 0x00, 0x74, 0xDA, 0x0E, 0x08, 0x94, 0xDA, 0x0E, 0x08, 0xA8, 0x6A, 0x40, 0x42
    .byte 0xA8, 0x62, 0x02, 0xE0, 0xE8, 0x6A, 0x40, 0x42, 0xE8, 0x62
_080449DE:
    movs r0, #0x01
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    thumb_func_start sub_80449EC
sub_80449EC:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    adds r6, r1, #0x0
    ldr r1, [r4, #0x08]
    ldr r0, _08044A14 @ =0x0004FFFF
    cmp r1, r0
    bgt _08044A9A
    ldr r1, [r4, #0x00]
    ldr r2, [r4, #0x04]
    adds r0, r6, #0x0
    movs r3, #0x00
    bl sub_8032C50
    cmp r0, #0x00
    beq _08044A18
    adds r1, r4, #0x0
    adds r1, #0x4E
    movs r0, #0x26
    b _08044AA0
    .byte 0x00, 0x00
_08044A14: .4byte 0x0004FFFF
_08044A18:
    ldr r0, [r4, #0x00]
    cmp r0, #0x00
    bge _08044A22
    ldr r1, _08044A7C @ =0x0000FFFF
    adds r0, r0, r1
_08044A22:
    lsrs r1, r0, #0x10
    ldr r2, [r4, #0x04]
    cmp r2, #0x00
    bge _08044A2E
    ldr r0, _08044A7C @ =0x0000FFFF
    adds r2, r2, r0
_08044A2E:
    asrs r2, r2, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08044A38
    adds r0, r2, #0x7
_08044A38:
    asrs r0, r0, #0x03
    lsls r3, r0, #0x08
    lsls r0, r1, #0x10
    asrs r1, r0, #0x10
    adds r0, r1, #0x0
    cmp r1, #0x00
    bge _08044A48
    adds r0, r1, #0x7
_08044A48:
    asrs r0, r0, #0x03
    adds r5, r3, r0
    adds r0, r6, #0x0
    movs r3, #0x00
    bl sub_8032990
    adds r1, r4, #0x0
    adds r1, #0x4E
    strb r0, [r1, #0x00]
    movs r1, #0x90
    ands r1, r0
    cmp r1, #0x80
    bne _08044A92
    adds r1, r4, #0x0
    adds r1, #0x52
    ldrh r0, [r1, #0x00]
    subs r2, r5, r0
    strh r5, [r1, #0x00]
    cmp r2, #0x00
    bge _08044A80
    negs r2, r2
    subs r2, #0xFA
    cmp r2, #0x00
    bge _08044A88
    movs r2, #0x04
    b _08044A88
_08044A7C: .4byte 0x0000FFFF
_08044A80:
    subs r2, #0x01
    cmp r2, #0x00
    beq _08044A88
    subs r2, #0xFD
_08044A88:
    adds r0, r4, #0x0
    adds r1, r6, #0x0
    bl sub_8044920
    b _08044AA4
_08044A92:
    adds r0, r4, #0x0
    adds r0, #0x52
    strh r5, [r0, #0x00]
    b _08044AA2
_08044A9A:
    adds r1, r4, #0x0
    adds r1, #0x4E
    movs r0, #0x40
_08044AA0:
    strb r0, [r1, #0x00]
_08044AA2:
    movs r0, #0x00
_08044AA4:
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_8044AAC
sub_8044AAC:
    push {r4, r5, r6, r7, lr}
    adds r6, r0, #0x0
    adds r2, r1, #0x0
    ldr r0, _08044AF0 @ =0x03002E20
    adds r5, r0, #0x0
    adds r5, #0x24
    ldr r0, [r6, #0x08]
    cmp r0, #0x00
    bne _08044B9A
    adds r4, r6, #0x0
    adds r4, #0x50
    ldrh r1, [r4, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x07
    ands r0, r1
    cmp r0, #0x00
    bne _08044B8C
    adds r0, r6, #0x0
    adds r1, r2, #0x0
    bl sub_80449EC
    cmp r0, #0x00
    beq _08044B98
    ldrh r1, [r4, #0x00]
    movs r2, #0x07
    ands r2, r1
    adds r2, #0x01
    cmp r2, #0x07
    bhi _08044AFC
    ldr r0, _08044AF4 @ =0x0000FFF8
    ands r0, r1
    ldr r3, _08044AF8 @ =0xFFFF8000
    b _08044B02
    .byte 0x00, 0x00
_08044AF0: .4byte 0x03002E20
_08044AF4: .4byte 0x0000FFF8
_08044AF8: .4byte 0xFFFF8000
_08044AFC:
    ldr r0, _08044B74 @ =0x0000FFF8
    ands r0, r1
    ldr r3, _08044B78 @ =0xFFFFC000
_08044B02:
    adds r1, r3, #0x0
    orrs r0, r1
    orrs r0, r2
    strh r0, [r4, #0x00]
    ldr r1, _08044B7C @ =0x00000814
    adds r0, r5, r1
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08044B5E
    adds r0, r5, #0x0
    adds r1, r6, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    cmp r7, #0x00
    beq _08044B5E
    movs r0, #0x7C
    bl m4aSongNumStart
    ldr r5, _08044B80 @ =0x08102414
    ldr r4, _08044B84 @ =0x08102498
    movs r3, #0xF8
    lsls r3, r3, #0x02
    adds r4, r4, r3
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r7, #0x0
    bl m4aMPlayVolumeControl
_08044B5E:
    adds r1, r6, #0x0
    adds r1, #0x74
    ldrb r0, [r1, #0x00]
    subs r0, #0x01
    strb r0, [r1, #0x00]
    lsls r0, r0, #0x18
    cmp r0, #0x00
    bne _08044B9A
    ldr r0, _08044B88 @ =0x08047885
    str r0, [r6, #0x14]
    b _08044B9A
_08044B74: .4byte 0x0000FFF8
_08044B78: .4byte 0xFFFFC000
_08044B7C: .4byte 0x00000814
_08044B80: .4byte 0x08102414
_08044B84: .4byte 0x08102498
_08044B88: .4byte sub_8047884
_08044B8C:
    adds r0, r6, #0x0
    adds r1, r2, #0x0
    bl sub_80449EC
    cmp r0, #0x00
    bne _08044B9A
_08044B98:
    strh r0, [r4, #0x00]
_08044B9A:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    thumb_func_start sub_8044BA0
sub_8044BA0:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    adds r5, r4, #0x0
    ldr r6, [r4, #0x54]
    ldr r0, _08044C44 @ =0x03002E20
    adds r7, r0, #0x0
    adds r7, #0x24
    adds r0, r4, #0x0
    adds r1, r7, #0x0
    bl sub_8044AAC
    ldr r1, [r4, #0x00]
    cmp r1, #0x00
    bge _08044BC0
    ldr r0, _08044C48 @ =0x0000FFFF
    adds r1, r1, r0
_08044BC0:
    asrs r1, r1, #0x10
    ldr r2, [r4, #0x04]
    cmp r2, #0x00
    bge _08044BCC
    ldr r0, _08044C48 @ =0x0000FFFF
    adds r2, r2, r0
_08044BCC:
    asrs r2, r2, #0x10
    ldr r3, [r4, #0x08]
    cmp r3, #0x00
    bge _08044BD8
    ldr r0, _08044C48 @ =0x0000FFFF
    adds r3, r3, r0
_08044BD8:
    asrs r3, r3, #0x10
    adds r0, r7, #0x0
    bl sub_80328D4
    adds r1, r0, #0x0
    cmp r1, #0x7F
    beq _08044BF0
    movs r0, #0x7F
    ands r1, r0
    adds r0, r4, #0x0
    adds r0, #0x36
    strb r1, [r0, #0x00]
_08044BF0:
    ldrh r0, [r4, #0x38]
    cmp r0, #0x00
    beq _08044BFA
    subs r0, #0x01
    strh r0, [r4, #0x38]
_08044BFA:
    movs r2, #0x00
    adds r0, r4, #0x0
    adds r0, #0x4E
    ldrb r1, [r0, #0x00]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _08044C18
    movs r0, #0x00
    cmp r1, #0x26
    bne _08044C12
    movs r0, #0x01
_08044C12:
    cmp r0, #0x00
    bne _08044C18
    movs r2, #0x01
_08044C18:
    cmp r2, #0x00
    bne _08044C2E
    movs r1, #0x00
    adds r0, r5, #0x0
    adds r0, #0x4E
    ldrb r0, [r0, #0x00]
    cmp r0, #0x26
    bne _08044C2A
    movs r1, #0x01
_08044C2A:
    cmp r1, #0x00
    beq _08044C54
_08044C2E:
    ldr r0, [r6, #0x48]
    ldr r1, _08044C4C @ =0xFFFEFFFF
    ands r0, r1
    str r0, [r6, #0x48]
    ldr r1, _08044C50 @ =0x0000070C
    adds r0, r7, r1
    adds r1, r5, #0x0
    bl sub_804F808
    b _08044CF6
    .byte 0x00, 0x00
_08044C44: .4byte 0x03002E20
_08044C48: .4byte 0x0000FFFF
_08044C4C: .4byte 0xFFFEFFFF
_08044C50: .4byte 0x0000070C
_08044C54:
    ldrh r1, [r4, #0x34]
    movs r0, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r4, #0x34]
    adds r2, r5, #0x0
    adds r2, #0x4C
    ldrh r1, [r2, #0x00]
    movs r0, #0x07
    ands r0, r1
    adds r7, r2, #0x0
    cmp r0, #0x00
    bne _08044CD0
    adds r0, r5, #0x0
    adds r0, #0x70
    ldrb r3, [r0, #0x00]
    ldrh r1, [r5, #0x10]
    ldr r2, _08044C8C @ =0x00008402
    mov r12, r0
    cmp r1, r2
    beq _08044CA8
    cmp r1, r2
    bgt _08044C94
    ldr r0, _08044C90 @ =0x00008401
    cmp r1, r0
    beq _08044CA0
    b _08044CC0
_08044C8C: .4byte 0x00008402
_08044C90: .4byte 0x00008401
_08044C94:
    ldr r0, _08044C9C @ =0x00008403
    cmp r1, r0
    beq _08044CB0
    b _08044CC0
_08044C9C: .4byte 0x00008403
_08044CA0:
    ldr r1, _08044CA4 @ =0x080EDAB4
    b _08044CB2
_08044CA4: .4byte 0x080EDAB4
_08044CA8:
    ldr r1, _08044CAC @ =0x080EDACC
    b _08044CB2
_08044CAC: .4byte 0x080EDACC
_08044CB0:
    ldr r1, _08044CBC @ =0x080EDAE4
_08044CB2:
    lsls r0, r3, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    b _08044CC2
    .byte 0x00, 0x00
_08044CBC: .4byte 0x080EDAE4
_08044CC0:
    movs r0, #0x00
_08044CC2:
    str r0, [r5, #0x48]
    adds r3, #0x01
    cmp r3, #0x05
    ble _08044CCC
    movs r3, #0x00
_08044CCC:
    mov r0, r12
    strb r3, [r0, #0x00]
_08044CD0:
    ldrh r0, [r7, #0x00]
    adds r0, #0x01
    strh r0, [r7, #0x00]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x10
    bne _08044CE6
    ldr r0, [r6, #0x48]
    ldr r1, _08044CFC @ =0xFFFEFFFF
    ands r0, r1
    str r0, [r6, #0x48]
_08044CE6:
    ldr r0, [r4, #0x00]
    ldr r1, [r4, #0x28]
    adds r0, r0, r1
    str r0, [r4, #0x00]
    ldr r0, [r4, #0x04]
    ldr r1, [r4, #0x2C]
    adds r0, r0, r1
    str r0, [r4, #0x04]
_08044CF6:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08044CFC: .4byte 0xFFFEFFFF
    thumb_func_start sub_8044D00
sub_8044D00:
    push {r4, lr}
    adds r4, r0, #0x0
    movs r0, #0x26
    ldsh r3, [r4, r0]
    lsls r1, r1, #0x10
    asrs r2, r1, #0x10
    subs r0, r2, r3
    lsls r0, r0, #0x10
    cmp r0, #0x00
    bge _08044D2C
    subs r0, r2, r3
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    ldr r1, _08044D24 @ =0xFFFFF800
    cmp r0, r1
    bgt _08044D44
    ldr r1, _08044D28 @ =0xFFFFFC00
    b _08044D3A
_08044D24: .4byte 0xFFFFF800
_08044D28: .4byte 0xFFFFFC00
_08044D2C:
    subs r0, r2, r3
    lsls r0, r0, #0x10
    ldr r1, _08044D40 @ =0x07FF0000
    cmp r0, r1
    ble _08044D44
    movs r1, #0x80
    lsls r1, r1, #0x03
_08044D3A:
    adds r0, r3, r1
    strh r0, [r4, #0x26]
    b _08044D46
_08044D40: .4byte 0x07FF0000
_08044D44:
    strh r2, [r4, #0x26]
_08044D46:
    pop {r4}
    pop {r0}
    bx r0
    thumb_func_start sub_8044D4C
sub_8044D4C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x018
    mov r8, r0
    ldr r0, [r0, #0x7C]
    str r0, [sp, #0x004]
    mov r9, r8
    mov r1, r9
    ldr r1, [r1, #0x54]
    str r1, [sp, #0x008]
    mov r0, r9
    ldr r1, _08044E08 @ =0x03002E44
    bl sub_8044AAC
    mov r2, r9
    ldr r1, [r2, #0x00]
    cmp r1, #0x00
    bge _08044D7A
    ldr r3, _08044E0C @ =0x0000FFFF
    adds r1, r1, r3
_08044D7A:
    asrs r1, r1, #0x10
    mov r4, r9
    ldr r2, [r4, #0x04]
    cmp r2, #0x00
    bge _08044D88
    ldr r5, _08044E0C @ =0x0000FFFF
    adds r2, r2, r5
_08044D88:
    asrs r2, r2, #0x10
    mov r6, r9
    ldr r3, [r6, #0x08]
    cmp r3, #0x00
    bge _08044D96
    ldr r7, _08044E0C @ =0x0000FFFF
    adds r3, r3, r7
_08044D96:
    asrs r3, r3, #0x10
    ldr r0, _08044E08 @ =0x03002E44
    bl sub_80328D4
    adds r1, r0, #0x0
    cmp r1, #0x7F
    beq _08044DAE
    movs r0, #0x7F
    ands r1, r0
    mov r0, r9
    adds r0, #0x36
    strb r1, [r0, #0x00]
_08044DAE:
    mov r1, r9
    ldrh r0, [r1, #0x38]
    cmp r0, #0x00
    beq _08044DBA
    subs r0, #0x01
    strh r0, [r1, #0x38]
_08044DBA:
    movs r2, #0x00
    mov r0, r9
    adds r0, #0x4E
    ldrb r1, [r0, #0x00]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _08044DD8
    movs r0, #0x00
    cmp r1, #0x26
    bne _08044DD2
    movs r0, #0x01
_08044DD2:
    cmp r0, #0x00
    bne _08044DD8
    movs r2, #0x01
_08044DD8:
    cmp r2, #0x00
    bne _08044DEE
    movs r1, #0x00
    mov r0, r8
    adds r0, #0x4E
    ldrb r0, [r0, #0x00]
    cmp r0, #0x26
    bne _08044DEA
    movs r1, #0x01
_08044DEA:
    cmp r1, #0x00
    beq _08044E18
_08044DEE:
    ldr r2, [sp, #0x008]
    ldr r0, [r2, #0x48]
    ldr r1, _08044E10 @ =0xFFFEFFFF
    ands r0, r1
    str r0, [r2, #0x48]
    ldr r3, _08044E08 @ =0x03002E44
    ldr r4, _08044E14 @ =0x0000070C
    adds r0, r3, r4
    mov r1, r8
    bl sub_804F808
    b _08045364
    .byte 0x00, 0x00
_08044E08: .4byte 0x03002E44
_08044E0C: .4byte 0x0000FFFF
_08044E10: .4byte 0xFFFEFFFF
_08044E14: .4byte 0x0000070C
_08044E18:
    mov r5, r9
    ldrh r1, [r5, #0x34]
    movs r0, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r5, #0x34]
    ldr r6, _08044EDC @ =0x03002E44
    ldr r7, _08044EE0 @ =0x000007DA
    adds r0, r6, r7
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x04
    ands r0, r1
    cmp r0, #0x00
    bne _08044E3A
    b _08044FBC
_08044E3A:
    movs r0, #0x71
    add r0, r8
    mov r10, r0
    ldr r1, _08044EE4 @ =0x000007DC
    adds r1, r6, r1
    str r1, [sp, #0x014]
    mov r2, r8
    adds r2, #0x4C
    str r2, [sp, #0x010]
    ldr r3, [sp, #0x004]
    cmp r3, #0x00
    bne _08044F10
    movs r4, #0x00
    mov r12, r4
    movs r5, #0xFE
    lsls r5, r5, #0x03
    adds r0, r6, r5
    ldrb r6, [r0, #0x00]
    cmp r3, r6
    bge _08044EC0
    str r0, [sp, #0x00C]
    ldr r7, _08044EDC @ =0x03002E44
    ldr r0, _08044EE8 @ =0x000007F4
    adds r3, r7, r0
_08044E6A:
    ldr r2, [r3, #0x00]
    ldr r1, [sp, #0x008]
    cmp r2, r1
    beq _08044EB2
    ldr r1, [r2, #0x00]
    mov r4, r9
    ldr r0, [r4, #0x00]
    subs r0, r1, r0
    cmp r0, #0x00
    bge _08044E82
    ldr r5, _08044EEC @ =0x0000FFFF
    adds r0, r0, r5
_08044E82:
    asrs r7, r0, #0x10
    ldr r1, [r2, #0x04]
    mov r6, r9
    ldr r0, [r6, #0x04]
    subs r1, r1, r0
    cmp r1, #0x00
    bge _08044E94
    ldr r0, _08044EEC @ =0x0000FFFF
    adds r1, r1, r0
_08044E94:
    asrs r4, r1, #0x10
    adds r6, r7, #0x0
    cmp r6, #0x00
    bge _08044E9E
    negs r6, r6
_08044E9E:
    adds r5, r4, #0x0
    cmp r5, #0x00
    bge _08044EA6
    negs r5, r5
_08044EA6:
    cmp r6, #0x40
    bgt _08044EB2
    cmp r5, #0x40
    bgt _08044EB2
    mov r1, r8
    str r2, [r1, #0x7C]
_08044EB2:
    adds r3, #0x04
    movs r2, #0x01
    add r12, r2
    ldr r4, [sp, #0x00C]
    ldrb r4, [r4, #0x00]
    cmp r12, r4
    blt _08044E6A
_08044EC0:
    ldr r5, [sp, #0x004]
    cmp r5, #0x00
    bne _08044F10
    movs r2, #0x74
    mov r6, r10
    ldrb r0, [r6, #0x00]
    ldr r7, [sp, #0x014]
    ldrb r1, [r7, #0x00]
    cmp r1, #0x00
    beq _08044EF0
    cmp r1, #0x02
    beq _08044EF4
    b _08044EF6
    .byte 0x00, 0x00
_08044EDC: .4byte 0x03002E44
_08044EE0: .4byte 0x000007DA
_08044EE4: .4byte 0x000007DC
_08044EE8: .4byte 0x000007F4
_08044EEC: .4byte 0x0000FFFF
_08044EF0:
    movs r2, #0x6C
    b _08044EF6
_08044EF4:
    movs r2, #0x7E
_08044EF6:
    cmp r0, r2
    blt _08044F02
    subs r0, #0x10
    cmp r0, r2
    bge _08044F0A
    b _08044F08
_08044F02:
    adds r0, #0x04
    cmp r0, r2
    ble _08044F0A
_08044F08:
    adds r0, r2, #0x0
_08044F0A:
    mov r1, r10
    strb r0, [r1, #0x00]
    b _0804526C
_08044F10:
    ldr r2, [sp, #0x004]
    ldr r1, [r2, #0x00]
    mov r3, r9
    ldr r0, [r3, #0x00]
    subs r0, r1, r0
    cmp r0, #0x00
    bge _08044F22
    ldr r4, _08044F68 @ =0x0000FFFF
    adds r0, r0, r4
_08044F22:
    asrs r7, r0, #0x10
    ldr r5, [sp, #0x004]
    ldr r1, [r5, #0x04]
    mov r6, r9
    ldr r0, [r6, #0x04]
    subs r1, r1, r0
    cmp r1, #0x00
    bge _08044F36
    ldr r0, _08044F68 @ =0x0000FFFF
    adds r1, r1, r0
_08044F36:
    asrs r4, r1, #0x10
    adds r6, r7, #0x0
    cmp r6, #0x00
    bge _08044F40
    negs r6, r6
_08044F40:
    adds r5, r4, #0x0
    cmp r5, #0x00
    bge _08044F48
    negs r5, r5
_08044F48:
    adds r0, r7, #0x0
    adds r1, r4, #0x0
    bl sub_802EC38
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    movs r2, #0x3C
    mov r1, r10
    ldrb r0, [r1, #0x00]
    ldr r3, [sp, #0x014]
    ldrb r1, [r3, #0x00]
    cmp r1, #0x00
    beq _08044F6C
    cmp r1, #0x02
    beq _08044F70
    b _08044F72
_08044F68: .4byte 0x0000FFFF
_08044F6C:
    movs r2, #0x34
    b _08044F72
_08044F70:
    movs r2, #0x46
_08044F72:
    cmp r0, r2
    blt _08044F7E
    subs r0, #0x10
    cmp r0, r2
    bge _08044F86
    b _08044F84
_08044F7E:
    adds r0, #0x04
    cmp r0, r2
    ble _08044F86
_08044F84:
    adds r0, r2, #0x0
_08044F86:
    mov r7, r10
    strb r0, [r7, #0x00]
    mov r1, r8
    adds r1, #0x7A
    ldrb r0, [r1, #0x00]
    cmp r0, #0x00
    beq _08044F9A
    subs r0, #0x01
    strb r0, [r1, #0x00]
    b _08044FAA
_08044F9A:
    ldr r1, [sp, #0x004]
    ldr r0, [r1, #0x08]
    cmp r0, #0x00
    bne _08044FAA
    cmp r6, #0x0C
    bgt _08044FAA
    cmp r5, #0x0C
    ble _08044FB6
_08044FAA:
    lsls r1, r4, #0x10
    asrs r1, r1, #0x10
    mov r0, r8
    bl sub_8044D00
    b _0804526C
_08044FB6:
    mov r2, r9
    strh r4, [r2, #0x26]
    b _0804526C
_08044FBC:
    ldr r3, [sp, #0x004]
    cmp r3, #0x00
    bne _08045008
    movs r3, #0x74
    mov r1, r8
    adds r1, #0x71
    ldrb r2, [r1, #0x00]
    ldr r4, _08044FE0 @ =0x03002E44
    ldr r5, _08044FE4 @ =0x000007DC
    adds r0, r4, r5
    ldrb r0, [r0, #0x00]
    mov r10, r1
    cmp r0, #0x00
    beq _08044FE8
    cmp r0, #0x02
    beq _08044FEC
    b _08044FEE
    .byte 0x00, 0x00
_08044FE0: .4byte 0x03002E44
_08044FE4: .4byte 0x000007DC
_08044FE8:
    movs r3, #0x6C
    b _08044FEE
_08044FEC:
    movs r3, #0x7E
_08044FEE:
    cmp r2, r3
    blt _08044FFA
    subs r2, #0x10
    cmp r2, r3
    bge _08045002
    b _08045000
_08044FFA:
    adds r2, #0x04
    cmp r2, r3
    ble _08045002
_08045000:
    adds r2, r3, #0x0
_08045002:
    mov r6, r10
    strb r2, [r6, #0x00]
    b _08045266
_08045008:
    ldr r0, [sp, #0x004]
    ldr r1, [r0, #0x00]
    mov r2, r9
    ldr r0, [r2, #0x00]
    subs r0, r1, r0
    cmp r0, #0x00
    bge _0804501A
    ldr r3, _08045094 @ =0x0000FFFF
    adds r0, r0, r3
_0804501A:
    asrs r7, r0, #0x10
    ldr r4, [sp, #0x004]
    ldr r1, [r4, #0x04]
    mov r5, r9
    ldr r0, [r5, #0x04]
    subs r1, r1, r0
    cmp r1, #0x00
    bge _0804502E
    ldr r6, _08045094 @ =0x0000FFFF
    adds r1, r1, r6
_0804502E:
    asrs r4, r1, #0x10
    adds r6, r7, #0x0
    cmp r6, #0x00
    bge _08045038
    negs r6, r6
_08045038:
    adds r5, r4, #0x0
    cmp r5, #0x00
    bge _08045040
    negs r5, r5
_08045040:
    adds r0, r7, #0x0
    muls r0, r7
    adds r1, r4, #0x0
    muls r1, r4
    adds r0, r0, r1
    str r0, [sp, #0x000]
    movs r0, #0x36
    add r0, r8
    mov r12, r0
    ldrb r3, [r0, #0x00]
    mov r2, r8
    adds r2, #0x79
    ldrb r0, [r2, #0x00]
    mov r1, r8
    adds r1, #0x78
    cmp r0, r3
    beq _0804506A
    strb r3, [r2, #0x00]
    ldrb r0, [r1, #0x00]
    subs r0, #0x01
    strb r0, [r1, #0x00]
_0804506A:
    ldrb r3, [r1, #0x00]
    cmp r3, #0x00
    bne _080450A0
    movs r1, #0xD0
    lsls r1, r1, #0x08
    mov r2, r8
    adds r2, #0x5A
    movs r0, #0x80
    lsls r0, r0, #0x08
    strh r0, [r2, #0x00]
    mov r2, r8
    str r1, [r2, #0x30]
    ldrh r1, [r2, #0x34]
    ldr r0, _08045098 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x34]
    str r3, [r2, #0x18]
    ldr r0, _0804509C @ =0x08047849
    str r0, [r2, #0x14]
    b _08045364
    .byte 0x00, 0x00
_08045094: .4byte 0x0000FFFF
_08045098: .4byte 0x0000FFFD
_0804509C: .4byte sub_8047848
_080450A0:
    ldr r0, _08045130 @ =0x03002E44
    ldrh r3, [r0, #0x14]
    mov r2, r12
    ldrb r1, [r2, #0x00]
    adds r0, r1, #0x1
    cmp r0, r3
    blt _080450B2
    subs r0, r3, #0x1
    subs r0, r1, r0
_080450B2:
    mov r10, r0
    adds r0, r1, #0x2
    cmp r0, r3
    blt _080450BE
    subs r0, r3, #0x2
    subs r0, r1, r0
_080450BE:
    mov r12, r0
    subs r2, r1, #0x1
    cmp r2, #0x00
    bge _080450CA
    subs r0, r3, #0x1
    adds r2, r1, r0
_080450CA:
    ldr r0, [sp, #0x004]
    adds r0, #0x90
    ldrb r0, [r0, #0x00]
    cmp r0, r1
    beq _0804516A
    cmp r0, r10
    beq _0804516A
    cmp r0, r12
    beq _0804516A
    movs r1, #0x00
    cmp r0, r2
    bne _080450E4
    movs r1, #0x01
_080450E4:
    cmp r1, #0x00
    bne _0804516A
    ldr r0, _08045134 @ =0x03002E20
    adds r0, #0x24
    mov r3, r8
    ldr r1, [r3, #0x00]
    cmp r1, #0x00
    bge _080450F8
    ldr r4, _08045138 @ =0x0000FFFF
    adds r1, r1, r4
_080450F8:
    asrs r1, r1, #0x10
    mov r5, r8
    ldr r2, [r5, #0x04]
    cmp r2, #0x00
    bge _08045106
    ldr r6, _08045138 @ =0x0000FFFF
    adds r2, r2, r6
_08045106:
    asrs r2, r2, #0x10
    movs r3, #0x01
    bl sub_803285C
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    movs r3, #0x74
    mov r1, r8
    adds r1, #0x71
    ldrb r2, [r1, #0x00]
    ldr r7, _08045130 @ =0x03002E44
    ldr r5, _0804513C @ =0x000007DC
    adds r0, r7, r5
    ldrb r0, [r0, #0x00]
    mov r10, r1
    cmp r0, #0x00
    beq _08045140
    cmp r0, #0x02
    beq _08045144
    b _08045146
    .byte 0x00, 0x00
_08045130: .4byte 0x03002E44
_08045134: .4byte 0x03002E20
_08045138: .4byte 0x0000FFFF
_0804513C: .4byte 0x000007DC
_08045140:
    movs r3, #0x6C
    b _08045146
_08045144:
    movs r3, #0x7E
_08045146:
    cmp r2, r3
    blt _08045152
    subs r2, #0x10
    cmp r2, r3
    bge _0804515A
    b _08045158
_08045152:
    adds r2, #0x04
    cmp r2, r3
    ble _0804515A
_08045158:
    adds r2, r3, #0x0
_0804515A:
    mov r6, r10
    strb r2, [r6, #0x00]
    lsls r1, r4, #0x10
    asrs r1, r1, #0x10
    mov r0, r8
    bl sub_8044D00
    b _08045266
_0804516A:
    adds r0, r7, #0x0
    adds r1, r4, #0x0
    bl sub_802EC38
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    ldr r0, _0804519C @ =0x0000018F
    ldr r1, [sp, #0x000]
    cmp r1, r0
    ble _080451BA
    movs r3, #0x74
    mov r1, r8
    adds r1, #0x71
    ldrb r2, [r1, #0x00]
    ldr r7, _080451A0 @ =0x03002E44
    ldr r0, _080451A4 @ =0x000007DC
    adds r7, r7, r0
    ldrb r0, [r7, #0x00]
    mov r10, r1
    cmp r0, #0x00
    beq _080451A8
    cmp r0, #0x02
    beq _080451AC
    b _080451AE
    .byte 0x00, 0x00
_0804519C: .4byte 0x0000018F
_080451A0: .4byte 0x03002E44
_080451A4: .4byte 0x000007DC
_080451A8:
    movs r3, #0x6C
    b _080451AE
_080451AC:
    movs r3, #0x7E
_080451AE:
    cmp r2, r3
    blt _08045202
    subs r2, #0x10
    cmp r2, r3
    bge _0804520A
    b _08045208
_080451BA:
    ldr r2, [sp, #0x004]
    ldr r0, [r2, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x4C
    cmp r0, #0x00
    beq _080451CC
    movs r1, #0x3C
_080451CC:
    adds r3, r1, #0x0
    mov r1, r8
    adds r1, #0x71
    ldrb r2, [r1, #0x00]
    ldr r7, _080451E8 @ =0x03002E44
    ldr r0, _080451EC @ =0x000007DC
    adds r7, r7, r0
    ldrb r0, [r7, #0x00]
    mov r10, r1
    cmp r0, #0x00
    beq _080451F0
    cmp r0, #0x02
    beq _080451F4
    b _080451F6
_080451E8: .4byte 0x03002E44
_080451EC: .4byte 0x000007DC
_080451F0:
    subs r3, #0x08
    b _080451F6
_080451F4:
    adds r3, #0x0A
_080451F6:
    cmp r2, r3
    blt _08045202
    subs r2, #0x10
    cmp r2, r3
    bge _0804520A
    b _08045208
_08045202:
    adds r2, #0x04
    cmp r2, r3
    ble _0804520A
_08045208:
    adds r2, r3, #0x0
_0804520A:
    mov r1, r10
    strb r2, [r1, #0x00]
    mov r1, r8
    adds r1, #0x7A
    ldrb r0, [r1, #0x00]
    cmp r0, #0x00
    beq _0804522E
    subs r0, #0x01
    strb r0, [r1, #0x00]
    lsls r1, r4, #0x10
    asrs r1, r1, #0x10
    mov r0, r8
    bl sub_8044D00
    mov r2, r8
    adds r2, #0x4C
    str r2, [sp, #0x010]
    b _0804526C
_0804522E:
    ldr r3, [sp, #0x004]
    ldr r0, [r3, #0x08]
    cmp r0, #0x00
    beq _08045248
    lsls r1, r4, #0x10
    asrs r1, r1, #0x10
    mov r0, r8
    bl sub_8044D00
    mov r4, r8
    adds r4, #0x4C
    str r4, [sp, #0x010]
    b _0804526C
_08045248:
    cmp r6, #0x0C
    bgt _08045250
    cmp r5, #0x0C
    ble _08045262
_08045250:
    lsls r1, r4, #0x10
    asrs r1, r1, #0x10
    mov r0, r8
    bl sub_8044D00
    mov r5, r8
    adds r5, #0x4C
    str r5, [sp, #0x010]
    b _0804526C
_08045262:
    mov r6, r9
    strh r4, [r6, #0x26]
_08045266:
    mov r7, r8
    adds r7, #0x4C
    str r7, [sp, #0x010]
_0804526C:
    mov r1, r10
    ldrb r0, [r1, #0x00]
    lsls r4, r0, #0x04
    adds r5, r4, #0x0
    ldr r6, _080452EC @ =0x080E645C
    mov r3, r9
    movs r7, #0x26
    ldsh r2, [r3, r7]
    adds r1, r2, #0x0
    cmp r2, #0x00
    bge _08045284
    adds r1, #0x3F
_08045284:
    asrs r3, r1, #0x06
    ldr r1, _080452F0 @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r3, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    adds r1, r1, r6
    ldr r0, [r1, #0x00]
    muls r0, r4
    cmp r0, #0x00
    bge _0804529C
    adds r0, #0x7F
_0804529C:
    asrs r0, r0, #0x07
    mov r4, r9
    str r0, [r4, #0x28]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r1, _080452F0 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r0, [r0, #0x00]
    negs r0, r0
    muls r0, r5
    cmp r0, #0x00
    bge _080452BC
    adds r0, #0x7F
_080452BC:
    asrs r0, r0, #0x07
    mov r5, r9
    str r0, [r5, #0x2C]
    ldr r6, [sp, #0x010]
    ldrh r1, [r6, #0x00]
    movs r0, #0x07
    ands r0, r1
    cmp r0, #0x00
    bne _08045338
    mov r0, r8
    adds r0, #0x70
    ldrb r2, [r0, #0x00]
    mov r7, r8
    ldrh r1, [r7, #0x10]
    ldr r3, _080452F4 @ =0x00008402
    adds r4, r0, #0x0
    cmp r1, r3
    beq _08045310
    cmp r1, r3
    bgt _080452FC
    ldr r0, _080452F8 @ =0x00008401
    cmp r1, r0
    beq _08045308
    b _08045328
_080452EC: .4byte 0x080E645C
_080452F0: .4byte 0x000003FF
_080452F4: .4byte 0x00008402
_080452F8: .4byte 0x00008401
_080452FC:
    ldr r0, _08045304 @ =0x00008403
    cmp r1, r0
    beq _08045318
    b _08045328
_08045304: .4byte 0x00008403
_08045308:
    ldr r1, _0804530C @ =0x080EDAB4
    b _0804531A
_0804530C: .4byte 0x080EDAB4
_08045310:
    ldr r1, _08045314 @ =0x080EDACC
    b _0804531A
_08045314: .4byte 0x080EDACC
_08045318:
    ldr r1, _08045324 @ =0x080EDAE4
_0804531A:
    lsls r0, r2, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    b _0804532A
    .byte 0x00, 0x00
_08045324: .4byte 0x080EDAE4
_08045328:
    movs r0, #0x00
_0804532A:
    mov r1, r8
    str r0, [r1, #0x48]
    adds r2, #0x01
    cmp r2, #0x05
    ble _08045336
    movs r2, #0x00
_08045336:
    strb r2, [r4, #0x00]
_08045338:
    ldr r2, [sp, #0x010]
    ldrh r0, [r2, #0x00]
    adds r0, #0x01
    strh r0, [r2, #0x00]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x10
    bne _08045352
    ldr r3, [sp, #0x008]
    ldr r0, [r3, #0x48]
    ldr r1, _08045374 @ =0xFFFEFFFF
    ands r0, r1
    str r0, [r3, #0x48]
_08045352:
    mov r4, r9
    ldr r0, [r4, #0x00]
    ldr r1, [r4, #0x28]
    adds r0, r0, r1
    str r0, [r4, #0x00]
    ldr r0, [r4, #0x04]
    ldr r1, [r4, #0x2C]
    adds r0, r0, r1
    str r0, [r4, #0x04]
_08045364:
    add sp, #0x018
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08045374: .4byte 0xFFFEFFFF
    thumb_func_start sub_8045378
sub_8045378:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    adds r6, r0, #0x0
    ldr r0, [r6, #0x7C]
    mov r10, r0
    adds r5, r6, #0x0
    ldr r4, [r5, #0x54]
    adds r0, r5, #0x0
    ldr r1, _08045424 @ =0x03002E44
    bl sub_8044AAC
    ldr r1, [r5, #0x00]
    cmp r1, #0x00
    bge _0804539E
    ldr r2, _08045428 @ =0x0000FFFF
    adds r1, r1, r2
_0804539E:
    asrs r1, r1, #0x10
    ldr r2, [r5, #0x04]
    cmp r2, #0x00
    bge _080453AA
    ldr r0, _08045428 @ =0x0000FFFF
    adds r2, r2, r0
_080453AA:
    asrs r2, r2, #0x10
    ldr r3, [r5, #0x08]
    cmp r3, #0x00
    bge _080453B6
    ldr r0, _08045428 @ =0x0000FFFF
    adds r3, r3, r0
_080453B6:
    asrs r3, r3, #0x10
    ldr r0, _08045424 @ =0x03002E44
    bl sub_80328D4
    adds r1, r0, #0x0
    cmp r1, #0x7F
    beq _080453CE
    movs r0, #0x7F
    ands r1, r0
    adds r0, r5, #0x0
    adds r0, #0x36
    strb r1, [r0, #0x00]
_080453CE:
    ldrh r0, [r5, #0x38]
    cmp r0, #0x00
    beq _080453D8
    subs r0, #0x01
    strh r0, [r5, #0x38]
_080453D8:
    movs r2, #0x00
    adds r0, r5, #0x0
    adds r0, #0x4E
    ldrb r1, [r0, #0x00]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _080453F6
    movs r0, #0x00
    cmp r1, #0x26
    bne _080453F0
    movs r0, #0x01
_080453F0:
    cmp r0, #0x00
    bne _080453F6
    movs r2, #0x01
_080453F6:
    cmp r2, #0x00
    bne _0804540C
    movs r1, #0x00
    adds r0, r6, #0x0
    adds r0, #0x4E
    ldrb r0, [r0, #0x00]
    cmp r0, #0x26
    bne _08045408
    movs r1, #0x01
_08045408:
    cmp r1, #0x00
    beq _08045434
_0804540C:
    ldr r0, [r4, #0x48]
    ldr r1, _0804542C @ =0xFFFEFFFF
    ands r0, r1
    str r0, [r4, #0x48]
    ldr r1, _08045424 @ =0x03002E44
    ldr r2, _08045430 @ =0x0000070C
    adds r0, r1, r2
    adds r1, r6, #0x0
    bl sub_804F808
    b _08045634
    .byte 0x00, 0x00
_08045424: .4byte 0x03002E44
_08045428: .4byte 0x0000FFFF
_0804542C: .4byte 0xFFFEFFFF
_08045430: .4byte 0x0000070C
_08045434:
    ldrh r1, [r5, #0x34]
    movs r0, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r5, #0x34]
    mov r4, r10
    ldr r1, [r4, #0x00]
    ldr r0, [r5, #0x00]
    subs r0, r1, r0
    cmp r0, #0x00
    bge _08045450
    ldr r1, _080454B4 @ =0x0000FFFF
    adds r0, r0, r1
_08045450:
    asrs r2, r0, #0x10
    mov r4, r10
    ldr r1, [r4, #0x04]
    ldr r0, [r5, #0x04]
    subs r0, r1, r0
    cmp r0, #0x00
    bge _08045462
    ldr r1, _080454B4 @ =0x0000FFFF
    adds r0, r0, r1
_08045462:
    asrs r1, r0, #0x10
    mov r9, r2
    cmp r2, #0x00
    bge _08045470
    mov r4, r9
    negs r4, r4
    mov r9, r4
_08045470:
    mov r8, r1
    cmp r1, #0x00
    bge _0804547C
    mov r0, r8
    negs r0, r0
    mov r8, r0
_0804547C:
    adds r4, r2, #0x0
    muls r4, r2
    adds r0, r1, #0x0
    muls r0, r1
    adds r4, r4, r0
    adds r0, r2, #0x0
    bl sub_802EC38
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    ldr r0, _080454B8 @ =0x0000018F
    cmp r4, r0
    ble _080454D6
    movs r3, #0x74
    adds r1, r6, #0x0
    adds r1, #0x71
    ldrb r2, [r1, #0x00]
    ldr r4, _080454BC @ =0x03002E44
    ldr r0, _080454C0 @ =0x000007DC
    adds r4, r4, r0
    ldrb r0, [r4, #0x00]
    adds r4, r1, #0x0
    cmp r0, #0x00
    beq _080454C4
    cmp r0, #0x02
    beq _080454C8
    b _080454CA
    .byte 0x00, 0x00
_080454B4: .4byte 0x0000FFFF
_080454B8: .4byte 0x0000018F
_080454BC: .4byte 0x03002E44
_080454C0: .4byte 0x000007DC
_080454C4:
    movs r3, #0x6C
    b _080454CA
_080454C8:
    movs r3, #0x7E
_080454CA:
    cmp r2, r3
    blt _0804551E
    subs r2, #0x10
    cmp r2, r3
    bge _08045526
    b _08045524
_080454D6:
    mov r1, r10
    ldr r0, [r1, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x4C
    cmp r0, #0x00
    beq _080454E8
    movs r1, #0x3C
_080454E8:
    adds r3, r1, #0x0
    adds r1, r6, #0x0
    adds r1, #0x71
    ldrb r2, [r1, #0x00]
    ldr r4, _08045504 @ =0x03002E44
    ldr r0, _08045508 @ =0x000007DC
    adds r4, r4, r0
    ldrb r0, [r4, #0x00]
    adds r4, r1, #0x0
    cmp r0, #0x00
    beq _0804550C
    cmp r0, #0x02
    beq _08045510
    b _08045512
_08045504: .4byte 0x03002E44
_08045508: .4byte 0x000007DC
_0804550C:
    subs r3, #0x08
    b _08045512
_08045510:
    adds r3, #0x0A
_08045512:
    cmp r2, r3
    blt _0804551E
    subs r2, #0x10
    cmp r2, r3
    bge _08045526
    b _08045524
_0804551E:
    adds r2, #0x04
    cmp r2, r3
    ble _08045526
_08045524:
    adds r2, r3, #0x0
_08045526:
    strb r2, [r4, #0x00]
    adds r1, r6, #0x0
    adds r1, #0x7A
    ldrb r0, [r1, #0x00]
    cmp r0, #0x00
    beq _08045538
    subs r0, #0x01
    strb r0, [r1, #0x00]
    b _0804554C
_08045538:
    mov r1, r10
    ldr r0, [r1, #0x08]
    cmp r0, #0x00
    bne _0804554C
    mov r2, r9
    cmp r2, #0x0C
    bgt _0804554C
    mov r0, r8
    cmp r0, #0x0C
    ble _08045558
_0804554C:
    lsls r1, r7, #0x10
    asrs r1, r1, #0x10
    adds r0, r6, #0x0
    bl sub_8044D00
    b _0804555A
_08045558:
    strh r7, [r5, #0x26]
_0804555A:
    ldrb r0, [r4, #0x00]
    lsls r4, r0, #0x04
    adds r7, r4, #0x0
    ldr r1, _080455D4 @ =0x080E645C
    mov r8, r1
    movs r0, #0x26
    ldsh r2, [r5, r0]
    adds r1, r2, #0x0
    cmp r2, #0x00
    bge _08045570
    adds r1, #0x3F
_08045570:
    asrs r3, r1, #0x06
    ldr r1, _080455D8 @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r3, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    add r1, r8
    ldr r0, [r1, #0x00]
    muls r0, r4
    cmp r0, #0x00
    bge _08045588
    adds r0, #0x7F
_08045588:
    asrs r0, r0, #0x07
    str r0, [r5, #0x28]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r1, _080455D8 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    negs r0, r0
    muls r0, r7
    cmp r0, #0x00
    bge _080455A6
    adds r0, #0x7F
_080455A6:
    asrs r0, r0, #0x07
    str r0, [r5, #0x2C]
    adds r2, r6, #0x0
    adds r2, #0x4C
    ldrh r1, [r2, #0x00]
    movs r0, #0x07
    ands r0, r1
    cmp r0, #0x00
    bne _0804561E
    adds r0, r6, #0x0
    adds r0, #0x70
    ldrb r3, [r0, #0x00]
    ldrh r1, [r6, #0x10]
    ldr r4, _080455DC @ =0x00008402
    adds r7, r0, #0x0
    cmp r1, r4
    beq _080455F8
    cmp r1, r4
    bgt _080455E4
    ldr r0, _080455E0 @ =0x00008401
    cmp r1, r0
    beq _080455F0
    b _08045610
_080455D4: .4byte 0x080E645C
_080455D8: .4byte 0x000003FF
_080455DC: .4byte 0x00008402
_080455E0: .4byte 0x00008401
_080455E4:
    ldr r0, _080455EC @ =0x00008403
    cmp r1, r0
    beq _08045600
    b _08045610
_080455EC: .4byte 0x00008403
_080455F0:
    ldr r1, _080455F4 @ =0x080EDAB4
    b _08045602
_080455F4: .4byte 0x080EDAB4
_080455F8:
    ldr r1, _080455FC @ =0x080EDACC
    b _08045602
_080455FC: .4byte 0x080EDACC
_08045600:
    ldr r1, _0804560C @ =0x080EDAE4
_08045602:
    lsls r0, r3, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    b _08045612
    .byte 0x00, 0x00
_0804560C: .4byte 0x080EDAE4
_08045610:
    movs r0, #0x00
_08045612:
    str r0, [r6, #0x48]
    adds r3, #0x01
    cmp r3, #0x05
    ble _0804561C
    movs r3, #0x00
_0804561C:
    strb r3, [r7, #0x00]
_0804561E:
    ldrh r0, [r2, #0x00]
    adds r0, #0x01
    strh r0, [r2, #0x00]
    ldr r0, [r5, #0x00]
    ldr r1, [r5, #0x28]
    adds r0, r0, r1
    str r0, [r5, #0x00]
    ldr r0, [r5, #0x04]
    ldr r1, [r5, #0x2C]
    adds r0, r0, r1
    str r0, [r5, #0x04]
_08045634:
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_8045644
sub_8045644:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    adds r5, r0, #0x0
    adds r7, r5, #0x0
    ldr r4, [r5, #0x54]
    ldr r1, _080456E8 @ =0x03002E44
    bl sub_8044AAC
    ldr r1, [r5, #0x00]
    cmp r1, #0x00
    bge _08045664
    ldr r0, _080456EC @ =0x0000FFFF
    adds r1, r1, r0
_08045664:
    asrs r1, r1, #0x10
    ldr r2, [r5, #0x04]
    cmp r2, #0x00
    bge _08045670
    ldr r0, _080456EC @ =0x0000FFFF
    adds r2, r2, r0
_08045670:
    asrs r2, r2, #0x10
    ldr r3, [r5, #0x08]
    cmp r3, #0x00
    bge _0804567C
    ldr r0, _080456EC @ =0x0000FFFF
    adds r3, r3, r0
_0804567C:
    asrs r3, r3, #0x10
    ldr r0, _080456E8 @ =0x03002E44
    bl sub_80328D4
    adds r1, r0, #0x0
    cmp r1, #0x7F
    beq _08045694
    movs r0, #0x7F
    ands r1, r0
    adds r0, r5, #0x0
    adds r0, #0x36
    strb r1, [r0, #0x00]
_08045694:
    ldrh r0, [r5, #0x38]
    cmp r0, #0x00
    beq _0804569E
    subs r0, #0x01
    strh r0, [r5, #0x38]
_0804569E:
    movs r2, #0x00
    adds r0, r5, #0x0
    adds r0, #0x4E
    ldrb r1, [r0, #0x00]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _080456BC
    movs r0, #0x00
    cmp r1, #0x26
    bne _080456B6
    movs r0, #0x01
_080456B6:
    cmp r0, #0x00
    bne _080456BC
    movs r2, #0x01
_080456BC:
    cmp r2, #0x00
    bne _080456D2
    movs r1, #0x00
    adds r0, r7, #0x0
    adds r0, #0x4E
    ldrb r0, [r0, #0x00]
    cmp r0, #0x26
    bne _080456CE
    movs r1, #0x01
_080456CE:
    cmp r1, #0x00
    beq _080456F8
_080456D2:
    ldr r0, [r4, #0x48]
    ldr r1, _080456F0 @ =0xFFFEFFFF
    ands r0, r1
    str r0, [r4, #0x48]
    ldr r1, _080456E8 @ =0x03002E44
    ldr r2, _080456F4 @ =0x0000070C
    adds r0, r1, r2
    adds r1, r7, #0x0
    bl sub_804F808
    b _08045900
_080456E8: .4byte 0x03002E44
_080456EC: .4byte 0x0000FFFF
_080456F0: .4byte 0xFFFEFFFF
_080456F4: .4byte 0x0000070C
_080456F8:
    ldrh r1, [r5, #0x34]
    movs r0, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r5, #0x34]
    ldr r0, _08045780 @ =0x03002E44
    movs r1, #0x00
    bl sub_804AED4
    mov r10, r0
    ldr r1, [r0, #0x00]
    ldr r0, [r5, #0x00]
    subs r0, r1, r0
    cmp r0, #0x00
    bge _0804571C
    ldr r4, _08045784 @ =0x0000FFFF
    adds r0, r0, r4
_0804571C:
    asrs r2, r0, #0x10
    mov r0, r10
    ldr r1, [r0, #0x04]
    ldr r0, [r5, #0x04]
    subs r0, r1, r0
    cmp r0, #0x00
    bge _0804572E
    ldr r1, _08045784 @ =0x0000FFFF
    adds r0, r0, r1
_0804572E:
    asrs r1, r0, #0x10
    mov r9, r2
    cmp r2, #0x00
    bge _0804573C
    mov r4, r9
    negs r4, r4
    mov r9, r4
_0804573C:
    mov r8, r1
    cmp r1, #0x00
    bge _08045748
    mov r0, r8
    negs r0, r0
    mov r8, r0
_08045748:
    adds r4, r2, #0x0
    muls r4, r2
    adds r0, r1, #0x0
    muls r0, r1
    adds r4, r4, r0
    adds r0, r2, #0x0
    bl sub_802EC38
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    ldr r0, _08045788 @ =0x0000018F
    cmp r4, r0
    ble _080457A2
    movs r3, #0x74
    adds r1, r7, #0x0
    adds r1, #0x71
    ldrb r2, [r1, #0x00]
    ldr r4, _08045780 @ =0x03002E44
    ldr r0, _0804578C @ =0x000007DC
    adds r4, r4, r0
    ldrb r0, [r4, #0x00]
    adds r4, r1, #0x0
    cmp r0, #0x00
    beq _08045790
    cmp r0, #0x02
    beq _08045794
    b _08045796
    .byte 0x00, 0x00
_08045780: .4byte 0x03002E44
_08045784: .4byte 0x0000FFFF
_08045788: .4byte 0x0000018F
_0804578C: .4byte 0x000007DC
_08045790:
    movs r3, #0x6C
    b _08045796
_08045794:
    movs r3, #0x7E
_08045796:
    cmp r2, r3
    blt _080457EA
    subs r2, #0x10
    cmp r2, r3
    bge _080457F2
    b _080457F0
_080457A2:
    mov r1, r10
    ldr r0, [r1, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x4C
    cmp r0, #0x00
    beq _080457B4
    movs r1, #0x3C
_080457B4:
    adds r3, r1, #0x0
    adds r1, r7, #0x0
    adds r1, #0x71
    ldrb r2, [r1, #0x00]
    ldr r4, _080457D0 @ =0x03002E44
    ldr r0, _080457D4 @ =0x000007DC
    adds r4, r4, r0
    ldrb r0, [r4, #0x00]
    adds r4, r1, #0x0
    cmp r0, #0x00
    beq _080457D8
    cmp r0, #0x02
    beq _080457DC
    b _080457DE
_080457D0: .4byte 0x03002E44
_080457D4: .4byte 0x000007DC
_080457D8:
    subs r3, #0x08
    b _080457DE
_080457DC:
    adds r3, #0x0A
_080457DE:
    cmp r2, r3
    blt _080457EA
    subs r2, #0x10
    cmp r2, r3
    bge _080457F2
    b _080457F0
_080457EA:
    adds r2, #0x04
    cmp r2, r3
    ble _080457F2
_080457F0:
    adds r2, r3, #0x0
_080457F2:
    strb r2, [r4, #0x00]
    adds r1, r7, #0x0
    adds r1, #0x7A
    ldrb r0, [r1, #0x00]
    cmp r0, #0x00
    beq _08045804
    subs r0, #0x01
    strb r0, [r1, #0x00]
    b _08045818
_08045804:
    mov r1, r10
    ldr r0, [r1, #0x08]
    cmp r0, #0x00
    bne _08045818
    mov r2, r9
    cmp r2, #0x0C
    bgt _08045818
    mov r0, r8
    cmp r0, #0x0C
    ble _08045824
_08045818:
    lsls r1, r6, #0x10
    asrs r1, r1, #0x10
    adds r0, r7, #0x0
    bl sub_8044D00
    b _08045826
_08045824:
    strh r6, [r5, #0x26]
_08045826:
    ldrb r0, [r4, #0x00]
    lsls r4, r0, #0x04
    adds r6, r4, #0x0
    ldr r1, _080458A0 @ =0x080E645C
    mov r8, r1
    movs r0, #0x26
    ldsh r2, [r5, r0]
    adds r1, r2, #0x0
    cmp r2, #0x00
    bge _0804583C
    adds r1, #0x3F
_0804583C:
    asrs r3, r1, #0x06
    ldr r1, _080458A4 @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r3, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    add r1, r8
    ldr r0, [r1, #0x00]
    muls r0, r4
    cmp r0, #0x00
    bge _08045854
    adds r0, #0x7F
_08045854:
    asrs r0, r0, #0x07
    str r0, [r5, #0x28]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r1, _080458A4 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    negs r0, r0
    muls r0, r6
    cmp r0, #0x00
    bge _08045872
    adds r0, #0x7F
_08045872:
    asrs r0, r0, #0x07
    str r0, [r5, #0x2C]
    adds r2, r7, #0x0
    adds r2, #0x4C
    ldrh r1, [r2, #0x00]
    movs r0, #0x07
    ands r0, r1
    cmp r0, #0x00
    bne _080458EA
    adds r0, r7, #0x0
    adds r0, #0x70
    ldrb r3, [r0, #0x00]
    ldrh r1, [r7, #0x10]
    ldr r4, _080458A8 @ =0x00008402
    adds r6, r0, #0x0
    cmp r1, r4
    beq _080458C4
    cmp r1, r4
    bgt _080458B0
    ldr r0, _080458AC @ =0x00008401
    cmp r1, r0
    beq _080458BC
    b _080458DC
_080458A0: .4byte 0x080E645C
_080458A4: .4byte 0x000003FF
_080458A8: .4byte 0x00008402
_080458AC: .4byte 0x00008401
_080458B0:
    ldr r0, _080458B8 @ =0x00008403
    cmp r1, r0
    beq _080458CC
    b _080458DC
_080458B8: .4byte 0x00008403
_080458BC:
    ldr r1, _080458C0 @ =0x080EDAB4
    b _080458CE
_080458C0: .4byte 0x080EDAB4
_080458C4:
    ldr r1, _080458C8 @ =0x080EDACC
    b _080458CE
_080458C8: .4byte 0x080EDACC
_080458CC:
    ldr r1, _080458D8 @ =0x080EDAE4
_080458CE:
    lsls r0, r3, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    b _080458DE
    .byte 0x00, 0x00
_080458D8: .4byte 0x080EDAE4
_080458DC:
    movs r0, #0x00
_080458DE:
    str r0, [r7, #0x48]
    adds r3, #0x01
    cmp r3, #0x05
    ble _080458E8
    movs r3, #0x00
_080458E8:
    strb r3, [r6, #0x00]
_080458EA:
    ldrh r0, [r2, #0x00]
    adds r0, #0x01
    strh r0, [r2, #0x00]
    ldr r0, [r5, #0x00]
    ldr r1, [r5, #0x28]
    adds r0, r0, r1
    str r0, [r5, #0x00]
    ldr r0, [r5, #0x04]
    ldr r1, [r5, #0x2C]
    adds r0, r0, r1
    str r0, [r5, #0x04]
_08045900:
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_8045910
sub_8045910:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r4, r0, #0x0
    ldr r7, [r4, #0x7C]
    adds r6, r4, #0x0
    ldr r0, _0804594C @ =0x03002E20
    adds r0, #0x24
    mov r8, r0
    adds r0, r4, #0x0
    adds r0, #0x4C
    ldrh r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    cmp r0, #0x00
    bne _08045992
    adds r0, r4, #0x0
    adds r0, #0x70
    ldrb r2, [r0, #0x00]
    ldrh r1, [r4, #0x10]
    ldr r3, _08045950 @ =0x00008402
    adds r5, r0, #0x0
    cmp r1, r3
    beq _0804596C
    cmp r1, r3
    bgt _08045958
    ldr r0, _08045954 @ =0x00008401
    cmp r1, r0
    beq _08045964
    b _08045984
_0804594C: .4byte 0x03002E20
_08045950: .4byte 0x00008402
_08045954: .4byte 0x00008401
_08045958:
    ldr r0, _08045960 @ =0x00008403
    cmp r1, r0
    beq _08045974
    b _08045984
_08045960: .4byte 0x00008403
_08045964:
    ldr r1, _08045968 @ =0x080EDAB4
    b _08045976
_08045968: .4byte 0x080EDAB4
_0804596C:
    ldr r1, _08045970 @ =0x080EDACC
    b _08045976
_08045970: .4byte 0x080EDACC
_08045974:
    ldr r1, _08045980 @ =0x080EDAE4
_08045976:
    lsls r0, r2, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    b _08045986
    .byte 0x00, 0x00
_08045980: .4byte 0x080EDAE4
_08045984:
    movs r0, #0x00
_08045986:
    str r0, [r4, #0x48]
    adds r2, #0x01
    cmp r2, #0x05
    ble _08045990
    movs r2, #0x00
_08045990:
    strb r2, [r5, #0x00]
_08045992:
    adds r5, r4, #0x0
    adds r5, #0x4C
    ldrh r0, [r5, #0x00]
    adds r0, #0x01
    strh r0, [r5, #0x00]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x1E
    bne _08045A2C
    ldr r1, [r7, #0x00]
    ldr r0, [r6, #0x00]
    subs r0, r1, r0
    cmp r0, #0x00
    bge _080459B2
    ldr r1, _080459E4 @ =0x0000FFFF
    adds r0, r0, r1
_080459B2:
    asrs r2, r0, #0x10
    ldr r1, [r7, #0x04]
    ldr r0, [r6, #0x04]
    subs r1, r1, r0
    cmp r1, #0x00
    bge _080459C2
    ldr r0, _080459E4 @ =0x0000FFFF
    adds r1, r1, r0
_080459C2:
    adds r0, r2, #0x0
    asrs r1, r1, #0x10
    bl sub_802EC38
    strh r0, [r6, #0x26]
    movs r0, #0x00
    strh r0, [r5, #0x00]
    ldr r0, _080459E8 @ =0x000007DC
    add r0, r8
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    beq _080459FA
    cmp r0, #0x01
    bgt _080459EC
    cmp r0, #0x00
    beq _080459F2
    b _08045A0A
_080459E4: .4byte 0x0000FFFF
_080459E8: .4byte 0x000007DC
_080459EC:
    cmp r0, #0x02
    beq _08045A02
    b _08045A0A
_080459F2:
    adds r1, r4, #0x0
    adds r1, #0x71
    movs r0, #0x40
    b _08045A08
_080459FA:
    adds r1, r4, #0x0
    adds r1, #0x71
    movs r0, #0x48
    b _08045A08
_08045A02:
    adds r1, r4, #0x0
    adds r1, #0x71
    movs r0, #0x52
_08045A08:
    strb r0, [r1, #0x00]
_08045A0A:
    ldrh r1, [r6, #0x10]
    ldr r0, _08045A1C @ =0x00008402
    cmp r1, r0
    beq _08045A20
    adds r0, #0x01
    cmp r1, r0
    beq _08045A28
    b _08045A2C
    .byte 0x00, 0x00
_08045A1C: .4byte 0x00008402
_08045A20:
    ldr r0, _08045A24 @ =0x08045379
    b _08045A2A
_08045A24: .4byte sub_8045378
_08045A28:
    ldr r0, _08045A38 @ =0x08045645
_08045A2A:
    str r0, [r4, #0x14]
_08045A2C:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08045A38: .4byte sub_8045644
    thumb_func_start sub_8045A3C
sub_8045A3C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x008
    adds r5, r0, #0x0
    mov r8, r5
    ldr r0, _08045A7C @ =0x03002E20
    adds r7, r0, #0x0
    adds r7, #0x24
    adds r0, r5, #0x0
    adds r0, #0x4C
    ldrh r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    cmp r0, #0x00
    bne _08045AC2
    adds r0, r5, #0x0
    adds r0, #0x70
    ldrb r2, [r0, #0x00]
    ldrh r1, [r5, #0x10]
    ldr r3, _08045A80 @ =0x00008402
    adds r4, r0, #0x0
    cmp r1, r3
    beq _08045A9C
    cmp r1, r3
    bgt _08045A88
    ldr r0, _08045A84 @ =0x00008401
    cmp r1, r0
    beq _08045A94
    b _08045AB4
_08045A7C: .4byte 0x03002E20
_08045A80: .4byte 0x00008402
_08045A84: .4byte 0x00008401
_08045A88:
    ldr r0, _08045A90 @ =0x00008403
    cmp r1, r0
    beq _08045AA4
    b _08045AB4
_08045A90: .4byte 0x00008403
_08045A94:
    ldr r1, _08045A98 @ =0x080EDAB4
    b _08045AA6
_08045A98: .4byte 0x080EDAB4
_08045A9C:
    ldr r1, _08045AA0 @ =0x080EDACC
    b _08045AA6
_08045AA0: .4byte 0x080EDACC
_08045AA4:
    ldr r1, _08045AB0 @ =0x080EDAE4
_08045AA6:
    lsls r0, r2, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    b _08045AB6
    .byte 0x00, 0x00
_08045AB0: .4byte 0x080EDAE4
_08045AB4:
    movs r0, #0x00
_08045AB6:
    str r0, [r5, #0x48]
    adds r2, #0x01
    cmp r2, #0x05
    ble _08045AC0
    movs r2, #0x00
_08045AC0:
    strb r2, [r4, #0x00]
_08045AC2:
    adds r0, r5, #0x0
    adds r0, #0x4C
    ldrh r1, [r0, #0x00]
    adds r1, #0x01
    strh r1, [r0, #0x00]
    mov r2, r8
    adds r2, #0x36
    ldrb r2, [r2, #0x00]
    str r2, [sp, #0x000]
    lsls r1, r1, #0x10
    ldr r2, _08045B00 @ =0x0A8B0000
    str r0, [sp, #0x004]
    cmp r1, r2
    ble _08045B0C
    movs r1, #0xD0
    lsls r1, r1, #0x08
    adds r2, r5, #0x0
    adds r2, #0x5A
    movs r0, #0x80
    lsls r0, r0, #0x08
    strh r0, [r2, #0x00]
    str r1, [r5, #0x30]
    ldrh r1, [r5, #0x34]
    ldr r0, _08045B04 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r5, #0x34]
    movs r0, #0x00
    str r0, [r5, #0x18]
    ldr r0, _08045B08 @ =0x08047849
    str r0, [r5, #0x14]
    b _08045BF0
_08045B00: .4byte 0x0A8B0000
_08045B04: .4byte 0x0000FFFD
_08045B08: .4byte sub_8047848
_08045B0C:
    movs r6, #0x00
    movs r1, #0xFE
    lsls r1, r1, #0x03
    adds r0, r7, r1
    ldrb r0, [r0, #0x00]
    cmp r6, r0
    bge _08045BF0
    ldr r2, _08045C00 @ =0x08102414
    mov r10, r2
    ldr r0, _08045C04 @ =0x08102890
    mov r9, r0
_08045B22:
    lsls r1, r6, #0x02
    ldr r2, _08045C08 @ =0x000007F4
    adds r0, r7, r2
    adds r0, r0, r1
    ldr r3, [r0, #0x00]
    adds r0, r3, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r4, [r0, r1]
    cmp r4, #0x00
    bne _08045BE2
    adds r0, #0x2A
    ldrb r1, [r0, #0x00]
    movs r0, #0x7F
    ands r0, r1
    ldr r2, [sp, #0x000]
    cmp r2, r0
    bne _08045BE2
    ldr r1, [r3, #0x00]
    mov r2, r8
    ldr r0, [r2, #0x00]
    subs r1, r1, r0
    cmp r1, #0x00
    bge _08045B56
    ldr r0, _08045C0C @ =0x0000FFFF
    adds r1, r1, r0
_08045B56:
    asrs r1, r1, #0x10
    mov r12, r1
    ldr r1, [r3, #0x04]
    mov r2, r8
    ldr r0, [r2, #0x04]
    subs r1, r1, r0
    cmp r1, #0x00
    bge _08045B6A
    ldr r0, _08045C0C @ =0x0000FFFF
    adds r1, r1, r0
_08045B6A:
    asrs r1, r1, #0x10
    mov r0, r12
    cmp r0, #0x00
    bge _08045B74
    negs r0, r0
_08045B74:
    cmp r1, #0x00
    bge _08045B7A
    negs r1, r1
_08045B7A:
    cmp r0, #0x20
    bgt _08045BE2
    cmp r1, #0x20
    bgt _08045BE2
    str r3, [r5, #0x7C]
    ldr r1, [sp, #0x004]
    strh r4, [r1, #0x00]
    ldr r0, _08045C10 @ =0x08045911
    str r0, [r5, #0x14]
    ldr r2, _08045C14 @ =0x00000814
    adds r0, r7, r2
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08045BE2
    adds r0, r7, #0x0
    adds r1, r5, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #0x3F
    bgt _08045BAE
    movs r2, #0x40
_08045BAE:
    adds r4, r2, #0x0
    cmp r4, #0x00
    beq _08045BE2
    movs r0, #0x7F
    bl m4aSongNumStart
    mov r0, r9
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r10
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    mov r2, r9
    ldrh r1, [r2, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r10
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r4, #0x0
    bl m4aMPlayVolumeControl
_08045BE2:
    adds r6, #0x01
    movs r1, #0xFE
    lsls r1, r1, #0x03
    adds r0, r7, r1
    ldrb r0, [r0, #0x00]
    cmp r6, r0
    blt _08045B22
_08045BF0:
    add sp, #0x008
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08045C00: .4byte 0x08102414
_08045C04: .4byte 0x08102890
_08045C08: .4byte 0x000007F4
_08045C0C: .4byte 0x0000FFFF
_08045C10: .4byte sub_8045910
_08045C14: .4byte 0x00000814
    thumb_func_start sub_8045C18
sub_8045C18:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    adds r4, r0, #0x0
    adds r5, r4, #0x0
    ldr r0, [r4, #0x54]
    mov r9, r0
    ldr r0, _08045C68 @ =0x03002E20
    adds r0, #0x24
    mov r10, r0
    ldrh r0, [r4, #0x38]
    cmp r0, #0x00
    beq _08045C3A
    subs r0, #0x01
    strh r0, [r4, #0x38]
_08045C3A:
    adds r2, r4, #0x0
    adds r2, #0x4C
    ldrh r1, [r2, #0x00]
    movs r0, #0x07
    ands r0, r1
    adds r7, r2, #0x0
    cmp r0, #0x00
    bne _08045CAE
    adds r0, r4, #0x0
    adds r0, #0x70
    ldrb r2, [r0, #0x00]
    ldrh r1, [r4, #0x10]
    ldr r3, _08045C6C @ =0x00008402
    adds r6, r0, #0x0
    cmp r1, r3
    beq _08045C88
    cmp r1, r3
    bgt _08045C74
    ldr r0, _08045C70 @ =0x00008401
    cmp r1, r0
    beq _08045C80
    b _08045CA0
    .byte 0x00, 0x00
_08045C68: .4byte 0x03002E20
_08045C6C: .4byte 0x00008402
_08045C70: .4byte 0x00008401
_08045C74:
    ldr r0, _08045C7C @ =0x00008403
    cmp r1, r0
    beq _08045C90
    b _08045CA0
_08045C7C: .4byte 0x00008403
_08045C80:
    ldr r1, _08045C84 @ =0x080EDAB4
    b _08045C92
_08045C84: .4byte 0x080EDAB4
_08045C88:
    ldr r1, _08045C8C @ =0x080EDACC
    b _08045C92
_08045C8C: .4byte 0x080EDACC
_08045C90:
    ldr r1, _08045C9C @ =0x080EDAE4
_08045C92:
    lsls r0, r2, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    b _08045CA2
    .byte 0x00, 0x00
_08045C9C: .4byte 0x080EDAE4
_08045CA0:
    movs r0, #0x00
_08045CA2:
    str r0, [r4, #0x48]
    adds r2, #0x01
    cmp r2, #0x05
    ble _08045CAC
    movs r2, #0x00
_08045CAC:
    strb r2, [r6, #0x00]
_08045CAE:
    ldrh r0, [r7, #0x00]
    adds r0, #0x01
    strh r0, [r7, #0x00]
    ldr r1, [r5, #0x00]
    ldr r2, [r5, #0x04]
    mov r0, r10
    movs r3, #0x00
    bl sub_8032C50
    cmp r0, #0x00
    beq _08045CCC
    adds r1, r5, #0x0
    adds r1, #0x4E
    movs r0, #0x26
    b _08045CF4
_08045CCC:
    ldr r1, [r5, #0x00]
    cmp r1, #0x00
    bge _08045CD6
    ldr r2, _08045D14 @ =0x0000FFFF
    adds r1, r1, r2
_08045CD6:
    lsrs r1, r1, #0x10
    ldr r2, [r5, #0x04]
    cmp r2, #0x00
    bge _08045CE2
    ldr r0, _08045D14 @ =0x0000FFFF
    adds r2, r2, r0
_08045CE2:
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    asrs r2, r2, #0x10
    mov r0, r10
    movs r3, #0x00
    bl sub_8032990
    adds r1, r5, #0x0
    adds r1, #0x4E
_08045CF4:
    strb r0, [r1, #0x00]
    movs r3, #0x00
    adds r1, r4, #0x0
    adds r1, #0x4E
    ldrb r2, [r1, #0x00]
    movs r0, #0x90
    ands r0, r2
    adds r6, r1, #0x0
    cmp r0, #0x80
    bne _08045D0A
    movs r3, #0x01
_08045D0A:
    cmp r3, #0x00
    beq _08045D1C
    ldr r0, _08045D18 @ =0x08047885
    b _08045DDE
    .byte 0x00, 0x00
_08045D14: .4byte 0x0000FFFF
_08045D18: .4byte sub_8047884
_08045D1C:
    movs r1, #0x00
    movs r0, #0x20
    ands r0, r2
    cmp r0, #0x00
    beq _08045D38
    movs r3, #0x00
    lsls r0, r2, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x26
    bne _08045D32
    movs r3, #0x01
_08045D32:
    cmp r3, #0x00
    bne _08045D38
    movs r1, #0x01
_08045D38:
    cmp r1, #0x00
    bne _08045D50
    movs r1, #0x00
    mov r8, r1
    ldrb r0, [r6, #0x00]
    cmp r0, #0x26
    bne _08045D4A
    movs r2, #0x01
    mov r8, r2
_08045D4A:
    mov r0, r8
    cmp r0, #0x00
    beq _08045D78
_08045D50:
    mov r1, r9
    ldr r0, [r1, #0x48]
    ldr r1, _08045D6C @ =0xFFFEFFFF
    ands r0, r1
    mov r2, r9
    str r0, [r2, #0x48]
    ldr r1, _08045D70 @ =0x03002E44
    ldr r2, _08045D74 @ =0x0000070C
    adds r0, r1, r2
    adds r1, r4, #0x0
    bl sub_804F808
    b _08045DE0
    .byte 0x00, 0x00
_08045D6C: .4byte 0xFFFEFFFF
_08045D70: .4byte 0x03002E44
_08045D74: .4byte 0x0000070C
_08045D78:
    ldrh r0, [r5, #0x34]
    movs r1, #0x01
    orrs r1, r0
    movs r0, #0x02
    orrs r1, r0
    strh r1, [r5, #0x34]
    ldr r1, [r4, #0x00]
    cmp r1, #0x00
    bge _08045D8E
    ldr r0, _08045DF0 @ =0x0000FFFF
    adds r1, r1, r0
_08045D8E:
    asrs r1, r1, #0x10
    ldr r2, [r4, #0x04]
    cmp r2, #0x00
    bge _08045D9A
    ldr r0, _08045DF0 @ =0x0000FFFF
    adds r2, r2, r0
_08045D9A:
    asrs r2, r2, #0x10
    ldr r3, [r4, #0x08]
    cmp r3, #0x00
    bge _08045DA6
    ldr r0, _08045DF0 @ =0x0000FFFF
    adds r3, r3, r0
_08045DA6:
    asrs r3, r3, #0x10
    mov r0, r10
    bl sub_80328D4
    adds r1, r0, #0x0
    cmp r1, #0x7F
    beq _08045DBE
    movs r0, #0x7F
    ands r1, r0
    adds r0, r4, #0x0
    adds r0, #0x36
    strb r1, [r0, #0x00]
_08045DBE:
    movs r1, #0x00
    ldsh r0, [r7, r1]
    cmp r0, #0x10
    bne _08045DD0
    mov r2, r9
    ldr r0, [r2, #0x48]
    ldr r1, _08045DF4 @ =0xFFFEFFFF
    ands r0, r1
    str r0, [r2, #0x48]
_08045DD0:
    movs r1, #0x00
    ldsh r0, [r7, r1]
    cmp r0, #0x60
    bne _08045DE0
    mov r2, r8
    strh r2, [r7, #0x00]
    ldr r0, _08045DF8 @ =0x08045A3D
_08045DDE:
    str r0, [r4, #0x14]
_08045DE0:
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08045DF0: .4byte 0x0000FFFF
_08045DF4: .4byte 0xFFFEFFFF
_08045DF8: .4byte sub_8045A3C
    thumb_func_start sub_8045DFC
sub_8045DFC:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x004
    adds r7, r0, #0x0
    adds r5, r7, #0x0
    ldr r0, [r7, #0x54]
    str r0, [sp, #0x000]
    adds r0, r7, #0x0
    ldr r1, _08045EA8 @ =0x03002E44
    bl sub_8044AAC
    ldr r1, [r7, #0x00]
    cmp r1, #0x00
    bge _08045E22
    ldr r2, _08045EAC @ =0x0000FFFF
    adds r1, r1, r2
_08045E22:
    asrs r1, r1, #0x10
    ldr r2, [r7, #0x04]
    cmp r2, #0x00
    bge _08045E2E
    ldr r3, _08045EAC @ =0x0000FFFF
    adds r2, r2, r3
_08045E2E:
    asrs r2, r2, #0x10
    ldr r3, [r7, #0x08]
    cmp r3, #0x00
    bge _08045E3A
    ldr r4, _08045EAC @ =0x0000FFFF
    adds r3, r3, r4
_08045E3A:
    asrs r3, r3, #0x10
    ldr r0, _08045EA8 @ =0x03002E44
    bl sub_80328D4
    adds r1, r0, #0x0
    cmp r1, #0x7F
    beq _08045E52
    movs r0, #0x7F
    ands r1, r0
    adds r0, r7, #0x0
    adds r0, #0x36
    strb r1, [r0, #0x00]
_08045E52:
    ldrh r0, [r7, #0x38]
    cmp r0, #0x00
    beq _08045E5C
    subs r0, #0x01
    strh r0, [r7, #0x38]
_08045E5C:
    movs r2, #0x00
    adds r0, r7, #0x0
    adds r0, #0x4E
    ldrb r1, [r0, #0x00]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _08045E7A
    movs r0, #0x00
    cmp r1, #0x26
    bne _08045E74
    movs r0, #0x01
_08045E74:
    cmp r0, #0x00
    bne _08045E7A
    movs r2, #0x01
_08045E7A:
    cmp r2, #0x00
    bne _08045E90
    movs r1, #0x00
    adds r0, r5, #0x0
    adds r0, #0x4E
    ldrb r0, [r0, #0x00]
    cmp r0, #0x26
    bne _08045E8C
    movs r1, #0x01
_08045E8C:
    cmp r1, #0x00
    beq _08045EB8
_08045E90:
    ldr r6, [sp, #0x000]
    ldr r0, [r6, #0x48]
    ldr r1, _08045EB0 @ =0xFFFEFFFF
    ands r0, r1
    str r0, [r6, #0x48]
    ldr r1, _08045EA8 @ =0x03002E44
    ldr r2, _08045EB4 @ =0x0000070C
    adds r0, r1, r2
    adds r1, r5, #0x0
    bl sub_804F808
    b _08046296
_08045EA8: .4byte 0x03002E44
_08045EAC: .4byte 0x0000FFFF
_08045EB0: .4byte 0xFFFEFFFF
_08045EB4: .4byte 0x0000070C
_08045EB8:
    ldrh r1, [r7, #0x34]
    movs r0, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r7, #0x34]
    adds r0, r5, #0x0
    adds r0, #0x36
    ldrb r4, [r0, #0x00]
    adds r3, r5, #0x0
    adds r3, #0x79
    ldrb r1, [r3, #0x00]
    mov r8, r0
    adds r2, r5, #0x0
    adds r2, #0x78
    cmp r1, r4
    beq _08045EE2
    strb r4, [r3, #0x00]
    ldrb r0, [r2, #0x00]
    subs r0, #0x01
    strb r0, [r2, #0x00]
_08045EE2:
    ldrb r3, [r2, #0x00]
    cmp r3, #0x00
    bne _08045F10
    movs r1, #0xD0
    lsls r1, r1, #0x08
    adds r2, r5, #0x0
    adds r2, #0x5A
    movs r0, #0x80
    lsls r0, r0, #0x08
    strh r0, [r2, #0x00]
    str r1, [r5, #0x30]
    ldrh r1, [r5, #0x34]
    ldr r0, _08045F08 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r5, #0x34]
    str r3, [r5, #0x18]
    ldr r0, _08045F0C @ =0x08047849
    str r0, [r5, #0x14]
    b _08046296
_08045F08: .4byte 0x0000FFFD
_08045F0C: .4byte sub_8047848
_08045F10:
    ldr r6, [r5, #0x7C]
    cmp r6, #0x00
    beq _08045F30
    ldr r0, _08045F28 @ =0x03002E44
    movs r1, #0x00
    bl sub_804AED4
    adds r6, r0, #0x0
    str r6, [r5, #0x7C]
    ldr r0, _08045F2C @ =0x08044815
    b _08045F32
    .byte 0x00, 0x00
_08045F28: .4byte 0x03002E44
_08045F2C: .4byte sub_8044814
_08045F30:
    ldr r0, _08045F58 @ =0x080445CD
_08045F32:
    str r0, [r5, #0x18]
    cmp r6, #0x00
    beq _08045F8C
    ldr r4, _08045F5C @ =0x03002E44
    ldrh r3, [r4, #0x14]
    mov r0, r8
    ldrb r1, [r0, #0x00]
    adds r0, r1, #0x1
    cmp r0, r3
    blt _08045F4A
    subs r0, r3, #0x1
    subs r0, r1, r0
_08045F4A:
    mov r8, r0
    adds r0, r1, #0x2
    cmp r0, r3
    bge _08045F60
    adds r4, r0, #0x0
    b _08045F64
    .byte 0x00, 0x00
_08045F58: .4byte sub_80445CC
_08045F5C: .4byte 0x03002E44
_08045F60:
    subs r0, r3, #0x2
    subs r4, r1, r0
_08045F64:
    subs r2, r1, #0x1
    cmp r2, #0x00
    bge _08045F6E
    subs r0, r3, #0x1
    adds r2, r1, r0
_08045F6E:
    adds r0, r6, #0x0
    adds r0, #0x90
    ldrb r0, [r0, #0x00]
    cmp r0, r1
    beq _08046002
    cmp r0, r8
    beq _08046002
    cmp r0, r4
    beq _08046002
    movs r1, #0x00
    cmp r0, r2
    bne _08045F88
    movs r1, #0x01
_08045F88:
    cmp r1, #0x00
    bne _08046002
_08045F8C:
    ldr r0, _08045FD0 @ =0x03002E20
    adds r0, #0x24
    ldr r1, [r5, #0x00]
    cmp r1, #0x00
    bge _08045F9A
    ldr r2, _08045FD4 @ =0x0000FFFF
    adds r1, r1, r2
_08045F9A:
    asrs r1, r1, #0x10
    ldr r2, [r5, #0x04]
    cmp r2, #0x00
    bge _08045FA6
    ldr r3, _08045FD4 @ =0x0000FFFF
    adds r2, r2, r3
_08045FA6:
    asrs r2, r2, #0x10
    movs r3, #0x01
    bl sub_803285C
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    mov r8, r0
    movs r3, #0x74
    adds r1, r5, #0x0
    adds r1, #0x71
    ldrb r2, [r1, #0x00]
    ldr r4, _08045FD8 @ =0x03002E44
    ldr r6, _08045FDC @ =0x000007DC
    adds r0, r4, r6
    ldrb r0, [r0, #0x00]
    adds r4, r1, #0x0
    cmp r0, #0x00
    beq _08045FE0
    cmp r0, #0x02
    beq _08045FE4
    b _08045FE6
_08045FD0: .4byte 0x03002E20
_08045FD4: .4byte 0x0000FFFF
_08045FD8: .4byte 0x03002E44
_08045FDC: .4byte 0x000007DC
_08045FE0:
    movs r3, #0x6C
    b _08045FE6
_08045FE4:
    movs r3, #0x7E
_08045FE6:
    cmp r2, r3
    blt _08045FF2
    subs r2, #0x10
    cmp r2, r3
    bge _08045FFA
    b _08045FF8
_08045FF2:
    adds r2, #0x04
    cmp r2, r3
    ble _08045FFA
_08045FF8:
    adds r2, r3, #0x0
_08045FFA:
    strb r2, [r4, #0x00]
    mov r0, r8
    lsls r1, r0, #0x10
    b _08046114
_08046002:
    ldr r1, [r6, #0x00]
    ldr r0, [r7, #0x00]
    subs r0, r1, r0
    cmp r0, #0x00
    bge _08046010
    ldr r1, _08046074 @ =0x0000FFFF
    adds r0, r0, r1
_08046010:
    asrs r2, r0, #0x10
    ldr r1, [r6, #0x04]
    ldr r0, [r7, #0x04]
    subs r0, r1, r0
    cmp r0, #0x00
    bge _08046020
    ldr r3, _08046074 @ =0x0000FFFF
    adds r0, r0, r3
_08046020:
    asrs r1, r0, #0x10
    mov r10, r2
    cmp r2, #0x00
    bge _0804602E
    mov r4, r10
    negs r4, r4
    mov r10, r4
_0804602E:
    mov r9, r1
    cmp r1, #0x00
    bge _0804603A
    mov r0, r9
    negs r0, r0
    mov r9, r0
_0804603A:
    adds r4, r2, #0x0
    muls r4, r2
    adds r0, r1, #0x0
    muls r0, r1
    adds r4, r4, r0
    adds r0, r2, #0x0
    bl sub_802EC38
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    mov r8, r0
    ldr r0, _08046078 @ =0x0000018F
    cmp r4, r0
    ble _08046096
    movs r3, #0x74
    adds r1, r5, #0x0
    adds r1, #0x71
    ldrb r2, [r1, #0x00]
    ldr r4, _0804607C @ =0x03002E44
    ldr r0, _08046080 @ =0x000007DC
    adds r4, r4, r0
    ldrb r0, [r4, #0x00]
    adds r4, r1, #0x0
    cmp r0, #0x00
    beq _08046084
    cmp r0, #0x02
    beq _08046088
    b _0804608A
    .byte 0x00, 0x00
_08046074: .4byte 0x0000FFFF
_08046078: .4byte 0x0000018F
_0804607C: .4byte 0x03002E44
_08046080: .4byte 0x000007DC
_08046084:
    movs r3, #0x6C
    b _0804608A
_08046088:
    movs r3, #0x7E
_0804608A:
    cmp r2, r3
    blt _080460DE
    subs r2, #0x10
    cmp r2, r3
    bge _080460E6
    b _080460E4
_08046096:
    ldr r0, [r6, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x4C
    cmp r0, #0x00
    beq _080460A6
    movs r1, #0x3C
_080460A6:
    adds r3, r1, #0x0
    adds r1, r5, #0x0
    adds r1, #0x71
    ldrb r2, [r1, #0x00]
    ldr r4, _080460C4 @ =0x03002E44
    ldr r0, _080460C8 @ =0x000007DC
    adds r4, r4, r0
    ldrb r0, [r4, #0x00]
    adds r4, r1, #0x0
    cmp r0, #0x00
    beq _080460CC
    cmp r0, #0x02
    beq _080460D0
    b _080460D2
    .byte 0x00, 0x00
_080460C4: .4byte 0x03002E44
_080460C8: .4byte 0x000007DC
_080460CC:
    subs r3, #0x08
    b _080460D2
_080460D0:
    adds r3, #0x0A
_080460D2:
    cmp r2, r3
    blt _080460DE
    subs r2, #0x10
    cmp r2, r3
    bge _080460E6
    b _080460E4
_080460DE:
    adds r2, #0x04
    cmp r2, r3
    ble _080460E6
_080460E4:
    adds r2, r3, #0x0
_080460E6:
    strb r2, [r4, #0x00]
    adds r1, r5, #0x0
    adds r1, #0x7A
    ldrb r0, [r1, #0x00]
    cmp r0, #0x00
    beq _080460F8
    subs r0, #0x01
    strb r0, [r1, #0x00]
    b _08046110
_080460F8:
    ldr r0, [r6, #0x08]
    cmp r0, #0x00
    beq _08046104
    mov r3, r8
    lsls r1, r3, #0x10
    b _08046114
_08046104:
    mov r6, r10
    cmp r6, #0x0C
    bgt _08046110
    mov r0, r9
    cmp r0, #0x0C
    ble _0804611E
_08046110:
    mov r2, r8
    lsls r1, r2, #0x10
_08046114:
    asrs r1, r1, #0x10
    adds r0, r5, #0x0
    bl sub_8044D00
    b _08046122
_0804611E:
    mov r3, r8
    strh r3, [r7, #0x26]
_08046122:
    ldrb r0, [r4, #0x00]
    lsls r4, r0, #0x04
    adds r6, r4, #0x0
    ldr r0, _0804619C @ =0x080E645C
    mov r8, r0
    movs r1, #0x26
    ldsh r2, [r7, r1]
    adds r1, r2, #0x0
    cmp r2, #0x00
    bge _08046138
    adds r1, #0x3F
_08046138:
    asrs r3, r1, #0x06
    ldr r1, _080461A0 @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r3, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    add r1, r8
    ldr r0, [r1, #0x00]
    muls r0, r4
    cmp r0, #0x00
    bge _08046150
    adds r0, #0x7F
_08046150:
    asrs r0, r0, #0x07
    str r0, [r7, #0x28]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r1, _080461A0 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    negs r0, r0
    muls r0, r6
    cmp r0, #0x00
    bge _0804616E
    adds r0, #0x7F
_0804616E:
    asrs r0, r0, #0x07
    str r0, [r7, #0x2C]
    adds r2, r5, #0x0
    adds r2, #0x4C
    ldrh r1, [r2, #0x00]
    movs r0, #0x07
    ands r0, r1
    cmp r0, #0x00
    bne _080461E6
    adds r0, r5, #0x0
    adds r0, #0x70
    ldrb r3, [r0, #0x00]
    ldrh r1, [r5, #0x10]
    ldr r4, _080461A4 @ =0x00008402
    adds r6, r0, #0x0
    cmp r1, r4
    beq _080461C0
    cmp r1, r4
    bgt _080461AC
    ldr r0, _080461A8 @ =0x00008401
    cmp r1, r0
    beq _080461B8
    b _080461D8
_0804619C: .4byte 0x080E645C
_080461A0: .4byte 0x000003FF
_080461A4: .4byte 0x00008402
_080461A8: .4byte 0x00008401
_080461AC:
    ldr r0, _080461B4 @ =0x00008403
    cmp r1, r0
    beq _080461C8
    b _080461D8
_080461B4: .4byte 0x00008403
_080461B8:
    ldr r1, _080461BC @ =0x080EDAB4
    b _080461CA
_080461BC: .4byte 0x080EDAB4
_080461C0:
    ldr r1, _080461C4 @ =0x080EDACC
    b _080461CA
_080461C4: .4byte 0x080EDACC
_080461C8:
    ldr r1, _080461D4 @ =0x080EDAE4
_080461CA:
    lsls r0, r3, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    b _080461DA
    .byte 0x00, 0x00
_080461D4: .4byte 0x080EDAE4
_080461D8:
    movs r0, #0x00
_080461DA:
    str r0, [r5, #0x48]
    adds r3, #0x01
    cmp r3, #0x05
    ble _080461E4
    movs r3, #0x00
_080461E4:
    strb r3, [r6, #0x00]
_080461E6:
    adds r1, r2, #0x0
    ldrh r0, [r1, #0x00]
    adds r0, #0x01
    strh r0, [r1, #0x00]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x10
    bne _08046200
    ldr r3, [sp, #0x000]
    ldr r0, [r3, #0x48]
    ldr r1, _080462A8 @ =0xFFFEFFFF
    ands r0, r1
    str r0, [r3, #0x48]
_08046200:
    ldrh r1, [r2, #0x00]
    movs r0, #0x0F
    ands r0, r1
    cmp r0, #0x00
    bne _08046286
    ldr r0, _080462AC @ =0x03002E20
    ldr r4, _080462B0 @ =0x00000838
    adds r0, r0, r4
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08046286
    ldr r0, _080462B4 @ =0x03002E44
    adds r1, r7, #0x0
    bl sub_804C234
    adds r4, r0, #0x0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    ldr r0, _080462B4 @ =0x03002E44
    adds r1, r7, #0x0
    bl sub_804CD28
    adds r6, r0, #0x0
    lsls r6, r6, #0x10
    lsrs r6, r6, #0x10
    lsls r4, r4, #0x10
    asrs r4, r4, #0x10
    movs r0, #0x80
    bl m4aSongNumStart
    ldr r0, _080462B8 @ =0x08102414
    mov r8, r0
    ldr r5, _080462BC @ =0x08102498
    movs r1, #0x80
    lsls r1, r1, #0x03
    adds r5, r5, r1
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayVolumeControl
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r4, #0x0
    bl m4aMPlayPitchControl
_08046286:
    ldr r0, [r7, #0x00]
    ldr r1, [r7, #0x28]
    adds r0, r0, r1
    str r0, [r7, #0x00]
    ldr r0, [r7, #0x04]
    ldr r1, [r7, #0x2C]
    adds r0, r0, r1
    str r0, [r7, #0x04]
_08046296:
    add sp, #0x004
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_080462A8: .4byte 0xFFFEFFFF
_080462AC: .4byte 0x03002E20
_080462B0: .4byte 0x00000838
_080462B4: .4byte 0x03002E44
_080462B8: .4byte 0x08102414
_080462BC: .4byte 0x08102498
    thumb_func_start sub_80462C0
sub_80462C0:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    adds r4, r0, #0x0
    adds r7, r4, #0x0
    ldr r0, _08046370 @ =0x03002E20
    adds r0, #0x24
    mov r9, r0
    ldr r6, [r4, #0x54]
    adds r0, r4, #0x0
    mov r1, r9
    bl sub_8044AAC
    ldr r1, [r4, #0x00]
    cmp r1, #0x00
    bge _080462E8
    ldr r0, _08046374 @ =0x0000FFFF
    adds r1, r1, r0
_080462E8:
    asrs r1, r1, #0x10
    ldr r2, [r4, #0x04]
    cmp r2, #0x00
    bge _080462F4
    ldr r0, _08046374 @ =0x0000FFFF
    adds r2, r2, r0
_080462F4:
    asrs r2, r2, #0x10
    ldr r3, [r4, #0x08]
    cmp r3, #0x00
    bge _08046300
    ldr r0, _08046374 @ =0x0000FFFF
    adds r3, r3, r0
_08046300:
    asrs r3, r3, #0x10
    mov r0, r9
    bl sub_80328D4
    adds r1, r0, #0x0
    cmp r1, #0x7F
    beq _08046318
    movs r0, #0x7F
    ands r1, r0
    adds r0, r4, #0x0
    adds r0, #0x36
    strb r1, [r0, #0x00]
_08046318:
    ldrh r0, [r4, #0x38]
    cmp r0, #0x00
    beq _08046322
    subs r0, #0x01
    strh r0, [r4, #0x38]
_08046322:
    ldrh r0, [r4, #0x38]
    cmp r0, #0x00
    bne _0804632C
    str r0, [r4, #0x28]
    str r0, [r4, #0x2C]
_0804632C:
    movs r3, #0x00
    adds r1, r4, #0x0
    adds r1, #0x4E
    ldrb r2, [r1, #0x00]
    movs r0, #0x20
    ands r0, r2
    cmp r0, #0x00
    beq _0804634A
    movs r0, #0x00
    cmp r2, #0x26
    bne _08046344
    movs r0, #0x01
_08046344:
    cmp r0, #0x00
    bne _0804634A
    movs r3, #0x01
_0804634A:
    cmp r3, #0x00
    bne _0804635C
    movs r2, #0x00
    ldrb r0, [r1, #0x00]
    cmp r0, #0x26
    bne _08046358
    movs r2, #0x01
_08046358:
    cmp r2, #0x00
    beq _08046380
_0804635C:
    ldr r0, [r6, #0x48]
    ldr r1, _08046378 @ =0xFFFEFFFF
    ands r0, r1
    str r0, [r6, #0x48]
    ldr r0, _0804637C @ =0x0000070C
    add r0, r9
    adds r1, r4, #0x0
    bl sub_804F808
    b _08046564
_08046370: .4byte 0x03002E20
_08046374: .4byte 0x0000FFFF
_08046378: .4byte 0xFFFEFFFF
_0804637C: .4byte 0x0000070C
_08046380:
    ldrh r1, [r7, #0x34]
    movs r0, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r7, #0x34]
    adds r2, r4, #0x0
    adds r2, #0x4C
    ldrh r1, [r2, #0x00]
    movs r0, #0x07
    ands r0, r1
    mov r10, r2
    cmp r0, #0x00
    bne _080463FA
    adds r0, r4, #0x0
    adds r0, #0x70
    ldrb r2, [r0, #0x00]
    ldrh r1, [r4, #0x10]
    ldr r3, _080463B8 @ =0x00008402
    adds r5, r0, #0x0
    cmp r1, r3
    beq _080463D4
    cmp r1, r3
    bgt _080463C0
    ldr r0, _080463BC @ =0x00008401
    cmp r1, r0
    beq _080463CC
    b _080463EC
_080463B8: .4byte 0x00008402
_080463BC: .4byte 0x00008401
_080463C0:
    ldr r0, _080463C8 @ =0x00008403
    cmp r1, r0
    beq _080463DC
    b _080463EC
_080463C8: .4byte 0x00008403
_080463CC:
    ldr r1, _080463D0 @ =0x080EDAB4
    b _080463DE
_080463D0: .4byte 0x080EDAB4
_080463D4:
    ldr r1, _080463D8 @ =0x080EDACC
    b _080463DE
_080463D8: .4byte 0x080EDACC
_080463DC:
    ldr r1, _080463E8 @ =0x080EDAE4
_080463DE:
    lsls r0, r2, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    b _080463EE
    .byte 0x00, 0x00
_080463E8: .4byte 0x080EDAE4
_080463EC:
    movs r0, #0x00
_080463EE:
    str r0, [r4, #0x48]
    adds r2, #0x01
    cmp r2, #0x05
    ble _080463F8
    movs r2, #0x00
_080463F8:
    strb r2, [r5, #0x00]
_080463FA:
    mov r5, r10
    ldrh r0, [r5, #0x00]
    adds r0, #0x01
    strh r0, [r5, #0x00]
    adds r0, r7, #0x0
    adds r0, #0x36
    ldrb r0, [r0, #0x00]
    mov r8, r0
    ldr r0, [r7, #0x00]
    ldr r1, [r7, #0x28]
    adds r0, r0, r1
    str r0, [r7, #0x00]
    ldr r0, [r7, #0x04]
    ldr r1, [r7, #0x2C]
    adds r0, r0, r1
    str r0, [r7, #0x04]
    mov r0, r9
    movs r1, #0x00
    bl sub_804AED4
    str r0, [r4, #0x7C]
    adds r6, r0, #0x0
    movs r0, #0x00
    ldsh r1, [r5, r0]
    ldr r0, _0804649C @ =0x00000A8B
    cmp r1, r0
    ble _080464B0
    movs r0, #0x00
    strh r0, [r5, #0x00]
    ldr r0, _080464A0 @ =0x08045911
    str r0, [r4, #0x14]
    ldr r0, _080464A4 @ =0x00000814
    add r0, r9
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _0804644A
    b _08046564
_0804644A:
    mov r0, r9
    adds r1, r4, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #0x3F
    bgt _0804645C
    movs r2, #0x40
_0804645C:
    adds r6, r2, #0x0
    cmp r6, #0x00
    bne _08046464
    b _08046564
_08046464:
    movs r0, #0x7F
    bl m4aSongNumStart
    ldr r5, _080464A8 @ =0x08102414
    ldr r4, _080464AC @ =0x08102498
    movs r1, #0xFE
    lsls r1, r1, #0x02
    adds r4, r4, r1
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayVolumeControl
    b _08046564
    .byte 0x00, 0x00
_0804649C: .4byte 0x00000A8B
_080464A0: .4byte sub_8045910
_080464A4: .4byte 0x00000814
_080464A8: .4byte 0x08102414
_080464AC: .4byte 0x08102498
_080464B0:
    adds r0, r6, #0x0
    adds r0, #0x90
    ldrb r1, [r0, #0x00]
    movs r0, #0x7F
    ands r0, r1
    cmp r8, r0
    bne _08046564
    adds r0, r6, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r3, [r0, r1]
    cmp r3, #0x00
    bne _08046564
    ldr r1, [r6, #0x00]
    ldr r0, [r7, #0x00]
    subs r1, r1, r0
    cmp r1, #0x00
    bge _080464D8
    ldr r0, _08046574 @ =0x0000FFFF
    adds r1, r1, r0
_080464D8:
    asrs r2, r1, #0x10
    ldr r1, [r6, #0x04]
    ldr r0, [r7, #0x04]
    subs r0, r1, r0
    cmp r0, #0x00
    bge _080464E8
    ldr r1, _08046574 @ =0x0000FFFF
    adds r0, r0, r1
_080464E8:
    asrs r0, r0, #0x10
    adds r1, r2, #0x0
    cmp r1, #0x00
    bge _080464F2
    negs r1, r1
_080464F2:
    cmp r0, #0x00
    bge _080464F8
    negs r0, r0
_080464F8:
    cmp r1, #0x60
    bgt _08046564
    cmp r0, #0x60
    bgt _08046564
    mov r0, r10
    strh r3, [r0, #0x00]
    ldr r0, _08046578 @ =0x08045911
    str r0, [r4, #0x14]
    ldr r0, _0804657C @ =0x00000814
    add r0, r9
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08046564
    mov r0, r9
    adds r1, r4, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #0x3F
    bgt _0804652A
    movs r2, #0x40
_0804652A:
    adds r6, r2, #0x0
    cmp r6, #0x00
    beq _08046564
    movs r0, #0x7F
    bl m4aSongNumStart
    ldr r5, _08046580 @ =0x08102414
    ldr r4, _08046584 @ =0x08102498
    movs r1, #0xFE
    lsls r1, r1, #0x02
    adds r4, r4, r1
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayVolumeControl
_08046564:
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08046574: .4byte 0x0000FFFF
_08046578: .4byte sub_8045910
_0804657C: .4byte 0x00000814
_08046580: .4byte 0x08102414
_08046584: .4byte 0x08102498
    thumb_func_start sub_8046588
sub_8046588:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    adds r4, r0, #0x0
    adds r5, r4, #0x0
    ldr r0, [r4, #0x54]
    mov r9, r0
    ldr r0, _080465D8 @ =0x03002E20
    adds r0, #0x24
    mov r10, r0
    ldrh r0, [r4, #0x38]
    cmp r0, #0x00
    beq _080465AA
    subs r0, #0x01
    strh r0, [r4, #0x38]
_080465AA:
    adds r2, r4, #0x0
    adds r2, #0x4C
    ldrh r1, [r2, #0x00]
    movs r0, #0x07
    ands r0, r1
    adds r7, r2, #0x0
    cmp r0, #0x00
    bne _0804661E
    adds r0, r4, #0x0
    adds r0, #0x70
    ldrb r2, [r0, #0x00]
    ldrh r1, [r4, #0x10]
    ldr r3, _080465DC @ =0x00008402
    adds r6, r0, #0x0
    cmp r1, r3
    beq _080465F8
    cmp r1, r3
    bgt _080465E4
    ldr r0, _080465E0 @ =0x00008401
    cmp r1, r0
    beq _080465F0
    b _08046610
    .byte 0x00, 0x00
_080465D8: .4byte 0x03002E20
_080465DC: .4byte 0x00008402
_080465E0: .4byte 0x00008401
_080465E4:
    ldr r0, _080465EC @ =0x00008403
    cmp r1, r0
    beq _08046600
    b _08046610
_080465EC: .4byte 0x00008403
_080465F0:
    ldr r1, _080465F4 @ =0x080EDAB4
    b _08046602
_080465F4: .4byte 0x080EDAB4
_080465F8:
    ldr r1, _080465FC @ =0x080EDACC
    b _08046602
_080465FC: .4byte 0x080EDACC
_08046600:
    ldr r1, _0804660C @ =0x080EDAE4
_08046602:
    lsls r0, r2, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    b _08046612
    .byte 0x00, 0x00
_0804660C: .4byte 0x080EDAE4
_08046610:
    movs r0, #0x00
_08046612:
    str r0, [r4, #0x48]
    adds r2, #0x01
    cmp r2, #0x05
    ble _0804661C
    movs r2, #0x00
_0804661C:
    strb r2, [r6, #0x00]
_0804661E:
    ldrh r0, [r7, #0x00]
    adds r0, #0x01
    strh r0, [r7, #0x00]
    ldr r1, [r5, #0x00]
    ldr r2, [r5, #0x04]
    mov r0, r10
    movs r3, #0x00
    bl sub_8032C50
    cmp r0, #0x00
    beq _0804663C
    adds r1, r5, #0x0
    adds r1, #0x4E
    movs r0, #0x26
    b _08046664
_0804663C:
    ldr r1, [r5, #0x00]
    cmp r1, #0x00
    bge _08046646
    ldr r2, _08046684 @ =0x0000FFFF
    adds r1, r1, r2
_08046646:
    lsrs r1, r1, #0x10
    ldr r2, [r5, #0x04]
    cmp r2, #0x00
    bge _08046652
    ldr r0, _08046684 @ =0x0000FFFF
    adds r2, r2, r0
_08046652:
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    asrs r2, r2, #0x10
    mov r0, r10
    movs r3, #0x00
    bl sub_8032990
    adds r1, r5, #0x0
    adds r1, #0x4E
_08046664:
    strb r0, [r1, #0x00]
    movs r3, #0x00
    adds r1, r4, #0x0
    adds r1, #0x4E
    ldrb r2, [r1, #0x00]
    movs r0, #0x90
    ands r0, r2
    adds r6, r1, #0x0
    cmp r0, #0x80
    bne _0804667A
    movs r3, #0x01
_0804667A:
    cmp r3, #0x00
    beq _0804668C
    ldr r0, _08046688 @ =0x08047885
    b _0804674E
    .byte 0x00, 0x00
_08046684: .4byte 0x0000FFFF
_08046688: .4byte sub_8047884
_0804668C:
    movs r1, #0x00
    movs r0, #0x20
    ands r0, r2
    cmp r0, #0x00
    beq _080466A8
    movs r3, #0x00
    lsls r0, r2, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x26
    bne _080466A2
    movs r3, #0x01
_080466A2:
    cmp r3, #0x00
    bne _080466A8
    movs r1, #0x01
_080466A8:
    cmp r1, #0x00
    bne _080466C0
    movs r1, #0x00
    mov r8, r1
    ldrb r0, [r6, #0x00]
    cmp r0, #0x26
    bne _080466BA
    movs r2, #0x01
    mov r8, r2
_080466BA:
    mov r0, r8
    cmp r0, #0x00
    beq _080466E8
_080466C0:
    mov r1, r9
    ldr r0, [r1, #0x48]
    ldr r1, _080466DC @ =0xFFFEFFFF
    ands r0, r1
    mov r2, r9
    str r0, [r2, #0x48]
    ldr r1, _080466E0 @ =0x03002E44
    ldr r2, _080466E4 @ =0x0000070C
    adds r0, r1, r2
    adds r1, r4, #0x0
    bl sub_804F808
    b _08046750
    .byte 0x00, 0x00
_080466DC: .4byte 0xFFFEFFFF
_080466E0: .4byte 0x03002E44
_080466E4: .4byte 0x0000070C
_080466E8:
    ldrh r0, [r5, #0x34]
    movs r1, #0x01
    orrs r1, r0
    movs r0, #0x02
    orrs r1, r0
    strh r1, [r5, #0x34]
    ldr r1, [r4, #0x00]
    cmp r1, #0x00
    bge _080466FE
    ldr r0, _08046760 @ =0x0000FFFF
    adds r1, r1, r0
_080466FE:
    asrs r1, r1, #0x10
    ldr r2, [r4, #0x04]
    cmp r2, #0x00
    bge _0804670A
    ldr r0, _08046760 @ =0x0000FFFF
    adds r2, r2, r0
_0804670A:
    asrs r2, r2, #0x10
    ldr r3, [r4, #0x08]
    cmp r3, #0x00
    bge _08046716
    ldr r0, _08046760 @ =0x0000FFFF
    adds r3, r3, r0
_08046716:
    asrs r3, r3, #0x10
    mov r0, r10
    bl sub_80328D4
    adds r1, r0, #0x0
    cmp r1, #0x7F
    beq _0804672E
    movs r0, #0x7F
    ands r1, r0
    adds r0, r4, #0x0
    adds r0, #0x36
    strb r1, [r0, #0x00]
_0804672E:
    movs r1, #0x00
    ldsh r0, [r7, r1]
    cmp r0, #0x10
    bne _08046740
    mov r2, r9
    ldr r0, [r2, #0x48]
    ldr r1, _08046764 @ =0xFFFEFFFF
    ands r0, r1
    str r0, [r2, #0x48]
_08046740:
    movs r1, #0x00
    ldsh r0, [r7, r1]
    cmp r0, #0x60
    bne _08046750
    mov r2, r8
    strh r2, [r7, #0x00]
    ldr r0, _08046768 @ =0x080462C1
_0804674E:
    str r0, [r4, #0x14]
_08046750:
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08046760: .4byte 0x0000FFFF
_08046764: .4byte 0xFFFEFFFF
_08046768: .4byte sub_80462C0
    thumb_func_start sub_804676C
sub_804676C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x004
    adds r5, r0, #0x0
    mov r9, r5
    ldr r6, [r5, #0x54]
    movs r0, #0x08
    movs r1, #0x00
    mov r10, r1
    movs r2, #0x00
    mov r8, r2
    movs r4, #0x08
    strh r0, [r5, #0x38]
    ldr r0, [r6, #0x00]
    str r0, [r5, #0x00]
    ldr r2, [r6, #0x04]
    str r2, [r5, #0x04]
    mov r1, r8
    str r1, [r5, #0x08]
    strb r4, [r5, #0x0E]
    strb r4, [r5, #0x0D]
    strb r4, [r5, #0x0C]
    str r1, [r5, #0x28]
    str r1, [r5, #0x2C]
    str r1, [r5, #0x30]
    cmp r0, #0x00
    bge _080467AC
    ldr r1, _0804683C @ =0x0000FFFF
    adds r0, r0, r1
_080467AC:
    asrs r1, r0, #0x10
    cmp r2, #0x00
    bge _080467B6
    ldr r0, _0804683C @ =0x0000FFFF
    adds r2, r2, r0
_080467B6:
    asrs r2, r2, #0x10
    ldr r0, _08046840 @ =0x03002E44
    movs r3, #0x00
    bl sub_80328D4
    adds r1, r0, #0x0
    cmp r1, #0x7F
    beq _080467D0
    movs r0, #0x7F
    ands r1, r0
    adds r0, r5, #0x0
    adds r0, #0x36
    strb r1, [r0, #0x00]
_080467D0:
    movs r2, #0xBE
    lsls r2, r2, #0x01
    adds r1, r6, r2
    ldrb r0, [r1, #0x00]
    subs r0, #0x01
    strb r0, [r1, #0x00]
    adds r0, r5, #0x0
    adds r0, #0x4C
    mov r1, r8
    strh r1, [r0, #0x00]
    adds r0, #0x02
    mov r2, r10
    strb r2, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    adds r0, #0x28
    strb r4, [r0, #0x00]
    adds r2, r5, #0x0
    adds r2, #0x71
    mov r0, r10
    strb r0, [r2, #0x00]
    adds r1, r5, #0x0
    adds r1, #0x78
    movs r0, #0x30
    strb r0, [r1, #0x00]
    adds r0, r5, #0x0
    adds r0, #0x79
    mov r1, r10
    strb r1, [r0, #0x00]
    mov r0, r8
    str r0, [r5, #0x7C]
    adds r4, r5, #0x0
    adds r4, #0x80
    strb r1, [r4, #0x00]
    adds r1, r5, #0x0
    adds r1, #0x74
    movs r0, #0x01
    strb r0, [r1, #0x00]
    ldrh r3, [r5, #0x10]
    ldr r0, _08046844 @ =0x00008402
    adds r7, r2, #0x0
    str r1, [sp, #0x000]
    cmp r3, r0
    bne _0804682E
    b _08046974
_0804682E:
    cmp r3, r0
    bgt _08046848
    subs r0, #0x01
    cmp r3, r0
    beq _08046858
    b _08046DAE
    .byte 0x00, 0x00
_0804683C: .4byte 0x0000FFFF
_08046840: .4byte 0x03002E44
_08046844: .4byte 0x00008402
_08046848:
    ldr r0, _08046854 @ =0x00008403
    cmp r3, r0
    bne _08046850
    b _08046BA0
_08046850:
    b _08046DAE
    .byte 0x00, 0x00
_08046854: .4byte 0x00008403
_08046858:
    movs r1, #0x26
    ldsh r4, [r5, r1]
    adds r0, r6, #0x0
    bl sub_803D9B4
    adds r4, r4, r0
    strh r4, [r5, #0x26]
    adds r0, r6, #0x0
    adds r0, #0xBC
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bge _08046874
    ldr r2, _08046950 @ =0x0000FFFF
    adds r0, r0, r2
_08046874:
    asrs r1, r0, #0x10
    movs r2, #0xC0
    lsls r2, r2, #0x02
    adds r0, r1, r2
    cmp r0, #0x00
    bge _08046884
    adds r2, #0x0F
    adds r0, r1, r2
_08046884:
    asrs r0, r0, #0x04
    strb r0, [r7, #0x00]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x63
    bls _08046894
    movs r0, #0x64
    strb r0, [r7, #0x00]
_08046894:
    ldrb r0, [r7, #0x00]
    lsls r2, r0, #0x04
    ldr r6, _08046954 @ =0x080E645C
    movs r0, #0x26
    ldsh r3, [r5, r0]
    adds r1, r3, #0x0
    cmp r3, #0x00
    bge _080468A6
    adds r1, #0x3F
_080468A6:
    asrs r4, r1, #0x06
    ldr r1, _08046958 @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r4, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    adds r1, r1, r6
    ldr r0, [r1, #0x00]
    muls r0, r2
    cmp r0, #0x00
    bge _080468BE
    adds r0, #0x7F
_080468BE:
    asrs r0, r0, #0x07
    mov r1, r9
    str r0, [r1, #0x28]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r4
    ldr r1, _08046958 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r0, [r0, #0x00]
    negs r0, r0
    muls r0, r2
    cmp r0, #0x00
    bge _080468DE
    adds r0, #0x7F
_080468DE:
    asrs r0, r0, #0x07
    mov r2, r9
    str r0, [r2, #0x2C]
    movs r0, #0x07
    ldr r1, [sp, #0x000]
    strb r0, [r1, #0x00]
    ldr r0, _0804695C @ =0x08044BA1
    str r0, [r5, #0x14]
    ldr r0, _08046960 @ =0x080445CD
    str r0, [r5, #0x18]
    ldr r2, _08046964 @ =0x03002E44
    ldr r1, _08046968 @ =0x00000814
    adds r0, r2, r1
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _08046906
    b _08046DAE
_08046906:
    adds r0, r2, #0x0
    adds r1, r5, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #0x3F
    bgt _08046918
    movs r2, #0x40
_08046918:
    adds r6, r2, #0x0
    cmp r6, #0x00
    bne _08046920
    b _08046DAE
_08046920:
    movs r0, #0x7B
    bl m4aSongNumStart
    ldr r5, _0804696C @ =0x08102414
    ldr r4, _08046970 @ =0x08102498
    movs r2, #0xF6
    lsls r2, r2, #0x02
    adds r4, r4, r2
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    b _08046C8E
_08046950: .4byte 0x0000FFFF
_08046954: .4byte 0x080E645C
_08046958: .4byte 0x000003FF
_0804695C: .4byte sub_8044BA0
_08046960: .4byte sub_80445CC
_08046964: .4byte 0x03002E44
_08046968: .4byte 0x00000814
_0804696C: .4byte 0x08102414
_08046970: .4byte 0x08102498
_08046974:
    movs r0, #0x26
    ldsh r1, [r5, r0]
    ldr r0, _08046A24 @ =0xFFFF8000
    cmp r1, r0
    bne _08046A4C
    adds r0, r6, #0x0
    bl sub_803D9B4
    movs r1, #0x80
    lsls r1, r1, #0x08
    adds r0, r0, r1
    ldr r6, _08046A28 @ =0x080E645C
    lsls r0, r0, #0x10
    asrs r2, r0, #0x10
    adds r1, r2, #0x0
    cmp r2, #0x00
    bge _08046998
    adds r1, #0x3F
_08046998:
    asrs r3, r1, #0x06
    ldr r1, _08046A2C @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r3, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    adds r1, r1, r6
    ldr r0, [r1, #0x00]
    lsls r0, r0, #0x0B
    cmp r0, #0x00
    bge _080469B0
    adds r0, #0x7F
_080469B0:
    asrs r4, r0, #0x07
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r1, _08046A2C @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r0, [r0, #0x00]
    negs r0, r0
    lsls r0, r0, #0x0B
    cmp r0, #0x00
    bge _080469CC
    adds r0, #0x7F
_080469CC:
    asrs r1, r0, #0x07
    ldr r0, [r5, #0x00]
    adds r0, r0, r4
    str r0, [r5, #0x00]
    ldr r0, [r5, #0x04]
    adds r0, r0, r1
    str r0, [r5, #0x04]
    ldr r0, _08046A30 @ =0x08045C19
    str r0, [r5, #0x14]
    ldr r0, _08046A34 @ =0x080445CD
    str r0, [r5, #0x18]
    ldr r2, _08046A38 @ =0x03002E20
    ldr r1, _08046A3C @ =0x00000838
    adds r0, r2, r1
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _080469F6
    b _08046DAE
_080469F6:
    ldr r0, _08046A40 @ =0x03002E44
    adds r1, r5, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #0x3F
    bgt _08046A08
    movs r2, #0x40
_08046A08:
    adds r6, r2, #0x0
    cmp r6, #0x00
    bne _08046A10
    b _08046DAE
_08046A10:
    movs r0, #0x86
    bl m4aSongNumStart
    ldr r5, _08046A44 @ =0x08102414
    ldr r4, _08046A48 @ =0x08102498
    movs r2, #0x86
    lsls r2, r2, #0x03
    adds r4, r4, r2
    b _08046C70
    .byte 0x00, 0x00
_08046A24: .4byte 0xFFFF8000
_08046A28: .4byte 0x080E645C
_08046A2C: .4byte 0x000003FF
_08046A30: .4byte sub_8045C18
_08046A34: .4byte sub_80445CC
_08046A38: .4byte 0x03002E20
_08046A3C: .4byte 0x00000838
_08046A40: .4byte 0x03002E44
_08046A44: .4byte 0x08102414
_08046A48: .4byte 0x08102498
_08046A4C:
    ldr r1, _08046A64 @ =0x03002E20
    ldr r2, _08046A68 @ =0x000007FE
    adds r0, r1, r2
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x04
    ands r0, r1
    cmp r0, #0x00
    beq _08046A6C
    mov r0, r8
    b _08046A8A
    .byte 0x00, 0x00
_08046A64: .4byte 0x03002E20
_08046A68: .4byte 0x000007FE
_08046A6C:
    adds r0, r6, #0x0
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r0, r0, #0x01
    adds r2, r0, #0x0
    cmp r2, #0x00
    bne _08046A7E
    str r2, [r5, #0x7C]
    b _08046A8C
_08046A7E:
    subs r1, r0, #0x1
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    ldr r0, _08046B7C @ =0x03002E44
    bl sub_804AED4
_08046A8A:
    str r0, [r5, #0x7C]
_08046A8C:
    adds r0, r6, #0x0
    bl sub_803D9B4
    mov r1, r9
    strh r0, [r1, #0x26]
    adds r0, r6, #0x0
    adds r0, #0xBC
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bge _08046AA4
    ldr r2, _08046B80 @ =0x0000FFFF
    adds r0, r0, r2
_08046AA4:
    asrs r1, r0, #0x10
    movs r2, #0xC0
    lsls r2, r2, #0x02
    adds r0, r1, r2
    cmp r0, #0x00
    bge _08046AB4
    adds r2, #0x0F
    adds r0, r1, r2
_08046AB4:
    asrs r0, r0, #0x04
    strb r0, [r7, #0x00]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x73
    bls _08046AC4
    movs r0, #0x74
    strb r0, [r7, #0x00]
_08046AC4:
    ldrb r0, [r7, #0x00]
    lsls r2, r0, #0x04
    ldr r6, _08046B84 @ =0x080E645C
    mov r0, r9
    movs r1, #0x26
    ldsh r3, [r0, r1]
    adds r1, r3, #0x0
    cmp r3, #0x00
    bge _08046AD8
    adds r1, #0x3F
_08046AD8:
    asrs r4, r1, #0x06
    ldr r1, _08046B88 @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r4, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    adds r1, r1, r6
    ldr r0, [r1, #0x00]
    muls r0, r2
    cmp r0, #0x00
    bge _08046AF0
    adds r0, #0x7F
_08046AF0:
    asrs r0, r0, #0x07
    mov r1, r9
    str r0, [r1, #0x28]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r4
    ldr r1, _08046B88 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r0, [r0, #0x00]
    negs r0, r0
    muls r0, r2
    cmp r0, #0x00
    bge _08046B10
    adds r0, #0x7F
_08046B10:
    asrs r0, r0, #0x07
    mov r2, r9
    str r0, [r2, #0x2C]
    ldr r0, _08046B8C @ =0x08044D4D
    str r0, [r5, #0x14]
    ldr r0, _08046B90 @ =0x080445CD
    str r0, [r5, #0x18]
    ldr r1, _08046B7C @ =0x03002E44
    ldr r2, _08046B94 @ =0x00000814
    adds r0, r1, r2
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _08046B32
    b _08046DAE
_08046B32:
    ldr r0, _08046B7C @ =0x03002E44
    adds r1, r5, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #0x3F
    bgt _08046B44
    movs r2, #0x40
_08046B44:
    adds r6, r2, #0x0
    cmp r6, #0x00
    bne _08046B4C
    b _08046DAE
_08046B4C:
    movs r0, #0x7B
    bl m4aSongNumStart
    ldr r5, _08046B98 @ =0x08102414
    ldr r4, _08046B9C @ =0x08102498
    movs r0, #0xF6
    lsls r0, r0, #0x02
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    b _08046C8E
_08046B7C: .4byte 0x03002E44
_08046B80: .4byte 0x0000FFFF
_08046B84: .4byte 0x080E645C
_08046B88: .4byte 0x000003FF
_08046B8C: .4byte sub_8044D4C
_08046B90: .4byte sub_80445CC
_08046B94: .4byte 0x00000814
_08046B98: .4byte 0x08102414
_08046B9C: .4byte 0x08102498
_08046BA0:
    adds r0, r6, #0x0
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r0, r0, #0x01
    cmp r0, #0x00
    bne _08046BB2
    mov r1, r10
    strb r1, [r4, #0x00]
    b _08046BBE
_08046BB2:
    mov r2, r10
    strb r2, [r4, #0x00]
    ldr r0, _08046C98 @ =0x03002E44
    movs r1, #0x00
    bl sub_804AED4
_08046BBE:
    str r0, [r5, #0x7C]
    mov r0, r9
    movs r2, #0x26
    ldsh r1, [r0, r2]
    ldr r0, _08046C9C @ =0xFFFF8000
    cmp r1, r0
    bne _08046CBC
    adds r0, r6, #0x0
    bl sub_803D9B4
    movs r1, #0x80
    lsls r1, r1, #0x08
    adds r0, r0, r1
    ldr r6, _08046CA0 @ =0x080E645C
    lsls r0, r0, #0x10
    asrs r2, r0, #0x10
    adds r1, r2, #0x0
    cmp r2, #0x00
    bge _08046BE6
    adds r1, #0x3F
_08046BE6:
    asrs r3, r1, #0x06
    ldr r1, _08046CA4 @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r3, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    adds r1, r1, r6
    ldr r0, [r1, #0x00]
    lsls r0, r0, #0x0B
    cmp r0, #0x00
    bge _08046BFE
    adds r0, #0x7F
_08046BFE:
    asrs r4, r0, #0x07
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r1, _08046CA4 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r0, [r0, #0x00]
    negs r0, r0
    lsls r0, r0, #0x0B
    cmp r0, #0x00
    bge _08046C1A
    adds r0, #0x7F
_08046C1A:
    asrs r1, r0, #0x07
    mov r2, r9
    ldr r0, [r2, #0x00]
    adds r0, r0, r4
    str r0, [r2, #0x00]
    ldr r0, [r2, #0x04]
    adds r0, r0, r1
    str r0, [r2, #0x04]
    ldr r0, _08046CA8 @ =0x08046589
    str r0, [r5, #0x14]
    ldr r0, _08046CAC @ =0x08044815
    str r0, [r5, #0x18]
    ldr r1, _08046C98 @ =0x03002E44
    ldr r2, _08046CB0 @ =0x00000814
    adds r0, r1, r2
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _08046C46
    b _08046DAE
_08046C46:
    ldr r0, _08046C98 @ =0x03002E44
    adds r1, r5, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #0x3F
    bgt _08046C58
    movs r2, #0x40
_08046C58:
    adds r6, r2, #0x0
    cmp r6, #0x00
    bne _08046C60
    b _08046DAE
_08046C60:
    movs r0, #0x86
    bl m4aSongNumStart
    ldr r5, _08046CB4 @ =0x08102414
    ldr r4, _08046CB8 @ =0x08102498
    movs r0, #0x86
    lsls r0, r0, #0x03
    adds r4, r4, r0
_08046C70:
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x03
_08046C8E:
    adds r2, r6, #0x0
    bl m4aMPlayVolumeControl
    b _08046DAE
    .byte 0x00, 0x00
_08046C98: .4byte 0x03002E44
_08046C9C: .4byte 0xFFFF8000
_08046CA0: .4byte 0x080E645C
_08046CA4: .4byte 0x000003FF
_08046CA8: .4byte sub_8046588
_08046CAC: .4byte sub_8044814
_08046CB0: .4byte 0x00000814
_08046CB4: .4byte 0x08102414
_08046CB8: .4byte 0x08102498
_08046CBC:
    adds r0, r6, #0x0
    bl sub_803D9B4
    mov r1, r9
    strh r0, [r1, #0x26]
    adds r0, r6, #0x0
    adds r0, #0xBC
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bge _08046CD4
    ldr r2, _08046DC0 @ =0x0000FFFF
    adds r0, r0, r2
_08046CD4:
    asrs r1, r0, #0x10
    movs r2, #0xC0
    lsls r2, r2, #0x02
    adds r0, r1, r2
    cmp r0, #0x00
    bge _08046CE4
    adds r2, #0x0F
    adds r0, r1, r2
_08046CE4:
    asrs r0, r0, #0x04
    adds r1, r7, #0x0
    strb r0, [r1, #0x00]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x73
    bls _08046CF6
    movs r0, #0x74
    strb r0, [r1, #0x00]
_08046CF6:
    ldrb r0, [r7, #0x00]
    lsls r2, r0, #0x04
    ldr r6, _08046DC4 @ =0x080E645C
    mov r0, r9
    movs r1, #0x26
    ldsh r3, [r0, r1]
    adds r1, r3, #0x0
    cmp r3, #0x00
    bge _08046D0A
    adds r1, #0x3F
_08046D0A:
    asrs r4, r1, #0x06
    ldr r1, _08046DC8 @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r4, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    adds r1, r1, r6
    ldr r0, [r1, #0x00]
    muls r0, r2
    cmp r0, #0x00
    bge _08046D22
    adds r0, #0x7F
_08046D22:
    asrs r0, r0, #0x07
    mov r1, r9
    str r0, [r1, #0x28]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r4
    ldr r1, _08046DC8 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r0, [r0, #0x00]
    negs r0, r0
    muls r0, r2
    cmp r0, #0x00
    bge _08046D42
    adds r0, #0x7F
_08046D42:
    asrs r0, r0, #0x07
    mov r2, r9
    str r0, [r2, #0x2C]
    ldr r0, _08046DCC @ =0x08045DFD
    str r0, [r5, #0x14]
    ldr r0, _08046DD0 @ =0x08044815
    str r0, [r5, #0x18]
    ldr r1, _08046DD4 @ =0x03002E44
    ldr r2, _08046DD8 @ =0x00000814
    adds r0, r1, r2
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08046DAE
    ldr r0, _08046DD4 @ =0x03002E44
    adds r1, r5, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #0x3F
    bgt _08046D74
    movs r2, #0x40
_08046D74:
    adds r6, r2, #0x0
    cmp r6, #0x00
    beq _08046DAE
    movs r0, #0x7B
    bl m4aSongNumStart
    ldr r5, _08046DDC @ =0x08102414
    ldr r4, _08046DE0 @ =0x08102498
    movs r0, #0xF6
    lsls r0, r0, #0x02
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayVolumeControl
_08046DAE:
    add sp, #0x004
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08046DC0: .4byte 0x0000FFFF
_08046DC4: .4byte 0x080E645C
_08046DC8: .4byte 0x000003FF
_08046DCC: .4byte sub_8045DFC
_08046DD0: .4byte sub_8044814
_08046DD4: .4byte 0x03002E44
_08046DD8: .4byte 0x00000814
_08046DDC: .4byte 0x08102414
_08046DE0: .4byte 0x08102498
    thumb_func_start sub_8046DE4
sub_8046DE4:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    adds r5, r0, #0x0
    ldr r6, [r5, #0x54]
    mov r12, r5
    adds r7, r5, #0x0
    adds r7, #0x4C
    movs r0, #0x00
    ldsh r1, [r7, r0]
    lsls r0, r1, #0x02
    adds r0, r0, r1
    movs r1, #0x0E
    mov r9, r1
    lsls r0, r0, #0x18
    asrs r0, r0, #0x10
    strh r0, [r5, #0x26]
    ldr r4, [r6, #0x00]
    ldr r1, _08046E84 @ =0x080E645C
    mov r8, r1
    adds r2, r0, #0x0
    cmp r2, #0x00
    bge _08046E16
    adds r0, #0x3F
_08046E16:
    asrs r3, r0, #0x06
    ldr r0, _08046E88 @ =0x000003FF
    adds r1, r0, #0x0
    adds r0, r3, #0x0
    ands r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    mov r1, r9
    muls r1, r0
    adds r0, r1, #0x0
    adds r0, r4, r0
    str r0, [r5, #0x00]
    ldr r4, [r6, #0x04]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r1, _08046E88 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    mov r1, r9
    muls r1, r0
    adds r0, r1, #0x0
    subs r0, r4, r0
    str r0, [r5, #0x04]
    ldr r0, [r6, #0x08]
    str r0, [r5, #0x08]
    adds r0, r6, #0x0
    adds r0, #0x36
    ldrb r0, [r0, #0x00]
    adds r1, r5, #0x0
    adds r1, #0x36
    strb r0, [r1, #0x00]
    ldrh r1, [r7, #0x00]
    movs r0, #0x07
    ands r0, r1
    cmp r0, #0x00
    bne _08046ECE
    adds r0, r5, #0x0
    adds r0, #0x70
    ldrb r2, [r0, #0x00]
    ldrh r1, [r5, #0x10]
    ldr r3, _08046E8C @ =0x00008402
    adds r4, r0, #0x0
    cmp r1, r3
    beq _08046EA8
    cmp r1, r3
    bgt _08046E94
    ldr r0, _08046E90 @ =0x00008401
    cmp r1, r0
    beq _08046EA0
    b _08046EC0
    .byte 0x00, 0x00
_08046E84: .4byte 0x080E645C
_08046E88: .4byte 0x000003FF
_08046E8C: .4byte 0x00008402
_08046E90: .4byte 0x00008401
_08046E94:
    ldr r0, _08046E9C @ =0x00008403
    cmp r1, r0
    beq _08046EB0
    b _08046EC0
_08046E9C: .4byte 0x00008403
_08046EA0:
    ldr r1, _08046EA4 @ =0x080EDAB4
    b _08046EB2
_08046EA4: .4byte 0x080EDAB4
_08046EA8:
    ldr r1, _08046EAC @ =0x080EDACC
    b _08046EB2
_08046EAC: .4byte 0x080EDACC
_08046EB0:
    ldr r1, _08046EBC @ =0x080EDAE4
_08046EB2:
    lsls r0, r2, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    b _08046EC2
    .byte 0x00, 0x00
_08046EBC: .4byte 0x080EDAE4
_08046EC0:
    movs r0, #0x00
_08046EC2:
    str r0, [r5, #0x48]
    adds r2, #0x01
    cmp r2, #0x05
    ble _08046ECC
    movs r2, #0x00
_08046ECC:
    strb r2, [r4, #0x00]
_08046ECE:
    adds r1, r5, #0x0
    adds r1, #0x4C
    ldrh r0, [r1, #0x00]
    adds r0, #0x01
    strh r0, [r1, #0x00]
    adds r0, r6, #0x0
    adds r0, #0x78
    ldrb r1, [r0, #0x00]
    adds r2, r0, #0x0
    cmp r1, #0x03
    bne _08046EEA
    ldr r0, [r6, #0x08]
    cmp r0, #0x00
    beq _08046F0A
_08046EEA:
    ldrb r0, [r2, #0x00]
    cmp r0, #0x04
    bne _08046EF6
    ldr r0, [r6, #0x08]
    cmp r0, #0x00
    beq _08046F0A
_08046EF6:
    ldrb r0, [r2, #0x00]
    cmp r0, #0x02
    beq _08046F0A
    mov r1, r12
    ldrh r0, [r1, #0x34]
    movs r1, #0x01
    orrs r1, r0
    movs r0, #0x02
    orrs r1, r0
    b _08046F16
_08046F0A:
    mov r1, r12
    ldrh r0, [r1, #0x34]
    ldr r1, _08046F54 @ =0x0000FFFE
    ands r1, r0
    ldr r0, _08046F58 @ =0x0000FFFD
    ands r1, r0
_08046F16:
    mov r0, r12
    strh r1, [r0, #0x34]
    adds r0, r6, #0x0
    adds r0, #0x96
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0x00
    beq _08046F48
    ldr r4, [r6, #0x48]
    movs r0, #0x84
    lsls r0, r0, #0x09
    ands r4, r0
    cmp r4, #0x00
    bne _08046F48
    strh r4, [r5, #0x26]
    adds r0, r5, #0x0
    bl sub_804676C
    ldr r0, [r6, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x09
    orrs r0, r1
    str r0, [r6, #0x48]
    str r4, [r5, #0x6C]
_08046F48:
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08046F54: .4byte 0x0000FFFE
_08046F58: .4byte 0x0000FFFD
    thumb_func_start sub_8046F5C
sub_8046F5C:
    push {r4, r5, r6, lr}
    mov r12, r0
    ldr r6, [r0, #0x54]
    ldr r4, _08046FE0 @ =0x03002E20
    movs r5, #0x00
    movs r3, #0x0E
    strh r5, [r0, #0x26]
    ldr r1, [r6, #0x00]
    ldr r2, _08046FE4 @ =0x080E645C
    ldr r0, [r2, #0x00]
    muls r0, r3
    adds r1, r1, r0
    mov r0, r12
    str r1, [r0, #0x00]
    ldr r1, [r6, #0x04]
    movs r0, #0x80
    lsls r0, r0, #0x03
    adds r2, r2, r0
    ldr r0, [r2, #0x00]
    muls r0, r3
    subs r1, r1, r0
    mov r0, r12
    str r1, [r0, #0x04]
    ldr r0, [r6, #0x08]
    mov r1, r12
    str r0, [r1, #0x08]
    adds r0, r6, #0x0
    adds r0, #0x36
    ldrb r0, [r0, #0x00]
    adds r1, #0x36
    strb r0, [r1, #0x00]
    mov r1, r12
    ldrh r0, [r1, #0x34]
    movs r1, #0x01
    movs r2, #0x00
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    mov r1, r12
    strh r0, [r1, #0x34]
    ldr r0, _08046FE8 @ =0x080446FD
    str r0, [r1, #0x18]
    mov r0, r12
    adds r0, #0x4C
    strh r5, [r0, #0x00]
    adds r0, #0x25
    strb r2, [r0, #0x00]
    ldr r0, _08046FEC @ =0x08046DE5
    str r0, [r1, #0x14]
    ldr r0, _08046FF0 @ =0x00000838
    adds r4, r4, r0
    ldr r4, [r4, #0x00]
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08046FD8
    cmp r6, r4
    bne _08046FD8
    movs r0, #0x7A
    bl m4aSongNumStart
_08046FD8:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08046FE0: .4byte 0x03002E20
_08046FE4: .4byte 0x080E645C
_08046FE8: .4byte sub_80446FC
_08046FEC: .4byte sub_8046DE4
_08046FF0: .4byte 0x00000838
    thumb_func_start sub_8046FF4
sub_8046FF4:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r5, r0, #0x0
    ldr r4, [r5, #0x54]
    mov r8, r5
    ldr r0, _0804701C @ =0x080EC280
    adds r1, r4, #0x0
    adds r1, #0x7E
    ldrb r1, [r1, #0x00]
    lsls r1, r1, #0x02
    adds r1, r1, r0
    ldr r0, [r1, #0x00]
    cmp r0, #0x00
    bne _08047020
    adds r0, r4, #0x0
    bl sub_803D978
    b _0804702E
    .byte 0x00, 0x00
_0804701C: .4byte 0x080EC280
_08047020:
    adds r1, r4, #0x0
    adds r1, #0x56
    movs r2, #0x80
    lsls r2, r2, #0x08
    adds r0, r2, #0x0
    ldrh r1, [r1, #0x00]
    adds r0, r0, r1
_0804702E:
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    strh r0, [r5, #0x26]
    ldr r6, [r4, #0x00]
    ldr r7, _080470AC @ =0x080E645C
    adds r2, r0, #0x0
    adds r1, r2, #0x0
    cmp r2, #0x00
    bge _08047042
    adds r1, #0x3F
_08047042:
    asrs r3, r1, #0x06
    ldr r1, _080470B0 @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r3, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    adds r1, r1, r7
    ldr r0, [r1, #0x00]
    lsls r0, r0, #0x04
    adds r0, r6, r0
    str r0, [r5, #0x00]
    ldr r6, [r4, #0x04]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r1, _080470B0 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r7
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x04
    subs r0, r6, r0
    str r0, [r5, #0x04]
    ldr r0, [r4, #0x08]
    str r0, [r5, #0x08]
    adds r0, r4, #0x0
    adds r0, #0x36
    ldrb r0, [r0, #0x00]
    adds r1, r5, #0x0
    adds r1, #0x36
    strb r0, [r1, #0x00]
    adds r2, r5, #0x0
    adds r2, #0x4C
    ldrh r1, [r2, #0x00]
    movs r0, #0x07
    ands r0, r1
    adds r6, r2, #0x0
    cmp r0, #0x00
    bne _080470F6
    adds r0, r5, #0x0
    adds r0, #0x70
    ldrb r3, [r0, #0x00]
    ldrh r1, [r5, #0x10]
    ldr r2, _080470B4 @ =0x00008402
    adds r7, r0, #0x0
    cmp r1, r2
    beq _080470D0
    cmp r1, r2
    bgt _080470BC
    ldr r0, _080470B8 @ =0x00008401
    cmp r1, r0
    beq _080470C8
    b _080470E8
_080470AC: .4byte 0x080E645C
_080470B0: .4byte 0x000003FF
_080470B4: .4byte 0x00008402
_080470B8: .4byte 0x00008401
_080470BC:
    ldr r0, _080470C4 @ =0x00008403
    cmp r1, r0
    beq _080470D8
    b _080470E8
_080470C4: .4byte 0x00008403
_080470C8:
    ldr r1, _080470CC @ =0x080EDAB4
    b _080470DA
_080470CC: .4byte 0x080EDAB4
_080470D0:
    ldr r1, _080470D4 @ =0x080EDACC
    b _080470DA
_080470D4: .4byte 0x080EDACC
_080470D8:
    ldr r1, _080470E4 @ =0x080EDAE4
_080470DA:
    lsls r0, r3, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    b _080470EA
    .byte 0x00, 0x00
_080470E4: .4byte 0x080EDAE4
_080470E8:
    movs r0, #0x00
_080470EA:
    str r0, [r5, #0x48]
    adds r3, #0x01
    cmp r3, #0x05
    ble _080470F4
    movs r3, #0x00
_080470F4:
    strb r3, [r7, #0x00]
_080470F6:
    ldrh r0, [r6, #0x00]
    adds r0, #0x01
    strh r0, [r6, #0x00]
    adds r0, r4, #0x0
    adds r0, #0x78
    ldrb r1, [r0, #0x00]
    adds r3, r0, #0x0
    cmp r1, #0x03
    bne _0804710E
    ldr r0, [r4, #0x08]
    cmp r0, #0x00
    beq _0804712E
_0804710E:
    ldrb r0, [r3, #0x00]
    cmp r0, #0x04
    bne _0804711A
    ldr r0, [r4, #0x08]
    cmp r0, #0x00
    beq _0804712E
_0804711A:
    ldrb r0, [r3, #0x00]
    cmp r0, #0x02
    beq _0804712E
    mov r2, r8
    ldrh r0, [r2, #0x34]
    movs r1, #0x01
    orrs r1, r0
    movs r0, #0x02
    orrs r1, r0
    b _0804713C
_0804712E:
    mov r1, r8
    ldrh r0, [r1, #0x34]
    ldr r1, _08047184 @ =0x0000FFFE
    ands r1, r0
    ldr r0, _08047188 @ =0x0000FFFD
    ands r1, r0
    mov r2, r8
_0804713C:
    strh r1, [r2, #0x34]
    ldr r0, [r4, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _08047160
    movs r1, #0x00
    ldsh r0, [r6, r1]
    cmp r0, #0xF3
    ble _08047160
    movs r0, #0xC8
    lsls r0, r0, #0x01
    adds r2, r4, r0
    ldrb r1, [r2, #0x00]
    movs r0, #0xFE
    ands r0, r1
    strb r0, [r2, #0x00]
_08047160:
    adds r0, r4, #0x0
    adds r0, #0x96
    ldrh r2, [r0, #0x00]
    movs r0, #0x40
    ands r0, r2
    cmp r0, #0x00
    bne _080471C8
    ldr r0, [r4, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0804718C
    movs r0, #0x80
    lsls r0, r0, #0x03
    ands r0, r2
    b _080471A0
    .byte 0x00, 0x00
_08047184: .4byte 0x0000FFFE
_08047188: .4byte 0x0000FFFD
_0804718C:
    movs r1, #0xC8
    lsls r1, r1, #0x01
    adds r0, r4, r1
    ldrb r1, [r0, #0x00]
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    bne _080471C8
    movs r0, #0x02
    ands r0, r1
_080471A0:
    movs r1, #0x00
    cmp r0, #0x00
    beq _080471AA
    ldr r2, _080471D4 @ =0xFFFF8000
    adds r1, r2, #0x0
_080471AA:
    mov r0, r8
    strh r1, [r0, #0x26]
    adds r0, r5, #0x0
    bl sub_804676C
    movs r2, #0xC6
    lsls r2, r2, #0x01
    adds r1, r4, r2
    movs r0, #0x00
    strh r0, [r1, #0x00]
    ldr r0, [r4, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x09
    orrs r0, r1
    str r0, [r4, #0x48]
_080471C8:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_080471D4: .4byte 0xFFFF8000
    thumb_func_start sub_80471D8
sub_80471D8:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    ldr r5, [r4, #0x54]
    adds r0, r5, #0x0
    bl sub_803D978
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    movs r1, #0x00
    mov r12, r1
    strh r0, [r4, #0x26]
    ldr r6, [r5, #0x00]
    ldr r7, _08047270 @ =0x080E645C
    adds r2, r0, #0x0
    adds r1, r2, #0x0
    cmp r2, #0x00
    bge _080471FC
    adds r1, #0x3F
_080471FC:
    asrs r3, r1, #0x06
    ldr r1, _08047274 @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r3, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    adds r1, r1, r7
    ldr r0, [r1, #0x00]
    lsls r0, r0, #0x04
    adds r0, r6, r0
    str r0, [r4, #0x00]
    ldr r6, [r5, #0x04]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r1, _08047274 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r7
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x04
    subs r0, r6, r0
    str r0, [r4, #0x04]
    ldr r0, [r5, #0x08]
    str r0, [r4, #0x08]
    adds r0, r5, #0x0
    adds r0, #0x36
    ldrb r0, [r0, #0x00]
    adds r1, r4, #0x0
    adds r1, #0x36
    strb r0, [r1, #0x00]
    ldrh r0, [r4, #0x34]
    movs r1, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r4, #0x34]
    ldr r0, _08047278 @ =0x080446FD
    str r0, [r4, #0x18]
    adds r1, r4, #0x0
    adds r1, #0x4C
    movs r0, #0x00
    strh r0, [r1, #0x00]
    adds r0, r4, #0x0
    adds r0, #0x71
    mov r1, r12
    strb r1, [r0, #0x00]
    ldrh r1, [r4, #0x10]
    ldr r0, _0804727C @ =0x00008402
    cmp r1, r0
    beq _08047298
    cmp r1, r0
    bgt _08047280
    subs r0, #0x01
    cmp r1, r0
    beq _0804728C
    b _080472B2
    .byte 0x00, 0x00
_08047270: .4byte 0x080E645C
_08047274: .4byte 0x000003FF
_08047278: .4byte sub_80446FC
_0804727C: .4byte 0x00008402
_08047280:
    ldr r0, _08047288 @ =0x00008403
    cmp r1, r0
    beq _080472A8
    b _080472B2
_08047288: .4byte 0x00008403
_0804728C:
    movs r0, #0xC6
    lsls r0, r0, #0x01
    adds r1, r5, r0
    movs r0, #0x80
    lsls r0, r0, #0x05
    b _080472B0
_08047298:
    movs r0, #0xC6
    lsls r0, r0, #0x01
    adds r1, r5, r0
    ldr r0, _080472A4 @ =0x00001002
    b _080472B0
    .byte 0x00, 0x00
_080472A4: .4byte 0x00001002
_080472A8:
    movs r0, #0xC6
    lsls r0, r0, #0x01
    adds r1, r5, r0
    ldr r0, _080472BC @ =0x00001004
_080472B0:
    strh r0, [r1, #0x00]
_080472B2:
    ldr r0, _080472C0 @ =0x08046FF5
    str r0, [r4, #0x14]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_080472BC: .4byte 0x00001004
_080472C0: .4byte sub_8046FF4
    thumb_func_start sub_80472C4
sub_80472C4:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    adds r4, r1, #0x0
    bl sub_802F5C0
    movs r2, #0x00
    movs r1, #0x00
    strh r4, [r5, #0x10]
    movs r0, #0x09
    strb r0, [r5, #0x0E]
    strb r0, [r5, #0x0D]
    strb r0, [r5, #0x0C]
    adds r0, r5, #0x0
    adds r0, #0x4C
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strb r2, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    adds r0, #0x08
    strh r1, [r0, #0x00]
    ldrh r1, [r5, #0x10]
    ldr r0, _08047308 @ =0x00008402
    cmp r1, r0
    beq _08047324
    cmp r1, r0
    bgt _0804730C
    subs r0, #0x01
    cmp r1, r0
    beq _08047318
    b _0804733C
    .byte 0x00, 0x00
_08047308: .4byte 0x00008402
_0804730C:
    ldr r0, _08047314 @ =0x00008403
    cmp r1, r0
    beq _08047330
    b _0804733C
_08047314: .4byte 0x00008403
_08047318:
    ldr r0, _08047320 @ =0x080EDAB4
    ldr r0, [r0, #0x00]
    b _0804733E
    .byte 0x00, 0x00
_08047320: .4byte 0x080EDAB4
_08047324:
    ldr r0, _0804732C @ =0x080EDACC
    ldr r0, [r0, #0x00]
    b _0804733E
    .byte 0x00, 0x00
_0804732C: .4byte 0x080EDACC
_08047330:
    ldr r0, _08047338 @ =0x080EDAE4
    ldr r0, [r0, #0x00]
    b _0804733E
    .byte 0x00, 0x00
_08047338: .4byte 0x080EDAE4
_0804733C:
    movs r0, #0x00
_0804733E:
    str r0, [r5, #0x48]
    adds r0, r5, #0x0
    adds r0, #0x70
    movs r1, #0x00
    strb r1, [r0, #0x00]
    adds r0, #0x08
    strb r1, [r0, #0x00]
    adds r0, #0x01
    strb r1, [r0, #0x00]
    subs r0, #0x08
    strb r1, [r0, #0x00]
    adds r0, #0x09
    strb r1, [r0, #0x00]
    subs r0, #0x06
    strb r1, [r0, #0x00]
    str r1, [r5, #0x7C]
    adds r0, #0x0C
    strb r1, [r0, #0x00]
    pop {r4, r5}
    pop {r0}
    bx r0
    thumb_func_start sub_8047368
sub_8047368:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    ldr r5, [r4, #0x54]
    ldr r1, _080473E8 @ =0x00008401
    bl sub_80472C4
    adds r0, r5, #0x0
    bl sub_803D978
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    strh r0, [r4, #0x26]
    ldr r6, [r5, #0x00]
    ldr r7, _080473EC @ =0x080E645C
    adds r2, r0, #0x0
    adds r1, r2, #0x0
    cmp r2, #0x00
    bge _0804738E
    adds r1, #0x3F
_0804738E:
    asrs r3, r1, #0x06
    ldr r1, _080473F0 @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r3, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    adds r1, r1, r7
    ldr r0, [r1, #0x00]
    lsls r0, r0, #0x04
    adds r0, r6, r0
    str r0, [r4, #0x00]
    ldr r6, [r5, #0x04]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r1, _080473F0 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r7
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x04
    subs r0, r6, r0
    str r0, [r4, #0x04]
    ldr r0, [r5, #0x08]
    str r0, [r4, #0x08]
    adds r0, r5, #0x0
    adds r0, #0x36
    ldrb r0, [r0, #0x00]
    adds r1, r4, #0x0
    adds r1, #0x36
    strb r0, [r1, #0x00]
    ldr r0, _080473F4 @ =0x080471D9
    str r0, [r4, #0x14]
    ldr r0, [r5, #0x48]
    ldr r1, _080473F8 @ =0xFFFEFFFF
    ands r0, r1
    str r0, [r5, #0x48]
    movs r0, #0xBE
    lsls r0, r0, #0x01
    adds r1, r5, r0
    movs r0, #0x01
    strb r0, [r1, #0x00]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_080473E8: .4byte 0x00008401
_080473EC: .4byte 0x080E645C
_080473F0: .4byte 0x000003FF
_080473F4: .4byte sub_80471D8
_080473F8: .4byte 0xFFFEFFFF
    thumb_func_start sub_80473FC
sub_80473FC:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    adds r7, r0, #0x0
    ldr r5, [r7, #0x54]
    movs r6, #0x00
    movs r0, #0x0E
    mov r8, r0
    ldr r1, _08047430 @ =0x080E645C
    mov r9, r1
    movs r2, #0x80
    lsls r2, r2, #0x03
    add r2, r9
    mov r10, r2
_0804741C:
    cmp r6, #0x00
    beq _0804743C
    ldr r1, _08047434 @ =0x03002E44
    ldr r2, _08047438 @ =0x0000070C
    adds r0, r1, r2
    bl sub_804F7AC
    adds r4, r0, #0x0
    b _0804743E
    .byte 0x00, 0x00
_08047430: .4byte 0x080E645C
_08047434: .4byte 0x03002E44
_08047438: .4byte 0x0000070C
_0804743C:
    adds r4, r7, #0x0
_0804743E:
    adds r0, r4, #0x0
    ldr r1, _080474B8 @ =0x00008401
    bl sub_80472C4
    str r5, [r4, #0x54]
    movs r0, #0x00
    strh r0, [r4, #0x26]
    ldr r1, [r5, #0x00]
    mov r2, r9
    ldr r0, [r2, #0x00]
    mov r2, r8
    muls r2, r0
    adds r0, r2, #0x0
    adds r1, r1, r0
    str r1, [r4, #0x00]
    ldr r1, [r5, #0x04]
    mov r2, r10
    ldr r0, [r2, #0x00]
    mov r2, r8
    muls r2, r0
    adds r0, r2, #0x0
    subs r1, r1, r0
    str r1, [r4, #0x04]
    ldr r0, [r5, #0x08]
    str r0, [r4, #0x08]
    adds r0, r5, #0x0
    adds r0, #0x36
    ldrb r0, [r0, #0x00]
    adds r1, r4, #0x0
    adds r1, #0x36
    strb r0, [r1, #0x00]
    ldr r1, _080474BC @ =0x080EDAFC
    lsls r0, r6, #0x02
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    adds r0, r4, #0x0
    adds r0, #0x74
    strb r1, [r0, #0x00]
    ldr r0, _080474C0 @ =0x080478C9
    str r0, [r4, #0x14]
    ldr r0, _080474C4 @ =0x080478E9
    str r0, [r4, #0x6C]
    adds r6, #0x01
    cmp r6, #0x02
    ble _0804741C
    ldr r0, [r5, #0x48]
    ldr r1, _080474C8 @ =0xFFFEFFFF
    ands r0, r1
    str r0, [r5, #0x48]
    movs r0, #0xBE
    lsls r0, r0, #0x01
    adds r1, r5, r0
    movs r0, #0x03
    strb r0, [r1, #0x00]
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_080474B8: .4byte 0x00008401
_080474BC: .4byte 0x080EDAFC
_080474C0: .4byte sub_80478C8
_080474C4: .4byte sub_80478E8
_080474C8: .4byte 0xFFFEFFFF
    thumb_func_start sub_80474CC
sub_80474CC:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    ldr r5, [r4, #0x54]
    ldr r1, _0804754C @ =0x00008402
    bl sub_80472C4
    adds r0, r5, #0x0
    bl sub_803D978
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    strh r0, [r4, #0x26]
    ldr r6, [r5, #0x00]
    ldr r7, _08047550 @ =0x080E645C
    adds r2, r0, #0x0
    adds r1, r2, #0x0
    cmp r2, #0x00
    bge _080474F2
    adds r1, #0x3F
_080474F2:
    asrs r3, r1, #0x06
    ldr r1, _08047554 @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r3, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    adds r1, r1, r7
    ldr r0, [r1, #0x00]
    lsls r0, r0, #0x04
    adds r0, r6, r0
    str r0, [r4, #0x00]
    ldr r6, [r5, #0x04]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r1, _08047554 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r7
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x04
    subs r0, r6, r0
    str r0, [r4, #0x04]
    ldr r0, [r5, #0x08]
    str r0, [r4, #0x08]
    adds r0, r5, #0x0
    adds r0, #0x36
    ldrb r0, [r0, #0x00]
    adds r1, r4, #0x0
    adds r1, #0x36
    strb r0, [r1, #0x00]
    ldr r0, _08047558 @ =0x080471D9
    str r0, [r4, #0x14]
    ldr r0, [r5, #0x48]
    ldr r1, _0804755C @ =0xFFFEFFFF
    ands r0, r1
    str r0, [r5, #0x48]
    movs r0, #0xBE
    lsls r0, r0, #0x01
    adds r1, r5, r0
    movs r0, #0x01
    strb r0, [r1, #0x00]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0804754C: .4byte 0x00008402
_08047550: .4byte 0x080E645C
_08047554: .4byte 0x000003FF
_08047558: .4byte sub_80471D8
_0804755C: .4byte 0xFFFEFFFF
    thumb_func_start sub_8047560
sub_8047560:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    adds r7, r0, #0x0
    ldr r5, [r7, #0x54]
    movs r6, #0x00
    movs r0, #0x0E
    mov r8, r0
    ldr r1, _08047594 @ =0x080E645C
    mov r9, r1
    movs r2, #0x80
    lsls r2, r2, #0x03
    add r2, r9
    mov r10, r2
_08047580:
    cmp r6, #0x00
    beq _080475A0
    ldr r1, _08047598 @ =0x03002E44
    ldr r2, _0804759C @ =0x0000070C
    adds r0, r1, r2
    bl sub_804F7AC
    adds r4, r0, #0x0
    b _080475A2
    .byte 0x00, 0x00
_08047594: .4byte 0x080E645C
_08047598: .4byte 0x03002E44
_0804759C: .4byte 0x0000070C
_080475A0:
    adds r4, r7, #0x0
_080475A2:
    adds r0, r4, #0x0
    ldr r1, _0804761C @ =0x00008402
    bl sub_80472C4
    str r5, [r4, #0x54]
    movs r0, #0x00
    strh r0, [r4, #0x26]
    ldr r1, [r5, #0x00]
    mov r2, r9
    ldr r0, [r2, #0x00]
    mov r2, r8
    muls r2, r0
    adds r0, r2, #0x0
    adds r1, r1, r0
    str r1, [r4, #0x00]
    ldr r1, [r5, #0x04]
    mov r2, r10
    ldr r0, [r2, #0x00]
    mov r2, r8
    muls r2, r0
    adds r0, r2, #0x0
    subs r1, r1, r0
    str r1, [r4, #0x04]
    ldr r0, [r5, #0x08]
    str r0, [r4, #0x08]
    adds r0, r5, #0x0
    adds r0, #0x36
    ldrb r0, [r0, #0x00]
    adds r1, r4, #0x0
    adds r1, #0x36
    strb r0, [r1, #0x00]
    ldr r1, _08047620 @ =0x080EDB08
    lsls r0, r6, #0x02
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    adds r0, r4, #0x0
    adds r0, #0x74
    strb r1, [r0, #0x00]
    ldr r0, _08047624 @ =0x080478C9
    str r0, [r4, #0x14]
    ldr r0, _08047628 @ =0x080478E9
    str r0, [r4, #0x6C]
    adds r6, #0x01
    cmp r6, #0x02
    ble _08047580
    ldr r0, [r5, #0x48]
    ldr r1, _0804762C @ =0xFFFEFFFF
    ands r0, r1
    str r0, [r5, #0x48]
    movs r0, #0xBE
    lsls r0, r0, #0x01
    adds r1, r5, r0
    movs r0, #0x03
    strb r0, [r1, #0x00]
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0804761C: .4byte 0x00008402
_08047620: .4byte 0x080EDB08
_08047624: .4byte sub_80478C8
_08047628: .4byte sub_80478E8
_0804762C: .4byte 0xFFFEFFFF
    thumb_func_start sub_8047630
sub_8047630:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    ldr r5, [r4, #0x54]
    ldr r1, _080476B0 @ =0x00008403
    bl sub_80472C4
    adds r0, r5, #0x0
    bl sub_803D978
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    strh r0, [r4, #0x26]
    ldr r6, [r5, #0x00]
    ldr r7, _080476B4 @ =0x080E645C
    adds r2, r0, #0x0
    adds r1, r2, #0x0
    cmp r2, #0x00
    bge _08047656
    adds r1, #0x3F
_08047656:
    asrs r3, r1, #0x06
    ldr r1, _080476B8 @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r3, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    adds r1, r1, r7
    ldr r0, [r1, #0x00]
    lsls r0, r0, #0x04
    adds r0, r6, r0
    str r0, [r4, #0x00]
    ldr r6, [r5, #0x04]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r1, _080476B8 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r7
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x04
    subs r0, r6, r0
    str r0, [r4, #0x04]
    ldr r0, [r5, #0x08]
    str r0, [r4, #0x08]
    adds r0, r5, #0x0
    adds r0, #0x36
    ldrb r0, [r0, #0x00]
    adds r1, r4, #0x0
    adds r1, #0x36
    strb r0, [r1, #0x00]
    ldr r0, _080476BC @ =0x080471D9
    str r0, [r4, #0x14]
    ldr r0, [r5, #0x48]
    ldr r1, _080476C0 @ =0xFFFEFFFF
    ands r0, r1
    str r0, [r5, #0x48]
    movs r0, #0xBE
    lsls r0, r0, #0x01
    adds r1, r5, r0
    movs r0, #0x01
    strb r0, [r1, #0x00]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_080476B0: .4byte 0x00008403
_080476B4: .4byte 0x080E645C
_080476B8: .4byte 0x000003FF
_080476BC: .4byte sub_80471D8
_080476C0: .4byte 0xFFFEFFFF
    thumb_func_start sub_80476C4
sub_80476C4:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    adds r0, r1, #0x0
    ldr r1, [r4, #0x00]
    cmp r1, #0x00
    bge _080476D4
    ldr r2, _08047708 @ =0x0000FFFF
    adds r1, r1, r2
_080476D4:
    asrs r1, r1, #0x10
    ldr r2, [r4, #0x04]
    cmp r2, #0x00
    bge _080476E0
    ldr r3, _08047708 @ =0x0000FFFF
    adds r2, r2, r3
_080476E0:
    asrs r2, r2, #0x10
    ldr r3, [r4, #0x08]
    cmp r3, #0x00
    bge _080476EC
    ldr r5, _08047708 @ =0x0000FFFF
    adds r3, r3, r5
_080476EC:
    asrs r3, r3, #0x10
    bl sub_80328D4
    adds r1, r0, #0x0
    cmp r1, #0x7F
    beq _08047702
    movs r0, #0x7F
    ands r1, r0
    adds r0, r4, #0x0
    adds r0, #0x36
    strb r1, [r0, #0x00]
_08047702:
    pop {r4, r5}
    pop {r0}
    bx r0
_08047708: .4byte 0x0000FFFF
    thumb_func_start sub_804770C
sub_804770C:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    adds r5, r1, #0x0
    ldr r1, [r4, #0x00]
    ldr r2, [r4, #0x04]
    adds r0, r5, #0x0
    movs r3, #0x00
    bl sub_8032C50
    cmp r0, #0x00
    beq _0804772A
    adds r1, r4, #0x0
    adds r1, #0x4E
    movs r0, #0x26
    b _08047752
_0804772A:
    ldr r1, [r4, #0x00]
    cmp r1, #0x00
    bge _08047734
    ldr r0, _0804775C @ =0x0000FFFF
    adds r1, r1, r0
_08047734:
    lsrs r1, r1, #0x10
    ldr r2, [r4, #0x04]
    cmp r2, #0x00
    bge _08047740
    ldr r0, _0804775C @ =0x0000FFFF
    adds r2, r2, r0
_08047740:
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    asrs r2, r2, #0x10
    adds r0, r5, #0x0
    movs r3, #0x00
    bl sub_8032990
    adds r1, r4, #0x0
    adds r1, #0x4E
_08047752:
    strb r0, [r1, #0x00]
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804775C: .4byte 0x0000FFFF
    thumb_func_start sub_8047760
sub_8047760:
    adds r2, r0, #0x0
    adds r0, #0x78
    ldrb r0, [r0, #0x00]
    cmp r0, #0x03
    bne _08047770
    ldr r0, [r2, #0x08]
    cmp r0, #0x00
    beq _0804778C
_08047770:
    adds r0, r2, #0x0
    adds r0, #0x78
    ldrb r1, [r0, #0x00]
    adds r3, r0, #0x0
    cmp r1, #0x04
    bne _08047782
    ldr r0, [r2, #0x08]
    cmp r0, #0x00
    beq _0804778C
_08047782:
    ldrb r0, [r3, #0x00]
    cmp r0, #0x02
    beq _0804778C
    movs r0, #0x01
    b _0804778E
_0804778C:
    movs r0, #0x00
_0804778E:
    bx lr
    thumb_func_start sub_8047790
sub_8047790:
    push {r4, lr}
    movs r2, #0x5A
    adds r2, r2, r0
    mov r12, r2
    movs r3, #0x00
    movs r2, #0x80
    lsls r2, r2, #0x08
    mov r4, r12
    strh r2, [r4, #0x00]
    str r1, [r0, #0x30]
    ldrh r2, [r0, #0x34]
    ldr r1, _080477B8 @ =0x0000FFFD
    ands r1, r2
    strh r1, [r0, #0x34]
    str r3, [r0, #0x18]
    ldr r1, _080477BC @ =0x08047849
    str r1, [r0, #0x14]
    pop {r4}
    pop {r0}
    bx r0
_080477B8: .4byte 0x0000FFFD
_080477BC: .4byte sub_8047848
    .byte 0x10, 0xB5, 0x03, 0x1C, 0x4E, 0x30, 0x00, 0x78, 0x26, 0x28, 0x09, 0xD0, 0x00, 0x20, 0x58, 0x61
    .byte 0x02, 0x49, 0x50, 0x18, 0x19, 0x1C, 0x08, 0xF0, 0x17, 0xF8, 0x0E, 0xE0, 0x0C, 0x07, 0x00, 0x00
    .byte 0x5A, 0x24, 0x00, 0x22, 0x80, 0x20, 0x00, 0x02, 0xE0, 0x52, 0x19, 0x63, 0x99, 0x8E, 0x04, 0x48
    .byte 0x08, 0x40, 0x98, 0x86, 0x9A, 0x61, 0x03, 0x48, 0x58, 0x61, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47
    .byte 0xFD, 0xFF, 0x00, 0x00, 0x49, 0x78, 0x04, 0x08
    thumb_func_start sub_8047808
sub_8047808:
    push {lr}
    adds r3, r0, #0x0
    cmp r2, #0x01
    beq _08047838
    cmp r2, #0x01
    bgt _0804781A
    cmp r2, #0x00
    beq _08047822
    b _08047840
_0804781A:
    cmp r2, #0x02
    beq _08047830
    cmp r2, #0x03
    bne _08047840
_08047822:
    ldr r0, [r3, #0x28]
    negs r0, r0
    str r0, [r3, #0x28]
    ldr r0, [r3, #0x2C]
    negs r0, r0
    str r0, [r3, #0x2C]
    b _08047840
_08047830:
    movs r2, #0x02
    bl sub_8044920
    b _08047842
_08047838:
    movs r2, #0x00
    bl sub_8044920
    b _08047842
_08047840:
    movs r0, #0x01
_08047842:
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_8047848
sub_8047848:
    push {r4, lr}
    adds r2, r0, #0x0
    ldr r3, _0804787C @ =0x03002E20
    ldr r1, [r2, #0x08]
    ldr r0, [r2, #0x30]
    adds r1, r1, r0
    str r1, [r2, #0x08]
    ldr r4, _08047880 @ =0xFFFFE600
    adds r0, r0, r4
    str r0, [r2, #0x30]
    cmp r1, #0x00
    bge _08047874
    movs r0, #0x00
    str r0, [r2, #0x08]
    str r0, [r2, #0x30]
    str r0, [r2, #0x14]
    movs r1, #0xE6
    lsls r1, r1, #0x03
    adds r0, r3, r1
    adds r1, r2, #0x0
    bl sub_804F808
_08047874:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804787C: .4byte 0x03002E20
_08047880: .4byte 0xFFFFE600
    thumb_func_start sub_8047884
sub_8047884:
    push {r4, lr}
    ldr r3, [r0, #0x54]
    ldr r1, [r3, #0x48]
    ldr r2, _080478BC @ =0xFFFEFFFF
    ands r1, r2
    str r1, [r3, #0x48]
    movs r2, #0xD0
    lsls r2, r2, #0x08
    movs r1, #0x5A
    adds r1, r1, r0
    mov r12, r1
    movs r3, #0x00
    movs r1, #0x80
    lsls r1, r1, #0x08
    mov r4, r12
    strh r1, [r4, #0x00]
    str r2, [r0, #0x30]
    ldrh r2, [r0, #0x34]
    ldr r1, _080478C0 @ =0x0000FFFD
    ands r1, r2
    strh r1, [r0, #0x34]
    str r3, [r0, #0x18]
    ldr r1, _080478C4 @ =0x08047849
    str r1, [r0, #0x14]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_080478BC: .4byte 0xFFFEFFFF
_080478C0: .4byte 0x0000FFFD
_080478C4: .4byte sub_8047848
    thumb_func_start sub_80478C8
sub_80478C8:
    push {lr}
    adds r1, r0, #0x0
    adds r2, r1, #0x0
    adds r2, #0x74
    ldrb r0, [r2, #0x00]
    cmp r0, #0x00
    bne _080478DE
    adds r0, r1, #0x0
    bl sub_8046F5C
    b _080478E2
_080478DE:
    subs r0, #0x01
    strb r0, [r2, #0x00]
_080478E2:
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_80478E8
sub_80478E8:
    push {r4, lr}
    adds r1, r0, #0x0
    ldr r4, [r1, #0x54]
    ldr r0, _08047914 @ =0x03002E20
    ldr r2, [r4, #0x48]
    ldr r3, _08047918 @ =0xFFFEFFFF
    ands r2, r3
    str r2, [r4, #0x48]
    movs r2, #0xBE
    lsls r2, r2, #0x01
    adds r4, r4, r2
    ldrb r2, [r4, #0x00]
    subs r2, #0x01
    strb r2, [r4, #0x00]
    movs r2, #0xE6
    lsls r2, r2, #0x03
    adds r0, r0, r2
    bl sub_804F808
    pop {r4}
    pop {r0}
    bx r0
_08047914: .4byte 0x03002E20
_08047918: .4byte 0xFFFEFFFF
    thumb_func_start sub_804791C
sub_804791C:
    push {r4, r5, r6, r7, lr}
    adds r5, r0, #0x0
    adds r2, r1, #0x0
    ldr r3, [r5, #0x54]
    ldr r6, _080479CC @ =0x03002E20
    adds r7, r6, #0x0
    adds r7, #0x24
    ldrh r1, [r2, #0x10]
    movs r4, #0xF0
    lsls r4, r4, #0x08
    ands r4, r1
    movs r0, #0x88
    lsls r0, r0, #0x08
    cmp r1, r0
    beq _080479C4
    movs r0, #0x80
    lsls r0, r0, #0x05
    cmp r4, r0
    beq _080479C4
    movs r0, #0x80
    lsls r0, r0, #0x06
    cmp r4, r0
    bne _08047956
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _080479C4
_08047956:
    ldr r0, [r3, #0x48]
    ldr r1, _080479D0 @ =0xFFFEFFFF
    ands r0, r1
    str r0, [r3, #0x48]
    movs r1, #0x9C
    lsls r1, r1, #0x08
    adds r0, r5, #0x0
    bl sub_8047790
    movs r0, #0x80
    lsls r0, r0, #0x08
    cmp r4, r0
    bne _080479C4
    ldr r1, _080479D4 @ =0x00000838
    adds r0, r6, r1
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _080479C4
    adds r0, r7, #0x0
    adds r1, r5, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    cmp r6, #0x00
    beq _080479C4
    movs r0, #0x7C
    bl m4aSongNumStart
    ldr r5, _080479D8 @ =0x08102414
    ldr r4, _080479DC @ =0x08102498
    movs r0, #0xF8
    lsls r0, r0, #0x02
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayVolumeControl
_080479C4:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_080479CC: .4byte 0x03002E20
_080479D0: .4byte 0xFFFEFFFF
_080479D4: .4byte 0x00000838
_080479D8: .4byte 0x08102414
_080479DC: .4byte 0x08102498
    thumb_func_start sub_80479E0
sub_80479E0:
    push {r4, r5, r6, r7, lr}
    adds r5, r0, #0x0
    adds r3, r1, #0x0
    ldr r2, [r5, #0x54]
    ldr r6, _08047A98 @ =0x03002E20
    adds r7, r6, #0x0
    adds r7, #0x24
    ldrh r1, [r3, #0x10]
    movs r4, #0xF0
    lsls r4, r4, #0x08
    ands r4, r1
    movs r0, #0x88
    lsls r0, r0, #0x08
    cmp r1, r0
    beq _08047A92
    movs r0, #0x80
    lsls r0, r0, #0x05
    cmp r4, r0
    beq _08047A92
    movs r0, #0x80
    lsls r0, r0, #0x06
    cmp r4, r0
    bne _08047A1A
    adds r0, r3, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08047A92
_08047A1A:
    ldr r0, [r2, #0x48]
    ldr r1, _08047A9C @ =0xFFFEFFFF
    ands r0, r1
    str r0, [r2, #0x48]
    movs r0, #0xC6
    lsls r0, r0, #0x01
    adds r1, r2, r0
    movs r0, #0x00
    strh r0, [r1, #0x00]
    movs r1, #0x9C
    lsls r1, r1, #0x08
    adds r0, r5, #0x0
    bl sub_8047790
    movs r0, #0x80
    lsls r0, r0, #0x08
    cmp r4, r0
    bne _08047A92
    ldr r1, _08047AA0 @ =0x00000838
    adds r0, r6, r1
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08047A92
    adds r0, r7, #0x0
    adds r1, r5, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    cmp r6, #0x00
    beq _08047A92
    movs r0, #0x7C
    bl m4aSongNumStart
    ldr r5, _08047AA4 @ =0x08102414
    ldr r4, _08047AA8 @ =0x08102498
    movs r0, #0xF8
    lsls r0, r0, #0x02
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayVolumeControl
_08047A92:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08047A98: .4byte 0x03002E20
_08047A9C: .4byte 0xFFFEFFFF
_08047AA0: .4byte 0x00000838
_08047AA4: .4byte 0x08102414
_08047AA8: .4byte 0x08102498
    thumb_func_start sub_8047AAC
sub_8047AAC:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    adds r6, r0, #0x0
    mov r10, r6
    ldr r0, [r6, #0x54]
    mov r8, r0
    ldr r5, _08047BAC @ =0x03002E20
    movs r1, #0x24
    adds r1, r1, r5
    mov r9, r1
    adds r1, r6, #0x0
    adds r1, #0x4C
    ldrh r0, [r1, #0x00]
    adds r0, #0x01
    movs r4, #0x00
    strh r0, [r1, #0x00]
    ldrh r0, [r6, #0x38]
    cmp r0, #0x00
    beq _08047ADC
    subs r0, #0x01
    strh r0, [r6, #0x38]
_08047ADC:
    ldr r0, [r6, #0x00]
    ldr r1, [r6, #0x28]
    adds r0, r0, r1
    str r0, [r6, #0x00]
    ldr r0, [r6, #0x04]
    ldr r1, [r6, #0x2C]
    adds r0, r0, r1
    str r0, [r6, #0x04]
    ldr r0, [r6, #0x08]
    ldr r1, [r6, #0x30]
    adds r0, r0, r1
    str r0, [r6, #0x08]
    ldr r0, _08047BB0 @ =0xFFFFE600
    adds r1, r1, r0
    str r1, [r6, #0x30]
    adds r0, r6, #0x0
    mov r1, r9
    bl sub_80476C4
    ldr r0, [r6, #0x08]
    cmp r0, #0x00
    bgt _08047C00
    str r4, [r6, #0x08]
    str r4, [r6, #0x30]
    adds r0, r6, #0x0
    mov r1, r9
    bl sub_80476C4
    str r4, [r6, #0x14]
    ldr r1, _08047BB4 @ =0x00000838
    adds r0, r5, r1
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08047B72
    mov r0, r9
    adds r1, r6, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #0x3F
    bgt _08047B38
    movs r2, #0x40
_08047B38:
    adds r7, r2, #0x0
    cmp r7, #0x00
    beq _08047B72
    movs r0, #0x7A
    bl m4aSongNumStart
    ldr r5, _08047BB8 @ =0x08102414
    ldr r4, _08047BBC @ =0x08102498
    movs r0, #0xF4
    lsls r0, r0, #0x02
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r7, #0x0
    bl m4aMPlayVolumeControl
_08047B72:
    mov r0, r10
    ldr r1, _08047BC0 @ =0x03002E44
    bl sub_804770C
    movs r2, #0x00
    adds r0, r6, #0x0
    adds r0, #0x4E
    ldrb r1, [r0, #0x00]
    movs r0, #0x90
    ands r0, r1
    cmp r0, #0x80
    bne _08047B8C
    movs r2, #0x01
_08047B8C:
    cmp r2, #0x00
    bne _08047B9E
    movs r0, #0x00
    adds r2, r1, #0x0
    cmp r2, #0x26
    bne _08047B9A
    movs r0, #0x01
_08047B9A:
    cmp r0, #0x00
    beq _08047BC4
_08047B9E:
    movs r1, #0x9C
    lsls r1, r1, #0x08
    adds r0, r6, #0x0
    bl sub_8047790
    b _08047C18
    .byte 0x00, 0x00
_08047BAC: .4byte 0x03002E20
_08047BB0: .4byte 0xFFFFE600
_08047BB4: .4byte 0x00000838
_08047BB8: .4byte 0x08102414
_08047BBC: .4byte 0x08102498
_08047BC0: .4byte 0x03002E44
_08047BC4:
    movs r3, #0x00
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _08047BDC
    movs r0, #0x00
    cmp r2, #0x26
    bne _08047BD6
    movs r0, #0x01
_08047BD6:
    cmp r0, #0x00
    bne _08047BDC
    movs r3, #0x01
_08047BDC:
    cmp r3, #0x00
    beq _08047C00
    mov r1, r8
    ldr r0, [r1, #0x48]
    ldr r1, _08047BF8 @ =0xFFFEFFFF
    ands r0, r1
    mov r1, r8
    str r0, [r1, #0x48]
    ldr r0, _08047BFC @ =0x0000070C
    add r0, r9
    adds r1, r6, #0x0
    bl sub_804F808
    b _08047C18
_08047BF8: .4byte 0xFFFEFFFF
_08047BFC: .4byte 0x0000070C
_08047C00:
    adds r0, r6, #0x0
    adds r0, #0x4C
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x10
    bne _08047C18
    mov r1, r8
    ldr r0, [r1, #0x48]
    ldr r1, _08047C28 @ =0xFFFEFFFF
    ands r0, r1
    mov r1, r8
    str r0, [r1, #0x48]
_08047C18:
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08047C28: .4byte 0xFFFEFFFF
    thumb_func_start sub_8047C2C
sub_8047C2C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x004
    adds r6, r0, #0x0
    str r6, [sp, #0x000]
    ldr r0, [r6, #0x54]
    mov r8, r0
    ldr r0, _08047CC0 @ =0x03002E20
    adds r0, #0x24
    mov r10, r0
    movs r0, #0xC6
    lsls r0, r0, #0x01
    add r0, r8
    movs r1, #0x00
    mov r9, r1
    mov r2, r9
    strh r2, [r0, #0x00]
    mov r0, r9
    str r0, [r6, #0x08]
    mov r1, r8
    ldr r0, [r1, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x06
    ands r0, r1
    cmp r0, #0x00
    bne _08047CCC
    mov r0, r8
    bl sub_803D9B4
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    strh r0, [r6, #0x26]
    movs r1, #0x80
    lsls r1, r1, #0x09
    str r1, [r6, #0x08]
    ldr r4, _08047CC4 @ =0x080E645C
    adds r2, r0, #0x0
    adds r1, r2, #0x0
    cmp r2, #0x00
    bge _08047C84
    adds r1, #0x3F
_08047C84:
    asrs r3, r1, #0x06
    ldr r1, _08047CC8 @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r3, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    adds r1, r1, r4
    ldr r0, [r1, #0x00]
    lsls r0, r0, #0x04
    str r0, [r6, #0x28]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r1, _08047CC8 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r4
    ldr r0, [r0, #0x00]
    negs r0, r0
    lsls r0, r0, #0x04
    str r0, [r6, #0x2C]
    movs r0, #0xD0
    lsls r0, r0, #0x09
    str r0, [r6, #0x30]
    adds r0, r6, #0x0
    mov r1, r10
    bl sub_80476C4
    b _08047D40
    .byte 0x00, 0x00
_08047CC0: .4byte 0x03002E20
_08047CC4: .4byte 0x080E645C
_08047CC8: .4byte 0x000003FF
_08047CCC:
    mov r0, r8
    adds r0, #0x36
    ldrb r0, [r0, #0x00]
    adds r7, r0, #0x3
    ldr r0, _08047DD0 @ =0x00000191
    add r0, r8
    ldrb r0, [r0, #0x00]
    adds r0, #0x01
    mov r2, r10
    ldrh r1, [r2, #0x14]
    cmp r7, r1
    blt _08047CE6
    subs r7, r7, r1
_08047CE6:
    cmp r0, #0x03
    bne _08047CEC
    movs r0, #0x00
_08047CEC:
    lsls r4, r0, #0x18
    lsrs r4, r4, #0x18
    mov r0, r10
    adds r1, r7, #0x0
    adds r2, r4, #0x0
    bl sub_8032AD0
    adds r5, r0, #0x0
    mov r0, r10
    adds r1, r7, #0x0
    adds r2, r4, #0x0
    bl sub_8032B10
    adds r2, r0, #0x0
    mov r0, r9
    strh r0, [r6, #0x26]
    movs r0, #0x80
    lsls r0, r0, #0x09
    str r0, [r6, #0x08]
    ldr r0, [r6, #0x00]
    lsls r5, r5, #0x13
    subs r0, r5, r0
    cmp r0, #0x00
    bge _08047D1E
    adds r0, #0x1F
_08047D1E:
    asrs r0, r0, #0x05
    str r0, [r6, #0x28]
    ldr r1, [r6, #0x04]
    lsls r0, r2, #0x13
    subs r0, r0, r1
    cmp r0, #0x00
    bge _08047D2E
    adds r0, #0x1F
_08047D2E:
    asrs r0, r0, #0x05
    str r0, [r6, #0x2C]
    movs r0, #0xD0
    lsls r0, r0, #0x09
    str r0, [r6, #0x30]
    adds r0, r6, #0x0
    mov r1, r10
    bl sub_80476C4
_08047D40:
    ldr r0, _08047DD4 @ =0x0804791D
    str r0, [r6, #0x18]
    movs r0, #0x08
    movs r1, #0x00
    strh r0, [r6, #0x38]
    ldr r0, [sp, #0x000]
    adds r0, #0x4C
    strh r1, [r0, #0x00]
    mov r1, r8
    ldr r0, [r1, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x09
    orrs r0, r1
    mov r2, r8
    str r0, [r2, #0x48]
    ldr r0, _08047DD8 @ =0x08047AAD
    ldr r1, [sp, #0x000]
    str r0, [r1, #0x14]
    ldr r0, _08047DDC @ =0x00000814
    add r0, r10
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08047DC0
    mov r0, r10
    adds r1, r6, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #0x3F
    bgt _08047D86
    movs r2, #0x40
_08047D86:
    adds r6, r2, #0x0
    cmp r6, #0x00
    beq _08047DC0
    movs r0, #0x7B
    bl m4aSongNumStart
    ldr r5, _08047DE0 @ =0x08102414
    ldr r4, _08047DE4 @ =0x08102498
    movs r2, #0xF6
    lsls r2, r2, #0x02
    adds r4, r4, r2
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayVolumeControl
_08047DC0:
    add sp, #0x004
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08047DD0: .4byte 0x00000191
_08047DD4: .4byte sub_804791C
_08047DD8: .4byte sub_8047AAC
_08047DDC: .4byte 0x00000814
_08047DE0: .4byte 0x08102414
_08047DE4: .4byte 0x08102498
    thumb_func_start sub_8047DE8
sub_8047DE8:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    adds r4, r0, #0x0
    adds r7, r4, #0x0
    ldr r6, [r4, #0x54]
    ldr r0, _08047E3C @ =0x03002E20
    adds r0, #0x24
    mov r8, r0
    mov r9, r8
    movs r0, #0xC6
    lsls r0, r0, #0x01
    adds r1, r6, r0
    movs r0, #0x00
    strh r0, [r1, #0x00]
    adds r0, r4, #0x0
    mov r1, r8
    bl sub_804770C
    movs r2, #0x00
    adds r0, r4, #0x0
    adds r0, #0x4E
    ldrb r1, [r0, #0x00]
    movs r0, #0x90
    ands r0, r1
    cmp r0, #0x80
    bne _08047E22
    movs r2, #0x01
_08047E22:
    cmp r2, #0x00
    beq _08047E44
    ldr r0, [r6, #0x48]
    ldr r1, _08047E40 @ =0xFFFEFFFF
    ands r0, r1
    str r0, [r6, #0x48]
    movs r1, #0x9C
    lsls r1, r1, #0x08
    adds r0, r4, #0x0
    bl sub_8047790
    b _08047F00
    .byte 0x00, 0x00
_08047E3C: .4byte 0x03002E20
_08047E40: .4byte 0xFFFEFFFF
_08047E44:
    movs r3, #0x00
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _08047E60
    movs r2, #0x00
    lsls r0, r1, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x26
    bne _08047E5A
    movs r2, #0x01
_08047E5A:
    cmp r2, #0x00
    bne _08047E60
    movs r3, #0x01
_08047E60:
    cmp r3, #0x00
    bne _08047E76
    movs r5, #0x00
    adds r0, r7, #0x0
    adds r0, #0x4E
    ldrb r0, [r0, #0x00]
    cmp r0, #0x26
    bne _08047E72
    movs r5, #0x01
_08047E72:
    cmp r5, #0x00
    beq _08047E94
_08047E76:
    ldr r0, [r6, #0x48]
    ldr r1, _08047E8C @ =0xFFFEFFFF
    ands r0, r1
    str r0, [r6, #0x48]
    ldr r0, _08047E90 @ =0x0000070C
    add r0, r8
    adds r1, r7, #0x0
    bl sub_804F808
    b _08047F00
    .byte 0x00, 0x00
_08047E8C: .4byte 0xFFFEFFFF
_08047E90: .4byte 0x0000070C
_08047E94:
    str r5, [r4, #0x08]
    adds r0, r7, #0x0
    mov r1, r9
    bl sub_80476C4
    ldr r0, _08047F0C @ =0x0804791D
    str r0, [r4, #0x18]
    str r5, [r7, #0x14]
    ldr r0, _08047F10 @ =0x00000814
    add r0, r8
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08047F00
    mov r0, r8
    adds r1, r4, #0x0
    bl sub_804CD28
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, #0x3F
    bgt _08047EC6
    movs r2, #0x40
_08047EC6:
    adds r6, r2, #0x0
    cmp r6, #0x00
    beq _08047F00
    movs r0, #0x7A
    bl m4aSongNumStart
    ldr r5, _08047F14 @ =0x08102414
    ldr r4, _08047F18 @ =0x08102498
    movs r0, #0xF4
    lsls r0, r0, #0x02
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayVolumeControl
_08047F00:
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08047F0C: .4byte sub_804791C
_08047F10: .4byte 0x00000814
_08047F14: .4byte 0x08102414
_08047F18: .4byte 0x08102498
    thumb_func_start sub_8047F1C
sub_8047F1C:
    push {r4, r5, r6, r7, lr}
    adds r5, r0, #0x0
    ldr r4, [r5, #0x54]
    adds r7, r5, #0x0
    adds r1, r5, #0x0
    adds r1, #0x4C
    ldrh r0, [r1, #0x00]
    adds r0, #0x01
    strh r0, [r1, #0x00]
    ldr r1, _08047F48 @ =0x080EC280
    adds r0, r4, #0x0
    adds r0, #0x7E
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bne _08047F4C
    adds r0, r4, #0x0
    bl sub_803D978
    b _08047F5A
_08047F48: .4byte 0x080EC280
_08047F4C:
    adds r1, r4, #0x0
    adds r1, #0x56
    movs r2, #0x80
    lsls r2, r2, #0x08
    adds r0, r2, #0x0
    ldrh r1, [r1, #0x00]
    adds r0, r0, r1
_08047F5A:
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    strh r0, [r5, #0x26]
    ldr r6, [r4, #0x00]
    ldr r1, _08047FC4 @ =0x080E645C
    mov r12, r1
    adds r2, r0, #0x0
    adds r1, r2, #0x0
    cmp r2, #0x00
    bge _08047F70
    adds r1, #0x3F
_08047F70:
    asrs r3, r1, #0x06
    ldr r1, _08047FC8 @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r3, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    add r1, r12
    ldr r0, [r1, #0x00]
    lsls r0, r0, #0x04
    adds r0, r6, r0
    str r0, [r5, #0x00]
    ldr r6, [r4, #0x04]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r1, _08047FC8 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    add r0, r12
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x04
    subs r0, r6, r0
    str r0, [r5, #0x04]
    ldr r0, [r4, #0x08]
    str r0, [r5, #0x08]
    adds r0, r4, #0x0
    adds r0, #0x36
    ldrb r0, [r0, #0x00]
    adds r1, r5, #0x0
    adds r1, #0x36
    strb r0, [r1, #0x00]
    adds r0, r4, #0x0
    bl sub_8047760
    cmp r0, #0x00
    beq _08047FCC
    ldrh r0, [r7, #0x34]
    movs r1, #0x01
    orrs r1, r0
    movs r0, #0x02
    orrs r1, r0
    b _08047FD6
_08047FC4: .4byte 0x080E645C
_08047FC8: .4byte 0x000003FF
_08047FCC:
    ldrh r0, [r7, #0x34]
    ldr r1, _08048004 @ =0x0000FFFE
    ands r1, r0
    ldr r0, _08048008 @ =0x0000FFFD
    ands r1, r0
_08047FD6:
    strh r1, [r7, #0x34]
    ldr r0, [r4, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0804800C
    adds r0, r4, #0x0
    adds r0, #0x96
    ldrh r2, [r0, #0x00]
    movs r0, #0x40
    ands r0, r2
    cmp r0, #0x00
    bne _0804804C
    movs r0, #0x80
    lsls r0, r0, #0x04
    ands r0, r2
    cmp r0, #0x00
    bne _0804803E
    adds r0, r5, #0x0
    bl sub_8047DE8
    b _0804804C
_08048004: .4byte 0x0000FFFE
_08048008: .4byte 0x0000FFFD
_0804800C:
    adds r0, r5, #0x0
    adds r0, #0x4C
    movs r2, #0x00
    ldsh r0, [r0, r2]
    cmp r0, #0xF3
    ble _08048026
    movs r0, #0xC8
    lsls r0, r0, #0x01
    adds r2, r4, r0
    ldrb r1, [r2, #0x00]
    movs r0, #0xFE
    ands r0, r1
    strb r0, [r2, #0x00]
_08048026:
    movs r1, #0xC8
    lsls r1, r1, #0x01
    adds r0, r4, r1
    ldrb r2, [r0, #0x00]
    movs r0, #0x01
    ands r0, r2
    cmp r0, #0x00
    bne _0804804C
    movs r0, #0x02
    ands r0, r2
    cmp r0, #0x00
    bne _08048046
_0804803E:
    adds r0, r5, #0x0
    bl sub_8047C2C
    b _0804804C
_08048046:
    adds r0, r5, #0x0
    bl sub_8047DE8
_0804804C:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_8048054
sub_8048054:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    adds r4, r1, #0x0
    bl sub_802F5C0
    movs r2, #0x00
    movs r1, #0x00
    strh r4, [r5, #0x10]
    movs r0, #0x04
    strb r0, [r5, #0x0E]
    strb r0, [r5, #0x0D]
    strb r0, [r5, #0x0C]
    adds r0, r5, #0x0
    adds r0, #0x4C
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strb r2, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    adds r0, #0x08
    strh r1, [r0, #0x00]
    ldr r0, _0804808C @ =0x0807AC44
    str r0, [r5, #0x48]
    pop {r4, r5}
    pop {r0}
    bx r0
_0804808C: .4byte 0x0807AC44
    thumb_func_start sub_8048090
sub_8048090:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    adds r5, r4, #0x0
    ldr r6, [r4, #0x54]
    ldr r1, _0804811C @ =0x00008001
    bl sub_8048054
    adds r0, r6, #0x0
    bl sub_803D978
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    strh r0, [r4, #0x26]
    ldr r7, [r6, #0x00]
    ldr r1, _08048120 @ =0x080E645C
    mov r12, r1
    adds r2, r0, #0x0
    adds r1, r2, #0x0
    cmp r2, #0x00
    bge _080480BA
    adds r1, #0x3F
_080480BA:
    asrs r3, r1, #0x06
    ldr r1, _08048124 @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r3, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    add r1, r12
    ldr r0, [r1, #0x00]
    lsls r0, r0, #0x04
    adds r0, r7, r0
    str r0, [r4, #0x00]
    ldr r4, [r6, #0x04]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r1, _08048124 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    add r0, r12
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x04
    subs r0, r4, r0
    str r0, [r5, #0x04]
    ldr r0, [r6, #0x08]
    str r0, [r5, #0x08]
    adds r0, r6, #0x0
    adds r0, #0x36
    ldrb r0, [r0, #0x00]
    adds r1, r5, #0x0
    adds r1, #0x36
    strb r0, [r1, #0x00]
    ldr r0, _08048128 @ =0x08047F1D
    str r0, [r5, #0x14]
    movs r0, #0xC6
    lsls r0, r0, #0x01
    adds r1, r6, r0
    ldr r0, _0804812C @ =0x00001005
    strh r0, [r1, #0x00]
    ldrh r0, [r5, #0x34]
    movs r1, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r5, #0x34]
    ldr r0, _08048130 @ =0x080479E1
    str r0, [r5, #0x18]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0804811C: .4byte 0x00008001
_08048120: .4byte 0x080E645C
_08048124: .4byte 0x000003FF
_08048128: .4byte sub_8047F1C
_0804812C: .4byte 0x00001005
_08048130: .4byte sub_80479E0
    thumb_func_start nullsub_11
nullsub_11: @ 08048134
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8048138
sub_8048138:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    ldr r5, [r4, #0x54]
    ldr r2, _080481C0 @ =0x03002E20
    adds r1, r4, #0x0
    adds r1, #0x4C
    ldrh r0, [r1, #0x00]
    adds r0, #0x01
    strh r0, [r1, #0x00]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x1D
    ble _08048162
    movs r0, #0x00
    str r0, [r4, #0x14]
    movs r1, #0xE6
    lsls r1, r1, #0x03
    adds r0, r2, r1
    adds r1, r4, #0x0
    bl sub_804F808
_08048162:
    adds r0, r5, #0x0
    bl sub_803D978
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    strh r0, [r4, #0x26]
    ldr r6, [r5, #0x00]
    ldr r7, _080481C4 @ =0x080E645C
    adds r2, r0, #0x0
    adds r1, r2, #0x0
    cmp r2, #0x00
    bge _0804817C
    adds r1, #0x3F
_0804817C:
    asrs r3, r1, #0x06
    ldr r1, _080481C8 @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r3, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    adds r1, r1, r7
    ldr r0, [r1, #0x00]
    lsls r0, r0, #0x04
    adds r0, r6, r0
    str r0, [r4, #0x00]
    ldr r6, [r5, #0x04]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r1, _080481C8 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r7
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x04
    subs r0, r6, r0
    str r0, [r4, #0x04]
    ldr r0, [r5, #0x08]
    str r0, [r4, #0x08]
    adds r0, r5, #0x0
    adds r0, #0x36
    ldrb r1, [r0, #0x00]
    adds r0, r4, #0x0
    adds r0, #0x36
    strb r1, [r0, #0x00]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_080481C0: .4byte 0x03002E20
_080481C4: .4byte 0x080E645C
_080481C8: .4byte 0x000003FF
    thumb_func_start sub_80481CC
sub_80481CC:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    adds r4, r1, #0x0
    bl sub_802F5C0
    movs r2, #0x00
    movs r1, #0x00
    strh r4, [r5, #0x10]
    movs r0, #0x08
    strb r0, [r5, #0x0E]
    strb r0, [r5, #0x0D]
    strb r0, [r5, #0x0C]
    adds r0, r5, #0x0
    adds r0, #0x4C
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strb r2, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    adds r0, #0x08
    strh r1, [r0, #0x00]
    str r1, [r5, #0x48]
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_8048204
sub_8048204:
    push {r4, r5, r6, r7, lr}
    adds r5, r0, #0x0
    adds r4, r5, #0x0
    ldr r6, [r5, #0x54]
    ldr r1, _08048284 @ =0x00008003
    bl sub_80481CC
    adds r0, r6, #0x0
    bl sub_803D978
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    strh r0, [r5, #0x26]
    ldr r7, [r6, #0x00]
    ldr r1, _08048288 @ =0x080E645C
    mov r12, r1
    adds r2, r0, #0x0
    adds r1, r2, #0x0
    cmp r2, #0x00
    bge _0804822E
    adds r1, #0x3F
_0804822E:
    asrs r3, r1, #0x06
    ldr r1, _0804828C @ =0x000003FF
    adds r0, r1, #0x0
    adds r1, r3, #0x0
    ands r1, r0
    lsls r1, r1, #0x02
    add r1, r12
    ldr r0, [r1, #0x00]
    lsls r0, r0, #0x04
    adds r0, r7, r0
    str r0, [r5, #0x00]
    ldr r5, [r6, #0x04]
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r1, _0804828C @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    add r0, r12
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x04
    subs r0, r5, r0
    str r0, [r4, #0x04]
    ldr r0, [r6, #0x08]
    str r0, [r4, #0x08]
    adds r0, r6, #0x0
    adds r0, #0x36
    ldrb r0, [r0, #0x00]
    adds r1, r4, #0x0
    adds r1, #0x36
    strb r0, [r1, #0x00]
    ldr r0, _08048290 @ =0x08048139
    str r0, [r4, #0x14]
    movs r0, #0x00
    str r0, [r4, #0x18]
    ldrh r0, [r4, #0x34]
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r4, #0x34]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08048284: .4byte 0x00008003
_08048288: .4byte 0x080E645C
_0804828C: .4byte 0x000003FF
_08048290: .4byte sub_8048138
    thumb_func_start sub_8048294
sub_8048294:
    push {r4, lr}
    ldr r2, [r0, #0x54]
    ldr r1, _080482B4 @ =0x00008003
    strh r1, [r0, #0x10]
    adds r2, #0xB2
    ldrh r3, [r2, #0x00]
    movs r4, #0x80
    lsls r4, r4, #0x08
    adds r1, r4, #0x0
    orrs r1, r3
    strh r1, [r2, #0x00]
    bl sub_8048204
    pop {r4}
    pop {r0}
    bx r0
_080482B4: .4byte 0x00008003
    thumb_func_start sub_80482B8
sub_80482B8:
    push {r4, lr}
    ldr r2, [r0, #0x54]
    adds r2, #0xB2
    ldrh r3, [r2, #0x00]
    movs r4, #0x80
    lsls r4, r4, #0x08
    adds r1, r4, #0x0
    orrs r1, r3
    strh r1, [r2, #0x00]
    movs r1, #0x96
    lsls r1, r1, #0x02
    str r1, [r0, #0x70]
    ldr r1, _080482DC @ =0x08048311
    str r1, [r0, #0x14]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_080482DC: .4byte sub_8048310
    thumb_func_start sub_80482E0
sub_80482E0:
    push {r4, r5, lr}
    adds r1, r0, #0x0
    ldr r0, _0804830C @ =0x03002E20
    ldr r3, [r1, #0x54]
    adds r3, #0xB2
    ldrh r4, [r3, #0x00]
    movs r5, #0x80
    lsls r5, r5, #0x08
    adds r2, r5, #0x0
    movs r5, #0x00
    orrs r2, r4
    strh r2, [r3, #0x00]
    str r5, [r1, #0x14]
    movs r2, #0xE6
    lsls r2, r2, #0x03
    adds r0, r0, r2
    bl sub_804F808
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804830C: .4byte 0x03002E20
    thumb_func_start sub_8048310
sub_8048310:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    ldr r5, _0804833C @ =0x03002E20
    ldr r1, [r4, #0x54]
    ldr r0, [r4, #0x70]
    subs r0, #0x01
    str r0, [r4, #0x70]
    cmp r0, #0x00
    bgt _08048336
    adds r0, r1, #0x0
    movs r1, #0x00
    bl sub_803D9D4
    movs r1, #0xE6
    lsls r1, r1, #0x03
    adds r0, r5, r1
    adds r1, r4, #0x0
    bl sub_804F808
_08048336:
    pop {r4, r5}
    pop {r0}
    bx r0
_0804833C: .4byte 0x03002E20
    thumb_func_start sub_8048340
sub_8048340:
    push {r4, r5, lr}
    adds r1, r0, #0x0
    ldr r0, _0804836C @ =0x03002E20
    ldr r3, [r1, #0x54]
    adds r3, #0xB2
    ldrh r4, [r3, #0x00]
    movs r5, #0x80
    lsls r5, r5, #0x08
    adds r2, r5, #0x0
    movs r5, #0x00
    orrs r2, r4
    strh r2, [r3, #0x00]
    str r5, [r1, #0x14]
    movs r2, #0xE6
    lsls r2, r2, #0x03
    adds r0, r0, r2
    bl sub_804F808
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804836C: .4byte 0x03002E20
    thumb_func_start sub_8048370
sub_8048370:
    push {r4, r5, lr}
    adds r1, r0, #0x0
    ldr r0, _0804839C @ =0x03002E20
    ldr r3, [r1, #0x54]
    adds r3, #0xB2
    ldrh r4, [r3, #0x00]
    movs r5, #0x80
    lsls r5, r5, #0x08
    adds r2, r5, #0x0
    movs r5, #0x00
    orrs r2, r4
    strh r2, [r3, #0x00]
    str r5, [r1, #0x14]
    movs r2, #0xE6
    lsls r2, r2, #0x03
    adds r0, r0, r2
    bl sub_804F808
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804839C: .4byte 0x03002E20
    thumb_func_start sub_80483A0
sub_80483A0:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    mov r9, r0
    ldr r0, [r0, #0x54]
    mov r8, r0
    ldr r4, _080484B0 @ =0x03002E20
    movs r1, #0x24
    adds r1, r1, r4
    mov r10, r1
    ldr r2, _080484B4 @ =0x00000838
    adds r5, r4, r2
    ldr r0, [r5, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _080483D4
    movs r0, #0x04
    bl sub_80522A4
    movs r0, #0x7E
    bl m4aSongNumStart
_080483D4:
    mov r2, r8
    adds r2, #0xB2
    ldrh r1, [r2, #0x00]
    ldr r0, _080484B8 @ =0x0000FFBF
    ands r0, r1
    strh r0, [r2, #0x00]
    ldr r3, _080484BC @ =0x00000C82
    adds r1, r4, r3
    movs r0, #0xB4
    lsls r0, r0, #0x01
    strh r0, [r1, #0x00]
    ldr r0, _080484C0 @ =0x0000080D
    adds r1, r4, r0
    movs r0, #0x02
    strb r0, [r1, #0x00]
    movs r7, #0x00
    ldr r1, _080484C4 @ =0x00000814
    adds r0, r4, r1
    ldrb r2, [r0, #0x00]
    cmp r7, r2
    bge _08048494
_080483FE:
    lsls r0, r7, #0x02
    ldr r3, _080484B0 @ =0x03002E20
    ldr r2, _080484C8 @ =0x00000818
    adds r1, r3, r2
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    cmp r4, r8
    beq _0804848A
    adds r0, r4, #0x0
    adds r0, #0x6A
    movs r3, #0x00
    ldsh r6, [r0, r3]
    cmp r6, #0x00
    bne _0804848A
    adds r5, r4, #0x0
    adds r5, #0x78
    ldrb r0, [r5, #0x00]
    cmp r0, #0x02
    beq _0804848A
    cmp r0, #0x03
    beq _0804848A
    cmp r0, #0x05
    beq _0804848A
    cmp r0, #0x06
    beq _0804848A
    cmp r0, #0x07
    beq _0804848A
    ldr r1, _080484CC @ =0x03003658
    ldr r0, [r1, #0x00]
    cmp r0, r4
    bne _08048448
    ldr r0, _080484D0 @ =0x08048521
    ldr r1, _080484D4 @ =0x080EDB14
    movs r2, #0x00
    bl sub_8030224
    str r4, [r0, #0x54]
_08048448:
    adds r2, r4, #0x0
    adds r2, #0xB4
    ldrh r0, [r2, #0x00]
    movs r3, #0xC0
    lsls r3, r3, #0x02
    adds r1, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    adds r1, r4, #0x0
    adds r1, #0xB6
    movs r0, #0x80
    lsls r0, r0, #0x05
    strh r0, [r1, #0x00]
    subs r2, #0x40
    ldrh r0, [r2, #0x00]
    movs r1, #0x03
    orrs r0, r1
    strh r0, [r2, #0x00]
    ldrb r0, [r5, #0x00]
    cmp r0, #0x01
    bne _08048478
    adds r0, r4, #0x0
    adds r0, #0xBC
    str r6, [r0, #0x00]
_08048478:
    adds r1, r4, #0x0
    adds r1, #0x68
    movs r0, #0xB4
    lsls r0, r0, #0x01
    strh r0, [r1, #0x00]
    adds r0, r4, #0x0
    mov r1, r10
    bl sub_80432D4
_0804848A:
    adds r7, #0x01
    ldr r0, _080484D8 @ =0x03003634
    ldrb r0, [r0, #0x00]
    cmp r7, r0
    blt _080483FE
_08048494:
    movs r0, #0x00
    mov r1, r9
    str r0, [r1, #0x14]
    ldr r0, _080484DC @ =0x0000070C
    add r0, r10
    bl sub_804F808
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_080484B0: .4byte 0x03002E20
_080484B4: .4byte 0x00000838
_080484B8: .4byte 0x0000FFBF
_080484BC: .4byte 0x00000C82
_080484C0: .4byte 0x0000080D
_080484C4: .4byte 0x00000814
_080484C8: .4byte 0x00000818
_080484CC: .4byte 0x03003658
_080484D0: .4byte sub_8048520
_080484D4: .4byte 0x080EDB14
_080484D8: .4byte 0x03003634
_080484DC: .4byte 0x0000070C
    thumb_func_start sub_80484E0
sub_80484E0:
    push {r4, r5, lr}
    ldr r0, _08048504 @ =0x03002E20
    ldr r1, _08048508 @ =0x00000C82
    adds r5, r0, r1
    ldrh r4, [r5, #0x00]
    cmp r4, #0x00
    beq _080484FC
    cmp r4, #0x01
    bne _080484F8
    movs r0, #0x04
    bl sub_80523DC
_080484F8:
    subs r4, #0x01
    strh r4, [r5, #0x00]
_080484FC:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08048504: .4byte 0x03002E20
_08048508: .4byte 0x00000C82
    .byte 0x42, 0x6D, 0x20, 0x23, 0xD1, 0x5E, 0x01, 0x31, 0x01, 0x84, 0x22, 0x23, 0xD1, 0x5E, 0x0A, 0x39
    .byte 0x41, 0x84, 0x70, 0x47
    thumb_func_start sub_8048520
sub_8048520:
    movs r1, #0x00
    strh r1, [r0, #0x10]
    movs r1, #0x80
    lsls r1, r1, #0x01
    strh r1, [r0, #0x24]
    ldrh r2, [r0, #0x34]
    movs r1, #0x01
    orrs r1, r2
    strh r1, [r0, #0x34]
    ldr r2, [r0, #0x54]
    movs r3, #0x20
    ldsh r1, [r2, r3]
    strh r1, [r0, #0x20]
    movs r3, #0x22
    ldsh r1, [r2, r3]
    strh r1, [r0, #0x22]
    bx lr
    .byte 0x00, 0x00, 0x00, 0xB5, 0xE7, 0xF7, 0x75, 0xFF, 0x03, 0x49, 0x03, 0x4A, 0x04, 0x4B, 0xE7, 0xF7
    .byte 0x48, 0xFF, 0x01, 0xBC, 0x00, 0x47, 0x8C, 0xC3, 0x06, 0x08, 0x00, 0x34, 0x01, 0x06, 0x00, 0x01
    .byte 0x00, 0x80, 0x00, 0xB5, 0xE7, 0xF7, 0x65, 0xFF, 0x05, 0x49, 0x80, 0x22, 0x92, 0x00, 0x89, 0x18
    .byte 0x04, 0x4A, 0x04, 0x4B, 0xE7, 0xF7, 0x35, 0xFF, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x8C, 0xC3
    .byte 0x06, 0x08, 0x00, 0x34, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80, 0x00, 0xB5, 0xE7, 0xF7, 0x51, 0xFF
    .byte 0x05, 0x49, 0x80, 0x22, 0xD2, 0x00, 0x89, 0x18, 0x04, 0x4A, 0x04, 0x4B, 0xE7, 0xF7, 0x21, 0xFF
    .byte 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x8C, 0xC3, 0x06, 0x08, 0x00, 0x34, 0x01, 0x06, 0x00, 0x01
    .byte 0x00, 0x80, 0x00, 0xB5, 0xE7, 0xF7, 0x3D, 0xFF, 0x05, 0x49, 0xC0, 0x22, 0xD2, 0x00, 0x89, 0x18
    .byte 0x04, 0x4A, 0x04, 0x4B, 0xE7, 0xF7, 0x0D, 0xFF, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x8C, 0xC3
    .byte 0x06, 0x08, 0x00, 0x34, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80
    thumb_func_start sub_80485DC
sub_80485DC:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r6, r0, #0x0
    ldr r4, [r6, #0x54]
    ldr r7, _08048688 @ =0x03002E20
    movs r0, #0x24
    adds r0, r0, r7
    mov r8, r0
    adds r0, r4, #0x0
    adds r0, #0xAC
    movs r5, #0x00
    strh r5, [r0, #0x00]
    adds r2, r4, #0x0
    adds r2, #0x58
    ldrh r1, [r2, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x08
    adds r0, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    ldr r0, [r4, #0x48]
    adds r1, r3, #0x0
    ands r0, r1
    movs r1, #0xD2
    cmp r0, #0x00
    beq _08048618
    movs r0, #0xBA
    lsls r0, r0, #0x01
    adds r1, r0, #0x0
_08048618:
    adds r0, r4, #0x0
    adds r0, #0x6A
    strh r1, [r0, #0x00]
    adds r0, r4, #0x0
    movs r1, #0x02
    bl sub_803D950
    adds r1, r4, #0x0
    adds r1, #0x66
    movs r2, #0x00
    ldsh r0, [r1, r2]
    cmp r0, #0x00
    beq _08048644
    strh r5, [r1, #0x00]
    ldr r3, _0804868C @ =0x00000838
    adds r0, r7, r3
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _08048644
    movs r0, #0x08
    bl sub_80523DC
_08048644:
    ldr r0, [r4, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _08048660
    adds r2, r4, #0x0
    adds r2, #0xB2
    ldrh r1, [r2, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x06
    adds r0, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
_08048660:
    ldr r0, _08048688 @ =0x03002E20
    ldr r1, _0804868C @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _08048672
    movs r0, #0x10
    bl sub_80522A4
_08048672:
    ldr r0, _08048690 @ =0x0000070C
    add r0, r8
    adds r1, r6, #0x0
    bl sub_804F808
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08048688: .4byte 0x03002E20
_0804868C: .4byte 0x00000838
_08048690: .4byte 0x0000070C
    thumb_func_start sub_8048694
sub_8048694:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    mov r8, r0
    ldr r4, _08048708 @ =0x03002E20
    movs r0, #0x24
    adds r0, r0, r4
    mov r9, r0
    mov r1, r8
    ldr r6, [r1, #0x54]
    movs r5, #0x00
    adds r0, r6, #0x0
    movs r1, #0x00
    bl sub_803D9D4
    adds r1, r6, #0x0
    adds r1, #0x66
    movs r0, #0xB4
    lsls r0, r0, #0x01
    strh r0, [r1, #0x00]
    ldr r1, _0804870C @ =0x00000838
    adds r0, r4, r1
    ldr r0, [r0, #0x00]
    cmp r6, r0
    bne _080486D4
    movs r0, #0x81
    bl m4aSongNumStart
    movs r0, #0x08
    bl sub_80522A4
_080486D4:
    movs r7, #0x00
    ldr r1, _08048710 @ =0x00000815
    adds r0, r4, r1
    ldrb r0, [r0, #0x00]
    cmp r5, r0
    bge _0804876C
_080486E0:
    lsls r1, r7, #0x18
    lsrs r1, r1, #0x18
    mov r0, r9
    bl sub_804AED4
    adds r4, r0, #0x0
    cmp r6, r4
    beq _08048760
    movs r1, #0xBD
    lsls r1, r1, #0x01
    adds r0, r4, r1
    ldrh r5, [r0, #0x00]
    cmp r5, #0x00
    blt _0804871E
    cmp r5, #0x02
    ble _08048718
    ldr r0, _08048714 @ =0x0000100E
    cmp r5, r0
    beq _0804871C
    b _0804871E
_08048708: .4byte 0x03002E20
_0804870C: .4byte 0x00000838
_08048710: .4byte 0x00000815
_08048714: .4byte 0x0000100E
_08048718:
    movs r5, #0x00
    b _08048760
_0804871C:
    ldr r5, _08048734 @ =0x00001009
_0804871E:
    ldr r0, _08048738 @ =0x00000814
    add r0, r9
    ldr r0, [r0, #0x00]
    cmp r6, r0
    bne _08048740
    adds r1, r5, #0x0
    ldr r0, _0804873C @ =0x0000100B
    bl sub_804F15C
    b _0804874C
    .byte 0x00, 0x00
_08048734: .4byte 0x00001009
_08048738: .4byte 0x00000814
_0804873C: .4byte 0x0000100B
_08048740:
    cmp r4, r0
    bne _0804874C
    adds r0, r5, #0x0
    movs r1, #0x02
    bl sub_804F15C
_0804874C:
    adds r0, r6, #0x0
    adds r1, r5, #0x0
    bl sub_803D9D4
    adds r0, r4, #0x0
    movs r1, #0x00
    bl sub_803D9D4
    cmp r5, #0x00
    bne _08048782
_08048760:
    adds r7, #0x01
    ldr r0, _080487B0 @ =0x000007F1
    add r0, r9
    ldrb r0, [r0, #0x00]
    cmp r7, r0
    blt _080486E0
_0804876C:
    cmp r5, #0x00
    bne _08048782
    ldr r0, _080487B4 @ =0x00000814
    add r0, r9
    ldr r0, [r0, #0x00]
    cmp r6, r0
    bne _08048782
    ldr r0, _080487B8 @ =0x0000100B
    movs r1, #0x00
    bl sub_804F15C
_08048782:
    mov r0, r9
    movs r1, #0x00
    bl sub_804AED4
    adds r4, r0, #0x0
    cmp r6, r4
    beq _080487C8
    mov r0, r8
    str r4, [r0, #0x54]
    ldrh r1, [r0, #0x34]
    ldr r0, _080487BC @ =0x0000FFFD
    ands r0, r1
    movs r2, #0x00
    ldr r1, _080487C0 @ =0x0000FFFE
    ands r0, r1
    mov r1, r8
    strh r0, [r1, #0x34]
    mov r0, r8
    adds r0, #0x70
    strh r2, [r0, #0x00]
    ldr r0, _080487C4 @ =0x0804886D
    str r0, [r1, #0x14]
    b _080487D2
_080487B0: .4byte 0x000007F1
_080487B4: .4byte 0x00000814
_080487B8: .4byte 0x0000100B
_080487BC: .4byte 0x0000FFFD
_080487C0: .4byte 0x0000FFFE
_080487C4: .4byte sub_804886C
_080487C8:
    ldr r0, _080487E0 @ =0x0000070C
    add r0, r9
    mov r1, r8
    bl sub_804F808
_080487D2:
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_080487E0: .4byte 0x0000070C
    thumb_func_start sub_80487E4
sub_80487E4:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    adds r3, r0, #0x0
    ldr r6, [r3, #0x54]
    ldr r0, [r6, #0x00]
    mov r12, r0
    ldr r1, _08048864 @ =0x080E645C
    mov r8, r1
    movs r7, #0x26
    ldsh r2, [r3, r7]
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08048804
    adds r0, #0x3F
_08048804:
    asrs r5, r0, #0x06
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r5
    ldr r1, _08048868 @ =0x000003FF
    mov r9, r1
    ands r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r1, [r0, #0x00]
    adds r4, r3, #0x0
    adds r4, #0x74
    movs r7, #0x00
    ldsh r0, [r4, r7]
    muls r1, r0
    lsls r0, r1, #0x01
    adds r0, r0, r1
    cmp r0, #0x00
    bge _0804882C
    adds r0, #0x0F
_0804882C:
    asrs r0, r0, #0x04
    add r0, r12
    str r0, [r3, #0x00]
    ldr r6, [r6, #0x04]
    adds r0, r5, #0x0
    mov r1, r9
    ands r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r1, [r0, #0x00]
    movs r2, #0x00
    ldsh r0, [r4, r2]
    muls r1, r0
    lsls r0, r1, #0x01
    adds r0, r0, r1
    cmp r0, #0x00
    bge _08048850
    adds r0, #0x0F
_08048850:
    asrs r0, r0, #0x04
    adds r0, r6, r0
    str r0, [r3, #0x04]
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08048864: .4byte 0x080E645C
_08048868: .4byte 0x000003FF
    thumb_func_start sub_804886C
sub_804886C:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    adds r4, r0, #0x0
    ldr r1, _0804889C @ =0x03002E20
    movs r0, #0x24
    adds r0, r0, r1
    mov r8, r0
    ldr r7, [r4, #0x54]
    adds r6, r4, #0x0
    adds r0, r6, #0x0
    adds r0, #0x70
    movs r2, #0x00
    ldsh r0, [r0, r2]
    adds r2, r1, #0x0
    cmp r0, #0x07
    bls _08048892
    b _08048C0E
_08048892:
    lsls r0, r0, #0x02
    ldr r1, _080488A0 @ =0x080488A4
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_0804889C: .4byte 0x03002E20
_080488A0: .4byte 0x080488A4
    .byte 0xC4, 0x88, 0x04, 0x08, 0x24, 0x89, 0x04, 0x08, 0xE0, 0x89, 0x04, 0x08, 0xE8, 0x89, 0x04, 0x08
    .byte 0xB0, 0x8A, 0x04, 0x08, 0xBE, 0x8A, 0x04, 0x08, 0x6C, 0x8B, 0x04, 0x08, 0xCE, 0x8B, 0x04, 0x08
    .byte 0x21, 0x1C, 0x70, 0x31, 0x00, 0x22, 0x01, 0x20, 0x08, 0x80, 0x80, 0x21, 0x49, 0x00, 0x20, 0x1C
    .byte 0x58, 0x30, 0x01, 0x80, 0x1C, 0x30, 0x02, 0x80, 0xF2, 0x84, 0x02, 0x30, 0x02, 0x80, 0x21, 0x1C
    .byte 0x72, 0x31, 0x40, 0x20, 0x08, 0x80, 0x60, 0x6D, 0x7C, 0x30, 0x01, 0x88, 0x26, 0x23, 0xE0, 0x5E
    .byte 0x40, 0x1A, 0x04, 0x49, 0x08, 0x40, 0x04, 0x4D, 0x40, 0x19, 0x04, 0x49, 0x88, 0x42, 0x09, 0xD8
    .byte 0x03, 0x48, 0x08, 0xE0, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00
    .byte 0x5C, 0xAC, 0x07, 0x08, 0x1E, 0x48, 0xA0, 0x64, 0xA1, 0x8E, 0x01, 0x20, 0x08, 0x43, 0xA0, 0x86
    .byte 0x25, 0x1C, 0x72, 0x35, 0x28, 0x88, 0x01, 0x38, 0x28, 0x80, 0x21, 0x1C, 0x74, 0x31, 0x08, 0x88
    .byte 0x01, 0x30, 0x08, 0x80, 0x26, 0x21, 0x70, 0x5E, 0xC0, 0x22, 0xD2, 0x00, 0x80, 0x18, 0xF0, 0x84
    .byte 0x20, 0x1C, 0xFF, 0xF7, 0x4D, 0xFF, 0xB9, 0x68, 0x00, 0x23, 0xE8, 0x5E, 0x40, 0x03, 0x40, 0x18
    .byte 0xC0, 0x21, 0xC9, 0x02, 0x40, 0x18, 0xB0, 0x60, 0x00, 0x22, 0xA8, 0x5E, 0x00, 0x28, 0x1F, 0xDC
    .byte 0x38, 0x1C, 0x6A, 0x30, 0x00, 0x23, 0xC0, 0x5E, 0x00, 0x28, 0x15, 0xDC, 0x39, 0x1C, 0xAC, 0x31
    .byte 0xB4, 0x20, 0x40, 0x00, 0x08, 0x80, 0x21, 0x1C, 0x70, 0x31, 0x02, 0x20, 0x08, 0x80, 0x05, 0x48
    .byte 0x40, 0x44, 0x00, 0x68, 0x87, 0x42, 0x0B, 0xD1, 0x02, 0x20, 0x09, 0xF0, 0x89, 0xFC, 0x07, 0xE0
    .byte 0x54, 0xAC, 0x07, 0x08, 0x14, 0x08, 0x00, 0x00, 0x21, 0x1C, 0x70, 0x31, 0x06, 0x20, 0x08, 0x80
    .byte 0x60, 0x6D, 0x7C, 0x30, 0x01, 0x88, 0x26, 0x25, 0x60, 0x5F, 0x40, 0x1A, 0x04, 0x49, 0x08, 0x40
    .byte 0x04, 0x49, 0x40, 0x18, 0x04, 0x49, 0x88, 0x42, 0x0A, 0xD8, 0x04, 0x48, 0xA0, 0x64, 0x24, 0xE1
    .byte 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x5C, 0xAC, 0x07, 0x08
    .byte 0x01, 0x48, 0xA0, 0x64, 0x19, 0xE1, 0x00, 0x00, 0x54, 0xAC, 0x07, 0x08, 0x21, 0x1C, 0x70, 0x31
    .byte 0x03, 0x20, 0x08, 0x80, 0x26, 0x22, 0xB0, 0x5E, 0xC0, 0x23, 0xDB, 0x00, 0xC0, 0x18, 0xF0, 0x84
    .byte 0x60, 0x6D, 0x7C, 0x30, 0x01, 0x88, 0x26, 0x25, 0x60, 0x5F, 0x40, 0x1A, 0x04, 0x49, 0x08, 0x40
    .byte 0x04, 0x49, 0x40, 0x18, 0x04, 0x49, 0x88, 0x42, 0x0A, 0xD8, 0x04, 0x48, 0x09, 0xE0, 0x00, 0x00
    .byte 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x5C, 0xAC, 0x07, 0x08
    .byte 0x14, 0x48, 0xA0, 0x64, 0x20, 0x1C, 0xFF, 0xF7, 0xDB, 0xFE, 0xBA, 0x68, 0x21, 0x1C, 0x76, 0x31
    .byte 0x11, 0x4B, 0x00, 0x25, 0x48, 0x5F, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D
    .byte 0x80, 0x00, 0xC0, 0x18, 0x00, 0x68, 0x80, 0x00, 0x80, 0x18, 0xC0, 0x22, 0xD2, 0x02, 0x80, 0x18
    .byte 0xB0, 0x60, 0x80, 0x23, 0xDB, 0x00, 0x18, 0x1C, 0x0D, 0x88, 0x40, 0x19, 0x08, 0x80, 0x38, 0x1C
    .byte 0x6A, 0x30, 0x00, 0x21, 0x40, 0x5E, 0x00, 0x28, 0x08, 0xDD, 0x21, 0x1C, 0x70, 0x31, 0x06, 0x20
    .byte 0x0E, 0xE0, 0x00, 0x00, 0x54, 0xAC, 0x07, 0x08, 0x5C, 0x64, 0x0E, 0x08, 0x38, 0x1C, 0xAC, 0x30
    .byte 0x00, 0x22, 0x80, 0x5E, 0x00, 0x28, 0x00, 0xDD, 0xBF, 0xE0, 0x21, 0x1C, 0x70, 0x31, 0x04, 0x20
    .byte 0x08, 0x80, 0x05, 0x48, 0x40, 0x44, 0x00, 0x68, 0x87, 0x42, 0x00, 0xD0, 0xB5, 0xE0, 0x02, 0x20
    .byte 0x09, 0xF0, 0x9A, 0xFC, 0xB1, 0xE0, 0x00, 0x00, 0x14, 0x08, 0x00, 0x00, 0x21, 0x1C, 0x72, 0x31
    .byte 0x00, 0x20, 0x08, 0x80, 0x02, 0x39, 0x05, 0x20, 0x08, 0x80, 0x22, 0x1C, 0x72, 0x32, 0x10, 0x88
    .byte 0x01, 0x30, 0x10, 0x80, 0x21, 0x1C, 0x74, 0x31, 0x08, 0x88, 0x01, 0x38, 0x08, 0x80, 0x26, 0x23
    .byte 0xF0, 0x5E, 0xC0, 0x25, 0xED, 0x00, 0x40, 0x19, 0xF0, 0x84, 0x60, 0x6D, 0x7C, 0x30, 0x01, 0x88
    .byte 0x26, 0x23, 0xE0, 0x5E, 0x40, 0x1A, 0x05, 0x49, 0x08, 0x40, 0x05, 0x4D, 0x40, 0x19, 0x05, 0x49
    .byte 0x15, 0x1C, 0x88, 0x42, 0x0A, 0xD8, 0x04, 0x48, 0x09, 0xE0, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00
    .byte 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x5C, 0xAC, 0x07, 0x08, 0x13, 0x48, 0xA0, 0x64
    .byte 0x20, 0x1C, 0xFF, 0xF7, 0x65, 0xFE, 0xBA, 0x68, 0x20, 0x1C, 0x76, 0x30, 0x10, 0x49, 0x00, 0x23
    .byte 0xC0, 0x5E, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18
    .byte 0x00, 0x68, 0x00, 0x23, 0xE9, 0x5E, 0x80, 0x00, 0x49, 0x03, 0x89, 0x18, 0x40, 0x18, 0xC0, 0x21
    .byte 0xC9, 0x02, 0x40, 0x18, 0xB0, 0x60, 0x00, 0x22, 0xA8, 0x5E, 0x3F, 0x28, 0x5D, 0xDD, 0x05, 0x48
    .byte 0x40, 0x44, 0x21, 0x1C, 0x06, 0xF0, 0x56, 0xFE, 0x57, 0xE0, 0x00, 0x00, 0x54, 0xAC, 0x07, 0x08
    .byte 0x5C, 0x64, 0x0E, 0x08, 0x0C, 0x07, 0x00, 0x00, 0x21, 0x1C, 0x70, 0x31, 0x07, 0x20, 0x08, 0x80
    .byte 0x1F, 0x4B, 0x9C, 0x46, 0x26, 0x25, 0x72, 0x5F, 0x10, 0x1C, 0x00, 0x2A, 0x00, 0xDA, 0x3F, 0x30
    .byte 0x83, 0x11, 0x80, 0x20, 0x40, 0x00, 0xC0, 0x1A, 0x1A, 0x49, 0x89, 0x46, 0x08, 0x40, 0x80, 0x00
    .byte 0x60, 0x44, 0x01, 0x68, 0x38, 0x1C, 0x4E, 0x30, 0x00, 0x25, 0x40, 0x5F, 0x00, 0x02, 0x40, 0x18
    .byte 0xB0, 0x62, 0x18, 0x1C, 0x49, 0x46, 0x08, 0x40, 0x80, 0x00, 0x60, 0x44, 0x01, 0x68, 0x38, 0x1C
    .byte 0x50, 0x30, 0x00, 0x22, 0x80, 0x5E, 0x00, 0x02, 0x40, 0x18, 0xF0, 0x62, 0x84, 0x20, 0x80, 0x02
    .byte 0x30, 0x63, 0x0D, 0x49, 0x20, 0x1C, 0x58, 0x30, 0x01, 0x80, 0x30, 0x68, 0xB1, 0x6A, 0x40, 0x18
    .byte 0x30, 0x60, 0x70, 0x68, 0xF1, 0x6A, 0x40, 0x18, 0x70, 0x60, 0xB0, 0x68, 0x31, 0x6B, 0x40, 0x18
    .byte 0xB0, 0x60, 0x00, 0x28, 0x0C, 0xDB, 0x05, 0x4B, 0xC8, 0x18, 0x20, 0x63, 0x0D, 0xE0, 0x00, 0x00
    .byte 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x03, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xD0, 0xFF, 0xFF
    .byte 0x08, 0x48, 0x40, 0x44, 0x21, 0x1C, 0x06, 0xF0, 0xFD, 0xFD
_08048C0E:
    adds r0, r7, #0x0
    adds r0, #0x36
    ldrb r1, [r0, #0x00]
    adds r0, r6, #0x0
    adds r0, #0x36
    strb r1, [r0, #0x00]
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00, 0x0C, 0x07, 0x00, 0x00
    thumb_func_start sub_8048C2C
sub_8048C2C:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    ldr r0, _08048C64 @ =0x03002E20
    movs r1, #0xE6
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_804F7AC
    adds r4, r0, #0x0
    bl sub_80437D4
    str r5, [r4, #0x54]
    ldrh r1, [r4, #0x34]
    ldr r0, _08048C68 @ =0x0000FFFD
    ands r0, r1
    movs r2, #0x00
    ldr r1, _08048C6C @ =0x0000FFFE
    ands r0, r1
    strh r0, [r4, #0x34]
    adds r0, r4, #0x0
    adds r0, #0x70
    strh r2, [r0, #0x00]
    ldr r0, _08048C70 @ =0x0804886D
    str r0, [r4, #0x14]
    adds r0, r4, #0x0
    pop {r4, r5}
    pop {r1}
    bx r1
_08048C64: .4byte 0x03002E20
_08048C68: .4byte 0x0000FFFD
_08048C6C: .4byte 0x0000FFFE
_08048C70: .4byte sub_804886C
    thumb_func_start sub_8048C74
sub_8048C74:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    movs r0, #0xDC
    lsls r0, r0, #0x03
    adds r5, r4, r0
    ldr r1, _08048D14 @ =0x0202A400
    movs r2, #0x80
    lsls r2, r2, #0x08
    adds r0, r5, #0x0
    bl frmheap_init
    ldr r0, _08048D18 @ =0x000007D7
    adds r1, r4, r0
    movs r6, #0x00
    movs r0, #0x01
    strb r0, [r1, #0x00]
    ldr r0, _08048D1C @ =0x000007DA
    adds r1, r4, r0
    movs r2, #0x00
    movs r0, #0xC0
    lsls r0, r0, #0x01
    strh r0, [r1, #0x00]
    ldr r0, _08048D20 @ =0x000007DC
    adds r1, r4, r0
    movs r0, #0x02
    strb r0, [r1, #0x00]
    ldr r1, _08048D24 @ =0x000007E9
    adds r0, r4, r1
    strb r2, [r0, #0x00]
    ldr r1, _08048D28 @ =0x00000BE4
    adds r0, r4, r1
    str r6, [r0, #0x00]
    adds r0, r4, #0x0
    bl sub_804AE34
    bl sub_800EDC4
    ldr r0, _08048D2C @ =0x000007D4
    adds r2, r4, r0
    ldrb r1, [r2, #0x00]
    movs r0, #0x80
    orrs r0, r1
    movs r1, #0xBF
    ands r0, r1
    strb r0, [r2, #0x00]
    ldr r1, _08048D30 @ =0x0000070C
    adds r0, r4, r1
    adds r1, r5, #0x0
    movs r2, #0x10
    bl sub_804F750
    ldr r1, _08048D34 @ =0x0000071C
    adds r0, r4, r1
    adds r1, r5, #0x0
    movs r2, #0x10
    bl sub_804F750
    ldr r1, _08048D38 @ =0x0000072C
    adds r0, r4, r1
    adds r1, r5, #0x0
    bl sub_805B4A8
    ldr r1, _08048D3C @ =0x000006FC
    adds r0, r4, r1
    adds r1, r5, #0x0
    movs r2, #0x00
    bl sub_804F750
    movs r0, #0xC7
    lsls r0, r0, #0x04
    adds r1, r4, r0
    movs r0, #0x80
    lsls r0, r0, #0x01
    strh r0, [r1, #0x00]
    ldr r1, _08048D40 @ =0x00000C88
    adds r4, r4, r1
    str r6, [r4, #0x00]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_08048D14: .4byte 0x0202A400
_08048D18: .4byte 0x000007D7
_08048D1C: .4byte 0x000007DA
_08048D20: .4byte 0x000007DC
_08048D24: .4byte 0x000007E9
_08048D28: .4byte 0x00000BE4
_08048D2C: .4byte 0x000007D4
_08048D30: .4byte 0x0000070C
_08048D34: .4byte 0x0000071C
_08048D38: .4byte 0x0000072C
_08048D3C: .4byte 0x000006FC
_08048D40: .4byte 0x00000C88
    thumb_func_start sub_8048D44
sub_8048D44:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x014
    adds r5, r0, #0x0
    bl dmaq_getVBlankDmaQueue
    ldr r1, _08048D98 @ =0x08066F0C
    ldr r2, _08048D9C @ =0x06012000
    ldr r3, _08048DA0 @ =0x80001000
    bl dmaq_enqueue
    ldr r4, _08048DA4 @ =0x08066E4C
    movs r0, #0x01
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r1, #0x60
    adds r0, r4, #0x0
    movs r2, #0x28
    bl CpuFastSet
    adds r0, r5, #0x0
    bl sub_804EC30
    adds r0, r5, #0x0
    bl sub_8049654
    ldr r1, [r5, #0x00]
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _08048DC8
    movs r0, #0x02
    ands r1, r0
    cmp r1, #0x00
    beq _08048DAC
    ldr r1, _08048DA8 @ =0x0804B13D
    b _08048DCA
    .byte 0x00, 0x00
_08048D98: .4byte 0x08066F0C
_08048D9C: .4byte 0x06012000
_08048DA0: .4byte 0x80001000
_08048DA4: .4byte 0x08066E4C
_08048DA8: .4byte sub_804B13C
_08048DAC:
    adds r0, r5, #0x0
    bl sub_8032C2C
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    ldr r1, _08048DC0 @ =0x0804B0A1
    cmp r0, #0x0E
    bne _08048DCA
    ldr r1, _08048DC4 @ =0x0804B0E9
    b _08048DCA
_08048DC0: .4byte sub_804B0A0
_08048DC4: .4byte sub_804B0E8
_08048DC8:
    ldr r1, _08048E30 @ =0x0804B019
_08048DCA:
    movs r2, #0xFA
    lsls r2, r2, #0x03
    adds r0, r5, r2
    str r1, [r0, #0x00]
    bl main_frameProc
    adds r0, r5, #0x0
    bl loadtrack_loadObjects
    bl main_frameProc
    adds r0, r5, #0x0
    bl sub_804C12C
    ldr r3, _08048E34 @ =0x000007D4
    adds r2, r5, r3
    ldrb r1, [r2, #0x00]
    movs r0, #0xF0
    ands r0, r1
    movs r1, #0x01
    orrs r0, r1
    strb r0, [r2, #0x00]
    ldr r0, _08048E38 @ =0x00000C88
    adds r0, r5, r0
    str r0, [sp, #0x010]
    ldr r1, _08048E3C @ =0x03005C60
    movs r2, #0x00
    adds r0, r1, #0x0
    adds r0, #0x1C
_08048E04:
    str r2, [r0, #0x00]
    subs r0, #0x04
    cmp r0, r1
    bge _08048E04
    ldr r1, _08048E40 @ =0x000007DA
    adds r4, r5, r1
    ldrh r2, [r4, #0x00]
    movs r1, #0xF0
    lsls r1, r1, #0x04
    ands r1, r2
    movs r0, #0x80
    lsls r0, r0, #0x02
    cmp r1, r0
    bne _08048E22
    b _08048F3C
_08048E22:
    cmp r1, r0
    bgt _08048E44
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    beq _08048E5A
    b _08049124
_08048E30: .4byte sub_804B018
_08048E34: .4byte 0x000007D4
_08048E38: .4byte 0x00000C88
_08048E3C: .4byte 0x03005C60
_08048E40: .4byte 0x000007DA
_08048E44:
    movs r0, #0x80
    lsls r0, r0, #0x03
    cmp r1, r0
    bne _08048E4E
    b _080490B8
_08048E4E:
    movs r0, #0x80
    lsls r0, r0, #0x04
    cmp r1, r0
    bne _08048E58
    b _08049080
_08048E58:
    b _08049124
_08048E5A:
    adds r0, r5, #0x0
    bl sub_804AFE4
    ldr r2, [sp, #0x010]
    ldr r0, [r2, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r0, #0x00
    bge _08048EB0
    movs r1, #0x06
    ldr r3, _08048E90 @ =0x00000BE4
    adds r0, r5, r3
    str r1, [r0, #0x00]
    ldr r0, [sp, #0x010]
    ldr r1, [r0, #0x00]
    ands r2, r1
    cmp r2, #0x00
    beq _08048E98
    movs r0, #0x10
    ands r1, r0
    cmp r1, #0x00
    beq _08048E98
    ldr r2, _08048E94 @ =0x000007E6
    adds r1, r5, r2
    movs r0, #0x85
    lsls r0, r0, #0x08
    b _08048EA0
_08048E90: .4byte 0x00000BE4
_08048E94: .4byte 0x000007E6
_08048E98:
    ldr r3, _08048EAC @ =0x000007E6
    adds r1, r5, r3
    movs r0, #0x83
    lsls r0, r0, #0x08
_08048EA0:
    strh r0, [r1, #0x00]
    adds r0, r5, #0x0
    bl sub_804F394
    b _08048F22
    .byte 0x00, 0x00
_08048EAC: .4byte 0x000007E6
_08048EB0:
    ldr r1, _08048ECC @ =0x000007DA
    adds r0, r5, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x10
    ands r0, r1
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    cmp r1, #0x00
    bne _08048ED4
    ldr r2, _08048ED0 @ =0x00000BE4
    adds r0, r5, r2
    str r1, [r0, #0x00]
    b _08048F22
    .byte 0x00, 0x00
_08048ECC: .4byte 0x000007DA
_08048ED0: .4byte 0x00000BE4
_08048ED4:
    movs r1, #0x06
    ldr r3, _08048F0C @ =0x00000BE4
    adds r0, r5, r3
    str r1, [r0, #0x00]
    ldr r0, _08048F10 @ =0x03002C60
    ldrh r0, [r0, #0x0E]
    movs r1, #0x03
    cmp r0, #0x00
    beq _08048EE8
    movs r1, #0x05
_08048EE8:
    lsls r0, r1, #0x08
    ldr r2, _08048F14 @ =0xFFFF8000
    adds r1, r2, #0x0
    adds r0, r0, r1
    ldr r3, _08048F18 @ =0x000007E6
    adds r1, r5, r3
    strh r0, [r1, #0x00]
    ldrh r1, [r4, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _08048F1C
    adds r0, r5, #0x0
    bl sub_804EA0C
    b _08048F22
    .byte 0x00, 0x00
_08048F0C: .4byte 0x00000BE4
_08048F10: .4byte 0x03002C60
_08048F14: .4byte 0xFFFF8000
_08048F18: .4byte 0x000007E6
_08048F1C:
    adds r0, r5, #0x0
    bl sub_804F3D8
_08048F22:
    ldr r0, _08048F34 @ =0x000007F1
    adds r1, r5, r0
    movs r2, #0x00
    movs r0, #0x08
    strb r0, [r1, #0x00]
    ldr r1, _08048F38 @ =0x00000BEE
    adds r0, r5, r1
    strh r2, [r0, #0x00]
    b _08049124
_08048F34: .4byte 0x000007F1
_08048F38: .4byte 0x00000BEE
_08048F3C:
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r2
    cmp r0, #0x00
    beq _08048F4E
    adds r0, r5, #0x0
    bl sub_804EA0C
    b _08048F5A
_08048F4E:
    adds r0, r5, #0x0
    bl sub_804F394
    adds r0, r5, #0x0
    bl sub_804F3D8
_08048F5A:
    movs r0, #0x06
    ldr r3, _08049048 @ =0x00000BE4
    adds r2, r5, r3
    str r0, [r2, #0x00]
    ldr r0, _0804904C @ =0x000007F1
    adds r1, r5, r0
    movs r0, #0x01
    strb r0, [r1, #0x00]
    ldr r1, _08049050 @ =0x000007DA
    adds r0, r5, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    mov r10, r2
    cmp r0, #0x00
    bne _08049012
    ldr r2, [sp, #0x010]
    ldr r0, [r2, #0x00]
    cmp r0, #0x00
    blt _08049012
    movs r3, #0x00
    mov r9, r3
    movs r6, #0x00
    movs r0, #0xBF
    lsls r0, r0, #0x04
    adds r7, r5, r0
_08048F90:
    lsls r0, r6, #0x0C
    ldr r1, _08049054 @ =0x02020400
    adds r4, r0, r1
    adds r0, r4, #0x0
    adds r0, #0x08
    ldrh r2, [r0, #0x02]
    ldrb r3, [r0, #0x09]
    ldrb r1, [r4, #0x08]
    mov r8, r1
    cmp r6, #0x00
    bne _08048FB6
    movs r1, #0x00
    ldr r0, _08049058 @ =0x03002C60
    ldrh r0, [r0, #0x00]
    cmp r0, #0x00
    bne _08048FB2
    movs r1, #0x01
_08048FB2:
    cmp r1, #0x00
    beq _08048FFC
_08048FB6:
    cmp r6, #0x01
    bne _08048FCA
    movs r1, #0x00
    ldr r0, _08049058 @ =0x03002C60
    ldrh r0, [r0, #0x02]
    cmp r0, #0x00
    bne _08048FC6
    movs r1, #0x01
_08048FC6:
    cmp r1, #0x00
    beq _08048FFC
_08048FCA:
    cmp r2, #0x00
    beq _08048FFC
    ldr r2, _0804905C @ =0x000007DD
    adds r0, r5, r2
    ldrb r0, [r0, #0x00]
    cmp r0, r3
    bne _08048FFC
    movs r3, #0x01
    mov r9, r3
    ldr r0, _0804904C @ =0x000007F1
    adds r1, r5, r0
    ldrb r0, [r1, #0x00]
    adds r0, #0x01
    strb r0, [r1, #0x00]
    adds r0, r5, #0x0
    mov r1, r8
    movs r2, #0x01
    bl sub_804AE58
    adds r0, r7, #0x0
    adds r7, #0x18
    adds r1, r4, #0x0
    adds r1, #0x28
    bl sub_8030800
_08048FFC:
    adds r6, #0x01
    cmp r6, #0x01
    ble _08048F90
    mov r1, r9
    cmp r1, #0x00
    beq _08049012
    ldr r2, _08049050 @ =0x000007DA
    adds r1, r5, r2
    movs r0, #0x88
    lsls r0, r0, #0x06
    strh r0, [r1, #0x00]
_08049012:
    ldr r3, _08049060 @ =0x00000BEE
    adds r0, r5, r3
    movs r1, #0x00
    strh r1, [r0, #0x00]
    ldr r1, [sp, #0x010]
    ldr r0, [r1, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r0, #0x00
    bge _08049078
    movs r0, #0x06
    mov r3, r10
    str r0, [r3, #0x00]
    ldr r1, [r1, #0x00]
    ands r2, r1
    cmp r2, #0x00
    beq _08049068
    movs r0, #0x10
    ands r1, r0
    cmp r1, #0x00
    beq _08049068
    ldr r0, _08049064 @ =0x000007E6
    adds r1, r5, r0
    movs r0, #0x85
    lsls r0, r0, #0x08
    strh r0, [r1, #0x00]
    b _08049124
_08049048: .4byte 0x00000BE4
_0804904C: .4byte 0x000007F1
_08049050: .4byte 0x000007DA
_08049054: .4byte 0x02020400
_08049058: .4byte 0x03002C60
_0804905C: .4byte 0x000007DD
_08049060: .4byte 0x00000BEE
_08049064: .4byte 0x000007E6
_08049068:
    ldr r2, _08049074 @ =0x000007E6
    adds r1, r5, r2
    movs r0, #0x83
    lsls r0, r0, #0x08
    strh r0, [r1, #0x00]
    b _08049124
_08049074: .4byte 0x000007E6
_08049078:
    adds r0, r5, #0x0
    bl sub_804AFE4
    b _08049124
_08049080:
    movs r1, #0x06
    ldr r3, _080490A8 @ =0x00000BE4
    adds r0, r5, r3
    str r1, [r0, #0x00]
    movs r1, #0xFE
    lsls r1, r1, #0x03
    adds r0, r5, r1
    ldrb r1, [r0, #0x00]
    ldr r2, _080490AC @ =0x000007F1
    adds r0, r5, r2
    movs r2, #0x00
    strb r1, [r0, #0x00]
    adds r3, #0x0A
    adds r0, r5, r3
    strh r2, [r0, #0x00]
    ldr r0, _080490B0 @ =0x000007E6
    adds r1, r5, r0
    ldr r0, _080490B4 @ =0x0000FFFF
    strh r0, [r1, #0x00]
    b _08049124
_080490A8: .4byte 0x00000BE4
_080490AC: .4byte 0x000007F1
_080490B0: .4byte 0x000007E6
_080490B4: .4byte 0x0000FFFF
_080490B8:
    movs r1, #0x06
    ldr r2, _08049170 @ =0x00000BE4
    adds r0, r5, r2
    str r1, [r0, #0x00]
    movs r3, #0xFE
    lsls r3, r3, #0x03
    adds r0, r5, r3
    ldrb r0, [r0, #0x00]
    ldr r1, _08049174 @ =0x000007F1
    adds r6, r5, r1
    movs r1, #0x00
    strb r0, [r6, #0x00]
    adds r2, #0x0A
    adds r0, r5, r2
    strh r1, [r0, #0x00]
    adds r0, r5, #0x0
    bl sub_804AFE4
    ldr r2, _08049178 @ =0x03002C60
    ldrh r0, [r2, #0x06]
    movs r1, #0x03
    cmp r0, #0x00
    beq _080490E8
    movs r1, #0x05
_080490E8:
    lsls r0, r1, #0x08
    ldr r3, _0804917C @ =0xFFFF8000
    adds r1, r3, #0x0
    adds r0, r0, r1
    ldr r3, _08049180 @ =0x000007E6
    adds r1, r5, r3
    strh r0, [r1, #0x00]
    movs r1, #0x00
    ldrh r0, [r2, #0x0A]
    cmp r0, #0x00
    bne _08049100
    movs r1, #0x01
_08049100:
    cmp r1, #0x00
    beq _08049124
    movs r4, #0x00
    ldrb r6, [r6, #0x00]
    cmp r4, r6
    bge _08049124
    ldr r0, _08049184 @ =0x000007F4
    adds r6, r5, r0
_08049110:
    ldm r6!, {r0}
    ldr r1, _08049188 @ =0x00001008
    bl sub_803D9D4
    adds r4, #0x01
    ldr r1, _08049174 @ =0x000007F1
    adds r0, r5, r1
    ldrb r0, [r0, #0x00]
    cmp r4, r0
    blt _08049110
_08049124:
    ldr r2, _0804918C @ =0x000007DA
    adds r0, r5, r2
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    bne _08049136
    b _08049394
_08049136:
    bl sub_8002C24
    movs r1, #0x03
    ands r1, r0
    cmp r1, #0x00
    beq _08049150
    ldr r3, _0804918C @ =0x000007DA
    adds r0, r5, r3
    ldrh r1, [r0, #0x00]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    beq _08049230
_08049150:
    movs r7, #0x07
    ldr r1, _08049190 @ =0x00000814
    adds r0, r5, r1
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    beq _08049194
    ldr r2, _08049184 @ =0x000007F4
    adds r0, r5, r2
    ldr r0, [r0, #0x00]
    adds r0, #0x4C
    ldrb r0, [r0, #0x00]
    mov r8, r7
    mov r3, r8
    ands r3, r0
    mov r8, r3
    b _08049198
_08049170: .4byte 0x00000BE4
_08049174: .4byte 0x000007F1
_08049178: .4byte 0x03002C60
_0804917C: .4byte 0xFFFF8000
_08049180: .4byte 0x000007E6
_08049184: .4byte 0x000007F4
_08049188: .4byte 0x00001008
_0804918C: .4byte 0x000007DA
_08049190: .4byte 0x00000814
_08049194:
    movs r0, #0x00
    mov r8, r0
_08049198:
    movs r6, #0x00
    ldr r1, _08049224 @ =0x000007F1
    adds r0, r5, r1
    ldrb r0, [r0, #0x00]
    cmp r6, r0
    bge _08049270
_080491A4:
    lsls r2, r6, #0x02
    mov r9, r2
    adds r3, r6, #0x1
    mov r10, r3
    cmp r6, #0x00
    ble _080491E2
    ldr r0, _08049228 @ =0x080EDC34
    ldr r1, _0804922C @ =0x000007F4
    adds r3, r5, r1
    movs r2, #0x07
    mov r12, r2
    mov r2, r8
    lsls r1, r2, #0x05
    adds r4, r6, #0x0
    lsls r2, r7, #0x02
    adds r1, r1, r0
    adds r2, r2, r1
_080491C6:
    ldr r0, [r3, #0x00]
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    mov r0, r12
    ands r0, r1
    ldr r1, [r2, #0x00]
    cmp r0, r1
    bne _080491DA
    subs r2, #0x04
    subs r7, #0x01
_080491DA:
    adds r3, #0x04
    subs r4, #0x01
    cmp r4, #0x00
    bne _080491C6
_080491E2:
    movs r3, #0xFE
    lsls r3, r3, #0x03
    adds r0, r5, r3
    ldrb r0, [r0, #0x00]
    cmp r6, r0
    blt _08049206
    ldr r2, _08049228 @ =0x080EDC34
    lsls r1, r7, #0x02
    mov r3, r8
    lsls r0, r3, #0x05
    adds r1, r1, r0
    adds r1, r1, r2
    subs r7, #0x01
    ldr r1, [r1, #0x00]
    adds r0, r5, #0x0
    movs r2, #0x00
    bl sub_804AE58
_08049206:
    ldr r1, _0804922C @ =0x000007F4
    adds r0, r5, r1
    add r0, r9
    ldr r0, [r0, #0x00]
    adds r0, #0xC4
    movs r1, #0x00
    strb r1, [r0, #0x00]
    mov r6, r10
    ldr r2, _08049224 @ =0x000007F1
    adds r0, r5, r2
    ldrb r0, [r0, #0x00]
    cmp r6, r0
    blt _080491A4
    b _08049270
    .byte 0x00, 0x00
_08049224: .4byte 0x000007F1
_08049228: .4byte 0x080EDC34
_0804922C: .4byte 0x000007F4
_08049230:
    movs r4, #0x00
    ldr r3, _08049238 @ =0x000007F1
    adds r0, r5, r3
    b _0804926A
_08049238: .4byte 0x000007F1
_0804923C:
    lsls r0, r4, #0x02
    ldr r2, _0804929C @ =0x000007F4
    adds r1, r5, r2
    adds r1, r1, r0
    ldr r1, [r1, #0x00]
    movs r3, #0xFE
    lsls r3, r3, #0x03
    adds r0, r5, r3
    ldrb r0, [r0, #0x00]
    cmp r4, r0
    blt _08049264
    adds r0, r1, #0x0
    adds r0, #0x4C
    ldrb r0, [r0, #0x00]
    movs r1, #0x07
    ands r1, r0
    adds r0, r5, #0x0
    movs r2, #0x00
    bl sub_804AE58
_08049264:
    adds r4, #0x01
    ldr r1, _080492A0 @ =0x000007F1
    adds r0, r5, r1
_0804926A:
    ldrb r0, [r0, #0x00]
    cmp r4, r0
    blt _0804923C
_08049270:
    ldr r2, _080492A4 @ =0x000007DA
    adds r0, r5, r2
    ldrh r1, [r0, #0x00]
    movs r0, #0x90
    ands r0, r1
    cmp r0, #0x00
    bne _08049280
    b _0804937A
_08049280:
    ldr r3, _080492A8 @ =0x00000814
    adds r0, r5, r3
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    beq _080492AC
    ldr r1, _0804929C @ =0x000007F4
    adds r0, r5, r1
    ldr r0, [r0, #0x00]
    adds r0, #0x4C
    ldrb r0, [r0, #0x00]
    movs r1, #0x07
    ands r1, r0
    b _080492AE
    .byte 0x00, 0x00
_0804929C: .4byte 0x000007F4
_080492A0: .4byte 0x000007F1
_080492A4: .4byte 0x000007DA
_080492A8: .4byte 0x00000814
_080492AC:
    movs r1, #0x00
_080492AE:
    lsls r0, r1, #0x05
    ldr r1, _080492C0 @ =0x080EDC34
    adds r0, r0, r1
    mov r9, r0
    movs r7, #0x07
    movs r4, #0x00
    ldr r2, _080492C4 @ =0x000007F1
    adds r0, r5, r2
    b _080492F8
_080492C0: .4byte 0x080EDC34
_080492C4: .4byte 0x000007F1
_080492C8:
    lsls r1, r4, #0x02
    ldr r3, _08049314 @ =0x000007F4
    adds r0, r5, r3
    adds r0, r0, r1
    ldr r2, [r0, #0x00]
    ldr r0, [r2, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _080492F2
    lsls r0, r7, #0x01
    adds r1, r2, #0x0
    adds r1, #0xBA
    strh r0, [r1, #0x00]
    lsls r1, r7, #0x18
    lsrs r1, r1, #0x18
    adds r0, r5, #0x0
    bl sub_804AEE8
    subs r7, #0x01
_080492F2:
    adds r4, #0x01
    ldr r1, _08049318 @ =0x000007F1
    adds r0, r5, r1
_080492F8:
    ldrb r0, [r0, #0x00]
    cmp r4, r0
    blt _080492C8
    movs r4, #0x07
    ldr r2, _08049318 @ =0x000007F1
    adds r2, r2, r5
    mov r8, r2
_08049306:
    lsls r0, r4, #0x02
    add r0, r9
    ldr r6, [r0, #0x00]
    movs r3, #0x00
    subs r4, #0x01
    b _08049362
    .byte 0x00, 0x00
_08049314: .4byte 0x000007F4
_08049318: .4byte 0x000007F1
_0804931C:
    lsls r1, r3, #0x02
    ldr r2, _0804935C @ =0x000007F4
    adds r0, r5, r2
    adds r0, r0, r1
    ldr r2, [r0, #0x00]
    adds r0, r2, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    cmp r0, r6
    bne _08049360
    ldr r0, [r2, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _0804936A
    lsls r0, r7, #0x01
    adds r1, r2, #0x0
    adds r1, #0xBA
    strh r0, [r1, #0x00]
    ldrh r1, [r1, #0x00]
    lsrs r1, r1, #0x01
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    adds r0, r5, #0x0
    bl sub_804AEE8
    subs r7, #0x01
    b _0804936A
    .byte 0x00, 0x00
_0804935C: .4byte 0x000007F4
_08049360:
    adds r3, #0x01
_08049362:
    mov r0, r8
    ldrb r0, [r0, #0x00]
    cmp r3, r0
    blt _0804931C
_0804936A:
    cmp r4, #0x00
    bge _08049306
    ldr r1, _0804938C @ =0x000007DA
    adds r2, r5, r1
    ldrh r1, [r2, #0x00]
    ldr r0, _08049390 @ =0x0000FF7F
    ands r0, r1
    strh r0, [r2, #0x00]
_0804937A:
    bl sub_8002C24
    adds r1, r0, #0x0
    movs r0, #0x03
    ands r0, r1
    bl sub_8042DE0
    b _080493E2
    .byte 0x00, 0x00
_0804938C: .4byte 0x000007DA
_08049390: .4byte 0x0000FF7F
_08049394:
    movs r6, #0x00
    ldr r2, _080493F0 @ =0x000007F1
    adds r0, r5, r2
    ldrb r0, [r0, #0x00]
    cmp r6, r0
    bge _080493E2
    movs r7, #0x00
_080493A2:
    lsls r1, r6, #0x02
    ldr r3, _080493F4 @ =0x000007F4
    adds r0, r5, r3
    adds r0, r0, r1
    ldr r2, [r0, #0x00]
    lsls r0, r6, #0x01
    adds r4, r2, #0x0
    adds r4, #0xBA
    strh r0, [r4, #0x00]
    ldrh r1, [r4, #0x00]
    lsrs r1, r1, #0x01
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    adds r0, r5, #0x0
    bl sub_804AEE8
    ldr r1, _080493F8 @ =0x000007DA
    adds r0, r5, r1
    ldrh r0, [r0, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x06
    adds r1, r2, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _080493D6
    strh r7, [r4, #0x00]
_080493D6:
    adds r6, #0x01
    ldr r3, _080493F0 @ =0x000007F1
    adds r0, r5, r3
    ldrb r0, [r0, #0x00]
    cmp r6, r0
    blt _080493A2
_080493E2:
    adds r7, r5, #0x0
    movs r6, #0x00
    movs r1, #0xFE
    lsls r1, r1, #0x03
    adds r0, r5, r1
    b _080494AC
    .byte 0x00, 0x00
_080493F0: .4byte 0x000007F1
_080493F4: .4byte 0x000007F4
_080493F8: .4byte 0x000007DA
_080493FC:
    lsls r1, r6, #0x18
    lsrs r1, r1, #0x18
    adds r0, r5, #0x0
    bl sub_804AED4
    adds r4, r0, #0x0
    adds r0, #0xBA
    ldrh r1, [r0, #0x00]
    lsrs r1, r1, #0x01
    add r0, sp, #0x00C
    str r0, [sp, #0x000]
    adds r0, r7, #0x0
    add r2, sp, #0x004
    add r3, sp, #0x008
    bl sub_8032AA0
    ldr r1, [sp, #0x004]
    ldr r2, [sp, #0x008]
    ldr r0, [sp, #0x00C]
    str r0, [sp, #0x000]
    adds r0, r4, #0x0
    movs r3, #0x00
    bl sub_803D718
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl sub_803BF34
    ldr r2, [sp, #0x010]
    ldr r1, [r2, #0x00]
    cmp r1, #0x00
    bge _08049452
    movs r0, #0xFF
    lsls r0, r0, #0x08
    ands r1, r0
    lsrs r1, r1, #0x08
    lsls r0, r1, #0x02
    adds r0, r0, r1
    movs r3, #0xBC
    lsls r3, r3, #0x01
    adds r1, r4, r3
    strh r0, [r1, #0x00]
    b _080494A4
_08049452:
    ldr r1, _080494FC @ =0x000007DA
    adds r0, r5, r1
    ldrh r0, [r0, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x03
    adds r1, r2, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _0804947E
    movs r1, #0x00
    ldr r0, _08049500 @ =0x03002C60
    ldrh r0, [r0, #0x0C]
    cmp r0, #0x00
    bne _08049470
    movs r1, #0x01
_08049470:
    cmp r1, #0x00
    beq _0804947E
    movs r3, #0xBC
    lsls r3, r3, #0x01
    adds r1, r4, r3
    movs r0, #0x0A
    strh r0, [r1, #0x00]
_0804947E:
    ldr r1, _080494FC @ =0x000007DA
    adds r0, r5, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    beq _080494A4
    movs r1, #0x00
    ldr r0, _08049500 @ =0x03002C60
    ldrh r0, [r0, #0x12]
    cmp r0, #0x00
    bne _08049498
    movs r1, #0x01
_08049498:
    cmp r1, #0x00
    bne _080494A4
    movs r2, #0xBC
    lsls r2, r2, #0x01
    adds r0, r4, r2
    strh r1, [r0, #0x00]
_080494A4:
    adds r6, #0x01
    movs r3, #0xFE
    lsls r3, r3, #0x03
    adds r0, r5, r3
_080494AC:
    ldrb r0, [r0, #0x00]
    cmp r6, r0
    blt _080493FC
    ldr r0, _08049504 @ =0x00000814
    adds r4, r5, r0
    ldr r0, [r4, #0x00]
    cmp r0, #0x00
    bne _080494C4
    ldr r1, _08049508 @ =0x000007F4
    adds r0, r5, r1
    ldr r0, [r0, #0x00]
    str r0, [r4, #0x00]
_080494C4:
    adds r0, r5, #0x0
    bl sub_804F18C
    ldr r2, _080494FC @ =0x000007DA
    adds r0, r5, r2
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    cmp r6, #0x00
    beq _08049510
    ldr r1, _0804950C @ =0x02024428
    movs r3, #0xBF
    lsls r3, r3, #0x04
    adds r0, r5, r3
    bl sub_8030800
    movs r1, #0xC2
    lsls r1, r1, #0x04
    adds r0, r5, r1
    movs r1, #0x00
    movs r2, #0x00
    bl sub_80307E0
    b _0804953A
    .byte 0x00, 0x00
_080494FC: .4byte 0x000007DA
_08049500: .4byte 0x03002C60
_08049504: .4byte 0x00000814
_08049508: .4byte 0x000007F4
_0804950C: .4byte 0x02024428
_08049510:
    ldr r1, _08049594 @ =0x02024400
    adds r3, r1, #0x0
    adds r3, #0x08
    ldr r0, [r4, #0x00]
    adds r0, #0x4C
    ldrb r2, [r0, #0x00]
    movs r0, #0x07
    ands r0, r2
    strb r0, [r1, #0x08]
    ldr r2, _08049598 @ =0x000007DD
    adds r0, r5, r2
    ldrb r0, [r0, #0x00]
    strb r0, [r3, #0x09]
    strh r6, [r3, #0x02]
    movs r3, #0xC2
    lsls r3, r3, #0x04
    adds r0, r5, r3
    adds r1, #0x28
    ldr r2, _0804959C @ =0x00000FD6
    bl sub_80307E0
_0804953A:
    movs r0, #0x00
    bl sub_803E25C
    ldr r0, [sp, #0x010]
    ldr r1, [r0, #0x00]
    cmp r1, #0x00
    bge _080495B0
    movs r0, #0x04
    ands r1, r0
    cmp r1, #0x00
    beq _080495E8
    movs r4, #0x00
    ldr r1, _080495A0 @ =0x000007F1
    adds r0, r5, r1
    ldrb r0, [r0, #0x00]
    cmp r4, r0
    bge _080495E8
_0804955C:
    lsls r1, r4, #0x02
    ldr r2, _080495A4 @ =0x000007F4
    adds r0, r5, r2
    adds r0, r0, r1
    ldr r2, [r0, #0x00]
    ldr r3, _080495A8 @ =0x00000814
    adds r0, r5, r3
    ldr r0, [r0, #0x00]
    cmp r2, r0
    beq _0804957E
    adds r0, r2, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _08049586
_0804957E:
    adds r0, r2, #0x0
    ldr r1, _080495AC @ =0x00001008
    bl sub_803D9D4
_08049586:
    adds r4, #0x01
    ldr r1, _080495A0 @ =0x000007F1
    adds r0, r5, r1
    ldrb r0, [r0, #0x00]
    cmp r4, r0
    blt _0804955C
    b _080495E8
_08049594: .4byte 0x02024400
_08049598: .4byte 0x000007DD
_0804959C: .4byte 0x00000FD6
_080495A0: .4byte 0x000007F1
_080495A4: .4byte 0x000007F4
_080495A8: .4byte 0x00000814
_080495AC: .4byte 0x00001008
_080495B0:
    ldr r2, _0804963C @ =0x000007DA
    adds r0, r5, r2
    ldrh r1, [r0, #0x00]
    movs r0, #0xF0
    lsls r0, r0, #0x04
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x02
    cmp r0, r1
    bne _080495E8
    movs r4, #0x00
    ldr r3, _08049640 @ =0x000007F1
    adds r0, r5, r3
    ldrb r0, [r0, #0x00]
    cmp r4, r0
    bge _080495E8
    ldr r0, _08049644 @ =0x000007F4
    adds r6, r5, r0
_080495D4:
    ldm r6!, {r0}
    ldr r1, _08049648 @ =0x00001008
    bl sub_803D9D4
    adds r4, #0x01
    ldr r1, _08049640 @ =0x000007F1
    adds r0, r5, r1
    ldrb r0, [r0, #0x00]
    cmp r4, r0
    blt _080495D4
_080495E8:
    adds r0, r5, #0x0
    bl sub_804C030
    ldr r2, _0804964C @ =0x00000C5E
    adds r0, r5, r2
    movs r1, #0x00
    movs r2, #0x00
    strh r2, [r0, #0x00]
    movs r3, #0xC6
    lsls r3, r3, #0x04
    adds r0, r5, r3
    strb r1, [r0, #0x00]
    adds r3, #0x02
    adds r0, r5, r3
    strh r2, [r0, #0x00]
    ldr r2, _08049650 @ =0x00000C72
    adds r0, r5, r2
    strb r1, [r0, #0x00]
    adds r3, #0x20
    adds r0, r5, r3
    strb r1, [r0, #0x00]
    adds r2, #0x11
    adds r0, r5, r2
    strb r1, [r0, #0x00]
    adds r3, #0x02
    adds r0, r5, r3
    strb r1, [r0, #0x00]
    movs r0, #0x00
    bl sub_8043830
    adds r0, r5, #0x0
    bl sub_8043030
    add sp, #0x014
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804963C: .4byte 0x000007DA
_08049640: .4byte 0x000007F1
_08049644: .4byte 0x000007F4
_08049648: .4byte 0x00001008
_0804964C: .4byte 0x00000C5E
_08049650: .4byte 0x00000C72
    thumb_func_start sub_8049654
sub_8049654:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    bl vcount_reset
    ldr r1, _08049698 @ =0x000007DD
    adds r0, r5, r1
    ldrb r1, [r0, #0x00]
    adds r0, r5, #0x0
    bl loadtrack_8031990
    ldr r2, _0804969C @ =0x00000C88
    adds r6, r5, r2
    ldr r1, [r6, #0x00]
    movs r4, #0x80
    lsls r4, r4, #0x18
    cmp r1, #0x00
    bge _080496A0
    movs r0, #0x01
    ands r1, r0
    cmp r1, #0x00
    beq _08049684
    adds r0, r5, #0x0
    bl loadtrack_loadCoinLocations
_08049684:
    ldr r1, [r6, #0x00]
    ands r4, r1
    cmp r4, #0x00
    beq _08049764
    movs r0, #0x02
    ands r1, r0
    cmp r1, #0x00
    beq _08049764
    b _08049732
    .byte 0x00, 0x00
_08049698: .4byte 0x000007DD
_0804969C: .4byte 0x00000C88
_080496A0:
    ldr r1, _080496C4 @ =0x000007DA
    adds r0, r5, r1
    ldrh r2, [r0, #0x00]
    movs r1, #0xF0
    lsls r1, r1, #0x04
    ands r1, r2
    movs r0, #0x80
    lsls r0, r0, #0x02
    cmp r1, r0
    beq _08049764
    cmp r1, r0
    bgt _080496C8
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    beq _080496DA
    b _08049764
    .byte 0x00, 0x00
_080496C4: .4byte 0x000007DA
_080496C8:
    movs r0, #0x80
    lsls r0, r0, #0x03
    cmp r1, r0
    beq _0804973A
    movs r0, #0x80
    lsls r0, r0, #0x04
    cmp r1, r0
    beq _0804972C
    b _08049764
_080496DA:
    movs r0, #0x10
    ands r0, r2
    cmp r0, #0x00
    beq _0804970C
    movs r1, #0x00
    ldr r4, _08049708 @ =0x03002C60
    ldrh r0, [r4, #0x10]
    cmp r0, #0x00
    bne _080496EE
    movs r1, #0x01
_080496EE:
    cmp r1, #0x00
    beq _080496F8
    adds r0, r5, #0x0
    bl sub_8053148
_080496F8:
    movs r1, #0x00
    ldrh r0, [r4, #0x12]
    cmp r0, #0x00
    bne _08049702
    movs r1, #0x01
_08049702:
    cmp r1, #0x00
    beq _08049764
    b _08049720
_08049708: .4byte 0x03002C60
_0804970C:
    ldr r2, _08049728 @ =0x000007DA
    adds r0, r5, r2
    ldrh r1, [r0, #0x00]
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    bne _08049764
    adds r0, r5, #0x0
    bl sub_8053148
_08049720:
    adds r0, r5, #0x0
    bl loadtrack_loadCoinLocations
    b _08049764
_08049728: .4byte 0x000007DA
_0804972C:
    adds r0, r5, #0x0
    bl loadtrack_loadCoinLocations
_08049732:
    adds r0, r5, #0x0
    bl sub_8053148
    b _08049764
_0804973A:
    movs r1, #0x00
    ldr r4, _08049780 @ =0x03002C60
    ldrh r0, [r4, #0x08]
    cmp r0, #0x00
    bne _08049746
    movs r1, #0x01
_08049746:
    cmp r1, #0x00
    beq _08049750
    adds r0, r5, #0x0
    bl sub_8053148
_08049750:
    movs r1, #0x00
    ldrh r0, [r4, #0x0C]
    cmp r0, #0x00
    bne _0804975A
    movs r1, #0x01
_0804975A:
    cmp r1, #0x00
    beq _08049764
    adds r0, r5, #0x0
    bl loadtrack_loadCoinLocations
_08049764:
    ldr r1, _08049784 @ =0x0804AF75
    movs r0, #0x48
    bl vcount_register
    ldr r2, _08049788 @ =0x00000BCC
    adds r1, r5, r2
    str r0, [r1, #0x00]
    movs r1, #0x49
    adds r2, #0x04
    adds r0, r5, r2
    strb r1, [r0, #0x00]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_08049780: .4byte 0x03002C60
_08049784: .4byte vcount_804AF74
_08049788: .4byte 0x00000BCC
    thumb_func_start sub_804978C
sub_804978C:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    ldr r0, _080497C8 @ =0x0000057C
    adds r6, r5, r0
    adds r0, r6, #0x0
    bl col_clearLists
    ldr r1, _080497CC @ =0x00000714
    adds r0, r5, r1
    ldr r4, [r0, #0x00]
    cmp r4, #0x00
    beq _080497BC
_080497A4:
    ldrh r0, [r4, #0x34]
    movs r1, #0x02
    ands r0, r1
    cmp r0, #0x00
    beq _080497B6
    adds r0, r6, #0x0
    adds r1, r4, #0x0
    bl col_addActive
_080497B6:
    ldr r4, [r4, #0x3C]
    cmp r4, #0x00
    bne _080497A4
_080497BC:
    movs r4, #0x00
    movs r2, #0xFE
    lsls r2, r2, #0x03
    adds r0, r5, r2
    b _080497F4
    .byte 0x00, 0x00
_080497C8: .4byte 0x0000057C
_080497CC: .4byte 0x00000714
_080497D0:
    lsls r1, r4, #0x02
    ldr r2, _08049844 @ =0x000007F4
    adds r0, r5, r2
    adds r0, r0, r1
    ldr r2, [r0, #0x00]
    ldrh r0, [r2, #0x34]
    movs r1, #0x02
    ands r0, r1
    cmp r0, #0x00
    beq _080497EC
    adds r0, r6, #0x0
    adds r1, r2, #0x0
    bl col_addActive
_080497EC:
    adds r4, #0x01
    movs r1, #0xFE
    lsls r1, r1, #0x03
    adds r0, r5, r1
_080497F4:
    ldrb r0, [r0, #0x00]
    cmp r4, r0
    blt _080497D0
    ldr r2, _08049848 @ =0x00000704
    adds r0, r5, r2
    ldr r4, [r0, #0x00]
    cmp r4, #0x00
    beq _0804981C
_08049804:
    ldrh r0, [r4, #0x34]
    movs r1, #0x02
    ands r0, r1
    cmp r0, #0x00
    beq _08049816
    adds r0, r6, #0x0
    adds r1, r4, #0x0
    bl col_addPassive
_08049816:
    ldr r4, [r4, #0x3C]
    cmp r4, #0x00
    bne _08049804
_0804981C:
    ldr r1, _0804984C @ =0x000006EC
    adds r0, r5, r1
    ldr r4, [r0, #0x08]
    cmp r4, #0x00
    beq _0804983E
_08049826:
    ldrh r0, [r4, #0x34]
    movs r1, #0x02
    ands r0, r1
    cmp r0, #0x00
    beq _08049838
    adds r0, r6, #0x0
    adds r1, r4, #0x0
    bl col_addPassive
_08049838:
    ldr r4, [r4, #0x3C]
    cmp r4, #0x00
    bne _08049826
_0804983E:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_08049844: .4byte 0x000007F4
_08049848: .4byte 0x00000704
_0804984C: .4byte 0x000006EC
    thumb_func_start sub_8049850
sub_8049850:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x004
    adds r5, r0, #0x0
    movs r4, #0x00
    movs r1, #0xFE
    lsls r1, r1, #0x03
    adds r0, r5, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    beq _08049896
    ldr r7, _08049944 @ =0x000007F4
    adds r2, r5, r7
    movs r7, #0x80
    lsls r7, r7, #0x08
    movs r3, #0xBC
    lsls r3, r3, #0x01
    adds r6, r0, #0x0
_0804987A:
    ldr r1, [r2, #0x00]
    ldr r0, [r1, #0x48]
    ands r0, r7
    cmp r0, #0x00
    beq _0804988E
    adds r0, r1, r3
    ldrh r0, [r0, #0x00]
    cmp r0, r4
    ble _0804988E
    adds r4, r0, #0x0
_0804988E:
    adds r2, #0x04
    subs r6, #0x01
    cmp r6, #0x00
    bne _0804987A
_08049896:
    movs r6, #0x00
    movs r1, #0xFE
    lsls r1, r1, #0x03
    adds r0, r5, r1
    ldr r2, _08049948 @ =0x000007D4
    adds r2, r5, r2
    str r2, [sp, #0x000]
    ldrb r7, [r0, #0x00]
    cmp r6, r7
    bge _080498DC
    ldr r1, _0804994C @ =0x0000A020
    mov r9, r1
    adds r3, r0, #0x0
    ldr r7, _08049944 @ =0x000007F4
    adds r2, r5, r7
    movs r0, #0x80
    lsls r0, r0, #0x06
    mov r8, r0
    movs r1, #0xBC
    lsls r1, r1, #0x01
    mov r10, r1
_080498C0:
    ldr r1, [r2, #0x00]
    ldr r0, [r1, #0x48]
    mov r7, r9
    ands r0, r7
    cmp r0, r8
    bne _080498D2
    mov r7, r10
    adds r0, r1, r7
    strh r4, [r0, #0x00]
_080498D2:
    adds r2, #0x04
    adds r6, #0x01
    ldrb r0, [r3, #0x00]
    cmp r6, r0
    blt _080498C0
_080498DC:
    movs r6, #0x00
    movs r1, #0xFE
    lsls r1, r1, #0x03
    adds r0, r5, r1
    ldrb r0, [r0, #0x00]
    cmp r6, r0
    blt _080498EC
    b _08049A08
_080498EC:
    movs r2, #0x80
    lsls r2, r2, #0x08
    mov r10, r2
    ldr r7, _08049950 @ =0x00000BD8
    adds r7, r7, r5
    mov r9, r7
    ldr r0, _08049954 @ =0x00000814
    adds r0, r0, r5
    mov r8, r0
_080498FE:
    lsls r0, r6, #0x02
    ldr r2, _08049944 @ =0x000007F4
    adds r1, r5, r2
    adds r1, r1, r0
    ldr r4, [r1, #0x00]
    movs r7, #0x00
    ldr r0, [r4, #0x48]
    mov r1, r10
    ands r0, r1
    cmp r0, #0x00
    beq _08049924
    adds r0, r4, #0x0
    adds r0, #0xEC
    ldrb r1, [r0, #0x00]
    lsls r1, r1, #0x01
    adds r2, #0x28
    adds r0, r5, r2
    adds r0, r0, r1
    ldrh r7, [r0, #0x00]
_08049924:
    ldr r1, _08049958 @ =0x000007DA
    adds r0, r5, r1
    ldrh r1, [r0, #0x00]
    mov r0, r10
    ands r0, r1
    cmp r0, #0x00
    beq _0804995C
    mov r2, r8
    ldr r0, [r2, #0x00]
    cmp r4, r0
    bne _0804997A
    movs r7, #0xBF
    lsls r7, r7, #0x04
    adds r0, r5, r7
    b _08049972
    .byte 0x00, 0x00
_08049944: .4byte 0x000007F4
_08049948: .4byte 0x000007D4
_0804994C: .4byte 0x0000A020
_08049950: .4byte 0x00000BD8
_08049954: .4byte 0x00000814
_08049958: .4byte 0x000007DA
_0804995C:
    movs r2, #0x80
    lsls r2, r2, #0x06
    adds r0, r2, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _0804997A
    mov r1, r8
    ldr r0, [r1, #0x00]
    cmp r4, r0
    beq _0804997A
    mov r0, r9
_08049972:
    bl sub_803080C
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
_0804997A:
    ldr r2, _080499D8 @ =0x000007DA
    adds r0, r5, r2
    ldrh r1, [r0, #0x00]
    mov r0, r10
    ands r0, r1
    cmp r0, #0x00
    bne _080499B6
    mov r1, r8
    ldr r0, [r1, #0x00]
    cmp r4, r0
    bne _080499B6
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _080499B6
    movs r2, #0xC2
    lsls r2, r2, #0x04
    adds r0, r5, r2
    adds r1, r7, #0x0
    bl sub_8030774
    cmp r0, #0x00
    bne _080499B6
    ldr r0, _080499DC @ =0x00000BEE
    adds r2, r5, r0
    ldrh r1, [r2, #0x00]
    movs r0, #0x03
    orrs r0, r1
    strh r0, [r2, #0x00]
_080499B6:
    ldr r1, [sp, #0x000]
    ldrb r0, [r1, #0x00]
    movs r1, #0x0F
    ands r1, r0
    cmp r1, #0x02
    beq _080499E0
    cmp r1, #0x02
    blt _080499F4
    cmp r1, #0x06
    bgt _080499F4
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    adds r2, r7, #0x0
    bl sub_803C4C0
    b _080499F4
    .byte 0x00, 0x00
_080499D8: .4byte 0x000007DA
_080499DC: .4byte 0x00000BEE
_080499E0:
    movs r2, #0xC6
    lsls r2, r2, #0x04
    adds r0, r5, r2
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    beq _080499F4
    adds r0, r4, #0x0
    adds r1, r7, #0x0
    bl sub_8040E8C
_080499F4:
    movs r7, #0x18
    add r9, r7
    adds r6, #0x01
    movs r1, #0xFE
    lsls r1, r1, #0x03
    adds r0, r5, r1
    ldrb r0, [r0, #0x00]
    cmp r6, r0
    bge _08049A08
    b _080498FE
_08049A08:
    ldr r2, [sp, #0x000]
    ldrb r0, [r2, #0x00]
    movs r1, #0x0F
    ands r1, r0
    cmp r1, #0x02
    beq _08049A2C
    cmp r1, #0x02
    blt _08049A2C
    cmp r1, #0x06
    bgt _08049A2C
    adds r0, r5, #0x0
    bl sub_803DA54
    adds r0, r5, #0x0
    bl sub_8043064
    bl sub_804F078
_08049A2C:
    movs r6, #0x00
    ldr r7, _08049A74 @ =0x00000704
    adds r0, r5, r7
    ldr r4, [r0, #0x00]
    cmp r4, #0x00
    beq _08049A4A
_08049A38:
    ldr r1, [r4, #0x14]
    cmp r1, #0x00
    beq _08049A44
    adds r0, r4, #0x0
    bl _call_via_r1
_08049A44:
    ldr r4, [r4, #0x3C]
    cmp r4, #0x00
    bne _08049A38
_08049A4A:
    ldr r1, _08049A78 @ =0x00000714
    adds r0, r5, r1
    ldr r4, [r0, #0x00]
    cmp r4, #0x00
    beq _08049A98
_08049A54:
    ldr r7, [r4, #0x3C]
    ldr r1, [r4, #0x14]
    cmp r1, #0x00
    beq _08049A62
    adds r0, r4, #0x0
    bl _call_via_r1
_08049A62:
    ldrh r1, [r4, #0x10]
    ldr r0, _08049A7C @ =0x00008401
    cmp r1, r0
    beq _08049A90
    cmp r1, r0
    bgt _08049A84
    ldr r0, _08049A80 @ =0x00008001
    b _08049A8C
    .byte 0x00, 0x00
_08049A74: .4byte 0x00000704
_08049A78: .4byte 0x00000714
_08049A7C: .4byte 0x00008401
_08049A80: .4byte 0x00008001
_08049A84:
    ldr r0, _08049AFC @ =0x00008402
    cmp r1, r0
    beq _08049A90
    adds r0, #0x01
_08049A8C:
    cmp r1, r0
    bne _08049A92
_08049A90:
    adds r6, #0x01
_08049A92:
    adds r4, r7, #0x0
    cmp r4, #0x00
    bne _08049A54
_08049A98:
    ldr r2, _08049B00 @ =0x00000C83
    adds r0, r5, r2
    strb r6, [r0, #0x00]
    adds r0, r5, #0x0
    bl sub_8053D9C
    ldr r7, _08049B04 @ =0x00000724
    adds r0, r5, r7
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    beq _08049AC0
_08049AAE:
    ldr r4, [r0, #0x3C]
    ldr r1, [r0, #0x14]
    cmp r1, #0x00
    beq _08049ABA
    bl _call_via_r1
_08049ABA:
    adds r0, r4, #0x0
    cmp r0, #0x00
    bne _08049AAE
_08049AC0:
    ldr r0, _08049B08 @ =0x0000072C
    adds r5, r5, r0
    movs r4, #0x00
_08049AC6:
    adds r0, r5, r4
    ldrb r1, [r0, #0x00]
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _08049AE6
    lsls r1, r4, #0x02
    adds r0, r5, #0x0
    adds r0, #0x20
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    ldr r1, [r0, #0x00]
    cmp r1, #0x00
    beq _08049AE6
    bl _call_via_r1
_08049AE6:
    adds r4, #0x01
    cmp r4, #0x1F
    ble _08049AC6
    add sp, #0x004
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08049AFC: .4byte 0x00008402
_08049B00: .4byte 0x00000C83
_08049B04: .4byte 0x00000724
_08049B08: .4byte 0x0000072C
    thumb_func_start sub_8049B0C
sub_8049B0C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x014
    adds r6, r0, #0x0
    ldr r1, _08049B34 @ =0x000007DA
    adds r0, r6, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x04
    ands r0, r1
    cmp r0, #0x00
    bne _08049B38
    movs r2, #0x06
    mov r8, r2
    movs r7, #0x03
    b _08049B3C
    .byte 0x00, 0x00
_08049B34: .4byte 0x000007DA
_08049B38:
    movs r7, #0x08
    mov r8, r7
_08049B3C:
    ldr r1, _08049B50 @ =0x00000704
    adds r0, r6, r1
    ldr r4, [r0, #0x00]
    ldr r2, _08049B54 @ =0x00000BE8
    adds r2, r2, r6
    mov r9, r2
    cmp r4, #0x00
    beq _08049BC8
    b _08049B5C
    .byte 0x00, 0x00
_08049B50: .4byte 0x00000704
_08049B54: .4byte 0x00000BE8
_08049B58:
    cmp r7, #0x00
    beq _08049BC8
_08049B5C:
    ldrh r0, [r4, #0x34]
    movs r5, #0x01
    ands r0, r5
    cmp r0, #0x00
    beq _08049BC2
    adds r0, r4, #0x0
    adds r0, #0x36
    ldrb r1, [r0, #0x00]
    adds r0, r6, #0x0
    bl sub_804C0DC
    cmp r0, #0x00
    beq _08049BC2
    adds r0, r4, #0x0
    bl sub_802F638
    adds r0, r4, #0x0
    bl sub_802F674
    cmp r0, #0x00
    beq _08049BC2
    movs r1, #0x24
    ldsh r0, [r4, r1]
    str r0, [sp, #0x00C]
    str r5, [sp, #0x010]
    adds r5, r4, #0x0
    adds r5, #0x20
    movs r2, #0x24
    ldsh r1, [r4, r2]
    adds r0, r4, #0x0
    adds r0, #0x80
    ldr r0, [r0, #0x00]
    muls r1, r0
    adds r2, r1, #0x0
    cmp r1, #0x00
    bge _08049BA6
    adds r2, #0xFF
_08049BA6:
    asrs r3, r2, #0x08
    ldr r0, [r4, #0x48]
    movs r1, #0x00
    str r1, [sp, #0x000]
    add r1, sp, #0x00C
    str r1, [sp, #0x004]
    adds r1, r5, #0x0
    adds r2, r3, #0x0
    bl oam_renderCellData
    subs r7, #0x01
    movs r2, #0x01
    negs r2, r2
    add r8, r2
_08049BC2:
    ldr r4, [r4, #0x3C]
    cmp r4, #0x00
    bne _08049B58
_08049BC8:
    mov r7, r9
    ldr r0, [r7, #0x00]
    cmp r0, #0x00
    beq _08049BDC
    ldr r1, _08049BD8 @ =0x000006EC
    adds r0, r6, r1
    ldr r4, [r0, #0x08]
    b _08049BE2
_08049BD8: .4byte 0x000006EC
_08049BDC:
    ldr r2, _08049BEC @ =0x000006EC
    adds r0, r6, r2
    ldr r4, [r0, #0x0C]
_08049BE2:
    cmp r4, #0x00
    beq _08049C8A
    movs r7, #0x01
    mov r10, r7
    b _08049BF6
_08049BEC: .4byte 0x000006EC
_08049BF0:
    mov r0, r8
    cmp r0, #0x00
    beq _08049C8A
_08049BF6:
    ldrh r0, [r4, #0x34]
    mov r1, r10
    ands r0, r1
    cmp r0, #0x00
    beq _08049C78
    adds r0, r4, #0x0
    adds r0, #0x36
    ldrb r1, [r0, #0x00]
    adds r0, r6, #0x0
    bl sub_804C0DC
    cmp r0, #0x00
    beq _08049C78
    adds r0, r4, #0x0
    bl sub_802F638
    adds r0, r4, #0x0
    bl sub_802F674
    cmp r0, #0x00
    beq _08049C78
    movs r2, #0x24
    ldsh r0, [r4, r2]
    str r0, [sp, #0x00C]
    mov r7, r10
    str r7, [sp, #0x010]
    adds r5, r4, #0x0
    adds r5, #0x20
    movs r0, #0x24
    ldsh r2, [r4, r0]
    adds r0, r4, #0x0
    adds r0, #0x56
    movs r1, #0x00
    ldsh r0, [r0, r1]
    adds r3, r2, #0x0
    muls r3, r0
    cmp r3, #0x00
    bge _08049C44
    adds r3, #0xFF
_08049C44:
    asrs r3, r3, #0x08
    adds r0, r4, #0x0
    adds r0, #0x58
    movs r7, #0x00
    ldsh r0, [r0, r7]
    adds r1, r2, #0x0
    muls r1, r0
    cmp r1, #0x00
    bge _08049C58
    adds r1, #0xFF
_08049C58:
    asrs r1, r1, #0x08
    ldr r0, [r4, #0x4C]
    str r1, [sp, #0x000]
    adds r1, r4, #0x0
    adds r1, #0x5A
    movs r7, #0x00
    ldsh r1, [r1, r7]
    str r1, [sp, #0x004]
    add r1, sp, #0x00C
    str r1, [sp, #0x008]
    adds r1, r5, #0x0
    bl oam_renderMipmapCellData
    movs r2, #0x01
    negs r2, r2
    add r8, r2
_08049C78:
    mov r7, r9
    ldr r0, [r7, #0x00]
    cmp r0, #0x00
    beq _08049C84
    ldr r4, [r4, #0x3C]
    b _08049C86
_08049C84:
    ldr r4, [r4, #0x40]
_08049C86:
    cmp r4, #0x00
    bne _08049BF0
_08049C8A:
    ldr r1, _08049D70 @ =0x00000714
    adds r0, r6, r1
    ldr r4, [r0, #0x00]
    cmp r4, #0x00
    beq _08049D00
    movs r7, #0x01
_08049C96:
    ldrh r0, [r4, #0x34]
    ands r0, r7
    cmp r0, #0x00
    beq _08049CFA
    adds r0, r4, #0x0
    adds r0, #0x36
    ldrb r1, [r0, #0x00]
    adds r0, r6, #0x0
    bl sub_804C0DC
    cmp r0, #0x00
    beq _08049CFA
    adds r0, r4, #0x0
    bl sub_802F638
    adds r0, r4, #0x0
    bl sub_802F674
    cmp r0, #0x00
    beq _08049CFA
    movs r2, #0x24
    ldsh r0, [r4, r2]
    str r0, [sp, #0x00C]
    str r7, [sp, #0x010]
    adds r5, r4, #0x0
    adds r5, #0x20
    adds r0, r4, #0x0
    adds r0, #0x58
    movs r2, #0x24
    ldsh r1, [r4, r2]
    movs r2, #0x00
    ldsh r0, [r0, r2]
    muls r1, r0
    adds r2, r1, #0x0
    cmp r1, #0x00
    bge _08049CE0
    adds r2, #0xFF
_08049CE0:
    asrs r3, r2, #0x08
    ldr r0, [r4, #0x48]
    adds r1, r4, #0x0
    adds r1, #0x5A
    movs r2, #0x00
    ldsh r1, [r1, r2]
    str r1, [sp, #0x000]
    add r1, sp, #0x00C
    str r1, [sp, #0x004]
    adds r1, r5, #0x0
    adds r2, r3, #0x0
    bl oam_renderCellData
_08049CFA:
    ldr r4, [r4, #0x3C]
    cmp r4, #0x00
    bne _08049C96
_08049D00:
    ldr r2, _08049D74 @ =0x00000724
    adds r0, r6, r2
    ldr r4, [r0, #0x00]
    cmp r4, #0x00
    beq _08049D60
    movs r7, #0x01
_08049D0C:
    ldrh r0, [r4, #0x34]
    ands r0, r7
    cmp r0, #0x00
    beq _08049D5A
    adds r0, r4, #0x0
    bl sub_802F674
    cmp r0, #0x00
    beq _08049D5A
    ldr r5, [r4, #0x48]
    cmp r5, #0x00
    beq _08049D5A
    movs r1, #0x24
    ldsh r0, [r4, r1]
    str r0, [sp, #0x00C]
    str r7, [sp, #0x010]
    adds r6, r4, #0x0
    adds r6, #0x20
    adds r0, r4, #0x0
    adds r0, #0x58
    movs r2, #0x24
    ldsh r1, [r4, r2]
    movs r2, #0x00
    ldsh r0, [r0, r2]
    muls r1, r0
    adds r2, r1, #0x0
    cmp r1, #0x00
    bge _08049D46
    adds r2, #0xFF
_08049D46:
    asrs r3, r2, #0x08
    movs r0, #0x00
    str r0, [sp, #0x000]
    add r0, sp, #0x00C
    str r0, [sp, #0x004]
    adds r0, r5, #0x0
    adds r1, r6, #0x0
    adds r2, r3, #0x0
    bl oam_renderCellData
_08049D5A:
    ldr r4, [r4, #0x3C]
    cmp r4, #0x00
    bne _08049D0C
_08049D60:
    add sp, #0x014
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08049D70: .4byte 0x00000714
_08049D74: .4byte 0x00000724
    thumb_func_start sub_8049D78
sub_8049D78:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x058
    mov r8, r0
    ldr r0, _08049DA0 @ =0x00000824
    add r0, r8
    str r0, [sp, #0x050]
    movs r1, #0x00
    mov r10, r1
    movs r0, #0xFE
    lsls r0, r0, #0x03
    add r0, r8
    mov r2, sp
    adds r2, #0x3C
    str r2, [sp, #0x054]
    b _08049F02
    .byte 0x00, 0x00
_08049DA0: .4byte 0x00000824
_08049DA4:
    mov r3, r10
    lsls r1, r3, #0x02
    ldr r0, _08049DF8 @ =0x000007F4
    add r0, r8
    adds r0, r0, r1
    ldr r5, [r0, #0x00]
    adds r6, r5, #0x0
    adds r0, r5, #0x0
    bl sub_803CA78
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    movs r0, #0xC9
    lsls r0, r0, #0x01
    adds r2, r5, r0
    ldrb r1, [r2, #0x00]
    movs r0, #0xCA
    ands r0, r1
    strb r0, [r2, #0x00]
    adds r2, r4, #0x0
    adds r0, r5, #0x0
    ldr r1, [sp, #0x050]
    bl sub_803D328
    adds r0, r5, #0x0
    adds r0, #0x66
    ldrh r2, [r0, #0x00]
    movs r3, #0x00
    ldsh r1, [r0, r3]
    cmp r1, #0x00
    beq _08049E16
    ldr r0, _08049DFC @ =0x00000814
    add r0, r8
    ldr r0, [r0, #0x00]
    cmp r5, r0
    bne _08049E04
    ldr r0, _08049E00 @ =0x03002E20
    ldr r0, [r0, #0x14]
    movs r1, #0x01
    ands r0, r1
    b _08049E12
    .byte 0x00, 0x00
_08049DF8: .4byte 0x000007F4
_08049DFC: .4byte 0x00000814
_08049E00: .4byte 0x03002E20
_08049E04:
    cmp r1, #0x20
    ble _08049E0E
    ldr r0, _08049E2C @ =0x00000157
    cmp r1, r0
    ble _08049EF8
_08049E0E:
    movs r0, #0x01
    ands r0, r2
_08049E12:
    cmp r0, #0x00
    bne _08049EF8
_08049E16:
    adds r0, r5, #0x0
    bl sub_803D818
    cmp r0, #0x00
    beq _08049E30
    adds r0, r6, #0x0
    bl sub_802F638
    movs r4, #0x00
    str r4, [r5, #0x44]
    b _08049EF8
_08049E2C: .4byte 0x00000157
_08049E30:
    adds r0, r6, #0x0
    bl sub_802F638
    adds r2, r4, #0x0
    adds r0, r5, #0x0
    ldr r1, [sp, #0x050]
    bl sub_803CD50
    str r0, [r5, #0x44]
    adds r0, r6, #0x0
    bl sub_802F674
    cmp r0, #0x00
    beq _08049EF8
    adds r0, r5, #0x0
    bl sub_803D938
    cmp r0, #0x00
    beq _08049E60
    ldr r0, _08049E5C @ =0x00007FFF
    b _08049E64
    .byte 0x00, 0x00
_08049E5C: .4byte 0x00007FFF
_08049E60:
    movs r1, #0x24
    ldsh r0, [r6, r1]
_08049E64:
    str r0, [sp, #0x008]
    movs r2, #0x01
    str r2, [sp, #0x00C]
    ldr r0, _08049E9C @ =0x000007DA
    add r0, r8
    ldrh r0, [r0, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x06
    adds r1, r3, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _08049EA8
    ldr r0, _08049EA0 @ =0x00000814
    add r0, r8
    ldr r0, [r0, #0x00]
    cmp r5, r0
    beq _08049EA8
    ldr r0, _08049EA4 @ =0x03002E20
    ldr r0, [r0, #0x14]
    ands r0, r2
    cmp r0, #0x00
    beq _08049EA8
    movs r4, #0xC9
    lsls r4, r4, #0x01
    adds r2, r5, r4
    ldrb r0, [r2, #0x00]
    movs r1, #0x20
    b _08049EF4
_08049E9C: .4byte 0x000007DA
_08049EA0: .4byte 0x00000814
_08049EA4: .4byte 0x03002E20
_08049EA8:
    movs r0, #0x20
    adds r0, r0, r6
    mov r9, r0
    movs r1, #0x24
    ldsh r4, [r6, r1]
    adds r0, r5, #0x0
    bl sub_803DA18
    adds r2, r4, #0x0
    muls r2, r0
    cmp r2, #0x00
    bge _08049EC2
    adds r2, #0xFF
_08049EC2:
    asrs r7, r2, #0x08
    movs r2, #0x24
    ldsh r4, [r6, r2]
    adds r0, r5, #0x0
    bl sub_803DA34
    muls r0, r4
    cmp r0, #0x00
    bge _08049ED6
    adds r0, #0xFF
_08049ED6:
    asrs r3, r0, #0x08
    ldr r0, [r5, #0x44]
    movs r4, #0x00
    str r4, [sp, #0x000]
    add r1, sp, #0x008
    str r1, [sp, #0x004]
    mov r1, r9
    adds r2, r7, #0x0
    bl oam_renderCellData
    movs r3, #0xC9
    lsls r3, r3, #0x01
    adds r2, r5, r3
    ldrb r0, [r2, #0x00]
    movs r1, #0x35
_08049EF4:
    orrs r0, r1
    strb r0, [r2, #0x00]
_08049EF8:
    movs r4, #0x01
    add r10, r4
    movs r0, #0xFE
    lsls r0, r0, #0x03
    add r0, r8
_08049F02:
    ldrb r0, [r0, #0x00]
    cmp r10, r0
    bge _08049F0A
    b _08049DA4
_08049F0A:
    ldr r0, _08049FC4 @ =0x000007DA
    add r0, r8
    ldrh r0, [r0, #0x00]
    movs r1, #0xF0
    lsls r1, r1, #0x04
    ands r1, r0
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    beq _08049F20
    b _0804A0B4
_08049F20:
    ldr r0, _08049FC8 @ =0x00000814
    add r0, r8
    ldr r2, [r0, #0x00]
    ldr r0, [r2, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _08049F32
    b _0804A21C
_08049F32:
    adds r0, r2, #0x0
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r4, r0, #0x01
    adds r6, r2, #0x0
    movs r1, #0xC9
    lsls r1, r1, #0x01
    adds r0, r6, r1
    ldrb r1, [r0, #0x00]
    movs r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    beq _08049FDC
    cmp r4, #0x00
    ble _08049FDC
    add r7, sp, #0x010
_08049F52:
    subs r4, #0x01
    lsls r1, r4, #0x18
    lsrs r1, r1, #0x18
    mov r0, r8
    bl sub_804AED4
    adds r6, r0, #0x0
    adds r0, #0x66
    movs r2, #0x00
    ldsh r0, [r0, r2]
    cmp r0, #0x00
    bgt _08049FD8
    movs r3, #0xC9
    lsls r3, r3, #0x01
    adds r0, r6, r3
    ldrb r1, [r0, #0x00]
    movs r3, #0x01
    adds r0, r3, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _08049FDC
    adds r2, r6, #0x0
    movs r4, #0x24
    ldsh r0, [r2, r4]
    str r0, [sp, #0x010]
    str r3, [r7, #0x04]
    ldrh r1, [r2, #0x20]
    ldr r0, _08049FCC @ =0xFFFF0000
    ldr r4, [sp, #0x018]
    ands r4, r0
    orrs r4, r1
    str r4, [sp, #0x018]
    movs r0, #0x22
    ldsh r5, [r2, r0]
    movs r3, #0x24
    ldsh r1, [r2, r3]
    movs r0, #0x90
    lsls r0, r0, #0x06
    bl __divsi3
    subs r5, r5, r0
    lsls r5, r5, #0x10
    ldr r0, _08049FD0 @ =0x0000FFFF
    ands r4, r0
    orrs r4, r5
    str r4, [sp, #0x018]
    movs r0, #0x00
    str r0, [sp, #0x000]
    str r7, [sp, #0x004]
    ldr r0, _08049FD4 @ =0x0807AF7C
    add r1, sp, #0x018
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    b _08049FDC
    .byte 0x00, 0x00
_08049FC4: .4byte 0x000007DA
_08049FC8: .4byte 0x00000814
_08049FCC: .4byte 0xFFFF0000
_08049FD0: .4byte 0x0000FFFF
_08049FD4: .4byte 0x0807AF7C
_08049FD8:
    cmp r4, #0x00
    bgt _08049F52
_08049FDC:
    movs r4, #0xC9
    lsls r4, r4, #0x01
    adds r0, r6, r4
    ldrb r1, [r0, #0x00]
    movs r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _08049FEE
    b _0804A21C
_08049FEE:
    ldr r0, _0804A09C @ =0x00000814
    add r0, r8
    ldr r0, [r0, #0x00]
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r4, r0, #0x01
    movs r0, #0xFE
    lsls r0, r0, #0x03
    add r0, r8
    ldrb r0, [r0, #0x00]
    subs r0, #0x01
    cmp r4, r0
    blt _0804A00A
    b _0804A21C
_0804A00A:
    adds r4, #0x01
    lsls r1, r4, #0x18
    lsrs r1, r1, #0x18
    mov r0, r8
    bl sub_804AED4
    adds r6, r0, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bgt _0804A0A4
    movs r2, #0xC9
    lsls r2, r2, #0x01
    adds r0, r6, r2
    ldrb r1, [r0, #0x00]
    movs r0, #0x04
    ands r0, r1
    cmp r0, #0x00
    bne _0804A034
    b _0804A21C
_0804A034:
    adds r2, r6, #0x0
    movs r3, #0x24
    ldsh r0, [r2, r3]
    str r0, [sp, #0x010]
    add r7, sp, #0x010
    movs r0, #0x01
    str r0, [r7, #0x04]
    movs r4, #0x20
    ldsh r5, [r2, r4]
    movs r0, #0x00
    mov r9, r0
    add r6, sp, #0x018
    strh r5, [r6, #0x00]
    movs r1, #0x22
    ldsh r4, [r2, r1]
    movs r3, #0x24
    ldsh r1, [r2, r3]
    adds r1, #0x80
    movs r0, #0xD8
    lsls r0, r0, #0x06
    bl __divsi3
    subs r4, r4, r0
    adds r1, r6, #0x0
    strh r4, [r1, #0x02]
    cmp r5, #0xF3
    ble _0804A06C
    b _0804A21C
_0804A06C:
    movs r0, #0x04
    negs r0, r0
    cmp r5, r0
    bgt _0804A076
    b _0804A21C
_0804A076:
    lsls r0, r4, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0xC8
    ble _0804A080
    b _0804A21C
_0804A080:
    cmp r0, #0xA0
    ble _0804A088
    movs r0, #0xA0
    strh r0, [r1, #0x02]
_0804A088:
    mov r4, r9
    str r4, [sp, #0x000]
    str r7, [sp, #0x004]
    ldr r0, _0804A0A0 @ =0x0807AF84
    adds r1, r6, #0x0
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    b _0804A21C
_0804A09C: .4byte 0x00000814
_0804A0A0: .4byte 0x0807AF84
_0804A0A4:
    movs r0, #0xFE
    lsls r0, r0, #0x03
    add r0, r8
    ldrb r0, [r0, #0x00]
    subs r0, #0x01
    cmp r4, r0
    blt _0804A00A
    b _0804A21C
_0804A0B4:
    movs r0, #0x80
    lsls r0, r0, #0x03
    cmp r1, r0
    beq _0804A0C6
    movs r0, #0x80
    lsls r0, r0, #0x04
    cmp r1, r0
    beq _0804A0C6
    b _0804A21C
_0804A0C6:
    ldr r0, _0804A0F4 @ =0x00000814
    add r0, r8
    ldr r2, [r0, #0x00]
    ldr r0, [r2, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _0804A0D8
    b _0804A21C
_0804A0D8:
    movs r7, #0x00
    mov r10, r2
    movs r0, #0xC9
    lsls r0, r0, #0x01
    add r0, r10
    ldrb r1, [r0, #0x00]
    movs r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    bne _0804A0EE
    b _0804A21C
_0804A0EE:
    movs r0, #0x00
    mov r9, r0
    b _0804A20E
_0804A0F4: .4byte 0x00000814
_0804A0F8:
    mov r2, r9
    lsls r1, r2, #0x02
    ldr r0, _0804A19C @ =0x000007F4
    add r0, r8
    adds r0, r0, r1
    ldr r2, [r0, #0x00]
    cmp r2, r10
    bne _0804A10A
    b _0804A20A
_0804A10A:
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r3, #0x00
    ldsh r0, [r0, r3]
    cmp r0, #0x00
    ble _0804A118
    b _0804A208
_0804A118:
    movs r4, #0xC9
    lsls r4, r4, #0x01
    adds r0, r2, r4
    ldrb r1, [r0, #0x00]
    movs r3, #0x01
    adds r0, r3, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _0804A208
    movs r1, #0x24
    ldsh r0, [r2, r1]
    str r0, [sp, #0x01C]
    add r6, sp, #0x01C
    str r3, [r6, #0x04]
    ldrh r1, [r2, #0x20]
    ldr r0, _0804A1A0 @ =0xFFFF0000
    ldr r5, [sp, #0x024]
    ands r5, r0
    orrs r5, r1
    str r5, [sp, #0x024]
    movs r3, #0x22
    ldsh r4, [r2, r3]
    movs r0, #0x24
    ldsh r1, [r2, r0]
    movs r0, #0x90
    lsls r0, r0, #0x06
    bl __divsi3
    subs r4, r4, r0
    lsls r4, r4, #0x10
    ldr r1, _0804A1A4 @ =0x0000FFFF
    adds r2, r1, #0x0
    ands r2, r5
    orrs r2, r4
    str r2, [sp, #0x024]
    add r0, sp, #0x024
    movs r4, #0x00
    ldsh r3, [r0, r4]
    adds r4, r0, #0x0
    cmp r3, #0xF3
    bgt _0804A208
    movs r0, #0x04
    negs r0, r0
    cmp r3, r0
    ble _0804A208
    asrs r0, r2, #0x10
    cmp r0, #0xC8
    bgt _0804A208
    cmp r0, #0xA0
    ble _0804A186
    ands r2, r1
    movs r0, #0xA0
    lsls r0, r0, #0x10
    orrs r2, r0
    str r2, [sp, #0x024]
_0804A186:
    mov r0, r9
    cmp r0, #0x01
    beq _0804A1C8
    cmp r7, #0x01
    beq _0804A1B8
    cmp r7, #0x01
    bgt _0804A1A8
    cmp r7, #0x00
    beq _0804A1AE
    b _0804A1F4
    .byte 0x00, 0x00
_0804A19C: .4byte 0x000007F4
_0804A1A0: .4byte 0xFFFF0000
_0804A1A4: .4byte 0x0000FFFF
_0804A1A8:
    cmp r7, #0x02
    beq _0804A1C0
    b _0804A1F4
_0804A1AE:
    ldr r2, _0804A1B4 @ =0x0807AF94
    b _0804A1F6
    .byte 0x00, 0x00
_0804A1B4: .4byte 0x0807AF94
_0804A1B8:
    ldr r2, _0804A1BC @ =0x0807AF9C
    b _0804A1F6
_0804A1BC: .4byte 0x0807AF9C
_0804A1C0:
    ldr r2, _0804A1C4 @ =0x0807AFA4
    b _0804A1F6
_0804A1C4: .4byte 0x0807AFA4
_0804A1C8:
    cmp r7, #0x01
    beq _0804A1E4
    cmp r7, #0x01
    bgt _0804A1D6
    cmp r7, #0x00
    beq _0804A1DC
    b _0804A1F4
_0804A1D6:
    cmp r7, #0x02
    beq _0804A1EC
    b _0804A1F4
_0804A1DC:
    ldr r2, _0804A1E0 @ =0x0807AFAC
    b _0804A1F6
_0804A1E0: .4byte 0x0807AFAC
_0804A1E4:
    ldr r2, _0804A1E8 @ =0x0807AFB4
    b _0804A1F6
_0804A1E8: .4byte 0x0807AFB4
_0804A1EC:
    ldr r2, _0804A1F0 @ =0x0807AFBC
    b _0804A1F6
_0804A1F0: .4byte 0x0807AFBC
_0804A1F4:
    movs r2, #0x00
_0804A1F6:
    movs r0, #0x00
    str r0, [sp, #0x000]
    str r6, [sp, #0x004]
    adds r0, r2, #0x0
    adds r1, r4, #0x0
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
_0804A208:
    adds r7, #0x01
_0804A20A:
    movs r1, #0x01
    add r9, r1
_0804A20E:
    movs r0, #0xFE
    lsls r0, r0, #0x03
    add r0, r8
    ldrb r0, [r0, #0x00]
    cmp r9, r0
    bge _0804A21C
    b _0804A0F8
_0804A21C:
    ldr r0, _0804A2DC @ =0x000007DA
    add r0, r8
    ldrh r1, [r0, #0x00]
    movs r0, #0xF0
    lsls r0, r0, #0x04
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x02
    cmp r0, r1
    bne _0804A302
    ldr r0, _0804A2E0 @ =0x00000814
    add r0, r8
    ldr r2, [r0, #0x00]
    ldr r0, [r2, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0804A302
    movs r3, #0xC9
    lsls r3, r3, #0x01
    adds r0, r2, r3
    ldrb r1, [r0, #0x00]
    movs r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    beq _0804A302
    movs r4, #0x00
    movs r0, #0xFE
    lsls r0, r0, #0x03
    add r0, r8
    ldrb r0, [r0, #0x00]
    cmp r4, r0
    bge _0804A302
    add r6, sp, #0x028
_0804A260:
    lsls r1, r4, #0x02
    ldr r0, _0804A2E4 @ =0x000007F4
    add r0, r8
    adds r0, r0, r1
    ldr r2, [r0, #0x00]
    ldr r0, _0804A2E0 @ =0x00000814
    add r0, r8
    ldr r0, [r0, #0x00]
    cmp r2, r0
    beq _0804A2F4
    adds r0, r2, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r3, #0x20
    adds r0, r3, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _0804A2F4
    movs r4, #0xC9
    lsls r4, r4, #0x01
    adds r0, r2, r4
    ldrb r1, [r0, #0x00]
    adds r0, r3, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _0804A302
    movs r1, #0x24
    ldsh r0, [r2, r1]
    str r0, [sp, #0x028]
    movs r0, #0x01
    str r0, [r6, #0x04]
    ldrh r1, [r2, #0x20]
    ldr r0, _0804A2E8 @ =0xFFFF0000
    ldr r4, [sp, #0x030]
    ands r4, r0
    orrs r4, r1
    str r4, [sp, #0x030]
    movs r3, #0x22
    ldsh r5, [r2, r3]
    movs r0, #0x24
    ldsh r1, [r2, r0]
    movs r0, #0x90
    lsls r0, r0, #0x06
    bl __divsi3
    subs r5, r5, r0
    lsls r5, r5, #0x10
    ldr r0, _0804A2EC @ =0x0000FFFF
    ands r4, r0
    orrs r4, r5
    str r4, [sp, #0x030]
    movs r0, #0x00
    str r0, [sp, #0x000]
    str r6, [sp, #0x004]
    ldr r0, _0804A2F0 @ =0x0807AFC4
    add r1, sp, #0x030
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    b _0804A302
    .byte 0x00, 0x00
_0804A2DC: .4byte 0x000007DA
_0804A2E0: .4byte 0x00000814
_0804A2E4: .4byte 0x000007F4
_0804A2E8: .4byte 0xFFFF0000
_0804A2EC: .4byte 0x0000FFFF
_0804A2F0: .4byte 0x0807AFC4
_0804A2F4:
    adds r4, #0x01
    movs r0, #0xFE
    lsls r0, r0, #0x03
    add r0, r8
    ldrb r0, [r0, #0x00]
    cmp r4, r0
    blt _0804A260
_0804A302:
    ldr r7, _0804A3A8 @ =0x0000072C
    add r7, r8
    movs r5, #0x00
    movs r1, #0x01
    mov r9, r1
    add r6, sp, #0x034
_0804A30E:
    adds r0, r7, r5
    ldrb r1, [r0, #0x00]
    mov r0, r9
    ands r0, r1
    cmp r0, #0x00
    beq _0804A352
    lsls r1, r5, #0x02
    adds r0, r7, #0x0
    adds r0, #0x20
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    ldrb r1, [r4, #0x10]
    mov r0, r9
    ands r0, r1
    cmp r0, #0x00
    beq _0804A352
    ldr r0, [r4, #0x04]
    cmp r0, #0x00
    beq _0804A352
    movs r2, #0x24
    ldsh r0, [r4, r2]
    str r0, [sp, #0x034]
    mov r3, r9
    str r3, [r6, #0x04]
    ldr r0, [r4, #0x04]
    adds r1, r4, #0x0
    adds r1, #0x14
    ldr r2, [r4, #0x1C]
    ldr r3, [r4, #0x20]
    ldr r4, [r4, #0x18]
    str r4, [sp, #0x000]
    str r6, [sp, #0x004]
    bl oam_renderCellData
_0804A352:
    adds r5, #0x01
    cmp r5, #0x1F
    ble _0804A30E
    ldr r0, _0804A3AC @ =0x00000814
    add r0, r8
    ldr r5, [r0, #0x00]
    adds r7, r5, #0x0
    adds r7, #0x20
    movs r4, #0x24
    ldsh r0, [r5, r4]
    str r0, [sp, #0x03C]
    movs r0, #0x00
    ldr r1, [sp, #0x054]
    str r0, [r1, #0x04]
    adds r0, r5, #0x0
    adds r0, #0xB4
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0804A380
    b _0804A4AC
_0804A380:
    ldr r0, [r5, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _0804A38C
    b _0804A4AC
_0804A38C:
    ldr r2, [r5, #0x08]
    cmp r2, #0x00
    beq _0804A394
    b _0804A4AC
_0804A394:
    movs r6, #0x01
    adds r0, r5, #0x0
    adds r0, #0x85
    ldrb r1, [r0, #0x00]
    adds r4, r0, #0x0
    cmp r1, #0x54
    bne _0804A3B0
    movs r6, #0x02
    b _0804A3C6
    .byte 0x00, 0x00
_0804A3A8: .4byte 0x0000072C
_0804A3AC: .4byte 0x00000814
_0804A3B0:
    cmp r1, #0x5A
    bne _0804A3B8
    movs r6, #0x03
    b _0804A3C6
_0804A3B8:
    cmp r1, #0x5C
    bne _0804A3C0
    movs r6, #0x04
    b _0804A3C6
_0804A3C0:
    cmp r1, #0x58
    bne _0804A3C6
    movs r6, #0x05
_0804A3C6:
    adds r1, r5, #0x0
    adds r1, #0xB4
    ldrh r3, [r1, #0x00]
    movs r0, #0x0C
    ands r0, r3
    cmp r0, #0x00
    bne _0804A3EC
    adds r0, r5, #0x0
    adds r0, #0xBC
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0804A3E4
    ldrb r0, [r4, #0x00]
    cmp r0, #0x4F
    bhi _0804A3EC
_0804A3E4:
    movs r0, #0x01
    ands r0, r3
    cmp r0, #0x00
    beq _0804A438
_0804A3EC:
    adds r0, r5, #0x0
    adds r0, #0x7E
    ldrb r3, [r0, #0x00]
    subs r0, r3, #0x7
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x01
    bls _0804A438
    adds r0, r3, #0x0
    cmp r0, #0x05
    beq _0804A438
    cmp r0, #0x06
    beq _0804A438
    cmp r0, #0x0D
    beq _0804A438
    cmp r0, #0x0F
    bne _0804A418
    adds r0, r5, #0x0
    adds r0, #0xB0
    ldrb r0, [r0, #0x00]
    cmp r0, #0x03
    bne _0804A438
_0804A418:
    adds r0, r5, #0x0
    adds r0, #0xBC
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0804A428
    ldrb r0, [r4, #0x00]
    cmp r0, #0x50
    beq _0804A454
_0804A428:
    str r6, [sp, #0x000]
    adds r0, r5, #0x0
    ldr r1, [sp, #0x050]
    adds r2, r7, #0x0
    ldr r3, [sp, #0x054]
    bl sub_803E1F4
    b _0804A454
_0804A438:
    cmp r2, #0x00
    bne _0804A454
    ldrh r1, [r1, #0x00]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _0804A454
    str r6, [sp, #0x000]
    adds r0, r5, #0x0
    ldr r1, [sp, #0x050]
    adds r2, r7, #0x0
    ldr r3, [sp, #0x054]
    bl sub_803E1F4
_0804A454:
    ldrb r0, [r4, #0x00]
    cmp r0, #0x5C
    bne _0804A4AC
    ldr r0, _0804A4C8 @ =0x03002E20
    ldr r0, [r0, #0x14]
    movs r1, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _0804A4AC
    movs r2, #0x20
    ldsh r0, [r5, r2]
    adds r0, #0x02
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    ldr r2, _0804A4CC @ =0xFFFF0000
    ldr r1, [sp, #0x04C]
    ands r1, r2
    orrs r1, r0
    str r1, [sp, #0x04C]
    movs r3, #0x22
    ldsh r0, [r5, r3]
    adds r0, #0x07
    lsls r0, r0, #0x10
    ldr r2, _0804A4D0 @ =0x0000FFFF
    ands r1, r2
    orrs r1, r0
    str r1, [sp, #0x04C]
    movs r4, #0x24
    ldsh r0, [r5, r4]
    str r0, [sp, #0x044]
    movs r0, #0x88
    lsls r0, r0, #0x01
    add r4, sp, #0x044
    str r0, [r4, #0x04]
    movs r0, #0x24
    ldsh r3, [r5, r0]
    ldr r0, _0804A4D4 @ =0x0807AF14
    add r1, sp, #0x04C
    movs r2, #0x00
    str r2, [sp, #0x000]
    str r4, [sp, #0x004]
    adds r2, r3, #0x0
    bl oam_renderCellData
_0804A4AC:
    adds r0, r5, #0x0
    ldr r1, [sp, #0x050]
    ldr r2, [sp, #0x054]
    bl sub_803E1A0
    add sp, #0x058
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804A4C8: .4byte 0x03002E20
_0804A4CC: .4byte 0xFFFF0000
_0804A4D0: .4byte 0x0000FFFF
_0804A4D4: .4byte 0x0807AF14
    thumb_func_start sub_804A4D8
sub_804A4D8:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    ldr r1, _0804A4F8 @ =0x000007D4
    adds r0, r4, r1
    ldrb r0, [r0, #0x00]
    movs r1, #0x0F
    ands r1, r0
    cmp r1, #0x04
    bne _0804A4EC
    b _0804A6FA
_0804A4EC:
    cmp r1, #0x04
    ble _0804A4FC
    cmp r1, #0x05
    bne _0804A4F6
    b _0804A768
_0804A4F6:
    b _0804A76C
_0804A4F8: .4byte 0x000007D4
_0804A4FC:
    cmp r1, #0x01
    bge _0804A502
    b _0804A76C
_0804A502:
    ldr r1, _0804A528 @ =0x000007DA
    adds r0, r4, r1
    ldrh r0, [r0, #0x00]
    movs r1, #0xF0
    lsls r1, r1, #0x04
    ands r1, r0
    movs r0, #0x80
    lsls r0, r0, #0x02
    cmp r1, r0
    bne _0804A518
    b _0804A678
_0804A518:
    cmp r1, r0
    bgt _0804A52C
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    beq _0804A554
    b _0804A76C
    .byte 0x00, 0x00
_0804A528: .4byte 0x000007DA
_0804A52C:
    movs r0, #0x80
    lsls r0, r0, #0x03
    cmp r1, r0
    beq _0804A540
    movs r0, #0x80
    lsls r0, r0, #0x04
    cmp r1, r0
    bne _0804A53E
    b _0804A6EC
_0804A53E:
    b _0804A76C
_0804A540:
    ldr r1, _0804A588 @ =0x00000814
    adds r0, r4, r1
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _0804A554
    bl sub_804E398
_0804A554:
    adds r0, r4, #0x0
    bl sub_804D94C
    adds r0, r4, #0x0
    bl sub_804F1F8
    ldr r1, _0804A58C @ =0x00000C88
    adds r0, r4, r1
    ldr r1, [r0, #0x00]
    adds r5, r0, #0x0
    cmp r1, #0x00
    bge _0804A590
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    bne _0804A57E
    movs r0, #0xFF
    lsls r0, r0, #0x08
    ands r1, r0
    cmp r1, #0x00
    beq _0804A596
_0804A57E:
    adds r0, r4, #0x0
    bl sub_804DA80
    b _0804A596
    .byte 0x00, 0x00
_0804A588: .4byte 0x00000814
_0804A58C: .4byte 0x00000C88
_0804A590:
    adds r0, r4, #0x0
    bl sub_804DA80
_0804A596:
    adds r0, r4, #0x0
    bl sub_804E4CC
    ldr r1, [r5, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r1, #0x00
    bge _0804A5B6
    movs r0, #0x02
    ands r1, r0
    cmp r1, #0x00
    beq _0804A64E
    adds r0, r4, #0x0
    bl sub_804D4B4
    b _0804A64E
_0804A5B6:
    ldr r3, _0804A5D8 @ =0x03002E20
    movs r5, #0x00
    ldr r1, _0804A5DC @ =0x00000CAC
    adds r0, r3, r1
    ldr r1, [r0, #0x00]
    ands r2, r1
    cmp r2, #0x00
    beq _0804A5E0
    movs r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    bne _0804A648
    movs r0, #0x04
    ands r1, r0
    cmp r1, #0x00
    bne _0804A648
    b _0804A64E
_0804A5D8: .4byte 0x03002E20
_0804A5DC: .4byte 0x00000CAC
_0804A5E0:
    ldr r1, _0804A600 @ =0x000007FE
    adds r0, r3, r1
    ldrh r2, [r0, #0x00]
    movs r1, #0xF0
    lsls r1, r1, #0x04
    ands r1, r2
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    beq _0804A604
    movs r0, #0x80
    lsls r0, r0, #0x03
    cmp r1, r0
    beq _0804A624
_0804A5FC:
    movs r5, #0x01
    b _0804A648
_0804A600: .4byte 0x000007FE
_0804A604:
    movs r0, #0x10
    ands r0, r2
    cmp r0, #0x00
    beq _0804A5FC
    movs r1, #0x00
    ldr r0, _0804A620 @ =0x03002C60
    ldrh r0, [r0, #0x10]
    cmp r0, #0x00
    bne _0804A618
    movs r1, #0x01
_0804A618:
    cmp r1, #0x00
    beq _0804A644
    b _0804A5FC
    .byte 0x00, 0x00
_0804A620: .4byte 0x03002C60
_0804A624:
    movs r1, #0x00
    ldr r2, _0804A670 @ =0x03002C60
    ldrh r0, [r2, #0x08]
    cmp r0, #0x00
    bne _0804A630
    movs r1, #0x01
_0804A630:
    cmp r1, #0x00
    bne _0804A642
    movs r1, #0x00
    ldrh r0, [r2, #0x0A]
    cmp r0, #0x00
    bne _0804A63E
    movs r1, #0x01
_0804A63E:
    cmp r1, #0x00
    beq _0804A644
_0804A642:
    movs r5, #0x01
_0804A644:
    cmp r5, #0x00
    beq _0804A64E
_0804A648:
    adds r0, r4, #0x0
    bl sub_804D4B4
_0804A64E:
    ldr r1, _0804A674 @ =0x000007DA
    adds r0, r4, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    beq _0804A662
    adds r0, r4, #0x0
    bl sub_804E948
_0804A662:
    adds r0, r4, #0x0
    bl sub_804E144
    adds r0, r4, #0x0
    bl sub_804F2C0
    b _0804A760
_0804A670: .4byte 0x03002C60
_0804A674: .4byte 0x000007DA
_0804A678:
    adds r0, r4, #0x0
    bl sub_804D94C
    adds r0, r4, #0x0
    bl sub_804F1F8
    adds r0, r4, #0x0
    bl sub_804D4B4
    ldr r1, _0804A6E4 @ =0x00000C88
    adds r0, r4, r1
    ldr r1, [r0, #0x00]
    adds r5, r0, #0x0
    cmp r1, #0x00
    bge _0804A69E
    movs r0, #0x01
    ands r1, r0
    cmp r1, #0x00
    bne _0804A6AE
_0804A69E:
    ldr r1, [r5, #0x00]
    cmp r1, #0x00
    bge _0804A6B4
    movs r0, #0xFF
    lsls r0, r0, #0x08
    ands r1, r0
    cmp r1, #0x00
    beq _0804A6B4
_0804A6AE:
    adds r0, r4, #0x0
    bl sub_804DA80
_0804A6B4:
    adds r0, r4, #0x0
    bl sub_804E4CC
    ldr r1, _0804A6E8 @ =0x000007DA
    adds r0, r4, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _0804A6D6
    adds r0, r4, #0x0
    bl sub_804E8C0
    adds r0, r4, #0x0
    bl sub_804E948
_0804A6D6:
    adds r0, r4, #0x0
    bl sub_804F340
    adds r0, r4, #0x0
    bl sub_804F494
    b _0804A76C
_0804A6E4: .4byte 0x00000C88
_0804A6E8: .4byte 0x000007DA
_0804A6EC:
    adds r0, r4, #0x0
    bl sub_804D4B4
    adds r0, r4, #0x0
    bl sub_804DCB0
    b _0804A760
_0804A6FA:
    ldr r1, _0804A71C @ =0x000007DA
    adds r0, r4, r1
    ldrh r0, [r0, #0x00]
    movs r1, #0xF0
    lsls r1, r1, #0x04
    ands r1, r0
    movs r0, #0x80
    lsls r0, r0, #0x02
    cmp r1, r0
    beq _0804A74C
    cmp r1, r0
    bgt _0804A720
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    beq _0804A732
    b _0804A760
_0804A71C: .4byte 0x000007DA
_0804A720:
    movs r0, #0x80
    lsls r0, r0, #0x03
    cmp r1, r0
    beq _0804A732
    movs r0, #0x80
    lsls r0, r0, #0x04
    cmp r1, r0
    beq _0804A75A
    b _0804A760
_0804A732:
    adds r0, r4, #0x0
    bl sub_804D94C
    adds r0, r4, #0x0
    bl sub_804E144
    adds r0, r4, #0x0
    bl sub_804F2C0
    adds r0, r4, #0x0
    bl sub_804DA80
    b _0804A760
_0804A74C:
    adds r0, r4, #0x0
    bl sub_804D94C
    adds r0, r4, #0x0
    bl sub_804F500
    b _0804A76C
_0804A75A:
    adds r0, r4, #0x0
    bl sub_804DCB0
_0804A760:
    adds r0, r4, #0x0
    bl sub_804F340
    b _0804A76C
_0804A768:
    bl sub_8025CF0
_0804A76C:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_804A774
sub_804A774:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    add sp, #-0x004
    adds r3, r0, #0x0
    lsls r0, r1, #0x18
    lsrs r2, r0, #0x18
    cmp r2, #0x00
    beq _0804A7F8
    lsrs r0, r0, #0x19
    lsls r0, r0, #0x02
    ldr r4, _0804A804 @ =0x00000C38
    adds r1, r3, r4
    adds r0, r1, r0
    ldr r6, [r0, #0x00]
    cmp r6, #0x00
    beq _0804A7F8
    mov r8, r1
_0804A798:
    subs r7, r2, #0x2
    lsrs r0, r7, #0x1F
    adds r0, r7, r0
    asrs r0, r0, #0x01
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x16
    add r0, r8
    ldr r5, [r0, #0x00]
    cmp r5, #0x00
    beq _0804A7F8
    adds r0, r6, #0x0
    str r2, [sp, #0x000]
    bl sub_803DAA8
    adds r4, r0, #0x0
    adds r0, r5, #0x0
    bl sub_803DAA8
    ldr r2, [sp, #0x000]
    cmp r4, r0
    ble _0804A7F8
    ldr r0, [r5, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0804A7F8
    lsrs r0, r2, #0x01
    lsls r0, r0, #0x02
    add r0, r8
    str r5, [r0, #0x00]
    adds r0, r5, #0x0
    adds r0, #0xBA
    strh r2, [r0, #0x00]
    lsls r0, r7, #0x18
    lsrs r2, r0, #0x18
    lsrs r0, r0, #0x19
    lsls r0, r0, #0x02
    mov r3, r8
    adds r1, r3, r0
    str r6, [r1, #0x00]
    adds r0, r6, #0x0
    adds r0, #0xBA
    strh r2, [r0, #0x00]
    cmp r2, #0x00
    beq _0804A7F8
    ldr r6, [r1, #0x00]
    cmp r6, #0x00
    bne _0804A798
_0804A7F8:
    add sp, #0x004
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0804A804: .4byte 0x00000C38
    thumb_func_start sub_804A808
sub_804A808:
    push {r4, r5, r6, r7, lr}
    adds r2, r0, #0x0
    lsls r1, r1, #0x18
    lsrs r3, r1, #0x19
    cmp r3, #0x00
    beq _0804A868
    lsls r0, r3, #0x02
    ldr r4, _0804A870 @ =0x00000C38
    adds r1, r2, r4
    adds r0, r1, r0
    ldr r4, [r0, #0x00]
    cmp r4, #0x00
    beq _0804A868
    mov r12, r1
_0804A824:
    subs r0, r3, #0x1
    lsls r0, r0, #0x18
    lsrs r6, r0, #0x18
    lsls r0, r6, #0x02
    mov r7, r12
    adds r5, r7, r0
    ldr r2, [r5, #0x00]
    cmp r2, #0x00
    beq _0804A868
    ldr r1, _0804A874 @ =0x0000017D
    adds r0, r4, r1
    adds r1, r2, r1
    ldrb r0, [r0, #0x00]
    ldrb r1, [r1, #0x00]
    cmp r0, r1
    bls _0804A868
    lsls r0, r3, #0x02
    add r0, r12
    str r2, [r0, #0x00]
    lsls r1, r3, #0x01
    adds r0, r2, #0x0
    adds r0, #0xBA
    strh r1, [r0, #0x00]
    adds r3, r6, #0x0
    str r4, [r5, #0x00]
    lsls r1, r3, #0x01
    adds r0, r4, #0x0
    adds r0, #0xBA
    strh r1, [r0, #0x00]
    cmp r3, #0x00
    beq _0804A868
    ldr r4, [r5, #0x00]
    cmp r4, #0x00
    bne _0804A824
_0804A868:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804A870: .4byte 0x00000C38
_0804A874: .4byte 0x0000017D
    thumb_func_start sub_804A878
sub_804A878:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    adds r7, r0, #0x0
    ldr r0, _0804A8C0 @ =0x000007D4
    adds r2, r7, r0
    ldrb r3, [r2, #0x00]
    movs r0, #0x0F
    ands r0, r3
    cmp r0, #0x04
    bne _0804A892
    b _0804AC98
_0804A892:
    cmp r0, #0x04
    ble _0804A898
    b _0804ACB6
_0804A898:
    cmp r0, #0x03
    beq _0804A89E
    b _0804ACB6
_0804A89E:
    ldr r1, _0804A8C4 @ =0x000007DA
    adds r0, r7, r1
    ldrh r0, [r0, #0x00]
    movs r1, #0xF0
    lsls r1, r1, #0x04
    ands r1, r0
    movs r0, #0x80
    lsls r0, r0, #0x02
    cmp r1, r0
    beq _0804A8DE
    cmp r1, r0
    bgt _0804A8C8
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    beq _0804A980
    b _0804ACB6
_0804A8C0: .4byte 0x000007D4
_0804A8C4: .4byte 0x000007DA
_0804A8C8:
    movs r0, #0x80
    lsls r0, r0, #0x03
    cmp r1, r0
    bne _0804A8D2
    b _0804AB18
_0804A8D2:
    movs r0, #0x80
    lsls r0, r0, #0x04
    cmp r1, r0
    bne _0804A8DC
    b _0804A9F4
_0804A8DC:
    b _0804ACB6
_0804A8DE:
    ldr r3, _0804A940 @ =0x00000814
    adds r0, r7, r3
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _0804A94C
    movs r3, #0x01
    movs r6, #0xFE
    lsls r6, r6, #0x03
    adds r0, r7, r6
    adds r5, r2, #0x0
    ldr r1, _0804A944 @ =0x03002350
    mov r8, r1
    ldrb r2, [r0, #0x00]
    cmp r3, r2
    bge _0804A92A
    movs r6, #0x31
    negs r6, r6
    mov r12, r6
    ldr r1, _0804A948 @ =0x00002030
    mov r9, r1
    movs r2, #0xFF
    lsls r2, r2, #0x03
    adds r4, r7, r2
    adds r2, r0, #0x0
_0804A914:
    ldm r4!, {r1}
    ldr r0, [r1, #0x48]
    mov r6, r12
    ands r0, r6
    mov r6, r9
    orrs r0, r6
    str r0, [r1, #0x48]
    adds r3, #0x01
    ldrb r0, [r2, #0x00]
    cmp r3, r0
    blt _0804A914
_0804A92A:
    ldrb r1, [r5, #0x00]
    movs r0, #0xF0
    ands r0, r1
    movs r1, #0x04
    movs r2, #0x00
    orrs r0, r1
    strb r0, [r5, #0x00]
    mov r1, r8
    str r2, [r1, #0x00]
    b _0804ACB6
    .byte 0x00, 0x00
_0804A940: .4byte 0x00000814
_0804A944: .4byte 0x03002350
_0804A948: .4byte 0x00002030
_0804A94C:
    ldr r2, _0804A978 @ =0x000007DD
    adds r0, r7, r2
    ldrb r0, [r0, #0x00]
    movs r1, #0x05
    bl sub_8032D80
    adds r4, r0, #0x0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    bl sub_804F0AC
    cmp r0, r4
    bhi _0804A968
    b _0804ACB6
_0804A968:
    ldr r3, _0804A97C @ =0x00000BEE
    adds r2, r7, r3
    ldrh r1, [r2, #0x00]
    movs r0, #0x01
    orrs r0, r1
    strh r0, [r2, #0x00]
    b _0804ACB6
    .byte 0x00, 0x00
_0804A978: .4byte 0x000007DD
_0804A97C: .4byte 0x00000BEE
_0804A980:
    movs r4, #0x00
    ldr r6, _0804A9E4 @ =0x000007D7
    adds r0, r7, r6
    ldrb r1, [r0, #0x00]
    cmp r4, r1
    bge _0804A9B4
    adds r5, r0, #0x0
    adds r6, #0x1D
    adds r3, r7, r6
    movs r6, #0x20
    movs r0, #0x7F
    mov r12, r0
_0804A998:
    ldr r0, [r3, #0x00]
    ldr r0, [r0, #0x48]
    ands r0, r6
    cmp r0, #0x00
    beq _0804A9AA
    ldrb r1, [r2, #0x00]
    mov r0, r12
    ands r0, r1
    strb r0, [r2, #0x00]
_0804A9AA:
    adds r3, #0x04
    adds r4, #0x01
    ldrb r1, [r5, #0x00]
    cmp r4, r1
    blt _0804A998
_0804A9B4:
    ldr r2, _0804A9E8 @ =0x00000814
    adds r0, r7, r2
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0804A9C6
    b _0804ACB6
_0804A9C6:
    ldr r6, _0804A9EC @ =0x000007D4
    adds r3, r7, r6
    ldrb r1, [r3, #0x00]
    movs r0, #0xF0
    ands r0, r1
    movs r1, #0x04
    movs r2, #0x00
    orrs r0, r1
    strb r0, [r3, #0x00]
    ldr r0, _0804A9F0 @ =0x03002350
    str r2, [r0, #0x00]
    bl sub_804F098
    b _0804ACB6
    .byte 0x00, 0x00
_0804A9E4: .4byte 0x000007D7
_0804A9E8: .4byte 0x00000814
_0804A9EC: .4byte 0x000007D4
_0804A9F0: .4byte 0x03002350
_0804A9F4:
    movs r5, #0x00
    movs r1, #0xFE
    lsls r1, r1, #0x03
    adds r0, r7, r1
    ldrb r1, [r0, #0x00]
    cmp r1, #0x00
    beq _0804AA1E
    ldr r6, _0804AA38 @ =0x0000017D
    ldr r2, _0804AA3C @ =0x000007F4
    adds r3, r7, r2
    adds r4, r1, #0x0
_0804AA0A:
    ldr r2, [r3, #0x00]
    adds r0, r2, r6
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0804AA16
    adds r5, #0x01
_0804AA16:
    adds r3, #0x04
    subs r4, #0x01
    cmp r4, #0x00
    bne _0804AA0A
_0804AA1E:
    cmp r5, #0x01
    ble _0804AA24
    b _0804ACB6
_0804AA24:
    movs r4, #0x00
    movs r3, #0xFE
    lsls r3, r3, #0x03
    adds r0, r7, r3
    ldr r6, _0804AA40 @ =0x000007D4
    adds r5, r7, r6
    ldr r1, _0804AA44 @ =0x00000BE4
    adds r6, r7, r1
    b _0804AAA4
    .byte 0x00, 0x00
_0804AA38: .4byte 0x0000017D
_0804AA3C: .4byte 0x000007F4
_0804AA40: .4byte 0x000007D4
_0804AA44: .4byte 0x00000BE4
_0804AA48:
    lsls r1, r4, #0x02
    ldr r2, _0804AA88 @ =0x000007F4
    adds r0, r7, r2
    adds r0, r0, r1
    ldr r2, [r0, #0x00]
    ldr r1, [r2, #0x48]
    movs r0, #0x38
    orrs r1, r0
    movs r0, #0x88
    lsls r0, r0, #0x04
    orrs r1, r0
    str r1, [r2, #0x48]
    adds r1, r2, #0x0
    adds r1, #0xBC
    movs r0, #0x00
    str r0, [r1, #0x00]
    ldr r3, _0804AA8C @ =0x000007DA
    adds r0, r7, r3
    ldrh r0, [r0, #0x00]
    adds r3, #0x26
    adds r1, r3, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _0804AA90
    adds r0, r2, #0x0
    adds r0, #0xBA
    ldrb r1, [r0, #0x00]
    adds r0, r7, #0x0
    bl sub_804A808
    b _0804AA9C
    .byte 0x00, 0x00
_0804AA88: .4byte 0x000007F4
_0804AA8C: .4byte 0x000007DA
_0804AA90:
    adds r0, r2, #0x0
    adds r0, #0xBA
    ldrb r1, [r0, #0x00]
    adds r0, r7, #0x0
    bl sub_804A774
_0804AA9C:
    adds r4, #0x01
    movs r1, #0xFE
    lsls r1, r1, #0x03
    adds r0, r7, r1
_0804AAA4:
    ldrb r0, [r0, #0x00]
    cmp r4, r0
    blt _0804AA48
    movs r0, #0x08
    str r0, [r6, #0x00]
    ldrb r1, [r5, #0x00]
    movs r0, #0xF0
    ands r0, r1
    movs r1, #0x04
    movs r2, #0x00
    mov r8, r2
    orrs r0, r1
    strb r0, [r5, #0x00]
    ldr r1, _0804AAD8 @ =0x03002350
    movs r0, #0xB4
    str r0, [r1, #0x00]
    ldr r3, _0804AADC @ =0x00000814
    adds r0, r7, r3
    ldr r0, [r0, #0x00]
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r0, r0, #0x01
    cmp r0, #0x00
    bne _0804AAE4
    ldr r6, _0804AAE0 @ =0x0807B998
    b _0804AAE6
_0804AAD8: .4byte 0x03002350
_0804AADC: .4byte 0x00000814
_0804AAE0: .4byte 0x0807B998
_0804AAE4:
    ldr r6, _0804AB0C @ =0x0807B9A0
_0804AAE6:
    movs r4, #0x78
    movs r5, #0x3F
    ldr r0, _0804AB10 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    movs r2, #0x00
    strh r4, [r0, #0x14]
    strh r5, [r0, #0x16]
    str r6, [r0, #0x04]
    mov r3, r8
    str r3, [r0, #0x0C]
    ldr r1, _0804AB14 @ =0x0804B1A9
    str r1, [r0, #0x00]
    strb r2, [r0, #0x10]
    b _0804ACB6
    .byte 0x00, 0x00
_0804AB0C: .4byte 0x0807B9A0
_0804AB10: .4byte 0x03002E20
_0804AB14: .4byte sub_804B1A8
_0804AB18:
    movs r5, #0x01
    movs r1, #0x00
    movs r6, #0xFE
    lsls r6, r6, #0x03
    adds r0, r7, r6
    ldrb r0, [r0, #0x00]
    subs r0, #0x01
    cmp r1, r0
    bge _0804AB4A
    ldr r2, _0804AC70 @ =0x00000C38
    adds r4, r7, r2
    movs r6, #0x20
    adds r2, r0, #0x0
_0804AB32:
    lsls r0, r1, #0x18
    lsrs r0, r0, #0x16
    adds r0, r4, r0
    ldr r3, [r0, #0x00]
    ldr r0, [r3, #0x48]
    ands r0, r6
    cmp r0, #0x00
    bne _0804AB44
    movs r5, #0x00
_0804AB44:
    adds r1, #0x01
    cmp r1, r2
    blt _0804AB32
_0804AB4A:
    cmp r5, #0x00
    bne _0804AB50
    b _0804ACB6
_0804AB50:
    ldr r3, _0804AC74 @ =0x000007D4
    adds r2, r7, r3
    ldrb r1, [r2, #0x00]
    movs r0, #0x7F
    ands r0, r1
    strb r0, [r2, #0x00]
    movs r6, #0xFE
    lsls r6, r6, #0x03
    adds r0, r7, r6
    ldrb r0, [r0, #0x00]
    subs r0, #0x01
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x16
    ldr r3, _0804AC70 @ =0x00000C38
    adds r1, r7, r3
    adds r1, r1, r0
    ldr r3, [r1, #0x00]
    ldr r0, [r3, #0x48]
    movs r1, #0x20
    ands r0, r1
    adds r5, r2, #0x0
    cmp r0, #0x00
    bne _0804AB96
    adds r0, r3, #0x0
    adds r0, #0x7E
    ldrb r0, [r0, #0x00]
    cmp r0, #0x0F
    beq _0804AB96
    adds r0, r3, #0x0
    adds r0, #0xCC
    ldrh r0, [r0, #0x00]
    adds r2, r3, #0x0
    adds r2, #0xBC
    cmp r0, #0x00
    beq _0804ABC8
_0804AB96:
    ldr r0, [r3, #0x48]
    ldr r1, _0804AC78 @ =0xFFFFDFFF
    ands r0, r1
    str r0, [r3, #0x48]
    adds r2, r3, #0x0
    adds r2, #0xBC
    adds r0, r3, #0x0
    adds r0, #0x50
    movs r4, #0x00
    movs r1, #0x00
    strh r1, [r0, #0x00]
    subs r0, #0x02
    strh r1, [r0, #0x00]
    str r1, [r2, #0x00]
    adds r0, #0x7E
    strh r1, [r0, #0x00]
    adds r1, r3, #0x0
    adds r1, #0x7E
    ldrb r0, [r1, #0x00]
    cmp r0, #0x0F
    bne _0804ABC8
    strb r4, [r1, #0x00]
    adds r0, r3, #0x0
    adds r0, #0x78
    strb r4, [r0, #0x00]
_0804ABC8:
    ldr r0, [r3, #0x48]
    movs r1, #0x88
    lsls r1, r1, #0x04
    orrs r0, r1
    str r0, [r3, #0x48]
    ldr r0, [r2, #0x00]
    cmp r0, #0x00
    bne _0804ACB6
    adds r0, r3, #0x0
    adds r0, #0x78
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    bne _0804ACB6
    ldr r6, _0804AC7C @ =0x00000814
    adds r4, r7, r6
    ldr r0, [r4, #0x00]
    cmp r0, r3
    bne _0804AC1E
    ldr r0, _0804AC80 @ =0x00000BAC
    adds r1, r7, r0
    ldr r2, _0804AC84 @ =0x00000BBC
    adds r0, r7, r2
    ldr r0, [r0, #0x00]
    str r0, [r1, #0x00]
    movs r6, #0xBB
    lsls r6, r6, #0x04
    adds r1, r7, r6
    adds r2, #0x04
    adds r0, r7, r2
    ldr r0, [r0, #0x00]
    str r0, [r1, #0x00]
    adds r6, #0x14
    adds r0, r7, r6
    ldrh r1, [r0, #0x00]
    subs r2, #0x0C
    adds r0, r7, r2
    strh r1, [r0, #0x00]
    adds r6, #0x02
    adds r0, r7, r6
    ldrh r1, [r0, #0x00]
    adds r2, #0x02
    adds r0, r7, r2
    strh r1, [r0, #0x00]
_0804AC1E:
    ldr r1, [r3, #0x48]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0804AC32
    ldr r0, _0804AC88 @ =0xFFFFDFC7
    ands r1, r0
    movs r0, #0x38
    orrs r1, r0
    str r1, [r3, #0x48]
_0804AC32:
    ldrh r1, [r3, #0x34]
    ldr r0, _0804AC8C @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
    adds r2, r3, #0x0
    adds r2, #0xA4
    ldrh r1, [r2, #0x00]
    movs r6, #0x80
    lsls r6, r6, #0x06
    adds r0, r6, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    ldr r0, [r4, #0x00]
    cmp r3, r0
    bne _0804AC58
    movs r1, #0x12
    ldr r2, _0804AC90 @ =0x00000BE4
    adds r0, r7, r2
    str r1, [r0, #0x00]
_0804AC58:
    ldrb r1, [r5, #0x00]
    movs r0, #0xF0
    ands r0, r1
    movs r1, #0x04
    orrs r0, r1
    strb r0, [r5, #0x00]
    ldr r1, _0804AC94 @ =0x03002350
    movs r0, #0xF0
    lsls r0, r0, #0x01
    str r0, [r1, #0x00]
    b _0804ACB6
    .byte 0x00, 0x00
_0804AC70: .4byte 0x00000C38
_0804AC74: .4byte 0x000007D4
_0804AC78: .4byte 0xFFFFDFFF
_0804AC7C: .4byte 0x00000814
_0804AC80: .4byte 0x00000BAC
_0804AC84: .4byte 0x00000BBC
_0804AC88: .4byte 0xFFFFDFC7
_0804AC8C: .4byte 0x0000FFFD
_0804AC90: .4byte 0x00000BE4
_0804AC94: .4byte 0x03002350
_0804AC98:
    ldr r1, _0804ACA8 @ =0x03002350
    ldr r0, [r1, #0x00]
    cmp r0, #0x00
    beq _0804ACAC
    subs r0, #0x01
    str r0, [r1, #0x00]
    b _0804ACB6
    .byte 0x00, 0x00
_0804ACA8: .4byte 0x03002350
_0804ACAC:
    movs r0, #0xF0
    ands r0, r3
    movs r1, #0x05
    orrs r0, r1
    strb r0, [r2, #0x00]
_0804ACB6:
    movs r2, #0x00
    ldr r3, _0804ACF4 @ =0x000007D7
    adds r0, r7, r3
    ldrb r6, [r0, #0x00]
    cmp r2, r6
    bge _0804ACE8
    adds r3, r0, #0x0
    ldr r0, _0804ACF8 @ =0x000007F4
    adds r1, r7, r0
    movs r5, #0x20
    ldr r4, _0804ACFC @ =0x03005C60
_0804ACCC:
    ldr r0, [r1, #0x00]
    ldr r0, [r0, #0x48]
    ands r0, r5
    cmp r0, #0x00
    beq _0804ACDC
    ldr r0, [r4, #0x00]
    adds r0, #0x01
    str r0, [r4, #0x00]
_0804ACDC:
    adds r1, #0x04
    adds r4, #0x04
    adds r2, #0x01
    ldrb r6, [r3, #0x00]
    cmp r2, r6
    blt _0804ACCC
_0804ACE8:
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0804ACF4: .4byte 0x000007D7
_0804ACF8: .4byte 0x000007F4
_0804ACFC: .4byte 0x03005C60
    thumb_func_start sub_804AD00
sub_804AD00:
    push {r4, r5, r6, r7, lr}
    adds r5, r0, #0x0
    adds r7, r2, #0x0
    lsls r1, r1, #0x10
    lsrs r6, r1, #0x10
    adds r4, r5, #0x0
    ldr r0, _0804AD34 @ =0x03002E20
    ldr r1, _0804AD38 @ =0x0000080D
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x02
    bne _0804ADAE
    ldr r2, _0804AD3C @ =0x00000C5E
    adds r0, r4, r2
    ldrh r1, [r0, #0x00]
    movs r0, #0xB4
    lsls r0, r0, #0x01
    subs r0, r0, r1
    cmp r0, #0x30
    bne _0804AD44
    ldr r0, _0804AD40 @ =0x000007E9
    adds r1, r4, r0
    movs r0, #0x00
    strb r0, [r1, #0x00]
    b _0804ADAE
    .byte 0x00, 0x00
_0804AD34: .4byte 0x03002E20
_0804AD38: .4byte 0x0000080D
_0804AD3C: .4byte 0x00000C5E
_0804AD40: .4byte 0x000007E9
_0804AD44:
    cmp r0, #0x03
    bgt _0804AD50
    movs r1, #0xA0
    lsls r1, r1, #0x13
    movs r0, #0x00
    b _0804ADAC
_0804AD50:
    cmp r0, #0x07
    ble _0804ADA4
    cmp r0, #0x0B
    bgt _0804AD60
    movs r1, #0xA0
    lsls r1, r1, #0x13
    movs r0, #0x00
    b _0804ADAC
_0804AD60:
    cmp r0, #0x0F
    ble _0804ADA4
    cmp r0, #0x13
    bgt _0804AD70
    movs r1, #0xA0
    lsls r1, r1, #0x13
    movs r0, #0x00
    b _0804ADAC
_0804AD70:
    cmp r0, #0x17
    ble _0804ADA4
    cmp r0, #0x1B
    bgt _0804AD80
    movs r1, #0xA0
    lsls r1, r1, #0x13
    movs r0, #0x00
    b _0804ADAC
_0804AD80:
    cmp r0, #0x1F
    ble _0804ADA4
    cmp r0, #0x23
    bgt _0804AD90
    movs r1, #0xA0
    lsls r1, r1, #0x13
    movs r0, #0x00
    b _0804ADAC
_0804AD90:
    cmp r0, #0x27
    ble _0804ADA4
    cmp r0, #0x2B
    bgt _0804ADA0
    movs r1, #0xA0
    lsls r1, r1, #0x13
    movs r0, #0x00
    b _0804ADAC
_0804ADA0:
    cmp r0, #0x2F
    bgt _0804ADAE
_0804ADA4:
    movs r1, #0xA0
    lsls r1, r1, #0x13
    ldr r2, _0804ADC4 @ =0x00007FFF
    adds r0, r2, #0x0
_0804ADAC:
    strh r0, [r1, #0x00]
_0804ADAE:
    ldr r1, [r4, #0x00]
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _0804ADE8
    movs r0, #0x02
    ands r1, r0
    cmp r1, #0x00
    beq _0804ADCC
    ldr r1, _0804ADC8 @ =0x0804B13D
    b _0804ADEA
_0804ADC4: .4byte 0x00007FFF
_0804ADC8: .4byte sub_804B13C
_0804ADCC:
    adds r0, r4, #0x0
    bl sub_8032C2C
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    ldr r1, _0804ADE0 @ =0x0804B0A1
    cmp r0, #0x0E
    bne _0804ADEA
    ldr r1, _0804ADE4 @ =0x0804B0E9
    b _0804ADEA
_0804ADE0: .4byte sub_804B0A0
_0804ADE4: .4byte sub_804B0E8
_0804ADE8:
    ldr r1, _0804AE04 @ =0x0804B019
_0804ADEA:
    movs r2, #0xFA
    lsls r2, r2, #0x03
    adds r0, r5, r2
    str r1, [r0, #0x00]
    lsls r1, r6, #0x10
    asrs r1, r1, #0x10
    adds r0, r4, #0x0
    adds r2, r7, #0x0
    bl sub_8031E14
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0804AE04: .4byte sub_804B018
    thumb_func_start sub_804AE08
sub_804AE08:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    movs r1, #0x00
    bl sub_804AED4
    ldr r1, [r0, #0x00]
    ldr r2, [r0, #0x04]
    adds r0, #0x7C
    movs r5, #0x80
    lsls r5, r5, #0x08
    adds r3, r5, #0x0
    ldrh r0, [r0, #0x00]
    adds r3, r3, r0
    lsls r3, r3, #0x10
    asrs r3, r3, #0x10
    adds r0, r4, #0x0
    bl sub_80329E0
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_804AE34
sub_804AE34:
    ldr r2, _0804AE50 @ =0x00000814
    adds r1, r0, r2
    movs r2, #0x00
    str r2, [r1, #0x00]
    movs r3, #0xFE
    lsls r3, r3, #0x03
    adds r1, r0, r3
    strb r2, [r1, #0x00]
    ldr r1, _0804AE54 @ =0x000007F1
    adds r0, r0, r1
    movs r1, #0x08
    strb r1, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
_0804AE50: .4byte 0x00000814
_0804AE54: .4byte 0x000007F1
    thumb_func_start sub_804AE58
sub_804AE58:
    push {r4, r5, r6, r7, lr}
    adds r5, r0, #0x0
    adds r7, r1, #0x0
    adds r6, r2, #0x0
    movs r0, #0xFE
    lsls r0, r0, #0x03
    adds r3, r5, r0
    adds r0, #0x01
    adds r1, r5, r0
    ldrb r0, [r3, #0x00]
    ldrb r1, [r1, #0x00]
    cmp r0, r1
    bcs _0804AECC
    ldr r2, _0804AEBC @ =0x03002E20
    adds r1, r0, #0x0
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r1
    lsls r0, r0, #0x05
    ldr r3, _0804AEC0 @ =0x00000D78
    adds r0, r0, r3
    adds r4, r0, r2
    lsls r2, r1, #0x02
    ldr r3, _0804AEC4 @ =0x000007F4
    adds r0, r5, r3
    adds r0, r0, r2
    str r4, [r0, #0x00]
    adds r0, r4, #0x0
    adds r2, r7, #0x0
    adds r3, r6, #0x0
    bl sub_803C344
    cmp r6, #0x00
    beq _0804AEAA
    ldr r0, _0804AEC8 @ =0x00000814
    adds r1, r5, r0
    ldr r0, [r1, #0x00]
    cmp r0, #0x00
    bne _0804AEAA
    str r4, [r1, #0x00]
_0804AEAA:
    movs r3, #0xFE
    lsls r3, r3, #0x03
    adds r1, r5, r3
    ldrb r0, [r1, #0x00]
    adds r0, #0x01
    strb r0, [r1, #0x00]
    movs r0, #0x01
    b _0804AECE
    .byte 0x00, 0x00
_0804AEBC: .4byte 0x03002E20
_0804AEC0: .4byte 0x00000D78
_0804AEC4: .4byte 0x000007F4
_0804AEC8: .4byte 0x00000814
_0804AECC:
    movs r0, #0x00
_0804AECE:
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    thumb_func_start sub_804AED4
sub_804AED4:
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x16
    ldr r2, _0804AEE4 @ =0x00000C38
    adds r0, r0, r2
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
_0804AEE4: .4byte 0x00000C38
    thumb_func_start sub_804AEE8
sub_804AEE8:
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x16
    ldr r3, _0804AEF8 @ =0x00000C38
    adds r0, r0, r3
    adds r0, r0, r1
    str r2, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
_0804AEF8: .4byte 0x00000C38
    thumb_func_start sub_804AEFC
sub_804AEFC:
    push {lr}
    ldr r1, _0804AF0C @ =0x0000057C
    adds r0, r0, r1
    bl col_collide
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804AF0C: .4byte 0x0000057C
    thumb_func_start sub_804AF10
sub_804AF10:
    push {r4, lr}
    ldr r4, _0804AF20 @ =0x00000824
    adds r0, r0, r4
    bl sub_8030C3C
    pop {r4}
    pop {r0}
    bx r0
_0804AF20: .4byte 0x00000824
    thumb_func_start sub_804AF24
sub_804AF24:
    push {lr}
    adds r0, r1, #0x0
    adds r1, r2, #0x0
    adds r2, r3, #0x0
    ldr r3, [sp, #0x004]
    lsls r3, r3, #0x10
    asrs r3, r3, #0x10
    bl sub_8030F88
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_804AF3C
sub_804AF3C:
    push {lr}
    adds r2, r0, #0x0
    adds r3, r1, #0x0
    ldr r1, _0804AF60 @ =0x000007DA
    adds r0, r2, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x04
    ands r0, r1
    cmp r0, #0x00
    beq _0804AF64
    adds r0, r3, #0x0
    adds r0, #0xBA
    ldrb r1, [r0, #0x00]
    adds r0, r2, #0x0
    bl sub_804A808
    b _0804AF70
_0804AF60: .4byte 0x000007DA
_0804AF64:
    adds r0, r3, #0x0
    adds r0, #0xBA
    ldrb r1, [r0, #0x00]
    adds r0, r2, #0x0
    bl sub_804A774
_0804AF70:
    pop {r0}
    bx r0
    thumb_func_start vcount_804AF74
vcount_804AF74: @ 0804AF74
    push {r4, r5, lr}
    ldr r5, _0804AFC0 @ =0x03002E20
    ldr r0, _0804AFC4 @ =0x00000848
    adds r4, r5, r0
    adds r0, r4, #0x0
    bl sub_8030E5C
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    movs r2, #0x08
    bl sub_8030E60
    ldr r2, _0804AFC8 @ =0x04000020
    ldr r1, _0804AFCC @ =0x040000B0
    str r0, [r1, #0x00]
    str r2, [r1, #0x04]
    ldr r0, _0804AFD0 @ =0xA6600004
    str r0, [r1, #0x08]
    ldr r0, [r1, #0x08]
    ldr r0, _0804AFD4 @ =0x04000202
    movs r4, #0x02
    strh r4, [r0, #0x00]
    ldr r0, _0804AFD8 @ =0x000007F4
    adds r5, r5, r0
    ldr r1, [r5, #0x00]
    cmp r1, #0x00
    bne _0804AFAC
    ldr r1, _0804AFDC @ =0x0802D5F1
_0804AFAC:
    movs r0, #0x01
    bl irq_setHandler
    ldr r1, _0804AFE0 @ =0x04000200
    ldrh r0, [r1, #0x00]
    orrs r0, r4
    strh r0, [r1, #0x00]
    pop {r4, r5}
    pop {r0}
    bx r0
_0804AFC0: .4byte 0x03002E20
_0804AFC4: .4byte 0x00000848
_0804AFC8: .4byte 0x04000020
_0804AFCC: .4byte 0x040000B0
_0804AFD0: .4byte 0xA6600004
_0804AFD4: .4byte 0x04000202
_0804AFD8: .4byte 0x000007F4
_0804AFDC: .4byte main_dummyIrqHandler
_0804AFE0: .4byte 0x04000200
    thumb_func_start sub_804AFE4
sub_804AFE4:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r1, _0804B010 @ =0x000007DD
    adds r0, r4, r1
    ldrb r0, [r0, #0x00]
    bl sub_8032BC8
    movs r2, #0x83
    lsls r2, r2, #0x08
    adds r1, r2, #0x0
    cmp r0, #0x00
    beq _0804B002
    movs r0, #0x85
    lsls r0, r0, #0x08
    adds r1, r0, #0x0
_0804B002:
    ldr r2, _0804B014 @ =0x000007E6
    adds r0, r4, r2
    strh r1, [r0, #0x00]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804B010: .4byte 0x000007DD
_0804B014: .4byte 0x000007E6
    thumb_func_start sub_804B018
sub_804B018:
    push {lr}
    ldr r0, _0804B074 @ =0x03002E20
    ldr r1, _0804B078 @ =0x0000080D
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x02
    bne _0804B034
    movs r0, #0x00
    bl pltt_getBuffer
    movs r1, #0xA0
    lsls r1, r1, #0x13
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
_0804B034:
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldrh r1, [r2, #0x00]
    ldr r0, _0804B07C @ =0x0000FFF8
    ands r0, r1
    ldr r3, _0804B080 @ =0x00000401
    adds r1, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    ldr r1, _0804B084 @ =0x0400000A
    ldr r2, _0804B088 @ =0x00002F05
    adds r0, r2, #0x0
    strh r0, [r1, #0x00]
    adds r1, #0x02
    ldr r3, _0804B08C @ =0x0000F889
    adds r0, r3, #0x0
    strh r0, [r1, #0x00]
    adds r1, #0x44
    ldr r0, _0804B090 @ =0x10082C42
    str r0, [r1, #0x00]
    ldr r1, _0804B094 @ =0x0802D5F1
    movs r0, #0x01
    bl irq_setHandler
    ldr r2, _0804B098 @ =0x04000200
    ldrh r1, [r2, #0x00]
    ldr r0, _0804B09C @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x00]
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804B074: .4byte 0x03002E20
_0804B078: .4byte 0x0000080D
_0804B07C: .4byte 0x0000FFF8
_0804B080: .4byte 0x00000401
_0804B084: .4byte 0x0400000A
_0804B088: .4byte 0x00002F05
_0804B08C: .4byte 0x0000F889
_0804B090: .4byte 0x10082C42
_0804B094: .4byte main_dummyIrqHandler
_0804B098: .4byte 0x04000200
_0804B09C: .4byte 0x0000FFFD
    thumb_func_start sub_804B0A0
sub_804B0A0:
    push {lr}
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldrh r1, [r2, #0x00]
    ldr r0, _0804B0D0 @ =0x0000FFF8
    ands r0, r1
    movs r1, #0x01
    orrs r0, r1
    strh r0, [r2, #0x00]
    ldr r1, _0804B0D4 @ =0x0400000C
    ldr r2, _0804B0D8 @ =0x0000F889
    adds r0, r2, #0x0
    strh r0, [r1, #0x00]
    ldr r1, _0804B0DC @ =0x0802D5F1
    movs r0, #0x01
    bl irq_setHandler
    ldr r2, _0804B0E0 @ =0x04000200
    ldrh r1, [r2, #0x00]
    ldr r0, _0804B0E4 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x00]
    pop {r0}
    bx r0
_0804B0D0: .4byte 0x0000FFF8
_0804B0D4: .4byte 0x0400000C
_0804B0D8: .4byte 0x0000F889
_0804B0DC: .4byte main_dummyIrqHandler
_0804B0E0: .4byte 0x04000200
_0804B0E4: .4byte 0x0000FFFD
    thumb_func_start sub_804B0E8
sub_804B0E8:
    push {lr}
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldrh r1, [r2, #0x00]
    ldr r0, _0804B120 @ =0x0000FFF8
    ands r0, r1
    movs r1, #0x01
    orrs r0, r1
    strh r0, [r2, #0x00]
    ldr r1, _0804B124 @ =0x0400000C
    ldr r2, _0804B128 @ =0x0000F889
    adds r0, r2, #0x0
    strh r0, [r1, #0x00]
    adds r1, #0x44
    ldr r0, _0804B12C @ =0x060D3B44
    str r0, [r1, #0x00]
    ldr r1, _0804B130 @ =0x0802D5F1
    movs r0, #0x01
    bl irq_setHandler
    ldr r2, _0804B134 @ =0x04000200
    ldrh r1, [r2, #0x00]
    ldr r0, _0804B138 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x00]
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804B120: .4byte 0x0000FFF8
_0804B124: .4byte 0x0400000C
_0804B128: .4byte 0x0000F889
_0804B12C: .4byte 0x060D3B44
_0804B130: .4byte main_dummyIrqHandler
_0804B134: .4byte 0x04000200
_0804B138: .4byte 0x0000FFFD
    thumb_func_start sub_804B13C
sub_804B13C:
    push {lr}
    ldr r0, _0804B188 @ =0x03002E20
    ldr r1, _0804B18C @ =0x0000080D
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x02
    bne _0804B158
    movs r0, #0x00
    bl pltt_getBuffer
    movs r1, #0xA0
    lsls r1, r1, #0x13
    ldrh r0, [r0, #0x00]
    strh r0, [r1, #0x00]
_0804B158:
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldrh r1, [r2, #0x00]
    ldr r0, _0804B190 @ =0x0000FFF8
    ands r0, r1
    movs r1, #0x01
    orrs r0, r1
    strh r0, [r2, #0x00]
    ldr r1, _0804B194 @ =0x0400000C
    ldr r2, _0804B198 @ =0x0000F88B
    adds r0, r2, #0x0
    strh r0, [r1, #0x00]
    ldr r1, _0804B19C @ =0x0802D5F1
    movs r0, #0x01
    bl irq_setHandler
    ldr r2, _0804B1A0 @ =0x04000200
    ldrh r1, [r2, #0x00]
    ldr r0, _0804B1A4 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x00]
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804B188: .4byte 0x03002E20
_0804B18C: .4byte 0x0000080D
_0804B190: .4byte 0x0000FFF8
_0804B194: .4byte 0x0400000C
_0804B198: .4byte 0x0000F88B
_0804B19C: .4byte main_dummyIrqHandler
_0804B1A0: .4byte 0x04000200
_0804B1A4: .4byte 0x0000FFFD
    thumb_func_start sub_804B1A8
sub_804B1A8:
    adds r2, r0, #0x0
    ldr r0, [r2, #0x0C]
    cmp r0, #0x00
    beq _0804B1B6
    subs r0, #0x01
    str r0, [r2, #0x0C]
    b _0804B1C4
_0804B1B6:
    str r0, [r2, #0x2C]
    ldrb r0, [r2, #0x10]
    movs r1, #0x05
    orrs r1, r0
    strb r1, [r2, #0x10]
    ldr r0, _0804B1C8 @ =0x0804B1CD
    str r0, [r2, #0x00]
_0804B1C4:
    bx lr
    .byte 0x00, 0x00
_0804B1C8: .4byte sub_804B1CC
    thumb_func_start sub_804B1CC
sub_804B1CC:
    push {r4, lr}
    adds r2, r0, #0x0
    ldr r1, [r2, #0x2C]
    ldr r3, _0804B220 @ =0x080E645C
    movs r4, #0x2C
    ldsh r0, [r2, r4]
    cmp r0, #0x00
    bge _0804B1DE
    adds r0, #0x3F
_0804B1DE:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r3
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bge _0804B1F0
    ldr r3, _0804B224 @ =0x00001FFF
    adds r0, r0, r3
_0804B1F0:
    asrs r3, r0, #0x0D
    ldr r0, _0804B228 @ =0x0000FFFF
    cmp r1, r0
    ble _0804B200
    movs r0, #0x78
    str r0, [r2, #0x0C]
    ldr r0, _0804B22C @ =0x0804B231
    str r0, [r2, #0x00]
_0804B200:
    ldrh r0, [r2, #0x16]
    subs r0, r0, r3
    strh r0, [r2, #0x16]
    movs r4, #0x80
    lsls r4, r4, #0x04
    adds r0, r1, r4
    str r0, [r2, #0x2C]
    asrs r1, r1, #0x08
    movs r0, #0x80
    lsls r0, r0, #0x02
    subs r0, r0, r1
    str r0, [r2, #0x1C]
    str r0, [r2, #0x20]
    pop {r4}
    pop {r0}
    bx r0
_0804B220: .4byte 0x080E645C
_0804B224: .4byte 0x00001FFF
_0804B228: .4byte 0x0000FFFF
_0804B22C: .4byte sub_804B230
    thumb_func_start sub_804B230
sub_804B230:
    adds r1, r0, #0x0
    ldr r0, [r1, #0x0C]
    cmp r0, #0x00
    beq _0804B23E
    subs r0, #0x01
    str r0, [r1, #0x0C]
    b _0804B244
_0804B23E:
    str r0, [r1, #0x2C]
    ldr r0, _0804B248 @ =0x0804B24D
    str r0, [r1, #0x00]
_0804B244:
    bx lr
    .byte 0x00, 0x00
_0804B248: .4byte sub_804B24C
    thumb_func_start sub_804B24C
sub_804B24C:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    ldr r5, [r4, #0x2C]
    ldr r1, _0804B2A8 @ =0x080E645C
    movs r2, #0x2C
    ldsh r0, [r4, r2]
    cmp r0, #0x00
    bge _0804B25E
    adds r0, #0x3F
_0804B25E:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bge _0804B270
    ldr r1, _0804B2AC @ =0x00001FFF
    adds r0, r0, r1
_0804B270:
    asrs r6, r0, #0x0D
    ldr r0, _0804B2B0 @ =0x0000FFFF
    cmp r5, r0
    ble _0804B286
    ldr r0, _0804B2B4 @ =0x03002E20
    movs r2, #0xEA
    lsls r2, r2, #0x03
    adds r0, r0, r2
    adds r1, r4, #0x0
    bl sub_805B520
_0804B286:
    ldrh r0, [r4, #0x16]
    subs r0, r0, r6
    strh r0, [r4, #0x16]
    movs r1, #0x80
    lsls r1, r1, #0x04
    adds r0, r5, r1
    str r0, [r4, #0x2C]
    asrs r0, r5, #0x08
    movs r2, #0x80
    lsls r2, r2, #0x01
    adds r0, r0, r2
    str r0, [r4, #0x1C]
    str r0, [r4, #0x20]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804B2A8: .4byte 0x080E645C
_0804B2AC: .4byte 0x00001FFF
_0804B2B0: .4byte 0x0000FFFF
_0804B2B4: .4byte 0x03002E20
    thumb_func_start sub_804B2B8
sub_804B2B8:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r6, r0, #0x0
    lsls r1, r1, #0x10
    lsrs r7, r1, #0x10
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    mov r8, r2
    ldr r1, _0804B31C @ =0x00000BA8
    adds r0, r6, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    beq _0804B324
    ldr r2, _0804B320 @ =0x00000BAA
    adds r0, r6, r2
    ldrb r5, [r0, #0x00]
    adds r0, r6, #0x0
    adds r1, r5, #0x0
    movs r2, #0x00
    bl sub_8032AD0
    adds r4, r0, #0x0
    lsls r4, r4, #0x03
    lsls r0, r7, #0x10
    asrs r0, r0, #0x10
    subs r4, r4, r0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    adds r0, r6, #0x0
    adds r1, r5, #0x0
    movs r2, #0x00
    bl sub_8032B10
    adds r1, r0, #0x0
    lsls r1, r1, #0x03
    mov r2, r8
    lsls r0, r2, #0x10
    asrs r0, r0, #0x10
    subs r1, r1, r0
    lsls r4, r4, #0x10
    asrs r4, r4, #0x10
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    adds r0, r4, #0x0
    bl sub_802EC38
    b _0804B336
_0804B31C: .4byte 0x00000BA8
_0804B320: .4byte 0x00000BAA
_0804B324:
    lsls r1, r7, #0x10
    asrs r1, r1, #0x10
    mov r0, r8
    lsls r2, r0, #0x10
    asrs r2, r2, #0x10
    adds r0, r6, #0x0
    movs r3, #0x00
    bl sub_803285C
_0804B336:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    thumb_func_start sub_804B348
sub_804B348:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x00C
    adds r7, r0, #0x0
    ldr r0, _0804B3E0 @ =0x00000824
    adds r0, r0, r7
    mov r8, r0
    str r7, [sp, #0x000]
    ldr r4, [r0, #0x18]
    cmp r4, #0x00
    bge _0804B368
    ldr r1, _0804B3E4 @ =0x0000FFFF
    adds r4, r4, r1
_0804B368:
    lsrs r4, r4, #0x10
    mov r0, r8
    ldr r2, [r0, #0x1C]
    cmp r2, #0x00
    bge _0804B376
    ldr r1, _0804B3E4 @ =0x0000FFFF
    adds r2, r2, r1
_0804B376:
    ldr r1, _0804B3E8 @ =0x00000814
    adds r0, r7, r1
    ldr r0, [r0, #0x00]
    mov r10, r0
    lsls r4, r4, #0x10
    asrs r1, r4, #0x10
    lsrs r0, r2, #0x10
    str r0, [sp, #0x004]
    asrs r2, r2, #0x10
    adds r0, r7, #0x0
    movs r3, #0x00
    bl sub_80328D4
    adds r6, r0, #0x0
    movs r0, #0x7F
    ands r6, r0
    ldr r1, _0804B3EC @ =0x00000BA8
    adds r0, r7, r1
    ldrh r5, [r0, #0x00]
    movs r0, #0x02
    mov r9, r0
    movs r0, #0x02
    ands r5, r0
    lsls r0, r5, #0x10
    lsrs r5, r0, #0x10
    str r4, [sp, #0x008]
    cmp r6, #0x7F
    beq _0804B3D2
    adds r0, r7, #0x0
    adds r1, r6, #0x0
    bl sub_8032B50
    movs r1, #0x80
    ands r1, r0
    cmp r1, #0x00
    beq _0804B3F4
    mov r0, r10
    ldr r1, [r0, #0x08]
    movs r2, #0x00
    movs r0, #0x80
    lsls r0, r0, #0x0B
    cmp r1, r0
    ble _0804B3CE
    movs r2, #0x01
_0804B3CE:
    cmp r2, #0x00
    beq _0804B3F4
_0804B3D2:
    mov r1, r9
    orrs r5, r1
    lsls r0, r5, #0x10
    lsrs r5, r0, #0x10
    ldr r0, _0804B3F0 @ =0x00000BAA
    adds r6, r7, r0
    b _0804B3FC
_0804B3E0: .4byte 0x00000824
_0804B3E4: .4byte 0x0000FFFF
_0804B3E8: .4byte 0x00000814
_0804B3EC: .4byte 0x00000BA8
_0804B3F0: .4byte 0x00000BAA
_0804B3F4:
    ldr r0, _0804B43C @ =0x00000386
    add r0, r8
    strb r6, [r0, #0x00]
    adds r6, r0, #0x0
_0804B3FC:
    movs r0, #0xE1
    lsls r0, r0, #0x02
    add r0, r8
    strh r5, [r0, #0x00]
    mov r1, r8
    ldrh r4, [r1, #0x14]
    ldr r0, [sp, #0x008]
    asrs r1, r0, #0x10
    ldr r0, [sp, #0x004]
    lsls r2, r0, #0x10
    asrs r2, r2, #0x10
    adds r0, r7, #0x0
    bl sub_804B2B8
    ldr r1, _0804B440 @ =0x00000BE8
    adds r3, r7, r1
    lsls r0, r0, #0x10
    asrs r1, r0, #0x10
    lsls r4, r4, #0x10
    asrs r0, r4, #0x10
    subs r2, r1, r0
    cmp r2, #0x00
    blt _0804B444
    movs r1, #0x00
    movs r0, #0x80
    lsls r0, r0, #0x07
    cmp r2, r0
    ble _0804B436
    movs r1, #0x01
_0804B436:
    str r1, [r3, #0x00]
    b _0804B454
    .byte 0x00, 0x00
_0804B43C: .4byte 0x00000386
_0804B440: .4byte 0x00000BE8
_0804B444:
    movs r2, #0x00
    subs r1, r0, r1
    movs r0, #0x80
    lsls r0, r0, #0x07
    cmp r1, r0
    ble _0804B452
    movs r2, #0x01
_0804B452:
    str r2, [r3, #0x00]
_0804B454:
    ldrb r2, [r6, #0x00]
    ldr r1, _0804B47C @ =0x00000BE8
    adds r0, r7, r1
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bne _0804B480
    subs r3, r2, #0x6
    adds r4, r2, #0x0
    adds r4, #0x08
    ldr r0, [sp, #0x000]
    ldrh r1, [r0, #0x14]
    cmp r3, #0x00
    bge _0804B472
    subs r0, r2, #0x5
    adds r3, r0, r1
_0804B472:
    cmp r4, r1
    ble _0804B49A
    adds r0, r2, #0x7
    b _0804B498
    .byte 0x00, 0x00
_0804B47C: .4byte 0x00000BE8
_0804B480:
    adds r3, r2, #0x0
    subs r3, #0x08
    adds r4, r2, #0x6
    ldr r0, [sp, #0x000]
    ldrh r1, [r0, #0x14]
    cmp r3, #0x00
    bge _0804B492
    subs r0, r2, #0x7
    adds r3, r0, r1
_0804B492:
    cmp r4, r1
    ble _0804B49A
    adds r0, r2, #0x5
_0804B498:
    subs r4, r0, r1
_0804B49A:
    ldr r1, _0804B4B8 @ =0x00000BEC
    adds r0, r7, r1
    strb r3, [r0, #0x00]
    adds r1, #0x01
    adds r0, r7, r1
    strb r4, [r0, #0x00]
    add sp, #0x00C
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804B4B8: .4byte 0x00000BEC
    thumb_func_start sub_804B4BC
sub_804B4BC:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x030
    adds r7, r0, #0x0
    ldr r0, _0804B4F4 @ =0x00000824
    adds r0, r7, r0
    str r0, [sp, #0x018]
    ldr r1, _0804B4F8 @ =0x00000814
    adds r0, r7, r1
    ldr r0, [r0, #0x00]
    mov r9, r0
    ldr r2, [sp, #0x018]
    mov r10, r2
    ldr r3, _0804B4FC @ =0x00000BE4
    adds r0, r7, r3
    ldr r0, [r0, #0x00]
    cmp r0, #0x12
    bls _0804B4EA
    bl _0804C010
_0804B4EA:
    lsls r0, r0, #0x02
    ldr r1, _0804B500 @ =0x0804B504
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_0804B4F4: .4byte 0x00000824
_0804B4F8: .4byte 0x00000814
_0804B4FC: .4byte 0x00000BE4
_0804B500: .4byte 0x0804B504
    .byte 0x50, 0xB5, 0x04, 0x08, 0x50, 0xB5, 0x04, 0x08, 0x10, 0xC0, 0x04, 0x08, 0x50, 0xB5, 0x04, 0x08
    .byte 0x50, 0xB5, 0x04, 0x08, 0x50, 0xB5, 0x04, 0x08, 0x20, 0xB9, 0x04, 0x08, 0x30, 0xBA, 0x04, 0x08
    .byte 0x6C, 0xB9, 0x04, 0x08, 0xAC, 0xBB, 0x04, 0x08, 0xAC, 0xBB, 0x04, 0x08, 0xAC, 0xBB, 0x04, 0x08
    .byte 0x18, 0xBD, 0x04, 0x08, 0x18, 0xBD, 0x04, 0x08, 0x18, 0xBD, 0x04, 0x08, 0x30, 0xBE, 0x04, 0x08
    .byte 0x30, 0xBE, 0x04, 0x08, 0x30, 0xBE, 0x04, 0x08, 0x10, 0xC0, 0x04, 0x08, 0x02, 0xAD, 0xA8, 0x46
    .byte 0x03, 0xA8, 0x00, 0x90, 0x38, 0x1C, 0x00, 0x21, 0x01, 0xAA, 0x43, 0x46, 0xE7, 0xF7, 0x9E, 0xFA
    .byte 0x04, 0xAD, 0x05, 0xAE, 0x00, 0x24, 0x00, 0x94, 0x38, 0x1C, 0x01, 0x21, 0x2A, 0x1C, 0x33, 0x1C
    .byte 0xE7, 0xF7, 0x94, 0xFA, 0x01, 0x98, 0x04, 0x99, 0x40, 0x18, 0xC1, 0x0F, 0x40, 0x18, 0x40, 0x10
    .byte 0x07, 0x90, 0x02, 0x98, 0x05, 0x99, 0x40, 0x18, 0xC1, 0x0F, 0x40, 0x18, 0x40, 0x10, 0x08, 0x90
    .byte 0x00, 0x94, 0x38, 0x1C, 0x07, 0x21, 0x01, 0xAA, 0x43, 0x46, 0xE7, 0xF7, 0x7F, 0xFA, 0x00, 0x94
    .byte 0x38, 0x1C, 0x08, 0x21, 0x2A, 0x1C, 0x33, 0x1C, 0xE7, 0xF7, 0x78, 0xFA, 0x01, 0x98, 0x04, 0x99
    .byte 0x40, 0x18, 0xC1, 0x0F, 0x40, 0x18, 0x40, 0x10, 0x80, 0x46, 0x02, 0x98, 0x05, 0x99, 0x40, 0x18
    .byte 0xC1, 0x0F, 0x40, 0x18, 0x40, 0x10, 0x09, 0x90, 0x06, 0x49, 0x78, 0x18, 0x01, 0x68, 0x0B, 0x90
    .byte 0x05, 0x29, 0x01, 0xD9, 0x00, 0xF0, 0x1A, 0xFD, 0x88, 0x00, 0x03, 0x49, 0x40, 0x18, 0x00, 0x68
    .byte 0x87, 0x46, 0x00, 0x00, 0xE4, 0x0B, 0x00, 0x00, 0xF0, 0xB5, 0x04, 0x08, 0x08, 0xB6, 0x04, 0x08
    .byte 0x14, 0xB6, 0x04, 0x08, 0x10, 0xC0, 0x04, 0x08, 0x50, 0xB6, 0x04, 0x08, 0x68, 0xB7, 0x04, 0x08
    .byte 0x18, 0xB8, 0x04, 0x08, 0x10, 0x48, 0x1E, 0x21, 0x01, 0x60, 0x01, 0x20, 0x0B, 0x9A, 0x10, 0x60
    .byte 0x06, 0x98, 0x07, 0x99, 0x08, 0x9A, 0xE5, 0xF7, 0x65, 0xFC, 0x48, 0x46, 0x7C, 0x30, 0x01, 0x88
    .byte 0xEE, 0x20, 0x80, 0x00, 0x50, 0x44, 0x00, 0x68, 0x09, 0x18, 0x06, 0x98, 0xE5, 0xF7, 0x4C, 0xFC
    .byte 0x05, 0x49, 0x08, 0x68, 0x01, 0x38, 0x08, 0x60, 0x00, 0x28, 0x01, 0xDB, 0x00, 0xF0, 0xE6, 0xFC
    .byte 0x78, 0x20, 0x08, 0x60, 0x03, 0x20, 0x5F, 0xE3, 0x78, 0x23, 0x00, 0x03, 0x07, 0x9D, 0x41, 0x46
    .byte 0x68, 0x1A, 0x78, 0x24, 0x78, 0x21, 0x16, 0xF0, 0x29, 0xFC, 0x07, 0x1C, 0x3E, 0x4A, 0x10, 0x68
    .byte 0x24, 0x1A, 0x67, 0x43, 0x38, 0x1C, 0x78, 0x21, 0x16, 0xF0, 0x20, 0xFC, 0x07, 0x1C, 0x67, 0x43
    .byte 0x38, 0x1C, 0x78, 0x21, 0x16, 0xF0, 0x1A, 0xFC, 0x07, 0x1C, 0x67, 0x43, 0x08, 0x9B, 0x09, 0x9D
    .byte 0x58, 0x1B, 0x78, 0x21, 0x16, 0xF0, 0x12, 0xFC, 0x06, 0x1C, 0x66, 0x43, 0x30, 0x1C, 0x78, 0x21
    .byte 0x16, 0xF0, 0x0C, 0xFC, 0x06, 0x1C, 0x66, 0x43, 0x30, 0x1C, 0x78, 0x21, 0x16, 0xF0, 0x06, 0xFC
    .byte 0x06, 0x1C, 0x66, 0x43, 0x7C, 0x20, 0x81, 0x44, 0x2C, 0x4C, 0x49, 0x46, 0x00, 0x23, 0xCA, 0x5E
    .byte 0x10, 0x1C, 0x00, 0x2A, 0x00, 0xDA, 0x3F, 0x30, 0x83, 0x11, 0x29, 0x4D, 0x29, 0x1C, 0x18, 0x1C
    .byte 0x08, 0x40, 0x80, 0x00, 0x00, 0x19, 0x00, 0x68, 0x80, 0x46, 0x80, 0x20, 0x40, 0x00, 0xC0, 0x1A
    .byte 0x23, 0x49, 0x08, 0x40, 0x80, 0x00, 0x00, 0x19, 0x04, 0x68, 0xEC, 0x20, 0x80, 0x00, 0x50, 0x44
    .byte 0x05, 0x68, 0x29, 0x1C, 0x61, 0x43, 0xC8, 0x0F, 0x09, 0x18, 0x49, 0x10, 0xED, 0x20, 0x80, 0x00
    .byte 0x50, 0x44, 0x03, 0x68, 0x40, 0x46, 0x58, 0x43, 0xC2, 0x0F, 0x80, 0x18, 0x40, 0x10, 0x09, 0x18
    .byte 0x5B, 0x42, 0x1A, 0x1C, 0x62, 0x43, 0xD0, 0x0F, 0x12, 0x18, 0x52, 0x10, 0x40, 0x46, 0x68, 0x43
    .byte 0xC3, 0x0F, 0xC0, 0x18, 0x40, 0x10, 0x12, 0x18, 0x07, 0x98, 0x41, 0x18, 0xC9, 0x1B, 0x08, 0x9B
    .byte 0x9A, 0x18, 0x92, 0x1B, 0x06, 0x98, 0xE5, 0xF7, 0xDD, 0xFB, 0x4D, 0x46, 0x29, 0x88, 0xEE, 0x20
    .byte 0x80, 0x00, 0x50, 0x44, 0x00, 0x68, 0x09, 0x18, 0x06, 0x98, 0xE5, 0xF7, 0xC5, 0xFB, 0x06, 0x49
    .byte 0x08, 0x68, 0x01, 0x38, 0x08, 0x60, 0x00, 0x28, 0x01, 0xDB, 0x00, 0xF0, 0x5F, 0xFC, 0x5A, 0x20
    .byte 0x08, 0x60, 0x04, 0x20, 0x03, 0xE1, 0x00, 0x00, 0x78, 0x23, 0x00, 0x03, 0x5C, 0x64, 0x0E, 0x08
    .byte 0xFF, 0x03, 0x00, 0x00, 0x48, 0x46, 0x7C, 0x30, 0x27, 0x4C, 0x00, 0x23, 0xC2, 0x5E, 0x10, 0x1C
    .byte 0x00, 0x2A, 0x00, 0xDA, 0x3F, 0x30, 0x83, 0x11, 0x24, 0x4D, 0x29, 0x1C, 0x18, 0x1C, 0x08, 0x40
    .byte 0x80, 0x00, 0x00, 0x19, 0x06, 0x68, 0x80, 0x20, 0x40, 0x00, 0xC0, 0x1A, 0x1F, 0x49, 0x08, 0x40
    .byte 0x80, 0x00, 0x00, 0x19, 0x04, 0x68, 0xEC, 0x20, 0x80, 0x00, 0x50, 0x44, 0x05, 0x68, 0x29, 0x1C
    .byte 0x61, 0x43, 0xC8, 0x0F, 0x09, 0x18, 0x49, 0x10, 0xED, 0x20, 0x80, 0x00, 0x50, 0x44, 0x03, 0x68
    .byte 0x18, 0x1C, 0x70, 0x43, 0xC2, 0x0F, 0x80, 0x18, 0x40, 0x10, 0x09, 0x18, 0x5B, 0x42, 0x1A, 0x1C
    .byte 0x62, 0x43, 0xD0, 0x0F, 0x12, 0x18, 0x52, 0x10, 0x28, 0x1C, 0x70, 0x43, 0xC3, 0x0F, 0xC0, 0x18
    .byte 0x40, 0x10, 0x12, 0x18, 0x41, 0x44, 0x09, 0x98, 0x82, 0x18, 0x06, 0x98, 0xE5, 0xF7, 0x82, 0xFB
    .byte 0x03, 0x99, 0x06, 0x98, 0xE5, 0xF7, 0x70, 0xFB, 0x09, 0x49, 0x08, 0x68, 0x01, 0x38, 0x08, 0x60
    .byte 0x00, 0x28, 0x01, 0xDB, 0x00, 0xF0, 0x0A, 0xFC, 0x3C, 0x20, 0x08, 0x60, 0x05, 0x20, 0x0B, 0x99
    .byte 0x08, 0x60, 0x00, 0xF0, 0x03, 0xFC, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x03, 0x00, 0x00
    .byte 0x78, 0x23, 0x00, 0x03, 0x4A, 0x46, 0x10, 0x68, 0x43, 0x46, 0xC0, 0x1A, 0x00, 0x28, 0x01, 0xDA
    .byte 0x3A, 0x4D, 0x40, 0x19, 0xC4, 0x13, 0x3A, 0x4D, 0x3A, 0x48, 0x01, 0x68, 0x3C, 0x20, 0x40, 0x1A
    .byte 0x5A, 0x21, 0x48, 0x43, 0x3C, 0x21, 0x16, 0xF0, 0x39, 0xFB, 0x80, 0x02, 0xB4, 0x21, 0x49, 0x00
    .byte 0x16, 0xF0, 0x34, 0xFB, 0x80, 0x00, 0x40, 0x19, 0x01, 0x68, 0x22, 0x1C, 0x4A, 0x43, 0x0A, 0x92
    .byte 0x4B, 0x46, 0x58, 0x68, 0x09, 0x9A, 0x80, 0x1A, 0x00, 0x28, 0x01, 0xDA, 0x2B, 0x4B, 0xC0, 0x18
    .byte 0xC0, 0x13, 0x02, 0x1C, 0x4A, 0x43, 0x94, 0x46, 0x4F, 0x46, 0x7C, 0x37, 0x00, 0x23, 0xFA, 0x5E
    .byte 0x10, 0x1C, 0x00, 0x2A, 0x00, 0xDA, 0x3F, 0x30, 0x83, 0x11, 0x27, 0x48, 0x01, 0x1C, 0x18, 0x1C
    .byte 0x08, 0x40, 0x80, 0x00, 0x40, 0x19, 0x06, 0x68, 0x80, 0x20, 0x40, 0x00, 0xC0, 0x1A, 0x22, 0x49
    .byte 0x08, 0x40, 0x80, 0x00, 0x40, 0x19, 0x04, 0x68, 0xEC, 0x20, 0x80, 0x00, 0x50, 0x44, 0x05, 0x68
    .byte 0x29, 0x1C, 0x61, 0x43, 0xC8, 0x0F, 0x09, 0x18, 0x49, 0x10, 0xED, 0x20, 0x80, 0x00, 0x50, 0x44
    .byte 0x03, 0x68, 0x18, 0x1C, 0x70, 0x43, 0xC2, 0x0F, 0x80, 0x18, 0x40, 0x10, 0x09, 0x18, 0x5B, 0x42
    .byte 0x1A, 0x1C, 0x62, 0x43, 0xD0, 0x0F, 0x12, 0x18, 0x52, 0x10, 0x28, 0x1C, 0x70, 0x43, 0xC3, 0x0F
    .byte 0xC0, 0x18, 0x40, 0x10, 0x12, 0x18, 0x41, 0x44, 0x0A, 0x9B, 0xC9, 0x18, 0x09, 0x9D, 0xAA, 0x18
    .byte 0x62, 0x44, 0x06, 0x98, 0xE5, 0xF7, 0xFE, 0xFA, 0x39, 0x88, 0xEE, 0x20, 0x80, 0x00, 0x50, 0x44
    .byte 0x00, 0x68, 0x09, 0x18, 0x06, 0x98, 0xE5, 0xF7, 0xE7, 0xFA, 0x06, 0x49, 0x08, 0x68, 0x01, 0x38
    .byte 0x08, 0x60, 0x00, 0x28, 0x00, 0xDB, 0x81, 0xE3, 0x06, 0x20, 0x28, 0xE0, 0xFF, 0x7F, 0x00, 0x00
    .byte 0x5C, 0x64, 0x0E, 0x08, 0x78, 0x23, 0x00, 0x03, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x22, 0xFE, 0x23
    .byte 0xDB, 0x00, 0xF8, 0x18, 0x0F, 0x4D, 0x7D, 0x19, 0x0B, 0x95, 0x01, 0x78, 0x8A, 0x42, 0x15, 0xDA
    .byte 0x24, 0x33, 0xFC, 0x18, 0x03, 0x1C, 0xC0, 0x26, 0x76, 0x00, 0x80, 0x20, 0x00, 0x02, 0x05, 0x1C
    .byte 0x00, 0x27, 0x21, 0x68, 0x88, 0x19, 0x00, 0x68, 0x00, 0x28, 0x03, 0xD0, 0xA4, 0x31, 0x08, 0x88
    .byte 0x28, 0x43, 0x08, 0x80, 0x01, 0x32, 0x19, 0x78, 0x8A, 0x42, 0xF2, 0xDB, 0x07, 0x20, 0x0B, 0x9A
    .byte 0x10, 0x60, 0x53, 0xE3, 0xE4, 0x0B, 0x00, 0x00, 0x48, 0x46, 0x78, 0x30, 0x05, 0x78, 0x00, 0x2D
    .byte 0x5C, 0xD1, 0x4B, 0x46, 0x19, 0x68, 0x18, 0x48, 0x01, 0x60, 0x5A, 0x68, 0x17, 0x48, 0x02, 0x60
    .byte 0x17, 0x4C, 0x48, 0x46, 0x56, 0x30, 0x00, 0x88, 0xEE, 0x23, 0x9B, 0x00, 0x53, 0x44, 0x1B, 0x68
    .byte 0xC0, 0x18, 0x20, 0x60, 0x06, 0x98, 0xE5, 0xF7, 0xA5, 0xFA, 0x21, 0x68, 0x06, 0x98, 0xE5, 0xF7
    .byte 0x93, 0xFA, 0x10, 0x4C, 0x10, 0x4B, 0x11, 0x4A, 0x11, 0x49, 0x12, 0x48, 0x05, 0x60, 0x0D, 0x60
    .byte 0x15, 0x60, 0x1D, 0x60, 0x25, 0x60, 0x10, 0x4D, 0x78, 0x19, 0x00, 0x88, 0xF0, 0x21, 0x09, 0x01
    .byte 0x01, 0x40, 0x80, 0x20, 0x80, 0x00, 0x81, 0x42, 0x26, 0xD0, 0x81, 0x42, 0x16, 0xDC, 0x80, 0x20
    .byte 0x40, 0x00, 0x81, 0x42, 0x1A, 0xD0, 0x29, 0xE0, 0x54, 0x23, 0x00, 0x03, 0x58, 0x23, 0x00, 0x03
    .byte 0x5C, 0x23, 0x00, 0x03, 0x60, 0x23, 0x00, 0x03, 0x64, 0x23, 0x00, 0x03, 0x68, 0x23, 0x00, 0x03
    .byte 0x6C, 0x23, 0x00, 0x03, 0x70, 0x23, 0x00, 0x03, 0xDA, 0x07, 0x00, 0x00, 0x80, 0x20, 0xC0, 0x00
    .byte 0x81, 0x42, 0x0F, 0xD0, 0x80, 0x20, 0x00, 0x01, 0x81, 0x42, 0x0F, 0xD1, 0x09, 0x21, 0x01, 0x4A
    .byte 0xB8, 0x18, 0x0A, 0xE0, 0xE4, 0x0B, 0x00, 0x00, 0x0A, 0x21, 0x01, 0x4B, 0xF8, 0x18, 0x04, 0xE0
    .byte 0xE4, 0x0B, 0x00, 0x00, 0x0F, 0x21, 0x05, 0x4D, 0x78, 0x19, 0x01, 0x60, 0x04, 0x4B, 0x49, 0x46
    .byte 0x88, 0x68, 0x1E, 0x1C, 0x00, 0x28, 0x05, 0xDD, 0xC2, 0x0B, 0x15, 0xE0, 0xE4, 0x0B, 0x00, 0x00
    .byte 0x74, 0x23, 0x00, 0x03, 0x48, 0x46, 0x85, 0x30, 0x01, 0x78, 0x1E, 0x20, 0x08, 0x40, 0x0C, 0x28
    .byte 0x09, 0xD9, 0x48, 0x46, 0xD8, 0x30, 0x01, 0x68, 0x09, 0x04, 0x49, 0x0F, 0x01, 0x22, 0x01, 0x20
    .byte 0x08, 0x40, 0x12, 0x1A, 0x00, 0xE0, 0x00, 0x22, 0x1A, 0x70, 0x00, 0x20, 0x30, 0x56, 0x18, 0x28
    .byte 0x01, 0xDD, 0x18, 0x20, 0x30, 0x70, 0x00, 0x21, 0x71, 0x56, 0x15, 0x4A, 0x10, 0x68, 0x81, 0x42
    .byte 0x06, 0xD0, 0x11, 0x60, 0x30, 0x78, 0x49, 0x30, 0xEB, 0x21, 0x89, 0x00, 0x51, 0x44, 0x08, 0x70
    .byte 0x10, 0x4A, 0x52, 0x44, 0x00, 0x20, 0x10, 0x80, 0x48, 0x46, 0x7E, 0x30, 0x00, 0x78, 0x01, 0x28
    .byte 0x22, 0xD1, 0x48, 0x46, 0x82, 0x30, 0x00, 0x23, 0xC1, 0x5E, 0x00, 0x29, 0x00, 0xDA, 0x49, 0x42
    .byte 0x80, 0x20, 0x40, 0x01, 0x81, 0x42, 0x17, 0xDD, 0x48, 0x46, 0x96, 0x30, 0x01, 0x88, 0x80, 0x20
    .byte 0x80, 0x00, 0x08, 0x40, 0x00, 0x28, 0x07, 0xD0, 0xFA, 0x20, 0x00, 0x02, 0x0B, 0xE0, 0x00, 0x00
    .byte 0x44, 0xEC, 0x03, 0x02, 0xA2, 0x03, 0x00, 0x00, 0x80, 0x20, 0x40, 0x00, 0x08, 0x40, 0x00, 0x28
    .byte 0x02, 0xD0, 0xC0, 0x20, 0xC0, 0x00, 0x10, 0x80, 0x4D, 0x46, 0x29, 0x68, 0xE6, 0x20, 0x80, 0x00
    .byte 0x50, 0x44, 0x01, 0x60, 0x69, 0x68, 0xE7, 0x20, 0x80, 0x00, 0x50, 0x44, 0x01, 0x60, 0x48, 0x46
    .byte 0xB0, 0x30, 0x00, 0x78, 0x03, 0x28, 0x06, 0xD0, 0x48, 0x46, 0x7C, 0x30, 0x01, 0x88, 0xE8, 0x20
    .byte 0x80, 0x00, 0x50, 0x44, 0x01, 0x80, 0x00, 0x22, 0xC2, 0x20, 0x40, 0x00, 0x48, 0x44, 0x00, 0x68
    .byte 0xF0, 0x21, 0x09, 0x02, 0x08, 0x40, 0xE0, 0x21, 0x09, 0x02, 0x88, 0x42, 0x06, 0xD1, 0xE9, 0x20
    .byte 0x80, 0x00, 0x50, 0x44, 0x02, 0x80, 0xE5, 0x20, 0x80, 0x00, 0x17, 0xE0, 0x48, 0x46, 0x84, 0x30
    .byte 0x00, 0x78, 0x08, 0x28, 0x04, 0xD1, 0x48, 0x46, 0xBC, 0x30, 0x00, 0x68, 0x80, 0x15, 0x42, 0x42
    .byte 0xC6, 0x20, 0x40, 0x00, 0x48, 0x44, 0x01, 0x88, 0x12, 0x48, 0x81, 0x42, 0x04, 0xD1, 0x0F, 0x20
    .byte 0x40, 0x42, 0x82, 0x42, 0x00, 0xDD, 0x02, 0x1C, 0xE9, 0x20, 0x80, 0x00, 0x50, 0x44, 0x02, 0x80
    .byte 0x50, 0x46, 0xE5, 0xF7, 0x1D, 0xFB, 0x50, 0x46, 0xE5, 0xF7, 0xFA, 0xFB, 0x04, 0x1C, 0x50, 0x46
    .byte 0xE5, 0xF7, 0x16, 0xFC, 0x02, 0x1C, 0x06, 0x98, 0x21, 0x1C, 0xE5, 0xF7, 0xAB, 0xF9, 0x50, 0x46
    .byte 0xE5, 0xF7, 0x34, 0xFC, 0x01, 0x1C, 0x09, 0x04, 0x09, 0x14, 0x06, 0x98, 0xE5, 0xF7, 0x94, 0xF9
    .byte 0x34, 0xE2, 0x00, 0x00, 0x05, 0x10, 0x00, 0x00, 0x06, 0x48, 0x00, 0x21, 0x41, 0x56, 0x06, 0x1C
    .byte 0x00, 0x29, 0x28, 0xD0, 0x33, 0x1C, 0x49, 0x46, 0x88, 0x68, 0x00, 0x28, 0x04, 0xDD, 0xC2, 0x0B
    .byte 0x14, 0xE0, 0x00, 0x00, 0x74, 0x23, 0x00, 0x03, 0x48, 0x46, 0x85, 0x30, 0x01, 0x78, 0x1E, 0x20
    .byte 0x08, 0x40, 0x0C, 0x28, 0x09, 0xD9, 0x48, 0x46, 0xD8, 0x30, 0x01, 0x68, 0x09, 0x04, 0x49, 0x0F
    .byte 0x01, 0x22, 0x01, 0x20, 0x08, 0x40, 0x12, 0x1A, 0x00, 0xE0, 0x00, 0x22, 0x1A, 0x70, 0x00, 0x20
    .byte 0x30, 0x56, 0x18, 0x28, 0x01, 0xDD, 0x18, 0x20, 0x30, 0x70, 0x30, 0x78, 0x49, 0x30, 0xEB, 0x21
    .byte 0x89, 0x00, 0x51, 0x44, 0x08, 0x70, 0x2B, 0x4A, 0xB8, 0x18, 0x01, 0x68, 0x0B, 0x90, 0x09, 0x29
    .byte 0x00, 0xD0, 0xFB, 0xE1, 0x4C, 0x46, 0xBA, 0x34, 0x20, 0x88, 0x40, 0x08, 0x03, 0x28, 0x00, 0xD9
    .byte 0xF4, 0xE1, 0x25, 0x4B, 0x98, 0x46, 0x1D, 0x68, 0xA9, 0x46, 0x24, 0x48, 0x81, 0x45, 0x4D, 0xDC
    .byte 0x23, 0x49, 0x78, 0x18, 0x05, 0x68, 0x28, 0x1C, 0x56, 0x30, 0x22, 0x4C, 0x00, 0x23, 0xC2, 0x5E
    .byte 0x10, 0x1C, 0x00, 0x2A, 0x00, 0xDA, 0x3F, 0x30, 0x83, 0x11, 0x1F, 0x48, 0x01, 0x1C, 0x18, 0x1C
    .byte 0x08, 0x40, 0x80, 0x00, 0x00, 0x19, 0x06, 0x68, 0x80, 0x20, 0x40, 0x00, 0xC0, 0x1A, 0x1A, 0x49
    .byte 0x08, 0x40, 0x80, 0x00, 0x00, 0x19, 0x04, 0x68, 0xEC, 0x20, 0x80, 0x00, 0x50, 0x44, 0x03, 0x68
    .byte 0x18, 0x1C, 0x60, 0x43, 0x4B, 0x39, 0x51, 0x44, 0x0A, 0x68, 0x11, 0x1C, 0x71, 0x43, 0x40, 0x18
    .byte 0x73, 0x43, 0x11, 0x1C, 0x61, 0x43, 0x5B, 0x1A, 0x29, 0x68, 0xC2, 0x0F, 0x80, 0x18, 0x40, 0x10
    .byte 0x09, 0x18, 0x6A, 0x68, 0xD8, 0x0F, 0x1B, 0x18, 0x5B, 0x10, 0xD2, 0x18, 0x80, 0x24, 0xE4, 0x00
    .byte 0x4C, 0x44, 0x43, 0x46, 0x1C, 0x60, 0xEE, 0x20, 0x80, 0x00, 0x50, 0x44, 0x00, 0x68, 0x24, 0x18
    .byte 0x06, 0x98, 0x96, 0xE0, 0xE4, 0x0B, 0x00, 0x00, 0x70, 0x23, 0x00, 0x03, 0xFF, 0x7F, 0x00, 0x00
    .byte 0x14, 0x08, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x03, 0x00, 0x00, 0x80, 0x22, 0x12, 0x02
    .byte 0x45, 0x46, 0x2A, 0x60, 0xEE, 0x20, 0x80, 0x00, 0x50, 0x44, 0x01, 0x68, 0x89, 0x18, 0x06, 0x98
    .byte 0xE5, 0xF7, 0xF2, 0xF8, 0x0A, 0x49, 0x78, 0x18, 0x01, 0x88, 0xF0, 0x20, 0x00, 0x01, 0x08, 0x40
    .byte 0x80, 0x21, 0x09, 0x01, 0x88, 0x42, 0x06, 0xD1, 0x20, 0x88, 0x40, 0x08, 0x00, 0x28, 0x02, 0xD0
    .byte 0x12, 0x20, 0x0B, 0x9A, 0x10, 0x60, 0x0C, 0x20, 0x0B, 0x9B, 0x18, 0x60, 0x7E, 0xE1, 0x00, 0x00
    .byte 0xDA, 0x07, 0x00, 0x00, 0x05, 0x4D, 0x7C, 0x19, 0x20, 0x68, 0x01, 0x1C, 0x0D, 0x28, 0x17, 0xD0
    .byte 0x0D, 0x28, 0x05, 0xDC, 0x0C, 0x28, 0x06, 0xD0, 0x70, 0xE1, 0x00, 0x00, 0xE4, 0x0B, 0x00, 0x00
    .byte 0x0E, 0x29, 0x6C, 0xD0, 0x6A, 0xE1, 0x05, 0x48, 0x50, 0x21, 0x01, 0x60, 0x48, 0x46, 0x02, 0x21
    .byte 0xF1, 0xF7, 0x66, 0xFA, 0x0D, 0x20, 0x20, 0x60, 0x60, 0xE1, 0x00, 0x00, 0x7C, 0x23, 0x00, 0x03
    .byte 0x27, 0x49, 0x08, 0x68, 0x01, 0x38, 0x08, 0x60, 0x00, 0x28, 0x53, 0xDD, 0x25, 0x49, 0x78, 0x18
    .byte 0x05, 0x68, 0x28, 0x1C, 0x56, 0x30, 0x24, 0x4B, 0x00, 0x22, 0x87, 0x5E, 0x38, 0x1C, 0x00, 0x2F
    .byte 0x00, 0xDA, 0x3F, 0x30, 0x82, 0x11, 0x21, 0x48, 0x01, 0x1C, 0x10, 0x1C, 0x08, 0x40, 0x80, 0x00
    .byte 0xC0, 0x18, 0x06, 0x68, 0x80, 0x20, 0x40, 0x00, 0x80, 0x1A, 0x1C, 0x49, 0x08, 0x40, 0x80, 0x00
    .byte 0xC0, 0x18, 0x04, 0x68, 0xEC, 0x20, 0x80, 0x00, 0x50, 0x44, 0x03, 0x68, 0x18, 0x1C, 0x60, 0x43
    .byte 0x4B, 0x39, 0x51, 0x44, 0x0A, 0x68, 0x11, 0x1C, 0x71, 0x43, 0x40, 0x18, 0x19, 0x1C, 0x71, 0x43
    .byte 0x62, 0x43, 0x89, 0x1A, 0x2E, 0x68, 0xC2, 0x0F, 0x80, 0x18, 0x40, 0x10, 0x36, 0x18, 0x6D, 0x68
    .byte 0xC8, 0x0F, 0x09, 0x18, 0x49, 0x10, 0x6D, 0x18, 0x50, 0x46, 0x39, 0x1C, 0xE5, 0xF7, 0x7C, 0xF8
    .byte 0x0B, 0x48, 0x52, 0x46, 0x14, 0x23, 0xD1, 0x5E, 0x04, 0x68, 0x64, 0x18, 0x06, 0x98, 0x31, 0x1C
    .byte 0x2A, 0x1C, 0xE5, 0xF7, 0x7F, 0xF8, 0x06, 0x98, 0x21, 0x1C, 0xE5, 0xF7, 0x6D, 0xF8, 0x0D, 0xE1
    .byte 0x7C, 0x23, 0x00, 0x03, 0x14, 0x08, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x03, 0x00, 0x00
    .byte 0x70, 0x23, 0x00, 0x03, 0xDC, 0x20, 0x08, 0x60, 0x0E, 0x20, 0x20, 0x60, 0xFE, 0xE0, 0x06, 0x49
    .byte 0x08, 0x68, 0x01, 0x38, 0x08, 0x60, 0x00, 0x28, 0x00, 0xDD, 0xF7, 0xE0, 0x48, 0x46, 0xF1, 0xF7
    .byte 0x2D, 0xFB, 0x12, 0x20, 0x20, 0x60, 0xF1, 0xE0, 0x7C, 0x23, 0x00, 0x03, 0x05, 0x4D, 0x78, 0x19
    .byte 0x00, 0x68, 0x01, 0x1C, 0x10, 0x28, 0x35, 0xD0, 0x10, 0x28, 0x05, 0xDC, 0x0F, 0x28, 0x06, 0xD0
    .byte 0x9E, 0xE0, 0x00, 0x00, 0xE4, 0x0B, 0x00, 0x00, 0x11, 0x29, 0x5A, 0xD0, 0x98, 0xE0, 0x07, 0x48
    .byte 0x00, 0x21, 0x41, 0x56, 0x06, 0x1C, 0x00, 0x29, 0x00, 0xD1, 0x91, 0xE0, 0x33, 0x1C, 0x49, 0x46
    .byte 0x88, 0x68, 0x00, 0x28, 0x04, 0xDD, 0xC2, 0x0B, 0x14, 0xE0, 0x00, 0x00, 0x74, 0x23, 0x00, 0x03
    .byte 0x48, 0x46, 0x85, 0x30, 0x01, 0x78, 0x1E, 0x20, 0x08, 0x40, 0x0C, 0x28, 0x09, 0xD9, 0x48, 0x46
    .byte 0xD8, 0x30, 0x01, 0x68, 0x09, 0x04, 0x49, 0x0F, 0x01, 0x22, 0x01, 0x20, 0x08, 0x40, 0x12, 0x1A
    .byte 0x00, 0xE0, 0x00, 0x22, 0x1A, 0x70, 0x00, 0x20, 0x30, 0x56, 0x18, 0x28, 0x2A, 0xDD, 0x18, 0x20
    .byte 0x30, 0x70, 0x27, 0xE0, 0x04, 0x4A, 0x4B, 0x46, 0x98, 0x68, 0x16, 0x1C, 0x00, 0x28, 0x05, 0xDD
    .byte 0xC0, 0x13, 0x20, 0x38, 0x16, 0xE0, 0x00, 0x00, 0x74, 0x23, 0x00, 0x03, 0x48, 0x46, 0x85, 0x30
    .byte 0x01, 0x78, 0x1E, 0x20, 0x08, 0x40, 0x0C, 0x28, 0x09, 0xD9, 0x48, 0x46, 0xD8, 0x30, 0x00, 0x68
    .byte 0x00, 0x04, 0x40, 0x0F, 0x01, 0x21, 0x01, 0x40, 0xE1, 0x20, 0x40, 0x1A, 0x02, 0xE0, 0x20, 0x25
    .byte 0x6D, 0x42, 0x28, 0x1C, 0x10, 0x70, 0x00, 0x20, 0x30, 0x56, 0x08, 0x21, 0x49, 0x42, 0x88, 0x42
    .byte 0x00, 0xDD, 0x31, 0x70, 0x30, 0x78, 0x49, 0x30, 0xEB, 0x21, 0x89, 0x00, 0x51, 0x44, 0x08, 0x70
    .byte 0x3E, 0xE0, 0x08, 0x49, 0x08, 0x78, 0x20, 0x38, 0x00, 0x06, 0x07, 0x4B, 0x04, 0x0E, 0x02, 0x16
    .byte 0x4D, 0x46, 0xA8, 0x68, 0x1E, 0x1C, 0x0D, 0x1C, 0x00, 0x28, 0x07, 0xDD, 0xC0, 0x13, 0x80, 0x18
    .byte 0x16, 0xE0, 0x00, 0x00, 0x48, 0xEC, 0x03, 0x02, 0x74, 0x23, 0x00, 0x03, 0x48, 0x46, 0x85, 0x30
    .byte 0x01, 0x78, 0x1E, 0x20, 0x08, 0x40, 0x0C, 0x28, 0x09, 0xD9, 0x01, 0x32, 0x48, 0x46, 0xD8, 0x30
    .byte 0x01, 0x68, 0x09, 0x04, 0x49, 0x0F, 0x01, 0x20, 0x08, 0x40, 0x10, 0x1A, 0x00, 0xE0, 0x10, 0x1C
    .byte 0x18, 0x70, 0x33, 0x1C, 0x00, 0x21, 0x59, 0x56, 0x20, 0x06, 0x02, 0x16, 0x18, 0x20, 0x80, 0x1A
    .byte 0x81, 0x42, 0x02, 0xDD, 0x18, 0x20, 0x80, 0x1A, 0x18, 0x70, 0x30, 0x78, 0x49, 0x30, 0xEB, 0x21
    .byte 0x89, 0x00, 0x51, 0x44, 0x08, 0x70, 0x28, 0x78, 0x1F, 0x28, 0x01, 0xD8, 0x02, 0x30, 0x28, 0x70
    .byte 0x26, 0x49, 0x78, 0x18, 0x05, 0x68, 0x28, 0x1C, 0x56, 0x30, 0x25, 0x4C, 0x00, 0x23, 0xC2, 0x5E
    .byte 0x10, 0x1C, 0x00, 0x2A, 0x00, 0xDA, 0x3F, 0x30, 0x83, 0x11, 0x22, 0x48, 0x01, 0x1C, 0x18, 0x1C
    .byte 0x08, 0x40, 0x80, 0x00, 0x00, 0x19, 0x06, 0x68, 0x80, 0x20, 0x40, 0x00, 0xC0, 0x1A, 0x1D, 0x49
    .byte 0x08, 0x40, 0x80, 0x00, 0x00, 0x19, 0x04, 0x68, 0xEC, 0x20, 0x80, 0x00, 0x50, 0x44, 0x03, 0x68
    .byte 0x18, 0x1C, 0x60, 0x43, 0x4B, 0x39, 0x51, 0x44, 0x0A, 0x68, 0x11, 0x1C, 0x71, 0x43, 0x40, 0x18
    .byte 0x73, 0x43, 0x11, 0x1C, 0x61, 0x43, 0x5B, 0x1A, 0x29, 0x68, 0xC2, 0x0F, 0x80, 0x18, 0x40, 0x10
    .byte 0x09, 0x18, 0x6A, 0x68, 0xD8, 0x0F, 0x1B, 0x18, 0x5B, 0x10, 0xD2, 0x18, 0x0E, 0x48, 0x04, 0x68
    .byte 0x80, 0x34, 0x04, 0x60, 0xEE, 0x20, 0x80, 0x00, 0x50, 0x44, 0x00, 0x68, 0x24, 0x18, 0x06, 0x98
    .byte 0xE4, 0xF7, 0x70, 0xFF, 0x06, 0x98, 0x21, 0x1C, 0xE4, 0xF7, 0x5E, 0xFF
_0804C010:
    .byte 0x0C, 0xB0, 0x38, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xAA, 0x46, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47
    .byte 0x14, 0x08, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x03, 0x00, 0x00, 0x70, 0x23, 0x00, 0x03
    thumb_func_start sub_804C030
sub_804C030:
    push {r4, r5, r6, lr}
    mov r6, r8
    push {r6}
    adds r6, r0, #0x0
    ldr r0, _0804C09C @ =0x00000824
    adds r4, r6, r0
    ldr r1, _0804C0A0 @ =0x00000814
    adds r0, r6, r1
    ldr r0, [r0, #0x00]
    mov r8, r0
    adds r0, r4, #0x0
    bl sub_8030E80
    ldr r5, _0804C0A4 @ =0x080EDD34
    ldrh r2, [r5, #0x00]
    adds r0, r4, #0x0
    movs r1, #0x78
    bl sub_8030F20
    ldrh r1, [r5, #0x04]
    adds r0, r4, #0x0
    bl sub_8030E90
    ldrh r1, [r5, #0x02]
    adds r0, r4, #0x0
    bl sub_8030EA0
    ldrh r1, [r5, #0x06]
    adds r0, r4, #0x0
    bl sub_8030EB0
    mov r0, r8
    adds r0, #0x7C
    ldrh r1, [r0, #0x00]
    adds r0, r4, #0x0
    bl sub_8030ECC
    mov r0, r8
    ldr r1, [r0, #0x00]
    ldr r2, [r0, #0x04]
    adds r0, r4, #0x0
    bl sub_8030EE8
    adds r0, r4, #0x0
    bl sub_8031100
    adds r6, #0xBC
    ldrh r0, [r5, #0x08]
    str r0, [r6, #0x3C]
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0804C09C: .4byte 0x00000824
_0804C0A0: .4byte 0x00000814
_0804C0A4: .4byte 0x080EDD34
    thumb_func_start sub_804C0A8
sub_804C0A8:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    ldr r0, _0804C0D8 @ =0x00000824
    adds r4, r5, r0
    adds r0, r5, #0x0
    bl sub_804B348
    adds r0, r5, #0x0
    bl sub_804B4BC
    adds r0, r4, #0x0
    bl sub_80312DC
    ldr r1, [r4, #0x18]
    ldr r2, [r4, #0x1C]
    movs r0, #0x14
    ldsh r3, [r4, r0]
    adds r0, r5, #0x0
    bl sub_8032A18
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804C0D8: .4byte 0x00000824
    thumb_func_start sub_804C0DC
sub_804C0DC:
    push {r4, r5, lr}
    adds r2, r0, #0x0
    lsls r1, r1, #0x18
    lsrs r3, r1, #0x18
    adds r4, r3, #0x0
    ldr r1, _0804C110 @ =0x000007DA
    adds r0, r2, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x04
    ands r0, r1
    cmp r0, #0x00
    bne _0804C124
    ldr r5, _0804C114 @ =0x00000BEC
    adds r0, r2, r5
    adds r5, #0x01
    adds r1, r2, r5
    ldrb r2, [r0, #0x00]
    ldrb r0, [r1, #0x00]
    cmp r2, r0
    bhi _0804C118
    cmp r3, r2
    bcc _0804C120
    cmp r3, r0
    bhi _0804C120
    b _0804C124
_0804C110: .4byte 0x000007DA
_0804C114: .4byte 0x00000BEC
_0804C118:
    cmp r4, r2
    bcs _0804C124
    cmp r4, r0
    bls _0804C124
_0804C120:
    movs r0, #0x00
    b _0804C126
_0804C124:
    movs r0, #0x01
_0804C126:
    pop {r4, r5}
    pop {r1}
    bx r1
    thumb_func_start sub_804C12C
sub_804C12C:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r0, _0804C17C @ =0x030069F0
    movs r1, #0x00
    strb r1, [r0, #0x02]
    ldr r2, _0804C180 @ =0x00000C7C
    adds r0, r4, r2
    strh r1, [r0, #0x00]
    adds r2, #0x02
    adds r0, r4, r2
    strh r1, [r0, #0x00]
    subs r2, #0x0A
    adds r0, r4, r2
    strh r1, [r0, #0x00]
    adds r2, #0x02
    adds r0, r4, r2
    strh r1, [r0, #0x00]
    adds r2, #0x02
    adds r0, r4, r2
    str r1, [r0, #0x00]
    adds r2, #0x08
    adds r0, r4, r2
    strh r1, [r0, #0x00]
    ldr r0, _0804C184 @ =0x080EDD40
    ldr r1, _0804C188 @ =0x03002380
    movs r2, #0x10
    bl CpuSet
    adds r0, r4, #0x0
    bl sub_8032C2C
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x12
    bhi _0804C22A
    lsls r0, r0, #0x02
    ldr r1, _0804C18C @ =0x0804C190
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_0804C17C: .4byte 0x030069F0
_0804C180: .4byte 0x00000C7C
_0804C184: .4byte 0x080EDD40
_0804C188: .4byte 0x03002380
_0804C18C: .4byte 0x0804C190
    .byte 0x08, 0xC2, 0x04, 0x08, 0x2A, 0xC2, 0x04, 0x08, 0x2A, 0xC2, 0x04, 0x08, 0x2A, 0xC2, 0x04, 0x08
    .byte 0x2A, 0xC2, 0x04, 0x08, 0x2A, 0xC2, 0x04, 0x08, 0xF0, 0xC1, 0x04, 0x08, 0x2A, 0xC2, 0x04, 0x08
    .byte 0x2A, 0xC2, 0x04, 0x08, 0x2A, 0xC2, 0x04, 0x08, 0xFC, 0xC1, 0x04, 0x08, 0x2A, 0xC2, 0x04, 0x08
    .byte 0xDC, 0xC1, 0x04, 0x08, 0x2A, 0xC2, 0x04, 0x08, 0x2A, 0xC2, 0x04, 0x08, 0x2A, 0xC2, 0x04, 0x08
    .byte 0x24, 0xC2, 0x04, 0x08, 0x2A, 0xC2, 0x04, 0x08, 0x18, 0xC2, 0x04, 0x08, 0x03, 0x49, 0x50, 0x20
    .byte 0x88, 0x81, 0x47, 0x20, 0xC8, 0x81, 0x52, 0x20, 0x08, 0x82, 0x1E, 0xE0, 0x80, 0x23, 0x00, 0x03
    .byte 0x01, 0x49, 0x4D, 0x20, 0x48, 0x80, 0x18, 0xE0, 0x80, 0x23, 0x00, 0x03, 0x01, 0x49, 0x47, 0x20
    .byte 0x48, 0x80, 0x12, 0xE0, 0x80, 0x23, 0x00, 0x03, 0x02, 0x49, 0x4C, 0x20, 0x08, 0x80, 0xC8, 0x81
    .byte 0x0B, 0xE0, 0x00, 0x00, 0x80, 0x23, 0x00, 0x03, 0x01, 0x49, 0x53, 0x20, 0x08, 0x82, 0x04, 0xE0
    .byte 0x80, 0x23, 0x00, 0x03, 0x02, 0x49, 0x54, 0x20, 0x88, 0x82
_0804C22A:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x80, 0x23, 0x00, 0x03
    thumb_func_start sub_804C234
sub_804C234:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r2, r0, #0x0
    adds r3, r1, #0x0
    ldr r0, _0804C270 @ =0x00000824
    adds r4, r2, r0
    ldr r7, [r4, #0x18]
    ldr r1, [r4, #0x1C]
    mov r12, r1
    ldr r1, _0804C274 @ =0x000007D4
    adds r0, r2, r1
    ldrb r1, [r0, #0x00]
    movs r0, #0x0F
    ands r0, r1
    cmp r0, #0x03
    bne _0804C27C
    ldr r1, _0804C278 @ =0x00000814
    adds r0, r2, r1
    ldr r2, [r0, #0x00]
    ldr r0, [r2, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0804C27C
    adds r0, r2, #0x0
    adds r0, #0xBC
    ldr r5, [r0, #0x00]
    b _0804C27E
    .byte 0x00, 0x00
_0804C270: .4byte 0x00000824
_0804C274: .4byte 0x000007D4
_0804C278: .4byte 0x00000814
_0804C27C:
    movs r5, #0x00
_0804C27E:
    movs r0, #0x14
    ldsh r2, [r4, r0]
    mov r8, r2
    ldrh r1, [r3, #0x10]
    movs r2, #0xF0
    lsls r2, r2, #0x08
    ands r2, r1
    movs r0, #0x80
    lsls r0, r0, #0x06
    cmp r2, r0
    beq _0804C29E
    movs r0, #0x80
    lsls r0, r0, #0x08
    cmp r2, r0
    beq _0804C2AE
    b _0804C2CE
_0804C29E:
    ldr r2, [r3, #0x00]
    ldr r1, [r3, #0x04]
    adds r0, r3, #0x0
    adds r0, #0x7A
    ldrh r6, [r0, #0x00]
    adds r0, #0x42
    ldr r4, [r0, #0x00]
    b _0804C2D2
_0804C2AE:
    movs r0, #0xFF
    lsls r0, r0, #0x08
    ands r1, r0
    movs r0, #0x84
    lsls r0, r0, #0x08
    cmp r1, r0
    bne _0804C2CE
    ldr r2, [r3, #0x00]
    ldr r1, [r3, #0x04]
    movs r0, #0x26
    ldsh r6, [r3, r0]
    adds r0, r3, #0x0
    adds r0, #0x71
    ldrb r0, [r0, #0x00]
    lsls r4, r0, #0x04
    b _0804C2D2
_0804C2CE:
    movs r0, #0x00
    b _0804C376
_0804C2D2:
    subs r0, r7, r2
    cmp r0, #0x00
    bge _0804C2DC
    ldr r2, _0804C380 @ =0x000FFFFF
    adds r0, r0, r2
_0804C2DC:
    asrs r0, r0, #0x14
    mov r2, r12
    subs r1, r2, r1
    cmp r1, #0x00
    bge _0804C2EA
    ldr r2, _0804C380 @ =0x000FFFFF
    adds r1, r1, r2
_0804C2EA:
    asrs r1, r1, #0x14
    bl sub_802EC38
    lsls r0, r0, #0x10
    adds r1, r4, #0x0
    cmp r4, #0x00
    bge _0804C2FC
    ldr r2, _0804C384 @ =0x007FFFFF
    adds r1, r4, r2
_0804C2FC:
    asrs r4, r1, #0x17
    cmp r4, #0x10
    ble _0804C304
    movs r4, #0x10
_0804C304:
    asrs r2, r0, #0x10
    lsls r0, r6, #0x10
    asrs r0, r0, #0x10
    subs r0, r2, r0
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0804C316
    negs r0, r0
_0804C316:
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    movs r3, #0x80
    lsls r3, r3, #0x07
    movs r1, #0x00
    cmp r0, r3
    bgt _0804C326
    movs r1, #0x01
_0804C326:
    cmp r1, #0x00
    bne _0804C32C
    negs r4, r4
_0804C32C:
    adds r0, r5, #0x0
    cmp r5, #0x00
    bge _0804C336
    ldr r1, _0804C384 @ =0x007FFFFF
    adds r0, r5, r1
_0804C336:
    asrs r5, r0, #0x17
    cmp r5, #0x10
    ble _0804C33E
    movs r5, #0x10
_0804C33E:
    mov r1, r8
    subs r0, r2, r1
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0804C34C
    negs r0, r0
_0804C34C:
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    movs r1, #0x00
    cmp r0, r3
    bgt _0804C358
    movs r1, #0x01
_0804C358:
    cmp r1, #0x00
    bne _0804C35E
    negs r5, r5
_0804C35E:
    ldr r3, _0804C388 @ =0x080EDD60
    adds r2, r4, #0x0
    adds r2, #0x10
    adds r1, r5, #0x0
    adds r1, #0x10
    lsls r0, r1, #0x05
    adds r0, r0, r1
    adds r0, r0, r2
    lsls r0, r0, #0x01
    adds r0, r0, r3
    movs r2, #0x00
    ldsh r0, [r0, r2]
_0804C376:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
_0804C380: .4byte 0x000FFFFF
_0804C384: .4byte 0x007FFFFF
_0804C388: .4byte 0x080EDD60
    thumb_func_start sub_804C38C
sub_804C38C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x018
    adds r7, r0, #0x0
    ldr r1, _0804C45C @ =0x00000814
    adds r0, r7, r1
    ldr r0, [r0, #0x00]
    mov r9, r0
    ldr r2, _0804C460 @ =0x000007D4
    adds r0, r7, r2
    ldrb r0, [r0, #0x00]
    movs r3, #0x0F
    ands r3, r0
    str r3, [sp, #0x008]
    ldr r5, _0804C464 @ =0x000007DA
    adds r0, r7, r5
    ldrh r0, [r0, #0x00]
    movs r1, #0xF0
    lsls r1, r1, #0x04
    mov r10, r1
    mov r2, r10
    ands r2, r0
    mov r10, r2
    adds r0, r7, r5
    ldrh r0, [r0, #0x00]
    movs r1, #0x01
    ands r1, r0
    cmp r1, #0x00
    beq _0804C3D0
    bl sub_804CCCC
_0804C3D0:
    ldr r2, _0804C468 @ =0x030069F0
    ldrb r0, [r2, #0x02]
    cmp r0, #0x00
    beq _0804C3E0
    strb r1, [r2, #0x02]
    movs r0, #0x1C
    bl m4aSongNumStart
_0804C3E0:
    mov r3, r9
    adds r3, #0x78
    str r3, [sp, #0x014]
    ldr r5, [sp, #0x008]
    cmp r5, #0x04
    ble _0804C3EE
    b _0804C5CC
_0804C3EE:
    cmp r5, #0x03
    bge _0804C3F4
    b _0804C5A4
_0804C3F4:
    mov r0, r9
    ldr r1, [r0, #0x48]
    movs r0, #0x28
    ands r0, r1
    cmp r0, #0x28
    beq _0804C402
    b _0804C5A4
_0804C402:
    movs r2, #0x00
    mov r8, r2
    movs r0, #0x09
    negs r0, r0
    ands r1, r0
    mov r3, r9
    str r1, [r3, #0x48]
    ldr r5, _0804C46C @ =0x08102414
    ldr r0, _0804C470 @ =0x08102498
    ldrh r1, [r0, #0x2C]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayStop
    movs r4, #0x05
    ldr r0, _0804C474 @ =0x0000000B
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r4, r0
    bge _0804C446
    adds r6, r0, #0x0
    adds r5, #0x3C
_0804C434:
    cmp r4, #0x08
    beq _0804C43E
    ldr r0, [r5, #0x00]
    bl m4aMPlayStop
_0804C43E:
    adds r5, #0x0C
    adds r4, #0x01
    cmp r4, r6
    blt _0804C434
_0804C446:
    movs r0, #0x80
    lsls r0, r0, #0x02
    cmp r10, r0
    beq _0804C4D8
    cmp r10, r0
    bgt _0804C478
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r10, r0
    beq _0804C48A
    b _0804C596
_0804C45C: .4byte 0x00000814
_0804C460: .4byte 0x000007D4
_0804C464: .4byte 0x000007DA
_0804C468: .4byte 0x030069F0
_0804C46C: .4byte 0x08102414
_0804C470: .4byte 0x08102498
_0804C474: .4byte 0x0000000B
_0804C478:
    movs r0, #0x80
    lsls r0, r0, #0x03
    cmp r10, r0
    beq _0804C568
    movs r0, #0x80
    lsls r0, r0, #0x04
    cmp r10, r0
    beq _0804C54C
    b _0804C596
_0804C48A:
    mov r0, r9
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r2, r0, #0x01
    ldr r5, _0804C4B4 @ =0x000007DA
    adds r0, r7, r5
    ldrh r1, [r0, #0x00]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    bne _0804C4C0
    ldr r0, _0804C4B8 @ =0x080EE624
    mov r8, r0
    cmp r2, #0x03
    bgt _0804C596
    ldr r1, _0804C4BC @ =0x080EE5E4
    mov r8, r1
    cmp r2, #0x00
    ble _0804C596
    b _0804C4E8
    .byte 0x00, 0x00
_0804C4B4: .4byte 0x000007DA
_0804C4B8: .4byte 0x080EE624
_0804C4BC: .4byte 0x080EE5E4
_0804C4C0:
    ldr r3, _0804C4D0 @ =0x080EE604
    mov r8, r3
    cmp r2, #0x00
    bne _0804C596
    ldr r5, _0804C4D4 @ =0x080EE5E4
    mov r8, r5
    b _0804C596
    .byte 0x00, 0x00
_0804C4D0: .4byte 0x080EE604
_0804C4D4: .4byte 0x080EE5E4
_0804C4D8:
    ldr r1, _0804C4F0 @ =0x000007DA
    adds r0, r7, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x07
    ands r0, r1
    cmp r0, #0x00
    beq _0804C4F8
_0804C4E8:
    ldr r2, _0804C4F4 @ =0x080EE604
    mov r8, r2
    b _0804C596
    .byte 0x00, 0x00
_0804C4F0: .4byte 0x000007DA
_0804C4F4: .4byte 0x080EE604
_0804C4F8:
    movs r6, #0x00
    mov r0, r9
    bl sub_803DAC4
    adds r4, r0, #0x0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    add r2, sp, #0x004
    mov r0, r9
    mov r1, sp
    bl sub_80235AC
    ldr r3, _0804C540 @ =0x000007DD
    adds r5, r7, r3
    ldrb r0, [r5, #0x00]
    movs r1, #0x00
    adds r2, r4, #0x0
    bl sub_805D864
    cmp r0, #0x00
    bne _0804C532
    ldr r1, [sp, #0x004]
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    ldrb r0, [r5, #0x00]
    bl sub_805D8DC
    cmp r0, #0x00
    beq _0804C534
_0804C532:
    movs r6, #0x01
_0804C534:
    ldr r5, _0804C544 @ =0x080EE604
    mov r8, r5
    cmp r6, #0x00
    beq _0804C596
    ldr r0, _0804C548 @ =0x080EE5E4
    b _0804C594
_0804C540: .4byte 0x000007DD
_0804C544: .4byte 0x080EE604
_0804C548: .4byte 0x080EE5E4
_0804C54C:
    mov r0, r9
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r0, r0, #0x01
    cmp r0, #0x00
    bne _0804C560
    movs r0, #0x21
    bl m4aSongNumStart
    b _0804C596
_0804C560:
    movs r0, #0x22
    bl m4aSongNumStart
    b _0804C596
_0804C568:
    mov r0, r9
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r1, r0, #0x01
    movs r2, #0xFE
    lsls r2, r2, #0x03
    adds r0, r7, r2
    ldrb r0, [r0, #0x00]
    cmp r1, #0x00
    bne _0804C588
    ldr r3, _0804C584 @ =0x080EE5E4
    mov r8, r3
    b _0804C596
    .byte 0x00, 0x00
_0804C584: .4byte 0x080EE5E4
_0804C588:
    subs r0, #0x01
    ldr r5, _0804C5C4 @ =0x080EE644
    mov r8, r5
    cmp r1, r0
    bge _0804C596
    ldr r0, _0804C5C8 @ =0x080EE604
_0804C594:
    mov r8, r0
_0804C596:
    mov r1, r8
    cmp r1, #0x00
    beq _0804C5A4
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
_0804C5A4:
    ldr r2, [sp, #0x008]
    cmp r2, #0x04
    bgt _0804C5CC
    cmp r2, #0x02
    blt _0804C5B6
    mov r0, r9
    adds r1, r7, #0x0
    bl sub_8041244
_0804C5B6:
    ldr r3, [sp, #0x008]
    cmp r3, #0x03
    bge _0804C5E0
    cmp r3, #0x02
    beq _0804C5D6
    b _0804C9C4
    .byte 0x00, 0x00
_0804C5C4: .4byte 0x080EE644
_0804C5C8: .4byte 0x080EE604
_0804C5CC:
    ldr r5, [sp, #0x008]
    cmp r5, #0x05
    bne _0804C5D4
    b _0804C9A0
_0804C5D4:
    b _0804C9C4
_0804C5D6:
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r10, r0
    bne _0804C5E0
    b _0804C9C4
_0804C5E0:
    movs r0, #0x80
    lsls r0, r0, #0x04
    cmp r10, r0
    bne _0804C628
    mov r1, r9
    ldr r0, [r1, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _0804C628
    ldr r2, _0804C61C @ =0x00000C74
    adds r1, r7, r2
    ldrh r0, [r1, #0x00]
    cmp r0, #0x00
    bne _0804C600
    b _0804C9C4
_0804C600:
    ldr r3, _0804C620 @ =0x08102414
    ldr r2, _0804C624 @ =0x08102498
    lsls r0, r0, #0x03
    adds r0, r0, r2
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r3
    ldr r0, [r0, #0x00]
    ldr r1, [r2, #0x08]
    bl MPlayStart
    b _0804C9C4
_0804C61C: .4byte 0x00000C74
_0804C620: .4byte 0x08102414
_0804C624: .4byte 0x08102498
_0804C628:
    ldr r3, _0804C728 @ =0x00000824
    adds r0, r7, r3
    movs r6, #0x00
    ldr r5, [r0, #0x18]
    mov r8, r5
    ldr r0, [r0, #0x1C]
    mov r10, r0
    movs r5, #0x80
    lsls r5, r5, #0x07
    movs r4, #0x00
    movs r1, #0xFE
    lsls r1, r1, #0x03
    adds r0, r7, r1
    ldrb r0, [r0, #0x00]
    cmp r6, r0
    bge _0804C69C
_0804C648:
    lsls r1, r4, #0x18
    lsrs r1, r1, #0x18
    adds r0, r7, #0x0
    bl sub_804AED4
    adds r2, r0, #0x0
    cmp r2, r9
    beq _0804C68E
    ldr r0, [r2, #0x00]
    mov r3, r8
    subs r1, r3, r0
    cmp r1, #0x00
    bge _0804C666
    ldr r0, _0804C72C @ =0x0000FFFF
    adds r1, r1, r0
_0804C666:
    asrs r1, r1, #0x10
    ldr r0, [r2, #0x04]
    mov r3, r10
    subs r0, r3, r0
    cmp r0, #0x00
    bge _0804C676
    ldr r3, _0804C72C @ =0x0000FFFF
    adds r0, r0, r3
_0804C676:
    asrs r0, r0, #0x10
    adds r3, r1, #0x0
    muls r3, r1
    adds r1, r3, #0x0
    adds r3, r0, #0x0
    muls r3, r0
    adds r0, r3, #0x0
    adds r0, r1, r0
    cmp r0, r5
    bge _0804C68E
    adds r6, r2, #0x0
    adds r5, r0, #0x0
_0804C68E:
    adds r4, #0x01
    movs r1, #0xFE
    lsls r1, r1, #0x03
    adds r0, r7, r1
    ldrb r0, [r0, #0x00]
    cmp r4, r0
    blt _0804C648
_0804C69C:
    cmp r6, #0x00
    bne _0804C6A2
    b _0804C958
_0804C6A2:
    ldr r2, _0804C730 @ =0x00000C78
    adds r1, r7, r2
    ldr r0, [r1, #0x00]
    cmp r6, r0
    beq _0804C6B6
    str r6, [r1, #0x00]
    ldr r3, _0804C734 @ =0x00000C76
    adds r1, r7, r3
    movs r0, #0x00
    strh r0, [r1, #0x00]
_0804C6B6:
    ldr r2, _0804C738 @ =0x080ECBB8
    adds r3, r6, #0x0
    adds r3, #0x4C
    ldrb r1, [r3, #0x00]
    movs r0, #0x07
    ands r0, r1
    lsls r0, r0, #0x01
    adds r0, r0, r2
    ldrh r2, [r0, #0x00]
    ldr r5, _0804C73C @ =0x00000C74
    adds r4, r7, r5
    strh r2, [r4, #0x00]
    ldr r0, [r6, #0x00]
    mov r5, r8
    subs r1, r5, r0
    str r3, [sp, #0x010]
    cmp r1, #0x00
    bge _0804C6DE
    ldr r0, _0804C72C @ =0x0000FFFF
    adds r1, r1, r0
_0804C6DE:
    asrs r1, r1, #0x10
    ldr r0, [r6, #0x04]
    mov r3, r10
    subs r0, r3, r0
    cmp r0, #0x00
    bge _0804C6EE
    ldr r5, _0804C72C @ =0x0000FFFF
    adds r0, r0, r5
_0804C6EE:
    asrs r0, r0, #0x10
    adds r3, r1, #0x0
    muls r3, r1
    adds r1, r3, #0x0
    adds r5, r0, #0x0
    muls r5, r0
    adds r0, r5, #0x0
    adds r5, r1, r0
    ldr r0, _0804C740 @ =0x00003FFF
    cmp r5, r0
    ble _0804C706
    b _0804C91C
_0804C706:
    adds r0, r7, #0x0
    adds r1, r6, #0x0
    bl sub_804C234
    lsls r0, r0, #0x10
    asrs r4, r0, #0x10
    ldr r0, [r6, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x06
    ands r0, r1
    cmp r0, #0x00
    beq _0804C744
    adds r0, r6, #0x0
    bl sub_80411D0
    b _0804C74A
    .byte 0x00, 0x00
_0804C728: .4byte 0x00000824
_0804C72C: .4byte 0x0000FFFF
_0804C730: .4byte 0x00000C78
_0804C734: .4byte 0x00000C76
_0804C738: .4byte 0x080ECBB8
_0804C73C: .4byte 0x00000C74
_0804C740: .4byte 0x00003FFF
_0804C744:
    adds r0, r6, #0x0
    bl sub_8041144
_0804C74A:
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    adds r0, r0, r4
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    str r0, [sp, #0x00C]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    mov r8, r0
    adds r0, r6, #0x0
    mov r1, r8
    bl sub_80419D0
    adds r3, r0, #0x0
    movs r0, #0x80
    lsls r0, r0, #0x07
    subs r1, r0, r5
    adds r0, r1, #0x0
    cmp r1, #0x00
    bge _0804C776
    ldr r2, _0804C7CC @ =0x000007FF
    adds r0, r1, r2
_0804C776:
    asrs r0, r0, #0x0B
    lsls r2, r0, #0x03
    adds r0, r1, #0x0
    cmp r0, #0x00
    bge _0804C782
    adds r0, #0x7F
_0804C782:
    asrs r1, r0, #0x07
    lsls r0, r3, #0x10
    lsrs r0, r0, #0x10
    muls r0, r1
    cmp r0, #0x00
    bge _0804C790
    adds r0, #0xFF
_0804C790:
    asrs r0, r0, #0x08
    adds r0, r2, r0
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    mov r10, r0
    ldr r3, [sp, #0x010]
    ldrb r1, [r3, #0x00]
    movs r2, #0x08
    adds r0, r2, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _0804C85C
    mov r5, r9
    ldr r0, [r5, #0x08]
    cmp r0, #0x00
    beq _0804C7B2
    b _0804C9C4
_0804C7B2:
    movs r1, #0xCD
    lsls r1, r1, #0x01
    adds r0, r6, r1
    ldrb r1, [r0, #0x00]
    movs r0, #0x04
    ands r0, r1
    cmp r0, #0x00
    beq _0804C7D4
    ldr r2, _0804C7D0 @ =0x00000C74
    adds r1, r7, r2
    movs r0, #0x64
    strh r0, [r1, #0x00]
    b _0804C7F6
_0804C7CC: .4byte 0x000007FF
_0804C7D0: .4byte 0x00000C74
_0804C7D4:
    adds r0, r2, #0x0
    ands r0, r1
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #0x00
    beq _0804C7F0
    ldr r3, _0804C7EC @ =0x00000C74
    adds r1, r7, r3
    movs r0, #0x63
    strh r0, [r1, #0x00]
    b _0804C7F6
    .byte 0x00, 0x00
_0804C7EC: .4byte 0x00000C74
_0804C7F0:
    ldr r5, _0804C850 @ =0x00000C74
    adds r0, r7, r5
    strh r1, [r0, #0x00]
_0804C7F6:
    ldr r0, _0804C850 @ =0x00000C74
    adds r1, r7, r0
    ldrh r0, [r1, #0x00]
    cmp r0, #0x00
    bne _0804C802
    b _0804C9C4
_0804C802:
    adds r4, r0, #0x0
    ldr r1, [sp, #0x00C]
    lsls r5, r1, #0x10
    asrs r5, r5, #0x10
    bl m4aSongNumStart
    ldr r6, _0804C854 @ =0x08102414
    ldr r0, _0804C858 @ =0x08102498
    lsls r4, r4, #0x03
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    mov r2, r10
    bl m4aMPlayVolumeControl
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r5, #0x0
    bl m4aMPlayPitchControl
    b _0804C9C4
_0804C850: .4byte 0x00000C74
_0804C854: .4byte 0x08102414
_0804C858: .4byte 0x08102498
_0804C85C:
    ldr r2, _0804C8B4 @ =0x00000C76
    adds r0, r7, r2
    ldrh r0, [r0, #0x00]
    cmp r0, #0x00
    bne _0804C8C4
    ldr r3, _0804C8B8 @ =0x00000C74
    adds r0, r7, r3
    ldrh r4, [r0, #0x00]
    adds r0, r4, #0x0
    bl m4aSongNumStart
    ldr r5, _0804C8BC @ =0x08102414
    ldr r0, _0804C8C0 @ =0x08102498
    lsls r4, r4, #0x03
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    mov r2, r10
    bl m4aMPlayVolumeControl
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    mov r2, r8
    movs r1, #0x01
    bl m4aMPlayPitchControl
    b _0804C900
_0804C8B4: .4byte 0x00000C76
_0804C8B8: .4byte 0x00000C74
_0804C8BC: .4byte 0x08102414
_0804C8C0: .4byte 0x08102498
_0804C8C4:
    ldr r0, _0804C90C @ =0x00000C74
    adds r5, r7, r0
    ldrh r0, [r5, #0x00]
    ldr r6, _0804C910 @ =0x08102414
    ldr r4, _0804C914 @ =0x08102498
    lsls r0, r0, #0x03
    adds r0, r0, r4
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    mov r2, r10
    bl m4aMPlayVolumeControl
    ldrh r0, [r5, #0x00]
    lsls r0, r0, #0x03
    adds r0, r0, r4
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldr r0, [r0, #0x00]
    mov r2, r8
    movs r1, #0x01
    bl m4aMPlayPitchControl
_0804C900:
    ldr r2, _0804C918 @ =0x00000C76
    adds r1, r7, r2
    movs r0, #0x01
    strh r0, [r1, #0x00]
    b _0804C9C4
    .byte 0x00, 0x00
_0804C90C: .4byte 0x00000C74
_0804C910: .4byte 0x08102414
_0804C914: .4byte 0x08102498
_0804C918: .4byte 0x00000C76
_0804C91C:
    ldr r3, _0804C94C @ =0x00000C76
    adds r0, r7, r3
    ldrh r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0804C946
    cmp r2, #0x00
    beq _0804C946
    ldrh r0, [r4, #0x00]
    ldr r3, _0804C950 @ =0x08102414
    ldr r2, _0804C954 @ =0x08102498
    lsls r0, r0, #0x03
    adds r0, r0, r2
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r3
    ldr r0, [r0, #0x00]
    ldr r1, [r2, #0x08]
    bl MPlayStart
_0804C946:
    ldr r5, _0804C94C @ =0x00000C76
    adds r1, r7, r5
    b _0804C98A
_0804C94C: .4byte 0x00000C76
_0804C950: .4byte 0x08102414
_0804C954: .4byte 0x08102498
_0804C958:
    ldr r1, _0804C990 @ =0x00000C76
    adds r0, r7, r1
    ldrh r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0804C986
    ldr r2, _0804C994 @ =0x00000C74
    adds r1, r7, r2
    ldrh r0, [r1, #0x00]
    cmp r0, #0x00
    beq _0804C986
    ldr r3, _0804C998 @ =0x08102414
    ldr r2, _0804C99C @ =0x08102498
    lsls r0, r0, #0x03
    adds r0, r0, r2
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r3
    ldr r0, [r0, #0x00]
    ldr r1, [r2, #0x08]
    bl MPlayStart
_0804C986:
    ldr r3, _0804C990 @ =0x00000C76
    adds r1, r7, r3
_0804C98A:
    movs r0, #0x00
    strh r0, [r1, #0x00]
    b _0804C9C4
_0804C990: .4byte 0x00000C76
_0804C994: .4byte 0x00000C74
_0804C998: .4byte 0x08102414
_0804C99C: .4byte 0x08102498
_0804C9A0:
    ldr r5, _0804CAA8 @ =0x00000C74
    adds r1, r7, r5
    ldrh r0, [r1, #0x00]
    cmp r0, #0x00
    beq _0804C9C4
    ldr r3, _0804CAAC @ =0x08102414
    ldr r2, _0804CAB0 @ =0x08102498
    lsls r0, r0, #0x03
    adds r0, r0, r2
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r3
    ldr r0, [r0, #0x00]
    ldr r1, [r2, #0x08]
    bl MPlayStart
_0804C9C4:
    ldr r1, [sp, #0x014]
    ldrb r0, [r1, #0x00]
    cmp r0, #0x04
    bne _0804C9CE
    b _0804CC44
_0804C9CE:
    ldr r2, _0804CAB4 @ =0x000007D4
    adds r0, r7, r2
    ldrb r1, [r0, #0x00]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0x00
    beq _0804C9DE
    b _0804CBE4
_0804C9DE:
    mov r3, r9
    ldr r1, [r3, #0x48]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _0804C9EC
    b _0804CBE4
_0804C9EC:
    mov r0, r9
    adds r0, #0xB4
    ldrh r3, [r0, #0x00]
    ldr r0, _0804CAB8 @ =0x00008001
    ands r0, r3
    cmp r0, #0x00
    beq _0804C9FC
    b _0804CBE4
_0804C9FC:
    movs r0, #0x80
    lsls r0, r0, #0x0B
    ands r1, r0
    cmp r1, #0x00
    beq _0804CA20
    mov r0, r9
    adds r0, #0xBC
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    blt _0804CA12
    b _0804CBE4
_0804CA12:
    mov r0, r9
    adds r0, #0x88
    movs r5, #0x00
    ldsh r0, [r0, r5]
    cmp r0, #0x00
    bne _0804CA20
    b _0804CBE4
_0804CA20:
    mov r0, r9
    adds r0, #0x7E
    ldrb r2, [r0, #0x00]
    adds r0, r2, #0x0
    cmp r0, #0x0D
    bne _0804CA2E
    b _0804CBE4
_0804CA2E:
    cmp r0, #0x05
    bne _0804CA34
    b _0804CBE4
_0804CA34:
    cmp r0, #0x06
    bne _0804CA3A
    b _0804CBE4
_0804CA3A:
    cmp r0, #0x07
    bne _0804CA40
    b _0804CBE4
_0804CA40:
    cmp r0, #0x08
    bne _0804CA46
    b _0804CBE4
_0804CA46:
    cmp r0, #0x0F
    bne _0804CA4C
    b _0804CBE4
_0804CA4C:
    mov r0, r9
    adds r0, #0xBC
    ldr r1, [r0, #0x00]
    cmp r1, #0x00
    beq _0804CA64
    subs r0, #0x37
    ldrb r0, [r0, #0x00]
    subs r0, #0x50
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x0F
    bls _0804CA8A
_0804CA64:
    subs r0, r2, #0x1
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x03
    bhi _0804CA76
    movs r0, #0x24
    ands r0, r3
    cmp r0, #0x00
    bne _0804CA8A
_0804CA76:
    cmp r1, #0x00
    blt _0804CA7C
    b _0804CBE4
_0804CA7C:
    mov r0, r9
    adds r0, #0x88
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _0804CA8A
    b _0804CBE4
_0804CA8A:
    mov r0, r9
    adds r0, #0x85
    ldrb r1, [r0, #0x00]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0x00
    beq _0804CAC0
    ldr r0, _0804CABC @ =0x03002380
    lsrs r1, r1, #0x01
    movs r2, #0x0F
    ands r1, r2
    lsls r1, r1, #0x01
    adds r1, r1, r0
    ldrh r0, [r1, #0x00]
    b _0804CAC2
_0804CAA8: .4byte 0x00000C74
_0804CAAC: .4byte 0x08102414
_0804CAB0: .4byte 0x08102498
_0804CAB4: .4byte 0x000007D4
_0804CAB8: .4byte 0x00008001
_0804CABC: .4byte 0x03002380
_0804CAC0:
    movs r0, #0x00
_0804CAC2:
    adds r4, r0, #0x0
    ldr r2, _0804CAD8 @ =0x00000C7C
    adds r5, r7, r2
    ldrh r3, [r5, #0x00]
    cmp r4, r3
    beq _0804CB70
    cmp r4, #0x00
    beq _0804CADC
    bl m4aSongNumStart
    b _0804CAF8
_0804CAD8: .4byte 0x00000C7C
_0804CADC:
    ldr r3, _0804CB3C @ =0x08102414
    ldr r2, _0804CB40 @ =0x08102498
    movs r5, #0x8C
    lsls r5, r5, #0x02
    adds r0, r2, r5
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r3
    ldr r0, [r0, #0x00]
    ldr r1, [r2, #0x08]
    bl MPlayStart
_0804CAF8:
    ldr r0, _0804CB44 @ =0x00000C7C
    adds r5, r7, r0
    strh r4, [r5, #0x00]
    mov r2, r9
    ldr r1, [r2, #0x04]
    ldr r0, [r2, #0x00]
    cmp r0, #0x00
    bge _0804CB0C
    ldr r3, _0804CB48 @ =0x0003FFFF
    adds r0, r0, r3
_0804CB0C:
    asrs r0, r0, #0x12
    movs r3, #0x3F
    ands r0, r3
    lsls r2, r0, #0x0A
    adds r0, r1, #0x0
    cmp r0, #0x00
    bge _0804CB1E
    ldr r1, _0804CB48 @ =0x0003FFFF
    adds r0, r0, r1
_0804CB1E:
    asrs r0, r0, #0x12
    ands r0, r3
    lsls r1, r0, #0x04
    orrs r1, r2
    ldr r3, _0804CB4C @ =0x00000C7E
    adds r2, r7, r3
    strh r1, [r2, #0x00]
    ldrh r0, [r5, #0x00]
    cmp r0, #0x53
    bgt _0804CB50
    cmp r0, #0x52
    bge _0804CB68
    cmp r0, #0x51
    beq _0804CB54
    b _0804CBBE
_0804CB3C: .4byte 0x08102414
_0804CB40: .4byte 0x08102498
_0804CB44: .4byte 0x00000C7C
_0804CB48: .4byte 0x0003FFFF
_0804CB4C: .4byte 0x00000C7E
_0804CB50:
    cmp r0, #0x89
    bne _0804CBBE
_0804CB54:
    ldr r5, _0804CB64 @ =0x00000C7E
    adds r2, r7, r5
    ldrh r1, [r2, #0x00]
    movs r0, #0x06
    orrs r0, r1
    strh r0, [r2, #0x00]
    b _0804CBBE
    .byte 0x00, 0x00
_0804CB64: .4byte 0x00000C7E
_0804CB68:
    movs r0, #0x04
    orrs r1, r0
    strh r1, [r2, #0x00]
    b _0804CBBE
_0804CB70:
    ldrh r0, [r5, #0x00]
    cmp r0, #0x51
    blt _0804CBBE
    cmp r0, #0x53
    ble _0804CB7E
    cmp r0, #0x89
    bne _0804CBBE
_0804CB7E:
    mov r0, r9
    ldr r1, [r0, #0x04]
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bge _0804CB8C
    ldr r2, _0804CBD8 @ =0x0003FFFF
    adds r0, r0, r2
_0804CB8C:
    asrs r0, r0, #0x12
    movs r3, #0x3F
    ands r0, r3
    lsls r2, r0, #0x0A
    adds r0, r1, #0x0
    cmp r0, #0x00
    bge _0804CB9E
    ldr r1, _0804CBD8 @ =0x0003FFFF
    adds r0, r0, r1
_0804CB9E:
    asrs r0, r0, #0x12
    ands r0, r3
    lsls r1, r0, #0x04
    orrs r1, r2
    ldr r2, _0804CBDC @ =0x00000C7E
    adds r0, r7, r2
    ldrh r3, [r0, #0x00]
    movs r2, #0x0F
    ands r2, r3
    cmp r2, #0x00
    bne _0804CBCC
    ldr r0, _0804CBE0 @ =0x0000FFF0
    ands r0, r3
    cmp r0, r1
    beq _0804CBBE
    strh r2, [r5, #0x00]
_0804CBBE:
    ldr r3, _0804CBDC @ =0x00000C7E
    adds r0, r7, r3
    ldrh r1, [r0, #0x00]
    movs r0, #0x0F
    ands r0, r1
    cmp r0, #0x00
    beq _0804CC44
_0804CBCC:
    ldr r5, _0804CBDC @ =0x00000C7E
    adds r1, r7, r5
    ldrh r0, [r1, #0x00]
    subs r0, #0x01
    strh r0, [r1, #0x00]
    b _0804CC44
_0804CBD8: .4byte 0x0003FFFF
_0804CBDC: .4byte 0x00000C7E
_0804CBE0: .4byte 0x0000FFF0
_0804CBE4:
    ldr r0, _0804CCAC @ =0x00000C7C
    adds r2, r7, r0
    ldrh r0, [r2, #0x00]
    cmp r0, #0x00
    beq _0804CC44
    mov r1, r9
    ldr r0, [r1, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x0B
    ands r0, r1
    cmp r0, #0x00
    bne _0804CC36
    mov r0, r9
    adds r0, #0xB4
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _0804CC36
    ldrh r0, [r2, #0x00]
    ldr r3, _0804CCB0 @ =0x08102414
    ldr r2, _0804CCB4 @ =0x08102498
    lsls r0, r0, #0x03
    adds r0, r0, r2
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r3
    ldr r0, [r0, #0x00]
    ldr r1, [r2, #0x08]
    bl MPlayStart
    movs r2, #0xCD
    lsls r2, r2, #0x01
    add r2, r9
    ldrb r1, [r2, #0x00]
    movs r0, #0xEF
    ands r0, r1
    strb r0, [r2, #0x00]
_0804CC36:
    ldr r2, _0804CCAC @ =0x00000C7C
    adds r0, r7, r2
    movs r1, #0x00
    strh r1, [r0, #0x00]
    ldr r3, _0804CCB8 @ =0x00000C7E
    adds r0, r7, r3
    strh r1, [r0, #0x00]
_0804CC44:
    mov r0, r9
    adds r1, r7, #0x0
    bl sub_8041704
    movs r0, #0xC0
    lsls r0, r0, #0x01
    add r0, r9
    ldr r2, [r0, #0x00]
    movs r0, #0xC2
    lsls r0, r0, #0x01
    add r0, r9
    ldr r1, [r0, #0x00]
    movs r0, #0xF0
    lsls r0, r0, #0x08
    ands r1, r0
    ldr r5, [sp, #0x008]
    cmp r5, #0x03
    bne _0804CCBC
    movs r0, #0xC0
    lsls r0, r0, #0x08
    cmp r1, r0
    beq _0804CC78
    movs r0, #0xE0
    lsls r0, r0, #0x08
    cmp r1, r0
    bne _0804CCBC
_0804CC78:
    movs r0, #0x22
    ldsh r1, [r2, r0]
    movs r0, #0x18
    negs r0, r0
    cmp r1, r0
    ble _0804CCBC
    movs r1, #0xC8
    lsls r1, r1, #0x04
    adds r4, r7, r1
    ldrh r0, [r4, #0x00]
    cmp r0, #0x00
    bne _0804CC96
    movs r0, #0x69
    bl m4aSongNumStart
_0804CC96:
    ldrh r0, [r4, #0x00]
    adds r0, #0x01
    strh r0, [r4, #0x00]
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    cmp r0, #0x15
    bls _0804CCC6
    movs r0, #0x00
    strh r0, [r4, #0x00]
    b _0804CCC6
    .byte 0x00, 0x00
_0804CCAC: .4byte 0x00000C7C
_0804CCB0: .4byte 0x08102414
_0804CCB4: .4byte 0x08102498
_0804CCB8: .4byte 0x00000C7E
_0804CCBC:
    movs r2, #0xC8
    lsls r2, r2, #0x04
    adds r1, r7, r2
    movs r0, #0x00
    strh r0, [r1, #0x00]
_0804CCC6:
    adds r0, r7, #0x0
    bl sub_80418BC
    thumb_func_start sub_804CCCC
sub_804CCCC:
    add sp, #0x018
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x70, 0xB5, 0x09, 0x04, 0x0E, 0x0C, 0x0F, 0x4A, 0x0F, 0x48, 0xCC, 0x30, 0x01, 0x88, 0x48, 0x00
    .byte 0x40, 0x18, 0x80, 0x00, 0x80, 0x18, 0x04, 0x68, 0x20, 0x68, 0x00, 0x21, 0x00, 0x22, 0x03, 0x78
    .byte 0x99, 0x42, 0x08, 0xDA, 0x01, 0x25, 0x28, 0x1C, 0x90, 0x40, 0x01, 0x43, 0x08, 0x04, 0x01, 0x0C
    .byte 0x01, 0x32, 0x9A, 0x42, 0xF7, 0xDB, 0x20, 0x1C, 0x32, 0x1C, 0x14, 0xF0, 0xB3, 0xF8, 0x70, 0xBC
    .byte 0x01, 0xBC, 0x00, 0x47, 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08
    thumb_func_start sub_804CD28
sub_804CD28:
    push {r4, lr}
    adds r4, r1, #0x0
    ldr r1, _0804CD68 @ =0x00000824
    adds r0, r0, r1
    adds r3, r0, #0x0
    ldr r1, [r4, #0x00]
    ldr r0, [r3, #0x18]
    subs r1, r1, r0
    cmp r1, #0x00
    bge _0804CD40
    ldr r2, _0804CD6C @ =0x0000FFFF
    adds r1, r1, r2
_0804CD40:
    asrs r2, r1, #0x10
    ldr r1, [r4, #0x04]
    ldr r0, [r3, #0x1C]
    subs r0, r1, r0
    cmp r0, #0x00
    bge _0804CD50
    ldr r1, _0804CD6C @ =0x0000FFFF
    adds r0, r0, r1
_0804CD50:
    asrs r0, r0, #0x10
    adds r1, r2, #0x0
    muls r1, r2
    adds r2, r0, #0x0
    muls r2, r0
    adds r0, r2, #0x0
    adds r1, r1, r0
    ldr r0, _0804CD70 @ =0x0003FFFF
    cmp r1, r0
    ble _0804CD74
    movs r0, #0x00
    b _0804CD8C
_0804CD68: .4byte 0x00000824
_0804CD6C: .4byte 0x0000FFFF
_0804CD70: .4byte 0x0003FFFF
_0804CD74:
    adds r0, r1, #0x0
    cmp r0, #0x00
    bge _0804CD7E
    ldr r1, _0804CD94 @ =0x000003FF
    adds r0, r0, r1
_0804CD7E:
    asrs r1, r0, #0x0A
    movs r2, #0x80
    lsls r2, r2, #0x01
    adds r0, r2, #0x0
    subs r0, r0, r1
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
_0804CD8C:
    pop {r4}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0804CD94: .4byte 0x000003FF
    thumb_func_start sub_804CD98
sub_804CD98:
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    adds r2, r1, #0x0
    ldr r0, _0804CDD4 @ =0x0000100B
    cmp r1, r0
    bne _0804CDA8
    b _0804D1E0
_0804CDA8:
    cmp r1, r0
    bgt _0804CE28
    subs r0, #0x07
    cmp r1, r0
    bne _0804CDB4
    b _0804D0C8
_0804CDB4:
    cmp r1, r0
    bgt _0804CDF0
    subs r0, #0x03
    cmp r1, r0
    bne _0804CDC0
    b _0804D108
_0804CDC0:
    cmp r1, r0
    bgt _0804CDD8
    cmp r1, #0x02
    bne _0804CDCA
    b _0804D1E0
_0804CDCA:
    subs r0, #0x01
    cmp r1, r0
    bne _0804CDD2
    b _0804D148
_0804CDD2:
    b _0804D2D0
_0804CDD4: .4byte 0x0000100B
_0804CDD8:
    ldr r0, _0804CDEC @ =0x00001002
    cmp r1, r0
    bne _0804CDE0
    b _0804D220
_0804CDE0:
    adds r0, #0x01
    cmp r1, r0
    bne _0804CDE8
    b _0804D260
_0804CDE8:
    b _0804D2D0
    .byte 0x00, 0x00
_0804CDEC: .4byte 0x00001002
_0804CDF0:
    ldr r0, _0804CE0C @ =0x00001007
    cmp r1, r0
    bne _0804CDF8
    b _0804D008
_0804CDF8:
    cmp r1, r0
    bgt _0804CE10
    subs r0, #0x02
    cmp r1, r0
    beq _0804CEBC
    adds r0, #0x01
    cmp r1, r0
    bne _0804CE0A
    b _0804D088
_0804CE0A:
    b _0804D2D0
_0804CE0C: .4byte 0x00001007
_0804CE10:
    ldr r0, _0804CE24 @ =0x00001009
    cmp r1, r0
    bne _0804CE18
    b _0804D048
_0804CE18:
    cmp r1, r0
    ble _0804CE1E
    b _0804CF34
_0804CE1E:
    movs r7, #0x04
    movs r4, #0x00
    b _0804CF70
_0804CE24: .4byte 0x00001009
_0804CE28:
    ldr r0, _0804CE50 @ =0x00002002
    cmp r1, r0
    bne _0804CE30
    b _0804D220
_0804CE30:
    cmp r1, r0
    bgt _0804CE78
    ldr r0, _0804CE54 @ =0x0000100E
    cmp r1, r0
    bne _0804CE3C
    b _0804D048
_0804CE3C:
    cmp r1, r0
    bgt _0804CE58
    subs r0, #0x02
    cmp r1, r0
    beq _0804CEF8
    adds r0, #0x01
    cmp r1, r0
    bne _0804CE4E
    b _0804D1A0
_0804CE4E:
    b _0804D2D0
_0804CE50: .4byte 0x00002002
_0804CE54: .4byte 0x0000100E
_0804CE58:
    movs r0, #0x80
    lsls r0, r0, #0x06
    cmp r1, r0
    bne _0804CE62
    b _0804D148
_0804CE62:
    cmp r1, r0
    ble _0804CE68
    b _0804D108
_0804CE68:
    ldr r0, _0804CE74 @ =0x0000100F
    cmp r1, r0
    bne _0804CE70
    b _0804CFC8
_0804CE70:
    b _0804D2D0
    .byte 0x00, 0x00
_0804CE74: .4byte 0x0000100F
_0804CE78:
    ldr r0, _0804CE94 @ =0x00002005
    cmp r1, r0
    beq _0804CEBC
    cmp r1, r0
    bgt _0804CE98
    subs r0, #0x02
    cmp r1, r0
    bne _0804CE8A
    b _0804D260
_0804CE8A:
    adds r0, #0x01
    cmp r1, r0
    bne _0804CE92
    b _0804D0C8
_0804CE92:
    b _0804D2D0
_0804CE94: .4byte 0x00002005
_0804CE98:
    ldr r0, _0804CEAC @ =0x0000200A
    cmp r1, r0
    beq _0804CF34
    cmp r1, r0
    bgt _0804CEB0
    subs r0, #0x03
    cmp r1, r0
    bne _0804CEAA
    b _0804D008
_0804CEAA:
    b _0804D2D0
_0804CEAC: .4byte 0x0000200A
_0804CEB0:
    ldr r0, _0804CEB8 @ =0x0000200C
    cmp r2, r0
    beq _0804CEF8
    b _0804D2D0
_0804CEB8: .4byte 0x0000200C
_0804CEBC:
    movs r6, #0x01
    movs r4, #0x00
    ldr r7, _0804CEF0 @ =0x00000FFF
    ldr r0, _0804CEF4 @ =0x080EE65C
    adds r5, r0, #0x2
_0804CEC6:
    adds r4, #0x01
    movs r0, #0x00
    movs r1, #0x0E
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    adds r2, r0, #0x0
    movs r3, #0x01
_0804CED6:
    ldrh r0, [r2, #0x00]
    adds r1, r7, #0x0
    ands r1, r0
    ldrh r0, [r5, #0x00]
    orrs r1, r0
    strh r1, [r2, #0x00]
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _0804CED6
    cmp r4, #0x01
    ble _0804CEC6
    b _0804D294
_0804CEF0: .4byte 0x00000FFF
_0804CEF4: .4byte 0x080EE65C
_0804CEF8:
    movs r6, #0x02
    movs r4, #0x00
    ldr r7, _0804CF2C @ =0x00000FFF
    ldr r0, _0804CF30 @ =0x080EE65C
    adds r5, r0, #0x4
_0804CF02:
    adds r4, #0x01
    movs r0, #0x00
    movs r1, #0x0E
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    adds r2, r0, #0x0
    movs r3, #0x01
_0804CF12:
    ldrh r0, [r2, #0x00]
    adds r1, r7, #0x0
    ands r1, r0
    ldrh r0, [r5, #0x00]
    orrs r1, r0
    strh r1, [r2, #0x00]
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _0804CF12
    cmp r4, #0x01
    ble _0804CF02
    b _0804D294
_0804CF2C: .4byte 0x00000FFF
_0804CF30: .4byte 0x080EE65C
_0804CF34:
    movs r6, #0x03
    movs r4, #0x00
    ldr r7, _0804CF68 @ =0x00000FFF
    ldr r0, _0804CF6C @ =0x080EE65C
    adds r5, r0, #0x6
_0804CF3E:
    adds r4, #0x01
    movs r0, #0x00
    movs r1, #0x0E
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    adds r2, r0, #0x0
    movs r3, #0x01
_0804CF4E:
    ldrh r0, [r2, #0x00]
    adds r1, r7, #0x0
    ands r1, r0
    ldrh r0, [r5, #0x00]
    orrs r1, r0
    strh r1, [r2, #0x00]
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _0804CF4E
    cmp r4, #0x01
    ble _0804CF3E
    b _0804D294
_0804CF68: .4byte 0x00000FFF
_0804CF6C: .4byte 0x080EE65C
_0804CF70:
    adds r4, #0x01
    movs r0, #0x00
    movs r1, #0x0E
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    adds r2, r0, #0x0
    adds r5, r4, #0x0
    lsls r1, r7, #0x01
    ldr r6, _0804CFC0 @ =0x00000FFF
    ldr r0, _0804CFC4 @ =0x080EE65C
    adds r4, r1, r0
    movs r3, #0x01
_0804CF8A:
    ldrh r0, [r2, #0x00]
    adds r1, r6, #0x0
    ands r1, r0
    ldrh r0, [r4, #0x00]
    orrs r1, r0
    strh r1, [r2, #0x00]
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _0804CF8A
    adds r4, r5, #0x0
    cmp r4, #0x01
    ble _0804CF70
    movs r0, #0x01
    bl map_setBufferDirty
    cmp r7, #0x0F
    bne _0804CFB0
    movs r7, #0x0B
_0804CFB0:
    cmp r7, #0x10
    bne _0804CFB6
    movs r7, #0x0A
_0804CFB6:
    bl dmaq_getVBlankDmaQueue
    lsls r1, r7, #0x07
    b _0804D2AC
    .byte 0x00, 0x00
_0804CFC0: .4byte 0x00000FFF
_0804CFC4: .4byte 0x080EE65C
_0804CFC8:
    movs r6, #0x05
    movs r4, #0x00
    ldr r7, _0804D000 @ =0x00000FFF
    ldr r0, _0804D004 @ =0x080EE65C
    adds r5, r0, #0x0
    adds r5, #0x0A
_0804CFD4:
    adds r4, #0x01
    movs r0, #0x00
    movs r1, #0x0E
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    adds r2, r0, #0x0
    movs r3, #0x01
_0804CFE4:
    ldrh r0, [r2, #0x00]
    adds r1, r7, #0x0
    ands r1, r0
    ldrh r0, [r5, #0x00]
    orrs r1, r0
    strh r1, [r2, #0x00]
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _0804CFE4
    cmp r4, #0x01
    ble _0804CFD4
    b _0804D294
    .byte 0x00, 0x00
_0804D000: .4byte 0x00000FFF
_0804D004: .4byte 0x080EE65C
_0804D008:
    movs r6, #0x06
    movs r4, #0x00
    ldr r7, _0804D040 @ =0x00000FFF
    ldr r0, _0804D044 @ =0x080EE65C
    adds r5, r0, #0x0
    adds r5, #0x0C
_0804D014:
    adds r4, #0x01
    movs r0, #0x00
    movs r1, #0x0E
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    adds r2, r0, #0x0
    movs r3, #0x01
_0804D024:
    ldrh r0, [r2, #0x00]
    adds r1, r7, #0x0
    ands r1, r0
    ldrh r0, [r5, #0x00]
    orrs r1, r0
    strh r1, [r2, #0x00]
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _0804D024
    cmp r4, #0x01
    ble _0804D014
    b _0804D294
    .byte 0x00, 0x00
_0804D040: .4byte 0x00000FFF
_0804D044: .4byte 0x080EE65C
_0804D048:
    movs r6, #0x07
    movs r4, #0x00
    ldr r7, _0804D080 @ =0x00000FFF
    ldr r0, _0804D084 @ =0x080EE65C
    adds r5, r0, #0x0
    adds r5, #0x0E
_0804D054:
    adds r4, #0x01
    movs r0, #0x00
    movs r1, #0x0E
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    adds r2, r0, #0x0
    movs r3, #0x01
_0804D064:
    ldrh r0, [r2, #0x00]
    adds r1, r7, #0x0
    ands r1, r0
    ldrh r0, [r5, #0x00]
    orrs r1, r0
    strh r1, [r2, #0x00]
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _0804D064
    cmp r4, #0x01
    ble _0804D054
    b _0804D294
    .byte 0x00, 0x00
_0804D080: .4byte 0x00000FFF
_0804D084: .4byte 0x080EE65C
_0804D088:
    movs r6, #0x08
    movs r4, #0x00
    ldr r7, _0804D0C0 @ =0x00000FFF
    ldr r0, _0804D0C4 @ =0x080EE65C
    adds r5, r0, #0x0
    adds r5, #0x10
_0804D094:
    adds r4, #0x01
    movs r0, #0x00
    movs r1, #0x0E
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    adds r2, r0, #0x0
    movs r3, #0x01
_0804D0A4:
    ldrh r0, [r2, #0x00]
    adds r1, r7, #0x0
    ands r1, r0
    ldrh r0, [r5, #0x00]
    orrs r1, r0
    strh r1, [r2, #0x00]
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _0804D0A4
    cmp r4, #0x01
    ble _0804D094
    b _0804D294
    .byte 0x00, 0x00
_0804D0C0: .4byte 0x00000FFF
_0804D0C4: .4byte 0x080EE65C
_0804D0C8:
    movs r6, #0x09
    movs r4, #0x00
    ldr r7, _0804D100 @ =0x00000FFF
    ldr r0, _0804D104 @ =0x080EE65C
    adds r5, r0, #0x0
    adds r5, #0x12
_0804D0D4:
    adds r4, #0x01
    movs r0, #0x00
    movs r1, #0x0E
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    adds r2, r0, #0x0
    movs r3, #0x01
_0804D0E4:
    ldrh r0, [r2, #0x00]
    adds r1, r7, #0x0
    ands r1, r0
    ldrh r0, [r5, #0x00]
    orrs r1, r0
    strh r1, [r2, #0x00]
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _0804D0E4
    cmp r4, #0x01
    ble _0804D0D4
    b _0804D294
    .byte 0x00, 0x00
_0804D100: .4byte 0x00000FFF
_0804D104: .4byte 0x080EE65C
_0804D108:
    movs r6, #0x0A
    movs r4, #0x00
    ldr r7, _0804D140 @ =0x00000FFF
    ldr r0, _0804D144 @ =0x080EE65C
    adds r5, r0, #0x0
    adds r5, #0x14
_0804D114:
    adds r4, #0x01
    movs r0, #0x00
    movs r1, #0x0E
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    adds r2, r0, #0x0
    movs r3, #0x01
_0804D124:
    ldrh r0, [r2, #0x00]
    adds r1, r7, #0x0
    ands r1, r0
    ldrh r0, [r5, #0x00]
    orrs r1, r0
    strh r1, [r2, #0x00]
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _0804D124
    cmp r4, #0x01
    ble _0804D114
    b _0804D294
    .byte 0x00, 0x00
_0804D140: .4byte 0x00000FFF
_0804D144: .4byte 0x080EE65C
_0804D148:
    movs r7, #0x0B
    movs r4, #0x00
    ldr r6, _0804D198 @ =0x00000FFF
    ldr r0, _0804D19C @ =0x080EE65C
    adds r5, r0, #0x0
    adds r5, #0x16
_0804D154:
    adds r4, #0x01
    movs r0, #0x00
    movs r1, #0x0E
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    adds r2, r0, #0x0
    movs r3, #0x01
_0804D164:
    ldrh r0, [r2, #0x00]
    adds r1, r6, #0x0
    ands r1, r0
    ldrh r0, [r5, #0x00]
    orrs r1, r0
    strh r1, [r2, #0x00]
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _0804D164
    cmp r4, #0x01
    ble _0804D154
    movs r0, #0x01
    bl map_setBufferDirty
    cmp r7, #0x0F
    bne _0804D188
    movs r7, #0x0B
_0804D188:
    cmp r7, #0x10
    bne _0804D18E
    movs r7, #0x0A
_0804D18E:
    bl dmaq_getVBlankDmaQueue
    lsls r1, r7, #0x07
    b _0804D2AC
    .byte 0x00, 0x00
_0804D198: .4byte 0x00000FFF
_0804D19C: .4byte 0x080EE65C
_0804D1A0:
    movs r6, #0x0C
    movs r4, #0x00
    ldr r7, _0804D1D8 @ =0x00000FFF
    ldr r0, _0804D1DC @ =0x080EE65C
    adds r5, r0, #0x0
    adds r5, #0x18
_0804D1AC:
    adds r4, #0x01
    movs r0, #0x00
    movs r1, #0x0E
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    adds r2, r0, #0x0
    movs r3, #0x01
_0804D1BC:
    ldrh r0, [r2, #0x00]
    adds r1, r7, #0x0
    ands r1, r0
    ldrh r0, [r5, #0x00]
    orrs r1, r0
    strh r1, [r2, #0x00]
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _0804D1BC
    cmp r4, #0x01
    ble _0804D1AC
    b _0804D294
    .byte 0x00, 0x00
_0804D1D8: .4byte 0x00000FFF
_0804D1DC: .4byte 0x080EE65C
_0804D1E0:
    movs r6, #0x0D
    movs r4, #0x00
    ldr r7, _0804D218 @ =0x00000FFF
    ldr r0, _0804D21C @ =0x080EE65C
    adds r5, r0, #0x0
    adds r5, #0x1A
_0804D1EC:
    adds r4, #0x01
    movs r0, #0x00
    movs r1, #0x0E
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    adds r2, r0, #0x0
    movs r3, #0x01
_0804D1FC:
    ldrh r0, [r2, #0x00]
    adds r1, r7, #0x0
    ands r1, r0
    ldrh r0, [r5, #0x00]
    orrs r1, r0
    strh r1, [r2, #0x00]
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _0804D1FC
    cmp r4, #0x01
    ble _0804D1EC
    b _0804D294
    .byte 0x00, 0x00
_0804D218: .4byte 0x00000FFF
_0804D21C: .4byte 0x080EE65C
_0804D220:
    movs r6, #0x0F
    movs r4, #0x00
    ldr r7, _0804D258 @ =0x00000FFF
    ldr r0, _0804D25C @ =0x080EE65C
    adds r5, r0, #0x0
    adds r5, #0x1E
_0804D22C:
    adds r4, #0x01
    movs r0, #0x00
    movs r1, #0x0E
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    adds r2, r0, #0x0
    movs r3, #0x01
_0804D23C:
    ldrh r0, [r2, #0x00]
    adds r1, r7, #0x0
    ands r1, r0
    ldrh r0, [r5, #0x00]
    orrs r1, r0
    strh r1, [r2, #0x00]
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _0804D23C
    cmp r4, #0x01
    ble _0804D22C
    b _0804D294
    .byte 0x00, 0x00
_0804D258: .4byte 0x00000FFF
_0804D25C: .4byte 0x080EE65C
_0804D260:
    movs r6, #0x10
    movs r4, #0x00
    ldr r7, _0804D2BC @ =0x00000FFF
    ldr r0, _0804D2C0 @ =0x080EE65C
    adds r5, r0, #0x0
    adds r5, #0x20
_0804D26C:
    adds r4, #0x01
    movs r0, #0x00
    movs r1, #0x0E
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    adds r2, r0, #0x0
    movs r3, #0x01
_0804D27C:
    ldrh r0, [r2, #0x00]
    adds r1, r7, #0x0
    ands r1, r0
    ldrh r0, [r5, #0x00]
    orrs r1, r0
    strh r1, [r2, #0x00]
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _0804D27C
    cmp r4, #0x01
    ble _0804D26C
_0804D294:
    movs r0, #0x01
    bl map_setBufferDirty
    cmp r6, #0x0F
    bne _0804D2A0
    movs r6, #0x0B
_0804D2A0:
    cmp r6, #0x10
    bne _0804D2A6
    movs r6, #0x0A
_0804D2A6:
    bl dmaq_getVBlankDmaQueue
    lsls r1, r6, #0x07
_0804D2AC:
    ldr r2, _0804D2C4 @ =0x0806F33C
    adds r1, r1, r2
    ldr r2, _0804D2C8 @ =0x06000E00
    ldr r3, _0804D2CC @ =0x80000040
    bl dmaq_enqueue
    b _0804D324
    .byte 0x00, 0x00
_0804D2BC: .4byte 0x00000FFF
_0804D2C0: .4byte 0x080EE65C
_0804D2C4: .4byte 0x0806F33C
_0804D2C8: .4byte 0x06000E00
_0804D2CC: .4byte 0x80000040
_0804D2D0:
    movs r7, #0x00
    movs r4, #0x00
    ldr r6, _0804D32C @ =0x00000FFF
    ldr r5, _0804D330 @ =0x080EE65C
_0804D2D8:
    adds r4, #0x01
    movs r0, #0x00
    movs r1, #0x0E
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    adds r2, r0, #0x0
    movs r3, #0x01
_0804D2E8:
    ldrh r0, [r2, #0x00]
    adds r1, r6, #0x0
    ands r1, r0
    ldrh r0, [r5, #0x00]
    orrs r1, r0
    strh r1, [r2, #0x00]
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _0804D2E8
    cmp r4, #0x01
    ble _0804D2D8
    movs r0, #0x01
    bl map_setBufferDirty
    cmp r7, #0x0F
    bne _0804D30C
    movs r7, #0x0B
_0804D30C:
    cmp r7, #0x10
    bne _0804D312
    movs r7, #0x0A
_0804D312:
    bl dmaq_getVBlankDmaQueue
    lsls r1, r7, #0x07
    ldr r2, _0804D334 @ =0x0806F33C
    adds r1, r1, r2
    ldr r2, _0804D338 @ =0x06000E00
    ldr r3, _0804D33C @ =0x80000040
    bl dmaq_enqueue
_0804D324:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804D32C: .4byte 0x00000FFF
_0804D330: .4byte 0x080EE65C
_0804D334: .4byte 0x0806F33C
_0804D338: .4byte 0x06000E00
_0804D33C: .4byte 0x80000040
    thumb_func_start sub_804D340
sub_804D340:
    push {r4, r5, r6, r7, lr}
    ldr r1, _0804D3BC @ =0x03002E20
    ldr r0, _0804D3C0 @ =0x00000C92
    adds r2, r1, r0
    movs r0, #0x00
    strh r0, [r2, #0x00]
    ldr r0, _0804D3C4 @ =0x00000C8E
    adds r2, r1, r0
    ldr r0, _0804D3C8 @ =0x0000FFFF
    strh r0, [r2, #0x00]
    movs r0, #0xC9
    lsls r0, r0, #0x04
    adds r1, r1, r0
    movs r0, #0x01
    negs r0, r0
    strh r0, [r1, #0x00]
    movs r7, #0x00
    movs r4, #0x00
    ldr r6, _0804D3CC @ =0x00000FFF
    ldr r5, _0804D3D0 @ =0x080EE65C
_0804D368:
    adds r4, #0x01
    movs r0, #0x00
    movs r1, #0x0E
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    adds r2, r0, #0x0
    movs r3, #0x01
_0804D378:
    ldrh r0, [r2, #0x00]
    adds r1, r6, #0x0
    ands r1, r0
    ldrh r0, [r5, #0x00]
    orrs r1, r0
    strh r1, [r2, #0x00]
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _0804D378
    cmp r4, #0x01
    ble _0804D368
    movs r0, #0x01
    bl map_setBufferDirty
    cmp r7, #0x0F
    bne _0804D39C
    movs r7, #0x0B
_0804D39C:
    cmp r7, #0x10
    bne _0804D3A2
    movs r7, #0x0A
_0804D3A2:
    bl dmaq_getVBlankDmaQueue
    lsls r1, r7, #0x07
    ldr r2, _0804D3D4 @ =0x0806F33C
    adds r1, r1, r2
    ldr r2, _0804D3D8 @ =0x06000E00
    ldr r3, _0804D3DC @ =0x80000040
    bl dmaq_enqueue
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804D3BC: .4byte 0x03002E20
_0804D3C0: .4byte 0x00000C92
_0804D3C4: .4byte 0x00000C8E
_0804D3C8: .4byte 0x0000FFFF
_0804D3CC: .4byte 0x00000FFF
_0804D3D0: .4byte 0x080EE65C
_0804D3D4: .4byte 0x0806F33C
_0804D3D8: .4byte 0x06000E00
_0804D3DC: .4byte 0x80000040
    thumb_func_start sub_804D3E0
sub_804D3E0:
    push {r4, r5, lr}
    ldr r2, _0804D410 @ =0x03002E20
    ldr r0, _0804D414 @ =0x00000C8E
    adds r4, r2, r0
    ldrh r3, [r4, #0x00]
    adds r1, r3, #0x0
    ldr r0, _0804D418 @ =0x00001008
    cmp r1, r0
    bne _0804D424
    ldr r1, _0804D41C @ =0x0000100F
    movs r5, #0xC9
    lsls r5, r5, #0x04
    adds r0, r2, r5
    strh r3, [r0, #0x00]
    strh r1, [r4, #0x00]
    ldr r0, _0804D420 @ =0x00000C92
    adds r1, r2, r0
    movs r0, #0xA0
    strh r0, [r1, #0x00]
    ldrh r0, [r4, #0x00]
    bl sub_804CD98
    b _0804D450
    .byte 0x00, 0x00
_0804D410: .4byte 0x03002E20
_0804D414: .4byte 0x00000C8E
_0804D418: .4byte 0x00001008
_0804D41C: .4byte 0x0000100F
_0804D420: .4byte 0x00000C92
_0804D424:
    ldr r0, _0804D444 @ =0x0000100F
    cmp r1, r0
    bne _0804D44C
    subs r0, #0x08
    movs r5, #0xC9
    lsls r5, r5, #0x04
    adds r1, r2, r5
    strh r3, [r1, #0x00]
    strh r0, [r4, #0x00]
    ldr r1, _0804D448 @ =0x00000C92
    adds r2, r2, r1
    movs r1, #0xA0
    strh r1, [r2, #0x00]
    bl sub_804CD98
    b _0804D450
_0804D444: .4byte 0x0000100F
_0804D448: .4byte 0x00000C92
_0804D44C:
    bl sub_804D340
_0804D450:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_804D458
sub_804D458:
    push {r4, r5, r6, lr}
    adds r6, r0, #0x0
    ldr r1, _0804D4A0 @ =0x00000814
    adds r0, r6, r1
    ldr r4, [r0, #0x00]
    bl sub_804D340
    movs r1, #0xBD
    lsls r1, r1, #0x01
    adds r0, r4, r1
    ldrh r5, [r0, #0x00]
    cmp r5, #0x00
    beq _0804D498
    ldr r1, _0804D4A4 @ =0x03002E20
    ldr r4, _0804D4A8 @ =0x00000C8E
    adds r2, r1, r4
    ldrh r3, [r2, #0x00]
    adds r4, #0x02
    adds r0, r1, r4
    movs r4, #0x00
    strh r3, [r0, #0x00]
    strh r5, [r2, #0x00]
    ldr r0, _0804D4AC @ =0x00000C92
    adds r1, r1, r0
    movs r0, #0xA0
    strh r0, [r1, #0x00]
    ldrh r0, [r2, #0x00]
    bl sub_804CD98
    ldr r1, _0804D4B0 @ =0x00000C6E
    adds r0, r6, r1
    strh r4, [r0, #0x00]
_0804D498:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804D4A0: .4byte 0x00000814
_0804D4A4: .4byte 0x03002E20
_0804D4A8: .4byte 0x00000C8E
_0804D4AC: .4byte 0x00000C92
_0804D4B0: .4byte 0x00000C6E
    thumb_func_start sub_804D4B4
sub_804D4B4:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    ldr r3, _0804D564 @ =0x03002E20
    movs r1, #0x24
    adds r1, r1, r3
    mov r8, r1
    ldr r1, _0804D568 @ =0x00000814
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _0804D4D4
    b _0804D72E
_0804D4D4:
    ldr r1, _0804D56C @ =0x00000C92
    adds r0, r3, r1
    ldrh r1, [r0, #0x00]
    adds r2, r1, #0x0
    cmp r2, #0x00
    bne _0804D4E2
    b _0804D71C
_0804D4E2:
    movs r0, #0x07
    ands r0, r1
    cmp r0, #0x00
    beq _0804D4EC
    b _0804D700
_0804D4EC:
    movs r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _0804D4F6
    b _0804D6C8
_0804D4F6:
    movs r1, #0xC9
    lsls r1, r1, #0x04
    adds r0, r3, r1
    ldrh r1, [r0, #0x00]
    ldr r0, _0804D570 @ =0x00001008
    cmp r1, r0
    beq _0804D51C
    adds r0, #0x07
    cmp r1, r0
    beq _0804D51C
    subs r0, #0x04
    cmp r1, r0
    beq _0804D528
    ldr r1, _0804D574 @ =0x00000C8E
    adds r0, r3, r1
    ldrh r0, [r0, #0x00]
    cmp r0, #0x02
    beq _0804D51C
    b _0804D65C
_0804D51C:
    ldr r0, _0804D578 @ =0x00000C6C
    add r0, r8
    ldrh r1, [r0, #0x00]
    ldr r0, _0804D57C @ =0x0000100B
    cmp r1, r0
    bne _0804D610
_0804D528:
    ldr r0, _0804D580 @ =0x00000C6A
    add r0, r8
    ldrh r2, [r0, #0x00]
    cmp r2, #0x02
    bne _0804D58C
    movs r7, #0x00
    movs r4, #0x00
    ldr r6, _0804D584 @ =0x00000FFF
    ldr r5, _0804D588 @ =0x080EE65C
_0804D53A:
    adds r4, #0x01
    movs r0, #0x00
    movs r1, #0x0E
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    adds r2, r0, #0x0
    movs r3, #0x01
_0804D54A:
    ldrh r0, [r2, #0x00]
    adds r1, r6, #0x0
    ands r1, r0
    ldrh r0, [r5, #0x00]
    orrs r1, r0
    strh r1, [r2, #0x00]
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _0804D54A
    cmp r4, #0x01
    ble _0804D53A
    b _0804D5CC
_0804D564: .4byte 0x03002E20
_0804D568: .4byte 0x00000814
_0804D56C: .4byte 0x00000C92
_0804D570: .4byte 0x00001008
_0804D574: .4byte 0x00000C8E
_0804D578: .4byte 0x00000C6C
_0804D57C: .4byte 0x0000100B
_0804D580: .4byte 0x00000C6A
_0804D584: .4byte 0x00000FFF
_0804D588: .4byte 0x080EE65C
_0804D58C:
    ldr r0, _0804D5F4 @ =0x00000C6C
    add r0, r8
    ldrh r1, [r0, #0x00]
    ldr r0, _0804D5F8 @ =0x0000100B
    cmp r1, r0
    bne _0804D610
    cmp r2, r1
    bne _0804D610
    movs r7, #0x00
    movs r4, #0x00
    ldr r6, _0804D5FC @ =0x00000FFF
    ldr r5, _0804D600 @ =0x080EE65C
_0804D5A4:
    adds r4, #0x01
    movs r0, #0x00
    movs r1, #0x0E
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    adds r2, r0, #0x0
    movs r3, #0x01
_0804D5B4:
    ldrh r0, [r2, #0x00]
    adds r1, r6, #0x0
    ands r1, r0
    ldrh r0, [r5, #0x00]
    orrs r1, r0
    strh r1, [r2, #0x00]
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _0804D5B4
    cmp r4, #0x01
    ble _0804D5A4
_0804D5CC:
    movs r0, #0x01
    bl map_setBufferDirty
    cmp r7, #0x0F
    bne _0804D5D8
    movs r7, #0x0B
_0804D5D8:
    cmp r7, #0x10
    bne _0804D5DE
    movs r7, #0x0A
_0804D5DE:
    bl dmaq_getVBlankDmaQueue
    lsls r1, r7, #0x07
    ldr r2, _0804D604 @ =0x0806F33C
    adds r1, r1, r2
    ldr r2, _0804D608 @ =0x06000E00
    ldr r3, _0804D60C @ =0x80000040
    bl dmaq_enqueue
    b _0804D61A
    .byte 0x00, 0x00
_0804D5F4: .4byte 0x00000C6C
_0804D5F8: .4byte 0x0000100B
_0804D5FC: .4byte 0x00000FFF
_0804D600: .4byte 0x080EE65C
_0804D604: .4byte 0x0806F33C
_0804D608: .4byte 0x06000E00
_0804D60C: .4byte 0x80000040
_0804D610:
    ldr r0, _0804D638 @ =0x00000C6C
    add r0, r8
    ldrh r0, [r0, #0x00]
    bl sub_804CD98
_0804D61A:
    ldr r0, _0804D638 @ =0x00000C6C
    add r0, r8
    ldrh r1, [r0, #0x00]
    ldr r0, _0804D63C @ =0x0000100B
    cmp r1, r0
    bne _0804D644
    ldr r0, _0804D640 @ =0x00000C6A
    add r0, r8
    ldrh r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0804D644
    movs r0, #0x82
    bl m4aSongNumStart
    b _0804D700
_0804D638: .4byte 0x00000C6C
_0804D63C: .4byte 0x0000100B
_0804D640: .4byte 0x00000C6A
_0804D644:
    ldr r0, _0804D658 @ =0x00000C6A
    add r0, r8
    ldrh r0, [r0, #0x00]
    cmp r0, #0x02
    bne _0804D700
    movs r0, #0x83
    bl m4aSongNumStart
    b _0804D700
    .byte 0x00, 0x00
_0804D658: .4byte 0x00000C6A
_0804D65C:
    movs r7, #0x00
    movs r4, #0x00
    ldr r6, _0804D6B4 @ =0x00000FFF
    ldr r5, _0804D6B8 @ =0x080EE65C
_0804D664:
    adds r4, #0x01
    movs r0, #0x00
    movs r1, #0x0E
    adds r2, r4, #0x0
    bl map_getBufferPtr2d
    adds r2, r0, #0x0
    movs r3, #0x01
_0804D674:
    ldrh r0, [r2, #0x00]
    adds r1, r6, #0x0
    ands r1, r0
    ldrh r0, [r5, #0x00]
    orrs r1, r0
    strh r1, [r2, #0x00]
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bge _0804D674
    cmp r4, #0x01
    ble _0804D664
    movs r0, #0x01
    bl map_setBufferDirty
    cmp r7, #0x0F
    bne _0804D698
    movs r7, #0x0B
_0804D698:
    cmp r7, #0x10
    bne _0804D69E
    movs r7, #0x0A
_0804D69E:
    bl dmaq_getVBlankDmaQueue
    lsls r1, r7, #0x07
    ldr r2, _0804D6BC @ =0x0806F33C
    adds r1, r1, r2
    ldr r2, _0804D6C0 @ =0x06000E00
    ldr r3, _0804D6C4 @ =0x80000040
    bl dmaq_enqueue
    b _0804D700
    .byte 0x00, 0x00
_0804D6B4: .4byte 0x00000FFF
_0804D6B8: .4byte 0x080EE65C
_0804D6BC: .4byte 0x0806F33C
_0804D6C0: .4byte 0x06000E00
_0804D6C4: .4byte 0x80000040
_0804D6C8:
    cmp r2, #0x40
    bls _0804D6F6
    movs r1, #0xC9
    lsls r1, r1, #0x04
    adds r0, r3, r1
    ldrh r1, [r0, #0x00]
    ldr r0, _0804D70C @ =0x00001008
    cmp r1, r0
    beq _0804D6F6
    adds r0, #0x07
    cmp r1, r0
    beq _0804D6F6
    subs r0, #0x04
    cmp r1, r0
    beq _0804D6F6
    ldr r1, _0804D710 @ =0x00000C8E
    adds r0, r3, r1
    ldrh r0, [r0, #0x00]
    cmp r0, #0x02
    beq _0804D6F6
    movs r0, #0x68
    bl m4aSongNumStart
_0804D6F6:
    ldr r0, _0804D714 @ =0x00000C6A
    add r0, r8
    ldrh r0, [r0, #0x00]
    bl sub_804CD98
_0804D700:
    ldr r1, _0804D718 @ =0x00000C6E
    add r1, r8
    ldrh r0, [r1, #0x00]
    subs r0, #0x01
    strh r0, [r1, #0x00]
    b _0804D72E
_0804D70C: .4byte 0x00001008
_0804D710: .4byte 0x00000C8E
_0804D714: .4byte 0x00000C6A
_0804D718: .4byte 0x00000C6E
_0804D71C:
    ldr r0, _0804D738 @ =0x00000C8E
    adds r1, r3, r0
    ldrh r0, [r1, #0x00]
    cmp r0, #0x02
    bne _0804D728
    strh r2, [r1, #0x00]
_0804D728:
    ldrh r0, [r1, #0x00]
    bl sub_804CD98
_0804D72E:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0804D738: .4byte 0x00000C8E
    thumb_func_start sub_804D73C
sub_804D73C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x010
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    str r1, [sp, #0x00C]
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    mov r10, r2
    mov r12, sp
    add r0, sp, #0x004
    mov r8, r0
    add r1, sp, #0x008
    mov r9, r1
    ldr r0, _0804D79C @ =0x0000EA5F
    cmp r3, r0
    bhi _0804D7A4
    ldr r0, _0804D7A0 @ =0x0000147A
    muls r0, r3
    lsrs r6, r0, #0x13
    movs r0, #0x64
    muls r0, r6
    subs r7, r3, r0
    cmp r7, #0x63
    bls _0804D77C
    subs r7, #0x64
    adds r6, #0x01
_0804D77C:
    lsls r0, r6, #0x04
    adds r0, r0, r6
    lsls r1, r0, #0x08
    adds r0, r0, r1
    lsls r0, r0, #0x01
    lsrs r2, r0, #0x13
    lsls r0, r2, #0x04
    subs r0, r0, r2
    lsls r0, r0, #0x02
    subs r6, r6, r0
    cmp r6, #0x3B
    bls _0804D7AA
    subs r6, #0x3C
    adds r2, #0x01
    b _0804D7AA
    .byte 0x00, 0x00
_0804D79C: .4byte 0x0000EA5F
_0804D7A0: .4byte 0x0000147A
_0804D7A4:
    movs r2, #0x09
    movs r6, #0x3B
    movs r7, #0x63
_0804D7AA:
    ldr r1, _0804D8EC @ =0x0000CCCD
    adds r0, r2, #0x0
    muls r0, r1
    lsrs r3, r0, #0x13
    lsls r0, r3, #0x02
    adds r0, r0, r3
    lsls r0, r0, #0x01
    subs r4, r2, r0
    movs r5, #0x0F
    ands r3, r5
    lsls r0, r3, #0x04
    ands r4, r5
    adds r2, r0, r4
    adds r0, r6, #0x0
    muls r0, r1
    lsrs r3, r0, #0x13
    lsls r0, r3, #0x02
    adds r0, r0, r3
    lsls r0, r0, #0x01
    subs r4, r6, r0
    ands r3, r5
    lsls r0, r3, #0x04
    ands r4, r5
    adds r6, r0, r4
    adds r0, r7, #0x0
    muls r0, r1
    lsrs r3, r0, #0x13
    lsls r0, r3, #0x02
    adds r0, r0, r3
    lsls r0, r0, #0x01
    subs r4, r7, r0
    ands r3, r5
    lsls r0, r3, #0x04
    ands r4, r5
    adds r7, r0, r4
    mov r0, r12
    str r2, [r0, #0x00]
    mov r1, r8
    str r6, [r1, #0x00]
    mov r6, r9
    str r7, [r6, #0x00]
    movs r0, #0x00
    ldr r1, [sp, #0x00C]
    mov r2, r10
    bl map_getBufferPtr2d
    mov r12, r0
    ldr r1, [sp, #0x000]
    lsls r1, r1, #0x18
    ldr r4, _0804D8F0 @ =0x080EE67E
    lsrs r2, r1, #0x1C
    lsls r0, r2, #0x01
    adds r0, r0, r4
    ldrh r0, [r0, #0x00]
    movs r6, #0xC0
    lsls r6, r6, #0x08
    adds r3, r6, #0x0
    orrs r0, r3
    mov r6, r12
    strh r0, [r6, #0x00]
    lsrs r1, r1, #0x18
    ands r1, r5
    lsls r0, r1, #0x01
    adds r0, r0, r4
    ldrh r0, [r0, #0x00]
    orrs r0, r3
    strh r0, [r6, #0x02]
    adds r6, #0x40
    adds r2, #0x0A
    lsls r2, r2, #0x01
    adds r2, r2, r4
    ldrh r0, [r2, #0x00]
    orrs r0, r3
    strh r0, [r6, #0x00]
    adds r1, #0x0A
    lsls r1, r1, #0x01
    adds r1, r1, r4
    ldrh r0, [r1, #0x00]
    orrs r0, r3
    strh r0, [r6, #0x02]
    ldr r1, [sp, #0x004]
    lsls r1, r1, #0x18
    lsrs r2, r1, #0x1C
    lsls r0, r2, #0x01
    adds r0, r0, r4
    ldrh r0, [r0, #0x00]
    orrs r0, r3
    mov r6, r12
    strh r0, [r6, #0x06]
    lsrs r1, r1, #0x18
    ands r1, r5
    lsls r0, r1, #0x01
    adds r0, r0, r4
    ldrh r0, [r0, #0x00]
    orrs r0, r3
    strh r0, [r6, #0x08]
    adds r6, #0x46
    adds r2, #0x0A
    lsls r2, r2, #0x01
    adds r2, r2, r4
    ldrh r0, [r2, #0x00]
    orrs r0, r3
    strh r0, [r6, #0x00]
    adds r6, #0x02
    adds r1, #0x0A
    lsls r1, r1, #0x01
    adds r1, r1, r4
    ldrh r0, [r1, #0x00]
    orrs r0, r3
    strh r0, [r6, #0x00]
    ldr r1, [sp, #0x008]
    lsls r1, r1, #0x18
    lsrs r2, r1, #0x1C
    lsls r0, r2, #0x01
    adds r0, r0, r4
    ldrh r0, [r0, #0x00]
    orrs r0, r3
    mov r6, r12
    strh r0, [r6, #0x0C]
    lsrs r1, r1, #0x18
    ands r1, r5
    lsls r0, r1, #0x01
    adds r0, r0, r4
    ldrh r0, [r0, #0x00]
    orrs r0, r3
    strh r0, [r6, #0x0E]
    mov r5, r12
    adds r5, #0x4C
    adds r2, #0x0A
    lsls r2, r2, #0x01
    adds r2, r2, r4
    ldrh r0, [r2, #0x00]
    orrs r0, r3
    strh r0, [r5, #0x00]
    adds r5, #0x02
    adds r1, #0x0A
    lsls r1, r1, #0x01
    adds r1, r1, r4
    ldrh r0, [r1, #0x00]
    orrs r0, r3
    strh r0, [r5, #0x00]
    ldr r0, _0804D8F4 @ =0x0000C05A
    strh r0, [r6, #0x04]
    subs r0, #0x03
    strh r0, [r6, #0x0A]
    movs r1, #0x00
    strh r1, [r6, #0x00]
    mov r0, r12
    adds r0, #0x40
    strh r1, [r0, #0x00]
    movs r0, #0x01
    bl map_setBufferDirty
    add sp, #0x010
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0804D8EC: .4byte 0x0000CCCD
_0804D8F0: .4byte 0x080EE67E
_0804D8F4: .4byte 0x0000C05A
    thumb_func_start sub_804D8F8
sub_804D8F8:
    ldr r2, _0804D93C @ =0x03005C80
    ldrb r1, [r2, #0x0C]
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _0804D924
    ldr r1, _0804D940 @ =0x080EE6A6
    ldrb r0, [r2, #0x04]
    adds r0, r0, r1
    ldrb r1, [r0, #0x00]
    ldr r0, [r2, #0x00]
    adds r0, r0, r1
    str r0, [r2, #0x00]
    ldrb r0, [r2, #0x04]
    adds r0, #0x01
    strb r0, [r2, #0x04]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x3C
    bne _0804D924
    movs r0, #0x00
    strb r0, [r2, #0x04]
_0804D924:
    adds r3, r2, #0x0
    ldrb r1, [r3, #0x0C]
    movs r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    beq _0804D94A
    ldr r0, [r3, #0x00]
    ldr r1, _0804D944 @ =0x0000EA5F
    cmp r0, r1
    bhi _0804D948
    strh r0, [r3, #0x06]
    b _0804D94A
_0804D93C: .4byte 0x03005C80
_0804D940: .4byte 0x080EE6A6
_0804D944: .4byte 0x0000EA5F
_0804D948:
    strh r1, [r2, #0x06]
_0804D94A:
    bx lr
    thumb_func_start sub_804D94C
sub_804D94C:
    push {r4, r5, lr}
    adds r3, r0, #0x0
    ldr r4, _0804D9B0 @ =0x03005C80
    ldrb r1, [r4, #0x08]
    cmp r1, #0x00
    beq _0804DA3C
    movs r0, #0x07
    ands r0, r1
    cmp r0, #0x00
    bne _0804D9F0
    ldrb r1, [r4, #0x0C]
    movs r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0804D9B8
    movs r0, #0xF7
    ands r0, r1
    strb r0, [r4, #0x0C]
    ldrh r0, [r4, #0x0A]
    movs r1, #0x16
    movs r2, #0x00
    bl sub_804D73C
    movs r0, #0x00
    movs r1, #0x12
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r3, r0, #0x0
    ldr r1, _0804D9B4 @ =0x080EE6E2
    ldrh r0, [r1, #0x00]
    strh r0, [r3, #0x00]
    ldrh r0, [r1, #0x02]
    strh r0, [r3, #0x02]
    ldrh r0, [r1, #0x04]
    strh r0, [r3, #0x04]
    adds r2, r3, #0x0
    adds r2, #0x40
    ldrh r0, [r1, #0x06]
    strh r0, [r2, #0x00]
    adds r2, #0x02
    ldrh r0, [r1, #0x08]
    strh r0, [r2, #0x00]
    adds r2, #0x02
    ldrh r0, [r1, #0x0A]
    strh r0, [r2, #0x00]
    movs r0, #0x01
    bl map_setBufferDirty
    b _0804D9F0
_0804D9B0: .4byte 0x03005C80
_0804D9B4: .4byte 0x080EE6E2
_0804D9B8:
    movs r0, #0x00
    movs r1, #0x16
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r5, r0, #0x0
    ldrb r0, [r4, #0x0C]
    movs r1, #0x08
    orrs r0, r1
    strb r0, [r4, #0x0C]
    movs r0, #0x00
    movs r3, #0x00
_0804D9D0:
    adds r2, r0, #0x1
    movs r1, #0x07
    lsls r0, r0, #0x06
    adds r0, r0, r5
    adds r0, #0x0E
_0804D9DA:
    strh r3, [r0, #0x00]
    subs r0, #0x02
    subs r1, #0x01
    cmp r1, #0x00
    bge _0804D9DA
    adds r0, r2, #0x0
    cmp r0, #0x01
    ble _0804D9D0
    movs r0, #0x01
    bl map_setBufferDirty
_0804D9F0:
    ldr r1, _0804DA34 @ =0x03005C80
    ldrb r0, [r1, #0x08]
    subs r0, #0x01
    strb r0, [r1, #0x08]
    lsls r0, r0, #0x18
    cmp r0, #0x00
    bne _0804DA78
    movs r0, #0x00
    movs r1, #0x12
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r3, r0, #0x0
    ldr r1, _0804DA38 @ =0x080EE6EE
    ldrh r0, [r1, #0x00]
    strh r0, [r3, #0x00]
    ldrh r0, [r1, #0x02]
    strh r0, [r3, #0x02]
    ldrh r0, [r1, #0x04]
    strh r0, [r3, #0x04]
    adds r2, r3, #0x0
    adds r2, #0x40
    ldrh r0, [r1, #0x06]
    strh r0, [r2, #0x00]
    adds r2, #0x02
    ldrh r0, [r1, #0x08]
    strh r0, [r2, #0x00]
    adds r2, #0x02
    ldrh r0, [r1, #0x0A]
    strh r0, [r2, #0x00]
    movs r0, #0x01
    bl map_setBufferDirty
    b _0804DA78
_0804DA34: .4byte 0x03005C80
_0804DA38: .4byte 0x080EE6EE
_0804DA3C:
    ldrb r2, [r4, #0x0C]
    movs r0, #0x10
    ands r0, r2
    cmp r0, #0x00
    bne _0804DA78
    ldr r1, _0804DA64 @ =0x00000814
    adds r0, r3, r1
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0804DA68
    ldrh r0, [r4, #0x06]
    movs r1, #0x16
    movs r2, #0x00
    bl sub_804D73C
    b _0804DA78
    .byte 0x00, 0x00
_0804DA64: .4byte 0x00000814
_0804DA68:
    movs r0, #0x10
    orrs r0, r2
    strb r0, [r4, #0x0C]
    ldrh r0, [r4, #0x06]
    movs r1, #0x16
    movs r2, #0x00
    bl sub_804D73C
_0804DA78:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_804DA80
sub_804DA80:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    add sp, #-0x004
    adds r6, r0, #0x0
    ldr r1, _0804DB40 @ =0x00000814
    adds r0, r6, r1
    ldr r0, [r0, #0x00]
    mov r8, r0
    movs r0, #0xBC
    lsls r0, r0, #0x01
    add r0, r8
    ldrh r3, [r0, #0x00]
    ldr r2, _0804DB44 @ =0x00000C88
    adds r0, r6, r2
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    blt _0804DAE6
    subs r1, #0x3A
    adds r0, r6, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    beq _0804DAC4
    movs r1, #0x00
    ldr r0, _0804DB48 @ =0x03002C60
    ldrh r0, [r0, #0x12]
    cmp r0, #0x00
    bne _0804DABE
    movs r1, #0x01
_0804DABE:
    cmp r1, #0x00
    bne _0804DAC4
    b _0804DBE2
_0804DAC4:
    ldr r2, _0804DB4C @ =0x000007DA
    adds r0, r6, r2
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x03
    ands r0, r1
    cmp r0, #0x00
    beq _0804DAE6
    movs r1, #0x00
    ldr r0, _0804DB48 @ =0x03002C60
    ldrh r0, [r0, #0x0C]
    cmp r0, #0x00
    bne _0804DAE0
    movs r1, #0x01
_0804DAE0:
    cmp r1, #0x00
    bne _0804DAE6
    b _0804DBE2
_0804DAE6:
    ldr r0, _0804DB50 @ =0x0000CCCD
    adds r5, r3, #0x0
    muls r5, r0
    cmp r5, #0x00
    bge _0804DAF4
    ldr r0, _0804DB54 @ =0x0007FFFF
    adds r5, r5, r0
_0804DAF4:
    asrs r5, r5, #0x13
    movs r7, #0x0F
    ands r5, r7
    lsls r4, r5, #0x02
    adds r4, r4, r5
    lsls r4, r4, #0x01
    subs r4, r3, r4
    ands r4, r7
    movs r0, #0x00
    movs r1, #0x00
    movs r2, #0x01
    str r3, [sp, #0x000]
    bl map_getBufferPtr2d
    ldr r2, _0804DB58 @ =0x0000C020
    adds r1, r2, #0x0
    strh r1, [r0, #0x00]
    adds r5, #0x10
    movs r2, #0xB0
    lsls r2, r2, #0x08
    adds r1, r2, #0x0
    orrs r5, r1
    strh r5, [r0, #0x02]
    adds r4, #0x10
    orrs r4, r1
    strh r4, [r0, #0x04]
    ldr r3, [sp, #0x000]
    cmp r3, #0x01
    bgt _0804DB3A
    mov r1, r8
    ldr r0, [r1, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _0804DB60
_0804DB3A:
    ldr r4, _0804DB5C @ =0x08064CA4
    b _0804DBA8
    .byte 0x00, 0x00
_0804DB40: .4byte 0x00000814
_0804DB44: .4byte 0x00000C88
_0804DB48: .4byte 0x03002C60
_0804DB4C: .4byte 0x000007DA
_0804DB50: .4byte 0x0000CCCD
_0804DB54: .4byte 0x0007FFFF
_0804DB58: .4byte 0x0000C020
_0804DB5C: .4byte 0x08064CA4
_0804DB60:
    ldr r0, _0804DB88 @ =0x03002E20
    ldr r4, [r0, #0x10]
    ldr r1, _0804DB8C @ =0x000007D4
    adds r0, r6, r1
    ldrb r1, [r0, #0x00]
    adds r0, r7, #0x0
    ands r0, r1
    cmp r0, #0x03
    bne _0804DB9E
    cmp r3, #0x00
    bgt _0804DB90
    movs r0, #0x1F
    ands r0, r4
    cmp r0, #0x00
    bne _0804DB9E
    movs r0, #0xC2
    bl m4aSongNumStart
    b _0804DB9E
    .byte 0x00, 0x00
_0804DB88: .4byte 0x03002E20
_0804DB8C: .4byte 0x000007D4
_0804DB90:
    movs r0, #0x3F
    ands r0, r4
    cmp r0, #0x00
    bne _0804DB9E
    movs r0, #0xC2
    bl m4aSongNumStart
_0804DB9E:
    movs r0, #0x08
    ands r4, r0
    cmp r4, #0x00
    beq _0804DBC4
    ldr r4, _0804DBC0 @ =0x08064C94
_0804DBA8:
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r2, #0xB1
    lsls r2, r2, #0x01
    adds r1, r1, r2
    adds r0, r4, #0x0
    movs r2, #0x03
    bl CpuSet
    b _0804DBDC
_0804DBC0: .4byte 0x08064C94
_0804DBC4:
    ldr r4, _0804DBF0 @ =0x08064C9C
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r0, #0xB1
    lsls r0, r0, #0x01
    adds r1, r1, r0
    adds r0, r4, #0x0
    movs r2, #0x03
    bl CpuSet
_0804DBDC:
    movs r0, #0x01
    bl pltt_setDirtyFlag
_0804DBE2:
    add sp, #0x004
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804DBF0: .4byte 0x08064C9C
    thumb_func_start sub_804DBF4
sub_804DBF4:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x004
    adds r2, r0, #0x0
    mov r9, r1
    ldr r1, _0804DC24 @ =0x000007DA
    adds r0, r2, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x04
    ands r0, r1
    cmp r0, #0x00
    beq _0804DC2C
    mov r3, r9
    lsls r1, r3, #0x02
    ldr r7, _0804DC28 @ =0x000007F4
    adds r0, r2, r7
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    b _0804DC38
    .byte 0x00, 0x00
_0804DC24: .4byte 0x000007DA
_0804DC28: .4byte 0x000007F4
_0804DC2C:
    mov r0, r9
    lsls r1, r0, #0x18
    lsrs r1, r1, #0x18
    adds r0, r2, #0x0
    bl sub_804AED4
_0804DC38:
    adds r0, #0x4C
    ldrb r0, [r0, #0x00]
    movs r3, #0x07
    ands r3, r0
    ldr r0, _0804DCA4 @ =0x030023A8
    add r0, r9
    ldrb r0, [r0, #0x00]
    cmp r0, r3
    beq _0804DC94
    ldr r0, _0804DCA8 @ =0x080EE6FA
    adds r0, r3, r0
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x02
    ldr r1, _0804DCAC @ =0x0000D080
    adds r5, r0, r1
    movs r1, #0x00
    mov r2, r9
    lsls r0, r2, #0x01
    add r0, r9
    mov r8, r0
_0804DC60:
    movs r4, #0x00
    adds r6, r1, #0x3
    adds r1, #0x01
    mov r10, r1
_0804DC68:
    adds r4, #0x01
    movs r0, #0x00
    adds r1, r4, #0x0
    mov r7, r8
    adds r2, r7, r6
    str r3, [sp, #0x000]
    bl map_getBufferPtr2d
    strh r5, [r0, #0x00]
    adds r5, #0x01
    ldr r3, [sp, #0x000]
    cmp r4, #0x01
    ble _0804DC68
    mov r1, r10
    cmp r1, #0x01
    ble _0804DC60
    ldr r0, _0804DCA4 @ =0x030023A8
    add r0, r9
    strb r3, [r0, #0x00]
    movs r0, #0x01
    bl map_setBufferDirty
_0804DC94:
    add sp, #0x004
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0804DCA4: .4byte 0x030023A8
_0804DCA8: .4byte 0x080EE6FA
_0804DCAC: .4byte 0x0000D080
    thumb_func_start sub_804DCB0
sub_804DCB0:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x014
    mov r8, r0
    movs r0, #0xFE
    lsls r0, r0, #0x03
    add r0, r8
    ldrb r0, [r0, #0x00]
    str r0, [sp, #0x00C]
    cmp r0, #0x04
    ble _0804DCD0
    movs r0, #0x04
    str r0, [sp, #0x00C]
_0804DCD0:
    movs r4, #0x00
    ldr r1, [sp, #0x00C]
    cmp r4, r1
    bge _0804DD84
    mov r0, sp
    adds r0, #0x08
    str r0, [sp, #0x010]
    movs r1, #0x80
    lsls r1, r1, #0x01
    mov r9, r1
_0804DCE4:
    lsls r1, r4, #0x02
    ldr r0, _0804DD4C @ =0x000007F4
    add r0, r8
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    ldr r1, _0804DD50 @ =0x0000017D
    adds r0, r0, r1
    ldrb r5, [r0, #0x00]
    mov r0, r8
    adds r1, r4, #0x0
    bl sub_804DBF4
    ldr r0, _0804DD54 @ =0x000007D4
    add r0, r8
    ldrb r1, [r0, #0x00]
    movs r0, #0x40
    ands r0, r1
    adds r1, r4, #0x1
    mov r10, r1
    cmp r0, #0x00
    bne _0804DD7C
    cmp r5, #0x00
    beq _0804DD5C
    cmp r5, #0x00
    beq _0804DD7C
    lsls r0, r4, #0x01
    adds r0, r0, r4
    lsls r0, r0, #0x13
    movs r1, #0xC0
    lsls r1, r1, #0x0D
    adds r7, r0, r1
    adds r6, r1, #0x0
    adds r4, r5, #0x0
_0804DD26:
    lsrs r0, r6, #0x10
    orrs r0, r7
    str r0, [sp, #0x008]
    movs r0, #0x00
    str r0, [sp, #0x000]
    str r0, [sp, #0x004]
    ldr r0, _0804DD58 @ =0x0807B9A8
    add r1, sp, #0x008
    mov r2, r9
    mov r3, r9
    bl oam_renderCellData
    movs r0, #0xA0
    lsls r0, r0, #0x0B
    adds r6, r6, r0
    subs r4, #0x01
    cmp r4, #0x00
    bne _0804DD26
    b _0804DD7C
_0804DD4C: .4byte 0x000007F4
_0804DD50: .4byte 0x0000017D
_0804DD54: .4byte 0x000007D4
_0804DD58: .4byte 0x0807B9A8
_0804DD5C:
    movs r0, #0x08
    ldr r1, [sp, #0x010]
    strh r0, [r1, #0x00]
    lsls r0, r4, #0x01
    adds r0, r0, r4
    lsls r0, r0, #0x03
    adds r0, #0x18
    strh r0, [r1, #0x02]
    str r5, [sp, #0x000]
    str r5, [sp, #0x004]
    ldr r0, _0804DD98 @ =0x0807B9B0
    add r1, sp, #0x008
    mov r2, r9
    mov r3, r9
    bl oam_renderCellData
_0804DD7C:
    mov r4, r10
    ldr r0, [sp, #0x00C]
    cmp r4, r0
    blt _0804DCE4
_0804DD84:
    bl sub_804DF08
    add sp, #0x014
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0804DD98: .4byte 0x0807B9B0
    thumb_func_start sub_804DD9C
sub_804DD9C:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r5, r0, #0x0
    movs r2, #0x00
    movs r1, #0xFE
    lsls r1, r1, #0x03
    adds r0, r5, r1
    ldr r7, _0804DE40 @ =0x030023B0
    ldr r1, _0804DE44 @ =0x030023B4
    mov r8, r1
    ldrb r1, [r0, #0x00]
    cmp r2, r1
    bge _0804DDCE
    ldr r6, _0804DE48 @ =0x030023A8
    movs r4, #0xFF
    adds r3, r0, #0x0
_0804DDBE:
    adds r1, r2, r6
    ldrb r0, [r1, #0x00]
    orrs r0, r4
    strb r0, [r1, #0x00]
    adds r2, #0x01
    ldrb r0, [r3, #0x00]
    cmp r2, r0
    blt _0804DDBE
_0804DDCE:
    movs r0, #0x00
    str r0, [r7, #0x00]
    mov r1, r8
    str r0, [r1, #0x00]
    ldr r2, _0804DE4C @ =0x000007DA
    adds r0, r5, r2
    ldrh r0, [r0, #0x00]
    movs r1, #0xF0
    lsls r1, r1, #0x04
    ands r1, r0
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    bne _0804DE64
    ldr r1, _0804DE50 @ =0x00000814
    adds r0, r5, r1
    ldr r1, [r0, #0x00]
    adds r2, #0x16
    adds r0, r5, r2
    ldrb r0, [r0, #0x00]
    subs r5, r0, #0x1
    adds r4, r1, #0x0
    adds r4, #0xBA
    ldrh r0, [r4, #0x00]
    lsrs r0, r0, #0x01
    cmp r0, #0x00
    beq _0804DE1C
    bl dmaq_getVBlankDmaQueue
    ldrh r1, [r4, #0x00]
    lsrs r1, r1, #0x01
    subs r1, #0x01
    lsls r1, r1, #0x06
    ldr r2, _0804DE54 @ =0x0806CB8C
    adds r1, r1, r2
    ldr r2, _0804DE58 @ =0x06012640
    ldr r3, _0804DE5C @ =0x80000020
    bl dmaq_enqueue
_0804DE1C:
    ldrh r0, [r4, #0x00]
    lsrs r0, r0, #0x01
    cmp r0, r5
    bge _0804DEE8
    bl dmaq_getVBlankDmaQueue
    ldrh r1, [r4, #0x00]
    lsrs r1, r1, #0x01
    adds r1, #0x01
    lsls r1, r1, #0x06
    ldr r2, _0804DE54 @ =0x0806CB8C
    adds r1, r1, r2
    ldr r2, _0804DE60 @ =0x06012680
    ldr r3, _0804DE5C @ =0x80000020
    bl dmaq_enqueue
    b _0804DEE8
    .byte 0x00, 0x00
_0804DE40: .4byte 0x030023B0
_0804DE44: .4byte 0x030023B4
_0804DE48: .4byte 0x030023A8
_0804DE4C: .4byte 0x000007DA
_0804DE50: .4byte 0x00000814
_0804DE54: .4byte 0x0806CB8C
_0804DE58: .4byte 0x06012640
_0804DE5C: .4byte 0x80000020
_0804DE60: .4byte 0x06012680
_0804DE64:
    movs r0, #0x80
    lsls r0, r0, #0x02
    cmp r1, r0
    bne _0804DE88
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0804DE7C @ =0x0806CE8C
    ldr r2, _0804DE80 @ =0x06012640
    ldr r3, _0804DE84 @ =0x80000040
    bl dmaq_enqueue
    b _0804DEE8
_0804DE7C: .4byte 0x0806CE8C
_0804DE80: .4byte 0x06012640
_0804DE84: .4byte 0x80000040
_0804DE88:
    movs r0, #0x80
    lsls r0, r0, #0x03
    cmp r1, r0
    beq _0804DE98
    movs r0, #0x80
    lsls r0, r0, #0x04
    cmp r1, r0
    bne _0804DEE8
_0804DE98:
    ldr r1, _0804DEF4 @ =0x00000814
    adds r0, r5, r1
    ldr r0, [r0, #0x00]
    mov r8, r0
    movs r4, #0x00
    movs r7, #0x00
    movs r2, #0xFE
    lsls r2, r2, #0x03
    adds r0, r5, r2
    ldrb r0, [r0, #0x00]
    cmp r4, r0
    bge _0804DEE8
    ldr r6, _0804DEF8 @ =0x06012640
_0804DEB2:
    lsls r0, r4, #0x02
    ldr r2, _0804DEFC @ =0x000007F4
    adds r1, r5, r2
    adds r1, r1, r0
    ldr r0, [r1, #0x00]
    cmp r0, r8
    beq _0804DEDA
    bl dmaq_getVBlankDmaQueue
    lsls r1, r4, #0x06
    ldr r2, _0804DF00 @ =0x0806CD8C
    adds r1, r1, r2
    adds r2, r6, #0x0
    ldr r3, _0804DF04 @ =0x80000020
    bl dmaq_enqueue
    adds r6, #0x40
    adds r7, #0x01
    cmp r7, #0x02
    bgt _0804DEE8
_0804DEDA:
    adds r4, #0x01
    movs r1, #0xFE
    lsls r1, r1, #0x03
    adds r0, r5, r1
    ldrb r0, [r0, #0x00]
    cmp r4, r0
    blt _0804DEB2
_0804DEE8:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804DEF4: .4byte 0x00000814
_0804DEF8: .4byte 0x06012640
_0804DEFC: .4byte 0x000007F4
_0804DF00: .4byte 0x0806CD8C
_0804DF04: .4byte 0x80000020
    thumb_func_start sub_804DF08
sub_804DF08:
    push {r4, r5, r6, r7, lr}
    ldr r0, _0804DF30 @ =0x03002E20
    movs r1, #0x24
    adds r1, r1, r0
    mov r12, r1
    ldr r2, _0804DF34 @ =0x00000838
    adds r1, r0, r2
    ldr r2, [r1, #0x00]
    ldr r1, _0804DF38 @ =0x000007FE
    adds r0, r0, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x04
    ands r0, r1
    cmp r0, #0x00
    beq _0804DF3C
    adds r0, r2, #0x0
    adds r0, #0xEC
    ldrb r1, [r0, #0x00]
    b _0804DF44
_0804DF30: .4byte 0x03002E20
_0804DF34: .4byte 0x00000838
_0804DF38: .4byte 0x000007FE
_0804DF3C:
    adds r0, r2, #0x0
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r1, r0, #0x01
_0804DF44:
    movs r5, #0x00
    movs r4, #0x00
    ldr r2, _0804DF74 @ =0x030023B4
    ldr r0, [r2, #0x00]
    ldr r7, _0804DF78 @ =0x030023B0
    cmp r1, r0
    beq _0804E004
    str r1, [r2, #0x00]
    movs r0, #0x06
    str r0, [r7, #0x00]
    movs r0, #0xFE
    lsls r0, r0, #0x03
    add r0, r12
    ldrb r0, [r0, #0x00]
    cmp r0, #0x02
    beq _0804DF7C
    cmp r0, #0x03
    beq _0804DF9C
    adds r0, r1, #0x0
    cmp r1, #0x01
    beq _0804DFE8
    cmp r1, #0x01
    bgt _0804DFD6
    b _0804DFD0
_0804DF74: .4byte 0x030023B4
_0804DF78: .4byte 0x030023B0
_0804DF7C:
    cmp r1, #0x00
    beq _0804DF8C
    cmp r1, #0x01
    beq _0804DF94
    ldr r4, _0804DF88 @ =0x080EE7EC
    b _0804E002
_0804DF88: .4byte 0x080EE7EC
_0804DF8C:
    ldr r4, _0804DF90 @ =0x080EE828
    b _0804E002
_0804DF90: .4byte 0x080EE828
_0804DF94:
    ldr r4, _0804DF98 @ =0x080EE864
    b _0804E002
_0804DF98: .4byte 0x080EE864
_0804DF9C:
    cmp r1, #0x01
    beq _0804DFB8
    cmp r1, #0x01
    bgt _0804DFAA
    cmp r1, #0x00
    beq _0804DFB0
    b _0804DFC8
_0804DFAA:
    cmp r1, #0x02
    beq _0804DFC0
    b _0804DFC8
_0804DFB0:
    ldr r4, _0804DFB4 @ =0x080EE96C
    b _0804E002
_0804DFB4: .4byte 0x080EE96C
_0804DFB8:
    ldr r4, _0804DFBC @ =0x080EE9C0
    b _0804E002
_0804DFBC: .4byte 0x080EE9C0
_0804DFC0:
    ldr r4, _0804DFC4 @ =0x080EEA14
    b _0804E002
_0804DFC4: .4byte 0x080EEA14
_0804DFC8:
    ldr r4, _0804DFCC @ =0x080EE918
    b _0804E002
_0804DFCC: .4byte 0x080EE918
_0804DFD0:
    cmp r0, #0x00
    beq _0804DFE0
    b _0804E000
_0804DFD6:
    cmp r1, #0x02
    beq _0804DFF0
    cmp r1, #0x03
    beq _0804DFF8
    b _0804E000
_0804DFE0:
    ldr r4, _0804DFE4 @ =0x080EEBD0
    b _0804E002
_0804DFE4: .4byte 0x080EEBD0
_0804DFE8:
    ldr r4, _0804DFEC @ =0x080EEC3C
    b _0804E002
_0804DFEC: .4byte 0x080EEC3C
_0804DFF0:
    ldr r4, _0804DFF4 @ =0x080EECA8
    b _0804E002
_0804DFF4: .4byte 0x080EECA8
_0804DFF8:
    ldr r4, _0804DFFC @ =0x080EED14
    b _0804E002
_0804DFFC: .4byte 0x080EED14
_0804E000:
    ldr r4, _0804E028 @ =0x080EEB64
_0804E002:
    movs r5, #0x01
_0804E004:
    ldr r3, _0804E02C @ =0x03005C80
    ldr r0, [r3, #0x00]
    cmp r0, #0x00
    bne _0804E00E
    str r0, [r7, #0x00]
_0804E00E:
    adds r6, r7, #0x0
    ldr r2, [r6, #0x00]
    cmp r2, #0x00
    ble _0804E030
    ldrb r1, [r3, #0x0C]
    movs r0, #0x04
    ands r0, r1
    cmp r0, #0x00
    beq _0804E0DC
    subs r0, r2, #0x1
    str r0, [r6, #0x00]
    b _0804E0DC
    .byte 0x00, 0x00
_0804E028: .4byte 0x080EEB64
_0804E02C: .4byte 0x03005C80
_0804E030:
    cmp r2, #0x00
    bne _0804E0DC
    subs r0, r2, #0x1
    str r0, [r7, #0x00]
    movs r0, #0xFE
    lsls r0, r0, #0x03
    add r0, r12
    ldrb r0, [r0, #0x00]
    cmp r0, #0x02
    beq _0804E052
    cmp r0, #0x03
    beq _0804E074
    cmp r1, #0x01
    beq _0804E0C0
    cmp r1, #0x01
    bgt _0804E0AE
    b _0804E0A8
_0804E052:
    cmp r1, #0x00
    beq _0804E064
    cmp r1, #0x01
    beq _0804E06C
    ldr r4, _0804E060 @ =0x080EE7EC
    b _0804E0DA
    .byte 0x00, 0x00
_0804E060: .4byte 0x080EE7EC
_0804E064:
    ldr r4, _0804E068 @ =0x080EE8A0
    b _0804E0DA
_0804E068: .4byte 0x080EE8A0
_0804E06C:
    ldr r4, _0804E070 @ =0x080EE8DC
    b _0804E0DA
_0804E070: .4byte 0x080EE8DC
_0804E074:
    cmp r1, #0x01
    beq _0804E090
    cmp r1, #0x01
    bgt _0804E082
    cmp r1, #0x00
    beq _0804E088
    b _0804E0A0
_0804E082:
    cmp r1, #0x02
    beq _0804E098
    b _0804E0A0
_0804E088:
    ldr r4, _0804E08C @ =0x080EEA68
    b _0804E0DA
_0804E08C: .4byte 0x080EEA68
_0804E090:
    ldr r4, _0804E094 @ =0x080EEABC
    b _0804E0DA
_0804E094: .4byte 0x080EEABC
_0804E098:
    ldr r4, _0804E09C @ =0x080EEB10
    b _0804E0DA
_0804E09C: .4byte 0x080EEB10
_0804E0A0:
    ldr r4, _0804E0A4 @ =0x080EE918
    b _0804E0DA
_0804E0A4: .4byte 0x080EE918
_0804E0A8:
    cmp r1, #0x00
    beq _0804E0B8
    b _0804E0D8
_0804E0AE:
    cmp r1, #0x02
    beq _0804E0C8
    cmp r1, #0x03
    beq _0804E0D0
    b _0804E0D8
_0804E0B8:
    ldr r4, _0804E0BC @ =0x080EED80
    b _0804E0DA
_0804E0BC: .4byte 0x080EED80
_0804E0C0:
    ldr r4, _0804E0C4 @ =0x080EEDEC
    b _0804E0DA
_0804E0C4: .4byte 0x080EEDEC
_0804E0C8:
    ldr r4, _0804E0CC @ =0x080EEE58
    b _0804E0DA
_0804E0CC: .4byte 0x080EEE58
_0804E0D0:
    ldr r4, _0804E0D4 @ =0x080EEEC4
    b _0804E0DA
_0804E0D4: .4byte 0x080EEEC4
_0804E0D8:
    ldr r4, _0804E134 @ =0x080EEB64
_0804E0DA:
    movs r5, #0x01
_0804E0DC:
    cmp r5, #0x00
    beq _0804E0F8
    movs r0, #0x00
    movs r1, #0x00
    movs r2, #0x02
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    movs r0, #0x01
    bl map_setBufferDirty
_0804E0F8:
    ldr r0, _0804E138 @ =0x03002E20
    ldr r1, [r0, #0x10]
    movs r0, #0x03
    ands r0, r1
    cmp r0, #0x00
    bne _0804E12C
    movs r0, #0x04
    ands r1, r0
    ldr r4, _0804E13C @ =0x08064C90
    cmp r1, #0x00
    beq _0804E110
    ldr r4, _0804E140 @ =0x08064C8C
_0804E110:
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r2, #0xB9
    lsls r2, r2, #0x01
    adds r1, r1, r2
    adds r0, r4, #0x0
    movs r2, #0x02
    bl CpuSet
    movs r0, #0x01
    bl pltt_setDirtyFlag
_0804E12C:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804E134: .4byte 0x080EEB64
_0804E138: .4byte 0x03002E20
_0804E13C: .4byte 0x08064C90
_0804E140: .4byte 0x08064C8C
    thumb_func_start sub_804E144
sub_804E144:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    ldr r1, _0804E2B4 @ =0x00000814
    adds r0, r4, r1
    ldr r5, [r0, #0x00]
    adds r3, r5, #0x0
    adds r3, #0xBA
    ldrh r0, [r3, #0x00]
    lsrs r7, r0, #0x01
    subs r1, #0x3A
    adds r0, r4, r1
    ldrh r0, [r0, #0x00]
    movs r1, #0xF0
    lsls r1, r1, #0x04
    ands r1, r0
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    beq _0804E174
    movs r0, #0x80
    lsls r0, r0, #0x03
    cmp r1, r0
    beq _0804E174
    b _0804E386
_0804E174:
    ldr r2, _0804E2B8 @ =0x030023C0
    movs r1, #0x00
    ldsh r0, [r2, r1]
    cmp r0, r7
    beq _0804E1D6
    ldr r0, _0804E2BC @ =0x000007EC
    adds r1, r4, r0
    movs r0, #0x01
    str r0, [r1, #0x00]
    ldrh r0, [r3, #0x00]
    lsrs r1, r0, #0x01
    movs r3, #0x00
    ldsh r0, [r2, r3]
    cmp r1, r0
    ble _0804E1D6
    subs r1, #0x01
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    adds r0, r4, #0x0
    bl sub_804AED4
    adds r2, r0, #0x0
    ldr r1, _0804E2B4 @ =0x00000814
    adds r0, r4, r1
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0804E1D6
    ldr r3, _0804E2C0 @ =0x080ECC68
    adds r0, r2, #0x0
    adds r0, #0x4C
    ldrb r0, [r0, #0x00]
    movs r1, #0x07
    ands r1, r0
    adds r0, r2, #0x0
    adds r0, #0x58
    ldrh r2, [r0, #0x00]
    movs r0, #0x10
    ands r0, r2
    lsls r1, r1, #0x02
    cmp r0, #0x00
    bne _0804E1CE
    adds r1, #0x02
_0804E1CE:
    adds r0, r1, r3
    ldrh r0, [r0, #0x00]
    bl m4aSongNumStart
_0804E1D6:
    ldr r1, _0804E2B8 @ =0x030023C0
    adds r2, r5, #0x0
    adds r2, #0xBA
    ldrh r0, [r2, #0x00]
    lsrs r0, r0, #0x01
    strh r0, [r1, #0x00]
    ldr r3, _0804E2BC @ =0x000007EC
    adds r1, r4, r3
    ldr r0, [r1, #0x00]
    adds r5, r2, #0x0
    cmp r0, #0x00
    beq _0804E268
    movs r0, #0x00
    str r0, [r1, #0x00]
    ldr r1, _0804E2C4 @ =0x000007DA
    adds r0, r4, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0xF0
    lsls r0, r0, #0x04
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x01
    cmp r0, r1
    bne _0804E24E
    adds r3, #0x04
    adds r0, r4, r3
    ldrb r0, [r0, #0x00]
    subs r6, r0, #0x1
    ldrh r0, [r5, #0x00]
    lsrs r0, r0, #0x01
    cmp r0, #0x00
    beq _0804E22E
    bl dmaq_getVBlankDmaQueue
    ldrh r1, [r5, #0x00]
    lsrs r1, r1, #0x01
    subs r1, #0x01
    lsls r1, r1, #0x06
    ldr r2, _0804E2C8 @ =0x0806CB8C
    adds r1, r1, r2
    ldr r2, _0804E2CC @ =0x06012640
    ldr r3, _0804E2D0 @ =0x80000020
    bl dmaq_enqueue
_0804E22E:
    ldrh r0, [r5, #0x00]
    lsrs r0, r0, #0x01
    cmp r0, r6
    bge _0804E24E
    bl dmaq_getVBlankDmaQueue
    ldrh r1, [r5, #0x00]
    lsrs r1, r1, #0x01
    adds r1, #0x01
    lsls r1, r1, #0x06
    ldr r2, _0804E2C8 @ =0x0806CB8C
    adds r1, r1, r2
    ldr r2, _0804E2D4 @ =0x06012680
    ldr r3, _0804E2D0 @ =0x80000020
    bl dmaq_enqueue
_0804E24E:
    ldr r1, _0804E2D8 @ =0x0203EC4C
    movs r0, #0x20
    strh r0, [r1, #0x00]
    bl dmaq_getVBlankDmaQueue
    ldr r2, _0804E2DC @ =0x080EE704
    lsls r1, r7, #0x02
    adds r1, r1, r2
    ldr r1, [r1, #0x00]
    ldr r2, _0804E2E0 @ =0x06001C00
    ldr r3, _0804E2E4 @ =0x800000B0
    bl dmaq_enqueue
_0804E268:
    ldr r2, _0804E2D8 @ =0x0203EC4C
    ldrh r1, [r2, #0x00]
    movs r3, #0x00
    ldsh r0, [r2, r3]
    cmp r0, #0x00
    bgt _0804E276
    b _0804E386
_0804E276:
    subs r1, #0x01
    strh r1, [r2, #0x00]
    lsls r0, r1, #0x10
    cmp r0, #0x00
    ble _0804E2F4
    movs r0, #0x04
    ands r1, r0
    ldr r3, _0804E2E8 @ =0x08064C84
    cmp r1, #0x00
    beq _0804E28C
    subs r3, #0x08
_0804E28C:
    movs r1, #0x00
    ldr r6, _0804E2EC @ =0x030023B8
    ldr r0, _0804E2F0 @ =0x000007D4
    adds r5, r4, r0
    adds r4, r6, #0x0
_0804E296:
    lsls r0, r1, #0x10
    asrs r0, r0, #0x10
    lsls r1, r0, #0x01
    adds r1, r1, r4
    ldrh r2, [r3, #0x00]
    strh r2, [r1, #0x00]
    adds r3, #0x02
    adds r0, #0x01
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x03
    ble _0804E296
    b _0804E344
    .byte 0x00, 0x00
_0804E2B4: .4byte 0x00000814
_0804E2B8: .4byte 0x030023C0
_0804E2BC: .4byte 0x000007EC
_0804E2C0: .4byte 0x080ECC68
_0804E2C4: .4byte 0x000007DA
_0804E2C8: .4byte 0x0806CB8C
_0804E2CC: .4byte 0x06012640
_0804E2D0: .4byte 0x80000020
_0804E2D4: .4byte 0x06012680
_0804E2D8: .4byte 0x0203EC4C
_0804E2DC: .4byte 0x080EE704
_0804E2E0: .4byte 0x06001C00
_0804E2E4: .4byte 0x800000B0
_0804E2E8: .4byte 0x08064C84
_0804E2EC: .4byte 0x030023B8
_0804E2F0: .4byte 0x000007D4
_0804E2F4:
    ldrh r0, [r5, #0x00]
    lsrs r2, r0, #0x01
    movs r1, #0xFE
    lsls r1, r1, #0x03
    adds r0, r4, r1
    ldrb r3, [r0, #0x00]
    adds r1, r2, #0x0
    cmp r3, #0x01
    ble _0804E31A
    subs r0, r3, #0x1
    cmp r1, r0
    bne _0804E30E
    movs r1, #0x07
_0804E30E:
    cmp r3, #0x02
    ble _0804E31A
    subs r0, r3, #0x2
    cmp r2, r0
    bne _0804E31A
    movs r1, #0x05
_0804E31A:
    lsls r1, r1, #0x03
    ldr r0, _0804E38C @ =0x08064C34
    adds r3, r1, r0
    movs r1, #0x00
    ldr r6, _0804E390 @ =0x030023B8
    ldr r0, _0804E394 @ =0x000007D4
    adds r5, r4, r0
    adds r4, r6, #0x0
_0804E32A:
    lsls r0, r1, #0x10
    asrs r0, r0, #0x10
    lsls r1, r0, #0x01
    adds r1, r1, r4
    ldrh r2, [r3, #0x00]
    strh r2, [r1, #0x00]
    adds r3, #0x02
    adds r0, #0x01
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x03
    ble _0804E32A
_0804E344:
    ldrb r1, [r5, #0x00]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0x00
    bne _0804E386
    movs r0, #0x00
    bl pltt_getBuffer
    adds r3, r0, #0x0
    movs r1, #0xC9
    lsls r1, r1, #0x01
    adds r2, r3, r1
    ldrh r0, [r6, #0x00]
    strh r0, [r2, #0x00]
    movs r0, #0xCA
    lsls r0, r0, #0x01
    adds r2, r3, r0
    ldrh r0, [r6, #0x02]
    strh r0, [r2, #0x00]
    adds r1, r6, #0x4
    movs r0, #0xCB
    lsls r0, r0, #0x01
    adds r2, r3, r0
    ldrh r0, [r1, #0x00]
    strh r0, [r2, #0x00]
    movs r0, #0xCC
    lsls r0, r0, #0x01
    adds r2, r3, r0
    ldrh r0, [r1, #0x02]
    strh r0, [r2, #0x00]
    movs r0, #0x01
    bl pltt_setDirtyFlag
_0804E386:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0804E38C: .4byte 0x08064C34
_0804E390: .4byte 0x030023B8
_0804E394: .4byte 0x000007D4
    thumb_func_start sub_804E398
sub_804E398:
    push {r4, r5, r6, lr}
    ldr r4, _0804E41C @ =0x03002E20
    adds r5, r4, #0x0
    adds r5, #0x24
    ldr r1, _0804E420 @ =0x00000838
    adds r0, r4, r1
    ldr r3, [r0, #0x00]
    ldr r1, _0804E424 @ =0x0203EC4E
    ldrh r0, [r1, #0x00]
    subs r0, #0x01
    strh r0, [r1, #0x00]
    lsls r0, r0, #0x10
    ldr r2, _0804E428 @ =0x030023C2
    cmp r0, #0x00
    bge _0804E3C0
    movs r0, #0x07
    strh r0, [r1, #0x00]
    ldrh r0, [r2, #0x00]
    adds r0, #0x01
    strh r0, [r2, #0x00]
_0804E3C0:
    movs r6, #0x00
    ldsh r0, [r2, r6]
    cmp r0, #0x1F
    ble _0804E43C
    adds r0, r3, #0x0
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r3, r0, #0x01
    ldr r1, _0804E42C @ =0x00000814
    adds r0, r4, r1
    ldrb r2, [r0, #0x00]
    adds r1, r3, #0x0
    cmp r2, #0x01
    ble _0804E3F0
    subs r0, r2, #0x1
    cmp r1, r0
    bne _0804E3E4
    movs r1, #0x07
_0804E3E4:
    cmp r2, #0x02
    ble _0804E3F0
    subs r0, r2, #0x2
    cmp r3, r0
    bne _0804E3F0
    movs r1, #0x05
_0804E3F0:
    lsls r1, r1, #0x03
    ldr r0, _0804E430 @ =0x08064C34
    adds r3, r1, r0
    movs r1, #0x00
    ldr r6, _0804E434 @ =0x030023B8
    ldr r0, _0804E438 @ =0x000007D4
    adds r5, r5, r0
    adds r4, r6, #0x0
_0804E400:
    lsls r0, r1, #0x10
    asrs r0, r0, #0x10
    lsls r1, r0, #0x01
    adds r1, r1, r4
    ldrh r2, [r3, #0x00]
    strh r2, [r1, #0x00]
    adds r3, #0x02
    adds r0, #0x01
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x03
    ble _0804E400
    b _0804E470
_0804E41C: .4byte 0x03002E20
_0804E420: .4byte 0x00000838
_0804E424: .4byte 0x0203EC4E
_0804E428: .4byte 0x030023C2
_0804E42C: .4byte 0x00000814
_0804E430: .4byte 0x08064C34
_0804E434: .4byte 0x030023B8
_0804E438: .4byte 0x000007D4
_0804E43C:
    ldrh r1, [r1, #0x00]
    movs r0, #0x04
    ands r0, r1
    ldr r3, _0804E4C0 @ =0x08064C84
    cmp r0, #0x00
    beq _0804E44A
    subs r3, #0x08
_0804E44A:
    movs r1, #0x00
    ldr r6, _0804E4C4 @ =0x030023B8
    movs r0, #0xFF
    lsls r0, r0, #0x03
    adds r5, r4, r0
    adds r4, r6, #0x0
_0804E456:
    lsls r0, r1, #0x10
    asrs r0, r0, #0x10
    lsls r1, r0, #0x01
    adds r1, r1, r4
    ldrh r2, [r3, #0x00]
    strh r2, [r1, #0x00]
    adds r3, #0x02
    adds r0, #0x01
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x03
    ble _0804E456
_0804E470:
    ldrb r1, [r5, #0x00]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0x00
    bne _0804E4B2
    movs r0, #0x00
    bl pltt_getBuffer
    adds r3, r0, #0x0
    movs r1, #0xC9
    lsls r1, r1, #0x01
    adds r2, r3, r1
    ldrh r0, [r6, #0x00]
    strh r0, [r2, #0x00]
    movs r0, #0xCA
    lsls r0, r0, #0x01
    adds r2, r3, r0
    ldrh r0, [r6, #0x02]
    strh r0, [r2, #0x00]
    adds r1, r6, #0x4
    movs r6, #0xCB
    lsls r6, r6, #0x01
    adds r2, r3, r6
    ldrh r0, [r1, #0x00]
    strh r0, [r2, #0x00]
    movs r0, #0xCC
    lsls r0, r0, #0x01
    adds r2, r3, r0
    ldrh r0, [r1, #0x02]
    strh r0, [r2, #0x00]
    movs r0, #0x01
    bl pltt_setDirtyFlag
_0804E4B2:
    ldr r0, _0804E4C8 @ =0x0203EC4E
    movs r1, #0x00
    ldsh r0, [r0, r1]
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0804E4C0: .4byte 0x08064C84
_0804E4C4: .4byte 0x030023B8
_0804E4C8: .4byte 0x0203EC4E
    thumb_func_start sub_804E4CC
sub_804E4CC:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    mov r9, r0
    ldr r0, _0804E594 @ =0x00000814
    add r0, r9
    ldr r7, [r0, #0x00]
    ldr r0, _0804E598 @ =0x030023C4
    ldr r4, [r0, #0x00]
    adds r6, r0, #0x0
    cmp r4, #0x00
    bne _0804E4EA
    b _0804E7D4
_0804E4EA:
    adds r0, r7, #0x0
    adds r0, #0x90
    ldrb r3, [r0, #0x00]
    ldr r1, _0804E59C @ =0x0203EC50
    ldr r2, [r1, #0x00]
    mov r10, r0
    adds r5, r1, #0x0
    cmp r3, r2
    beq _0804E5DE
    str r3, [r5, #0x00]
    ldr r0, [r7, #0x48]
    movs r1, #0x84
    lsls r1, r1, #0x03
    ands r0, r1
    cmp r0, #0x00
    bne _0804E5DE
    ldrb r0, [r4, #0x00]
    cmp r0, #0xFF
    beq _0804E5DE
    ldr r0, _0804E5A0 @ =0x0203EC58
    mov r8, r0
    movs r3, #0x00
_0804E516:
    ldr r1, [r6, #0x00]
    adds r4, r3, r1
    ldrb r2, [r4, #0x00]
    ldr r0, [r5, #0x00]
    cmp r2, r0
    bne _0804E5D4
    ldr r1, _0804E5A4 @ =0x030023C8
    movs r0, #0x01
    str r0, [r1, #0x00]
    ldr r0, _0804E5A8 @ =0x030023CC
    str r3, [r0, #0x00]
    ldr r0, _0804E5AC @ =0x030023D0
    movs r6, #0x00
    str r6, [r0, #0x00]
    ldr r0, _0804E5B0 @ =0x0203EC54
    str r2, [r0, #0x00]
    adds r0, r7, #0x0
    adds r0, #0xC6
    ldrh r0, [r0, #0x00]
    lsrs r0, r0, #0x08
    subs r0, #0x7F
    mov r1, r8
    str r0, [r1, #0x00]
    ldrb r4, [r4, #0x02]
    bl dmaq_getVBlankDmaQueue
    ldr r2, _0804E5B4 @ =0x080EE724
    movs r1, #0x81
    negs r1, r1
    ands r1, r4
    lsls r1, r1, #0x02
    adds r1, r1, r2
    ldr r1, [r1, #0x00]
    ldr r2, _0804E5B8 @ =0x06000C80
    ldr r3, _0804E5BC @ =0x800000C0
    bl dmaq_enqueue
    movs r0, #0x80
    ands r4, r0
    ldr r5, _0804E5C0 @ =0x080EEF30
    cmp r4, #0x00
    beq _0804E56C
    ldr r5, _0804E5C4 @ =0x080EEF4C
_0804E56C:
    movs r0, #0x00
    movs r1, #0x0D
    movs r2, #0x05
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r5, #0x0
    bl sub_804F6F4
    movs r0, #0x01
    bl map_setBufferDirty
    ldr r0, _0804E5C8 @ =0x0203EC5C
    str r6, [r0, #0x00]
    ldr r0, _0804E5CC @ =0x0203EC60
    str r6, [r0, #0x00]
    ldr r0, _0804E5D0 @ =0x0203EC64
    str r6, [r0, #0x00]
    b _0804E5DE
    .byte 0x00, 0x00
_0804E594: .4byte 0x00000814
_0804E598: .4byte 0x030023C4
_0804E59C: .4byte 0x0203EC50
_0804E5A0: .4byte 0x0203EC58
_0804E5A4: .4byte 0x030023C8
_0804E5A8: .4byte 0x030023CC
_0804E5AC: .4byte 0x030023D0
_0804E5B0: .4byte 0x0203EC54
_0804E5B4: .4byte 0x080EE724
_0804E5B8: .4byte 0x06000C80
_0804E5BC: .4byte 0x800000C0
_0804E5C0: .4byte 0x080EEF30
_0804E5C4: .4byte 0x080EEF4C
_0804E5C8: .4byte 0x0203EC5C
_0804E5CC: .4byte 0x0203EC60
_0804E5D0: .4byte 0x0203EC64
_0804E5D4:
    adds r3, #0x04
    adds r0, r3, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0xFF
    bne _0804E516
_0804E5DE:
    ldr r0, _0804E664 @ =0x030023C8
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bne _0804E5E8
    b _0804E7D4
_0804E5E8:
    ldr r0, _0804E668 @ =0x030023CC
    ldr r1, [r0, #0x00]
    ldr r0, _0804E66C @ =0x030023C4
    ldr r0, [r0, #0x00]
    adds r1, r1, r0
    ldrb r0, [r1, #0x01]
    lsls r0, r0, #0x02
    mov r8, r0
    ldrb r2, [r1, #0x02]
    mov r12, r2
    ldrb r5, [r1, #0x03]
    adds r3, r7, #0x0
    adds r3, #0xC6
    ldrh r2, [r3, #0x00]
    lsrs r2, r2, #0x08
    subs r2, #0x7F
    ldr r0, _0804E670 @ =0x000007E6
    add r0, r9
    ldrh r0, [r0, #0x00]
    lsrs r0, r0, #0x08
    movs r1, #0x7F
    ands r0, r1
    ldr r1, _0804E674 @ =0x030023D0
    mov r9, r3
    cmp r2, r0
    bne _0804E628
    movs r0, #0x80
    ands r0, r5
    cmp r0, #0x00
    beq _0804E628
    mov r0, r8
    str r0, [r1, #0x00]
_0804E628:
    movs r2, #0xC2
    lsls r2, r2, #0x01
    adds r0, r7, r2
    ldr r3, [r0, #0x00]
    movs r0, #0xF0
    lsls r0, r0, #0x08
    ands r3, r0
    cmp r3, #0x00
    beq _0804E646
    movs r0, #0x80
    lsls r0, r0, #0x05
    cmp r3, r0
    beq _0804E646
    mov r0, r8
    str r0, [r1, #0x00]
_0804E646:
    ldr r0, [r1, #0x00]
    cmp r0, r8
    blt _0804E64E
    b _0804E744
_0804E64E:
    movs r6, #0x00
    movs r3, #0x00
    movs r0, #0x0F
    ands r0, r5
    cmp r0, #0x01
    beq _0804E682
    cmp r0, #0x01
    bgt _0804E678
    cmp r0, #0x00
    beq _0804E67E
    b _0804E68C
_0804E664: .4byte 0x030023C8
_0804E668: .4byte 0x030023CC
_0804E66C: .4byte 0x030023C4
_0804E670: .4byte 0x000007E6
_0804E674: .4byte 0x030023D0
_0804E678:
    cmp r0, #0x02
    beq _0804E688
    b _0804E68C
_0804E67E:
    movs r6, #0x06
    b _0804E68A
_0804E682:
    movs r6, #0x03
    movs r3, #0x01
    b _0804E68C
_0804E688:
    movs r6, #0x0A
_0804E68A:
    movs r3, #0x02
_0804E68C:
    ldr r4, _0804E6C0 @ =0x0203EC5C
    ldr r1, [r4, #0x00]
    cmp r1, #0x00
    bne _0804E6CC
    ldr r2, _0804E6C4 @ =0x0203EC60
    ldr r0, [r2, #0x00]
    cmp r0, r6
    ble _0804E70C
    str r1, [r2, #0x00]
    movs r0, #0x01
    str r0, [r4, #0x00]
    ldr r4, _0804E6C8 @ =0x080EEF68
    movs r0, #0x00
    movs r1, #0x0D
    movs r2, #0x05
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    movs r0, #0x01
    bl map_setBufferDirty
    b _0804E70C
    .byte 0x00, 0x00
_0804E6C0: .4byte 0x0203EC5C
_0804E6C4: .4byte 0x0203EC60
_0804E6C8: .4byte 0x080EEF68
_0804E6CC:
    ldr r2, _0804E71C @ =0x0203EC60
    ldr r0, [r2, #0x00]
    cmp r0, r3
    ble _0804E70C
    movs r0, #0x00
    str r0, [r2, #0x00]
    movs r0, #0x01
    subs r0, r0, r1
    str r0, [r4, #0x00]
    movs r0, #0x80
    mov r1, r12
    ands r1, r0
    ldr r4, _0804E720 @ =0x080EEF30
    cmp r1, #0x00
    beq _0804E6EC
    ldr r4, _0804E724 @ =0x080EEF4C
_0804E6EC:
    movs r0, #0x00
    movs r1, #0x0D
    movs r2, #0x05
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    movs r0, #0x01
    bl map_setBufferDirty
    ldr r1, _0804E728 @ =0x0203EC64
    ldr r0, [r1, #0x00]
    adds r0, #0x01
    str r0, [r1, #0x00]
_0804E70C:
    movs r0, #0x0F
    ands r0, r5
    cmp r0, #0x01
    beq _0804E72C
    ldr r1, _0804E71C @ =0x0203EC60
    ldr r0, [r1, #0x00]
    adds r0, #0x01
    b _0804E762
_0804E71C: .4byte 0x0203EC60
_0804E720: .4byte 0x080EEF30
_0804E724: .4byte 0x080EEF4C
_0804E728: .4byte 0x0203EC64
_0804E72C:
    ldr r0, _0804E73C @ =0x0203EC64
    ldr r0, [r0, #0x00]
    cmp r0, #0x02
    bgt _0804E764
    ldr r1, _0804E740 @ =0x0203EC60
    ldr r0, [r1, #0x00]
    adds r0, #0x01
    b _0804E762
_0804E73C: .4byte 0x0203EC64
_0804E740: .4byte 0x0203EC60
_0804E744:
    ldr r4, _0804E778 @ =0x080EEF68
    movs r0, #0x00
    movs r1, #0x0D
    movs r2, #0x05
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    movs r0, #0x01
    bl map_setBufferDirty
    ldr r1, _0804E77C @ =0x030023C8
    movs r0, #0x00
_0804E762:
    str r0, [r1, #0x00]
_0804E764:
    movs r0, #0x40
    ands r0, r5
    cmp r0, #0x00
    bne _0804E784
    ldr r1, _0804E780 @ =0x030023D0
    ldr r0, [r1, #0x00]
    adds r0, #0x01
    str r0, [r1, #0x00]
    b _0804E7D4
    .byte 0x00, 0x00
_0804E778: .4byte 0x080EEF68
_0804E77C: .4byte 0x030023C8
_0804E780: .4byte 0x030023D0
_0804E784:
    mov r2, r9
    ldrh r0, [r2, #0x00]
    lsrs r0, r0, #0x08
    subs r0, #0x7F
    ldr r1, _0804E7A8 @ =0x0203EC58
    ldr r1, [r1, #0x00]
    cmp r0, r1
    ble _0804E7B4
    ldr r0, _0804E7AC @ =0x03002E20
    mov r2, r10
    ldrb r1, [r2, #0x00]
    ldrh r0, [r0, #0x38]
    adds r1, r1, r0
    ldr r0, _0804E7B0 @ =0x0203EC54
    ldr r0, [r0, #0x00]
    subs r1, r1, r0
    b _0804E7BE
    .byte 0x00, 0x00
_0804E7A8: .4byte 0x0203EC58
_0804E7AC: .4byte 0x03002E20
_0804E7B0: .4byte 0x0203EC54
_0804E7B4:
    mov r2, r10
    ldrb r0, [r2, #0x00]
    ldr r1, _0804E7E4 @ =0x0203EC54
    ldr r1, [r1, #0x00]
    subs r1, r0, r1
_0804E7BE:
    cmp r1, #0x00
    bge _0804E7C4
    negs r1, r1
_0804E7C4:
    movs r0, #0x30
    ands r5, r0
    asrs r0, r5, #0x04
    cmp r1, r0
    ble _0804E7D4
    ldr r0, _0804E7E8 @ =0x030023D0
    mov r1, r8
    str r1, [r0, #0x00]
_0804E7D4:
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804E7E4: .4byte 0x0203EC54
_0804E7E8: .4byte 0x030023D0
    thumb_func_start sub_804E7EC
sub_804E7EC:
    push {r4, r5, r6, lr}
    add sp, #-0x00C
    adds r4, r0, #0x0
    adds r5, r1, #0x0
    ldr r0, _0804E8A4 @ =0x03002E20
    adds r6, r0, #0x0
    adds r6, #0x24
    adds r0, r6, #0x0
    bl sub_8032D0C
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    adds r0, #0x13
    ldr r2, [r4, #0x00]
    asrs r2, r0
    adds r2, #0xA8
    lsls r2, r2, #0x10
    ldr r1, [r4, #0x04]
    asrs r1, r0
    adds r1, #0x58
    lsls r1, r1, #0x10
    lsrs r2, r2, #0x10
    orrs r2, r1
    str r2, [sp, #0x008]
    ldr r3, _0804E8A8 @ =0x080EE744
    cmp r5, #0x00
    bne _0804E830
    ldr r0, [r4, #0x48]
    movs r1, #0x80
    lsls r1, r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0804E830
    ldr r3, _0804E8AC @ =0x080EE754
_0804E830:
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0804E848
    adds r0, r4, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0804E84A
_0804E848:
    ldr r3, _0804E8B0 @ =0x080EE75C
_0804E84A:
    cmp r5, #0x00
    beq _0804E85C
    ldr r0, _0804E8B4 @ =0x030023A0
    ldr r0, [r0, #0x00]
    movs r1, #0x10
    ands r0, r1
    cmp r0, #0x00
    beq _0804E85C
    ldr r3, _0804E8B8 @ =0x080EE74C
_0804E85C:
    ldr r1, _0804E8BC @ =0x00000814
    adds r0, r6, r1
    ldr r0, [r0, #0x00]
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r2, #0x08
    adds r0, r2, #0x0
    ands r0, r1
    cmp r0, #0x00
    bne _0804E87E
    adds r0, r4, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    adds r0, r2, #0x0
    ands r0, r1
    cmp r0, #0x00
    bne _0804E89C
_0804E87E:
    movs r0, #0x00
    str r0, [sp, #0x000]
    str r0, [sp, #0x004]
    adds r0, r3, #0x0
    add r1, sp, #0x008
    movs r2, #0x00
    movs r3, #0x00
    bl oam_renderCellData
    cmp r5, #0x00
    beq _0804E89C
    ldr r1, _0804E8B4 @ =0x030023A0
    ldr r0, [r1, #0x00]
    adds r0, #0x01
    str r0, [r1, #0x00]
_0804E89C:
    add sp, #0x00C
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0804E8A4: .4byte 0x03002E20
_0804E8A8: .4byte 0x080EE744
_0804E8AC: .4byte 0x080EE754
_0804E8B0: .4byte 0x080EE75C
_0804E8B4: .4byte 0x030023A0
_0804E8B8: .4byte 0x080EE74C
_0804E8BC: .4byte 0x00000814
    thumb_func_start sub_804E8C0
sub_804E8C0:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    mov r8, r0
    ldr r0, _0804E93C @ =0x00000C68
    add r0, r8
    ldrh r1, [r0, #0x00]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0x00
    bne _0804E932
    ldr r0, _0804E940 @ =0x00000BEE
    add r0, r8
    ldrh r1, [r0, #0x00]
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _0804E932
    ldr r0, _0804E944 @ =0x00000C88
    add r0, r8
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    blt _0804E932
    movs r7, #0xA0
    movs r0, #0x00
_0804E8F2:
    movs r4, #0x00
    adds r5, r0, #0x2
    adds r6, r0, #0x1
_0804E8F8:
    adds r1, r4, #0x2
    movs r0, #0x00
    adds r2, r5, #0x0
    bl map_getBufferPtr2d
    adds r2, r7, #0x0
    adds r1, r2, #0x1
    lsls r1, r1, #0x10
    lsrs r7, r1, #0x10
    movs r3, #0xF0
    lsls r3, r3, #0x08
    adds r1, r3, #0x0
    orrs r2, r1
    strh r2, [r0, #0x00]
    adds r4, #0x01
    cmp r4, #0x08
    ble _0804E8F8
    adds r0, r6, #0x0
    cmp r0, #0x02
    ble _0804E8F2
    movs r0, #0x01
    bl map_setBufferDirty
    ldr r2, _0804E93C @ =0x00000C68
    add r2, r8
    ldrh r1, [r2, #0x00]
    movs r0, #0x40
    orrs r0, r1
    strh r0, [r2, #0x00]
_0804E932:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0804E93C: .4byte 0x00000C68
_0804E940: .4byte 0x00000BEE
_0804E944: .4byte 0x00000C88
    thumb_func_start sub_804E948
sub_804E948:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    mov r8, r0
    ldr r0, _0804E9AC @ =0x00000C68
    add r0, r8
    ldrh r1, [r0, #0x00]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0804E9FE
    ldr r0, _0804E9B0 @ =0x00000BEE
    add r0, r8
    ldrh r1, [r0, #0x00]
    movs r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    beq _0804E9FE
    ldr r0, _0804E9B4 @ =0x00000C88
    add r0, r8
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    blt _0804E9B8
    movs r7, #0xC0
    movs r0, #0x00
_0804E97A:
    movs r4, #0x00
    adds r5, r0, #0x2
    adds r6, r0, #0x1
_0804E980:
    adds r1, r4, #0x0
    adds r1, #0x13
    movs r0, #0x00
    adds r2, r5, #0x0
    bl map_getBufferPtr2d
    adds r2, r7, #0x0
    adds r1, r2, #0x1
    lsls r1, r1, #0x10
    lsrs r7, r1, #0x10
    movs r3, #0xF0
    lsls r3, r3, #0x08
    adds r1, r3, #0x0
    orrs r2, r1
    strh r2, [r0, #0x00]
    adds r4, #0x01
    cmp r4, #0x08
    ble _0804E980
    adds r0, r6, #0x0
    cmp r0, #0x02
    ble _0804E97A
    b _0804E9EC
_0804E9AC: .4byte 0x00000C68
_0804E9B0: .4byte 0x00000BEE
_0804E9B4: .4byte 0x00000C88
_0804E9B8:
    movs r7, #0xA0
    movs r0, #0x00
_0804E9BC:
    movs r4, #0x00
    adds r5, r0, #0x2
    adds r6, r0, #0x1
_0804E9C2:
    adds r1, r4, #0x0
    adds r1, #0x13
    movs r0, #0x00
    adds r2, r5, #0x0
    bl map_getBufferPtr2d
    adds r2, r7, #0x0
    adds r1, r2, #0x1
    lsls r1, r1, #0x10
    lsrs r7, r1, #0x10
    movs r3, #0xF0
    lsls r3, r3, #0x08
    adds r1, r3, #0x0
    orrs r2, r1
    strh r2, [r0, #0x00]
    adds r4, #0x01
    cmp r4, #0x08
    ble _0804E9C2
    adds r0, r6, #0x0
    cmp r0, #0x02
    ble _0804E9BC
_0804E9EC:
    movs r0, #0x01
    bl map_setBufferDirty
    ldr r2, _0804EA08 @ =0x00000C68
    add r2, r8
    ldrh r1, [r2, #0x00]
    movs r0, #0x20
    orrs r0, r1
    strh r0, [r2, #0x00]
_0804E9FE:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0804EA08: .4byte 0x00000C68
    thumb_func_start sub_804EA0C
sub_804EA0C:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    mov r8, r0
    ldr r2, _0804EA80 @ =0x00000C68
    add r2, r8
    ldrh r1, [r2, #0x00]
    ldr r0, _0804EA84 @ =0x0000FFEF
    ands r0, r1
    strh r0, [r2, #0x00]
    movs r7, #0xA0
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0804EA88 @ =0x0806500C
    ldr r2, _0804EA8C @ =0x06001400
    ldr r3, _0804EA90 @ =0x80000120
    bl dmaq_enqueue
    movs r0, #0x00
_0804EA32:
    movs r4, #0x00
    adds r5, r0, #0x2
    adds r6, r0, #0x1
_0804EA38:
    adds r1, r4, #0x0
    adds r1, #0x15
    movs r0, #0x00
    adds r2, r5, #0x0
    bl map_getBufferPtr2d
    adds r2, r7, #0x0
    adds r1, r2, #0x1
    lsls r1, r1, #0x10
    lsrs r7, r1, #0x10
    movs r3, #0xD0
    lsls r3, r3, #0x08
    adds r1, r3, #0x0
    orrs r2, r1
    strh r2, [r0, #0x00]
    adds r4, #0x01
    cmp r4, #0x08
    ble _0804EA38
    adds r0, r6, #0x0
    cmp r0, #0x01
    ble _0804EA32
    movs r0, #0x01
    bl map_setBufferDirty
    ldr r2, _0804EA80 @ =0x00000C68
    add r2, r8
    ldrh r1, [r2, #0x00]
    movs r0, #0x10
    orrs r0, r1
    strh r0, [r2, #0x00]
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804EA80: .4byte 0x00000C68
_0804EA84: .4byte 0x0000FFEF
_0804EA88: .4byte 0x0806500C
_0804EA8C: .4byte 0x06001400
_0804EA90: .4byte 0x80000120
    thumb_func_start sub_804EA94
sub_804EA94:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    ldr r5, _0804EB44 @ =0x03002E20
    ldr r0, _0804EB48 @ =0x000007FE
    adds r0, r0, r5
    mov r8, r0
    ldrh r0, [r0, #0x00]
    movs r6, #0xF0
    lsls r6, r6, #0x04
    adds r1, r6, #0x0
    ands r1, r0
    movs r0, #0x80
    lsls r0, r0, #0x04
    cmp r1, r0
    beq _0804EB26
    ldr r4, _0804EB4C @ =0x080EE7A8
    movs r0, #0x00
    movs r1, #0x04
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    ldr r4, _0804EB50 @ =0x080EEF84
    movs r0, #0x00
    movs r1, #0x09
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
    ldr r1, _0804EB54 @ =0x0000080A
    adds r0, r5, r1
    ldrh r4, [r0, #0x00]
    lsrs r4, r4, #0x08
    movs r0, #0x07
    ands r4, r0
    movs r0, #0x00
    movs r1, #0x0A
    movs r2, #0x00
    bl map_getBufferPtr2d
    ldr r3, _0804EB58 @ =0x080EE67E
    lsls r1, r4, #0x01
    adds r1, r1, r3
    ldrh r1, [r1, #0x00]
    movs r7, #0xC0
    lsls r7, r7, #0x08
    adds r2, r7, #0x0
    orrs r1, r2
    strh r1, [r0, #0x00]
    adds r0, #0x40
    adds r4, #0x0A
    lsls r4, r4, #0x01
    adds r4, r4, r3
    ldrh r1, [r4, #0x00]
    orrs r1, r2
    strh r1, [r0, #0x00]
    ldr r4, _0804EB5C @ =0x080EE7B8
    movs r0, #0x00
    movs r1, #0x12
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
_0804EB26:
    movs r3, #0x00
    ldr r1, _0804EB60 @ =0x00000CAC
    adds r0, r5, r1
    ldr r1, [r0, #0x00]
    cmp r1, #0x00
    bge _0804EB64
    movs r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    bne _0804EBC4
    movs r0, #0x04
    ands r1, r0
    cmp r1, #0x00
    bne _0804EBC4
    b _0804EBD8
_0804EB44: .4byte 0x03002E20
_0804EB48: .4byte 0x000007FE
_0804EB4C: .4byte 0x080EE7A8
_0804EB50: .4byte 0x080EEF84
_0804EB54: .4byte 0x0000080A
_0804EB58: .4byte 0x080EE67E
_0804EB5C: .4byte 0x080EE7B8
_0804EB60: .4byte 0x00000CAC
_0804EB64:
    mov r7, r8
    ldrh r2, [r7, #0x00]
    adds r1, r6, #0x0
    ands r1, r2
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    beq _0804EB80
    movs r0, #0x80
    lsls r0, r0, #0x03
    cmp r1, r0
    beq _0804EBA0
_0804EB7C:
    movs r3, #0x01
    b _0804EBC4
_0804EB80:
    movs r0, #0x10
    ands r0, r2
    cmp r0, #0x00
    beq _0804EB7C
    movs r1, #0x00
    ldr r0, _0804EB9C @ =0x03002C60
    ldrh r0, [r0, #0x10]
    cmp r0, #0x00
    bne _0804EB94
    movs r1, #0x01
_0804EB94:
    cmp r1, #0x00
    beq _0804EBC0
    b _0804EB7C
    .byte 0x00, 0x00
_0804EB9C: .4byte 0x03002C60
_0804EBA0:
    movs r1, #0x00
    ldr r2, _0804EC24 @ =0x03002C60
    ldrh r0, [r2, #0x08]
    cmp r0, #0x00
    bne _0804EBAC
    movs r1, #0x01
_0804EBAC:
    cmp r1, #0x00
    bne _0804EBBE
    movs r1, #0x00
    ldrh r0, [r2, #0x0A]
    cmp r0, #0x00
    bne _0804EBBA
    movs r1, #0x01
_0804EBBA:
    cmp r1, #0x00
    beq _0804EBC0
_0804EBBE:
    movs r3, #0x01
_0804EBC0:
    cmp r3, #0x00
    beq _0804EBD8
_0804EBC4:
    ldr r4, _0804EC28 @ =0x080EE7C8
    movs r0, #0x00
    movs r1, #0x0D
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    bl sub_804F6F4
_0804EBD8:
    movs r6, #0x80
    lsls r6, r6, #0x01
    movs r0, #0x00
    ldr r1, _0804EC2C @ =0xFFFFB000
    mov r8, r1
_0804EBE2:
    movs r4, #0x00
    adds r5, r0, #0x0
    adds r5, #0x0C
    adds r7, r0, #0x1
_0804EBEA:
    adds r1, r4, #0x0
    adds r1, #0x16
    movs r0, #0x00
    adds r2, r5, #0x0
    bl map_getBufferPtr2d
    adds r1, r6, #0x0
    mov r2, r8
    orrs r1, r2
    strh r1, [r0, #0x00]
    adds r6, #0x01
    adds r4, #0x01
    cmp r4, #0x07
    ble _0804EBEA
    adds r0, r7, #0x0
    cmp r0, #0x07
    ble _0804EBE2
    movs r0, #0x01
    bl map_setBufferDirty
    movs r0, #0x01
    bl map_setBufferDirty
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804EC24: .4byte 0x03002C60
_0804EC28: .4byte 0x080EE7C8
_0804EC2C: .4byte 0xFFFFB000
    thumb_func_start sub_804EC30
sub_804EC30:
    push {r4, lr}
    add sp, #-0x008
    adds r4, r0, #0x0
    ldr r1, _0804EC90 @ =0x00000C68
    adds r0, r4, r1
    movs r1, #0x00
    strh r1, [r0, #0x00]
    ldr r2, _0804EC94 @ =0x00000C6C
    adds r0, r4, r2
    strh r1, [r0, #0x00]
    subs r2, #0x02
    adds r0, r4, r2
    strh r1, [r0, #0x00]
    adds r2, #0x04
    adds r0, r4, r2
    strh r1, [r0, #0x00]
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0804EC98 @ =0x08062834
    movs r2, #0xC0
    lsls r2, r2, #0x13
    ldr r3, _0804EC9C @ =0x80001000
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0804ECA0 @ =0x0203EC68
    ldr r2, _0804ECA4 @ =0x06001C00
    ldr r3, _0804ECA8 @ =0x810000B0
    bl dmaq_enqueue
    ldr r0, _0804ECAC @ =0x000007DA
    adds r4, r4, r0
    ldrh r0, [r4, #0x00]
    movs r1, #0xF0
    lsls r1, r1, #0x04
    ands r1, r0
    movs r0, #0x80
    lsls r0, r0, #0x03
    cmp r1, r0
    beq _0804ECE2
    cmp r1, r0
    bgt _0804ECB0
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    beq _0804ECE2
    b _0804ECF0
_0804EC90: .4byte 0x00000C68
_0804EC94: .4byte 0x00000C6C
_0804EC98: .4byte 0x08062834
_0804EC9C: .4byte 0x80001000
_0804ECA0: .4byte 0x0203EC68
_0804ECA4: .4byte 0x06001C00
_0804ECA8: .4byte 0x810000B0
_0804ECAC: .4byte 0x000007DA
_0804ECB0:
    movs r0, #0x80
    lsls r0, r0, #0x04
    cmp r1, r0
    bne _0804ECF0
    ldr r0, _0804ED68 @ =0x0806D06C
    ldr r1, _0804ED6C @ =0x06011180
    bl LZ77UnCompVram
    ldr r0, _0804ED70 @ =0x0806D210
    ldr r1, _0804ED74 @ =0x06011400
    bl LZ77UnCompVram
    ldr r0, _0804ED78 @ =0x0806D12C
    ldr r1, _0804ED7C @ =0x06011C00
    bl LZ77UnCompVram
    ldr r4, _0804ED80 @ =0x0806D00C
    movs r0, #0x01
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    movs r2, #0x18
    bl CpuFastSet
_0804ECE2:
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0804ED84 @ =0x08064834
    ldr r2, _0804ED88 @ =0x06001000
    ldr r3, _0804ED8C @ =0x80000200
    bl dmaq_enqueue
_0804ECF0:
    movs r0, #0x01
    negs r0, r0
    str r0, [sp, #0x000]
    ldr r1, _0804ED90 @ =0x06002E00
    ldr r2, _0804ED94 @ =0x01000008
    mov r0, sp
    bl CpuFastSet
    ldr r4, _0804ED98 @ =0x08062774
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r2, #0xA0
    lsls r2, r2, #0x01
    adds r1, r1, r2
    adds r0, r4, #0x0
    movs r2, #0x30
    bl CpuFastSet
    movs r0, #0x00
    bl pltt_getBuffer
    movs r2, #0x9F
    lsls r2, r2, #0x01
    adds r1, r0, r2
    movs r0, #0x00
    strh r0, [r1, #0x00]
    movs r0, #0x01
    bl pltt_setDirtyFlag
    ldr r1, _0804ED9C @ =0x06003800
    movs r0, #0x00
    bl map_setBufferDestination
    ldr r1, _0804EDA0 @ =0x06003000
    movs r0, #0x01
    bl map_setBufferDestination
    movs r0, #0x00
    bl map_clearBuffer
    ldr r0, _0804EDA4 @ =0x91709170
    str r0, [sp, #0x004]
    add r4, sp, #0x004
    movs r0, #0x01
    bl map_getBufferPtr
    adds r1, r0, #0x0
    ldr r2, _0804EDA8 @ =0x01000200
    adds r0, r4, #0x0
    bl CpuFastSet
    movs r0, #0x03
    bl map_setBufferDirty
    add sp, #0x008
    pop {r4}
    pop {r0}
    bx r0
_0804ED68: .4byte 0x0806D06C
_0804ED6C: .4byte 0x06011180
_0804ED70: .4byte 0x0806D210
_0804ED74: .4byte 0x06011400
_0804ED78: .4byte 0x0806D12C
_0804ED7C: .4byte 0x06011C00
_0804ED80: .4byte 0x0806D00C
_0804ED84: .4byte 0x08064834
_0804ED88: .4byte 0x06001000
_0804ED8C: .4byte 0x80000200
_0804ED90: .4byte 0x06002E00
_0804ED94: .4byte 0x01000008
_0804ED98: .4byte 0x08062774
_0804ED9C: .4byte 0x06003800
_0804EDA0: .4byte 0x06003000
_0804EDA4: .4byte 0x91709170
_0804EDA8: .4byte 0x01000200
    thumb_func_start sub_804EDAC
sub_804EDAC:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    ldr r4, _0804EE34 @ =0x03002E20
    movs r0, #0x24
    adds r0, r0, r4
    mov r10, r0
    ldr r0, _0804EE38 @ =0x03005C80
    movs r1, #0x00
    str r1, [r0, #0x00]
    strb r1, [r0, #0x04]
    movs r2, #0x00
    strh r1, [r0, #0x06]
    strb r2, [r0, #0x08]
    strh r1, [r0, #0x0A]
    strb r2, [r0, #0x0C]
    bl sub_804EA94
    mov r0, r10
    bl sub_804D458
    movs r1, #0xB3
    lsls r1, r1, #0x03
    adds r0, r4, r1
    ldr r1, [r0, #0x00]
    adds r0, r1, #0x0
    adds r0, #0xC4
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0804EDF4
    adds r0, r1, r0
    ldr r1, _0804EE3C @ =0x06002000
    bl LZ77UnCompVram
_0804EDF4:
    ldr r2, _0804EE40 @ =0x00000838
    adds r0, r4, r2
    ldr r1, [r0, #0x00]
    movs r3, #0x81
    lsls r3, r3, #0x04
    adds r2, r4, r3
    movs r0, #0x01
    str r0, [r2, #0x00]
    ldr r2, _0804EE44 @ =0x030023C0
    adds r1, #0xBA
    ldrh r0, [r1, #0x00]
    lsrs r0, r0, #0x01
    strh r0, [r2, #0x00]
    ldr r1, _0804EE48 @ =0x000007FE
    adds r0, r4, r1
    ldrh r0, [r0, #0x00]
    movs r1, #0xF0
    lsls r1, r1, #0x04
    ands r1, r0
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    beq _0804EE2A
    movs r0, #0x80
    lsls r0, r0, #0x03
    cmp r1, r0
    bne _0804EE86
_0804EE2A:
    movs r7, #0xE0
    movs r5, #0x00
_0804EE2E:
    movs r4, #0x00
    adds r6, r5, #0x1
    b _0804EE6C
_0804EE34: .4byte 0x03002E20
_0804EE38: .4byte 0x03005C80
_0804EE3C: .4byte 0x06002000
_0804EE40: .4byte 0x00000838
_0804EE44: .4byte 0x030023C0
_0804EE48: .4byte 0x000007FE
_0804EE4C:
    adds r4, #0x01
    adds r2, r5, #0x0
    adds r2, #0x10
    movs r0, #0x00
    adds r1, r4, #0x0
    bl map_getBufferPtr2d
    adds r2, r7, #0x0
    adds r1, r2, #0x1
    lsls r1, r1, #0x10
    lsrs r7, r1, #0x10
    movs r3, #0xC0
    lsls r3, r3, #0x08
    adds r1, r3, #0x0
    orrs r2, r1
    strh r2, [r0, #0x00]
_0804EE6C:
    cmp r5, #0x02
    bne _0804EE76
    cmp r4, #0x04
    ble _0804EE4C
    b _0804EE7A
_0804EE76:
    cmp r4, #0x02
    ble _0804EE4C
_0804EE7A:
    adds r5, r6, #0x0
    cmp r5, #0x02
    ble _0804EE2E
    movs r0, #0x01
    bl map_setBufferDirty
_0804EE86:
    mov r0, r10
    bl sub_804DD9C
    ldr r0, _0804EF64 @ =0x03002E20
    ldr r1, _0804EF68 @ =0x080E7FEC
    ldr r4, _0804EF6C @ =0x00000801
    adds r0, r0, r4
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    ldr r3, _0804EF70 @ =0x030023C8
    ldr r2, _0804EF74 @ =0x030023CC
    ldr r1, _0804EF78 @ =0x030023D0
    movs r0, #0x00
    str r0, [r1, #0x00]
    str r0, [r2, #0x00]
    str r0, [r3, #0x00]
    ldr r1, _0804EF7C @ =0x030023C4
    ldr r0, [r4, #0x14]
    str r0, [r1, #0x00]
    ldr r0, _0804EF80 @ =0x000007DA
    add r0, r10
    ldrh r1, [r0, #0x00]
    movs r0, #0xF0
    lsls r0, r0, #0x04
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x02
    cmp r0, r1
    bne _0804EF1C
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0804EF84 @ =0x08066C0C
    ldr r2, _0804EF88 @ =0x06002800
    ldr r3, _0804EF8C @ =0x80000120
    bl dmaq_enqueue
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0804EF90 @ =0x0806640C
    ldr r2, _0804EF94 @ =0x06017800
    ldr r3, _0804EF98 @ =0x80000400
    bl dmaq_enqueue
    movs r7, #0x00
    movs r0, #0x00
    ldr r1, _0804EF9C @ =0x080EE76C
    mov r9, r1
_0804EEE8:
    movs r5, #0x00
    adds r6, r0, #0x0
    adds r6, #0x0E
    adds r0, #0x01
    mov r8, r0
    lsls r0, r7, #0x01
    mov r2, r9
    adds r4, r0, r2
_0804EEF8:
    movs r0, #0x00
    adds r1, r5, #0x0
    adds r2, r6, #0x0
    bl map_getBufferPtr2d
    ldrh r1, [r4, #0x00]
    strh r1, [r0, #0x00]
    adds r4, #0x02
    adds r7, #0x01
    adds r5, #0x01
    cmp r5, #0x05
    ble _0804EEF8
    mov r0, r8
    cmp r0, #0x04
    ble _0804EEE8
    movs r0, #0x01
    bl map_setBufferDirty
_0804EF1C:
    ldr r0, _0804EF80 @ =0x000007DA
    add r0, r10
    ldrh r1, [r0, #0x00]
    movs r0, #0xF0
    lsls r0, r0, #0x04
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x04
    cmp r0, r1
    beq _0804EF56
    movs r0, #0x00
    movs r1, #0x08
    movs r2, #0x00
    bl map_getBufferPtr2d
    ldr r3, _0804EFA0 @ =0x080EE67E
    ldrh r1, [r3, #0x02]
    movs r4, #0xC0
    lsls r4, r4, #0x08
    adds r2, r4, #0x0
    orrs r1, r2
    strh r1, [r0, #0x00]
    adds r0, #0x40
    ldrh r1, [r3, #0x16]
    orrs r1, r2
    strh r1, [r0, #0x00]
    movs r0, #0x01
    bl map_setBufferDirty
_0804EF56:
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0804EF64: .4byte 0x03002E20
_0804EF68: .4byte 0x080E7FEC
_0804EF6C: .4byte 0x00000801
_0804EF70: .4byte 0x030023C8
_0804EF74: .4byte 0x030023CC
_0804EF78: .4byte 0x030023D0
_0804EF7C: .4byte 0x030023C4
_0804EF80: .4byte 0x000007DA
_0804EF84: .4byte 0x08066C0C
_0804EF88: .4byte 0x06002800
_0804EF8C: .4byte 0x80000120
_0804EF90: .4byte 0x0806640C
_0804EF94: .4byte 0x06017800
_0804EF98: .4byte 0x80000400
_0804EF9C: .4byte 0x080EE76C
_0804EFA0: .4byte 0x080EE67E
    .byte 0x03, 0x49, 0x07, 0x20, 0x08, 0x80, 0x03, 0x49, 0x00, 0x20, 0x08, 0x80, 0x70, 0x47, 0x00, 0x00
    .byte 0x4E, 0xEC, 0x03, 0x02, 0xC2, 0x23, 0x00, 0x03
    thumb_func_start sub_804EFBC
sub_804EFBC:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    mov r12, r1
    mov r8, r2
    mov r9, r3
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    ldr r0, _0804F008 @ =0x0000EA5F
    cmp r1, r0
    bhi _0804F010
    ldr r0, _0804F00C @ =0x0000147A
    muls r0, r1
    lsrs r5, r0, #0x13
    movs r0, #0x64
    muls r0, r5
    subs r7, r1, r0
    cmp r7, #0x63
    bls _0804EFE8
    subs r7, #0x64
    adds r5, #0x01
_0804EFE8:
    lsls r0, r5, #0x04
    adds r0, r0, r5
    lsls r1, r0, #0x08
    adds r0, r0, r1
    lsls r0, r0, #0x01
    lsrs r6, r0, #0x13
    lsls r0, r6, #0x04
    subs r0, r0, r6
    lsls r0, r0, #0x02
    subs r5, r5, r0
    cmp r5, #0x3B
    bls _0804F016
    subs r5, #0x3C
    adds r6, #0x01
    b _0804F016
    .byte 0x00, 0x00
_0804F008: .4byte 0x0000EA5F
_0804F00C: .4byte 0x0000147A
_0804F010:
    movs r6, #0x09
    movs r5, #0x3B
    movs r7, #0x63
_0804F016:
    ldr r2, _0804F074 @ =0x0000CCCD
    adds r0, r6, #0x0
    muls r0, r2
    lsrs r3, r0, #0x13
    lsls r0, r3, #0x02
    adds r0, r0, r3
    lsls r0, r0, #0x01
    subs r4, r6, r0
    movs r1, #0x0F
    ands r3, r1
    lsls r0, r3, #0x04
    ands r4, r1
    adds r6, r0, r4
    adds r0, r5, #0x0
    muls r0, r2
    lsrs r3, r0, #0x13
    lsls r0, r3, #0x02
    adds r0, r0, r3
    lsls r0, r0, #0x01
    subs r4, r5, r0
    ands r3, r1
    lsls r0, r3, #0x04
    ands r4, r1
    adds r5, r0, r4
    adds r0, r7, #0x0
    muls r0, r2
    lsrs r3, r0, #0x13
    lsls r0, r3, #0x02
    adds r0, r0, r3
    lsls r0, r0, #0x01
    subs r4, r7, r0
    ands r3, r1
    lsls r0, r3, #0x04
    ands r4, r1
    adds r7, r0, r4
    mov r0, r12
    str r6, [r0, #0x00]
    mov r0, r8
    str r5, [r0, #0x00]
    mov r0, r9
    str r7, [r0, #0x00]
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0804F074: .4byte 0x0000CCCD
    thumb_func_start sub_804F078
sub_804F078:
    ldr r2, _0804F094 @ =0x03005C80
    ldrb r1, [r2, #0x0C]
    movs r0, #0x04
    ands r0, r1
    cmp r0, #0x00
    bne _0804F092
    movs r0, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    movs r1, #0x04
    orrs r0, r1
    strb r0, [r2, #0x0C]
_0804F092:
    bx lr
_0804F094: .4byte 0x03005C80
    thumb_func_start sub_804F098
sub_804F098:
    ldr r1, _0804F0A8 @ =0x03005C80
    ldrb r2, [r1, #0x0C]
    movs r0, #0xFD
    ands r0, r2
    strb r0, [r1, #0x0C]
    ldr r0, [r1, #0x00]
    bx lr
    .byte 0x00, 0x00
_0804F0A8: .4byte 0x03005C80
    thumb_func_start sub_804F0AC
sub_804F0AC:
    ldr r0, _0804F0B4 @ =0x03005C80
    ldr r0, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
_0804F0B4: .4byte 0x03005C80
    .byte 0xF0, 0xB5, 0x00, 0x27, 0x00, 0x24, 0x15, 0x4E, 0x15, 0x4D, 0x01, 0x34, 0x00, 0x20, 0x0E, 0x21
    .byte 0x22, 0x1C, 0xDF, 0xF7, 0xF1, 0xFA, 0x02, 0x1C, 0x01, 0x23, 0x10, 0x88, 0x31, 0x1C, 0x01, 0x40
    .byte 0x28, 0x88, 0x01, 0x43, 0x11, 0x80, 0x02, 0x32, 0x01, 0x3B, 0x00, 0x2B, 0xF5, 0xDA, 0x01, 0x2C
    .byte 0xEB, 0xDD, 0x01, 0x20, 0xDF, 0xF7, 0x06, 0xFB, 0x0F, 0x2F, 0x00, 0xD1, 0x0B, 0x27, 0x10, 0x2F
    .byte 0x00, 0xD1, 0x0A, 0x27, 0xE1, 0xF7, 0x9A, 0xF9, 0xF9, 0x01, 0x06, 0x4A, 0x89, 0x18, 0x06, 0x4A
    .byte 0x06, 0x4B, 0xE1, 0xF7, 0x6B, 0xF9, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0xFF, 0x0F, 0x00, 0x00
    .byte 0x5C, 0xE6, 0x0E, 0x08, 0x3C, 0xF3, 0x06, 0x08, 0x00, 0x0E, 0x00, 0x06, 0x40, 0x00, 0x00, 0x80
    thumb_func_start sub_804F128
sub_804F128:
    push {r4, r5, lr}
    ldr r2, _0804F150 @ =0x03002E20
    ldr r1, _0804F154 @ =0x00000C8E
    adds r3, r2, r1
    ldrh r4, [r3, #0x00]
    movs r5, #0xC9
    lsls r5, r5, #0x04
    adds r1, r2, r5
    strh r4, [r1, #0x00]
    strh r0, [r3, #0x00]
    ldr r0, _0804F158 @ =0x00000C92
    adds r2, r2, r0
    movs r0, #0xA0
    strh r0, [r2, #0x00]
    ldrh r0, [r3, #0x00]
    bl sub_804CD98
    pop {r4, r5}
    pop {r0}
    bx r0
_0804F150: .4byte 0x03002E20
_0804F154: .4byte 0x00000C8E
_0804F158: .4byte 0x00000C92
    thumb_func_start sub_804F15C
sub_804F15C:
    push {r4, lr}
    ldr r3, _0804F184 @ =0x03002E20
    movs r4, #0xC9
    lsls r4, r4, #0x04
    adds r2, r3, r4
    strh r0, [r2, #0x00]
    ldr r0, _0804F188 @ =0x00000C8E
    adds r2, r3, r0
    strh r1, [r2, #0x00]
    adds r4, #0x02
    adds r3, r3, r4
    movs r0, #0xA0
    strh r0, [r3, #0x00]
    ldrh r0, [r2, #0x00]
    bl sub_804CD98
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804F184: .4byte 0x03002E20
_0804F188: .4byte 0x00000C8E
    thumb_func_start sub_804F18C
sub_804F18C:
    ldr r1, _0804F1A0 @ =0x00000814
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    ldr r1, _0804F1A4 @ =0x030023C0
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r0, r0, #0x01
    strh r0, [r1, #0x00]
    bx lr
    .byte 0x00, 0x00
_0804F1A0: .4byte 0x00000814
_0804F1A4: .4byte 0x030023C0
    thumb_func_start sub_804F1A8
sub_804F1A8:
    push {r4, r5, lr}
    lsls r0, r0, #0x10
    movs r1, #0xE0
    lsls r1, r1, #0x0B
    ands r1, r0
    lsrs r4, r1, #0x10
    cmp r4, #0x00
    bne _0804F1BA
    movs r4, #0x01
_0804F1BA:
    movs r0, #0x00
    movs r1, #0x08
    movs r2, #0x00
    bl map_getBufferPtr2d
    ldr r3, _0804F1F4 @ =0x080EE67E
    lsls r1, r4, #0x01
    adds r1, r1, r3
    ldrh r1, [r1, #0x00]
    movs r5, #0xC0
    lsls r5, r5, #0x08
    adds r2, r5, #0x0
    orrs r1, r2
    strh r1, [r0, #0x00]
    adds r0, #0x40
    adds r1, r4, #0x0
    adds r1, #0x0A
    lsls r1, r1, #0x01
    adds r1, r1, r3
    ldrh r1, [r1, #0x00]
    orrs r1, r2
    strh r1, [r0, #0x00]
    movs r0, #0x01
    bl map_setBufferDirty
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804F1F4: .4byte 0x080EE67E
    thumb_func_start sub_804F1F8
sub_804F1F8:
    push {lr}
    ldr r1, _0804F220 @ =0x00000814
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    adds r0, r1, #0x0
    adds r0, #0xC6
    ldrh r0, [r0, #0x00]
    lsrs r2, r0, #0x08
    adds r3, r2, #0x0
    subs r3, #0x7F
    ldr r0, [r1, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _0804F224
    adds r0, r2, #0x0
    subs r0, #0x80
    lsls r0, r0, #0x10
    b _0804F226
    .byte 0x00, 0x00
_0804F220: .4byte 0x00000814
_0804F224:
    lsls r0, r3, #0x10
_0804F226:
    lsrs r0, r0, #0x10
    bl sub_804F1A8
    pop {r0}
    bx r0
    .byte 0xF0, 0xB5, 0x0F, 0x4A, 0x81, 0x18, 0x0A, 0x68, 0x0E, 0x49, 0x43, 0x18, 0x01, 0x21, 0x19, 0x60
    .byte 0x0D, 0x4B, 0xBA, 0x32, 0x11, 0x88, 0x49, 0x08, 0x19, 0x80, 0x0C, 0x4A, 0x80, 0x18, 0x00, 0x88
    .byte 0xF0, 0x21, 0x09, 0x01, 0x01, 0x40, 0x80, 0x20, 0x40, 0x00, 0x81, 0x42, 0x03, 0xD0, 0x80, 0x20
    .byte 0xC0, 0x00, 0x81, 0x42, 0x29, 0xD1, 0xE0, 0x27, 0x00, 0x25, 0x00, 0x24, 0x6E, 0x1C, 0x17, 0xE0
    .byte 0x14, 0x08, 0x00, 0x00, 0xEC, 0x07, 0x00, 0x00, 0xC0, 0x23, 0x00, 0x03, 0xDA, 0x07, 0x00, 0x00
    .byte 0x01, 0x34, 0x2A, 0x1C, 0x10, 0x32, 0x00, 0x20, 0x21, 0x1C, 0xDF, 0xF7, 0x11, 0xFA, 0x3A, 0x1C
    .byte 0x51, 0x1C, 0x09, 0x04, 0x0F, 0x0C, 0xC0, 0x23, 0x1B, 0x02, 0x19, 0x1C, 0x0A, 0x43, 0x02, 0x80
    .byte 0x02, 0x2D, 0x02, 0xD1, 0x04, 0x2C, 0xEB, 0xDD, 0x01, 0xE0, 0x02, 0x2C, 0xE8, 0xDD, 0x35, 0x1C
    .byte 0x02, 0x2D, 0xDA, 0xDD, 0x01, 0x20, 0xDF, 0xF7, 0x21, 0xFA, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47
    thumb_func_start sub_804F2C0
sub_804F2C0:
    push {r4, r5, r6, lr}
    adds r6, r0, #0x0
    movs r1, #0xFE
    lsls r1, r1, #0x03
    adds r0, r6, r1
    ldrb r5, [r0, #0x00]
    cmp r5, #0x04
    ble _0804F2D2
    movs r5, #0x04
_0804F2D2:
    movs r4, #0x00
    cmp r4, r5
    bge _0804F2E6
_0804F2D8:
    adds r0, r6, #0x0
    adds r1, r4, #0x0
    bl sub_804DBF4
    adds r4, #0x01
    cmp r4, r5
    blt _0804F2D8
_0804F2E6:
    bl sub_804DF08
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0xF0, 0xB5, 0x47, 0x46, 0x80, 0xB4, 0x80, 0x26, 0x76, 0x00, 0x00, 0x20, 0x0F, 0x49, 0x88, 0x46
    .byte 0x00, 0x24, 0x05, 0x1C, 0x0C, 0x35, 0x47, 0x1C, 0x21, 0x1C, 0x16, 0x31, 0x00, 0x20, 0x2A, 0x1C
    .byte 0xDF, 0xF7, 0xCE, 0xF9, 0x31, 0x1C, 0x42, 0x46, 0x11, 0x43, 0x01, 0x80, 0x01, 0x36, 0x01, 0x34
    .byte 0x07, 0x2C, 0xF1, 0xDD, 0x38, 0x1C, 0x07, 0x28, 0xEA, 0xDD, 0x01, 0x20, 0xDF, 0xF7, 0xE6, 0xF9
    .byte 0x08, 0xBC, 0x98, 0x46, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x00, 0xB0, 0xFF, 0xFF
    thumb_func_start sub_804F340
sub_804F340:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    ldr r1, _0804F35C @ =0x000007D4
    adds r0, r4, r1
    ldrb r1, [r0, #0x00]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0x00
    bne _0804F388
    ldr r2, _0804F360 @ =0x00000814
    adds r0, r4, r2
    ldr r6, [r0, #0x00]
    movs r5, #0x00
    b _0804F37C
_0804F35C: .4byte 0x000007D4
_0804F360: .4byte 0x00000814
_0804F364:
    lsls r1, r5, #0x02
    ldr r2, _0804F390 @ =0x000007F4
    adds r0, r4, r2
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    movs r1, #0x00
    cmp r0, r6
    bne _0804F376
    movs r1, #0x01
_0804F376:
    bl sub_804E7EC
    adds r5, #0x01
_0804F37C:
    movs r1, #0xFE
    lsls r1, r1, #0x03
    adds r0, r4, r1
    ldrb r0, [r0, #0x00]
    cmp r5, r0
    blt _0804F364
_0804F388:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804F390: .4byte 0x000007F4
    thumb_func_start sub_804F394
sub_804F394:
    push {lr}
    ldr r1, _0804F3C0 @ =0x00000C68
    adds r3, r0, r1
    ldrh r2, [r3, #0x00]
    ldr r1, _0804F3C4 @ =0x0000FFBF
    ands r1, r2
    strh r1, [r3, #0x00]
    ldr r1, _0804F3C8 @ =0x00000C88
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    blt _0804F3BA
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0804F3CC @ =0x080655AC
    ldr r2, _0804F3D0 @ =0x06001400
    ldr r3, _0804F3D4 @ =0x800001B0
    bl dmaq_enqueue
_0804F3BA:
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804F3C0: .4byte 0x00000C68
_0804F3C4: .4byte 0x0000FFBF
_0804F3C8: .4byte 0x00000C88
_0804F3CC: .4byte 0x080655AC
_0804F3D0: .4byte 0x06001400
_0804F3D4: .4byte 0x800001B0
    thumb_func_start sub_804F3D8
sub_804F3D8:
    push {lr}
    ldr r1, _0804F3F8 @ =0x00000C68
    adds r0, r0, r1
    ldrh r2, [r0, #0x00]
    ldr r1, _0804F3FC @ =0x0000FFDF
    ands r1, r2
    strh r1, [r0, #0x00]
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0804F400 @ =0x0806524C
    ldr r2, _0804F404 @ =0x06001800
    ldr r3, _0804F408 @ =0x800001B0
    bl dmaq_enqueue
    pop {r0}
    bx r0
_0804F3F8: .4byte 0x00000C68
_0804F3FC: .4byte 0x0000FFDF
_0804F400: .4byte 0x0806524C
_0804F404: .4byte 0x06001800
_0804F408: .4byte 0x800001B0
    .byte 0xF0, 0xB5, 0x4F, 0x46, 0x46, 0x46, 0xC0, 0xB4, 0xE1, 0xF7, 0x0E, 0xF8, 0x17, 0x49, 0x18, 0x4A
    .byte 0x18, 0x4B, 0xE0, 0xF7, 0xE1, 0xFF, 0xE1, 0xF7, 0x07, 0xF8, 0x17, 0x49, 0x17, 0x4A, 0x18, 0x4B
    .byte 0xE0, 0xF7, 0xDA, 0xFF, 0x00, 0x27, 0x00, 0x20, 0x16, 0x49, 0x89, 0x46, 0x00, 0x25, 0x06, 0x1C
    .byte 0x0E, 0x36, 0x01, 0x30, 0x80, 0x46, 0x78, 0x00, 0x49, 0x46, 0x44, 0x18, 0x00, 0x20, 0x29, 0x1C
    .byte 0x32, 0x1C, 0xDF, 0xF7, 0x2F, 0xF9, 0x21, 0x88, 0x01, 0x80, 0x02, 0x34, 0x01, 0x37, 0x01, 0x35
    .byte 0x05, 0x2D, 0xF3, 0xDD, 0x40, 0x46, 0x04, 0x28, 0xE8, 0xDD, 0x01, 0x20, 0xDF, 0xF7, 0x48, 0xF9
    .byte 0x18, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x0C, 0x6C, 0x06, 0x08
    .byte 0x00, 0x28, 0x00, 0x06, 0x20, 0x01, 0x00, 0x80, 0x0C, 0x64, 0x06, 0x08, 0x00, 0x78, 0x01, 0x06
    .byte 0x00, 0x04, 0x00, 0x80, 0x6C, 0xE7, 0x0E, 0x08
    thumb_func_start sub_804F494
sub_804F494:
    push {lr}
    add sp, #-0x00C
    ldr r2, _0804F4D0 @ =0x00000814
    adds r1, r0, r2
    ldr r2, [r1, #0x00]
    ldr r1, _0804F4D4 @ =0x000007D4
    adds r0, r0, r1
    ldrb r1, [r0, #0x00]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0x00
    bne _0804F4F4
    ldr r0, _0804F4D8 @ =0x00880018
    str r0, [sp, #0x008]
    adds r0, r2, #0x0
    adds r0, #0xBC
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bge _0804F4BC
    negs r0, r0
_0804F4BC:
    lsls r0, r0, #0x05
    lsrs r1, r0, #0x10
    movs r0, #0xC0
    lsls r0, r0, #0x08
    cmp r1, r0
    bhi _0804F4DC
    movs r2, #0x80
    lsls r2, r2, #0x06
    adds r1, r1, r2
    b _0804F4E0
_0804F4D0: .4byte 0x00000814
_0804F4D4: .4byte 0x000007D4
_0804F4D8: .4byte 0x00880018
_0804F4DC:
    movs r1, #0xE0
    lsls r1, r1, #0x08
_0804F4E0:
    ldr r0, _0804F4FC @ =0x080EE764
    movs r3, #0x80
    lsls r3, r3, #0x01
    str r1, [sp, #0x000]
    movs r1, #0x00
    str r1, [sp, #0x004]
    add r1, sp, #0x008
    adds r2, r3, #0x0
    bl oam_renderCellData
_0804F4F4:
    add sp, #0x00C
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804F4FC: .4byte 0x080EE764
    thumb_func_start sub_804F500
sub_804F500:
    push {r4, r5, r6, r7, lr}
    movs r0, #0x00
    movs r7, #0x00
_0804F506:
    movs r4, #0x00
    adds r5, r0, #0x0
    adds r5, #0x0E
    adds r6, r0, #0x1
_0804F50E:
    movs r0, #0x00
    adds r1, r4, #0x0
    adds r2, r5, #0x0
    bl map_getBufferPtr2d
    strh r7, [r0, #0x00]
    adds r4, #0x01
    cmp r4, #0x05
    ble _0804F50E
    adds r0, r6, #0x0
    cmp r0, #0x04
    ble _0804F506
    movs r0, #0x01
    bl map_setBufferDirty
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_804F534
sub_804F534:
    push {r4, lr}
    ldr r4, _0804F564 @ =0x03005C80
    ldrb r1, [r4, #0x0C]
    movs r0, #0xF7
    ands r0, r1
    strb r0, [r4, #0x0C]
    movs r0, #0x78
    strb r0, [r4, #0x08]
    ldr r0, _0804F568 @ =0x03002E20
    ldr r1, _0804F56C @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    adds r1, r0, #0x0
    adds r1, #0xC6
    ldrh r1, [r1, #0x00]
    lsrs r1, r1, #0x08
    subs r1, #0x81
    bl sub_803DAB8
    strh r0, [r4, #0x0A]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804F564: .4byte 0x03005C80
_0804F568: .4byte 0x03002E20
_0804F56C: .4byte 0x00000838
    thumb_func_start sub_804F570
sub_804F570:
    ldr r1, _0804F578 @ =0x03005C80
    movs r0, #0x00
    strb r0, [r1, #0x08]
    bx lr
_0804F578: .4byte 0x03005C80
    .byte 0x70, 0xB5, 0x00, 0x06, 0x11, 0x4D, 0x03, 0x0F, 0x5A, 0x00, 0x52, 0x19, 0x12, 0x88, 0xC0, 0x26
    .byte 0x36, 0x02, 0x34, 0x1C, 0x22, 0x43, 0x0A, 0x80, 0x02, 0x31, 0xF0, 0x22, 0x12, 0x05, 0x02, 0x40
    .byte 0x12, 0x0E, 0x50, 0x00, 0x40, 0x19, 0x00, 0x88, 0x20, 0x43, 0x08, 0x80, 0x3E, 0x31, 0x0A, 0x33
    .byte 0x5B, 0x00, 0x5B, 0x19, 0x18, 0x88, 0x20, 0x43, 0x08, 0x80, 0x0A, 0x32, 0x52, 0x00, 0x52, 0x19
    .byte 0x10, 0x88, 0x20, 0x43, 0x48, 0x80, 0x70, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x7E, 0xE6, 0x0E, 0x08
    thumb_func_start sub_804F5CC
sub_804F5CC:
    push {r4, r5, r6, lr}
    lsls r0, r0, #0x18
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    ldr r6, _0804F61C @ =0x080EE67E
    lsrs r4, r0, #0x1C
    lsls r3, r4, #0x01
    adds r3, r3, r6
    ldrh r5, [r3, #0x00]
    adds r3, r2, #0x0
    orrs r3, r5
    strh r3, [r1, #0x00]
    adds r1, #0x02
    movs r3, #0xF0
    lsls r3, r3, #0x14
    ands r3, r0
    lsrs r3, r3, #0x18
    lsls r0, r3, #0x01
    adds r0, r0, r6
    ldrh r5, [r0, #0x00]
    adds r0, r2, #0x0
    orrs r0, r5
    strh r0, [r1, #0x00]
    adds r1, #0x3E
    adds r4, #0x0A
    lsls r4, r4, #0x01
    adds r4, r4, r6
    ldrh r4, [r4, #0x00]
    adds r0, r2, #0x0
    orrs r0, r4
    strh r0, [r1, #0x00]
    adds r3, #0x0A
    lsls r3, r3, #0x01
    adds r3, r3, r6
    ldrh r0, [r3, #0x00]
    orrs r2, r0
    strh r2, [r1, #0x02]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0804F61C: .4byte 0x080EE67E
    .byte 0x08, 0x80, 0x70, 0x47, 0xF0, 0xB5, 0x4F, 0x46, 0x46, 0x46, 0xC0, 0xB4, 0x00, 0x04, 0x06, 0x0C
    .byte 0x00, 0x24, 0x70, 0x00, 0x80, 0x46, 0x19, 0x4F, 0x19, 0x48, 0x81, 0x46, 0x01, 0x34, 0x00, 0x20
    .byte 0x0E, 0x21, 0x22, 0x1C, 0xDF, 0xF7, 0x34, 0xF8, 0x02, 0x1C, 0x25, 0x1C, 0x40, 0x46, 0x48, 0x44
    .byte 0x04, 0x88, 0x01, 0x23, 0x11, 0x88, 0x38, 0x1C, 0x08, 0x40, 0x20, 0x43, 0x10, 0x80, 0x02, 0x32
    .byte 0x01, 0x3B, 0x00, 0x2B, 0xF6, 0xDA, 0x2C, 0x1C, 0x01, 0x2C, 0xE7, 0xDD, 0x01, 0x20, 0xDF, 0xF7
    .byte 0x45, 0xF8, 0x0F, 0x2E, 0x00, 0xD1, 0x0B, 0x26, 0x10, 0x2E, 0x00, 0xD1, 0x0A, 0x26, 0xE0, 0xF7
    .byte 0xD9, 0xFE, 0xF1, 0x01, 0x07, 0x4A, 0x89, 0x18, 0x07, 0x4A, 0x08, 0x4B, 0xE0, 0xF7, 0xAA, 0xFE
    .byte 0x18, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0xFF, 0x0F, 0x00, 0x00
    .byte 0x5C, 0xE6, 0x0E, 0x08, 0x3C, 0xF3, 0x06, 0x08, 0x00, 0x0E, 0x00, 0x06, 0x40, 0x00, 0x00, 0x80
    .byte 0x30, 0xB5, 0x09, 0x4C, 0x42, 0x00, 0x12, 0x19, 0x12, 0x88, 0xC0, 0x25, 0x2D, 0x02, 0x2B, 0x1C
    .byte 0x1A, 0x43, 0x0A, 0x80, 0x40, 0x31, 0x0A, 0x30, 0x40, 0x00, 0x00, 0x19, 0x00, 0x88, 0x18, 0x43
    .byte 0x08, 0x80, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x7E, 0xE6, 0x0E, 0x08, 0x04, 0x48, 0x00, 0x21
    .byte 0x01, 0x60, 0x01, 0x71, 0x00, 0x22, 0xC1, 0x80, 0x02, 0x72, 0x41, 0x81, 0x02, 0x73, 0x70, 0x47
    .byte 0x80, 0x5C, 0x00, 0x03
    thumb_func_start sub_804F6F4
sub_804F6F4:
    push {r4, r5, r6, r7, lr}
    adds r3, r0, #0x0
    ldrh r5, [r3, #0x00]
    adds r3, #0x02
    ldrh r6, [r3, #0x00]
    adds r3, #0x02
    movs r2, #0x00
    cmp r2, r6
    bge _0804F734
    movs r0, #0x20
    subs r0, r0, r5
    lsls r7, r0, #0x01
_0804F70C:
    adds r4, r2, #0x1
    cmp r5, #0x00
    beq _0804F72C
    adds r0, r5, #0x0
_0804F714:
    ldrh r2, [r3, #0x00]
    cmp r2, #0x00
    beq _0804F722
    strh r2, [r1, #0x00]
    adds r3, #0x02
    adds r1, #0x02
    b _0804F726
_0804F722:
    adds r1, #0x02
    adds r3, #0x02
_0804F726:
    subs r0, #0x01
    cmp r0, #0x00
    bne _0804F714
_0804F72C:
    adds r1, r1, r7
    adds r2, r4, #0x0
    cmp r2, r6
    blt _0804F70C
_0804F734:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00, 0x00, 0x21, 0xC0, 0x68, 0x00, 0x28, 0x03, 0xD0, 0x01, 0x31, 0x00, 0x6C, 0x00, 0x28
    .byte 0xFB, 0xD1, 0x08, 0x1C, 0x70, 0x47
    thumb_func_start sub_804F750
sub_804F750:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    adds r6, r1, #0x0
    adds r4, r2, #0x0
    bl actlist_init
    adds r0, r5, #0x0
    adds r0, #0x08
    bl actlist_init
    cmp r4, #0x00
    ble _0804F780
_0804F768:
    adds r0, r6, #0x0
    movs r1, #0x01
    movs r2, #0x84
    bl frmheap_calloc
    adds r1, r0, #0x0
    adds r0, r5, #0x0
    bl actlist_insertHead
    subs r4, #0x01
    cmp r4, #0x00
    bne _0804F768
_0804F780:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00, 0x30, 0xB5, 0x05, 0x1C, 0x07, 0xE0, 0x28, 0x1C, 0x08, 0x30, 0xDF, 0xF7, 0x31, 0xFB
    .byte 0x28, 0x1C, 0x21, 0x1C, 0xDF, 0xF7, 0xFD, 0xFA, 0xAC, 0x68, 0x00, 0x2C, 0xF4, 0xD1, 0x30, 0xBC
    .byte 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    thumb_func_start sub_804F7AC
sub_804F7AC:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    bl actlist_isEmpty
    cmp r0, #0x00
    beq _0804F7E8
    ldr r5, [r4, #0x0C]
    ldr r1, [r5, #0x6C]
    cmp r1, #0x00
    beq _0804F7C6
    adds r0, r5, #0x0
    bl _call_via_r1
_0804F7C6:
    adds r0, r4, #0x0
    bl actlist_isEmpty
    cmp r0, #0x00
    beq _0804F7DE
    ldr r5, [r4, #0x0C]
    adds r4, #0x08
    adds r0, r4, #0x0
    bl actlist_takeTail
    adds r0, r4, #0x0
    b _0804F7F4
_0804F7DE:
    ldr r5, [r4, #0x04]
    adds r0, r4, #0x0
    bl actlist_takeTail
    b _0804F7F0
_0804F7E8:
    ldr r5, [r4, #0x04]
    adds r0, r4, #0x0
    bl actlist_takeTail
_0804F7F0:
    adds r0, r4, #0x0
    adds r0, #0x08
_0804F7F4:
    adds r1, r5, #0x0
    bl actlist_insertHead
    adds r0, r5, #0x0
    bl sub_80437D4
    adds r0, r5, #0x0
    pop {r4, r5}
    pop {r1}
    bx r1
    thumb_func_start sub_804F808
sub_804F808:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    adds r5, r1, #0x0
    adds r0, #0x08
    bl actlist_remove
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl actlist_insertHead
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_804F824
sub_804F824:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    adds r6, r1, #0x0
    adds r4, r2, #0x0
    bl actlist_init
    adds r0, r5, #0x0
    adds r0, #0x08
    bl actlist_init
    cmp r4, #0x00
    ble _0804F854
_0804F83C:
    adds r0, r6, #0x0
    movs r1, #0x01
    movs r2, #0x70
    bl frmheap_calloc
    adds r1, r0, #0x0
    adds r0, r5, #0x0
    bl actlist_insertHead
    subs r4, #0x01
    cmp r4, #0x00
    bne _0804F83C
_0804F854:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_804F85C
sub_804F85C:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    bl actlist_isEmpty
    cmp r0, #0x00
    beq _0804F884
    adds r4, r5, #0x0
    adds r4, #0x08
    adds r0, r4, #0x0
    bl actlist_isEmpty
    cmp r0, #0x00
    beq _0804F87A
    movs r0, #0x00
    b _0804F89A
_0804F87A:
    ldr r6, [r5, #0x0C]
    adds r0, r4, #0x0
    bl actlist_takeTail
    b _0804F890
_0804F884:
    ldr r6, [r5, #0x00]
    adds r0, r5, #0x0
    bl actlist_takeHead
    adds r4, r5, #0x0
    adds r4, #0x08
_0804F890:
    adds r0, r4, #0x0
    adds r1, r6, #0x0
    bl actlist_insertHead
    adds r0, r6, #0x0
_0804F89A:
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .byte 0x30, 0xB5, 0x04, 0x1C, 0x0D, 0x1C, 0x08, 0x30, 0xDF, 0xF7, 0xC2, 0xFA, 0x20, 0x1C, 0x29, 0x1C
    .byte 0xDF, 0xF7, 0x72, 0xFA, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    thumb_func_start sub_804F8BC
sub_804F8BC:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    ldr r4, [r5, #0x54]
    adds r3, r4, #0x0
    adds r3, #0xA4
    ldrh r1, [r3, #0x00]
    ldr r0, _0804F900 @ =0x0000FF7F
    ands r0, r1
    movs r2, #0x00
    ldr r1, _0804F904 @ =0x0000FEFF
    ands r0, r1
    strh r0, [r3, #0x00]
    adds r0, r5, #0x0
    adds r0, #0x4C
    strh r2, [r0, #0x00]
    str r2, [r5, #0x60]
    movs r0, #0x80
    lsls r0, r0, #0x01
    strh r0, [r5, #0x24]
    adds r0, #0x88
    adds r2, r4, r0
    ldr r0, [r2, #0x00]
    movs r1, #0x08
    orrs r0, r1
    str r0, [r2, #0x00]
    ldr r0, _0804F908 @ =0x03002E20
    ldr r1, _0804F90C @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _0804F914
    ldr r0, _0804F910 @ =0x080EF480
    b _0804F916
    .byte 0x00, 0x00
_0804F900: .4byte 0x0000FF7F
_0804F904: .4byte 0x0000FEFF
_0804F908: .4byte 0x03002E20
_0804F90C: .4byte 0x00000838
_0804F910: .4byte 0x080EF480
_0804F914:
    ldr r0, _0804F920 @ =0x080EF538
_0804F916:
    str r0, [r5, #0x5C]
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804F920: .4byte 0x080EF538
    thumb_func_start sub_804F924
sub_804F924:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r3, [r4, #0x54]
    adds r2, r3, #0x0
    adds r2, #0xA4
    ldrh r1, [r2, #0x00]
    ldr r0, _0804F95C @ =0x0000FFEF
    ands r0, r1
    movs r1, #0x00
    strh r0, [r2, #0x00]
    movs r0, #0x78
    strh r0, [r4, #0x20]
    subs r0, #0x88
    strh r0, [r4, #0x22]
    ldr r0, _0804F960 @ =0x00000105
    strh r0, [r4, #0x24]
    adds r0, r4, #0x0
    adds r0, #0x4C
    strh r1, [r0, #0x00]
    str r1, [r4, #0x60]
    ldr r0, _0804F964 @ =0x03002E20
    ldr r1, _0804F968 @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r3, r0
    bne _0804F970
    ldr r0, _0804F96C @ =0x080EF900
    b _0804F972
_0804F95C: .4byte 0x0000FFEF
_0804F960: .4byte 0x00000105
_0804F964: .4byte 0x03002E20
_0804F968: .4byte 0x00000838
_0804F96C: .4byte 0x080EF900
_0804F970:
    ldr r0, _0804F97C @ =0x080EF938
_0804F972:
    str r0, [r4, #0x5C]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804F97C: .4byte 0x080EF938
    thumb_func_start sub_804F980
sub_804F980:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    ldr r4, [r5, #0x54]
    adds r2, r4, #0x0
    adds r2, #0xA4
    ldrh r1, [r2, #0x00]
    ldr r0, _0804F9BC @ =0x0000FFDF
    ands r0, r1
    movs r3, #0x00
    ldr r1, _0804F9C0 @ =0x0000FBFF
    ands r0, r1
    strh r0, [r2, #0x00]
    movs r0, #0x78
    strh r0, [r5, #0x20]
    subs r0, #0x88
    strh r0, [r5, #0x22]
    ldr r0, _0804F9C4 @ =0x00000105
    strh r0, [r5, #0x24]
    adds r0, r5, #0x0
    adds r0, #0x4C
    strh r3, [r0, #0x00]
    str r3, [r5, #0x60]
    ldr r0, _0804F9C8 @ =0x03002E20
    ldr r1, _0804F9CC @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _0804F9D4
    ldr r0, _0804F9D0 @ =0x080EF950
    b _0804F9D6
_0804F9BC: .4byte 0x0000FFDF
_0804F9C0: .4byte 0x0000FBFF
_0804F9C4: .4byte 0x00000105
_0804F9C8: .4byte 0x03002E20
_0804F9CC: .4byte 0x00000838
_0804F9D0: .4byte 0x080EF950
_0804F9D4:
    ldr r0, _0804F9E0 @ =0x080EF988
_0804F9D6:
    str r0, [r5, #0x5C]
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804F9E0: .4byte 0x080EF988
    .byte 0x00, 0xB5, 0x02, 0x1C, 0x53, 0x6D, 0x22, 0x21, 0x50, 0x5E, 0x02, 0x30, 0x00, 0x04, 0x00, 0x14
    .byte 0x00, 0x21, 0x50, 0x84, 0x57, 0x28, 0x2B, 0xDD, 0x58, 0x20, 0x50, 0x84, 0x10, 0x1C, 0x4C, 0x30
    .byte 0x01, 0x80, 0x11, 0x66, 0x09, 0x48, 0x0A, 0x49, 0x40, 0x18, 0x51, 0x6D, 0x00, 0x68, 0x81, 0x42
    .byte 0x1C, 0xD1, 0x08, 0x48, 0xD0, 0x65, 0x18, 0x1C, 0x72, 0x30, 0x00, 0x68, 0x00, 0x07, 0x00, 0x0F
    .byte 0x0B, 0x28, 0x09, 0xD0, 0x0D, 0x28, 0x0C, 0xD0, 0x12, 0xE0, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03
    .byte 0x38, 0x08, 0x00, 0x00, 0x10, 0xF8, 0x0E, 0x08, 0x18, 0x1C, 0x0C, 0x21, 0xED, 0xF7, 0xE8, 0xFB
    .byte 0x06, 0xE0, 0x18, 0x1C, 0x0E, 0x21, 0xED, 0xF7, 0xE3, 0xFB, 0x01, 0xE0, 0x01, 0x48, 0xD0, 0x65
    .byte 0x01, 0xBC, 0x00, 0x47, 0x50, 0xF8, 0x0E, 0x08
    thumb_func_start sub_804FA5C
sub_804FA5C:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    ldr r5, [r4, #0x54]
    adds r2, r5, #0x0
    adds r2, #0xA4
    ldrh r1, [r2, #0x00]
    ldr r0, _0804FAB4 @ =0x0000FFBF
    ands r0, r1
    movs r3, #0x00
    ldr r1, _0804FAB8 @ =0x0000EFFF
    ands r0, r1
    strh r0, [r2, #0x00]
    movs r0, #0x78
    strh r0, [r4, #0x20]
    subs r0, #0xF8
    strh r0, [r4, #0x22]
    ldr r0, _0804FABC @ =0x00000105
    strh r0, [r4, #0x24]
    adds r0, r4, #0x0
    adds r0, #0x4C
    strh r3, [r0, #0x00]
    ldr r0, _0804FAC0 @ =0x08050D4D
    str r0, [r4, #0x60]
    ldr r0, _0804FAC4 @ =0x03002E20
    ldr r1, _0804FAC8 @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r5, r0
    bne _0804FAD0
    ldr r0, _0804FACC @ =0x080EF9A0
    str r0, [r4, #0x5C]
    adds r0, r5, #0x0
    adds r0, #0x72
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x1C
    lsrs r0, r0, #0x1C
    cmp r0, #0x0E
    bne _0804FAD4
    adds r0, r5, #0x0
    movs r1, #0x02
    bl sub_803D950
    b _0804FAD4
    .byte 0x00, 0x00
_0804FAB4: .4byte 0x0000FFBF
_0804FAB8: .4byte 0x0000EFFF
_0804FABC: .4byte 0x00000105
_0804FAC0: .4byte sub_8050D4C
_0804FAC4: .4byte 0x03002E20
_0804FAC8: .4byte 0x00000838
_0804FACC: .4byte 0x080EF9A0
_0804FAD0:
    ldr r0, _0804FADC @ =0x080EF9D0
    str r0, [r4, #0x5C]
_0804FAD4:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804FADC: .4byte 0x080EF9D0
    thumb_func_start sub_804FAE0
sub_804FAE0:
    push {r4, r5, r6, lr}
    adds r6, r0, #0x0
    ldr r4, [r6, #0x54]
    movs r5, #0x78
    movs r1, #0x00
    strh r5, [r6, #0x20]
    movs r0, #0x32
    negs r0, r0
    strh r0, [r6, #0x22]
    ldr r0, _0804FB44 @ =0x00000105
    strh r0, [r6, #0x24]
    adds r0, r6, #0x0
    adds r0, #0x4C
    strh r1, [r0, #0x00]
    ldr r0, [r4, #0x48]
    movs r1, #0x88
    lsls r1, r1, #0x04
    orrs r0, r1
    str r0, [r4, #0x48]
    ldr r1, _0804FB48 @ =0x080EFAC0
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
    movs r1, #0xFB
    strh r1, [r0, #0x24]
    str r0, [r6, #0x74]
    ldr r1, [r6, #0x54]
    str r1, [r0, #0x54]
    strh r5, [r0, #0x20]
    movs r2, #0x22
    ldsh r1, [r6, r2]
    adds r1, #0x28
    strh r1, [r0, #0x22]
    bl dmaq_getVBlankDmaQueue
    ldr r1, _0804FB4C @ =0x0806CF0C
    ldr r2, _0804FB50 @ =0x06013600
    ldr r3, _0804FB54 @ =0x80000080
    bl dmaq_enqueue
    ldr r0, _0804FB58 @ =0x03002E20
    ldr r1, _0804FB5C @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _0804FB64
    ldr r0, _0804FB60 @ =0x080EFA40
    b _0804FB66
    .byte 0x00, 0x00
_0804FB44: .4byte 0x00000105
_0804FB48: .4byte 0x080EFAC0
_0804FB4C: .4byte 0x0806CF0C
_0804FB50: .4byte 0x06013600
_0804FB54: .4byte 0x80000080
_0804FB58: .4byte 0x03002E20
_0804FB5C: .4byte 0x00000838
_0804FB60: .4byte 0x080EFA40
_0804FB64:
    ldr r0, _0804FB70 @ =0x080EFA78
_0804FB66:
    str r0, [r6, #0x5C]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804FB70: .4byte 0x080EFA78
    thumb_func_start sub_804FB74
sub_804FB74:
    push {r4, r5, r6, lr}
    adds r2, r0, #0x0
    ldr r5, [r2, #0x74]
    adds r3, r2, #0x0
    adds r3, #0x64
    ldrb r1, [r3, #0x00]
    movs r6, #0x02
    movs r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    beq _0804FB8E
    movs r0, #0x00
    str r0, [r2, #0x70]
_0804FB8E:
    ldr r4, [r2, #0x70]
    adds r4, #0x01
    cmp r4, #0x40
    bgt _0804FBC8
    ldr r1, _0804FBC4 @ =0x080E645C
    lsls r0, r4, #0x18
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0804FBA2
    adds r0, #0x3F
_0804FBA2:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x02
    adds r0, r0, r1
    lsls r0, r0, #0x04
    asrs r0, r0, #0x0F
    subs r0, #0x32
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    strh r0, [r2, #0x22]
    adds r0, #0x28
    strh r0, [r5, #0x22]
    b _0804FBEE
    .byte 0x00, 0x00
_0804FBC4: .4byte 0x080E645C
_0804FBC8:
    adds r0, r2, #0x0
    adds r0, #0x4C
    movs r1, #0x00
    strh r1, [r0, #0x00]
    ldr r0, _0804FBF8 @ =0x080EFA98
    str r0, [r2, #0x5C]
    ldrb r0, [r3, #0x00]
    orrs r0, r6
    strb r0, [r3, #0x00]
    adds r0, r5, #0x0
    adds r0, #0x4C
    strh r1, [r0, #0x00]
    ldr r0, _0804FBFC @ =0x080EFAE0
    str r0, [r5, #0x5C]
    adds r1, r5, #0x0
    adds r1, #0x64
    ldrb r0, [r1, #0x00]
    orrs r0, r6
    strb r0, [r1, #0x00]
_0804FBEE:
    str r4, [r2, #0x70]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804FBF8: .4byte 0x080EFA98
_0804FBFC: .4byte 0x080EFAE0
    thumb_func_start sub_804FC00
sub_804FC00:
    adds r2, r0, #0x0
    adds r0, #0x64
    ldrb r1, [r0, #0x00]
    movs r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    beq _0804FC12
    movs r0, #0x00
    str r0, [r2, #0x70]
_0804FC12:
    ldr r3, [r2, #0x70]
    adds r3, #0x01
    cmp r3, #0x40
    bgt _0804FC44
    ldr r1, _0804FC40 @ =0x080E645C
    lsls r0, r3, #0x18
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0804FC26
    adds r0, #0x3F
_0804FC26:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x02
    adds r0, r0, r1
    lsls r0, r0, #0x04
    negs r0, r0
    asrs r0, r0, #0x0F
    adds r0, #0x1E
    strh r0, [r2, #0x22]
    b _0804FC56
_0804FC40: .4byte 0x080E645C
_0804FC44:
    adds r1, r2, #0x0
    adds r1, #0x4C
    movs r0, #0x00
    strh r0, [r1, #0x00]
    str r0, [r2, #0x60]
    ldrh r1, [r2, #0x34]
    ldr r0, _0804FC5C @ =0x0000FFFE
    ands r0, r1
    strh r0, [r2, #0x34]
_0804FC56:
    str r3, [r2, #0x70]
    bx lr
    .byte 0x00, 0x00
_0804FC5C: .4byte 0x0000FFFE
    thumb_func_start sub_804FC60
sub_804FC60:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    add sp, #-0x010
    adds r5, r0, #0x0
    adds r0, #0x64
    ldrb r1, [r0, #0x00]
    movs r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    beq _0804FC7A
    movs r0, #0x00
    str r0, [r5, #0x70]
_0804FC7A:
    ldr r4, [r5, #0x70]
    adds r4, #0x01
    cmp r4, #0x1E
    bgt _0804FCDC
    lsls r0, r4, #0x11
    muls r0, r4
    movs r1, #0x96
    lsls r1, r1, #0x03
    bl __divsi3
    ldr r2, _0804FCD4 @ =0x080E645C
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0804FC9A
    adds r0, #0x3F
_0804FC9A:
    asrs r1, r0, #0x06
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r1
    ldr r1, _0804FCD8 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    movs r0, #0x1E
    subs r0, r0, r4
    muls r1, r0
    muls r0, r1
    movs r1, #0xE1
    lsls r1, r1, #0x02
    bl __divsi3
    adds r1, r0, #0x0
    cmp r1, #0x00
    bge _0804FCC4
    negs r1, r1
_0804FCC4:
    lsls r1, r1, #0x07
    asrs r1, r1, #0x0F
    movs r0, #0x80
    subs r0, r0, r1
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    b _0804FCDE
    .byte 0x00, 0x00
_0804FCD4: .4byte 0x080E645C
_0804FCD8: .4byte 0x000003FF
_0804FCDC:
    movs r6, #0x80
_0804FCDE:
    str r4, [r5, #0x70]
    ldr r4, _0804FD58 @ =0x03002E20
    ldr r0, _0804FD5C @ =0x00000848
    adds r4, r4, r0
    ldr r5, [r5, #0x54]
    adds r0, r5, #0x0
    bl sub_803CA78
    adds r2, r0, #0x0
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    adds r0, r5, #0x0
    adds r1, r4, #0x0
    bl sub_803CD50
    mov r8, r0
    ldrh r4, [r5, #0x24]
    ldr r0, _0804FD60 @ =0x00007FFF
    str r0, [sp, #0x008]
    movs r0, #0x01
    str r0, [sp, #0x00C]
    adds r0, r5, #0x0
    bl sub_8037AB0
    lsls r4, r4, #0x10
    asrs r4, r4, #0x10
    adds r0, r4, r0
    lsls r1, r6, #0x10
    asrs r1, r1, #0x0F
    adds r7, r0, r1
    adds r6, r5, #0x0
    adds r6, #0x20
    adds r0, r6, #0x0
    adds r1, r4, #0x0
    bl sub_802FF58
    cmp r0, #0x00
    beq _0804FD40
    movs r2, #0x80
    lsls r2, r2, #0x01
    movs r0, #0x00
    str r0, [sp, #0x000]
    add r0, sp, #0x008
    str r0, [sp, #0x004]
    mov r0, r8
    adds r1, r6, #0x0
    adds r3, r7, #0x0
    bl oam_renderCellData
_0804FD40:
    ldrh r0, [r5, #0x34]
    ldr r1, _0804FD64 @ =0x0000FFFE
    ands r1, r0
    ldr r0, _0804FD68 @ =0x0000FFFD
    ands r1, r0
    strh r1, [r5, #0x34]
    add sp, #0x010
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0804FD58: .4byte 0x03002E20
_0804FD5C: .4byte 0x00000848
_0804FD60: .4byte 0x00007FFF
_0804FD64: .4byte 0x0000FFFE
_0804FD68: .4byte 0x0000FFFD
    thumb_func_start sub_804FD6C
sub_804FD6C:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    adds r0, #0x64
    ldrb r1, [r0, #0x00]
    movs r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    beq _0804FD8E
    movs r0, #0x00
    str r0, [r5, #0x70]
    ldr r1, _0804FDE8 @ =0x080EFBC8
    movs r2, #0x00
    bl sub_8030224
    str r0, [r5, #0x74]
    ldr r1, [r5, #0x54]
    str r1, [r0, #0x54]
_0804FD8E:
    ldr r4, [r5, #0x70]
    adds r4, #0x01
    cmp r4, #0x28
    bgt _0804FDF4
    lsls r0, r4, #0x11
    muls r0, r4
    movs r6, #0xC8
    lsls r6, r6, #0x03
    adds r1, r6, #0x0
    bl __divsi3
    ldr r2, _0804FDEC @ =0x080E645C
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0804FDB0
    adds r0, #0x3F
_0804FDB0:
    asrs r1, r0, #0x06
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r1
    ldr r1, _0804FDF0 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    movs r0, #0x28
    subs r0, r0, r4
    muls r1, r0
    muls r0, r1
    adds r1, r6, #0x0
    bl __divsi3
    adds r1, r0, #0x0
    cmp r1, #0x00
    bge _0804FDD8
    negs r1, r1
_0804FDD8:
    movs r0, #0x46
    muls r1, r0
    asrs r1, r1, #0x0F
    movs r0, #0x8C
    subs r0, r0, r1
    strh r0, [r5, #0x22]
    b _0804FE00
    .byte 0x00, 0x00
_0804FDE8: .4byte 0x080EFBC8
_0804FDEC: .4byte 0x080E645C
_0804FDF0: .4byte 0x000003FF
_0804FDF4:
    adds r0, r5, #0x0
    adds r0, #0x4C
    movs r1, #0x00
    strh r1, [r0, #0x00]
    ldr r0, _0804FE08 @ =0x080EFB20
    str r0, [r5, #0x5C]
_0804FE00:
    str r4, [r5, #0x70]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0804FE08: .4byte 0x080EFB20
    thumb_func_start sub_804FE0C
sub_804FE0C:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    adds r0, #0x64
    ldrb r1, [r0, #0x00]
    movs r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    beq _0804FE20
    movs r0, #0x00
    str r0, [r5, #0x70]
_0804FE20:
    ldr r6, [r5, #0x70]
    adds r6, #0x01
    cmp r6, #0x40
    bgt _0804FE4C
    lsls r1, r6, #0x02
    adds r1, r1, r6
    lsls r0, r1, #0x04
    subs r0, r0, r1
    lsls r0, r0, #0x01
    negs r0, r0
    muls r0, r6
    cmp r0, #0x00
    bge _0804FE3E
    ldr r1, _0804FE48 @ =0x00000FFF
    adds r0, r0, r1
_0804FE3E:
    asrs r0, r0, #0x0C
    adds r0, #0x8C
    strh r0, [r5, #0x22]
    b _0804FE8A
    .byte 0x00, 0x00
_0804FE48: .4byte 0x00000FFF
_0804FE4C:
    ldr r1, _0804FE94 @ =0x080EFB50
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
    ldr r2, [r5, #0x54]
    str r2, [r0, #0x54]
    movs r3, #0x20
    ldsh r1, [r2, r3]
    movs r4, #0x00
    strh r1, [r0, #0x20]
    movs r3, #0x22
    ldsh r1, [r2, r3]
    strh r1, [r0, #0x22]
    movs r1, #0xFB
    strh r1, [r0, #0x24]
    adds r0, r5, #0x0
    adds r0, #0x4C
    strh r4, [r0, #0x00]
    ldr r3, _0804FE98 @ =0x080EFB48
    str r3, [r5, #0x5C]
    ldr r1, [r5, #0x74]
    adds r0, r1, #0x0
    adds r0, #0x4C
    strh r4, [r0, #0x00]
    str r3, [r1, #0x5C]
    movs r0, #0xC2
    lsls r0, r0, #0x01
    adds r2, r2, r0
    ldr r0, _0804FE9C @ =0x00009001
    str r0, [r2, #0x00]
_0804FE8A:
    str r6, [r5, #0x70]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0804FE94: .4byte 0x080EFB50
_0804FE98: .4byte 0x080EFB48
_0804FE9C: .4byte 0x00009001
    thumb_func_start sub_804FEA0
sub_804FEA0:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r0, [r4, #0x68]
    cmp r0, #0x1C
    bls _0804FEAC
    b _08050394
_0804FEAC:
    lsls r0, r0, #0x02
    ldr r1, _0804FEB8 @ =0x0804FEBC
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_0804FEB8: .4byte 0x0804FEBC
    .byte 0x30, 0xFF, 0x04, 0x08, 0x58, 0xFF, 0x04, 0x08, 0x80, 0xFF, 0x04, 0x08, 0xA8, 0xFF, 0x04, 0x08
    .byte 0xD0, 0xFF, 0x04, 0x08, 0xF8, 0xFF, 0x04, 0x08, 0x20, 0x00, 0x05, 0x08, 0x48, 0x00, 0x05, 0x08
    .byte 0x70, 0x00, 0x05, 0x08, 0x98, 0x00, 0x05, 0x08, 0xC0, 0x00, 0x05, 0x08, 0x20, 0x01, 0x05, 0x08
    .byte 0x48, 0x01, 0x05, 0x08, 0x70, 0x01, 0x05, 0x08, 0x98, 0x01, 0x05, 0x08, 0xC0, 0x01, 0x05, 0x08
    .byte 0xCC, 0x01, 0x05, 0x08, 0xD8, 0x01, 0x05, 0x08, 0xE4, 0x01, 0x05, 0x08, 0x00, 0x02, 0x05, 0x08
    .byte 0x28, 0x02, 0x05, 0x08, 0x50, 0x02, 0x05, 0x08, 0x78, 0x02, 0x05, 0x08, 0xA0, 0x02, 0x05, 0x08
    .byte 0xC8, 0x02, 0x05, 0x08, 0xF0, 0x02, 0x05, 0x08, 0x18, 0x03, 0x05, 0x08, 0x40, 0x03, 0x05, 0x08
    .byte 0x78, 0x03, 0x05, 0x08, 0xE0, 0xF7, 0x80, 0xFA, 0x04, 0x49, 0x05, 0x4A, 0x05, 0x4B, 0xE0, 0xF7
    .byte 0x53, 0xFA, 0xE0, 0xF7, 0x79, 0xFA, 0x04, 0x49, 0x06, 0xE2, 0x00, 0x00, 0x8C, 0x8F, 0x06, 0x08
    .byte 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80, 0x8C, 0x93, 0x06, 0x08, 0xE0, 0xF7, 0x6C, 0xFA
    .byte 0x04, 0x49, 0x05, 0x4A, 0x05, 0x4B, 0xE0, 0xF7, 0x3F, 0xFA, 0xE0, 0xF7, 0x65, 0xFA, 0x04, 0x49
    .byte 0xF2, 0xE1, 0x00, 0x00, 0x8C, 0x91, 0x06, 0x08, 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80
    .byte 0x8C, 0x94, 0x06, 0x08, 0xE0, 0xF7, 0x58, 0xFA, 0x04, 0x49, 0x05, 0x4A, 0x05, 0x4B, 0xE0, 0xF7
    .byte 0x2B, 0xFA, 0xE0, 0xF7, 0x51, 0xFA, 0x04, 0x49, 0xDE, 0xE1, 0x00, 0x00, 0x8C, 0x8F, 0x06, 0x08
    .byte 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80, 0x8C, 0x94, 0x06, 0x08, 0xE0, 0xF7, 0x44, 0xFA
    .byte 0x04, 0x49, 0x05, 0x4A, 0x05, 0x4B, 0xE0, 0xF7, 0x17, 0xFA, 0xE0, 0xF7, 0x3D, 0xFA, 0x04, 0x49
    .byte 0xCA, 0xE1, 0x00, 0x00, 0x8C, 0x91, 0x06, 0x08, 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80
    .byte 0x8C, 0x95, 0x06, 0x08, 0xE0, 0xF7, 0x30, 0xFA, 0x04, 0x49, 0x05, 0x4A, 0x05, 0x4B, 0xE0, 0xF7
    .byte 0x03, 0xFA, 0xE0, 0xF7, 0x29, 0xFA, 0x04, 0x49, 0xB6, 0xE1, 0x00, 0x00, 0x8C, 0x8F, 0x06, 0x08
    .byte 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80, 0x8C, 0x95, 0x06, 0x08, 0xE0, 0xF7, 0x1C, 0xFA
    .byte 0x04, 0x49, 0x05, 0x4A, 0x05, 0x4B, 0xE0, 0xF7, 0xEF, 0xF9, 0xE0, 0xF7, 0x15, 0xFA, 0x04, 0x49
    .byte 0xA2, 0xE1, 0x00, 0x00, 0x8C, 0x91, 0x06, 0x08, 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80
    .byte 0x8C, 0x96, 0x06, 0x08, 0xE0, 0xF7, 0x08, 0xFA, 0x04, 0x49, 0x05, 0x4A, 0x05, 0x4B, 0xE0, 0xF7
    .byte 0xDB, 0xF9, 0xE0, 0xF7, 0x01, 0xFA, 0x04, 0x49, 0x8E, 0xE1, 0x00, 0x00, 0x8C, 0x8F, 0x06, 0x08
    .byte 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80, 0x8C, 0x96, 0x06, 0x08, 0xE0, 0xF7, 0xF4, 0xF9
    .byte 0x04, 0x49, 0x05, 0x4A, 0x05, 0x4B, 0xE0, 0xF7, 0xC7, 0xF9, 0xE0, 0xF7, 0xED, 0xF9, 0x04, 0x49
    .byte 0x7A, 0xE1, 0x00, 0x00, 0x8C, 0x97, 0x06, 0x08, 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80
    .byte 0x8C, 0x9D, 0x06, 0x08, 0xE0, 0xF7, 0xE0, 0xF9, 0x04, 0x49, 0x05, 0x4A, 0x05, 0x4B, 0xE0, 0xF7
    .byte 0xB3, 0xF9, 0xE0, 0xF7, 0xD9, 0xF9, 0x04, 0x49, 0x66, 0xE1, 0x00, 0x00, 0x8C, 0x99, 0x06, 0x08
    .byte 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80, 0x8C, 0x9D, 0x06, 0x08, 0xE0, 0xF7, 0xCC, 0xF9
    .byte 0x04, 0x49, 0x05, 0x4A, 0x05, 0x4B, 0xE0, 0xF7, 0x9F, 0xF9, 0xE0, 0xF7, 0xC5, 0xF9, 0x04, 0x49
    .byte 0x52, 0xE1, 0x00, 0x00, 0x8C, 0x99, 0x06, 0x08, 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80
    .byte 0x8C, 0x9E, 0x06, 0x08, 0xE0, 0xF7, 0xB8, 0xF9, 0x08, 0x49, 0x09, 0x4A, 0x09, 0x4B, 0xE0, 0xF7
    .byte 0x8B, 0xF9, 0x60, 0x6D, 0xC6, 0x30, 0x00, 0x88, 0x00, 0x0A, 0x7F, 0x38, 0x03, 0x28, 0x15, 0xD0
    .byte 0x03, 0x28, 0x09, 0xDC, 0x02, 0x28, 0x0A, 0xD0, 0x56, 0xE1, 0x00, 0x00, 0x8C, 0x9B, 0x06, 0x08
    .byte 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80, 0x04, 0x28, 0x0D, 0xD0, 0x4C, 0xE1, 0xE0, 0xF7
    .byte 0x9B, 0xF9, 0x01, 0x49, 0x28, 0xE1, 0x00, 0x00, 0x8C, 0x9F, 0x06, 0x08, 0xE0, 0xF7, 0x94, 0xF9
    .byte 0x00, 0x49, 0x21, 0xE1, 0x8C, 0xA0, 0x06, 0x08, 0xE0, 0xF7, 0x8E, 0xF9, 0x00, 0x49, 0x1B, 0xE1
    .byte 0x8C, 0xA1, 0x06, 0x08, 0xE0, 0xF7, 0x88, 0xF9, 0x04, 0x49, 0x05, 0x4A, 0x05, 0x4B, 0xE0, 0xF7
    .byte 0x5B, 0xF9, 0xE0, 0xF7, 0x81, 0xF9, 0x04, 0x49, 0x0E, 0xE1, 0x00, 0x00, 0x8C, 0x97, 0x06, 0x08
    .byte 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80, 0x8C, 0x9D, 0x06, 0x08, 0xE0, 0xF7, 0x74, 0xF9
    .byte 0x04, 0x49, 0x05, 0x4A, 0x05, 0x4B, 0xE0, 0xF7, 0x47, 0xF9, 0xE0, 0xF7, 0x6D, 0xF9, 0x04, 0x49
    .byte 0xFA, 0xE0, 0x00, 0x00, 0x8C, 0x99, 0x06, 0x08, 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80
    .byte 0x8C, 0x9D, 0x06, 0x08, 0xE0, 0xF7, 0x60, 0xF9, 0x04, 0x49, 0x05, 0x4A, 0x05, 0x4B, 0xE0, 0xF7
    .byte 0x33, 0xF9, 0xE0, 0xF7, 0x59, 0xF9, 0x04, 0x49, 0xE6, 0xE0, 0x00, 0x00, 0x8C, 0x99, 0x06, 0x08
    .byte 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80, 0x8C, 0xA2, 0x06, 0x08, 0xE0, 0xF7, 0x4C, 0xF9
    .byte 0x04, 0x49, 0x05, 0x4A, 0x05, 0x4B, 0xE0, 0xF7, 0x1F, 0xF9, 0xE0, 0xF7, 0x45, 0xF9, 0x04, 0x49
    .byte 0xD2, 0xE0, 0x00, 0x00, 0x8C, 0x9B, 0x06, 0x08, 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80
    .byte 0x8C, 0xA3, 0x06, 0x08, 0xE0, 0xF7, 0x38, 0xF9, 0x00, 0x49, 0x10, 0xE0, 0x8C, 0xA4, 0x06, 0x08
    .byte 0xE0, 0xF7, 0x32, 0xF9, 0x00, 0x49, 0x0A, 0xE0, 0x8C, 0xA7, 0x06, 0x08, 0xE0, 0xF7, 0x2C, 0xF9
    .byte 0x00, 0x49, 0x04, 0xE0, 0x8C, 0xAA, 0x06, 0x08, 0xE0, 0xF7, 0x26, 0xF9, 0x02, 0x49, 0x03, 0x4A
    .byte 0x03, 0x4B, 0xE0, 0xF7, 0xF9, 0xF8, 0xCF, 0xE0, 0x8C, 0xAD, 0x06, 0x08, 0x00, 0x28, 0x01, 0x06
    .byte 0x80, 0x01, 0x00, 0x80, 0xE0, 0xF7, 0x18, 0xF9, 0x04, 0x49, 0x05, 0x4A, 0x05, 0x4B, 0xE0, 0xF7
    .byte 0xEB, 0xF8, 0xE0, 0xF7, 0x11, 0xF9, 0x04, 0x49, 0x9E, 0xE0, 0x00, 0x00, 0x8C, 0xB1, 0x06, 0x08
    .byte 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80, 0x8C, 0xB0, 0x06, 0x08, 0xE0, 0xF7, 0x04, 0xF9
    .byte 0x04, 0x49, 0x05, 0x4A, 0x05, 0x4B, 0xE0, 0xF7, 0xD7, 0xF8, 0xE0, 0xF7, 0xFD, 0xF8, 0x04, 0x49
    .byte 0x8A, 0xE0, 0x00, 0x00, 0x8C, 0xB3, 0x06, 0x08, 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80
    .byte 0x8C, 0xB0, 0x06, 0x08, 0xE0, 0xF7, 0xF0, 0xF8, 0x04, 0x49, 0x05, 0x4A, 0x05, 0x4B, 0xE0, 0xF7
    .byte 0xC3, 0xF8, 0xE0, 0xF7, 0xE9, 0xF8, 0x04, 0x49, 0x76, 0xE0, 0x00, 0x00, 0x8C, 0xB5, 0x06, 0x08
    .byte 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80, 0x8C, 0xBB, 0x06, 0x08, 0xE0, 0xF7, 0xDC, 0xF8
    .byte 0x04, 0x49, 0x05, 0x4A, 0x05, 0x4B, 0xE0, 0xF7, 0xAF, 0xF8, 0xE0, 0xF7, 0xD5, 0xF8, 0x04, 0x49
    .byte 0x62, 0xE0, 0x00, 0x00, 0x8C, 0xB7, 0x06, 0x08, 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80
    .byte 0x8C, 0xBC, 0x06, 0x08, 0xE0, 0xF7, 0xC8, 0xF8, 0x04, 0x49, 0x05, 0x4A, 0x05, 0x4B, 0xE0, 0xF7
    .byte 0x9B, 0xF8, 0xE0, 0xF7, 0xC1, 0xF8, 0x04, 0x49, 0x4E, 0xE0, 0x00, 0x00, 0x8C, 0xB7, 0x06, 0x08
    .byte 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80, 0x8C, 0xBD, 0x06, 0x08, 0xE0, 0xF7, 0xB4, 0xF8
    .byte 0x04, 0x49, 0x05, 0x4A, 0x05, 0x4B, 0xE0, 0xF7, 0x87, 0xF8, 0xE0, 0xF7, 0xAD, 0xF8, 0x04, 0x49
    .byte 0x3A, 0xE0, 0x00, 0x00, 0x8C, 0xB7, 0x06, 0x08, 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80
    .byte 0x8C, 0xBE, 0x06, 0x08, 0xE0, 0xF7, 0xA0, 0xF8, 0x04, 0x49, 0x05, 0x4A, 0x05, 0x4B, 0xE0, 0xF7
    .byte 0x73, 0xF8, 0xE0, 0xF7, 0x99, 0xF8, 0x04, 0x49, 0x26, 0xE0, 0x00, 0x00, 0x8C, 0xB5, 0x06, 0x08
    .byte 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80, 0x8C, 0xBF, 0x06, 0x08, 0xE0, 0xF7, 0x8C, 0xF8
    .byte 0x04, 0x49, 0x05, 0x4A, 0x05, 0x4B, 0xE0, 0xF7, 0x5F, 0xF8, 0xE0, 0xF7, 0x85, 0xF8, 0x04, 0x49
    .byte 0x12, 0xE0, 0x00, 0x00, 0x8C, 0xB9, 0x06, 0x08, 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80
    .byte 0x8C, 0xC0, 0x06, 0x08, 0xE0, 0xF7, 0x78, 0xF8, 0x06, 0x49, 0x07, 0x4A, 0x07, 0x4B, 0xE0, 0xF7
    .byte 0x4B, 0xF8, 0xE0, 0xF7, 0x71, 0xF8, 0x06, 0x49, 0x06, 0x4A, 0x07, 0x4B, 0xE0, 0xF7, 0x44, 0xF8
    .byte 0x1A, 0xE0, 0x00, 0x00, 0x8C, 0xB9, 0x06, 0x08, 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80
    .byte 0x8C, 0xC1, 0x06, 0x08, 0x00, 0x2A, 0x01, 0x06, 0x80, 0x00, 0x00, 0x80, 0xE0, 0xF7, 0x5C, 0xF8
    .byte 0x07, 0x49, 0x08, 0x4A, 0x08, 0x4B, 0xE0, 0xF7, 0x2F, 0xF8, 0xE0, 0xF7, 0x55, 0xF8, 0x07, 0x49
    .byte 0x07, 0x4A, 0x08, 0x4B, 0xE0, 0xF7, 0x28, 0xF8
_08050394:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00, 0x8C, 0xB9, 0x06, 0x08, 0x00, 0x28, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80, 0x8C, 0xC2
    .byte 0x06, 0x08, 0x00, 0x2A, 0x01, 0x06, 0x80, 0x00, 0x00, 0x80, 0x30, 0xB5, 0x84, 0x46, 0x44, 0x6D
    .byte 0x64, 0x30, 0x01, 0x78, 0x02, 0x20, 0x08, 0x40, 0x00, 0x28, 0x02, 0xD0, 0x00, 0x20, 0x61, 0x46
    .byte 0xC8, 0x67, 0x62, 0x46, 0xD1, 0x6F, 0x01, 0x31, 0xD1, 0x67, 0x07, 0x20, 0x08, 0x40, 0x00, 0x28
    .byte 0x12, 0xD1, 0xC8, 0x10, 0x0F, 0x21, 0x08, 0x40, 0x20, 0x23, 0xD2, 0x5E, 0x14, 0x4B, 0xC0, 0x00
    .byte 0xC1, 0x18, 0x09, 0x68, 0x52, 0x18, 0x65, 0x46, 0x2A, 0x84, 0x22, 0x22, 0xA9, 0x5E, 0x04, 0x33
    .byte 0xC0, 0x18, 0x00, 0x68, 0x09, 0x18, 0x69, 0x84, 0xA4, 0x6C, 0x80, 0x20, 0xC0, 0x00, 0x04, 0x40
    .byte 0x00, 0x2C, 0x21, 0xD1, 0x65, 0x46, 0x6B, 0x6D, 0x1A, 0x1C, 0xA4, 0x32, 0x11, 0x88, 0x08, 0x48
    .byte 0x08, 0x40, 0x10, 0x80, 0x60, 0x46, 0x4C, 0x30, 0x04, 0x80, 0x2C, 0x66, 0x06, 0x48, 0x06, 0x49
    .byte 0x40, 0x18, 0x00, 0x68, 0x83, 0x42, 0x0C, 0xD1, 0x05, 0x48, 0xE8, 0x65, 0x0C, 0xE0, 0x50, 0xF0
    .byte 0x0E, 0x08, 0xFF, 0xEF, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0xC8, 0xF1
    .byte 0x0E, 0x08, 0x02, 0x48, 0x62, 0x46, 0xD0, 0x65, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0xE0, 0xF1
    .byte 0x0E, 0x08, 0xF0, 0xB5, 0x4F, 0x46, 0x46, 0x46, 0xC0, 0xB4, 0x04, 0x1C, 0xA7, 0x8C, 0x64, 0x30
    .byte 0x01, 0x78, 0x02, 0x20, 0x08, 0x40, 0x00, 0x28, 0x06, 0xD0, 0x78, 0x20, 0x20, 0x67, 0x40, 0x20
    .byte 0x60, 0x67, 0x14, 0x20, 0xA0, 0x67, 0x80, 0x27, 0x20, 0x6F, 0x61, 0x6F, 0x89, 0x46, 0xA5, 0x6F
    .byte 0x00, 0x2D, 0x01, 0xDD, 0x01, 0x3D, 0xA5, 0x67, 0x06, 0x1C, 0x1B, 0x48, 0x80, 0x46, 0x28, 0x02
    .byte 0x14, 0x21, 0x11, 0xF0, 0x08, 0xFD, 0x80, 0x00, 0x40, 0x44, 0x01, 0x68, 0x08, 0x01, 0x40, 0x1A
    .byte 0x80, 0x00, 0x00, 0x28, 0x01, 0xDA, 0x15, 0x49, 0x40, 0x18, 0xC0, 0x13, 0x36, 0x1A, 0x14, 0x20
    .byte 0x40, 0x1B, 0x00, 0x02, 0x14, 0x21, 0x11, 0xF0, 0xF6, 0xFC, 0x80, 0x00, 0x40, 0x44, 0x01, 0x68
    .byte 0x08, 0x01, 0x40, 0x1A, 0x80, 0x00, 0x00, 0x28, 0x01, 0xDA, 0x0C, 0x49, 0x40, 0x18, 0xC0, 0x13
    .byte 0x3C, 0x38, 0x48, 0x44, 0x26, 0x84, 0x60, 0x84, 0x38, 0x04, 0x00, 0x14, 0xFF, 0x28, 0x04, 0xDC
    .byte 0x0F, 0x2D, 0x02, 0xDC, 0x08, 0x30, 0x00, 0x04, 0x07, 0x0C, 0xA7, 0x84, 0x18, 0xBC, 0x98, 0x46
    .byte 0xA1, 0x46, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x7F
    .byte 0x00, 0x00, 0xF0, 0xB5, 0x02, 0x1C, 0x17, 0x1C, 0x64, 0x30, 0x01, 0x78, 0x02, 0x20, 0x08, 0x40
    .byte 0x00, 0x28, 0x05, 0xD0, 0xB8, 0x20, 0x10, 0x67, 0x38, 0x20, 0x50, 0x67, 0x14, 0x20, 0x90, 0x67
    .byte 0x16, 0x6F, 0x55, 0x6F, 0x91, 0x6F, 0x00, 0x29, 0x01, 0xDD, 0x01, 0x39, 0x91, 0x67, 0x0C, 0x4C
    .byte 0x14, 0x20, 0x40, 0x1A, 0x00, 0x02, 0x14, 0x21, 0x11, 0xF0, 0xB5, 0xFC, 0x80, 0x00, 0x00, 0x19
    .byte 0x01, 0x68, 0xC8, 0x00, 0x40, 0x18, 0xC0, 0x00, 0x00, 0x28, 0x01, 0xDA, 0x06, 0x49, 0x40, 0x18
    .byte 0xC0, 0x13, 0x48, 0x38, 0x28, 0x18, 0x3E, 0x84, 0x78, 0x84, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47
    .byte 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x7F, 0x00, 0x00, 0x70, 0xB5, 0x02, 0x1C, 0x15, 0x1C
    .byte 0x64, 0x30, 0x01, 0x78, 0x02, 0x20, 0x08, 0x40, 0x00, 0x28, 0x08, 0xD0, 0x20, 0x21, 0x50, 0x5E
    .byte 0x10, 0x67, 0x22, 0x21, 0x50, 0x5E, 0x10, 0x30, 0x50, 0x67, 0x14, 0x20, 0x90, 0x67, 0x56, 0x6F
    .byte 0x90, 0x6F, 0x00, 0x28, 0x01, 0xDD, 0x01, 0x38, 0x90, 0x67, 0x0A, 0x4C, 0x00, 0x02, 0x14, 0x21
    .byte 0x11, 0xF0, 0x81, 0xFC, 0x80, 0x00, 0x00, 0x19, 0x00, 0x68, 0x70, 0x43, 0x00, 0x28, 0x01, 0xDA
    .byte 0x06, 0x49, 0x40, 0x18, 0xC0, 0x13, 0x10, 0x38, 0x29, 0x6F, 0x29, 0x84, 0x68, 0x84, 0x70, 0xBC
    .byte 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x7F, 0x00, 0x00, 0xF0, 0xB5
    .byte 0x4F, 0x46, 0x46, 0x46, 0xC0, 0xB4, 0x04, 0x1C, 0xA7, 0x8C, 0x64, 0x30, 0x01, 0x78, 0x02, 0x20
    .byte 0x08, 0x40, 0x00, 0x28, 0x06, 0xD0, 0x78, 0x20, 0x20, 0x67, 0x30, 0x20, 0x60, 0x67, 0x14, 0x20
    .byte 0xA0, 0x67, 0x80, 0x27, 0x20, 0x6F, 0x61, 0x6F, 0x89, 0x46, 0xA5, 0x6F, 0x00, 0x2D, 0x01, 0xDD
    .byte 0x01, 0x3D, 0xA5, 0x67, 0x06, 0x1C, 0x1B, 0x48, 0x80, 0x46, 0x28, 0x02, 0x14, 0x21, 0x11, 0xF0
    .byte 0x4A, 0xFC, 0x80, 0x00, 0x40, 0x44, 0x01, 0x68, 0x08, 0x01, 0x40, 0x1A, 0x80, 0x00, 0x00, 0x28
    .byte 0x01, 0xDA, 0x15, 0x49, 0x40, 0x18, 0xC0, 0x13, 0x36, 0x1A, 0x14, 0x20, 0x40, 0x1B, 0x00, 0x02
    .byte 0x14, 0x21, 0x11, 0xF0, 0x38, 0xFC, 0x80, 0x00, 0x40, 0x44, 0x01, 0x68, 0x08, 0x01, 0x40, 0x1A
    .byte 0x80, 0x00, 0x00, 0x28, 0x01, 0xDA, 0x0C, 0x49, 0x40, 0x18, 0xC0, 0x13, 0x3C, 0x38, 0x48, 0x44
    .byte 0x26, 0x84, 0x60, 0x84, 0x38, 0x04, 0x00, 0x14, 0xFF, 0x28, 0x04, 0xDC, 0x0F, 0x2D, 0x02, 0xDC
    .byte 0x08, 0x30, 0x00, 0x04, 0x07, 0x0C, 0xA7, 0x84, 0x18, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xF0, 0xBC
    .byte 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x7F, 0x00, 0x00, 0xF0, 0xB5
    .byte 0x02, 0x1C, 0x17, 0x1C, 0x64, 0x30, 0x01, 0x78, 0x02, 0x20, 0x08, 0x40, 0x00, 0x28, 0x05, 0xD0
    .byte 0xB8, 0x20, 0x10, 0x67, 0x38, 0x20, 0x50, 0x67, 0x2D, 0x20, 0x90, 0x67, 0x16, 0x6F, 0x55, 0x6F
    .byte 0x91, 0x6F, 0x00, 0x29, 0x01, 0xDD, 0x01, 0x39, 0x91, 0x67, 0x0C, 0x4C, 0x2D, 0x20, 0x40, 0x1A
    .byte 0x00, 0x02, 0x2D, 0x21, 0x11, 0xF0, 0xF7, 0xFB, 0x80, 0x00, 0x00, 0x19, 0x01, 0x68, 0xC8, 0x00
    .byte 0x40, 0x18, 0xC0, 0x00, 0x00, 0x28, 0x01, 0xDA, 0x06, 0x49, 0x40, 0x18, 0xC0, 0x13, 0x48, 0x38
    .byte 0x28, 0x18, 0x3E, 0x84, 0x78, 0x84, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x5C, 0x64
    .byte 0x0E, 0x08, 0xFF, 0x7F, 0x00, 0x00, 0x70, 0xB5, 0x02, 0x1C, 0x15, 0x1C, 0x64, 0x30, 0x01, 0x78
    .byte 0x02, 0x20, 0x08, 0x40, 0x00, 0x28, 0x08, 0xD0, 0x20, 0x21, 0x50, 0x5E, 0x10, 0x67, 0x22, 0x21
    .byte 0x50, 0x5E, 0x10, 0x30, 0x50, 0x67, 0x2D, 0x20, 0x90, 0x67, 0x56, 0x6F, 0x90, 0x6F, 0x00, 0x28
    .byte 0x01, 0xDD, 0x01, 0x38, 0x90, 0x67, 0x0A, 0x4C, 0x00, 0x02, 0x2D, 0x21, 0x11, 0xF0, 0xC3, 0xFB
    .byte 0x80, 0x00, 0x00, 0x19, 0x00, 0x68, 0x70, 0x43, 0x00, 0x28, 0x01, 0xDA, 0x06, 0x49, 0x40, 0x18
    .byte 0xC0, 0x13, 0x10, 0x38, 0x29, 0x6F, 0x29, 0x84, 0x68, 0x84, 0x70, 0xBC, 0x01, 0xBC, 0x00, 0x47
    .byte 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x7F, 0x00, 0x00, 0x10, 0xB5, 0x02, 0x1C, 0x14, 0x1C
    .byte 0x24, 0x21, 0x50, 0x5E, 0x80, 0x28, 0x01, 0xDD, 0x08, 0x38, 0x90, 0x84, 0x20, 0x20, 0x13, 0x5E
    .byte 0x22, 0x20, 0x11, 0x5E, 0x08, 0x1C, 0x00, 0x29, 0x00, 0xDA, 0xC8, 0x1D, 0xC0, 0x10, 0x18, 0x18
    .byte 0x10, 0x84, 0x18, 0x1C, 0x80, 0x38, 0x00, 0x28, 0x00, 0xDA, 0x0F, 0x30, 0x00, 0x11, 0x08, 0x1A
    .byte 0x60, 0x84, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x10, 0xB5, 0x02, 0x1C, 0x14, 0x1C
    .byte 0x24, 0x21, 0x50, 0x5E, 0x80, 0x28, 0x01, 0xDD, 0x08, 0x38, 0x90, 0x84, 0x20, 0x20, 0x13, 0x5E
    .byte 0x22, 0x20, 0x11, 0x5E, 0x08, 0x1C, 0x00, 0x29, 0x00, 0xDA, 0xC8, 0x1D, 0xC0, 0x10, 0x18, 0x18
    .byte 0x10, 0x84, 0x18, 0x1C, 0x80, 0x38, 0x00, 0x28, 0x00, 0xDA, 0x0F, 0x30, 0x00, 0x11, 0x08, 0x1A
    .byte 0x60, 0x84, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x30, 0xB5, 0x18, 0x4D, 0x18, 0x49
    .byte 0x68, 0x18, 0x04, 0x68, 0xA0, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x17, 0xD1, 0x21, 0x1C
    .byte 0x94, 0x31, 0x60, 0x20, 0x08, 0x80, 0x13, 0x4A, 0x20, 0x1C, 0x4C, 0x30, 0x01, 0x78, 0x07, 0x20
    .byte 0x08, 0x40, 0x40, 0x00, 0x80, 0x18, 0x00, 0x88, 0x0F, 0xF0, 0x8D, 0xFB, 0xCD, 0x20, 0x40, 0x00
    .byte 0x22, 0x18, 0x11, 0x78, 0xFE, 0x20, 0x08, 0x40, 0x02, 0x21, 0x08, 0x43, 0x10, 0x70, 0x0A, 0x48
    .byte 0x29, 0x18, 0x01, 0x20, 0x08, 0x70, 0xFF, 0x21, 0xC9, 0x00, 0x6A, 0x18, 0x11, 0x78, 0xF0, 0x20
    .byte 0x08, 0x40, 0x02, 0x21, 0x08, 0x43, 0x10, 0x70, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x20, 0x2E
    .byte 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x98, 0xCB, 0x0E, 0x08, 0x84, 0x0C, 0x00, 0x00
    thumb_func_start sub_8050848
sub_8050848:
    adds r1, r0, #0x0
    adds r1, #0x4C
    movs r2, #0x00
    strh r2, [r1, #0x00]
    str r2, [r0, #0x60]
    ldr r1, _0805085C @ =0x080EF878
    str r1, [r0, #0x5C]
    str r2, [r0, #0x70]
    bx lr
    .byte 0x00, 0x00
_0805085C: .4byte 0x080EF878
    thumb_func_start sub_8050860
sub_8050860:
    adds r3, r0, #0x0
    ldr r2, _08050884 @ =0x03002E20
    adds r1, r3, #0x0
    adds r1, #0x4C
    movs r0, #0x00
    strh r0, [r1, #0x00]
    str r0, [r3, #0x60]
    movs r0, #0x80
    lsls r0, r0, #0x01
    strh r0, [r3, #0x24]
    ldr r0, _08050888 @ =0x00000838
    adds r2, r2, r0
    ldr r1, [r3, #0x54]
    ldr r0, [r2, #0x00]
    cmp r1, r0
    bne _08050890
    ldr r0, _0805088C @ =0x080EF1F8
    b _08050892
_08050884: .4byte 0x03002E20
_08050888: .4byte 0x00000838
_0805088C: .4byte 0x080EF1F8
_08050890:
    ldr r0, _08050898 @ =0x080EF340
_08050892:
    str r0, [r3, #0x5C]
    bx lr
    .byte 0x00, 0x00
_08050898: .4byte 0x080EF340
    thumb_func_start sub_805089C
sub_805089C:
    adds r2, r0, #0x0
    adds r1, r2, #0x0
    adds r1, #0x4C
    movs r0, #0x00
    strh r0, [r1, #0x00]
    str r0, [r2, #0x60]
    ldr r0, _080508BC @ =0x03002E20
    ldr r1, _080508C0 @ =0x00000838
    adds r0, r0, r1
    ldr r1, [r2, #0x54]
    ldr r0, [r0, #0x00]
    cmp r1, r0
    bne _080508C8
    ldr r0, _080508C4 @ =0x080EF0D0
    b _080508CA
    .byte 0x00, 0x00
_080508BC: .4byte 0x03002E20
_080508C0: .4byte 0x00000838
_080508C4: .4byte 0x080EF0D0
_080508C8:
    ldr r0, _080508D0 @ =0x080EF190
_080508CA:
    str r0, [r2, #0x5C]
    bx lr
    .byte 0x00, 0x00
_080508D0: .4byte 0x080EF190
    thumb_func_start sub_80508D4
sub_80508D4:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r3, [r4, #0x54]
    adds r2, r3, #0x0
    adds r2, #0xA4
    ldrh r1, [r2, #0x00]
    ldr r0, _08050914 @ =0x0000FEFF
    ands r0, r1
    movs r1, #0x00
    strh r0, [r2, #0x00]
    adds r0, r4, #0x0
    adds r0, #0x4C
    strh r1, [r0, #0x00]
    str r1, [r4, #0x60]
    movs r0, #0x80
    lsls r0, r0, #0x01
    strh r0, [r4, #0x24]
    adds r0, #0x88
    adds r2, r3, r0
    ldr r0, [r2, #0x00]
    movs r1, #0x01
    orrs r0, r1
    str r0, [r2, #0x00]
    ldr r0, _08050918 @ =0x03002E20
    ldr r1, _0805091C @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r3, r0
    bne _08050924
    ldr r0, _08050920 @ =0x080EF388
    b _08050926
    .byte 0x00, 0x00
_08050914: .4byte 0x0000FEFF
_08050918: .4byte 0x03002E20
_0805091C: .4byte 0x00000838
_08050920: .4byte 0x080EF388
_08050924:
    ldr r0, _08050930 @ =0x080EF440
_08050926:
    str r0, [r4, #0x5C]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08050930: .4byte 0x080EF440
    thumb_func_start sub_8050934
sub_8050934:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r3, [r4, #0x54]
    adds r2, r3, #0x0
    adds r2, #0xA4
    ldrh r1, [r2, #0x00]
    ldr r0, _08050974 @ =0x0000FEFF
    ands r0, r1
    movs r1, #0x00
    strh r0, [r2, #0x00]
    adds r0, r4, #0x0
    adds r0, #0x4C
    strh r1, [r0, #0x00]
    str r1, [r4, #0x60]
    movs r0, #0x80
    lsls r0, r0, #0x01
    strh r0, [r4, #0x24]
    adds r0, #0x88
    adds r2, r3, r0
    ldr r0, [r2, #0x00]
    movs r1, #0x02
    orrs r0, r1
    str r0, [r2, #0x00]
    ldr r0, _08050978 @ =0x03002E20
    ldr r1, _0805097C @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r3, r0
    bne _08050984
    ldr r0, _08050980 @ =0x080EF388
    b _08050986
    .byte 0x00, 0x00
_08050974: .4byte 0x0000FEFF
_08050978: .4byte 0x03002E20
_0805097C: .4byte 0x00000838
_08050980: .4byte 0x080EF388
_08050984:
    ldr r0, _08050990 @ =0x080EF440
_08050986:
    str r0, [r4, #0x5C]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08050990: .4byte 0x080EF440
    thumb_func_start sub_8050994
sub_8050994:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r3, [r4, #0x54]
    adds r2, r3, #0x0
    adds r2, #0xA4
    ldrh r1, [r2, #0x00]
    ldr r0, _080509D4 @ =0x0000FEFF
    ands r0, r1
    movs r1, #0x00
    strh r0, [r2, #0x00]
    adds r0, r4, #0x0
    adds r0, #0x4C
    strh r1, [r0, #0x00]
    str r1, [r4, #0x60]
    movs r0, #0x80
    lsls r0, r0, #0x01
    strh r0, [r4, #0x24]
    adds r0, #0x88
    adds r2, r3, r0
    ldr r0, [r2, #0x00]
    movs r1, #0x04
    orrs r0, r1
    str r0, [r2, #0x00]
    ldr r0, _080509D8 @ =0x03002E20
    ldr r1, _080509DC @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r3, r0
    bne _080509E4
    ldr r0, _080509E0 @ =0x080EF388
    b _080509E6
    .byte 0x00, 0x00
_080509D4: .4byte 0x0000FEFF
_080509D8: .4byte 0x03002E20
_080509DC: .4byte 0x00000838
_080509E0: .4byte 0x080EF388
_080509E4:
    ldr r0, _080509F0 @ =0x080EF440
_080509E6:
    str r0, [r4, #0x5C]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_080509F0: .4byte 0x080EF440
    thumb_func_start sub_80509F4
sub_80509F4:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    ldr r4, [r5, #0x54]
    adds r3, r4, #0x0
    adds r3, #0xA4
    ldrh r1, [r3, #0x00]
    ldr r0, _08050A24 @ =0x0000BFFF
    ands r0, r1
    movs r2, #0x00
    ldr r1, _08050A28 @ =0x0000FEFF
    ands r0, r1
    strh r0, [r3, #0x00]
    adds r0, r5, #0x0
    adds r0, #0x4C
    strh r2, [r0, #0x00]
    str r2, [r5, #0x60]
    ldr r0, _08050A2C @ =0x03002E20
    ldr r1, _08050A30 @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _08050A38
    ldr r0, _08050A34 @ =0x080EF578
    b _08050A3A
_08050A24: .4byte 0x0000BFFF
_08050A28: .4byte 0x0000FEFF
_08050A2C: .4byte 0x03002E20
_08050A30: .4byte 0x00000838
_08050A34: .4byte 0x080EF578
_08050A38:
    ldr r0, _08050A44 @ =0x080EF7D0
_08050A3A:
    str r0, [r5, #0x5C]
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08050A44: .4byte 0x080EF7D0
    thumb_func_start sub_8050A48
sub_8050A48:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r3, [r4, #0x54]
    adds r1, r4, #0x0
    adds r1, #0x4C
    movs r0, #0x00
    strh r0, [r1, #0x00]
    str r0, [r4, #0x60]
    adds r2, r3, #0x0
    adds r2, #0xA4
    ldrh r1, [r2, #0x00]
    ldr r0, _08050A74 @ =0x0000FBFF
    ands r0, r1
    strh r0, [r2, #0x00]
    ldr r0, _08050A78 @ =0x03002E20
    ldr r1, _08050A7C @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r3, r0
    bne _08050A84
    ldr r0, _08050A80 @ =0x080EF8B0
    b _08050A86
_08050A74: .4byte 0x0000FBFF
_08050A78: .4byte 0x03002E20
_08050A7C: .4byte 0x00000838
_08050A80: .4byte 0x080EF8B0
_08050A84:
    ldr r0, _08050A90 @ =0x080EF8E8
_08050A86:
    str r0, [r4, #0x5C]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08050A90: .4byte 0x080EF8E8
    thumb_func_start sub_8050A94
sub_8050A94:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r3, [r4, #0x54]
    adds r2, r3, #0x0
    adds r2, #0xA4
    ldrh r1, [r2, #0x00]
    ldr r0, _08050AC0 @ =0x0000FFEF
    ands r0, r1
    movs r1, #0x00
    strh r0, [r2, #0x00]
    adds r0, r4, #0x0
    adds r0, #0x4C
    strh r1, [r0, #0x00]
    str r1, [r4, #0x60]
    ldr r0, _08050AC4 @ =0x03002E20
    ldr r1, _08050AC8 @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r3, r0
    bne _08050AD0
    ldr r0, _08050ACC @ =0x080EF900
    b _08050AD2
_08050AC0: .4byte 0x0000FFEF
_08050AC4: .4byte 0x03002E20
_08050AC8: .4byte 0x00000838
_08050ACC: .4byte 0x080EF900
_08050AD0:
    ldr r0, _08050ADC @ =0x080EF938
_08050AD2:
    str r0, [r4, #0x5C]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08050ADC: .4byte 0x080EF938
    .byte 0x70, 0x47, 0x00, 0x00
    thumb_func_start sub_8050AE4
sub_8050AE4:
    ldr r2, [r0, #0x54]
    adds r2, #0xA4
    ldrh r3, [r2, #0x00]
    ldr r1, _08050B04 @ =0x0000FDFF
    ands r1, r3
    movs r3, #0x00
    strh r1, [r2, #0x00]
    adds r1, r0, #0x0
    adds r1, #0x4C
    strh r3, [r1, #0x00]
    str r3, [r0, #0x60]
    ldr r1, _08050B08 @ =0x080EF878
    str r1, [r0, #0x5C]
    str r3, [r0, #0x70]
    bx lr
    .byte 0x00, 0x00
_08050B04: .4byte 0x0000FDFF
_08050B08: .4byte 0x080EF878
    .byte 0xF0, 0x21, 0x09, 0x02, 0x01, 0x82, 0x78, 0x21, 0x01, 0x84, 0x40, 0x21, 0x41, 0x84, 0x81, 0x84
    .byte 0x82, 0x8E, 0x01, 0x21, 0x11, 0x43, 0x81, 0x86, 0x70, 0x47, 0x00, 0x00, 0x00, 0xB5, 0x01, 0x20
    .byte 0x01, 0xF0, 0xBA, 0xFB, 0x01, 0xBC, 0x00, 0x47, 0x70, 0x47, 0x00, 0x00, 0x00, 0xB5, 0x08, 0x48
    .byte 0x08, 0x49, 0x40, 0x18, 0x01, 0x88, 0xF0, 0x20, 0x00, 0x01, 0x08, 0x40, 0x80, 0x21, 0x49, 0x00
    .byte 0x88, 0x42, 0x02, 0xD1, 0x96, 0x20, 0x0F, 0xF0, 0xE5, 0xF9, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0x20, 0x2E, 0x00, 0x03, 0xFE, 0x07, 0x00, 0x00, 0x02, 0x1C, 0x51, 0x6D, 0x88, 0x68, 0x80, 0x23
    .byte 0xDB, 0x01, 0xC0, 0x18, 0x88, 0x60, 0x22, 0x23, 0xC8, 0x5E, 0x34, 0x38, 0x50, 0x84, 0x89, 0x68
    .byte 0x02, 0x48, 0x81, 0x42, 0x01, 0xDD, 0x00, 0x20, 0x10, 0x66, 0x70, 0x47, 0xFF, 0xFF, 0x06, 0x00
    .byte 0x70, 0xB5, 0x02, 0x1C, 0x16, 0x1C, 0x64, 0x30, 0x01, 0x78, 0x02, 0x20, 0x08, 0x40, 0x00, 0x28
    .byte 0x04, 0xD0, 0x22, 0x21, 0x50, 0x5E, 0x50, 0x67, 0x28, 0x20, 0xD0, 0x67, 0xD0, 0x6F, 0x00, 0x28
    .byte 0x01, 0xDD, 0x01, 0x38, 0xD0, 0x67, 0x54, 0x6F, 0x10, 0x34, 0x09, 0x4D, 0x00, 0x02, 0x28, 0x21
    .byte 0x11, 0xF0, 0x78, 0xF9, 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x60, 0x43, 0x00, 0x28, 0x01, 0xDA
    .byte 0x04, 0x49, 0x40, 0x18, 0xC0, 0x13, 0x10, 0x38, 0x70, 0x84, 0x70, 0xBC, 0x01, 0xBC, 0x00, 0x47
    .byte 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x7F, 0x00, 0x00, 0x4C, 0x30, 0x8C, 0x21, 0x01, 0x80, 0x70, 0x47
    .byte 0x82, 0x8E, 0x08, 0x49, 0x11, 0x40, 0x00, 0x22, 0x81, 0x86, 0x80, 0x21, 0x49, 0x42, 0x01, 0x84
    .byte 0x41, 0x84, 0x05, 0x49, 0x81, 0x84, 0x02, 0x66, 0x40, 0x6D, 0x7F, 0x31, 0x40, 0x18, 0x02, 0x60
    .byte 0x70, 0x47, 0x00, 0x00, 0xFE, 0xFF, 0x00, 0x00, 0x05, 0x01, 0x00, 0x00, 0x02, 0x1C, 0x08, 0x48
    .byte 0x08, 0x49, 0x40, 0x18, 0x51, 0x6D, 0x00, 0x68, 0x81, 0x42, 0x08, 0xD1, 0x88, 0x6C, 0x20, 0x21
    .byte 0x08, 0x40, 0x00, 0x28, 0x03, 0xD1, 0x91, 0x8E, 0x01, 0x20, 0x08, 0x43, 0x90, 0x86, 0x70, 0x47
    .byte 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x02, 0x1C, 0x06, 0x48, 0x06, 0x49, 0x40, 0x18
    .byte 0x51, 0x6D, 0x00, 0x68, 0x81, 0x42, 0x03, 0xD1, 0x91, 0x8E, 0x01, 0x20, 0x08, 0x43, 0x90, 0x86
    .byte 0x70, 0x47, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x02, 0x1C, 0x22, 0x20
    .byte 0x11, 0x5E, 0x10, 0x6F, 0x00, 0x14, 0x09, 0x1A, 0x09, 0x04, 0x09, 0x14, 0x00, 0x23, 0x51, 0x84
    .byte 0x00, 0x29, 0x05, 0xDA, 0x10, 0x1C, 0x4C, 0x30, 0x03, 0x80, 0x13, 0x66, 0x03, 0x48, 0xD0, 0x65
    .byte 0x10, 0x6F, 0x80, 0x21, 0x09, 0x02, 0x40, 0x18, 0x10, 0x67, 0x70, 0x47, 0x98, 0xF8, 0x0E, 0x08
    .byte 0x02, 0x1C, 0x22, 0x20, 0x13, 0x5E, 0x00, 0x2B, 0x07, 0xDD, 0x11, 0x6F, 0x08, 0x14, 0x18, 0x1A
    .byte 0x50, 0x84, 0x80, 0x20, 0x00, 0x02, 0x09, 0x18, 0x11, 0x67, 0x70, 0x47, 0x03, 0x1C, 0x64, 0x30
    .byte 0x01, 0x78, 0x02, 0x20, 0x08, 0x40, 0x00, 0x28, 0x01, 0xD0, 0x20, 0x20, 0xD8, 0x67, 0xDA, 0x6F
    .byte 0x00, 0x2A, 0x00, 0xDD, 0x01, 0x3A, 0xDA, 0x67, 0x78, 0x20, 0x18, 0x84, 0x09, 0x49, 0x20, 0x20
    .byte 0x80, 0x1A, 0x40, 0x01, 0x40, 0x18, 0x00, 0x68, 0x00, 0x28, 0x01, 0xDA, 0x06, 0x49, 0x40, 0x18
    .byte 0x40, 0x12, 0x10, 0x38, 0x58, 0x84, 0x00, 0x2A, 0x02, 0xD1, 0x04, 0x48, 0x18, 0x66, 0xDA, 0x67
    .byte 0x70, 0x47, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x01, 0x00, 0x00, 0x0D, 0x0D, 0x05, 0x08
    .byte 0x03, 0x1C, 0x64, 0x30, 0x01, 0x78, 0x02, 0x20, 0x08, 0x40, 0x00, 0x28, 0x01, 0xD0, 0x00, 0x20
    .byte 0xD8, 0x67, 0xD9, 0x6F, 0x01, 0x31, 0xD9, 0x67, 0x07, 0x20, 0x08, 0x40, 0x00, 0x28, 0x0B, 0xD1
    .byte 0xC8, 0x10, 0x0F, 0x21, 0x08, 0x40, 0x22, 0x21, 0x5A, 0x5E, 0x04, 0x49, 0xC0, 0x00, 0x04, 0x31
    .byte 0x40, 0x18, 0x00, 0x68, 0x12, 0x18, 0x5A, 0x84, 0x70, 0x47, 0x00, 0x00, 0x50, 0xF0, 0x0E, 0x08
    thumb_func_start sub_8050D4C
sub_8050D4C:
    push {r4, lr}
    adds r3, r0, #0x0
    ldr r4, [r3, #0x54]
    movs r1, #0x22
    ldsh r0, [r4, r1]
    subs r0, #0x34
    movs r1, #0x40
    negs r1, r1
    cmp r0, r1
    bgt _08050D62
    adds r0, r1, #0x0
_08050D62:
    strh r0, [r3, #0x22]
    ldr r2, [r4, #0x08]
    cmp r2, #0x00
    bne _08050DAC
    movs r0, #0xC2
    lsls r0, r0, #0x01
    adds r1, r4, r0
    ldr r0, _08050D8C @ =0x0000E003
    str r0, [r1, #0x00]
    adds r0, r3, #0x0
    adds r0, #0x4C
    strh r2, [r0, #0x00]
    str r2, [r3, #0x60]
    ldr r0, _08050D90 @ =0x03002E20
    ldr r1, _08050D94 @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _08050D9C
    ldr r0, _08050D98 @ =0x080EF9E0
    b _08050D9E
_08050D8C: .4byte 0x0000E003
_08050D90: .4byte 0x03002E20
_08050D94: .4byte 0x00000838
_08050D98: .4byte 0x080EF9E0
_08050D9C:
    ldr r0, _08050DB4 @ =0x080EFA20
_08050D9E:
    str r0, [r3, #0x5C]
    movs r0, #0x00
    str r0, [r3, #0x70]
    adds r0, r4, #0x0
    movs r1, #0x02
    bl sub_803D4E4
_08050DAC:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08050DB4: .4byte 0x080EFA20
    .byte 0x03, 0x1C, 0x64, 0x30, 0x01, 0x78, 0x02, 0x20, 0x08, 0x40, 0x00, 0x28, 0x01, 0xD0, 0x00, 0x20
    .byte 0xD8, 0x67, 0xD9, 0x6F, 0x01, 0x31, 0xD9, 0x67, 0x07, 0x20, 0x08, 0x40, 0x00, 0x28, 0x0B, 0xD1
    .byte 0xC8, 0x10, 0x0F, 0x21, 0x08, 0x40, 0x22, 0x21, 0x5A, 0x5E, 0x04, 0x49, 0xC0, 0x00, 0x04, 0x31
    .byte 0x40, 0x18, 0x00, 0x68, 0x12, 0x18, 0x5A, 0x84, 0x70, 0x47, 0x00, 0x00, 0x50, 0xF0, 0x0E, 0x08
    .byte 0x10, 0xB5, 0x04, 0x1C, 0x64, 0x30, 0x01, 0x78, 0x02, 0x20, 0x08, 0x40, 0x00, 0x28, 0x01, 0xD0
    .byte 0x00, 0x20, 0xE0, 0x67, 0xE1, 0x6F, 0x01, 0x31, 0xE1, 0x67, 0x07, 0x20, 0x08, 0x40, 0x00, 0x28
    .byte 0x11, 0xD1, 0xC8, 0x10, 0x0F, 0x21, 0x08, 0x40, 0x20, 0x21, 0x62, 0x5E, 0x07, 0x4B, 0xC0, 0x00
    .byte 0xC1, 0x18, 0x09, 0x68, 0x52, 0x18, 0x22, 0x84, 0x22, 0x22, 0xA1, 0x5E, 0x04, 0x33, 0xC0, 0x18
    .byte 0x00, 0x68, 0x09, 0x18, 0x61, 0x84, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x50, 0xF0, 0x0E, 0x08
    .byte 0x05, 0x4A, 0xFF, 0x20, 0xC0, 0x00, 0x12, 0x18, 0x11, 0x78, 0xF0, 0x20, 0x08, 0x40, 0x03, 0x21
    .byte 0x08, 0x43, 0x10, 0x70, 0x70, 0x47, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03, 0x41, 0x6D, 0xA4, 0x31
    .byte 0x0A, 0x88, 0x02, 0x48, 0x10, 0x40, 0x08, 0x80, 0x70, 0x47, 0x00, 0x00, 0xFF, 0x7F, 0x00, 0x00
    .byte 0x30, 0xB5, 0x03, 0x48, 0x05, 0x1C, 0x24, 0x35, 0x00, 0x24, 0x02, 0x49, 0x40, 0x18, 0x13, 0xE0
    .byte 0x20, 0x2E, 0x00, 0x03, 0x14, 0x08, 0x00, 0x00, 0x21, 0x06, 0x09, 0x0E, 0x28, 0x1C, 0xFA, 0xF7
    .byte 0x1D, 0xF8, 0xC9, 0x21, 0x49, 0x00, 0x42, 0x18, 0x11, 0x78, 0x0A, 0x20, 0x08, 0x43, 0x10, 0x70
    .byte 0x01, 0x34, 0xFE, 0x21, 0xC9, 0x00, 0x68, 0x18, 0x00, 0x78, 0x84, 0x42, 0xEC, 0xDB, 0x30, 0xBC
    .byte 0x01, 0xBC, 0x00, 0x47, 0x00, 0xB5, 0x06, 0x49, 0x42, 0x6D, 0x06, 0x48, 0x09, 0x18, 0x08, 0x68
    .byte 0x82, 0x42, 0x02, 0xD1, 0x97, 0x20, 0x0F, 0xF0, 0x27, 0xF8, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x00, 0xB5, 0x06, 0x49, 0x42, 0x6D, 0x06, 0x48
    .byte 0x09, 0x18, 0x08, 0x68, 0x82, 0x42, 0x02, 0xD1, 0x98, 0x20, 0x0F, 0xF0, 0x15, 0xF8, 0x01, 0xBC
    .byte 0x00, 0x47, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x00, 0xB5, 0x06, 0x49
    .byte 0x42, 0x6D, 0x06, 0x48, 0x09, 0x18, 0x08, 0x68, 0x82, 0x42, 0x02, 0xD1, 0x99, 0x20, 0x0F, 0xF0
    .byte 0x03, 0xF8, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00
    .byte 0x10, 0xB5, 0x04, 0x1C, 0x63, 0x6D, 0x1A, 0x1C, 0xA4, 0x32, 0x11, 0x88, 0x07, 0x48, 0x08, 0x40
    .byte 0x00, 0x21, 0x10, 0x80, 0x20, 0x1C, 0x4C, 0x30, 0x01, 0x80, 0x21, 0x66, 0x04, 0x48, 0x05, 0x49
    .byte 0x40, 0x18, 0x00, 0x68, 0x83, 0x42, 0x09, 0xD1, 0x03, 0x48, 0x08, 0xE0, 0xFF, 0xEF, 0x00, 0x00
    .byte 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0xC8, 0xF1, 0x0E, 0x08, 0x02, 0x48, 0xE0, 0x65
    .byte 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0xE0, 0xF1, 0x0E, 0x08
    thumb_func_start sub_8050F74
sub_8050F74:
    push {r4, r5, r6, r7, lr}
    ldr r0, _08050FDC @ =0x03002E20
    adds r7, r0, #0x0
    adds r7, #0x24
    movs r5, #0x00
    ldr r1, _08050FE0 @ =0x00000815
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r5, r0
    bge _08051008
    movs r6, #0x00
_08050F8A:
    lsls r0, r5, #0x02
    ldr r2, _08050FE4 @ =0x000007F4
    adds r1, r7, r2
    adds r1, r1, r0
    ldr r4, [r1, #0x00]
    ldr r2, [r4, #0x48]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r2, r0
    cmp r2, #0x00
    beq _08050FF4
    movs r0, #0x00
    ldr r1, _08050FE8 @ =0x080EF898
    movs r2, #0x00
    bl sub_8030224
    str r4, [r0, #0x54]
    movs r3, #0xC0
    lsls r3, r3, #0x01
    adds r1, r4, r3
    str r0, [r1, #0x00]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    strh r1, [r0, #0x10]
    strh r6, [r0, #0x20]
    strh r6, [r0, #0x22]
    ldr r1, _08050FEC @ =0x00000105
    strh r1, [r0, #0x24]
    ldrh r2, [r0, #0x34]
    ldr r3, _08050FF0 @ =0x0000FFFD
    adds r1, r3, #0x0
    ands r2, r1
    adds r3, #0x01
    adds r1, r3, #0x0
    ands r2, r1
    strh r2, [r0, #0x34]
    movs r1, #0xC4
    lsls r1, r1, #0x01
    adds r0, r4, r1
    str r6, [r0, #0x00]
    b _08050FFC
_08050FDC: .4byte 0x03002E20
_08050FE0: .4byte 0x00000815
_08050FE4: .4byte 0x000007F4
_08050FE8: .4byte 0x080EF898
_08050FEC: .4byte 0x00000105
_08050FF0: .4byte 0x0000FFFD
_08050FF4:
    movs r3, #0xC0
    lsls r3, r3, #0x01
    adds r0, r4, r3
    str r2, [r0, #0x00]
_08050FFC:
    adds r5, #0x01
    ldr r1, _08051010 @ =0x000007F1
    adds r0, r7, r1
    ldrb r0, [r0, #0x00]
    cmp r5, r0
    blt _08050F8A
_08051008:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08051010: .4byte 0x000007F1
    thumb_func_start sub_8051014
sub_8051014:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x004
    ldr r0, _0805108C @ =0x03002E20
    movs r1, #0x00
    str r1, [sp, #0x000]
    ldr r2, _08051090 @ =0x00000815
    adds r0, r0, r2
    ldrb r0, [r0, #0x00]
    cmp r1, r0
    blt _08051032
    b _08051492
_08051032:
    ldr r3, [sp, #0x000]
    lsls r1, r3, #0x02
    ldr r2, _08051094 @ =0x03002E44
    ldr r3, _08051098 @ =0x000007F4
    adds r0, r2, r3
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov r12, r0
    movs r3, #0xC2
    lsls r3, r3, #0x01
    add r3, r12
    ldr r4, [r3, #0x00]
    movs r0, #0xF0
    lsls r0, r0, #0x08
    ands r4, r0
    movs r0, #0xC0
    lsls r0, r0, #0x01
    add r0, r12
    ldr r6, [r0, #0x00]
    cmp r6, #0x00
    bne _0805105E
    b _0805147E
_0805105E:
    mov r2, r12
    adds r2, #0xA4
    ldrh r1, [r2, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x06
    ands r0, r1
    adds r7, r2, #0x0
    cmp r0, #0x00
    beq _080510B4
    movs r0, #0xE0
    lsls r0, r0, #0x08
    cmp r4, r0
    beq _080510B4
    cmp r4, #0x00
    bne _0805109C
    movs r0, #0x90
    lsls r0, r0, #0x08
    str r0, [r3, #0x00]
    adds r0, r6, #0x0
    bl sub_804FAE0
    b _0805147E
    .byte 0x00, 0x00
_0805108C: .4byte 0x03002E20
_08051090: .4byte 0x00000815
_08051094: .4byte 0x03002E44
_08051098: .4byte 0x000007F4
_0805109C:
    movs r0, #0x90
    lsls r0, r0, #0x08
    cmp r4, r0
    bne _080510A6
    b _0805147E
_080510A6:
    movs r0, #0x80
    lsls r0, r0, #0x05
    cmp r4, r0
    bne _080510B0
    b _0805147E
_080510B0:
    str r0, [r3, #0x00]
    b _0805141A
_080510B4:
    ldrh r5, [r7, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x07
    ands r0, r5
    cmp r0, #0x00
    beq _080510DC
    movs r1, #0xC2
    lsls r1, r1, #0x01
    add r1, r12
    movs r0, #0xD0
    lsls r0, r0, #0x08
    str r0, [r1, #0x00]
    adds r0, r6, #0x0
    bl sub_80509F4
    ldrh r1, [r7, #0x00]
    ldr r0, _080510D8 @ =0x0000FB8F
    b _0805147A
_080510D8: .4byte 0x0000FB8F
_080510DC:
    movs r0, #0x80
    lsls r0, r0, #0x05
    mov r9, r0
    cmp r4, r9
    bne _080510E8
    b _0805147E
_080510E8:
    movs r1, #0xA0
    lsls r1, r1, #0x08
    mov r10, r1
    cmp r4, r10
    bne _080510F4
    b _0805147E
_080510F4:
    movs r2, #0xB0
    lsls r2, r2, #0x08
    cmp r4, r2
    bne _080510FE
    b _0805147E
_080510FE:
    cmp r4, r10
    bne _08051104
    b _0805147E
_08051104:
    movs r0, #0xD0
    lsls r0, r0, #0x08
    cmp r4, r0
    bne _0805110E
    b _0805147E
_0805110E:
    movs r3, #0xC2
    lsls r3, r3, #0x01
    add r3, r12
    ldr r1, [r3, #0x00]
    ldr r0, _08051158 @ =0x0000E003
    cmp r1, r0
    bne _0805111E
    b _0805147E
_0805111E:
    adds r0, #0x01
    mov r8, r0
    cmp r1, r8
    bne _08051128
    b _0805147E
_08051128:
    ldr r0, _0805115C @ =0x0000C001
    cmp r1, r0
    bne _08051130
    b _0805147E
_08051130:
    movs r0, #0x80
    lsls r0, r0, #0x02
    ands r0, r5
    cmp r0, #0x00
    beq _08051174
    ldr r2, _08051160 @ =0x0000FBFF
    ands r2, r5
    strh r2, [r7, #0x00]
    ldr r0, [r3, #0x00]
    movs r1, #0xE0
    lsls r1, r1, #0x08
    cmp r0, r1
    bne _08051164
    mov r1, r8
    str r1, [r3, #0x00]
    adds r0, r6, #0x0
    bl sub_8050AE4
    b _0805147E
    .byte 0x00, 0x00
_08051158: .4byte 0x0000E003
_0805115C: .4byte 0x0000C001
_08051160: .4byte 0x0000FBFF
_08051164:
    cmp r4, r1
    bne _0805116A
    b _0805147E
_0805116A:
    ldr r0, _08051170 @ =0x0000FDFF
    ands r0, r2
    b _0805147C
_08051170: .4byte 0x0000FDFF
_08051174:
    movs r0, #0x80
    lsls r0, r0, #0x03
    ands r0, r5
    cmp r0, #0x00
    beq _080511A0
    cmp r4, #0x00
    bne _08051190
    movs r0, #0xE0
    lsls r0, r0, #0x08
    str r0, [r3, #0x00]
    adds r0, r6, #0x0
    bl sub_8050A48
    b _0805147E
_08051190:
    movs r0, #0xE0
    lsls r0, r0, #0x08
    cmp r4, r0
    bne _0805119A
    b _0805147E
_0805119A:
    mov r2, r9
    str r2, [r3, #0x00]
    b _0805141A
_080511A0:
    movs r0, #0x10
    ands r0, r5
    cmp r0, #0x00
    beq _0805123C
    cmp r4, #0x00
    beq _080511B4
    movs r0, #0xE0
    lsls r0, r0, #0x08
    cmp r1, r0
    bne _08051230
_080511B4:
    ldr r0, _080511D4 @ =0x0000E001
    str r0, [r3, #0x00]
    ldr r0, _080511D8 @ =0x03002E20
    adds r0, #0x24
    bl sub_8032C2C
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x0E
    bhi _0805121C
    lsls r0, r0, #0x02
    ldr r1, _080511DC @ =0x080511E0
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_080511D4: .4byte 0x0000E001
_080511D8: .4byte 0x03002E20
_080511DC: .4byte 0x080511E0
    .byte 0x1C, 0x12, 0x05, 0x08, 0x1C, 0x12, 0x05, 0x08, 0x1C, 0x12, 0x05, 0x08, 0x1C, 0x12, 0x05, 0x08
    .byte 0x1C, 0x12, 0x05, 0x08, 0x1C, 0x12, 0x05, 0x08, 0x1C, 0x12, 0x05, 0x08, 0x1C, 0x12, 0x05, 0x08
    .byte 0x1C, 0x12, 0x05, 0x08, 0x1C, 0x12, 0x05, 0x08, 0x1C, 0x12, 0x05, 0x08, 0x1C, 0x12, 0x05, 0x08
    .byte 0x20, 0x12, 0x05, 0x08, 0x1C, 0x12, 0x05, 0x08, 0x1C, 0x12, 0x05, 0x08
_0805121C:
    cmp r4, #0x00
    bne _08051228
    adds r0, r6, #0x0
    bl sub_804F924
    b _0805147E
_08051228:
    adds r0, r6, #0x0
    bl sub_8050A94
    b _0805147E
_08051230:
    cmp r4, r0
    bne _08051236
    b _0805147E
_08051236:
    mov r0, r9
    str r0, [r3, #0x00]
    b _0805141A
_0805123C:
    movs r2, #0x20
    adds r0, r2, #0x0
    ands r0, r5
    cmp r0, #0x00
    beq _08051270
    cmp r4, #0x00
    beq _08051252
    movs r0, #0xE0
    lsls r0, r0, #0x08
    cmp r1, r0
    bne _08051264
_08051252:
    ldr r0, _08051260 @ =0x0000E001
    str r0, [r3, #0x00]
    adds r0, r6, #0x0
    bl sub_804F980
    b _0805147E
    .byte 0x00, 0x00
_08051260: .4byte 0x0000E001
_08051264:
    cmp r4, r0
    bne _0805126A
    b _0805147E
_0805126A:
    mov r1, r9
    str r1, [r3, #0x00]
    b _0805141A
_08051270:
    movs r0, #0x40
    ands r0, r5
    cmp r0, #0x00
    beq _080512A8
    cmp r4, #0x00
    beq _08051282
    ldr r0, _08051290 @ =0x0000E001
    cmp r1, r0
    bne _08051298
_08051282:
    ldr r0, _08051294 @ =0x0000E002
    str r0, [r3, #0x00]
    adds r0, r6, #0x0
    bl sub_804FA5C
    b _0805147E
    .byte 0x00, 0x00
_08051290: .4byte 0x0000E001
_08051294: .4byte 0x0000E002
_08051298:
    movs r0, #0xE0
    lsls r0, r0, #0x08
    cmp r4, r0
    bne _080512A2
    b _0805147E
_080512A2:
    mov r2, r9
    str r2, [r3, #0x00]
    b _0805141A
_080512A8:
    movs r0, #0xE0
    lsls r0, r0, #0x08
    cmp r4, r0
    bne _080512B2
    b _0805147E
_080512B2:
    mov r1, r12
    ldr r0, [r1, #0x48]
    ands r0, r2
    cmp r0, #0x00
    beq _080512BE
    b _0805147E
_080512BE:
    mov r0, r9
    ands r0, r5
    cmp r0, #0x00
    beq _080512E8
    cmp r4, #0x00
    bne _080512D8
    movs r0, #0xC0
    lsls r0, r0, #0x08
    str r0, [r3, #0x00]
    adds r0, r6, #0x0
    bl sub_805089C
    b _0805147E
_080512D8:
    movs r0, #0xC0
    lsls r0, r0, #0x08
    cmp r4, r0
    bne _080512E2
    b _0805147E
_080512E2:
    mov r2, r9
    str r2, [r3, #0x00]
    b _0805141A
_080512E8:
    movs r0, #0x80
    ands r0, r5
    cmp r0, #0x00
    beq _0805132C
    movs r0, #0xC4
    lsls r0, r0, #0x01
    add r0, r12
    ldr r0, [r0, #0x00]
    movs r1, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _0805131C
    cmp r4, #0x00
    bne _08051310
    mov r0, r10
    str r0, [r3, #0x00]
    adds r0, r6, #0x0
    bl sub_804F8BC
    b _0805147E
_08051310:
    cmp r4, r10
    bne _08051316
    b _0805147E
_08051316:
    mov r1, r9
    str r1, [r3, #0x00]
    b _0805141A
_0805131C:
    ldr r0, _08051324 @ =0x0000FF7F
    ands r0, r5
    ldr r1, _08051328 @ =0x0000FEFF
    b _0805147A
_08051324: .4byte 0x0000FF7F
_08051328: .4byte 0x0000FEFF
_0805132C:
    mov r1, r12
    adds r1, #0xC6
    ldrh r0, [r1, #0x00]
    lsrs r0, r0, #0x08
    cmp r0, #0x81
    bne _08051380
    movs r0, #0x80
    lsls r0, r0, #0x01
    ands r0, r5
    cmp r0, #0x00
    beq _08051380
    movs r0, #0xC4
    lsls r0, r0, #0x01
    add r0, r12
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    ands r0, r1
    cmp r0, #0x00
    bne _08051374
    cmp r4, #0x00
    bne _08051364
    movs r2, #0xB0
    lsls r2, r2, #0x08
    str r2, [r3, #0x00]
    adds r0, r6, #0x0
    bl sub_80508D4
    b _0805147E
_08051364:
    movs r0, #0xB0
    lsls r0, r0, #0x08
    cmp r4, r0
    bne _0805136E
    b _0805147E
_0805136E:
    mov r1, r9
    str r1, [r3, #0x00]
    b _0805141A
_08051374:
    ldr r0, _0805137C @ =0x0000FEFF
    ands r0, r5
    b _0805147C
    .byte 0x00, 0x00
_0805137C: .4byte 0x0000FEFF
_08051380:
    ldrh r0, [r1, #0x00]
    lsrs r0, r0, #0x08
    cmp r0, #0x82
    bne _080513C8
    ldrh r2, [r7, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    ands r0, r2
    cmp r0, #0x00
    beq _080513C8
    movs r0, #0xC4
    lsls r0, r0, #0x01
    add r0, r12
    ldr r0, [r0, #0x00]
    movs r1, #0x02
    ands r0, r1
    cmp r0, #0x00
    bne _080513BC
    cmp r4, #0x00
    bne _08051406
    movs r1, #0xC2
    lsls r1, r1, #0x01
    add r1, r12
    movs r0, #0xB0
    lsls r0, r0, #0x08
    str r0, [r1, #0x00]
    adds r0, r6, #0x0
    bl sub_8050934
    b _0805147E
_080513BC:
    ldr r0, _080513C4 @ =0x0000FEFF
    ands r0, r2
    b _0805147C
    .byte 0x00, 0x00
_080513C4: .4byte 0x0000FEFF
_080513C8:
    ldrh r0, [r1, #0x00]
    lsrs r0, r0, #0x08
    adds r1, r0, #0x0
    subs r1, #0x7F
    cmp r1, #0x04
    bne _0805142C
    ldrh r2, [r7, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x01
    ands r0, r2
    cmp r0, #0x00
    beq _0805142C
    movs r0, #0xC4
    lsls r0, r0, #0x01
    add r0, r12
    ldr r0, [r0, #0x00]
    ands r0, r1
    cmp r0, #0x00
    bne _08051422
    cmp r4, #0x00
    bne _08051406
    movs r1, #0xC2
    lsls r1, r1, #0x01
    add r1, r12
    movs r0, #0xB0
    lsls r0, r0, #0x08
    str r0, [r1, #0x00]
    adds r0, r6, #0x0
    bl sub_8050994
    b _0805147E
_08051406:
    movs r0, #0xB0
    lsls r0, r0, #0x08
    cmp r4, r0
    beq _0805147E
    movs r1, #0xC2
    lsls r1, r1, #0x01
    add r1, r12
    movs r0, #0x80
    lsls r0, r0, #0x05
    str r0, [r1, #0x00]
_0805141A:
    adds r0, r6, #0x0
    bl sub_8050848
    b _0805147E
_08051422:
    ldr r0, _08051428 @ =0x0000FEFF
    ands r0, r2
    b _0805147C
_08051428: .4byte 0x0000FEFF
_0805142C:
    ldrh r0, [r7, #0x00]
    ldr r1, _08051458 @ =0x0000FEFF
    ands r1, r0
    strh r1, [r7, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0805147E
    cmp r4, #0x00
    bne _0805145C
    movs r1, #0xC2
    lsls r1, r1, #0x01
    add r1, r12
    movs r0, #0xA0
    lsls r0, r0, #0x08
    str r0, [r1, #0x00]
    adds r0, r6, #0x0
    bl sub_8050860
    b _08051476
    .byte 0x00, 0x00
_08051458: .4byte 0x0000FEFF
_0805145C:
    movs r0, #0xA0
    lsls r0, r0, #0x08
    cmp r4, r0
    beq _08051476
    movs r1, #0xC2
    lsls r1, r1, #0x01
    add r1, r12
    movs r0, #0x80
    lsls r0, r0, #0x05
    str r0, [r1, #0x00]
    adds r0, r6, #0x0
    bl sub_8050848
_08051476:
    ldrh r1, [r7, #0x00]
    ldr r0, _080514A4 @ =0x00007FFF
_0805147A:
    ands r0, r1
_0805147C:
    strh r0, [r7, #0x00]
_0805147E:
    ldr r2, [sp, #0x000]
    adds r2, #0x01
    str r2, [sp, #0x000]
    ldr r3, _080514A8 @ =0x03002E44
    ldr r1, _080514AC @ =0x000007F1
    adds r0, r3, r1
    ldrb r0, [r0, #0x00]
    cmp r2, r0
    bge _08051492
    b _08051032
_08051492:
    add sp, #0x004
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_080514A4: .4byte 0x00007FFF
_080514A8: .4byte 0x03002E44
_080514AC: .4byte 0x000007F1
    thumb_func_start sub_80514B0
sub_80514B0:
    push {r4, r5, lr}
    add sp, #-0x008
    movs r0, #0x00
    bl pltt_getBuffer
    movs r1, #0x9F
    lsls r1, r1, #0x01
    adds r0, r0, r1
    movs r5, #0x00
    strh r5, [r0, #0x00]
    movs r0, #0x01
    bl pltt_setDirtyFlag
    movs r0, #0x01
    negs r0, r0
    str r0, [sp, #0x000]
    ldr r1, _08051534 @ =0x06002E00
    ldr r2, _08051538 @ =0x01000008
    mov r0, sp
    bl CpuFastSet
    ldr r0, _0805153C @ =0x91709170
    str r0, [sp, #0x004]
    add r4, sp, #0x004
    movs r0, #0x01
    bl map_getBufferPtr
    adds r1, r0, #0x0
    ldr r2, _08051540 @ =0x01000200
    adds r0, r4, #0x0
    bl CpuFastSet
    movs r0, #0x02
    bl map_setBufferDirty
    ldr r1, _08051544 @ =0x04000040
    movs r0, #0xF0
    strh r0, [r1, #0x00]
    adds r1, #0x04
    movs r0, #0xA0
    strh r0, [r1, #0x00]
    adds r1, #0x04
    movs r0, #0x3E
    strh r0, [r1, #0x00]
    ldr r0, _08051548 @ =0x0400004A
    strh r5, [r0, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldrh r1, [r2, #0x00]
    ldr r0, _0805154C @ =0x00009FFF
    ands r0, r1
    strh r0, [r2, #0x00]
    ldrh r0, [r2, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x06
    adds r1, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    movs r1, #0x01
    ldr r0, _08051550 @ =0x03004F70
    strb r1, [r0, #0x0E]
    add sp, #0x008
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08051534: .4byte 0x06002E00
_08051538: .4byte 0x01000008
_0805153C: .4byte 0x91709170
_08051540: .4byte 0x01000200
_08051544: .4byte 0x04000040
_08051548: .4byte 0x0400004A
_0805154C: .4byte 0x00009FFF
_08051550: .4byte 0x03004F70
    thumb_func_start sub_8051554
sub_8051554:
    push {r4, r5, lr}
    ldr r5, _080515A8 @ =0x03004F70
    ldrb r3, [r5, #0x0F]
    ldr r2, _080515AC @ =0x04000008
    ldrb r1, [r2, #0x01]
    movs r0, #0x20
    negs r0, r0
    ands r0, r1
    movs r1, #0x06
    orrs r0, r1
    strb r0, [r2, #0x01]
    ldr r4, _080515B0 @ =0x04000040
    lsls r1, r3, #0x01
    adds r1, r1, r3
    lsls r2, r1, #0x01
    lsls r1, r1, #0x09
    movs r0, #0xF0
    subs r0, r0, r2
    orrs r1, r0
    strh r1, [r4, #0x00]
    adds r4, #0x04
    lsls r2, r3, #0x02
    lsls r1, r3, #0x0A
    movs r0, #0xA0
    subs r0, r0, r2
    orrs r1, r0
    strh r1, [r4, #0x00]
    ldr r1, _080515B4 @ =0x04000048
    movs r0, #0x3E
    strh r0, [r1, #0x00]
    adds r1, #0x02
    movs r0, #0x01
    strh r0, [r1, #0x00]
    cmp r3, #0x14
    bne _080515A2
    ldr r0, _080515B8 @ =0x08051FBD
    str r0, [r5, #0x00]
    movs r0, #0x00
    strb r0, [r5, #0x0F]
_080515A2:
    pop {r4, r5}
    pop {r0}
    bx r0
_080515A8: .4byte 0x03004F70
_080515AC: .4byte 0x04000008
_080515B0: .4byte 0x04000040
_080515B4: .4byte 0x04000048
_080515B8: .4byte sub_8051FBC
    thumb_func_start sub_80515BC
sub_80515BC:
    push {r4, r5, r6, r7, lr}
    add sp, #-0x004
    bl oam_init
    movs r0, #0x00
    str r0, [sp, #0x000]
    movs r1, #0xC0
    lsls r1, r1, #0x13
    ldr r2, _0805166C @ =0x01006000
    mov r0, sp
    bl CpuFastSet
    bl pltt_clearBuffer
    ldr r0, _08051670 @ =0x080EFC84
    movs r1, #0x18
    bl main_configureIoRegs
    ldr r7, _08051674 @ =0x04000008
    ldrb r1, [r7, #0x00]
    movs r6, #0x7F
    adds r0, r6, #0x0
    ands r0, r1
    strb r0, [r7, #0x00]
    ldrb r1, [r7, #0x01]
    movs r5, #0x3F
    adds r0, r5, #0x0
    ands r0, r1
    strb r0, [r7, #0x01]
    ldrb r1, [r7, #0x00]
    movs r0, #0x04
    negs r0, r0
    ands r0, r1
    strb r0, [r7, #0x00]
    ldrb r1, [r7, #0x00]
    movs r4, #0x41
    negs r4, r4
    adds r0, r4, #0x0
    ands r0, r1
    strb r0, [r7, #0x00]
    ldrb r1, [r7, #0x00]
    movs r2, #0x0D
    negs r2, r2
    adds r0, r2, #0x0
    ands r0, r1
    strb r0, [r7, #0x00]
    ldrb r1, [r7, #0x01]
    movs r3, #0x20
    negs r3, r3
    adds r0, r3, #0x0
    ands r0, r1
    movs r1, #0x06
    orrs r0, r1
    strb r0, [r7, #0x01]
    adds r7, #0x02
    ldrb r0, [r7, #0x00]
    ands r6, r0
    strb r6, [r7, #0x00]
    ldrb r0, [r7, #0x01]
    ands r5, r0
    strb r5, [r7, #0x01]
    ldrb r0, [r7, #0x00]
    movs r1, #0x03
    orrs r0, r1
    strb r0, [r7, #0x00]
    ldrb r0, [r7, #0x00]
    ands r4, r0
    strb r4, [r7, #0x00]
    ldrb r0, [r7, #0x00]
    ands r2, r0
    movs r0, #0x04
    orrs r2, r0
    strb r2, [r7, #0x00]
    ldrb r0, [r7, #0x01]
    ands r3, r0
    movs r0, #0x0F
    orrs r3, r0
    strb r3, [r7, #0x01]
    movs r1, #0x80
    lsls r1, r1, #0x13
    ldr r2, _08051678 @ =0x00000141
    adds r0, r2, #0x0
    strh r0, [r1, #0x00]
    add sp, #0x004
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805166C: .4byte 0x01006000
_08051670: .4byte 0x080EFC84
_08051674: .4byte 0x04000008
_08051678: .4byte 0x00000141
    thumb_func_start race_main
race_main: @ 0805167C
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x014
    ldr r4, _080516E0 @ =0x03002E20
    ldr r0, _080516E4 @ =0x03004F50
    movs r7, #0x00
    strh r7, [r0, #0x00]
    movs r5, #0x00
    movs r0, #0x01
    movs r1, #0x02
    negs r1, r1
    bl irq_updateMask
    str r5, [r4, #0x0C]
    movs r0, #0x02
    ldr r1, _080516E8 @ =0x00010001
    bl irq_updateMask
    bl main_frameProc
    movs r0, #0xA0
    lsls r0, r0, #0x13
    strh r5, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x13
    strh r5, [r0, #0x00]
    ldr r0, _080516EC @ =0x000007FB
    adds r6, r4, r0
    ldrb r0, [r6, #0x00]
    cmp r0, #0x01
    bls _0805170C
    bl sub_802DC88
    cmp r0, #0x00
    beq _080516D2
    ldr r1, _080516F0 @ =0x03002C80
    ldrb r0, [r1, #0x01]
    ldrb r6, [r6, #0x00]
    cmp r0, r6
    beq _080516F8
_080516D2:
    ldr r0, _080516F0 @ =0x03002C80
    strh r5, [r0, #0x16]
    bl sio2_stop
    ldr r1, _080516F4 @ =0x000007FC
    adds r0, r4, r1
    b _08051710
_080516E0: .4byte 0x03002E20
_080516E4: .4byte 0x03004F50
_080516E8: .4byte 0x00010001
_080516EC: .4byte 0x000007FB
_080516F0: .4byte 0x03002C80
_080516F4: .4byte 0x000007FC
_080516F8:
    ldrb r1, [r1, #0x00]
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    ldr r2, _08051708 @ =0x000007FC
    adds r0, r4, r2
    strb r1, [r0, #0x00]
    b _08051712
    .byte 0x00, 0x00
_08051708: .4byte 0x000007FC
_0805170C:
    ldr r3, _080517B0 @ =0x000007FC
    adds r0, r4, r3
_08051710:
    strb r7, [r0, #0x00]
_08051712:
    ldr r4, _080517B4 @ =0x03002E44
    ldr r7, _080517B8 @ =0x00000814
    adds r2, r4, r7
    movs r1, #0xFB
    lsls r1, r1, #0x03
    adds r0, r4, r1
    ldrb r1, [r0, #0x00]
    lsls r1, r1, #0x02
    ldr r3, _080517BC @ =0x000007F4
    adds r0, r4, r3
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    str r0, [r2, #0x00]
    bl sub_80515BC
    movs r0, #0x01
    bl oam_802FE4C
    bl oam_update
    bl main_frameProc
    ldr r0, _080517B4 @ =0x03002E44
    bl sub_8048D44
    bl main_frameProc
    bl sub_8050F74
    bl main_frameProc
    ldr r0, _080517B4 @ =0x03002E44
    bl sub_804AE08
    bl main_frameProc
    subs r7, #0x3A
    adds r0, r4, r7
    ldrh r1, [r0, #0x00]
    movs r0, #0xF0
    lsls r0, r0, #0x04
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r2, r7, #0x0
    adds r4, r4, r2
    mov r10, r4
    cmp r0, r1
    bne _08051782
    ldrh r1, [r4, #0x00]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    bne _08051782
    bl sub_80524CC
_08051782:
    movs r0, #0x01
    bl pltt_setDirtyFlag
    ldr r3, _080517B4 @ =0x03002E44
    ldr r4, _080517C0 @ =0x00000C58
    adds r1, r3, r4
    movs r0, #0x00
    str r0, [r1, #0x00]
    bl sub_805A7C0
    ldr r0, _080517B4 @ =0x03002E44
    bl sub_8032C2C
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x0C
    beq _080517C8
    cmp r0, #0x0C
    bgt _080517C4
    cmp r0, #0x00
    beq _080517C8
    b _080517D0
    .byte 0x00, 0x00
_080517B0: .4byte 0x000007FC
_080517B4: .4byte 0x03002E44
_080517B8: .4byte 0x00000814
_080517BC: .4byte 0x000007F4
_080517C0: .4byte 0x00000C58
_080517C4:
    cmp r0, #0x10
    bne _080517D0
_080517C8:
    movs r0, #0x27
    bl m4aSongNumStart
    b _080517D6
_080517D0:
    movs r0, #0x26
    bl m4aSongNumStart
_080517D6:
    mov r7, r10
    ldrh r2, [r7, #0x00]
    movs r1, #0xF0
    lsls r1, r1, #0x04
    ands r1, r2
    movs r0, #0x80
    lsls r0, r0, #0x02
    cmp r1, r0
    beq _08051804
    cmp r1, r0
    bgt _08051804
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    bne _08051804
    movs r0, #0x10
    ands r0, r2
    cmp r0, #0x00
    bne _08051804
    movs r0, #0x03
    bl m4aSongNumStart
    b _0805180A
_08051804:
    movs r0, #0x04
    bl m4aSongNumStart
_0805180A:
    ldr r1, _0805187C @ =0x03002E20
    movs r0, #0x00
    str r0, [r1, #0x10]
    movs r0, #0x01
    mov r9, r0
    movs r6, #0x00
    ldr r1, _08051880 @ =0x03004F50
    movs r2, #0xE0
    lsls r2, r2, #0x05
    adds r0, r2, #0x0
    strh r0, [r1, #0x00]
    movs r4, #0xFD
    lsls r4, r4, #0x03
    ldr r3, _08051884 @ =0x03002E44
    adds r4, r3, r4
    str r4, [sp, #0x008]
    ldr r7, _08051888 @ =0x00000C88
    adds r7, r3, r7
    str r7, [sp, #0x00C]
    ldr r0, _0805188C @ =0x000007D4
    adds r0, r3, r0
    str r0, [sp, #0x004]
    ldr r7, _08051890 @ =0x03002C80
    mov r8, r7
_0805183A:
    movs r4, #0xE0
    lsls r4, r4, #0x05
    ldrb r0, [r7, #0x01]
    cmp r0, #0x00
    beq _0805185E
    adds r5, r4, #0x0
    mov r2, r8
    adds r2, #0x02
    mov r1, r8
    ldrb r3, [r1, #0x01]
_0805184E:
    ldrh r1, [r2, #0x00]
    adds r0, r5, #0x0
    ands r0, r1
    ands r4, r0
    adds r2, #0x02
    subs r3, #0x01
    cmp r3, #0x00
    bne _0805184E
_0805185E:
    bl main_frameProc
    movs r2, #0xE0
    lsls r2, r2, #0x05
    cmp r4, r2
    beq _08051894
    adds r6, #0x01
    cmp r6, #0xB4
    ble _08051898
    movs r0, #0x00
    strh r0, [r7, #0x16]
    bl sio2_stop
    b _0805189E
    .byte 0x00, 0x00
_0805187C: .4byte 0x03002E20
_08051880: .4byte 0x03004F50
_08051884: .4byte 0x03002E44
_08051888: .4byte 0x00000C88
_0805188C: .4byte 0x000007D4
_08051890: .4byte 0x03002C80
_08051894:
    movs r3, #0x00
    mov r9, r3
_08051898:
    mov r4, r9
    cmp r4, #0x00
    bne _0805183A
_0805189E:
    ldr r1, _08051900 @ =0x03004F50
    movs r0, #0x00
    strh r0, [r1, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldrh r0, [r2, #0x00]
    movs r7, #0xB0
    lsls r7, r7, #0x05
    adds r1, r7, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    ldr r5, _08051904 @ =0x08051F85
    ldr r4, _08051908 @ =0x03002E20
    movs r0, #0x01
    movs r1, #0x02
    negs r1, r1
    bl irq_updateMask
    str r5, [r4, #0x0C]
    movs r0, #0x02
    ldr r1, _0805190C @ =0x00010001
    bl irq_updateMask
    ldr r1, _08051910 @ =0x00010004
    movs r0, #0x02
    bl irq_updateMask
    ldr r1, _08051914 @ =0x03002E44
    ldr r2, _08051918 @ =0x000007DA
    adds r0, r1, r2
    ldrh r1, [r0, #0x00]
    movs r0, #0xF0
    lsls r0, r0, #0x04
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x01
    cmp r0, r1
    bne _0805191C
    mov r3, r10
    ldrh r1, [r3, #0x00]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    bne _0805191C
    bl main_frameProc
    bl sub_8052A4C
    b _08051932
_08051900: .4byte 0x03004F50
_08051904: .4byte sub_8051F84
_08051908: .4byte 0x03002E20
_0805190C: .4byte 0x00010001
_08051910: .4byte 0x00010004
_08051914: .4byte 0x03002E44
_08051918: .4byte 0x000007DA
_0805191C:
    ldr r0, _08051968 @ =0x08052021
    ldr r1, _0805196C @ =0x03004F70
    str r0, [r1, #0x04]
    ldr r0, _08051970 @ =0x0805207D
    str r0, [r1, #0x00]
    ldr r0, _08051974 @ =0x080520B5
    str r0, [r1, #0x08]
    movs r0, #0x03
    strb r0, [r1, #0x0E]
    bl trns_start
_08051932:
    movs r4, #0x01
    str r4, [sp, #0x000]
    ldr r1, _08051978 @ =0x03005C50
    movs r0, #0x00
    str r0, [r1, #0x00]
    ldr r7, [sp, #0x008]
    strb r0, [r7, #0x00]
_08051940:
    ldr r0, _08051978 @ =0x03005C50
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    beq _08051A12
    ldr r0, [sp, #0x000]
    cmp r0, #0x00
    beq _08051A12
    ldr r2, [sp, #0x00C]
    ldr r1, [r2, #0x00]
    cmp r1, #0x00
    bge _0805197C
    movs r0, #0x80
    lsls r0, r0, #0x17
    ands r1, r0
    cmp r1, #0x00
    beq _080519A4
    bl sub_801531C
    b _080519A4
    .byte 0x00, 0x00
_08051968: .4byte sub_8052020
_0805196C: .4byte 0x03004F70
_08051970: .4byte sub_805207C
_08051974: .4byte sub_80520B4
_08051978: .4byte 0x03005C50
_0805197C:
    ldr r3, _080519E0 @ =0x03002E44
    ldr r4, _080519E4 @ =0x000007DA
    adds r0, r3, r4
    ldrh r0, [r0, #0x00]
    movs r7, #0x80
    lsls r7, r7, #0x02
    adds r1, r7, #0x0
    ands r0, r1
    cmp r0, #0x00
    beq _080519A4
    ldr r1, [sp, #0x008]
    ldrb r0, [r1, #0x00]
    cmp r0, #0x02
    blt _080519A4
    cmp r0, #0x03
    ble _080519A0
    cmp r0, #0x05
    bne _080519A4
_080519A0:
    bl sub_801531C
_080519A4:
    ldr r0, _080519E8 @ =0x08102414
    ldr r1, [r0, #0x00]
    ldrh r0, [r1, #0x04]
    cmp r0, #0x00
    beq _080519B6
    adds r0, r1, #0x0
    movs r1, #0x02
    bl m4aMPlayFadeOut
_080519B6:
    ldr r2, _080519E0 @ =0x03002E44
    ldr r3, _080519E4 @ =0x000007DA
    adds r0, r2, r3
    ldrh r1, [r0, #0x00]
    movs r4, #0xF0
    lsls r4, r4, #0x04
    adds r0, r4, #0x0
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x01
    cmp r0, r1
    bne _080519FC
    ldr r0, _080519EC @ =0x080514B1
    ldr r7, _080519F0 @ =0x03004F70
    str r0, [r7, #0x04]
    ldr r0, _080519F4 @ =0x08051555
    str r0, [r7, #0x00]
    ldr r0, _080519F8 @ =0x08051FD1
    str r0, [r7, #0x08]
    b _08051A0A
    .byte 0x00, 0x00
_080519E0: .4byte 0x03002E44
_080519E4: .4byte 0x000007DA
_080519E8: .4byte 0x08102414
_080519EC: .4byte sub_80514B0
_080519F0: .4byte 0x03004F70
_080519F4: .4byte sub_8051554
_080519F8: .4byte sub_8051FD0
_080519FC:
    ldr r0, _08051A70 @ =0x080520D5
    ldr r1, _08051A74 @ =0x03004F70
    str r0, [r1, #0x04]
    ldr r0, _08051A78 @ =0x08052169
    str r0, [r1, #0x00]
    ldr r0, _08051A7C @ =0x080521C5
    str r0, [r1, #0x08]
_08051A0A:
    bl trns_start
    movs r2, #0x00
    str r2, [sp, #0x000]
_08051A12:
    bl oam_update
    bl main_frameProc
    ldr r3, [sp, #0x004]
    ldrb r1, [r3, #0x00]
    movs r0, #0x40
    ands r0, r1
    movs r1, #0x00
    cmp r0, #0x00
    bne _08051A2A
    movs r1, #0x01
_08051A2A:
    adds r0, r1, #0x0
    bl oam_802FE4C
    ldr r4, _08051A80 @ =0x03002E44
    ldr r7, _08051A84 @ =0x000007D7
    adds r5, r4, r7
    ldrb r0, [r5, #0x00]
    cmp r0, #0x01
    bls _08051A90
    movs r4, #0x00
    bl sub_802DC88
    cmp r0, #0x00
    bne _08051A48
    movs r4, #0x01
_08051A48:
    ldr r1, _08051A88 @ =0x03002C80
    ldrb r0, [r1, #0x16]
    cmp r0, #0x01
    beq _08051A52
    movs r4, #0x01
_08051A52:
    ldrb r0, [r1, #0x01]
    ldrb r5, [r5, #0x00]
    cmp r0, r5
    beq _08051A5C
    movs r4, #0x01
_08051A5C:
    cmp r4, #0x00
    beq _08051A90
    movs r0, #0x0C
    ldr r1, [sp, #0x008]
    strb r0, [r1, #0x00]
    ldr r1, _08051A8C @ =0x03005C50
    movs r0, #0x01
    str r0, [r1, #0x00]
    b _08051D3A
    .byte 0x00, 0x00
_08051A70: .4byte sub_80520D4
_08051A74: .4byte 0x03004F70
_08051A78: .4byte sub_8052168
_08051A7C: .4byte sub_80521C4
_08051A80: .4byte 0x03002E44
_08051A84: .4byte 0x000007D7
_08051A88: .4byte 0x03002C80
_08051A8C: .4byte 0x03005C50
_08051A90:
    movs r6, #0x00
    ldr r2, _08051BB8 @ =0x03004EA0
    mov r12, r2
    movs r3, #0x10
    mov r10, r3
    movs r4, #0x80
    mov r9, r4
    movs r7, #0x40
    mov r8, r7
_08051AA2:
    movs r1, #0x00
    lsls r5, r6, #0x01
    ldr r2, _08051BBC @ =0x03004F30
    adds r0, r5, r2
    ldrh r2, [r0, #0x00]
    adds r0, r2, #0x0
    mov r3, r10
    ands r0, r3
    cmp r0, #0x00
    beq _08051ABA
    movs r1, #0x80
    lsls r1, r1, #0x01
_08051ABA:
    movs r0, #0x20
    ands r0, r2
    cmp r0, #0x00
    beq _08051ACA
    movs r4, #0x80
    lsls r4, r4, #0x02
    adds r0, r4, #0x0
    orrs r1, r0
_08051ACA:
    adds r0, r2, #0x0
    mov r7, r9
    ands r0, r7
    cmp r0, #0x00
    beq _08051AE0
    movs r3, #0x80
    lsls r3, r3, #0x03
    adds r0, r3, #0x0
    orrs r1, r0
    lsls r0, r1, #0x10
    lsrs r1, r0, #0x10
_08051AE0:
    adds r0, r2, #0x0
    mov r4, r8
    ands r0, r4
    cmp r0, #0x00
    beq _08051AF6
    movs r7, #0x80
    lsls r7, r7, #0x04
    adds r0, r7, #0x0
    orrs r1, r0
    lsls r0, r1, #0x10
    lsrs r1, r0, #0x10
_08051AF6:
    movs r0, #0x02
    ands r0, r2
    cmp r0, #0x00
    beq _08051B0A
    movs r3, #0x80
    lsls r3, r3, #0x07
    adds r0, r3, #0x0
    orrs r1, r0
    lsls r0, r1, #0x10
    lsrs r1, r0, #0x10
_08051B0A:
    movs r7, #0x01
    adds r0, r2, #0x0
    ands r0, r7
    cmp r0, #0x00
    beq _08051B20
    movs r4, #0x80
    lsls r4, r4, #0x08
    adds r0, r4, #0x0
    orrs r1, r0
    lsls r0, r1, #0x10
    lsrs r1, r0, #0x10
_08051B20:
    movs r3, #0x80
    lsls r3, r3, #0x01
    adds r0, r2, #0x0
    ands r0, r3
    cmp r0, #0x00
    beq _08051B30
    mov r0, r10
    orrs r1, r0
_08051B30:
    movs r4, #0x80
    lsls r4, r4, #0x02
    ands r2, r4
    cmp r2, #0x00
    beq _08051B3E
    mov r2, r8
    orrs r1, r2
_08051B3E:
    mov r2, r12
    adds r0, r5, r2
    ldrh r2, [r0, #0x00]
    adds r0, r2, #0x0
    ands r0, r3
    cmp r0, #0x00
    beq _08051B54
    movs r0, #0x04
    orrs r1, r0
    lsls r0, r1, #0x10
    lsrs r1, r0, #0x10
_08051B54:
    adds r0, r2, #0x0
    ands r0, r4
    cmp r0, #0x00
    beq _08051B60
    mov r3, r9
    orrs r1, r3
_08051B60:
    movs r0, #0x04
    ands r0, r2
    cmp r0, #0x00
    beq _08051B74
    movs r4, #0x80
    lsls r4, r4, #0x06
    adds r0, r4, #0x0
    orrs r1, r0
    lsls r0, r1, #0x10
    lsrs r1, r0, #0x10
_08051B74:
    movs r3, #0x08
    ands r2, r3
    cmp r2, #0x00
    beq _08051B88
    movs r2, #0x80
    lsls r2, r2, #0x05
    adds r0, r2, #0x0
    orrs r1, r0
    lsls r0, r1, #0x10
    lsrs r1, r0, #0x10
_08051B88:
    ldr r4, _08051BC0 @ =0x03002E44
    ldr r2, _08051BC4 @ =0x0000081C
    adds r0, r4, r2
    adds r0, r0, r5
    strh r1, [r0, #0x00]
    adds r6, #0x01
    cmp r6, #0x03
    ble _08051AA2
    ldr r4, [sp, #0x004]
    ldrb r1, [r4, #0x00]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0x00
    beq _08051BCC
    ldr r0, _08051BC0 @ =0x03002E44
    bl sub_802D07C
    cmp r0, #0x00
    beq _08051BB0
    b _08051D3A
_08051BB0:
    ldr r0, _08051BC8 @ =0x03005C50
    str r7, [r0, #0x00]
    b _08051D3A
    .byte 0x00, 0x00
_08051BB8: .4byte 0x03004EA0
_08051BBC: .4byte 0x03004F30
_08051BC0: .4byte 0x03002E44
_08051BC4: .4byte 0x0000081C
_08051BC8: .4byte 0x03005C50
_08051BCC:
    movs r0, #0x80
    ands r0, r1
    cmp r0, #0x00
    beq _08051BEC
    movs r0, #0x0F
    ands r0, r1
    cmp r0, #0x03
    bne _08051BEC
    mov r7, r12
    ldrh r0, [r7, #0x00]
    ands r0, r3
    cmp r0, #0x00
    beq _08051BEC
    ldr r0, _08051D68 @ =0x03002E44
    bl sub_802BF94
_08051BEC:
    ldr r4, _08051D6C @ =0x03002E20
    ldr r0, [r4, #0x10]
    adds r0, #0x01
    str r0, [r4, #0x10]
    bl sub_8043840
    bl sub_804D8F8
    ldr r0, _08051D68 @ =0x03002E44
    bl sub_804A4D8
    ldr r0, [sp, #0x000]
    cmp r0, #0x00
    beq _08051C12
    ldr r0, _08051D70 @ =0x03005C50
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    beq _08051C12
    b _08051D3A
_08051C12:
    ldr r0, _08051D68 @ =0x03002E44
    bl sub_804978C
    ldr r0, _08051D68 @ =0x03002E44
    bl sub_804AEFC
    bl sub_8051014
    bl sub_80484E0
    ldr r0, _08051D68 @ =0x03002E44
    bl sub_8049850
    ldr r0, _08051D68 @ =0x03002E44
    bl sub_804A878
    ldr r0, _08051D68 @ =0x03002E44
    bl sub_804C0A8
    ldr r0, _08051D68 @ =0x03002E44
    bl sub_8049B0C
    ldr r0, _08051D68 @ =0x03002E44
    bl sub_8049D78
    ldr r0, _08051D68 @ =0x03002E44
    bl sub_804C38C
    bl sub_804389C
    ldr r1, _08051D68 @ =0x03002E44
    ldr r2, _08051D74 @ =0x000007DA
    adds r0, r1, r2
    ldrh r1, [r0, #0x00]
    movs r3, #0xF0
    lsls r3, r3, #0x04
    adds r0, r3, #0x0
    ands r0, r1
    movs r7, #0x80
    lsls r7, r7, #0x02
    cmp r0, r7
    bne _08051D2A
    ldr r0, [r4, #0x10]
    ldr r2, _08051D78 @ =0x080E645C
    lsls r0, r0, #0x1A
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _08051C74
    adds r0, #0x3F
_08051C74:
    asrs r1, r0, #0x06
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r1
    ldr r1, _08051D7C @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    subs r0, r0, r1
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r0, r0, #0x01
    mov r8, r0
    movs r0, #0x00
    mov r10, r0
    movs r1, #0x1F
    mov r9, r1
_08051C9C:
    ldr r0, _08051D80 @ =0x080AADFC
    mov r2, r10
    lsls r3, r2, #0x01
    adds r0, r3, r0
    ldrh r4, [r0, #0x00]
    adds r6, r4, #0x0
    movs r7, #0x1F
    ands r6, r7
    lsrs r5, r4, #0x05
    mov r0, r9
    ands r5, r0
    lsrs r4, r4, #0x0A
    ands r4, r0
    ldr r0, _08051D84 @ =0x080AAE1C
    adds r0, r3, r0
    ldrh r2, [r0, #0x00]
    adds r0, r2, #0x0
    ands r0, r7
    lsrs r1, r2, #0x05
    mov r7, r9
    ands r1, r7
    lsrs r2, r2, #0x0A
    ands r2, r7
    subs r0, r0, r6
    mov r7, r8
    muls r7, r0
    adds r0, r7, #0x0
    asrs r0, r0, #0x0F
    adds r6, r6, r0
    lsls r6, r6, #0x10
    lsrs r6, r6, #0x10
    subs r1, r1, r5
    mov r0, r8
    muls r0, r1
    asrs r0, r0, #0x0F
    adds r5, r5, r0
    lsls r5, r5, #0x10
    lsrs r5, r5, #0x10
    subs r2, r2, r4
    mov r0, r8
    muls r0, r2
    asrs r0, r0, #0x0F
    adds r4, r4, r0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    movs r0, #0x00
    str r3, [sp, #0x010]
    bl pltt_getBuffer
    ldr r3, [sp, #0x010]
    adds r3, r3, r0
    movs r0, #0xA0
    lsls r0, r0, #0x01
    adds r3, r3, r0
    movs r1, #0x1F
    ands r6, r1
    ands r5, r1
    lsls r5, r5, #0x05
    orrs r6, r5
    ands r4, r1
    lsls r4, r4, #0x0A
    orrs r6, r4
    strh r6, [r3, #0x00]
    movs r2, #0x01
    add r10, r2
    mov r3, r10
    cmp r3, #0x0F
    ble _08051C9C
    movs r0, #0x01
    bl pltt_setDirtyFlag
_08051D2A:
    ldr r4, [sp, #0x004]
    ldrb r1, [r4, #0x00]
    movs r0, #0x40
    ands r0, r1
    cmp r0, #0x00
    beq _08051D3A
    bl m4aMPlayAllStop
_08051D3A:
    ldr r7, [sp, #0x000]
    cmp r7, #0x00
    beq _08051D42
    b _08051940
_08051D42:
    ldr r0, _08051D88 @ =0x03004F70
    ldrb r1, [r0, #0x0C]
    movs r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    beq _08051D50
    b _08051940
_08051D50:
    movs r4, #0x00
    movs r7, #0x00
    ldr r2, [sp, #0x00C]
    ldr r1, [r2, #0x00]
    cmp r1, #0x00
    bge _08051D8C
    movs r0, #0x80
    lsls r0, r0, #0x17
    ands r1, r0
    cmp r1, #0x00
    beq _08051DB0
    b _08051DAA
_08051D68: .4byte 0x03002E44
_08051D6C: .4byte 0x03002E20
_08051D70: .4byte 0x03005C50
_08051D74: .4byte 0x000007DA
_08051D78: .4byte 0x080E645C
_08051D7C: .4byte 0x000003FF
_08051D80: .4byte 0x080AADFC
_08051D84: .4byte 0x080AAE1C
_08051D88: .4byte 0x03004F70
_08051D8C:
    ldr r3, _08051DC8 @ =0x03002E44
    ldr r1, _08051DCC @ =0x000007DA
    adds r0, r3, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    beq _08051DB0
    ldr r2, [sp, #0x008]
    ldrb r0, [r2, #0x00]
    cmp r0, #0x05
    bgt _08051DB0
    cmp r0, #0x02
    blt _08051DB0
_08051DAA:
    bl sub_801531C
    adds r7, r0, #0x0
_08051DB0:
    ldr r3, [sp, #0x008]
    ldrb r0, [r3, #0x00]
    subs r0, #0x01
    cmp r0, #0x0B
    bls _08051DBC
    b _08051ED2
_08051DBC:
    lsls r0, r0, #0x02
    ldr r1, _08051DD0 @ =0x08051DD4
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_08051DC8: .4byte 0x03002E44
_08051DCC: .4byte 0x000007DA
_08051DD0: .4byte 0x08051DD4
    .byte 0x04, 0x1E, 0x05, 0x08, 0x50, 0x1E, 0x05, 0x08, 0x64, 0x1E, 0x05, 0x08, 0x78, 0x1E, 0x05, 0x08
    .byte 0xD0, 0x1E, 0x05, 0x08, 0xA0, 0x1E, 0x05, 0x08, 0xAC, 0x1E, 0x05, 0x08, 0x8C, 0x1E, 0x05, 0x08
    .byte 0xB4, 0x1E, 0x05, 0x08, 0xD2, 0x1E, 0x05, 0x08, 0xD2, 0x1E, 0x05, 0x08, 0xC8, 0x1E, 0x05, 0x08
    .byte 0x01, 0x9C, 0x21, 0x78, 0x40, 0x20, 0x08, 0x40, 0x00, 0x06, 0x06, 0x0E, 0x0C, 0x48, 0x0D, 0x49
    .byte 0x45, 0x18, 0x28, 0x88, 0xF0, 0x24, 0x24, 0x01, 0x04, 0x40, 0x09, 0x48, 0xB0, 0xF7, 0xA2, 0xFE
    .byte 0x28, 0x88, 0x09, 0x4A, 0x02, 0x40, 0x2A, 0x80, 0x80, 0x20, 0x40, 0x00, 0x84, 0x42, 0x2E, 0xD1
    .byte 0x00, 0x2E, 0x2C, 0xD0, 0x80, 0x21, 0x10, 0x1C, 0x08, 0x43, 0x28, 0x80, 0x27, 0xE0, 0x00, 0x00
    .byte 0x44, 0x2E, 0x00, 0x03, 0xDA, 0x07, 0x00, 0x00, 0xFF, 0x7F, 0x00, 0x00, 0x02, 0x48, 0xB0, 0xF7
    .byte 0xBF, 0xFE, 0x02, 0x4C, 0x3B, 0xE0, 0x00, 0x00, 0x44, 0x2E, 0x00, 0x03, 0xCD, 0x21, 0x00, 0x08
    .byte 0x02, 0x48, 0xB0, 0xF7, 0xBF, 0xFE, 0x02, 0x4C, 0x31, 0xE0, 0x00, 0x00, 0x44, 0x2E, 0x00, 0x03
    .byte 0xCD, 0x21, 0x00, 0x08, 0x02, 0x48, 0xB0, 0xF7, 0xBF, 0xFE, 0x02, 0x4C, 0x27, 0xE0, 0x00, 0x00
    .byte 0x44, 0x2E, 0x00, 0x03, 0xCD, 0x21, 0x00, 0x08, 0x02, 0x48, 0xAF, 0xF7, 0x0B, 0xFF, 0x02, 0x4C
    .byte 0x1D, 0xE0, 0x00, 0x00, 0x44, 0x2E, 0x00, 0x03, 0x7D, 0x16, 0x05, 0x08, 0x01, 0x48, 0xAF, 0xF7
    .byte 0x67, 0xFF, 0xF4, 0xE7, 0x44, 0x2E, 0x00, 0x03, 0x00, 0x4C, 0x10, 0xE0, 0x91, 0x8B, 0x02, 0x08
    .byte 0x02, 0x48, 0xB0, 0xF7, 0xAB, 0xFE, 0x02, 0x4C, 0x09, 0xE0, 0x00, 0x00, 0x44, 0x2E, 0x00, 0x03
    .byte 0xCD, 0x21, 0x00, 0x08, 0x00, 0x4C, 0x02, 0xE0, 0x99, 0x6B, 0x01, 0x08, 0x07, 0x4C
_08051ED2:
    cmp r7, #0x00
    beq _08051EFC
    adds r0, r4, #0x0
    bl sub_8015330
    ldr r0, _08051EF4 @ =0x080149AD
    ldr r2, _08051EF8 @ =0x03002E20
    str r0, [r2, #0x00]
    ldrb r0, [r2, #0x08]
    adds r0, #0x01
    movs r1, #0x07
    ands r0, r1
    strb r0, [r2, #0x08]
    b _08051F0A
    .byte 0x00, 0x00, 0x6D, 0x0E, 0x00, 0x08
_08051EF4: .4byte sub_80149AC
_08051EF8: .4byte 0x03002E20
_08051EFC:
    ldr r0, _08051F70 @ =0x03002E20
    str r4, [r0, #0x00]
    ldrb r1, [r0, #0x08]
    adds r1, #0x01
    movs r2, #0x07
    ands r1, r2
    strb r1, [r0, #0x08]
_08051F0A:
    movs r0, #0x01
    bl oam_802FE4C
    ldr r0, _08051F74 @ =0x0000000B
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x00
    beq _08051F30
    ldr r5, _08051F78 @ =0x08102414
    adds r4, r0, #0x0
_08051F1E:
    ldr r0, [r5, #0x00]
    ldr r1, _08051F7C @ =0x08102498
    ldr r1, [r1, #0x08]
    bl MPlayStart
    adds r5, #0x0C
    subs r4, #0x01
    cmp r4, #0x00
    bne _08051F1E
_08051F30:
    bl main_frameProc
    movs r1, #0x05
    negs r1, r1
    movs r0, #0x01
    bl irq_updateMask
    movs r5, #0x00
    ldr r4, _08051F70 @ =0x03002E20
    movs r0, #0x01
    movs r1, #0x02
    negs r1, r1
    bl irq_updateMask
    str r5, [r4, #0x0C]
    movs r0, #0x02
    ldr r1, _08051F80 @ =0x00010001
    bl irq_updateMask
    movs r0, #0x80
    lsls r0, r0, #0x13
    strh r5, [r0, #0x00]
    movs r0, #0x01
    add sp, #0x014
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_08051F70: .4byte 0x03002E20
_08051F74: .4byte 0x0000000B
_08051F78: .4byte 0x08102414
_08051F7C: .4byte 0x08102498
_08051F80: .4byte 0x00010001
    thumb_func_start sub_8051F84
sub_8051F84:
    push {r4, r5, r6, lr}
    ldr r4, _08051FB0 @ =0x03002E20
    adds r6, r4, #0x0
    adds r6, #0x24
    ldr r0, _08051FB4 @ =0x00000848
    adds r5, r4, r0
    adds r0, r5, #0x0
    bl sub_80312E8
    ldr r0, _08051FB8 @ =0x00000BC8
    adds r4, r4, r0
    movs r0, #0x14
    ldsh r1, [r5, r0]
    movs r2, #0x00
    ldsb r2, [r4, r2]
    adds r0, r6, #0x0
    bl sub_804AD00
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08051FB0: .4byte 0x03002E20
_08051FB4: .4byte 0x00000848
_08051FB8: .4byte 0x00000BC8
    thumb_func_start sub_8051FBC
sub_8051FBC:
    ldr r1, _08051FCC @ =0x03004F70
    ldrb r0, [r1, #0x0F]
    cmp r0, #0x28
    bne _08051FC8
    movs r0, #0x00
    str r0, [r1, #0x00]
_08051FC8:
    bx lr
    .byte 0x00, 0x00
_08051FCC: .4byte 0x03004F70
    thumb_func_start sub_8051FD0
sub_8051FD0:
    push {r4, r5, lr}
    movs r1, #0x05
    negs r1, r1
    movs r0, #0x01
    bl irq_updateMask
    movs r5, #0x00
    ldr r4, _08052014 @ =0x03002E20
    movs r0, #0x01
    movs r1, #0x02
    negs r1, r1
    bl irq_updateMask
    str r5, [r4, #0x0C]
    movs r0, #0x02
    ldr r1, _08052018 @ =0x00010001
    bl irq_updateMask
    ldr r1, _0805201C @ =0x04000050
    movs r0, #0xFF
    strh r0, [r1, #0x00]
    adds r1, #0x04
    movs r0, #0x10
    strh r0, [r1, #0x00]
    movs r0, #0x00
    bl pltt_getBuffer
    strh r5, [r0, #0x00]
    movs r0, #0x01
    bl pltt_setDirtyFlag
    pop {r4, r5}
    pop {r0}
    bx r0
_08052014: .4byte 0x03002E20
_08052018: .4byte 0x00010001
_0805201C: .4byte 0x04000050
    thumb_func_start sub_8052020
sub_8052020:
    push {lr}
    add sp, #-0x004
    ldr r2, _0805206C @ =0x04000008
    ldrb r1, [r2, #0x01]
    movs r0, #0x20
    negs r0, r0
    ands r0, r1
    movs r1, #0x06
    orrs r0, r1
    strb r0, [r2, #0x01]
    movs r0, #0x00
    bl pltt_getBuffer
    movs r2, #0x9F
    lsls r2, r2, #0x01
    adds r1, r0, r2
    movs r0, #0x00
    strh r0, [r1, #0x00]
    movs r0, #0x01
    bl pltt_setDirtyFlag
    movs r0, #0x01
    negs r0, r0
    str r0, [sp, #0x000]
    ldr r1, _08052070 @ =0x06002E00
    ldr r2, _08052074 @ =0x01000008
    mov r0, sp
    bl CpuFastSet
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldrh r1, [r2, #0x00]
    ldr r0, _08052078 @ =0x00009FFF
    ands r0, r1
    strh r0, [r2, #0x00]
    add sp, #0x004
    pop {r0}
    bx r0
_0805206C: .4byte 0x04000008
_08052070: .4byte 0x06002E00
_08052074: .4byte 0x01000008
_08052078: .4byte 0x00009FFF
    thumb_func_start sub_805207C
sub_805207C:
    ldr r2, _0805208C @ =0x03004F70
    ldrb r1, [r2, #0x0F]
    cmp r1, #0x08
    bne _08052090
    movs r0, #0x00
    str r0, [r2, #0x00]
    b _080520AC
    .byte 0x00, 0x00
_0805208C: .4byte 0x03004F70
_08052090:
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _080520A0
    asrs r1, r1, #0x01
    movs r0, #0x07
    subs r0, r0, r1
    b _080520A2
_080520A0:
    asrs r0, r1, #0x01
_080520A2:
    lsls r0, r0, #0x02
    ldr r2, _080520B0 @ =0x06002E00
    adds r1, r0, r2
    movs r0, #0x00
    str r0, [r1, #0x00]
_080520AC:
    bx lr
    .byte 0x00, 0x00
_080520B0: .4byte 0x06002E00
    thumb_func_start sub_80520B4
sub_80520B4:
    push {lr}
    ldr r2, _080520D0 @ =0x04000008
    ldrb r1, [r2, #0x01]
    movs r0, #0x20
    negs r0, r0
    ands r0, r1
    movs r1, #0x07
    orrs r0, r1
    strb r0, [r2, #0x01]
    bl sub_804EDAC
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_080520D0: .4byte 0x04000008
    thumb_func_start sub_80520D4
sub_80520D4:
    push {r4, lr}
    add sp, #-0x008
    movs r0, #0x00
    bl pltt_getBuffer
    movs r2, #0x9F
    lsls r2, r2, #0x01
    adds r1, r0, r2
    movs r0, #0x00
    strh r0, [r1, #0x00]
    movs r0, #0x01
    bl pltt_setDirtyFlag
    movs r0, #0x00
    str r0, [sp, #0x000]
    ldr r1, _08052148 @ =0x06002E00
    ldr r2, _0805214C @ =0x01000008
    mov r0, sp
    bl CpuFastSet
    ldr r0, _08052150 @ =0x91709170
    str r0, [sp, #0x004]
    add r4, sp, #0x004
    movs r0, #0x01
    bl map_getBufferPtr
    adds r1, r0, #0x0
    ldr r2, _08052154 @ =0x01000200
    adds r0, r4, #0x0
    bl CpuFastSet
    movs r0, #0x02
    bl map_setBufferDirty
    ldr r1, _08052158 @ =0x04000040
    movs r0, #0xF0
    strh r0, [r1, #0x00]
    adds r1, #0x04
    movs r0, #0xA0
    strh r0, [r1, #0x00]
    ldr r0, _0805215C @ =0x04000048
    movs r1, #0x3F
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldrh r1, [r2, #0x00]
    ldr r0, _08052160 @ =0x00009FFF
    ands r0, r1
    strh r0, [r2, #0x00]
    movs r1, #0x03
    ldr r0, _08052164 @ =0x03004F70
    strb r1, [r0, #0x0E]
    add sp, #0x008
    pop {r4}
    pop {r0}
    bx r0
_08052148: .4byte 0x06002E00
_0805214C: .4byte 0x01000008
_08052150: .4byte 0x91709170
_08052154: .4byte 0x01000200
_08052158: .4byte 0x04000040
_0805215C: .4byte 0x04000048
_08052160: .4byte 0x00009FFF
_08052164: .4byte 0x03004F70
    thumb_func_start sub_8052168
sub_8052168:
    push {r4, lr}
    ldr r4, _080521A0 @ =0x03004F70
    ldrb r3, [r4, #0x0F]
    ldr r2, _080521A4 @ =0x04000008
    ldrb r1, [r2, #0x01]
    movs r0, #0x20
    negs r0, r0
    ands r0, r1
    movs r1, #0x06
    orrs r0, r1
    strb r0, [r2, #0x01]
    cmp r3, #0x14
    bne _08052186
    movs r0, #0x00
    str r0, [r4, #0x00]
_08052186:
    cmp r3, #0x07
    bgt _080521BA
    movs r0, #0x01
    ands r0, r3
    cmp r0, #0x00
    beq _080521AC
    asrs r1, r3, #0x01
    movs r0, #0x03
    subs r0, r0, r1
    lsls r0, r0, #0x02
    ldr r2, _080521A8 @ =0x06002E00
    b _080521B2
    .byte 0x00, 0x00
_080521A0: .4byte 0x03004F70
_080521A4: .4byte 0x04000008
_080521A8: .4byte 0x06002E00
_080521AC:
    asrs r0, r3, #0x01
    lsls r0, r0, #0x02
    ldr r2, _080521C0 @ =0x06002E10
_080521B2:
    adds r1, r0, r2
    movs r0, #0x01
    negs r0, r0
    str r0, [r1, #0x00]
_080521BA:
    pop {r4}
    pop {r0}
    bx r0
_080521C0: .4byte 0x06002E10
    thumb_func_start sub_80521C4
sub_80521C4:
    push {r4, r5, lr}
    movs r1, #0x05
    negs r1, r1
    movs r0, #0x01
    bl irq_updateMask
    movs r5, #0x00
    ldr r4, _0805220C @ =0x03002E20
    movs r0, #0x01
    movs r1, #0x02
    negs r1, r1
    bl irq_updateMask
    str r5, [r4, #0x0C]
    movs r0, #0x02
    ldr r1, _08052210 @ =0x00010001
    bl irq_updateMask
    movs r0, #0x00
    bl pltt_getBuffer
    adds r4, r0, #0x0
    movs r0, #0x00
    bl pltt_getBuffer
    movs r1, #0x9F
    lsls r1, r1, #0x01
    adds r0, r0, r1
    ldrh r0, [r0, #0x00]
    strh r0, [r4, #0x00]
    movs r0, #0x01
    bl pltt_setDirtyFlag
    pop {r4, r5}
    pop {r0}
    bx r0
_0805220C: .4byte 0x03002E20
_08052210: .4byte 0x00010001
    .byte 0x10, 0xB5, 0x11, 0x4A, 0x51, 0x78, 0x20, 0x20, 0x40, 0x42, 0x08, 0x40, 0x06, 0x21, 0x08, 0x43
    .byte 0x50, 0x70, 0xDB, 0xF7, 0xD3, 0xF9, 0x01, 0x1C, 0x03, 0x20, 0x08, 0x40, 0x80, 0x00, 0x0B, 0x49
    .byte 0x40, 0x18, 0x0B, 0x4C, 0x21, 0x1C, 0x0F, 0xF0, 0x91, 0xF8, 0x0A, 0x49, 0x20, 0x1C, 0x08, 0x22
    .byte 0x0F, 0xF0, 0x82, 0xF8, 0x80, 0x22, 0xD2, 0x04, 0x11, 0x88, 0x07, 0x48, 0x08, 0x40, 0x10, 0x80
    .byte 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x08, 0x00, 0x00, 0x04, 0x74, 0xFC, 0x0E, 0x08
    .byte 0x80, 0x2B, 0x00, 0x06, 0x00, 0x0E, 0x00, 0x06, 0xFF, 0x9F, 0x00, 0x00, 0x00, 0xB5, 0x03, 0x49
    .byte 0xC8, 0x7B, 0x04, 0x28, 0x04, 0xD1, 0x00, 0x20, 0x08, 0x60, 0x0C, 0xE0, 0x70, 0x4F, 0x00, 0x03
    .byte 0xAE, 0x21, 0x49, 0x00, 0x40, 0x18, 0x40, 0x01, 0xC0, 0x21, 0xC9, 0x04, 0x40, 0x18, 0x03, 0x49
    .byte 0x08, 0x22, 0x0F, 0xF0, 0x59, 0xF8, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x06
    thumb_func_start sub_80522A4
sub_80522A4:
    push {r4, r5, r6, lr}
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    ldr r2, _080522E0 @ =0x03002E20
    adds r6, r2, #0x0
    adds r6, #0x24
    ldr r1, _080522E4 @ =0x00000838
    adds r0, r2, r1
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _080522C2
    b _080523D2
_080522C2:
    cmp r5, #0x10
    bne _080522EC
    ldr r0, _080522E8 @ =0x00000C96
    adds r4, r2, r0
    ldrb r0, [r4, #0x00]
    cmp r0, #0x1F
    bhi _080522EC
    movs r0, #0x0A
    bl m4aSongNumStart
    ldrb r1, [r4, #0x00]
    movs r0, #0x10
    orrs r0, r1
    strb r0, [r4, #0x00]
    b _080523D2
_080522E0: .4byte 0x03002E20
_080522E4: .4byte 0x00000838
_080522E8: .4byte 0x00000C96
_080522EC:
    ldr r1, _08052308 @ =0x00000C72
    adds r0, r6, r1
    ldrb r0, [r0, #0x00]
    cmp r0, r5
    bcs _080523C6
    adds r2, r6, #0x0
    subs r0, r5, #0x1
    cmp r0, #0x1F
    bhi _080523C6
    lsls r0, r0, #0x02
    ldr r1, _0805230C @ =0x08052310
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08052308: .4byte 0x00000C72
_0805230C: .4byte 0x08052310
    .byte 0xB8, 0x23, 0x05, 0x08, 0xB0, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xA8, 0x23, 0x05, 0x08
    .byte 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xA0, 0x23, 0x05, 0x08
    .byte 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08
    .byte 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0x98, 0x23, 0x05, 0x08
    .byte 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08
    .byte 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08
    .byte 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08
    .byte 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0x90, 0x23, 0x05, 0x08
    .byte 0x13, 0x20, 0x0D, 0xF0, 0xC5, 0xFD, 0x16, 0xE0, 0x0A, 0x20, 0x0D, 0xF0, 0xC1, 0xFD, 0x12, 0xE0
    .byte 0x0C, 0x20, 0x0D, 0xF0, 0xBD, 0xFD, 0x0E, 0xE0, 0x0B, 0x20, 0x0D, 0xF0, 0xB9, 0xFD, 0x0A, 0xE0
    .byte 0x0D, 0x20, 0x0D, 0xF0, 0xB5, 0xFD, 0x06, 0xE0, 0x10, 0x1C, 0xE0, 0xF7, 0x3D, 0xFC, 0x00, 0x06
    .byte 0x00, 0x0E, 0x0D, 0xF0, 0xAD, 0xFD
_080523C6:
    ldr r0, _080523D8 @ =0x00000C72
    adds r2, r6, r0
    ldrb r1, [r2, #0x00]
    adds r0, r5, #0x0
    orrs r0, r1
    strb r0, [r2, #0x00]
_080523D2:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_080523D8: .4byte 0x00000C72
    thumb_func_start sub_80523DC
sub_80523DC:
    push {r4, r5, r6, lr}
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    ldr r1, _08052418 @ =0x03002E20
    adds r4, r1, #0x0
    adds r4, #0x24
    ldr r3, _0805241C @ =0x00000838
    adds r0, r1, r3
    ldr r5, [r0, #0x00]
    ldr r0, [r5, #0x48]
    movs r3, #0x20
    ands r0, r3
    cmp r0, #0x00
    bne _080524BC
    ldr r0, _08052420 @ =0x00000C96
    adds r1, r1, r0
    ldrb r0, [r1, #0x00]
    bics r0, r2
    strb r0, [r1, #0x00]
    ldrb r1, [r1, #0x00]
    cmp r1, r2
    bcs _080524BC
    adds r0, r1, #0x0
    ands r0, r3
    cmp r0, #0x00
    beq _08052424
    movs r0, #0x13
    bl m4aSongNumStart
    b _080524BC
_08052418: .4byte 0x03002E20
_0805241C: .4byte 0x00000838
_08052420: .4byte 0x00000C96
_08052424:
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    beq _08052434
    movs r0, #0x0A
    bl m4aSongNumStart
    b _080524BC
_08052434:
    movs r6, #0x08
    adds r0, r1, #0x0
    ands r0, r6
    cmp r0, #0x00
    beq _08052446
    movs r0, #0x0C
    bl m4aSongNumStart
    b _080524BC
_08052446:
    movs r0, #0x04
    ands r0, r1
    cmp r0, #0x00
    beq _08052456
    movs r0, #0x0B
    bl m4aSongNumStart
    b _080524BC
_08052456:
    movs r0, #0x02
    ands r1, r0
    cmp r1, #0x00
    beq _08052466
    movs r0, #0x0D
    bl m4aSongNumStart
    b _080524BC
_08052466:
    adds r0, r4, #0x0
    bl sub_8032C38
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x24
    bne _08052476
    movs r0, #0x1C
_08052476:
    adds r4, r0, #0x0
    ldr r0, [r5, #0x48]
    ands r0, r6
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r6, r1, #0x0
    cmp r0, #0x00
    beq _0805248C
    movs r3, #0xA0
    lsls r3, r3, #0x01
    adds r6, r3, #0x0
_0805248C:
    adds r0, r4, #0x0
    bl m4aSongNumStart
    ldr r5, _080524C4 @ =0x08102414
    ldr r0, _080524C8 @ =0x08102498
    lsls r4, r4, #0x03
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    adds r1, r6, #0x0
    bl m4aMPlayTempoControl
_080524BC:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_080524C4: .4byte 0x08102414
_080524C8: .4byte 0x08102498
    thumb_func_start sub_80524CC
sub_80524CC:
    push {r4, r5, r6, r7, lr}
    ldr r6, _0805255C @ =0x03002E20
    ldr r0, _08052560 @ =0x00000801
    adds r5, r6, r0
    ldrb r0, [r5, #0x00]
    bl track_getCup
    adds r4, r0, #0x0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    ldrb r0, [r5, #0x00]
    bl track_getCupIndex
    lsls r0, r0, #0x18
    lsrs r7, r0, #0x18
    ldr r0, _08052564 @ =0x080EFD44
    lsls r5, r4, #0x02
    adds r0, r5, r0
    ldr r4, [r0, #0x00]
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r3, #0xA0
    lsls r3, r3, #0x01
    adds r1, r1, r3
    adds r0, r4, #0x0
    movs r2, #0x08
    bl CpuFastSet
    movs r0, #0x01
    bl pltt_setDirtyFlag
    movs r1, #0x80
    lsls r1, r1, #0x04
    adds r0, r6, r1
    ldrb r4, [r0, #0x00]
    bl dmaq_getVBlankDmaQueue
    lsls r1, r4, #0x01
    adds r1, r1, r4
    lsls r1, r1, #0x06
    ldr r2, _08052568 @ =0x0809AA4C
    adds r1, r1, r2
    ldr r2, _0805256C @ =0x06000020
    ldr r3, _08052570 @ =0x84000030
    bl dmaq_enqueue
    ldr r0, _08052574 @ =0x080EFD58
    adds r0, r5, r0
    ldr r0, [r0, #0x00]
    ldr r1, _08052578 @ =0x06000400
    bl LZ77UnCompVram
    ldr r0, _0805257C @ =0x08076EA8
    ldr r1, _08052580 @ =0x060009C0
    bl LZ77UnCompVram
    ldr r3, _08052584 @ =0x0000059C
    adds r6, r6, r3
    ldr r0, [r6, #0x00]
    ldr r0, [r0, #0x0C]
    bl sub_8032BC8
    cmp r0, #0x00
    beq _0805258C
    ldr r4, _08052588 @ =0x080E7FEC
    adds r0, r5, r7
    bl track_getRetroTrack
    b _08052594
    .byte 0x00, 0x00
_0805255C: .4byte 0x03002E20
_08052560: .4byte 0x00000801
_08052564: .4byte 0x080EFD44
_08052568: .4byte 0x0809AA4C
_0805256C: .4byte 0x06000020
_08052570: .4byte 0x84000030
_08052574: .4byte 0x080EFD58
_08052578: .4byte 0x06000400
_0805257C: .4byte 0x08076EA8
_08052580: .4byte 0x060009C0
_08052584: .4byte 0x0000059C
_08052588: .4byte 0x080E7FEC
_0805258C:
    ldr r4, _08052630 @ =0x080E7FEC
    adds r0, r5, r7
    bl track_getMKSCTrack
_08052594:
    lsls r0, r0, #0x02
    adds r0, r0, r4
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x30]
    ldr r1, _08052634 @ =0x060000E0
    bl LZ77UnCompVram
    ldr r4, _08052638 @ =0x08076EB4
    movs r0, #0x00
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    movs r2, #0x30
    bl CpuFastSet
    ldr r4, _0805263C @ =0x08076F74
    movs r0, #0x00
    movs r1, #0x00
    movs r2, #0x12
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    movs r2, #0x20
    bl CpuFastSet
    movs r0, #0x01
    bl map_setBufferDirty
    ldr r2, _08052640 @ =0x04000008
    ldrb r1, [r2, #0x01]
    movs r0, #0x3F
    ands r0, r1
    movs r1, #0x40
    orrs r0, r1
    strb r0, [r2, #0x01]
    ldrb r1, [r2, #0x01]
    movs r0, #0x20
    negs r0, r0
    ands r0, r1
    movs r1, #0x06
    orrs r0, r1
    strb r0, [r2, #0x01]
    ldr r1, _08052644 @ =0x08052EB1
    movs r0, #0x00
    bl vcount_register
    ldr r1, _08052648 @ =0x030023D4
    str r0, [r1, #0x00]
    ldr r1, _0805264C @ =0x08052EDD
    movs r0, #0x28
    bl vcount_register
    ldr r1, _08052650 @ =0x030023D8
    str r0, [r1, #0x00]
    movs r0, #0x00
    bl pltt_getBuffer
    movs r1, #0x00
    strh r1, [r0, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldrh r1, [r2, #0x00]
    ldr r0, _08052654 @ =0x00009FFF
    ands r0, r1
    strh r0, [r2, #0x00]
    ldrh r0, [r2, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x06
    adds r1, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08052630: .4byte 0x080E7FEC
_08052634: .4byte 0x060000E0
_08052638: .4byte 0x08076EB4
_0805263C: .4byte 0x08076F74
_08052640: .4byte 0x04000008
_08052644: .4byte sub_8052EB0
_08052648: .4byte 0x030023D4
_0805264C: .4byte sub_8052EDC
_08052650: .4byte 0x030023D8
_08052654: .4byte 0x00009FFF
    .byte 0xF0, 0xB5, 0x57, 0x46, 0x4E, 0x46, 0x45, 0x46, 0xE0, 0xB4, 0x84, 0xB0, 0x45, 0x48, 0x81, 0x46
    .byte 0x24, 0x21, 0x49, 0x44, 0x8C, 0x46, 0x44, 0x48, 0x48, 0x44, 0x06, 0x68, 0x43, 0x48, 0x00, 0x68
    .byte 0x80, 0x22, 0xD2, 0x01, 0x80, 0x18, 0x42, 0x4D, 0x00, 0x04, 0x02, 0x14, 0x10, 0x1C, 0x00, 0x2A
    .byte 0x00, 0xDA, 0x3F, 0x30, 0x84, 0x11, 0x80, 0x23, 0x5B, 0x00, 0x18, 0x1B, 0x3D, 0x49, 0x8A, 0x46
    .byte 0x08, 0x40, 0x80, 0x00, 0x40, 0x19, 0x01, 0x68, 0x3B, 0x48, 0x03, 0x68, 0x18, 0x1C, 0x48, 0x43
    .byte 0x40, 0x00, 0x80, 0x46, 0x20, 0x1C, 0x52, 0x46, 0x10, 0x40, 0x80, 0x00, 0x40, 0x19, 0x00, 0x68
    .byte 0x58, 0x43, 0x47, 0x00, 0x30, 0x1C, 0xBA, 0x30, 0x01, 0x88, 0x49, 0x08, 0x02, 0xAB, 0x03, 0xA8
    .byte 0x00, 0x90, 0x60, 0x46, 0x01, 0xAA, 0xE0, 0xF7, 0xE7, 0xF9, 0x30, 0x1C, 0x7C, 0x30, 0x00, 0x23
    .byte 0xC1, 0x5E, 0x08, 0x1C, 0x00, 0x29, 0x00, 0xDA, 0x3F, 0x30, 0x82, 0x11, 0x10, 0x1C, 0x53, 0x46
    .byte 0x18, 0x40, 0x80, 0x00, 0x40, 0x19, 0x06, 0x68, 0x80, 0x21, 0x49, 0x00, 0x88, 0x1A, 0x52, 0x46
    .byte 0x10, 0x40, 0x80, 0x00, 0x40, 0x19, 0x04, 0x68, 0x24, 0x48, 0x48, 0x44, 0x05, 0x68, 0x2B, 0x1C
    .byte 0x63, 0x43, 0xD8, 0x0F, 0x1B, 0x18, 0x5B, 0x10, 0x21, 0x48, 0x48, 0x44, 0x02, 0x68, 0x10, 0x1C
    .byte 0x70, 0x43, 0xC1, 0x0F, 0x40, 0x18, 0x40, 0x10, 0x1B, 0x18, 0x52, 0x42, 0x11, 0x1C, 0x61, 0x43
    .byte 0xC8, 0x0F, 0x09, 0x18, 0x49, 0x10, 0x28, 0x1C, 0x70, 0x43, 0xC2, 0x0F, 0x80, 0x18, 0x40, 0x10
    .byte 0x09, 0x18, 0x01, 0x9A, 0xD3, 0x18, 0x98, 0x44, 0x02, 0x98, 0x41, 0x18, 0x7F, 0x18, 0x43, 0x46
    .byte 0xD2, 0x1A, 0xC1, 0x1B, 0x00, 0x2A, 0x01, 0xD1, 0x00, 0x29, 0x30, 0xD0, 0x80, 0x26, 0xF6, 0x00
    .byte 0x10, 0x4D, 0x54, 0x46, 0x10, 0x4B, 0x90, 0x19, 0xA8, 0x42, 0x03, 0xD8, 0xA1, 0x42, 0x01, 0xDC
    .byte 0x99, 0x42, 0x1B, 0xDA, 0xD0, 0x0F, 0x10, 0x18, 0x42, 0x10, 0xC8, 0x0F, 0x08, 0x18, 0x41, 0x10
    .byte 0xF1, 0xE7, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x84, 0xEC, 0x03, 0x02
    .byte 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x03, 0x00, 0x00, 0x88, 0xEC, 0x03, 0x02, 0xF8, 0x0B, 0x00, 0x00
    .byte 0xFC, 0x0B, 0x00, 0x00, 0xFF, 0x07, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0x10, 0x04, 0x00, 0x14
    .byte 0x09, 0x04, 0x09, 0x14, 0xDC, 0xF7, 0x44, 0xFA, 0x00, 0x04, 0x04, 0x0C, 0x00, 0xE0, 0x00, 0x24
    .byte 0x08, 0x48, 0x41, 0x46, 0x3A, 0x1C, 0xDE, 0xF7, 0x93, 0xFB, 0x06, 0x48, 0x21, 0x1C, 0xDE, 0xF7
    .byte 0x81, 0xFB, 0x04, 0xB0, 0x38, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xAA, 0x46, 0xF0, 0xBC, 0x01, 0xBC
    .byte 0x00, 0x47, 0x00, 0x00, 0x68, 0x36, 0x00, 0x03, 0xF0, 0xB5, 0x07, 0x1C, 0xBD, 0x6E, 0x01, 0x35
    .byte 0x80, 0x21, 0x49, 0x00, 0x8D, 0x42, 0x33, 0xDC, 0x13, 0x4E, 0x14, 0x4A, 0xE8, 0x05, 0x04, 0x14
    .byte 0x20, 0x1C, 0x00, 0x2C, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11, 0x08, 0x1A, 0x10, 0x49, 0x08, 0x40
    .byte 0x80, 0x00, 0x80, 0x18, 0x03, 0x68, 0x0F, 0x48, 0x02, 0x68, 0x51, 0x42, 0x80, 0x20, 0x00, 0x02
    .byte 0xC3, 0x1A, 0x08, 0x1C, 0x58, 0x43, 0xC1, 0x0F, 0x40, 0x18, 0x00, 0x14, 0x12, 0x18, 0x32, 0x60
    .byte 0x09, 0x4E, 0x0A, 0x48, 0x02, 0x68, 0x50, 0x42, 0x58, 0x43, 0xC1, 0x0F, 0x40, 0x18, 0x00, 0x14
    .byte 0x12, 0x18, 0x32, 0x60, 0x00, 0x20, 0x0C, 0xE0, 0x88, 0xEC, 0x03, 0x02, 0x5C, 0x64, 0x0E, 0x08
    .byte 0xFF, 0x03, 0x00, 0x00, 0x80, 0xEC, 0x03, 0x02, 0x84, 0xEC, 0x03, 0x02, 0x7C, 0xEC, 0x03, 0x02
    .byte 0x01, 0x20, 0xBD, 0x66, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00
    thumb_func_start sub_8052864
sub_8052864:
    push {r4, r5, r6, r7, lr}
    add sp, #-0x008
    ldr r0, _08052964 @ =0x03004F70
    ldrb r7, [r0, #0x0F]
    cmp r7, #0x0A
    ble _08052872
    b _08052978
_08052872:
    cmp r7, #0x07
    bgt _080528AC
    ldr r4, _08052968 @ =0x91719171
    str r4, [sp, #0x000]
    movs r2, #0x0A
    subs r2, r2, r7
    movs r0, #0x01
    movs r1, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    ldr r5, _0805296C @ =0x01000010
    mov r0, sp
    adds r2, r5, #0x0
    bl CpuFastSet
    str r4, [sp, #0x004]
    add r4, sp, #0x004
    adds r2, r7, #0x0
    adds r2, #0x0A
    movs r0, #0x01
    movs r1, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    adds r2, r5, #0x0
    bl CpuFastSet
_080528AC:
    subs r0, r7, #0x1
    cmp r0, #0x07
    bhi _080528E8
    ldr r6, _08052970 @ =0x91729172
    str r6, [sp, #0x004]
    add r4, sp, #0x004
    movs r2, #0x0B
    subs r2, r2, r7
    movs r0, #0x01
    movs r1, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    ldr r5, _0805296C @ =0x01000010
    adds r0, r4, #0x0
    adds r2, r5, #0x0
    bl CpuFastSet
    str r6, [sp, #0x000]
    adds r2, r7, #0x0
    adds r2, #0x09
    movs r0, #0x01
    movs r1, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    mov r0, sp
    adds r2, r5, #0x0
    bl CpuFastSet
_080528E8:
    subs r0, r7, #0x2
    cmp r0, #0x07
    bhi _08052924
    ldr r6, _08052974 @ =0x91739173
    str r6, [sp, #0x004]
    add r4, sp, #0x004
    movs r2, #0x0C
    subs r2, r2, r7
    movs r0, #0x01
    movs r1, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    ldr r5, _0805296C @ =0x01000010
    adds r0, r4, #0x0
    adds r2, r5, #0x0
    bl CpuFastSet
    str r6, [sp, #0x000]
    adds r2, r7, #0x0
    adds r2, #0x08
    movs r0, #0x01
    movs r1, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    mov r0, sp
    adds r2, r5, #0x0
    bl CpuFastSet
_08052924:
    cmp r7, #0x02
    ble _0805295C
    movs r6, #0x00
    str r6, [sp, #0x004]
    add r4, sp, #0x004
    movs r2, #0x0D
    subs r2, r2, r7
    movs r0, #0x01
    movs r1, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    ldr r5, _0805296C @ =0x01000010
    adds r0, r4, #0x0
    adds r2, r5, #0x0
    bl CpuFastSet
    str r6, [sp, #0x000]
    adds r2, r7, #0x7
    movs r0, #0x01
    movs r1, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    mov r0, sp
    adds r2, r5, #0x0
    bl CpuFastSet
_0805295C:
    movs r0, #0x02
    bl map_setBufferDirty
    b _080529AA
_08052964: .4byte 0x03004F70
_08052968: .4byte 0x91719171
_0805296C: .4byte 0x01000010
_08052970: .4byte 0x91729172
_08052974: .4byte 0x91739173
_08052978:
    ldr r1, _08052A30 @ =0x04000040
    movs r0, #0xF0
    strh r0, [r1, #0x00]
    adds r0, r7, #0x0
    subs r0, #0x0B
    lsls r1, r0, #0x01
    adds r0, r1, r0
    lsls r0, r0, #0x03
    negs r0, r0
    cmp r0, #0x00
    bge _08052990
    adds r0, #0x07
_08052990:
    asrs r0, r0, #0x03
    adds r0, #0x18
    lsls r0, r0, #0x08
    adds r1, #0x90
    orrs r0, r1
    ldr r1, _08052A34 @ =0x04000044
    strh r0, [r1, #0x00]
    adds r1, #0x04
    movs r0, #0x3E
    strh r0, [r1, #0x00]
    adds r1, #0x02
    movs r0, #0x20
    strh r0, [r1, #0x00]
_080529AA:
    cmp r7, #0x0A
    bne _08052A1E
    movs r5, #0x00
    str r5, [sp, #0x004]
    add r4, sp, #0x004
    movs r0, #0x01
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    ldr r2, _08052A38 @ =0x01000030
    adds r0, r4, #0x0
    bl CpuFastSet
    str r5, [sp, #0x000]
    movs r0, #0x01
    movs r1, #0x00
    movs r2, #0x12
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    ldr r2, _08052A3C @ =0x01000020
    mov r0, sp
    bl CpuFastSet
    ldr r1, _08052A30 @ =0x04000040
    movs r0, #0xF0
    strh r0, [r1, #0x00]
    adds r1, #0x04
    ldr r2, _08052A40 @ =0x00001890
    adds r0, r2, #0x0
    strh r0, [r1, #0x00]
    adds r1, #0x04
    movs r0, #0x3F
    strh r0, [r1, #0x00]
    adds r1, #0x02
    movs r0, #0x21
    strh r0, [r1, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldrh r1, [r2, #0x00]
    ldr r0, _08052A44 @ =0x00009FFF
    ands r0, r1
    strh r0, [r2, #0x00]
    ldrh r0, [r2, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x06
    adds r1, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    movs r0, #0x01
    ldr r1, _08052A48 @ =0x03004F70
    strb r0, [r1, #0x0E]
    ldrb r2, [r1, #0x0C]
    movs r0, #0x80
    orrs r0, r2
    strb r0, [r1, #0x0C]
_08052A1E:
    cmp r7, #0x13
    bne _08052A28
    ldr r1, _08052A48 @ =0x03004F70
    movs r0, #0x00
    str r0, [r1, #0x00]
_08052A28:
    add sp, #0x008
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08052A30: .4byte 0x04000040
_08052A34: .4byte 0x04000044
_08052A38: .4byte 0x01000030
_08052A3C: .4byte 0x01000020
_08052A40: .4byte 0x00001890
_08052A44: .4byte 0x00009FFF
_08052A48: .4byte 0x03004F70
    thumb_func_start sub_8052A4C
sub_8052A4C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x014
    ldr r0, _08052AA0 @ =0x03002E20
    ldr r1, _08052AA4 @ =0x00000801
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    bl track_getCupIndex
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    str r0, [sp, #0x008]
    movs r2, #0x00
    mov r8, r2
    movs r3, #0x00
    str r3, [sp, #0x00C]
    ldr r0, _08052AA8 @ =0x0203EC78
    mov r7, r8
    strh r7, [r0, #0x00]
    ldr r0, _08052AAC @ =0x0203EC6C
    mov r1, r8
    str r1, [r0, #0x00]
    ldr r1, _08052AB0 @ =0x080EFD6C
    movs r0, #0x00
    bl sub_8030224
    ldr r2, [sp, #0x008]
    cmp r2, #0x00
    bne _08052ABC
    ldr r0, _08052AB4 @ =0x0203EC70
    mov r3, r8
    str r3, [r0, #0x00]
    ldr r1, _08052AB8 @ =0x080EFDAC
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
    b _08052AC2
    .byte 0x00, 0x00
_08052AA0: .4byte 0x03002E20
_08052AA4: .4byte 0x00000801
_08052AA8: .4byte 0x0203EC78
_08052AAC: .4byte 0x0203EC6C
_08052AB0: .4byte 0x080EFD6C
_08052AB4: .4byte 0x0203EC70
_08052AB8: .4byte 0x080EFDAC
_08052ABC:
    ldr r1, _08052AE4 @ =0x0203EC70
    movs r0, #0x01
    str r0, [r1, #0x00]
_08052AC2:
    ldr r1, _08052AE8 @ =0x0203EC74
    movs r0, #0x01
    str r0, [r1, #0x00]
_08052AC8:
    bl oam_update
    bl main_frameProc
    mov r7, r8
    cmp r7, #0x0A
    bls _08052AD8
    b _08052E4A
_08052AD8:
    lsls r0, r7, #0x02
    ldr r1, _08052AEC @ =0x08052AF0
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_08052AE4: .4byte 0x0203EC70
_08052AE8: .4byte 0x0203EC74
_08052AEC: .4byte 0x08052AF0
    .byte 0x1C, 0x2B, 0x05, 0x08, 0x44, 0x2B, 0x05, 0x08, 0x58, 0x2B, 0x05, 0x08, 0x92, 0x2B, 0x05, 0x08
    .byte 0xCA, 0x2B, 0x05, 0x08, 0x0E, 0x2C, 0x05, 0x08, 0x24, 0x2C, 0x05, 0x08, 0x3C, 0x2C, 0x05, 0x08
    .byte 0x90, 0x2C, 0x05, 0x08, 0x96, 0x2C, 0x05, 0x08, 0x34, 0x2E, 0x05, 0x08, 0x05, 0x48, 0x06, 0x49
    .byte 0x48, 0x60, 0x06, 0x48, 0x08, 0x60, 0x06, 0x48, 0x88, 0x60, 0x03, 0x20, 0x88, 0x73, 0xDD, 0xF7
    .byte 0x7F, 0xFD, 0x78, 0xE1, 0x75, 0x30, 0x05, 0x08, 0x70, 0x4F, 0x00, 0x03, 0x65, 0x28, 0x05, 0x08
    .byte 0xC5, 0x30, 0x05, 0x08, 0x03, 0x48, 0x01, 0x7B, 0x80, 0x20, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD1
    .byte 0x7B, 0xE1, 0x59, 0xE0, 0x70, 0x4F, 0x00, 0x03, 0x03, 0x9A, 0x01, 0x32, 0x03, 0x92, 0x20, 0x2A
    .byte 0x14, 0xDC, 0x08, 0x4A, 0x08, 0x49, 0x03, 0x9B, 0x58, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA
    .byte 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0x00, 0x02, 0xC0, 0x13
    .byte 0x10, 0x80, 0x62, 0xE1, 0x78, 0xEC, 0x03, 0x02, 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x27, 0x03, 0x97
    .byte 0x49, 0xE1, 0x02, 0x99, 0x00, 0x29, 0x0F, 0xD1, 0x05, 0x48, 0x00, 0x68, 0x01, 0x28, 0x00, 0xD0
    .byte 0x53, 0xE1, 0x04, 0x48, 0x00, 0x68, 0x01, 0x28, 0x00, 0xD0, 0x4E, 0xE1, 0x34, 0xE0, 0x00, 0x00
    .byte 0x6C, 0xEC, 0x03, 0x02, 0x70, 0xEC, 0x03, 0x02, 0x03, 0x9B, 0x01, 0x33, 0x03, 0x93, 0xB4, 0x2B
    .byte 0x00, 0xDC, 0x42, 0xE1, 0x00, 0x27, 0x03, 0x97, 0x2D, 0xE1, 0x03, 0x99, 0x01, 0x31, 0x03, 0x91
    .byte 0x20, 0x29, 0x17, 0xDC, 0x09, 0x4A, 0x0A, 0x49, 0x03, 0x9B, 0x58, 0x06, 0x00, 0x14, 0x00, 0x28
    .byte 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0x00, 0x02
    .byte 0xC0, 0x13, 0x80, 0x27, 0x7F, 0x00, 0xC0, 0x19, 0x10, 0x80, 0x26, 0xE1, 0x78, 0xEC, 0x03, 0x02
    .byte 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x20, 0x03, 0x90, 0x01, 0x21, 0x88, 0x44, 0x1D, 0xE1, 0x04, 0x4A
    .byte 0x11, 0x7B, 0x7F, 0x20, 0x08, 0x40, 0x10, 0x73, 0x01, 0x22, 0x90, 0x44, 0x15, 0xE1, 0x00, 0x00
    .byte 0x70, 0x4F, 0x00, 0x03, 0x04, 0x48, 0x01, 0x7B, 0x02, 0x20, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD0
    .byte 0x0B, 0xE1, 0x01, 0x23, 0x98, 0x44, 0x08, 0xE1, 0x70, 0x4F, 0x00, 0x03, 0x00, 0x24, 0x00, 0x94
    .byte 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0xDB, 0xF7, 0x33, 0xFD, 0x01, 0x1C, 0x68, 0x46, 0x0C, 0x4A
    .byte 0x0E, 0xF0, 0x7C, 0xFB, 0x01, 0x94, 0x00, 0x20, 0x00, 0x21, 0x12, 0x22, 0xDB, 0xF7, 0x28, 0xFD
    .byte 0x01, 0x1C, 0x01, 0xA8, 0x07, 0x4A, 0x0E, 0xF0, 0x71, 0xFB, 0xDD, 0xF7, 0xE3, 0xFB, 0x06, 0x49
    .byte 0xC0, 0x22, 0xD2, 0x04, 0x05, 0x4B, 0xDD, 0xF7, 0xB5, 0xFB, 0x01, 0x27, 0xB8, 0x44, 0xE4, 0xE0
    .byte 0x30, 0x00, 0x00, 0x01, 0x20, 0x00, 0x00, 0x01, 0x34, 0x28, 0x06, 0x08, 0x00, 0x06, 0x00, 0x80
    .byte 0xFC, 0xF7, 0x8C, 0xF8, 0xC7, 0xE0, 0x03, 0x99, 0x01, 0x31, 0x03, 0x91, 0x0A, 0x29, 0x00, 0xDD
    .byte 0x9D, 0xE0, 0x0A, 0x39, 0x04, 0x91, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0xDB, 0xF7, 0x00, 0xFD
    .byte 0x81, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0xDB, 0xF7, 0xFA, 0xFC, 0x84, 0x46, 0x00, 0x21
    .byte 0x04, 0x9A, 0x92, 0x46, 0x00, 0x23, 0x04, 0x9F, 0xCD, 0x19, 0x4E, 0x1C, 0x2C, 0x1C, 0x60, 0x01
    .byte 0x04, 0x30, 0x49, 0x01, 0x04, 0x31, 0x40, 0x00, 0x67, 0x46, 0xC2, 0x19, 0x18, 0x1D, 0x00, 0x28
    .byte 0x09, 0xDB, 0x00, 0x2D, 0x07, 0xDB, 0x1D, 0x28, 0x05, 0xDC, 0x13, 0x2C, 0x03, 0xDC, 0x48, 0x00
    .byte 0x48, 0x44, 0x00, 0x88, 0x10, 0x80, 0x02, 0x32, 0x01, 0x31, 0x01, 0x33, 0x1A, 0x2B, 0xED, 0xDB
    .byte 0x31, 0x1C, 0x04, 0x29, 0xDE, 0xDB, 0x02, 0x20, 0xDB, 0xF7, 0xF8, 0xFC, 0x56, 0x46, 0x00, 0x20
    .byte 0x00, 0x21, 0x00, 0x22, 0xDB, 0xF7, 0xCC, 0xFC, 0x81, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0xDB, 0xF7, 0xC6, 0xFC, 0x84, 0x46, 0x00, 0x20, 0x00, 0x24, 0x85, 0x1C, 0x01, 0x30, 0x82, 0x46
    .byte 0x2B, 0x1C, 0x98, 0x01, 0x49, 0x46, 0x42, 0x18, 0x58, 0x01, 0x30, 0x18, 0x40, 0x00, 0x67, 0x46
    .byte 0xC1, 0x19, 0xA0, 0x19, 0x00, 0x28, 0x07, 0xDB, 0x00, 0x2D, 0x05, 0xDB, 0x1D, 0x28, 0x03, 0xDC
    .byte 0x13, 0x2B, 0x01, 0xDC, 0x10, 0x88, 0x08, 0x80, 0x02, 0x32, 0x02, 0x31, 0x01, 0x34, 0x06, 0x2C
    .byte 0xEF, 0xDB, 0x50, 0x46, 0x11, 0x28, 0xDF, 0xDB, 0x02, 0x20, 0xDB, 0xF7, 0xC7, 0xFC, 0x0A, 0x20
    .byte 0x03, 0x99, 0x40, 0x1A, 0x04, 0x90, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0xDB, 0xF7, 0x98, 0xFC
    .byte 0x82, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0xDB, 0xF7, 0x92, 0xFC, 0x81, 0x46, 0x00, 0x20
    .byte 0x05, 0x1C, 0x0C, 0x35, 0x01, 0x30, 0x84, 0x46, 0x2C, 0x1C, 0x60, 0x01, 0x16, 0x30, 0x04, 0x9A
    .byte 0x11, 0x18, 0x16, 0x32, 0x08, 0x26, 0x49, 0x00, 0x49, 0x44, 0x40, 0x00, 0x57, 0x46, 0xC3, 0x19
    .byte 0x00, 0x2A, 0x07, 0xDB, 0x00, 0x2D, 0x05, 0xDB, 0x1D, 0x2A, 0x03, 0xDC, 0x13, 0x2C, 0x01, 0xDC
    .byte 0x18, 0x88, 0x08, 0x80, 0x02, 0x33, 0x02, 0x31, 0x01, 0x32, 0x01, 0x3E, 0x00, 0x2E, 0xEF, 0xDA
    .byte 0x60, 0x46, 0x09, 0x28, 0xDC, 0xDB, 0x02, 0x20, 0xDB, 0xF7, 0x90, 0xFC, 0x35, 0xE0, 0x13, 0x4A
    .byte 0x11, 0x78, 0x7F, 0x20, 0x08, 0x40, 0x10, 0x70, 0x51, 0x78, 0x3F, 0x20, 0x08, 0x40, 0x50, 0x70
    .byte 0x11, 0x78, 0x04, 0x20, 0x40, 0x42, 0x08, 0x40, 0x10, 0x70, 0x11, 0x78, 0x41, 0x20, 0x40, 0x42
    .byte 0x08, 0x40, 0x10, 0x70, 0x11, 0x78, 0x0D, 0x20, 0x40, 0x42, 0x08, 0x40, 0x10, 0x70, 0x51, 0x78
    .byte 0x20, 0x20, 0x40, 0x42, 0x08, 0x40, 0x07, 0x21, 0x08, 0x43, 0x50, 0x70, 0x04, 0x48, 0x00, 0x21
    .byte 0x01, 0x80, 0x02, 0x30, 0x01, 0x80, 0x01, 0x20, 0x80, 0x44, 0x0E, 0xE0, 0x08, 0x00, 0x00, 0x04
    .byte 0x10, 0x00, 0x00, 0x04, 0x19, 0x48, 0x00, 0x68, 0xDD, 0xF7, 0x88, 0xFB, 0x18, 0x48, 0x00, 0x68
    .byte 0xDD, 0xF7, 0x84, 0xFB, 0x17, 0x49, 0x00, 0x20, 0x08, 0x60
_08052E4A:
    ldr r1, _08052EA8 @ =0x03002E20
    ldr r0, [r1, #0x10]
    adds r0, #0x01
    str r0, [r1, #0x10]
    bl sub_804D8F8
    ldr r0, _08052EAC @ =0x03002E44
    bl sub_804978C
    bl sub_8051014
    ldr r0, _08052EAC @ =0x03002E44
    bl sub_8049850
    ldr r0, _08052EAC @ =0x03002E44
    bl sub_804A878
    ldr r0, _08052EAC @ =0x03002E44
    bl sub_804C0A8
    ldr r0, _08052EAC @ =0x03002E44
    bl sub_8049B0C
    ldr r0, _08052EAC @ =0x03002E44
    bl sub_8049D78
    bl sub_804389C
    ldr r0, _08052EA4 @ =0x0203EC74
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    beq _08052E8C
    b _08052AC8
_08052E8C:
    add sp, #0x014
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0xD4, 0x23, 0x00, 0x03, 0xD8, 0x23, 0x00, 0x03
_08052EA4: .4byte 0x0203EC74
_08052EA8: .4byte 0x03002E20
_08052EAC: .4byte 0x03002E44
    thumb_func_start sub_8052EB0
sub_8052EB0:
    add sp, #-0x004
    movs r0, #0x00
    str r0, [sp, #0x000]
    ldr r0, [sp, #0x000]
    ldr r2, _08052ED4 @ =0x0203EC78
    cmp r0, #0x31
    bgt _08052ECA
_08052EBE:
    ldr r0, [sp, #0x000]
    adds r0, #0x01
    str r0, [sp, #0x000]
    ldr r0, [sp, #0x000]
    cmp r0, #0x31
    ble _08052EBE
_08052ECA:
    ldr r1, _08052ED8 @ =0x04000010
    ldrh r0, [r2, #0x00]
    strh r0, [r1, #0x00]
    add sp, #0x004
    bx lr
_08052ED4: .4byte 0x0203EC78
_08052ED8: .4byte 0x04000010
    thumb_func_start sub_8052EDC
sub_8052EDC:
    add sp, #-0x004
    movs r0, #0x00
    str r0, [sp, #0x000]
    ldr r0, [sp, #0x000]
    ldr r1, _08052F08 @ =0x0203EC78
    cmp r0, #0x31
    bgt _08052EF6
_08052EEA:
    ldr r0, [sp, #0x000]
    adds r0, #0x01
    str r0, [sp, #0x000]
    ldr r0, [sp, #0x000]
    cmp r0, #0x31
    ble _08052EEA
_08052EF6:
    ldr r2, _08052F0C @ =0x04000010
    ldrh r1, [r1, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x02
    adds r0, r3, #0x0
    subs r0, r0, r1
    strh r0, [r2, #0x00]
    add sp, #0x004
    bx lr
_08052F08: .4byte 0x0203EC78
_08052F0C: .4byte 0x04000010
    .byte 0x30, 0xB5, 0x0F, 0x4B, 0x12, 0x21, 0x0F, 0x4A, 0x98, 0x18, 0x01, 0x60, 0x0E, 0x4A, 0x0F, 0x49
    .byte 0xEE, 0x20, 0xC0, 0x01, 0x08, 0x60, 0x10, 0x60, 0x0D, 0x4C, 0x0E, 0x4D, 0xD0, 0x22, 0x2A, 0x60
    .byte 0x22, 0x60, 0x0D, 0x48, 0x1B, 0x18, 0x18, 0x68, 0xBA, 0x30, 0x01, 0x88, 0x49, 0x08, 0x07, 0x20
    .byte 0x40, 0x1A, 0x00, 0x01, 0x12, 0x1A, 0x22, 0x60, 0x2A, 0x60, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47
    .byte 0x20, 0x2E, 0x00, 0x03, 0x08, 0x0C, 0x00, 0x00, 0x7C, 0xEC, 0x03, 0x02, 0x84, 0xEC, 0x03, 0x02
    .byte 0x80, 0xEC, 0x03, 0x02, 0x88, 0xEC, 0x03, 0x02, 0x38, 0x08, 0x00, 0x00, 0x04, 0x48, 0x06, 0x21
    .byte 0x04, 0x4A, 0x80, 0x18, 0x01, 0x60, 0x04, 0x49, 0x01, 0x20, 0x08, 0x60, 0x70, 0x47, 0x00, 0x00
    .byte 0x20, 0x2E, 0x00, 0x03, 0x08, 0x0C, 0x00, 0x00, 0x6C, 0xEC, 0x03, 0x02, 0x30, 0xB5, 0x05, 0x48
    .byte 0x05, 0x1C, 0x24, 0x35, 0x04, 0x48, 0x41, 0x78, 0x01, 0x29, 0x07, 0xD9, 0x08, 0x20, 0x40, 0x1A
    .byte 0x05, 0xE0, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03, 0x80, 0x2C, 0x00, 0x03, 0x07, 0x20, 0x04, 0x1C
    .byte 0x13, 0xE0, 0x21, 0x06, 0x09, 0x0E, 0x28, 0x1C, 0xF7, 0xF7, 0x8C, 0xFF, 0x02, 0x1C, 0x90, 0x6C
    .byte 0x80, 0x21, 0x09, 0x02, 0x08, 0x40, 0x00, 0x28, 0x06, 0xD0, 0x51, 0x68, 0xE0, 0x04, 0x40, 0x18
    .byte 0xF0, 0x21, 0x49, 0x03, 0x40, 0x18, 0x50, 0x60, 0x01, 0x34, 0xFE, 0x21, 0xC9, 0x00, 0x68, 0x18
    .byte 0x00, 0x78, 0x84, 0x42, 0xE5, 0xDB, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0xF0, 0xB5, 0x4F, 0x46
    .byte 0x46, 0x46, 0xC0, 0xB4, 0x84, 0xB0, 0x12, 0x48, 0x24, 0x21, 0x09, 0x18, 0x88, 0x46, 0xC1, 0x46
    .byte 0x10, 0x4A, 0x80, 0x18, 0x06, 0x78, 0x00, 0x27, 0x00, 0x25, 0xB7, 0x42, 0x22, 0xDA, 0x29, 0x06
    .byte 0x09, 0x0E, 0x48, 0x46, 0xF7, 0xF7, 0x5E, 0xFF, 0x04, 0x1C, 0xBA, 0x30, 0x01, 0x88, 0x49, 0x08
    .byte 0x03, 0xA8, 0x00, 0x90, 0x40, 0x46, 0x01, 0xAA, 0x02, 0xAB, 0xDF, 0xF7, 0x39, 0xFD, 0x61, 0x68
    .byte 0x02, 0x98, 0x88, 0x42, 0x0A, 0xD0, 0x04, 0x4A, 0x88, 0x18, 0x60, 0x60, 0x07, 0xE0, 0x00, 0x00
    .byte 0x20, 0x2E, 0x00, 0x03, 0x14, 0x08, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0x01, 0x37, 0x01, 0x35
    .byte 0xB5, 0x42, 0xDC, 0xDB, 0xB7, 0x42, 0x01, 0xD0, 0x00, 0x20, 0x02, 0xE0, 0x04, 0x49, 0x01, 0x20
    .byte 0x08, 0x60, 0x04, 0xB0, 0x18, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47
    .byte 0x70, 0xEC, 0x03, 0x02
    thumb_func_start sub_8053074
sub_8053074:
    push {lr}
    ldr r2, _080530B4 @ =0x04000008
    ldrb r1, [r2, #0x01]
    movs r0, #0x20
    negs r0, r0
    ands r0, r1
    movs r1, #0x06
    orrs r0, r1
    strb r0, [r2, #0x01]
    movs r0, #0x00
    bl pltt_getBuffer
    movs r2, #0x9F
    lsls r2, r2, #0x01
    adds r1, r0, r2
    movs r0, #0x00
    strh r0, [r1, #0x00]
    movs r0, #0x01
    bl pltt_setDirtyFlag
    ldr r0, _080530B8 @ =0x080EFDC4
    ldr r1, _080530BC @ =0x06002E00
    bl LZ77UnCompVram
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldrh r1, [r2, #0x00]
    ldr r0, _080530C0 @ =0x00009FFF
    ands r0, r1
    strh r0, [r2, #0x00]
    pop {r0}
    bx r0
_080530B4: .4byte 0x04000008
_080530B8: .4byte 0x080EFDC4
_080530BC: .4byte 0x06002E00
_080530C0: .4byte 0x00009FFF
    thumb_func_start sub_80530C4
sub_80530C4:
    push {r4, r5, lr}
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldrh r1, [r2, #0x00]
    ldr r0, _080530F8 @ =0x00009FFF
    ands r0, r1
    strh r0, [r2, #0x00]
    ldr r1, _080530FC @ =0x04000040
    movs r0, #0xF0
    strh r0, [r1, #0x00]
    adds r1, #0x04
    movs r0, #0xA0
    strh r0, [r1, #0x00]
    ldr r4, _08053100 @ =0x03002E20
    adds r4, #0x24
    movs r0, #0x00
    bl pltt_getBuffer
    adds r5, r0, #0x0
    adds r0, r4, #0x0
    bl sub_8032D44
    strh r0, [r5, #0x00]
    pop {r4, r5}
    pop {r0}
    bx r0
_080530F8: .4byte 0x00009FFF
_080530FC: .4byte 0x04000040
_08053100: .4byte 0x03002E20
    thumb_func_start sub_8053104
sub_8053104:
    push {r4, lr}
    adds r4, r0, #0x0
    bl sub_802F5C0
    movs r0, #0x80
    lsls r0, r0, #0x05
    movs r2, #0x00
    strh r0, [r4, #0x10]
    movs r0, #0x08
    strb r0, [r4, #0x0E]
    strb r0, [r4, #0x0D]
    strb r0, [r4, #0x0C]
    movs r0, #0x01
    strh r0, [r4, #0x34]
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r4, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r2, [r0, #0x00]
    str r2, [r4, #0x5C]
    ldrh r1, [r4, #0x34]
    ldr r0, _08053144 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r4, #0x34]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08053144: .4byte 0x0000FFFD
    thumb_func_start sub_8053148
sub_8053148:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r6, r0, #0x0
    mov r8, r6
    ldr r1, _08053170 @ =0x000007DD
    adds r0, r6, r1
    ldrb r7, [r0, #0x00]
    movs r4, #0x00
    ldr r2, _08053174 @ =0x00000574
    adds r0, r6, r2
    ldr r1, [r0, #0x00]
    adds r0, r1, #0x0
    adds r0, #0x94
    ldr r0, [r0, #0x00]
    movs r5, #0x00
    cmp r0, #0x00
    beq _0805318A
    adds r5, r1, r0
    b _0805318A
_08053170: .4byte 0x000007DD
_08053174: .4byte 0x00000574
_08053178:
    ldrb r1, [r5, #0x00]
    adds r0, r7, #0x0
    bl sub_8053DC4
    ldr r1, _080531BC @ =0xFFFF0000
    cmp r0, r1
    bne _08053188
    adds r4, #0x01
_08053188:
    adds r5, #0x04
_0805318A:
    ldrb r0, [r5, #0x00]
    cmp r0, #0x00
    bne _08053178
    ldr r1, _080531C0 @ =0x000006FC
    adds r0, r6, r1
    movs r2, #0xDC
    lsls r2, r2, #0x03
    adds r1, r6, r2
    adds r2, r4, #0x0
    bl sub_804F750
    cmp r4, #0x00
    ble _08053212
    ldr r0, _080531C4 @ =0x00000574
    add r0, r8
    ldr r1, [r0, #0x00]
    adds r0, r1, #0x0
    adds r0, #0x94
    ldr r0, [r0, #0x00]
    movs r5, #0x00
    cmp r0, #0x00
    beq _0805320C
    adds r5, r1, r0
    b _0805320C
    .byte 0x00, 0x00
_080531BC: .4byte 0xFFFF0000
_080531C0: .4byte 0x000006FC
_080531C4: .4byte 0x00000574
_080531C8:
    ldrb r1, [r5, #0x00]
    adds r0, r7, #0x0
    bl sub_8053DC4
    ldr r1, _080531DC @ =0xFFFF0000
    cmp r0, r1
    beq _080531E0
    adds r5, #0x04
    b _0805320C
    .byte 0x00, 0x00
_080531DC: .4byte 0xFFFF0000
_080531E0:
    adds r5, #0x01
    ldr r1, _0805321C @ =0x000006FC
    adds r0, r6, r1
    bl sub_804F7AC
    adds r4, r0, #0x0
    bl sub_8043860
    ldrb r0, [r5, #0x00]
    lsls r0, r0, #0x13
    adds r5, #0x01
    str r0, [r4, #0x00]
    ldrb r0, [r5, #0x00]
    lsls r0, r0, #0x13
    adds r5, #0x01
    str r0, [r4, #0x04]
    movs r0, #0x00
    str r0, [r4, #0x08]
    ldrb r0, [r5, #0x00]
    adds r4, #0x36
    strb r0, [r4, #0x00]
    adds r5, #0x01
_0805320C:
    ldrb r0, [r5, #0x00]
    cmp r0, #0x00
    bne _080531C8
_08053212:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0805321C: .4byte 0x000006FC
    thumb_func_start sub_8053220
sub_8053220:
    push {r4, r5, r6, r7, lr}
    adds r6, r0, #0x0
    adds r5, r1, #0x0
    adds r7, r2, #0x0
    ldr r1, _080532AC @ =0x000007CC
    adds r0, r6, r1
    ldr r4, [r0, #0x00]
    movs r2, #0x04
    ldsh r1, [r5, r2]
    lsls r1, r1, #0x03
    movs r0, #0x06
    ldsh r2, [r5, r0]
    lsls r2, r2, #0x03
    adds r0, r6, #0x0
    bl sub_8032CA0
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    strh r1, [r5, #0x08]
    cmp r4, r5
    beq _08053268
    movs r2, #0x08
    ldsh r0, [r4, r2]
    cmp r0, r1
    beq _08053264
_08053252:
    adds r4, #0x0C
    cmp r4, r5
    beq _08053268
    movs r0, #0x08
    ldsh r1, [r4, r0]
    movs r2, #0x08
    ldsh r0, [r5, r2]
    cmp r1, r0
    bne _08053252
_08053264:
    cmp r4, r5
    bne _080532B8
_08053268:
    ldr r3, [r7, #0x00]
    adds r3, #0xD0
    lsls r3, r3, #0x10
    asrs r3, r3, #0x10
    strh r3, [r5, #0x0A]
    movs r4, #0x04
    ldsh r1, [r5, r4]
    lsls r1, r1, #0x03
    movs r0, #0x06
    ldsh r2, [r5, r0]
    lsls r2, r2, #0x03
    lsls r3, r3, #0x18
    lsrs r3, r3, #0x18
    adds r0, r6, #0x0
    bl sub_8032798
    bl dmaq_getVBlankDmaQueue
    movs r2, #0x08
    ldsh r1, [r5, r2]
    lsls r1, r1, #0x06
    ldr r3, _080532B0 @ =0x06008000
    adds r1, r1, r3
    movs r4, #0x0A
    ldsh r2, [r5, r4]
    lsls r2, r2, #0x06
    adds r2, r2, r3
    ldr r3, _080532B4 @ =0x80000020
    bl dmaq_enqueue
    ldr r0, [r7, #0x00]
    adds r0, #0x01
    str r0, [r7, #0x00]
    b _080532D4
_080532AC: .4byte 0x000007CC
_080532B0: .4byte 0x06008000
_080532B4: .4byte 0x80000020
_080532B8:
    movs r0, #0x0A
    ldsh r3, [r4, r0]
    strh r3, [r5, #0x0A]
    movs r2, #0x04
    ldsh r1, [r5, r2]
    lsls r1, r1, #0x03
    movs r4, #0x06
    ldsh r2, [r5, r4]
    lsls r2, r2, #0x03
    lsls r3, r3, #0x18
    lsrs r3, r3, #0x18
    adds r0, r6, #0x0
    bl sub_8032798
_080532D4:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start loadtrack_loadObjects
loadtrack_loadObjects: @ 080532DC
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x008
    str r0, [sp, #0x004]
    movs r0, #0x00
    mov r8, r0
    movs r5, #0x00
    str r5, [sp, #0x000]
    ldr r1, [sp, #0x004]
    ldr r2, _08053388 @ =0x00000574
    adds r0, r1, r2
    ldr r1, [r0, #0x00]
    adds r0, r1, #0x0
    adds r0, #0x8C
    ldr r0, [r0, #0x00]
    movs r7, #0x00
    cmp r0, #0x00
    beq _08053308
    adds r7, r1, r0
_08053308:
    cmp r7, #0x00
    bne _08053310
    bl sub_8053D86
_08053310:
    ldrb r0, [r7, #0x00]
    ldr r3, [sp, #0x004]
    ldr r1, _0805338C @ =0x000007CC
    adds r3, r3, r1
    mov r9, r3
    cmp r0, #0x00
    beq _080533F0
    ldr r2, [sp, #0x004]
    ldr r3, _08053390 @ =0x000007DD
    adds r4, r2, r3
    ldr r6, _08053394 @ =0xFFFF0000
_08053326:
    ldrb r0, [r4, #0x00]
    ldrb r1, [r7, #0x00]
    bl sub_8053DC4
    cmp r0, r6
    beq _080533E8
    ldrb r0, [r4, #0x00]
    ldrb r1, [r7, #0x00]
    bl sub_8053DC4
    ldr r1, _08053398 @ =0xFFF80000
    cmp r0, r1
    beq _080533E8
    ldrb r0, [r4, #0x00]
    ldrb r1, [r7, #0x00]
    bl sub_8053DC4
    ands r0, r6
    ldr r1, _0805339C @ =0xFFF00000
    cmp r0, r1
    beq _080533E8
    movs r0, #0x01
    add r8, r0
    ldrb r0, [r4, #0x00]
    ldrb r1, [r7, #0x00]
    bl sub_8053DC4
    adds r1, r0, #0x0
    ands r1, r6
    movs r0, #0xA0
    lsls r0, r0, #0x0C
    cmp r1, r0
    beq _080533E6
    cmp r1, r0
    bhi _080533AE
    movs r0, #0xC0
    lsls r0, r0, #0x0B
    cmp r1, r0
    beq _080533E6
    cmp r1, r0
    bhi _080533A0
    movs r0, #0x80
    lsls r0, r0, #0x0B
    cmp r1, r0
    beq _080533E6
    movs r0, #0xA0
    lsls r0, r0, #0x0B
    b _080533D8
    .byte 0x00, 0x00
_08053388: .4byte 0x00000574
_0805338C: .4byte 0x000007CC
_08053390: .4byte 0x000007DD
_08053394: .4byte 0xFFFF0000
_08053398: .4byte 0xFFF80000
_0805339C: .4byte 0xFFF00000
_080533A0:
    movs r0, #0x80
    lsls r0, r0, #0x0C
    cmp r1, r0
    beq _080533E6
    movs r0, #0x90
    lsls r0, r0, #0x0C
    b _080533D8
_080533AE:
    movs r0, #0x86
    lsls r0, r0, #0x10
    cmp r1, r0
    beq _080533E6
    cmp r1, r0
    bhi _080533C8
    movs r0, #0xC0
    lsls r0, r0, #0x0C
    cmp r1, r0
    beq _080533E6
    movs r0, #0xE0
    lsls r0, r0, #0x0C
    b _080533D8
_080533C8:
    movs r0, #0x96
    lsls r0, r0, #0x10
    cmp r1, r0
    beq _080533E6
    cmp r1, r0
    bhi _080533DE
    movs r0, #0x95
    lsls r0, r0, #0x10
_080533D8:
    cmp r1, r0
    beq _080533E6
    b _080533E8
_080533DE:
    movs r0, #0x98
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _080533E8
_080533E6:
    adds r5, #0x01
_080533E8:
    adds r7, #0x04
    ldrb r0, [r7, #0x00]
    cmp r0, #0x00
    bne _08053326
_080533F0:
    cmp r5, #0x00
    ble _08053418
    ldr r1, [sp, #0x004]
    movs r2, #0xDC
    lsls r2, r2, #0x03
    adds r0, r1, r2
    adds r1, r5, #0x1
    lsls r2, r1, #0x01
    adds r2, r2, r1
    lsls r2, r2, #0x02
    movs r1, #0x01
    bl frmheap_calloc
    mov r3, r9
    str r0, [r3, #0x00]
    mov r10, r0
    movs r0, #0x00
    mov r1, r10
    str r0, [r1, #0x00]
    b _08053420
_08053418:
    movs r0, #0x00
    mov r2, r9
    str r0, [r2, #0x00]
    mov r10, r0
_08053420:
    mov r3, r8
    cmp r3, #0x00
    bgt _0805342A
    bl sub_8053D74
_0805342A:
    ldr r1, [sp, #0x004]
    ldr r2, _08053494 @ =0x000006EC
    adds r0, r1, r2
    movs r3, #0xDC
    lsls r3, r3, #0x03
    adds r1, r1, r3
    mov r2, r8
    bl sub_804F824
    ldr r1, [sp, #0x004]
    ldr r2, _08053498 @ =0x00000574
    adds r0, r1, r2
    ldr r1, [r0, #0x00]
    adds r0, r1, #0x0
    adds r0, #0x8C
    ldr r0, [r0, #0x00]
    movs r7, #0x00
    cmp r0, #0x00
    beq _08053452
    adds r7, r1, r0
_08053452:
    ldrb r0, [r7, #0x00]
    cmp r0, #0x00
    bne _0805345C
    bl sub_8053D86
_0805345C:
    movs r3, #0xE0
    mov r8, r3
    ldr r0, _0805349C @ =0x00001001
    mov r9, r0
_08053464:
    ldr r1, [sp, #0x004]
    ldr r2, _080534A0 @ =0x000007DD
    adds r0, r1, r2
    ldrb r0, [r0, #0x00]
    ldrb r1, [r7, #0x00]
    adds r7, #0x01
    bl sub_8053DC4
    adds r6, r0, #0x0
    ldr r1, _080534A4 @ =0xFFFF0000
    cmp r6, r1
    beq _0805348C
    ldr r0, _080534A8 @ =0xFFF80000
    cmp r6, r0
    beq _0805348C
    adds r4, r6, #0x0
    ands r4, r1
    ldr r0, _080534AC @ =0xFFF00000
    cmp r4, r0
    bne _080534B0
_0805348C:
    adds r7, #0x03
    bl sub_8053D64
    lsls r0, r0, #0x00
_08053494:
    lsls r4, r5, #0x1B
    lsls r0, r0, #0x00
_08053498:
    lsls r4, r6, #0x15
    lsls r0, r0, #0x00
_0805349C:
    asrs r1, r0, #0x20
    lsls r0, r0, #0x00
_080534A0:
    lsls r5, r3, #0x1F
    lsls r0, r0, #0x00
_080534A4:
    lsls r0, r0, #0x00
    .2byte 0xFFFF @ bl lr+4094
_080534A8:
    lsls r0, r0, #0x00
    .2byte 0xFFF8 @ bl lr+4080
_080534AC:
    lsls r0, r0, #0x00
    .2byte 0xFFF0 @ bl lr+4064
_080534B0:
    ldr r3, [sp, #0x004]
    ldr r1, _080534F0 @ =0x000006EC
    adds r0, r3, r1
    bl sub_804F85C
    adds r5, r0, #0x0
    bl sub_8053104
    str r6, [r5, #0x50]
    ldrb r0, [r7, #0x00]
    lsls r0, r0, #0x13
    movs r1, #0x80
    lsls r1, r1, #0x0B
    adds r0, r0, r1
    str r0, [r5, #0x00]
    movs r0, #0xA0
    lsls r0, r0, #0x0C
    cmp r4, r0
    beq _0805353A
    cmp r4, r0
    bhi _08053502
    movs r0, #0xC0
    lsls r0, r0, #0x0B
    cmp r4, r0
    beq _0805353A
    cmp r4, r0
    bhi _080534F4
    cmp r4, r1
    beq _0805353A
    movs r0, #0xA0
    lsls r0, r0, #0x0B
    b _0805352C
_080534F0:
    lsls r4, r5, #0x1B
    lsls r0, r0, #0x00
_080534F4:
    movs r0, #0x80
    lsls r0, r0, #0x0C
    cmp r4, r0
    beq _0805353A
    movs r0, #0x90
    lsls r0, r0, #0x0C
    b _0805352C
_08053502:
    movs r0, #0x86
    lsls r0, r0, #0x10
    cmp r4, r0
    beq _0805353A
    cmp r4, r0
    bhi _0805351C
    movs r0, #0xC0
    lsls r0, r0, #0x0C
    cmp r4, r0
    beq _0805353A
    movs r0, #0xE0
    lsls r0, r0, #0x0C
    b _0805352C
_0805351C:
    movs r0, #0x96
    lsls r0, r0, #0x10
    cmp r4, r0
    beq _0805353A
    cmp r4, r0
    bhi _08053532
    movs r0, #0x95
    lsls r0, r0, #0x10
_0805352C:
    cmp r4, r0
    beq _0805353A
    b _08053540
_08053532:
    movs r0, #0x98
    lsls r0, r0, #0x10
    cmp r4, r0
    bne _08053540
_0805353A:
    ldrb r0, [r7, #0x00]
    mov r2, r10
    strh r0, [r2, #0x04]
_08053540:
    adds r7, #0x01
    ldrb r0, [r7, #0x00]
    lsls r0, r0, #0x13
    movs r2, #0x80
    lsls r2, r2, #0x0B
    adds r0, r0, r2
    str r0, [r5, #0x04]
    ldr r1, _08053574 @ =0xFFFF0000
    ands r1, r6
    movs r0, #0xA0
    lsls r0, r0, #0x0C
    cmp r1, r0
    beq _080535BE
    cmp r1, r0
    bhi _08053586
    movs r0, #0xC0
    lsls r0, r0, #0x0B
    cmp r1, r0
    beq _080535BE
    cmp r1, r0
    bhi _08053578
    cmp r1, r2
    beq _080535BE
    movs r0, #0xA0
    lsls r0, r0, #0x0B
    b _080535B0
_08053574: .4byte 0xFFFF0000
_08053578:
    movs r0, #0x80
    lsls r0, r0, #0x0C
    cmp r1, r0
    beq _080535BE
    movs r0, #0x90
    lsls r0, r0, #0x0C
    b _080535B0
_08053586:
    movs r0, #0x86
    lsls r0, r0, #0x10
    cmp r1, r0
    beq _080535BE
    cmp r1, r0
    bhi _080535A0
    movs r0, #0xC0
    lsls r0, r0, #0x0C
    cmp r1, r0
    beq _080535BE
    movs r0, #0xE0
    lsls r0, r0, #0x0C
    b _080535B0
_080535A0:
    movs r0, #0x96
    lsls r0, r0, #0x10
    cmp r1, r0
    beq _080535BE
    cmp r1, r0
    bhi _080535B6
    movs r0, #0x95
    lsls r0, r0, #0x10
_080535B0:
    cmp r1, r0
    beq _080535BE
    b _080535C4
_080535B6:
    movs r0, #0x98
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _080535C4
_080535BE:
    ldrb r0, [r7, #0x00]
    mov r3, r10
    strh r0, [r3, #0x06]
_080535C4:
    adds r7, #0x01
    movs r0, #0x00
    str r0, [r5, #0x08]
    ldrb r0, [r7, #0x00]
    adds r1, r5, #0x0
    adds r1, #0x36
    strb r0, [r1, #0x00]
    ldrb r1, [r7, #0x00]
    adds r0, r5, #0x0
    adds r0, #0x54
    strb r1, [r0, #0x00]
    adds r7, #0x01
    ldr r1, _08053608 @ =0xFFFF0000
    ands r1, r6
    movs r0, #0xA0
    lsls r0, r0, #0x0C
    cmp r1, r0
    beq _08053652
    cmp r1, r0
    bhi _0805361A
    movs r0, #0xC0
    lsls r0, r0, #0x0B
    cmp r1, r0
    beq _08053652
    cmp r1, r0
    bhi _0805360C
    movs r0, #0x80
    lsls r0, r0, #0x0B
    cmp r1, r0
    beq _08053652
    movs r0, #0xA0
    lsls r0, r0, #0x0B
    b _08053644
    .byte 0x00, 0x00
_08053608: .4byte 0xFFFF0000
_0805360C:
    movs r0, #0x80
    lsls r0, r0, #0x0C
    cmp r1, r0
    beq _08053652
    movs r0, #0x90
    lsls r0, r0, #0x0C
    b _08053644
_0805361A:
    movs r0, #0x86
    lsls r0, r0, #0x10
    cmp r1, r0
    beq _08053652
    cmp r1, r0
    bhi _08053634
    movs r0, #0xC0
    lsls r0, r0, #0x0C
    cmp r1, r0
    beq _08053652
    movs r0, #0xE0
    lsls r0, r0, #0x0C
    b _08053644
_08053634:
    movs r0, #0x96
    lsls r0, r0, #0x10
    cmp r1, r0
    beq _08053652
    cmp r1, r0
    bhi _0805364A
    movs r0, #0x95
    lsls r0, r0, #0x10
_08053644:
    cmp r1, r0
    beq _08053652
    b _0805366A
_0805364A:
    movs r0, #0x98
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _0805366A
_08053652:
    mov r0, r10
    str r5, [r0, #0x00]
    ldr r0, [sp, #0x004]
    mov r1, r10
    mov r2, sp
    bl sub_8053220
    movs r1, #0x0C
    add r10, r1
    movs r0, #0x00
    mov r2, r10
    str r0, [r2, #0x00]
_0805366A:
    ldr r1, _080536C0 @ =0xFFFF0000
    ands r1, r6
    movs r0, #0x89
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053678
    b _08053C90
_08053678:
    cmp r1, r0
    bls _0805367E
    b _08053790
_0805367E:
    movs r0, #0xC0
    lsls r0, r0, #0x0C
    cmp r1, r0
    bne _08053688
    b _080538AC
_08053688:
    cmp r1, r0
    bhi _08053708
    movs r0, #0xC0
    lsls r0, r0, #0x0B
    cmp r1, r0
    bne _08053696
    b _080538AC
_08053696:
    cmp r1, r0
    bhi _080536D4
    movs r0, #0xC0
    lsls r0, r0, #0x0A
    cmp r1, r0
    bne _080536A4
    b _08053C18
_080536A4:
    cmp r1, r0
    bhi _080536C4
    movs r0, #0x80
    lsls r0, r0, #0x09
    cmp r1, r0
    bne _080536B2
    b _08053BE8
_080536B2:
    movs r0, #0x80
    lsls r0, r0, #0x0A
    cmp r1, r0
    bne _080536BC
    b _08053C10
_080536BC:
    b _08053D60
    .byte 0x00, 0x00
_080536C0: .4byte 0xFFFF0000
_080536C4:
    movs r0, #0x80
    lsls r0, r0, #0x0B
    cmp r1, r0
    bne _080536CE
    b _080538AC
_080536CE:
    movs r0, #0xA0
    lsls r0, r0, #0x0B
    b _08053816
_080536D4:
    movs r0, #0x90
    lsls r0, r0, #0x0C
    cmp r1, r0
    bne _080536DE
    b _080538AC
_080536DE:
    cmp r1, r0
    bhi _080536F2
    movs r0, #0xE0
    lsls r0, r0, #0x0B
    cmp r1, r0
    bne _080536EC
    b _08053C38
_080536EC:
    movs r0, #0x80
    lsls r0, r0, #0x0C
    b _08053816
_080536F2:
    movs r0, #0xA0
    lsls r0, r0, #0x0C
    cmp r1, r0
    bne _080536FC
    b _080538AC
_080536FC:
    movs r0, #0xB0
    lsls r0, r0, #0x0C
    cmp r1, r0
    bne _08053706
    b _08053C20
_08053706:
    b _08053D60
_08053708:
    movs r0, #0x82
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053712
    b _08053C64
_08053712:
    cmp r1, r0
    bhi _0805374C
    movs r0, #0x80
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053720
    b _08053C40
_08053720:
    cmp r1, r0
    bhi _08053734
    movs r0, #0xD0
    lsls r0, r0, #0x0C
    cmp r1, r0
    bne _0805372E
    b _08053CF0
_0805372E:
    movs r0, #0xE0
    lsls r0, r0, #0x0C
    b _08053816
_08053734:
    ldr r0, _08053748 @ =0x00808000
    cmp r1, r0
    bne _0805373C
    b _08053C4A
_0805373C:
    movs r0, #0x81
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053746
    b _08053C5C
_08053746:
    b _08053D60
_08053748: .4byte 0x00808000
_0805374C:
    movs r0, #0x85
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053756
    b _08053C80
_08053756:
    cmp r1, r0
    bhi _08053770
    movs r0, #0x83
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053764
    b _08053C6E
_08053764:
    movs r0, #0x84
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _0805376E
    b _08053C76
_0805376E:
    b _08053D60
_08053770:
    movs r0, #0x87
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _0805377A
    b _08053CE0
_0805377A:
    cmp r1, r0
    bhi _08053784
    movs r0, #0x86
    lsls r0, r0, #0x10
    b _08053816
_08053784:
    movs r0, #0x88
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _0805378E
    b _08053C88
_0805378E:
    b _08053D60
_08053790:
    movs r0, #0x97
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _0805379A
    b _08053D00
_0805379A:
    cmp r1, r0
    bhi _0805381C
    movs r0, #0x90
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _080537A8
    b _08053CC8
_080537A8:
    cmp r1, r0
    bhi _080537E6
    movs r0, #0x8D
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _080537B6
    b _08053CB0
_080537B6:
    cmp r1, r0
    bhi _080537D0
    movs r0, #0x8A
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _080537C4
    b _08053C98
_080537C4:
    movs r0, #0x8C
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _080537CE
    b _08053CA8
_080537CE:
    b _08053D60
_080537D0:
    movs r0, #0x8E
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _080537DA
    b _08053CB8
_080537DA:
    movs r0, #0x8F
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _080537E4
    b _08053CC0
_080537E4:
    b _08053D60
_080537E6:
    movs r0, #0x94
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _080537F0
    b _08053CF8
_080537F0:
    cmp r1, r0
    bhi _0805380A
    movs r0, #0x91
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _080537FE
    b _08053CD0
_080537FE:
    movs r0, #0x92
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053808
    b _08053CD8
_08053808:
    b _08053D60
_0805380A:
    movs r0, #0x95
    lsls r0, r0, #0x10
    cmp r1, r0
    beq _080538AC
    movs r0, #0x96
    lsls r0, r0, #0x10
_08053816:
    cmp r1, r0
    beq _080538AC
    b _08053D60
_0805381C:
    movs r0, #0x9D
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053826
    b _08053D28
_08053826:
    cmp r1, r0
    bhi _08053862
    movs r0, #0x9A
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053834
    b _08053D10
_08053834:
    cmp r1, r0
    bhi _0805384C
    movs r0, #0x98
    lsls r0, r0, #0x10
    cmp r1, r0
    beq _080538AC
    movs r0, #0x99
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _0805384A
    b _08053D08
_0805384A:
    b _08053D60
_0805384C:
    movs r0, #0x9B
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053856
    b _08053D18
_08053856:
    movs r0, #0x9C
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053860
    b _08053D20
_08053860:
    b _08053D60
_08053862:
    movs r0, #0xA0
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _0805386C
    b _08053D40
_0805386C:
    cmp r1, r0
    bhi _08053886
    movs r0, #0x9E
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _0805387A
    b _08053D30
_0805387A:
    movs r0, #0x9F
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053884
    b _08053D38
_08053884:
    b _08053D60
_08053886:
    movs r0, #0xA2
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053890
    b _08053D50
_08053890:
    cmp r1, r0
    bhi _080538A0
    movs r0, #0xA1
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _0805389E
    b _08053D48
_0805389E:
    b _08053D60
_080538A0:
    movs r0, #0xA3
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _080538AA
    b _08053D58
_080538AA:
    b _08053D60
_080538AC:
    ldr r0, _080538EC @ =0x000A0007
    cmp r6, r0
    bne _080538B4
    b _08053B44
_080538B4:
    cmp r6, r0
    bgt _08053960
    movs r0, #0x90
    lsls r0, r0, #0x0C
    cmp r6, r0
    bne _080538C2
    b _08053B8C
_080538C2:
    cmp r6, r0
    bgt _0805391C
    ldr r0, _080538F0 @ =0x00050002
    cmp r6, r0
    bne _080538CE
    b _08053B0C
_080538CE:
    cmp r6, r0
    bgt _080538F4
    subs r0, #0x02
    cmp r6, r0
    bne _080538DA
    b _08053AFC
_080538DA:
    cmp r6, r0
    ble _080538E0
    b _08053B04
_080538E0:
    movs r0, #0x80
    lsls r0, r0, #0x0B
    cmp r6, r0
    bne _080538EA
    b _08053BC8
_080538EA:
    b _08053BD4
_080538EC: .4byte 0x000A0007
_080538F0: .4byte 0x00050002
_080538F4:
    ldr r0, _0805390C @ =0x00060001
    cmp r6, r0
    bne _080538FC
    b _08053B64
_080538FC:
    cmp r6, r0
    bgt _08053910
    subs r0, #0x01
    cmp r6, r0
    bne _08053908
    b _08053B4C
_08053908:
    b _08053BD4
    .byte 0x00, 0x00
_0805390C: .4byte 0x00060001
_08053910:
    movs r0, #0x80
    lsls r0, r0, #0x0C
    cmp r6, r0
    bne _0805391A
    b _08053B7C
_0805391A:
    b _08053BD4
_0805391C:
    ldr r0, _08053940 @ =0x000A0003
    cmp r6, r0
    bne _08053924
    b _08053B2C
_08053924:
    cmp r6, r0
    bgt _08053944
    subs r0, #0x02
    cmp r6, r0
    bne _08053930
    b _08053B1C
_08053930:
    cmp r6, r0
    ble _08053936
    b _08053B24
_08053936:
    subs r0, #0x01
    cmp r6, r0
    bne _0805393E
    b _08053B14
_0805393E:
    b _08053BD4
_08053940: .4byte 0x000A0003
_08053944:
    ldr r0, _08053958 @ =0x000A0005
    cmp r6, r0
    bne _0805394C
    b _08053B34
_0805394C:
    cmp r6, r0
    ble _08053952
    b _08053B3C
_08053952:
    ldr r0, _0805395C @ =0x080F0348
    b _08053BDA
    .byte 0x00, 0x00
_08053958: .4byte 0x000A0005
_0805395C: .4byte 0x080F0348
_08053960:
    ldr r0, _0805398C @ =0x000C0007
    cmp r6, r0
    bne _08053968
    b _08053AB0
_08053968:
    cmp r6, r0
    bgt _080539B8
    subs r0, #0x04
    cmp r6, r0
    bne _08053974
    b _08053A68
_08053974:
    cmp r6, r0
    bgt _08053990
    subs r0, #0x02
    cmp r6, r0
    beq _08053A38
    cmp r6, r0
    bgt _08053A50
    subs r0, #0x01
    cmp r6, r0
    beq _08053A1E
    b _08053BD4
    .byte 0x00, 0x00
_0805398C: .4byte 0x000C0007
_08053990:
    ldr r0, _080539B0 @ =0x000C0005
    cmp r6, r0
    beq _08053A80
    cmp r6, r0
    ble _0805399C
    b _08053A98
_0805399C:
    adds r0, r5, #0x0
    adds r0, #0x56
    mov r3, r8
    strh r3, [r0, #0x00]
    adds r0, #0x02
    strh r3, [r0, #0x00]
    mov r0, r9
    strh r0, [r5, #0x10]
    ldr r0, _080539B4 @ =0x080F0508
    b _08053BDA
_080539B0: .4byte 0x000C0005
_080539B4: .4byte 0x080F0508
_080539B8:
    ldr r0, _080539E8 @ =0x000C000B
    cmp r6, r0
    bne _080539C0
    b _08053AF4
_080539C0:
    cmp r6, r0
    bgt _080539F0
    subs r0, #0x02
    cmp r6, r0
    bne _080539CC
    b _08053AC2
_080539CC:
    cmp r6, r0
    ble _080539D2
    b _08053ADC
_080539D2:
    adds r0, r5, #0x0
    adds r0, #0x56
    mov r1, r8
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    mov r2, r9
    strh r2, [r5, #0x10]
    ldr r0, _080539EC @ =0x080F0D48
    b _08053BDA
    .byte 0x00, 0x00
_080539E8: .4byte 0x000C000B
_080539EC: .4byte 0x080F0D48
_080539F0:
    movs r0, #0x86
    lsls r0, r0, #0x10
    cmp r6, r0
    bne _080539FA
    b _08053BB4
_080539FA:
    cmp r6, r0
    bgt _08053A0A
    movs r0, #0xE0
    lsls r0, r0, #0x0C
    cmp r6, r0
    bne _08053A08
    b _08053BBC
_08053A08:
    b _08053BD4
_08053A0A:
    movs r0, #0x98
    lsls r0, r0, #0x10
    cmp r6, r0
    bne _08053A14
    b _08053B9C
_08053A14:
    adds r0, #0x01
    cmp r6, r0
    bne _08053A1C
    b _08053BA8
_08053A1C:
    b _08053BD4
_08053A1E:
    adds r0, r5, #0x0
    adds r0, #0x56
    mov r3, r8
    strh r3, [r0, #0x00]
    adds r0, #0x02
    strh r3, [r0, #0x00]
    mov r0, r9
    strh r0, [r5, #0x10]
    ldr r0, _08053A34 @ =0x080F09E8
    b _08053BDA
    .byte 0x00, 0x00
_08053A34: .4byte 0x080F09E8
_08053A38:
    adds r0, r5, #0x0
    adds r0, #0x56
    mov r1, r8
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    mov r2, r9
    strh r2, [r5, #0x10]
    ldr r0, _08053A4C @ =0x080F0148
    b _08053BDA
_08053A4C: .4byte 0x080F0148
_08053A50:
    adds r0, r5, #0x0
    adds r0, #0x56
    mov r3, r8
    strh r3, [r0, #0x00]
    adds r0, #0x02
    strh r3, [r0, #0x00]
    mov r0, r9
    strh r0, [r5, #0x10]
    ldr r0, _08053A64 @ =0x080F04E8
    b _08053BDA
_08053A64: .4byte 0x080F04E8
_08053A68:
    adds r0, r5, #0x0
    adds r0, #0x56
    mov r1, r8
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    mov r2, r9
    strh r2, [r5, #0x10]
    ldr r0, _08053A7C @ =0x080EFDE8
    b _08053BDA
_08053A7C: .4byte 0x080EFDE8
_08053A80:
    adds r0, r5, #0x0
    adds r0, #0x56
    mov r3, r8
    strh r3, [r0, #0x00]
    adds r0, #0x02
    strh r3, [r0, #0x00]
    mov r0, r9
    strh r0, [r5, #0x10]
    ldr r0, _08053A94 @ =0x080F0168
    b _08053BDA
_08053A94: .4byte 0x080F0168
_08053A98:
    adds r0, r5, #0x0
    adds r0, #0x56
    mov r1, r8
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    mov r2, r9
    strh r2, [r5, #0x10]
    ldr r0, _08053AAC @ =0x080F0188
    b _08053BDA
_08053AAC: .4byte 0x080F0188
_08053AB0:
    adds r0, r5, #0x0
    adds r0, #0x56
    mov r3, r8
    strh r3, [r0, #0x00]
    adds r0, #0x02
    strh r3, [r0, #0x00]
    mov r0, r9
    strh r0, [r5, #0x10]
    b _08053BD8
_08053AC2:
    adds r0, r5, #0x0
    adds r0, #0x56
    mov r1, r8
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    mov r2, r9
    strh r2, [r5, #0x10]
    ldr r0, _08053AD8 @ =0x080F0DC8
    b _08053BDA
    .byte 0x00, 0x00
_08053AD8: .4byte 0x080F0DC8
_08053ADC:
    adds r0, r5, #0x0
    adds r0, #0x56
    mov r3, r8
    strh r3, [r0, #0x00]
    adds r0, #0x02
    strh r3, [r0, #0x00]
    mov r0, r9
    strh r0, [r5, #0x10]
    ldr r0, _08053AF0 @ =0x080F0E08
    b _08053BDA
_08053AF0: .4byte 0x080F0E08
_08053AF4:
    ldr r0, _08053AF8 @ =0x080F0448
    b _08053BDA
_08053AF8: .4byte 0x080F0448
_08053AFC:
    ldr r0, _08053B00 @ =0x080F0208
    b _08053BDA
_08053B00: .4byte 0x080F0208
_08053B04:
    ldr r0, _08053B08 @ =0x080F0228
    b _08053BDA
_08053B08: .4byte 0x080F0228
_08053B0C:
    ldr r0, _08053B10 @ =0x080F0248
    b _08053BDA
_08053B10: .4byte 0x080F0248
_08053B14:
    ldr r0, _08053B18 @ =0x080F02C8
    b _08053BDA
_08053B18: .4byte 0x080F02C8
_08053B1C:
    ldr r0, _08053B20 @ =0x080F02E8
    b _08053BDA
_08053B20: .4byte 0x080F02E8
_08053B24:
    ldr r0, _08053B28 @ =0x080F0308
    b _08053BDA
_08053B28: .4byte 0x080F0308
_08053B2C:
    ldr r0, _08053B30 @ =0x080F0328
    b _08053BDA
_08053B30: .4byte 0x080F0328
_08053B34:
    ldr r0, _08053B38 @ =0x080F0368
    b _08053BDA
_08053B38: .4byte 0x080F0368
_08053B3C:
    ldr r0, _08053B40 @ =0x080F0388
    b _08053BDA
_08053B40: .4byte 0x080F0388
_08053B44:
    ldr r0, _08053B48 @ =0x080F03A8
    b _08053BDA
_08053B48: .4byte 0x080F03A8
_08053B4C:
    movs r0, #0xB8
    adds r1, r5, #0x0
    adds r1, #0x56
    strh r0, [r1, #0x00]
    adds r1, #0x02
    strh r0, [r1, #0x00]
    mov r1, r9
    strh r1, [r5, #0x10]
    ldr r0, _08053B60 @ =0x080F03C8
    b _08053BDA
_08053B60: .4byte 0x080F03C8
_08053B64:
    movs r0, #0xB8
    adds r1, r5, #0x0
    adds r1, #0x56
    strh r0, [r1, #0x00]
    adds r1, #0x02
    strh r0, [r1, #0x00]
    mov r2, r9
    strh r2, [r5, #0x10]
    ldr r0, _08053B78 @ =0x080F03E8
    b _08053BDA
_08053B78: .4byte 0x080F03E8
_08053B7C:
    ldrh r0, [r5, #0x34]
    movs r1, #0x02
    orrs r1, r0
    strh r1, [r5, #0x34]
    ldr r0, _08053B88 @ =0x080F04A8
    b _08053BDA
_08053B88: .4byte 0x080F04A8
_08053B8C:
    ldrh r0, [r5, #0x34]
    movs r1, #0x02
    orrs r1, r0
    strh r1, [r5, #0x34]
    ldr r0, _08053B98 @ =0x080F04C8
    b _08053BDA
_08053B98: .4byte 0x080F04C8
_08053B9C:
    mov r3, r9
    strh r3, [r5, #0x10]
    ldr r0, _08053BA4 @ =0x080F0AA8
    b _08053BDA
_08053BA4: .4byte 0x080F0AA8
_08053BA8:
    mov r0, r9
    strh r0, [r5, #0x10]
    ldr r0, _08053BB0 @ =0x080F0AC8
    b _08053BDA
_08053BB0: .4byte 0x080F0AC8
_08053BB4:
    adds r0, r5, #0x0
    bl sub_8056170
    b sub_8053D64
_08053BBC:
    mov r1, r9
    strh r1, [r5, #0x10]
    ldr r0, _08053BC4 @ =0x080F0FC8
    b _08053BDA
_08053BC4: .4byte 0x080F0FC8
_08053BC8:
    mov r2, r9
    strh r2, [r5, #0x10]
    ldr r0, _08053BD0 @ =0x080F0FA8
    b _08053BDA
_08053BD0: .4byte 0x080F0FA8
_08053BD4:
    mov r3, r9
    strh r3, [r5, #0x10]
_08053BD8:
    ldr r0, _08053BE4 @ =0x080F01A8
_08053BDA:
    str r0, [r5, #0x4C]
    adds r0, r5, #0x0
    bl sub_8059E80
    b sub_8053D64
_08053BE4: .4byte 0x080F01A8
_08053BE8:
    ldr r0, [r5, #0x08]
    ldr r1, _08053BFC @ =0xFFF80000
    adds r0, r0, r1
    str r0, [r5, #0x08]
    ldr r0, _08053C00 @ =0x00010001
    cmp r6, r0
    bne _08053C08
    ldr r0, _08053C04 @ =0x080F06C8
    b _08053D62
    .byte 0x00, 0x00
_08053BFC: .4byte 0xFFF80000
_08053C00: .4byte 0x00010001
_08053C04: .4byte 0x080F06C8
_08053C08:
    ldr r0, _08053C0C @ =0x080F06A8
    b _08053D62
_08053C0C: .4byte 0x080F06A8
_08053C10:
    ldr r0, _08053C14 @ =0x080F0488
    b _08053D62
_08053C14: .4byte 0x080F0488
_08053C18:
    adds r0, r5, #0x0
    bl sub_8058A74
    b sub_8053D64
_08053C20:
    cmp r6, r1
    bne _08053C30
    mov r2, r9
    strh r2, [r5, #0x10]
    ldr r0, _08053C2C @ =0x080F0408
    b _08053D62
_08053C2C: .4byte 0x080F0408
_08053C30:
    ldr r0, _08053C34 @ =0x080F0428
    b _08053D62
_08053C34: .4byte 0x080F0428
_08053C38:
    ldr r0, _08053C3C @ =0x080F0468
    b _08053D62
_08053C3C: .4byte 0x080F0468
_08053C40:
    ldr r1, [r5, #0x50]
    adds r0, r5, #0x0
    bl sub_805631C
    b sub_8053D64
_08053C4A:
    ldr r1, [r5, #0x50]
    adds r0, r5, #0x0
    bl sub_805631C
    ldr r0, _08053C58 @ =0x080F0008
    b _08053D62
    .byte 0x00, 0x00
_08053C58: .4byte 0x080F0008
_08053C5C:
    adds r0, r5, #0x0
    bl sub_8053EF4
    b sub_8053D64
_08053C64:
    ldr r1, [r5, #0x50]
    adds r0, r5, #0x0
    bl sub_8055D70
    b sub_8053D64
_08053C6E:
    adds r0, r5, #0x0
    bl sub_8056908
    b sub_8053D64
_08053C76:
    ldr r1, [r5, #0x50]
    adds r0, r5, #0x0
    bl sub_80563D4
    b sub_8053D64
_08053C80:
    ldr r0, _08053C84 @ =0x080EFE48
    b _08053D62
_08053C84: .4byte 0x080EFE48
_08053C88:
    adds r0, r5, #0x0
    bl sub_8056C00
    b sub_8053D64
_08053C90:
    adds r0, r5, #0x0
    bl sub_805699C
    b sub_8053D64
_08053C98:
    adds r0, r5, #0x0
    bl sub_8057074
    ldr r0, _08053CA4 @ =0x080F0588
    b _08053D62
    .byte 0x00, 0x00
_08053CA4: .4byte 0x080F0588
_08053CA8:
    ldr r0, _08053CAC @ =0x080EFE48
    b _08053D62
_08053CAC: .4byte 0x080EFE48
_08053CB0:
    adds r0, r5, #0x0
    bl sub_8056EE8
    b sub_8053D64
_08053CB8:
    adds r0, r5, #0x0
    bl sub_8058408
    b sub_8053D64
_08053CC0:
    adds r0, r5, #0x0
    bl sub_8057808
    b sub_8053D64
_08053CC8:
    ldr r0, _08053CCC @ =0x080EFE48
    b _08053D62
_08053CCC: .4byte 0x080EFE48
_08053CD0:
    adds r0, r5, #0x0
    bl sub_805674C
    b sub_8053D64
_08053CD8:
    adds r0, r5, #0x0
    bl sub_8057E28
    b sub_8053D64
_08053CE0:
    adds r0, r5, #0x0
    bl sub_8057364
    ldr r0, _08053CEC @ =0x080F0528
    b _08053D62
    .byte 0x00, 0x00
_08053CEC: .4byte 0x080F0528
_08053CF0:
    adds r0, r5, #0x0
    bl sub_80572A4
    b sub_8053D64
_08053CF8:
    adds r0, r5, #0x0
    bl sub_8057594
    b sub_8053D64
_08053D00:
    adds r0, r5, #0x0
    bl sub_8057B04
    b sub_8053D64
_08053D08:
    adds r0, r5, #0x0
    bl sub_80580EC
    b sub_8053D64
_08053D10:
    ldr r0, _08053D14 @ =0x080F0BC8
    b _08053D62
_08053D14: .4byte 0x080F0BC8
_08053D18:
    ldr r0, _08053D1C @ =0x080F0BE8
    b _08053D62
_08053D1C: .4byte 0x080F0BE8
_08053D20:
    adds r0, r5, #0x0
    bl sub_80588AC
    b sub_8053D64
_08053D28:
    adds r0, r5, #0x0
    bl sub_805892C
    b sub_8053D64
_08053D30:
    adds r0, r5, #0x0
    bl sub_8059004
    b sub_8053D64
_08053D38:
    adds r0, r5, #0x0
    bl sub_805919C
    b sub_8053D64
_08053D40:
    adds r0, r5, #0x0
    bl sub_80592E4
    b sub_8053D64
_08053D48:
    adds r0, r5, #0x0
    bl sub_8059710
    b sub_8053D64
_08053D50:
    adds r0, r5, #0x0
    bl sub_8059938
    b sub_8053D64
_08053D58:
    adds r0, r5, #0x0
    bl sub_8059E98
    b sub_8053D64
_08053D60:
    ldr r0, _08053D70 @ =0x080EFE88
_08053D62:
    str r0, [r5, #0x4C]
    thumb_func_start sub_8053D64
sub_8053D64:
    ldrb r0, [r7, #0x00]
    cmp r0, #0x00
    beq _08053D6E
    bl _08053464
_08053D6E:
    b sub_8053D86
_08053D70: .4byte 0x080EFE88
    thumb_func_start sub_8053D74
sub_8053D74:
    ldr r3, [sp, #0x004]
    ldr r1, _08053D98 @ =0x000006EC
    adds r0, r3, r1
    movs r2, #0xDC
    lsls r2, r2, #0x03
    adds r1, r3, r2
    movs r2, #0x00
    bl sub_804F824
    non_word_aligned_thumb_func_start sub_8053D86
sub_8053D86:
    add sp, #0x008
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08053D98: .4byte 0x000006EC
    thumb_func_start sub_8053D9C
sub_8053D9C:
    push {r4, lr}
    ldr r1, _08053DC0 @ =0x000006EC
    adds r0, r0, r1
    ldr r4, [r0, #0x08]
    cmp r4, #0x00
    beq _08053DBA
_08053DA8:
    ldr r1, [r4, #0x5C]
    cmp r1, #0x00
    beq _08053DB4
    adds r0, r4, #0x0
    bl _call_via_r1
_08053DB4:
    ldr r4, [r4, #0x3C]
    cmp r4, #0x00
    bne _08053DA8
_08053DBA:
    pop {r4}
    pop {r0}
    bx r0
_08053DC0: .4byte 0x000006EC
    thumb_func_start sub_8053DC4
sub_8053DC4:
    adds r2, r1, #0x0
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    ldr r3, _08053DE0 @ =0x080F1010
    subs r0, #0x04
    cmp r0, #0x18
    bls _08053DD4
    b _08053ED4
_08053DD4:
    lsls r0, r0, #0x02
    ldr r1, _08053DE4 @ =0x08053DE8
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_08053DE0: .4byte 0x080F1010
_08053DE4: .4byte 0x08053DE8
    .byte 0x4C, 0x3E, 0x05, 0x08, 0x54, 0x3E, 0x05, 0x08, 0x5C, 0x3E, 0x05, 0x08, 0xBC, 0x3E, 0x05, 0x08
    .byte 0x64, 0x3E, 0x05, 0x08, 0x6C, 0x3E, 0x05, 0x08, 0x74, 0x3E, 0x05, 0x08, 0xBC, 0x3E, 0x05, 0x08
    .byte 0x7C, 0x3E, 0x05, 0x08, 0x84, 0x3E, 0x05, 0x08, 0x8C, 0x3E, 0x05, 0x08, 0xBC, 0x3E, 0x05, 0x08
    .byte 0x94, 0x3E, 0x05, 0x08, 0x9C, 0x3E, 0x05, 0x08, 0xA4, 0x3E, 0x05, 0x08, 0xAC, 0x3E, 0x05, 0x08
    .byte 0xB4, 0x3E, 0x05, 0x08, 0xC4, 0x3E, 0x05, 0x08, 0xBC, 0x3E, 0x05, 0x08, 0xCC, 0x3E, 0x05, 0x08
    .byte 0xD4, 0x3E, 0x05, 0x08, 0xBC, 0x3E, 0x05, 0x08, 0x74, 0x3E, 0x05, 0x08, 0xD4, 0x3E, 0x05, 0x08
    .byte 0x4C, 0x3E, 0x05, 0x08, 0x00, 0x49, 0x42, 0xE0, 0x54, 0x10, 0x0F, 0x08, 0x00, 0x49, 0x3E, 0xE0
    .byte 0x60, 0x10, 0x0F, 0x08, 0x00, 0x49, 0x3A, 0xE0, 0x88, 0x10, 0x0F, 0x08, 0x00, 0x49, 0x36, 0xE0
    .byte 0x18, 0x11, 0x0F, 0x08, 0x00, 0x49, 0x32, 0xE0, 0x30, 0x11, 0x0F, 0x08, 0x00, 0x49, 0x2E, 0xE0
    .byte 0x54, 0x11, 0x0F, 0x08, 0x00, 0x49, 0x2A, 0xE0, 0x74, 0x11, 0x0F, 0x08, 0x00, 0x49, 0x26, 0xE0
    .byte 0x88, 0x11, 0x0F, 0x08, 0x00, 0x49, 0x22, 0xE0, 0xA0, 0x11, 0x0F, 0x08, 0x00, 0x49, 0x1E, 0xE0
    .byte 0xC0, 0x11, 0x0F, 0x08, 0x00, 0x49, 0x1A, 0xE0, 0xD8, 0x11, 0x0F, 0x08, 0x00, 0x49, 0x16, 0xE0
    .byte 0x04, 0x12, 0x0F, 0x08, 0x00, 0x49, 0x12, 0xE0, 0x28, 0x12, 0x0F, 0x08, 0x00, 0x49, 0x0E, 0xE0
    .byte 0x5C, 0x12, 0x0F, 0x08, 0x00, 0x49, 0x0A, 0xE0, 0xA0, 0x10, 0x0F, 0x08, 0x00, 0x49, 0x06, 0xE0
    .byte 0xEC, 0x11, 0x0F, 0x08, 0x00, 0x49, 0x02, 0xE0, 0x6C, 0x12, 0x0F, 0x08
_08053ED4:
    ldr r1, _08053EE0 @ =0x080F1008
    cmp r2, #0x7F
    bgt _08053EE4
    lsls r0, r2, #0x02
    b _08053EEA
    .byte 0x00, 0x00
_08053EE0: .4byte 0x080F1008
_08053EE4:
    lsls r0, r2, #0x02
    adds r0, r0, r3
    ldr r1, _08053EF0 @ =0xFFFFFE00
_08053EEA:
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    bx lr
_08053EF0: .4byte 0xFFFFFE00
    thumb_func_start sub_8053EF4
sub_8053EF4:
    push {r4, lr}
    adds r3, r0, #0x0
    adds r4, r3, #0x0
    ldr r0, _08053F34 @ =0x00001002
    movs r2, #0x00
    strh r0, [r3, #0x10]
    movs r0, #0x14
    strb r0, [r3, #0x0E]
    strb r0, [r3, #0x0D]
    strb r0, [r3, #0x0C]
    ldr r0, _08053F38 @ =0x080540A1
    str r0, [r3, #0x5C]
    ldr r0, _08053F3C @ =0x080EFEE8
    str r0, [r3, #0x4C]
    ldr r0, _08053F40 @ =0x08055AE9
    str r0, [r3, #0x18]
    ldrh r1, [r3, #0x34]
    movs r0, #0x02
    orrs r0, r1
    strh r0, [r3, #0x34]
    str r2, [r3, #0x60]
    ldr r0, [r3, #0x50]
    ldr r1, _08053F44 @ =0xFF7EFFFF
    adds r0, r0, r1
    cmp r0, #0x0A
    bls _08053F2A
    b _08054094
_08053F2A:
    lsls r0, r0, #0x02
    ldr r1, _08053F48 @ =0x08053F4C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08053F34: .4byte 0x00001002
_08053F38: .4byte sub_80540A0
_08053F3C: .4byte 0x080EFEE8
_08053F40: .4byte sub_8055AE8
_08053F44: .4byte 0xFF7EFFFF
_08053F48: .4byte 0x08053F4C
    .byte 0x78, 0x3F, 0x05, 0x08, 0x7C, 0x3F, 0x05, 0x08, 0x80, 0x3F, 0x05, 0x08, 0x84, 0x3F, 0x05, 0x08
    .byte 0xAC, 0x3F, 0x05, 0x08, 0xD8, 0x3F, 0x05, 0x08, 0xF0, 0x3F, 0x05, 0x08, 0x18, 0x40, 0x05, 0x08
    .byte 0x30, 0x40, 0x05, 0x08, 0x58, 0x40, 0x05, 0x08, 0x70, 0x40, 0x05, 0x08, 0x21, 0x20, 0x8C, 0xE0
    .byte 0x41, 0x20, 0x8A, 0xE0, 0x61, 0x20, 0x88, 0xE0, 0x00, 0x21, 0x59, 0x66, 0x04, 0x48, 0xD8, 0x65
    .byte 0x04, 0x48, 0xA0, 0x61, 0x19, 0x66, 0x04, 0x48, 0xA0, 0x62, 0x04, 0x48, 0xE0, 0x62, 0x7D, 0xE0
    .byte 0x2D, 0x44, 0x05, 0x08, 0x55, 0x5B, 0x05, 0x08, 0xAB, 0x2A, 0xFD, 0xFF, 0x55, 0xD5, 0x02, 0x00
    .byte 0x00, 0x20, 0x58, 0x66, 0x05, 0x48, 0xD8, 0x65, 0x05, 0x48, 0xA0, 0x61, 0x10, 0x20, 0x18, 0x66
    .byte 0x04, 0x48, 0xA0, 0x62, 0x04, 0x48, 0xE0, 0x62, 0x68, 0xE0, 0x00, 0x00, 0x2D, 0x44, 0x05, 0x08
    .byte 0x55, 0x5B, 0x05, 0x08, 0x55, 0xD5, 0x02, 0x00, 0xAB, 0x2A, 0xFD, 0xFF, 0x20, 0x20, 0x58, 0x66
    .byte 0x02, 0x48, 0xD8, 0x65, 0x02, 0x48, 0xA0, 0x61, 0x00, 0x20, 0x0A, 0xE0, 0x89, 0x48, 0x05, 0x08
    .byte 0xC1, 0x5B, 0x05, 0x08, 0x38, 0x20, 0x58, 0x66, 0x05, 0x48, 0xD8, 0x65, 0x05, 0x48, 0xA0, 0x61
    .byte 0x12, 0x20, 0x18, 0x66, 0x04, 0x48, 0xA0, 0x62, 0x80, 0x20, 0x80, 0x02, 0xE0, 0x62, 0x45, 0xE0
    .byte 0x51, 0x4D, 0x05, 0x08, 0x2D, 0x5C, 0x05, 0x08, 0x00, 0x00, 0xFE, 0xFF, 0x00, 0x21, 0x59, 0x66
    .byte 0x02, 0x48, 0xD8, 0x65, 0x02, 0x48, 0xA0, 0x61, 0x19, 0x66, 0x0B, 0xE0, 0x51, 0x4D, 0x05, 0x08
    .byte 0x2D, 0x5C, 0x05, 0x08, 0x50, 0x20, 0x58, 0x66, 0x05, 0x48, 0xD8, 0x65, 0x05, 0x48, 0xA0, 0x61
    .byte 0x24, 0x20, 0x18, 0x66, 0x80, 0x20, 0x80, 0x02, 0xA0, 0x62, 0x03, 0x48, 0xE0, 0x62, 0x25, 0xE0
    .byte 0x89, 0x48, 0x05, 0x08, 0xC1, 0x5B, 0x05, 0x08, 0x00, 0x00, 0xFE, 0xFF, 0x00, 0x20, 0x58, 0x66
    .byte 0x02, 0x48, 0xD8, 0x65, 0x02, 0x48, 0xA0, 0x61, 0x09, 0x20, 0x0A, 0xE0, 0xD1, 0x51, 0x05, 0x08
    .byte 0x99, 0x5C, 0x05, 0x08, 0x00, 0x20, 0x58, 0x66, 0x04, 0x48, 0xD8, 0x65, 0x04, 0x48, 0xA0, 0x61
    .byte 0x24, 0x20, 0x18, 0x66, 0x03, 0x48, 0xA0, 0x62, 0x08, 0xE0, 0x00, 0x00, 0x3D, 0x56, 0x05, 0x08
    .byte 0x05, 0x5D, 0x05, 0x08, 0x56, 0x55, 0xFE, 0xFF
_08054094:
    movs r0, #0x01
    str r0, [r3, #0x64]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_80540A0
sub_80540A0:
    push {r4, r5, r6, lr}
    adds r3, r0, #0x0
    adds r4, r3, #0x0
    ldr r0, [r3, #0x64]
    subs r0, #0x01
    str r0, [r3, #0x64]
    adds r2, r0, #0x0
    ldr r0, [r3, #0x60]
    cmp r0, #0x07
    bls _080540B6
    b _0805441C
_080540B6:
    lsls r0, r0, #0x02
    ldr r1, _080540C0 @ =0x080540C4
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_080540C0: .4byte 0x080540C4
    .byte 0xBE, 0x41, 0x05, 0x08, 0xE4, 0x40, 0x05, 0x08, 0xAA, 0x41, 0x05, 0x08, 0xBE, 0x41, 0x05, 0x08
    .byte 0xD0, 0x41, 0x05, 0x08, 0x9C, 0x42, 0x05, 0x08, 0x3C, 0x43, 0x05, 0x08, 0xE8, 0x43, 0x05, 0x08
    .byte 0x23, 0x2A, 0x52, 0xD8, 0x90, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00
    .byte 0xF8, 0x40, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08
    .byte 0x8E, 0x41, 0x05, 0x08, 0x88, 0x41, 0x05, 0x08, 0x88, 0x41, 0x05, 0x08, 0x88, 0x41, 0x05, 0x08
    .byte 0x88, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08
    .byte 0x8E, 0x41, 0x05, 0x08, 0x88, 0x41, 0x05, 0x08, 0x88, 0x41, 0x05, 0x08, 0x88, 0x41, 0x05, 0x08
    .byte 0x88, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08
    .byte 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08, 0x88, 0x41, 0x05, 0x08
    .byte 0x88, 0x41, 0x05, 0x08, 0x88, 0x41, 0x05, 0x08, 0x88, 0x41, 0x05, 0x08, 0x88, 0x41, 0x05, 0x08
    .byte 0x88, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08
    .byte 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08
    .byte 0x8E, 0x41, 0x05, 0x08, 0x80, 0x20, 0x00, 0x02, 0x00, 0xE0, 0x00, 0x20, 0xA0, 0x60, 0x00, 0x2A
    .byte 0x00, 0xDD, 0x41, 0xE1, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x40, 0x20, 0x58, 0x66, 0x80, 0x20
    .byte 0x00, 0x02, 0x18, 0x63, 0x38, 0xE1, 0x40, 0x20, 0x80, 0x1A, 0xC0, 0x03, 0xA0, 0x60, 0x00, 0x2A
    .byte 0x00, 0xDD, 0x31, 0xE1, 0x18, 0x6E, 0x01, 0x30, 0x10, 0xE1, 0x00, 0x2A, 0x00, 0xDD, 0x2B, 0xE1
    .byte 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x24, 0x20, 0x58, 0x66, 0x25, 0xE1, 0x23, 0x2A, 0x52, 0xD8
    .byte 0x90, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00, 0xE4, 0x41, 0x05, 0x08
    .byte 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08
    .byte 0x74, 0x42, 0x05, 0x08, 0x74, 0x42, 0x05, 0x08, 0x74, 0x42, 0x05, 0x08, 0x74, 0x42, 0x05, 0x08
    .byte 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08
    .byte 0x74, 0x42, 0x05, 0x08, 0x74, 0x42, 0x05, 0x08, 0x74, 0x42, 0x05, 0x08, 0x74, 0x42, 0x05, 0x08
    .byte 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08
    .byte 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08, 0x74, 0x42, 0x05, 0x08, 0x74, 0x42, 0x05, 0x08
    .byte 0x74, 0x42, 0x05, 0x08, 0x74, 0x42, 0x05, 0x08, 0x74, 0x42, 0x05, 0x08, 0x74, 0x42, 0x05, 0x08
    .byte 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08
    .byte 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08
    .byte 0x82, 0x20, 0x80, 0x03, 0x01, 0xE0, 0x80, 0x20, 0x80, 0x03, 0xA0, 0x60, 0x00, 0x2A, 0x00, 0xDD
    .byte 0xCA, 0xE0, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x08, 0x20, 0x58, 0x66, 0x01, 0x48, 0x18, 0x63
    .byte 0xC2, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0x90, 0x04, 0xA0, 0x60, 0x00, 0x2A, 0x00, 0xDD
    .byte 0xBA, 0xE0, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x20, 0x21, 0x59, 0x66, 0x00, 0x20, 0x18, 0x63
    .byte 0x1C, 0x4A, 0x13, 0x1C, 0x24, 0x33, 0x1C, 0x4D, 0x50, 0x19, 0x00, 0x68, 0x80, 0x6C, 0x08, 0x40
    .byte 0x00, 0x28, 0x00, 0xD0, 0xA8, 0xE0, 0x19, 0x49, 0x50, 0x18, 0x00, 0x78, 0x00, 0x28, 0x00, 0xD1
    .byte 0xA2, 0xE0, 0x18, 0x1C, 0x21, 0x1C, 0xF8, 0xF7, 0x25, 0xFD, 0x00, 0x04, 0x02, 0x0C, 0x18, 0x2A
    .byte 0x00, 0xDC, 0x99, 0xE0, 0x16, 0x1C, 0x00, 0x2E, 0x00, 0xD1, 0x95, 0xE0, 0xC0, 0x20, 0x40, 0x00
    .byte 0x0B, 0xF0, 0x14, 0xFE, 0x0E, 0x4D, 0x0F, 0x4C, 0xC0, 0x22, 0x12, 0x01, 0xA4, 0x18, 0xA1, 0x88
    .byte 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x0B, 0xF0, 0xFF, 0xFE, 0xA1, 0x88
    .byte 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x01, 0x21, 0x32, 0x1C, 0x0C, 0xF0
    .byte 0xAD, 0xFD, 0x79, 0xE0, 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x84, 0x0C, 0x00, 0x00
    .byte 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08, 0x1F, 0x2A, 0x4A, 0xD8, 0x90, 0x00, 0x02, 0x49
    .byte 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00, 0x50, 0x43, 0x05, 0x08, 0xD6, 0x43, 0x05, 0x08
    .byte 0xD6, 0x43, 0x05, 0x08, 0xD6, 0x43, 0x05, 0x08, 0xD6, 0x43, 0x05, 0x08, 0xD0, 0x43, 0x05, 0x08
    .byte 0xD0, 0x43, 0x05, 0x08, 0xD0, 0x43, 0x05, 0x08, 0xD0, 0x43, 0x05, 0x08, 0xD6, 0x43, 0x05, 0x08
    .byte 0xD6, 0x43, 0x05, 0x08, 0xD6, 0x43, 0x05, 0x08, 0xD6, 0x43, 0x05, 0x08, 0xD0, 0x43, 0x05, 0x08
    .byte 0xD0, 0x43, 0x05, 0x08, 0xD0, 0x43, 0x05, 0x08, 0xD0, 0x43, 0x05, 0x08, 0xD6, 0x43, 0x05, 0x08
    .byte 0xD6, 0x43, 0x05, 0x08, 0xD6, 0x43, 0x05, 0x08, 0xD6, 0x43, 0x05, 0x08, 0xD0, 0x43, 0x05, 0x08
    .byte 0xD0, 0x43, 0x05, 0x08, 0xD0, 0x43, 0x05, 0x08, 0xD0, 0x43, 0x05, 0x08, 0xD6, 0x43, 0x05, 0x08
    .byte 0xD6, 0x43, 0x05, 0x08, 0xD6, 0x43, 0x05, 0x08, 0xD6, 0x43, 0x05, 0x08, 0xD0, 0x43, 0x05, 0x08
    .byte 0xD0, 0x43, 0x05, 0x08, 0xD0, 0x43, 0x05, 0x08, 0xD0, 0x43, 0x05, 0x08, 0x80, 0x20, 0x00, 0x02
    .byte 0x00, 0xE0, 0x00, 0x20, 0xA0, 0x60, 0x00, 0x2A, 0x1E, 0xDC, 0x00, 0x20, 0x18, 0x66, 0x20, 0x20
    .byte 0x58, 0x66, 0x19, 0xE0, 0xA0, 0x8E, 0x01, 0x21, 0x08, 0x40, 0x00, 0x28, 0x14, 0xD0, 0x20, 0x68
    .byte 0xA1, 0x6A, 0x40, 0x18, 0x20, 0x60, 0x60, 0x68, 0xE1, 0x6A, 0x40, 0x18, 0x60, 0x60, 0xA1, 0x68
    .byte 0x20, 0x6B, 0x09, 0x18, 0xA1, 0x60, 0x06, 0x4D, 0x40, 0x19, 0x20, 0x63, 0x00, 0x29, 0x03, 0xDC
    .byte 0x99, 0x8E, 0x04, 0x48, 0x08, 0x40, 0x98, 0x86
_0805441C:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00, 0x00, 0xC0, 0xFF, 0xFF, 0xFE, 0xFF, 0x00, 0x00
    thumb_func_start sub_805442C
sub_805442C:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    ldr r2, [r4, #0x64]
    adds r3, r4, #0x0
    ldr r0, [r4, #0x60]
    cmp r0, #0x21
    bls _0805443C
    b _0805487A
_0805443C:
    lsls r0, r0, #0x02
    ldr r1, _08054448 @ =0x0805444C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_08054448: .4byte 0x0805444C
    .byte 0xF2, 0x45, 0x05, 0x08, 0xD4, 0x44, 0x05, 0x08, 0x9E, 0x45, 0x05, 0x08, 0xB8, 0x45, 0x05, 0x08
    .byte 0xF2, 0x45, 0x05, 0x08, 0x08, 0x46, 0x05, 0x08, 0xD8, 0x46, 0x05, 0x08, 0x7C, 0x47, 0x05, 0x08
    .byte 0xF2, 0x45, 0x05, 0x08, 0xD4, 0x44, 0x05, 0x08, 0x9E, 0x45, 0x05, 0x08, 0xCA, 0x45, 0x05, 0x08
    .byte 0xF2, 0x45, 0x05, 0x08, 0x08, 0x46, 0x05, 0x08, 0xD8, 0x46, 0x05, 0x08, 0x7C, 0x47, 0x05, 0x08
    .byte 0xF2, 0x45, 0x05, 0x08, 0xD4, 0x44, 0x05, 0x08, 0x9E, 0x45, 0x05, 0x08, 0xC2, 0x45, 0x05, 0x08
    .byte 0xF2, 0x45, 0x05, 0x08, 0x08, 0x46, 0x05, 0x08, 0xD8, 0x46, 0x05, 0x08, 0x7C, 0x47, 0x05, 0x08
    .byte 0xF2, 0x45, 0x05, 0x08, 0xD4, 0x44, 0x05, 0x08, 0x9E, 0x45, 0x05, 0x08, 0xD4, 0x45, 0x05, 0x08
    .byte 0xF2, 0x45, 0x05, 0x08, 0x08, 0x46, 0x05, 0x08, 0xD8, 0x46, 0x05, 0x08, 0x7C, 0x47, 0x05, 0x08
    .byte 0x7A, 0x48, 0x05, 0x08, 0x46, 0x48, 0x05, 0x08, 0x23, 0x2A, 0x52, 0xD8, 0x90, 0x00, 0x02, 0x49
    .byte 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00, 0xE8, 0x44, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08
    .byte 0x7E, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08, 0x78, 0x45, 0x05, 0x08
    .byte 0x78, 0x45, 0x05, 0x08, 0x78, 0x45, 0x05, 0x08, 0x78, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08
    .byte 0x7E, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08, 0x78, 0x45, 0x05, 0x08
    .byte 0x78, 0x45, 0x05, 0x08, 0x78, 0x45, 0x05, 0x08, 0x78, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08
    .byte 0x7E, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08
    .byte 0x7E, 0x45, 0x05, 0x08, 0x78, 0x45, 0x05, 0x08, 0x78, 0x45, 0x05, 0x08, 0x78, 0x45, 0x05, 0x08
    .byte 0x78, 0x45, 0x05, 0x08, 0x78, 0x45, 0x05, 0x08, 0x78, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08
    .byte 0x7E, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08
    .byte 0x7E, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08, 0x80, 0x20, 0x00, 0x02
    .byte 0x00, 0xE0, 0x00, 0x20, 0x98, 0x60, 0x01, 0x32, 0x62, 0x66, 0x23, 0x2A, 0x00, 0xDC, 0x76, 0xE1
    .byte 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x00, 0x20, 0x60, 0x66, 0x80, 0x20, 0x00, 0x02, 0x20, 0x63
    .byte 0x6D, 0xE1, 0x01, 0x32, 0x62, 0x66, 0xD0, 0x03, 0x98, 0x60, 0x3F, 0x2A, 0x00, 0xDC, 0x66, 0xE1
    .byte 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x30, 0x20, 0x60, 0x66, 0x60, 0xE1, 0x18, 0x68, 0x99, 0x6A
    .byte 0x40, 0x18, 0x18, 0x60, 0x0C, 0xE0, 0x58, 0x68, 0xD9, 0x6A, 0x40, 0x18, 0x07, 0xE0, 0x18, 0x68
    .byte 0x99, 0x6A, 0x40, 0x1A, 0x18, 0x60, 0x03, 0xE0, 0x58, 0x68, 0xD9, 0x6A, 0x40, 0x1A, 0x58, 0x60
    .byte 0x01, 0x3A, 0x62, 0x66, 0x00, 0x2A, 0x00, 0xDD, 0x49, 0xE1, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66
    .byte 0x40, 0x20, 0x60, 0x66, 0x43, 0xE1, 0x01, 0x3A, 0x62, 0x66, 0x00, 0x2A, 0x00, 0xDD, 0x3E, 0xE1
    .byte 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x00, 0x20, 0x60, 0x66, 0x38, 0xE1, 0x23, 0x2A, 0x52, 0xD8
    .byte 0x90, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00, 0x1C, 0x46, 0x05, 0x08
    .byte 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08
    .byte 0xAC, 0x46, 0x05, 0x08, 0xAC, 0x46, 0x05, 0x08, 0xAC, 0x46, 0x05, 0x08, 0xAC, 0x46, 0x05, 0x08
    .byte 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08
    .byte 0xAC, 0x46, 0x05, 0x08, 0xAC, 0x46, 0x05, 0x08, 0xAC, 0x46, 0x05, 0x08, 0xAC, 0x46, 0x05, 0x08
    .byte 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08
    .byte 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08, 0xAC, 0x46, 0x05, 0x08, 0xAC, 0x46, 0x05, 0x08
    .byte 0xAC, 0x46, 0x05, 0x08, 0xAC, 0x46, 0x05, 0x08, 0xAC, 0x46, 0x05, 0x08, 0xAC, 0x46, 0x05, 0x08
    .byte 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08
    .byte 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08
    .byte 0x82, 0x20, 0x80, 0x03, 0x01, 0xE0, 0x80, 0x20, 0x80, 0x03, 0x98, 0x60, 0x01, 0x32, 0x62, 0x66
    .byte 0x23, 0x2A, 0x00, 0xDC, 0xDB, 0xE0, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x08, 0x20, 0x60, 0x66
    .byte 0x01, 0x48, 0x20, 0x63, 0xD3, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0x01, 0x3A, 0x62, 0x66
    .byte 0x90, 0x04, 0x98, 0x60, 0x00, 0x2A, 0x00, 0xDD, 0xC9, 0xE0, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66
    .byte 0x00, 0x20, 0x60, 0x66, 0x20, 0x63, 0x1D, 0x4A, 0x14, 0x1C, 0x24, 0x34, 0x1C, 0x49, 0x50, 0x18
    .byte 0x00, 0x68, 0x80, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD0, 0xB7, 0xE0, 0x19, 0x49
    .byte 0x50, 0x18, 0x00, 0x78, 0x00, 0x28, 0x00, 0xD1, 0xB1, 0xE0, 0x20, 0x1C, 0x19, 0x1C, 0xF8, 0xF7
    .byte 0x05, 0xFB, 0x00, 0x04, 0x02, 0x0C, 0x18, 0x2A, 0x00, 0xDC, 0xA8, 0xE0, 0x16, 0x1C, 0x00, 0x2E
    .byte 0x00, 0xD1, 0xA4, 0xE0, 0xC0, 0x20, 0x40, 0x00, 0x0B, 0xF0, 0xF4, 0xFB, 0x0E, 0x4D, 0x0F, 0x4C
    .byte 0xC0, 0x22, 0x12, 0x01, 0xA4, 0x18, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19
    .byte 0x00, 0x68, 0x0B, 0xF0, 0xDF, 0xFC, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19
    .byte 0x00, 0x68, 0x01, 0x21, 0x32, 0x1C, 0x0C, 0xF0, 0x8D, 0xFB, 0x88, 0xE0, 0x20, 0x2E, 0x00, 0x03
    .byte 0x38, 0x08, 0x00, 0x00, 0x84, 0x0C, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08
    .byte 0x23, 0x2A, 0x52, 0xD8, 0x90, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00
    .byte 0x90, 0x47, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08
    .byte 0x26, 0x48, 0x05, 0x08, 0x20, 0x48, 0x05, 0x08, 0x20, 0x48, 0x05, 0x08, 0x20, 0x48, 0x05, 0x08
    .byte 0x20, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08
    .byte 0x26, 0x48, 0x05, 0x08, 0x20, 0x48, 0x05, 0x08, 0x20, 0x48, 0x05, 0x08, 0x20, 0x48, 0x05, 0x08
    .byte 0x20, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08
    .byte 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08, 0x20, 0x48, 0x05, 0x08
    .byte 0x20, 0x48, 0x05, 0x08, 0x20, 0x48, 0x05, 0x08, 0x20, 0x48, 0x05, 0x08, 0x20, 0x48, 0x05, 0x08
    .byte 0x20, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08
    .byte 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08
    .byte 0x26, 0x48, 0x05, 0x08, 0x80, 0x20, 0x00, 0x02, 0x00, 0xE0, 0x00, 0x20, 0x98, 0x60, 0x01, 0x32
    .byte 0x62, 0x66, 0x23, 0x2A, 0x23, 0xDD, 0x30, 0x20, 0x60, 0x66, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66
    .byte 0x1F, 0x28, 0x1C, 0xDD, 0x00, 0x20, 0x20, 0x66, 0x19, 0xE0, 0x98, 0x8E, 0x01, 0x21, 0x08, 0x40
    .byte 0x00, 0x28, 0x14, 0xD0, 0x18, 0x68, 0x99, 0x6A, 0x40, 0x18, 0x18, 0x60, 0x58, 0x68, 0xD9, 0x6A
    .byte 0x40, 0x18, 0x58, 0x60, 0x99, 0x68, 0x18, 0x6B, 0x09, 0x18, 0x99, 0x60, 0x05, 0x4A, 0x80, 0x18
    .byte 0x18, 0x63, 0x00, 0x29, 0x03, 0xDC, 0xA1, 0x8E, 0x03, 0x48, 0x08, 0x40, 0xA0, 0x86
_0805487A:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0xC0, 0xFF, 0xFF, 0xFE, 0xFF, 0x00, 0x00
    thumb_func_start sub_8054888
sub_8054888:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    ldr r2, [r4, #0x64]
    adds r3, r4, #0x0
    ldr r0, [r4, #0x60]
    cmp r0, #0x37
    bls _08054898
    b _08054D42
_08054898:
    lsls r0, r0, #0x02
    ldr r1, _080548A4 @ =0x080548A8
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_080548A4: .4byte 0x080548A8
    .byte 0xBC, 0x4A, 0x05, 0x08, 0x88, 0x49, 0x05, 0x08, 0x52, 0x4A, 0x05, 0x08, 0x6C, 0x4A, 0x05, 0x08
    .byte 0x82, 0x4A, 0x05, 0x08, 0xBC, 0x4A, 0x05, 0x08, 0xD2, 0x4A, 0x05, 0x08, 0xA0, 0x4B, 0x05, 0x08
    .byte 0x44, 0x4C, 0x05, 0x08, 0xBC, 0x4A, 0x05, 0x08, 0x88, 0x49, 0x05, 0x08, 0x52, 0x4A, 0x05, 0x08
    .byte 0x6C, 0x4A, 0x05, 0x08, 0x82, 0x4A, 0x05, 0x08, 0xBC, 0x4A, 0x05, 0x08, 0xD2, 0x4A, 0x05, 0x08
    .byte 0xA0, 0x4B, 0x05, 0x08, 0x44, 0x4C, 0x05, 0x08, 0xBC, 0x4A, 0x05, 0x08, 0x88, 0x49, 0x05, 0x08
    .byte 0x52, 0x4A, 0x05, 0x08, 0x6C, 0x4A, 0x05, 0x08, 0x8C, 0x4A, 0x05, 0x08, 0xBC, 0x4A, 0x05, 0x08
    .byte 0xD2, 0x4A, 0x05, 0x08, 0xA0, 0x4B, 0x05, 0x08, 0x44, 0x4C, 0x05, 0x08, 0xBC, 0x4A, 0x05, 0x08
    .byte 0x88, 0x49, 0x05, 0x08, 0x52, 0x4A, 0x05, 0x08, 0x6C, 0x4A, 0x05, 0x08, 0x8C, 0x4A, 0x05, 0x08
    .byte 0xBC, 0x4A, 0x05, 0x08, 0xD2, 0x4A, 0x05, 0x08, 0xA0, 0x4B, 0x05, 0x08, 0x44, 0x4C, 0x05, 0x08
    .byte 0xBC, 0x4A, 0x05, 0x08, 0x88, 0x49, 0x05, 0x08, 0x52, 0x4A, 0x05, 0x08, 0x6C, 0x4A, 0x05, 0x08
    .byte 0x96, 0x4A, 0x05, 0x08, 0xBC, 0x4A, 0x05, 0x08, 0xD2, 0x4A, 0x05, 0x08, 0xA0, 0x4B, 0x05, 0x08
    .byte 0x44, 0x4C, 0x05, 0x08, 0xBC, 0x4A, 0x05, 0x08, 0x88, 0x49, 0x05, 0x08, 0x52, 0x4A, 0x05, 0x08
    .byte 0x6C, 0x4A, 0x05, 0x08, 0x9E, 0x4A, 0x05, 0x08, 0xBC, 0x4A, 0x05, 0x08, 0xD2, 0x4A, 0x05, 0x08
    .byte 0xA0, 0x4B, 0x05, 0x08, 0x44, 0x4C, 0x05, 0x08, 0x42, 0x4D, 0x05, 0x08, 0x0E, 0x4D, 0x05, 0x08
    .byte 0x23, 0x2A, 0x52, 0xD8, 0x90, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00
    .byte 0x9C, 0x49, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08
    .byte 0x32, 0x4A, 0x05, 0x08, 0x2C, 0x4A, 0x05, 0x08, 0x2C, 0x4A, 0x05, 0x08, 0x2C, 0x4A, 0x05, 0x08
    .byte 0x2C, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08
    .byte 0x32, 0x4A, 0x05, 0x08, 0x2C, 0x4A, 0x05, 0x08, 0x2C, 0x4A, 0x05, 0x08, 0x2C, 0x4A, 0x05, 0x08
    .byte 0x2C, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08
    .byte 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08, 0x2C, 0x4A, 0x05, 0x08
    .byte 0x2C, 0x4A, 0x05, 0x08, 0x2C, 0x4A, 0x05, 0x08, 0x2C, 0x4A, 0x05, 0x08, 0x2C, 0x4A, 0x05, 0x08
    .byte 0x2C, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08
    .byte 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08
    .byte 0x32, 0x4A, 0x05, 0x08, 0x80, 0x20, 0x00, 0x02, 0x00, 0xE0, 0x00, 0x20, 0x98, 0x60, 0x01, 0x32
    .byte 0x62, 0x66, 0x23, 0x2A, 0x00, 0xDC, 0x80, 0xE1, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x00, 0x20
    .byte 0x60, 0x66, 0x80, 0x20, 0x00, 0x02, 0x20, 0x63, 0x77, 0xE1, 0x01, 0x32, 0x62, 0x66, 0xD0, 0x03
    .byte 0x98, 0x60, 0x3F, 0x2A, 0x00, 0xDC, 0x70, 0xE1, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x10, 0x20
    .byte 0x60, 0x66, 0x6A, 0xE1, 0x01, 0x3A, 0x62, 0x66, 0x00, 0x2A, 0x00, 0xDD, 0x65, 0xE1, 0x20, 0x6E
    .byte 0x01, 0x30, 0x20, 0x66, 0x30, 0x20, 0x60, 0x66, 0x5F, 0xE1, 0x18, 0x68, 0x99, 0x6A, 0x40, 0x18
    .byte 0x18, 0x60, 0x0C, 0xE0, 0x18, 0x68, 0x99, 0x6A, 0x40, 0x1A, 0x18, 0x60, 0x07, 0xE0, 0x58, 0x68
    .byte 0xD9, 0x6A, 0x40, 0x18, 0x02, 0xE0, 0x58, 0x68, 0xD9, 0x6A, 0x40, 0x1A, 0x58, 0x60, 0x01, 0x3A
    .byte 0x62, 0x66, 0x00, 0x2A, 0x00, 0xDD, 0x48, 0xE1, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x20, 0x20
    .byte 0x60, 0x66, 0x42, 0xE1, 0x01, 0x3A, 0x62, 0x66, 0x00, 0x2A, 0x00, 0xDD, 0x3D, 0xE1, 0x20, 0x6E
    .byte 0x01, 0x30, 0x20, 0x66, 0x00, 0x20, 0x60, 0x66, 0x37, 0xE1, 0x23, 0x2A, 0x51, 0xD8, 0x90, 0x00
    .byte 0x01, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0xE4, 0x4A, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08
    .byte 0x7A, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08, 0x74, 0x4B, 0x05, 0x08
    .byte 0x74, 0x4B, 0x05, 0x08, 0x74, 0x4B, 0x05, 0x08, 0x74, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08
    .byte 0x7A, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08, 0x74, 0x4B, 0x05, 0x08
    .byte 0x74, 0x4B, 0x05, 0x08, 0x74, 0x4B, 0x05, 0x08, 0x74, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08
    .byte 0x7A, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08
    .byte 0x7A, 0x4B, 0x05, 0x08, 0x74, 0x4B, 0x05, 0x08, 0x74, 0x4B, 0x05, 0x08, 0x74, 0x4B, 0x05, 0x08
    .byte 0x74, 0x4B, 0x05, 0x08, 0x74, 0x4B, 0x05, 0x08, 0x74, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08
    .byte 0x7A, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08
    .byte 0x7A, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08, 0x82, 0x20, 0x80, 0x03
    .byte 0x01, 0xE0, 0x80, 0x20, 0x80, 0x03, 0x98, 0x60, 0x01, 0x32, 0x62, 0x66, 0x23, 0x2A, 0x00, 0xDC
    .byte 0xDB, 0xE0, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x08, 0x20, 0x60, 0x66, 0x01, 0x48, 0x20, 0x63
    .byte 0xD3, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0x01, 0x3A, 0x62, 0x66, 0x90, 0x04, 0x98, 0x60
    .byte 0x00, 0x2A, 0x00, 0xDD, 0xC9, 0xE0, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x00, 0x20, 0x60, 0x66
    .byte 0x20, 0x63, 0x1D, 0x4A, 0x14, 0x1C, 0x24, 0x34, 0x1C, 0x49, 0x50, 0x18, 0x00, 0x68, 0x80, 0x6C
    .byte 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD0, 0xB7, 0xE0, 0x19, 0x49, 0x50, 0x18, 0x00, 0x78
    .byte 0x00, 0x28, 0x00, 0xD1, 0xB1, 0xE0, 0x20, 0x1C, 0x19, 0x1C, 0xF8, 0xF7, 0xA1, 0xF8, 0x00, 0x04
    .byte 0x02, 0x0C, 0x18, 0x2A, 0x00, 0xDC, 0xA8, 0xE0, 0x16, 0x1C, 0x00, 0x2E, 0x00, 0xD1, 0xA4, 0xE0
    .byte 0xC0, 0x20, 0x40, 0x00, 0x0B, 0xF0, 0x90, 0xF9, 0x0E, 0x4D, 0x0F, 0x4C, 0xC0, 0x22, 0x12, 0x01
    .byte 0xA4, 0x18, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x0B, 0xF0
    .byte 0x7B, 0xFA, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x01, 0x21
    .byte 0x32, 0x1C, 0x0C, 0xF0, 0x29, 0xF9, 0x88, 0xE0, 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00
    .byte 0x84, 0x0C, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08, 0x23, 0x2A, 0x52, 0xD8
    .byte 0x90, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00, 0x58, 0x4C, 0x05, 0x08
    .byte 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08
    .byte 0xE8, 0x4C, 0x05, 0x08, 0xE8, 0x4C, 0x05, 0x08, 0xE8, 0x4C, 0x05, 0x08, 0xE8, 0x4C, 0x05, 0x08
    .byte 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08
    .byte 0xE8, 0x4C, 0x05, 0x08, 0xE8, 0x4C, 0x05, 0x08, 0xE8, 0x4C, 0x05, 0x08, 0xE8, 0x4C, 0x05, 0x08
    .byte 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08
    .byte 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08, 0xE8, 0x4C, 0x05, 0x08, 0xE8, 0x4C, 0x05, 0x08
    .byte 0xE8, 0x4C, 0x05, 0x08, 0xE8, 0x4C, 0x05, 0x08, 0xE8, 0x4C, 0x05, 0x08, 0xE8, 0x4C, 0x05, 0x08
    .byte 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08
    .byte 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08
    .byte 0x80, 0x20, 0x00, 0x02, 0x00, 0xE0, 0x00, 0x20, 0x98, 0x60, 0x01, 0x32, 0x62, 0x66, 0x23, 0x2A
    .byte 0x23, 0xDD, 0x10, 0x20, 0x60, 0x66, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x35, 0x28, 0x1C, 0xDD
    .byte 0x00, 0x20, 0x20, 0x66, 0x19, 0xE0, 0x98, 0x8E, 0x01, 0x21, 0x08, 0x40, 0x00, 0x28, 0x14, 0xD0
    .byte 0x18, 0x68, 0x99, 0x6A, 0x40, 0x18, 0x18, 0x60, 0x58, 0x68, 0xD9, 0x6A, 0x40, 0x18, 0x58, 0x60
    .byte 0x99, 0x68, 0x18, 0x6B, 0x09, 0x18, 0x99, 0x60, 0x05, 0x4A, 0x80, 0x18, 0x18, 0x63, 0x00, 0x29
    .byte 0x03, 0xDC, 0xA1, 0x8E, 0x03, 0x48, 0x08, 0x40, 0xA0, 0x86
_08054D42:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0xC0, 0xFF, 0xFF, 0xFE, 0xFF, 0x00, 0x00
    thumb_func_start sub_8054D50
sub_8054D50:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    ldr r2, [r4, #0x64]
    adds r3, r4, #0x0
    ldr r0, [r4, #0x60]
    cmp r0, #0x25
    bls _08054D60
    b _080551C2
_08054D60:
    lsls r0, r0, #0x02
    ldr r1, _08054D6C @ =0x08054D70
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_08054D6C: .4byte 0x08054D70
    .byte 0x3C, 0x4F, 0x05, 0x08, 0x08, 0x4E, 0x05, 0x08, 0xD2, 0x4E, 0x05, 0x08, 0xEC, 0x4E, 0x05, 0x08
    .byte 0x02, 0x4F, 0x05, 0x08, 0x3C, 0x4F, 0x05, 0x08, 0x52, 0x4F, 0x05, 0x08, 0x20, 0x50, 0x05, 0x08
    .byte 0xC4, 0x50, 0x05, 0x08, 0x3C, 0x4F, 0x05, 0x08, 0x08, 0x4E, 0x05, 0x08, 0xD2, 0x4E, 0x05, 0x08
    .byte 0xEC, 0x4E, 0x05, 0x08, 0x14, 0x4F, 0x05, 0x08, 0x3C, 0x4F, 0x05, 0x08, 0x52, 0x4F, 0x05, 0x08
    .byte 0x20, 0x50, 0x05, 0x08, 0xC4, 0x50, 0x05, 0x08, 0x3C, 0x4F, 0x05, 0x08, 0x08, 0x4E, 0x05, 0x08
    .byte 0xD2, 0x4E, 0x05, 0x08, 0xEC, 0x4E, 0x05, 0x08, 0x0C, 0x4F, 0x05, 0x08, 0x3C, 0x4F, 0x05, 0x08
    .byte 0x52, 0x4F, 0x05, 0x08, 0x20, 0x50, 0x05, 0x08, 0xC4, 0x50, 0x05, 0x08, 0x3C, 0x4F, 0x05, 0x08
    .byte 0x08, 0x4E, 0x05, 0x08, 0xD2, 0x4E, 0x05, 0x08, 0xEC, 0x4E, 0x05, 0x08, 0x1E, 0x4F, 0x05, 0x08
    .byte 0x3C, 0x4F, 0x05, 0x08, 0x52, 0x4F, 0x05, 0x08, 0x20, 0x50, 0x05, 0x08, 0xC4, 0x50, 0x05, 0x08
    .byte 0xC2, 0x51, 0x05, 0x08, 0x8E, 0x51, 0x05, 0x08, 0x23, 0x2A, 0x52, 0xD8, 0x90, 0x00, 0x02, 0x49
    .byte 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00, 0x1C, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08
    .byte 0xB2, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08, 0xAC, 0x4E, 0x05, 0x08
    .byte 0xAC, 0x4E, 0x05, 0x08, 0xAC, 0x4E, 0x05, 0x08, 0xAC, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08
    .byte 0xB2, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08, 0xAC, 0x4E, 0x05, 0x08
    .byte 0xAC, 0x4E, 0x05, 0x08, 0xAC, 0x4E, 0x05, 0x08, 0xAC, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08
    .byte 0xB2, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08
    .byte 0xB2, 0x4E, 0x05, 0x08, 0xAC, 0x4E, 0x05, 0x08, 0xAC, 0x4E, 0x05, 0x08, 0xAC, 0x4E, 0x05, 0x08
    .byte 0xAC, 0x4E, 0x05, 0x08, 0xAC, 0x4E, 0x05, 0x08, 0xAC, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08
    .byte 0xB2, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08
    .byte 0xB2, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08, 0x80, 0x20, 0x00, 0x02
    .byte 0x00, 0xE0, 0x00, 0x20, 0x98, 0x60, 0x01, 0x32, 0x62, 0x66, 0x23, 0x2A, 0x00, 0xDC, 0x80, 0xE1
    .byte 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x00, 0x20, 0x60, 0x66, 0x80, 0x20, 0x00, 0x02, 0x20, 0x63
    .byte 0x77, 0xE1, 0x01, 0x32, 0x62, 0x66, 0xD0, 0x03, 0x98, 0x60, 0x3F, 0x2A, 0x00, 0xDC, 0x70, 0xE1
    .byte 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x10, 0x20, 0x60, 0x66, 0x6A, 0xE1, 0x01, 0x3A, 0x62, 0x66
    .byte 0x00, 0x2A, 0x00, 0xDD, 0x65, 0xE1, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x30, 0x20, 0x60, 0x66
    .byte 0x5F, 0xE1, 0x18, 0x68, 0x99, 0x6A, 0x40, 0x18, 0x18, 0x60, 0x0C, 0xE0, 0x58, 0x68, 0xD9, 0x6A
    .byte 0x40, 0x18, 0x07, 0xE0, 0x18, 0x68, 0x99, 0x6A, 0x40, 0x1A, 0x18, 0x60, 0x03, 0xE0, 0x58, 0x68
    .byte 0xD9, 0x6A, 0x40, 0x1A, 0x58, 0x60, 0x01, 0x3A, 0x62, 0x66, 0x00, 0x2A, 0x00, 0xDD, 0x48, 0xE1
    .byte 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x20, 0x20, 0x60, 0x66, 0x42, 0xE1, 0x01, 0x3A, 0x62, 0x66
    .byte 0x00, 0x2A, 0x00, 0xDD, 0x3D, 0xE1, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x00, 0x20, 0x60, 0x66
    .byte 0x37, 0xE1, 0x23, 0x2A, 0x51, 0xD8, 0x90, 0x00, 0x01, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46
    .byte 0x64, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08
    .byte 0xFA, 0x4F, 0x05, 0x08, 0xF4, 0x4F, 0x05, 0x08, 0xF4, 0x4F, 0x05, 0x08, 0xF4, 0x4F, 0x05, 0x08
    .byte 0xF4, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08
    .byte 0xFA, 0x4F, 0x05, 0x08, 0xF4, 0x4F, 0x05, 0x08, 0xF4, 0x4F, 0x05, 0x08, 0xF4, 0x4F, 0x05, 0x08
    .byte 0xF4, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08
    .byte 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08, 0xF4, 0x4F, 0x05, 0x08
    .byte 0xF4, 0x4F, 0x05, 0x08, 0xF4, 0x4F, 0x05, 0x08, 0xF4, 0x4F, 0x05, 0x08, 0xF4, 0x4F, 0x05, 0x08
    .byte 0xF4, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08
    .byte 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08
    .byte 0xFA, 0x4F, 0x05, 0x08, 0x82, 0x20, 0x80, 0x03, 0x01, 0xE0, 0x80, 0x20, 0x80, 0x03, 0x98, 0x60
    .byte 0x01, 0x32, 0x62, 0x66, 0x23, 0x2A, 0x00, 0xDC, 0xDB, 0xE0, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66
    .byte 0x08, 0x20, 0x60, 0x66, 0x01, 0x48, 0x20, 0x63, 0xD3, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF
    .byte 0x01, 0x3A, 0x62, 0x66, 0x90, 0x04, 0x98, 0x60, 0x00, 0x2A, 0x00, 0xDD, 0xC9, 0xE0, 0x20, 0x6E
    .byte 0x01, 0x30, 0x20, 0x66, 0x00, 0x20, 0x60, 0x66, 0x20, 0x63, 0x1D, 0x4A, 0x14, 0x1C, 0x24, 0x34
    .byte 0x1C, 0x49, 0x50, 0x18, 0x00, 0x68, 0x80, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD0
    .byte 0xB7, 0xE0, 0x19, 0x49, 0x50, 0x18, 0x00, 0x78, 0x00, 0x28, 0x00, 0xD1, 0xB1, 0xE0, 0x20, 0x1C
    .byte 0x19, 0x1C, 0xF7, 0xF7, 0x61, 0xFE, 0x00, 0x04, 0x02, 0x0C, 0x18, 0x2A, 0x00, 0xDC, 0xA8, 0xE0
    .byte 0x16, 0x1C, 0x00, 0x2E, 0x00, 0xD1, 0xA4, 0xE0, 0xC0, 0x20, 0x40, 0x00, 0x0A, 0xF0, 0x50, 0xFF
    .byte 0x0E, 0x4D, 0x0F, 0x4C, 0xC0, 0x22, 0x12, 0x01, 0xA4, 0x18, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18
    .byte 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x0B, 0xF0, 0x3B, 0xF8, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18
    .byte 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x01, 0x21, 0x32, 0x1C, 0x0B, 0xF0, 0xE9, 0xFE, 0x88, 0xE0
    .byte 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x84, 0x0C, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08
    .byte 0x98, 0x24, 0x10, 0x08, 0x23, 0x2A, 0x52, 0xD8, 0x90, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68
    .byte 0x87, 0x46, 0x00, 0x00, 0xD8, 0x50, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08
    .byte 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08, 0x68, 0x51, 0x05, 0x08, 0x68, 0x51, 0x05, 0x08
    .byte 0x68, 0x51, 0x05, 0x08, 0x68, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08
    .byte 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08, 0x68, 0x51, 0x05, 0x08, 0x68, 0x51, 0x05, 0x08
    .byte 0x68, 0x51, 0x05, 0x08, 0x68, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08
    .byte 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08
    .byte 0x68, 0x51, 0x05, 0x08, 0x68, 0x51, 0x05, 0x08, 0x68, 0x51, 0x05, 0x08, 0x68, 0x51, 0x05, 0x08
    .byte 0x68, 0x51, 0x05, 0x08, 0x68, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08
    .byte 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08
    .byte 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08, 0x80, 0x20, 0x00, 0x02, 0x00, 0xE0, 0x00, 0x20
    .byte 0x98, 0x60, 0x01, 0x32, 0x62, 0x66, 0x23, 0x2A, 0x23, 0xDD, 0x10, 0x20, 0x60, 0x66, 0x20, 0x6E
    .byte 0x01, 0x30, 0x20, 0x66, 0x23, 0x28, 0x1C, 0xDD, 0x00, 0x20, 0x20, 0x66, 0x19, 0xE0, 0x98, 0x8E
    .byte 0x01, 0x21, 0x08, 0x40, 0x00, 0x28, 0x14, 0xD0, 0x18, 0x68, 0x99, 0x6A, 0x40, 0x18, 0x18, 0x60
    .byte 0x58, 0x68, 0xD9, 0x6A, 0x40, 0x18, 0x58, 0x60, 0x99, 0x68, 0x18, 0x6B, 0x09, 0x18, 0x99, 0x60
    .byte 0x05, 0x4A, 0x80, 0x18, 0x18, 0x63, 0x00, 0x29, 0x03, 0xDC, 0xA1, 0x8E, 0x03, 0x48, 0x08, 0x40
    .byte 0xA0, 0x86
_080551C2:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0xC0, 0xFF, 0xFF, 0xFE, 0xFF, 0x00, 0x00
    thumb_func_start sub_80551D0
sub_80551D0:
    push {r4, r5, r6, lr}
    adds r3, r0, #0x0
    ldr r2, [r3, #0x64]
    adds r4, r3, #0x0
    ldr r0, [r3, #0x60]
    cmp r0, #0x25
    bls _080551E0
    b _0805562E
_080551E0:
    lsls r0, r0, #0x02
    ldr r1, _080551EC @ =0x080551F0
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_080551EC: .4byte 0x080551F0
    .byte 0xA8, 0x53, 0x05, 0x08, 0x88, 0x52, 0x05, 0x08, 0x52, 0x53, 0x05, 0x08, 0x6C, 0x53, 0x05, 0x08
    .byte 0x82, 0x53, 0x05, 0x08, 0xA8, 0x53, 0x05, 0x08, 0xBE, 0x53, 0x05, 0x08, 0x8C, 0x54, 0x05, 0x08
    .byte 0x30, 0x55, 0x05, 0x08, 0xA8, 0x53, 0x05, 0x08, 0x88, 0x52, 0x05, 0x08, 0x52, 0x53, 0x05, 0x08
    .byte 0x6C, 0x53, 0x05, 0x08, 0x82, 0x53, 0x05, 0x08, 0xA8, 0x53, 0x05, 0x08, 0xBE, 0x53, 0x05, 0x08
    .byte 0x8C, 0x54, 0x05, 0x08, 0x30, 0x55, 0x05, 0x08, 0xA8, 0x53, 0x05, 0x08, 0x88, 0x52, 0x05, 0x08
    .byte 0x52, 0x53, 0x05, 0x08, 0x6C, 0x53, 0x05, 0x08, 0x8A, 0x53, 0x05, 0x08, 0xA8, 0x53, 0x05, 0x08
    .byte 0xBE, 0x53, 0x05, 0x08, 0x8C, 0x54, 0x05, 0x08, 0x30, 0x55, 0x05, 0x08, 0xA8, 0x53, 0x05, 0x08
    .byte 0x88, 0x52, 0x05, 0x08, 0x52, 0x53, 0x05, 0x08, 0x6C, 0x53, 0x05, 0x08, 0x8A, 0x53, 0x05, 0x08
    .byte 0xA8, 0x53, 0x05, 0x08, 0xBE, 0x53, 0x05, 0x08, 0x8C, 0x54, 0x05, 0x08, 0x30, 0x55, 0x05, 0x08
    .byte 0x2E, 0x56, 0x05, 0x08, 0xFA, 0x55, 0x05, 0x08, 0x23, 0x2A, 0x52, 0xD8, 0x90, 0x00, 0x02, 0x49
    .byte 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00, 0x9C, 0x52, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08
    .byte 0x32, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08, 0x2C, 0x53, 0x05, 0x08
    .byte 0x2C, 0x53, 0x05, 0x08, 0x2C, 0x53, 0x05, 0x08, 0x2C, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08
    .byte 0x32, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08, 0x2C, 0x53, 0x05, 0x08
    .byte 0x2C, 0x53, 0x05, 0x08, 0x2C, 0x53, 0x05, 0x08, 0x2C, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08
    .byte 0x32, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08
    .byte 0x32, 0x53, 0x05, 0x08, 0x2C, 0x53, 0x05, 0x08, 0x2C, 0x53, 0x05, 0x08, 0x2C, 0x53, 0x05, 0x08
    .byte 0x2C, 0x53, 0x05, 0x08, 0x2C, 0x53, 0x05, 0x08, 0x2C, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08
    .byte 0x32, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08
    .byte 0x32, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08, 0x80, 0x20, 0x00, 0x02
    .byte 0x00, 0xE0, 0x00, 0x20, 0xA0, 0x60, 0x01, 0x32, 0x5A, 0x66, 0x23, 0x2A, 0x00, 0xDC, 0x76, 0xE1
    .byte 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x00, 0x20, 0x58, 0x66, 0x80, 0x20, 0x00, 0x02, 0x18, 0x63
    .byte 0x6D, 0xE1, 0x01, 0x32, 0x5A, 0x66, 0xD0, 0x03, 0xA0, 0x60, 0x3F, 0x2A, 0x00, 0xDC, 0x66, 0xE1
    .byte 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x10, 0x20, 0x58, 0x66, 0x60, 0xE1, 0x01, 0x3A, 0x5A, 0x66
    .byte 0x00, 0x2A, 0x00, 0xDD, 0x5B, 0xE1, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x30, 0x20, 0x58, 0x66
    .byte 0x55, 0xE1, 0x20, 0x68, 0xA1, 0x6A, 0x40, 0x18, 0x02, 0xE0, 0x20, 0x68, 0xA1, 0x6A, 0x40, 0x1A
    .byte 0x20, 0x60, 0x01, 0x3A, 0x5A, 0x66, 0x00, 0x2A, 0x00, 0xDD, 0x48, 0xE1, 0x18, 0x6E, 0x01, 0x30
    .byte 0x18, 0x66, 0x18, 0x20, 0x58, 0x66, 0x42, 0xE1, 0x01, 0x3A, 0x5A, 0x66, 0x00, 0x2A, 0x00, 0xDD
    .byte 0x3D, 0xE1, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x00, 0x20, 0x58, 0x66, 0x37, 0xE1, 0x23, 0x2A
    .byte 0x51, 0xD8, 0x90, 0x00, 0x01, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0xD0, 0x53, 0x05, 0x08
    .byte 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08
    .byte 0x60, 0x54, 0x05, 0x08, 0x60, 0x54, 0x05, 0x08, 0x60, 0x54, 0x05, 0x08, 0x60, 0x54, 0x05, 0x08
    .byte 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08
    .byte 0x60, 0x54, 0x05, 0x08, 0x60, 0x54, 0x05, 0x08, 0x60, 0x54, 0x05, 0x08, 0x60, 0x54, 0x05, 0x08
    .byte 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08
    .byte 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08, 0x60, 0x54, 0x05, 0x08, 0x60, 0x54, 0x05, 0x08
    .byte 0x60, 0x54, 0x05, 0x08, 0x60, 0x54, 0x05, 0x08, 0x60, 0x54, 0x05, 0x08, 0x60, 0x54, 0x05, 0x08
    .byte 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08
    .byte 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08
    .byte 0x82, 0x20, 0x80, 0x03, 0x01, 0xE0, 0x80, 0x20, 0x80, 0x03, 0xA0, 0x60, 0x01, 0x32, 0x5A, 0x66
    .byte 0x23, 0x2A, 0x00, 0xDC, 0xDB, 0xE0, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x08, 0x20, 0x58, 0x66
    .byte 0x01, 0x48, 0x18, 0x63, 0xD3, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0x01, 0x3A, 0x5A, 0x66
    .byte 0x90, 0x04, 0xA0, 0x60, 0x00, 0x2A, 0x00, 0xDD, 0xC9, 0xE0, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66
    .byte 0x00, 0x20, 0x58, 0x66, 0x18, 0x63, 0x1D, 0x4A, 0x13, 0x1C, 0x24, 0x33, 0x1C, 0x49, 0x50, 0x18
    .byte 0x00, 0x68, 0x80, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD0, 0xB7, 0xE0, 0x19, 0x49
    .byte 0x50, 0x18, 0x00, 0x78, 0x00, 0x28, 0x00, 0xD1, 0xB1, 0xE0, 0x18, 0x1C, 0x21, 0x1C, 0xF7, 0xF7
    .byte 0x2B, 0xFC, 0x00, 0x04, 0x02, 0x0C, 0x18, 0x2A, 0x00, 0xDC, 0xA8, 0xE0, 0x16, 0x1C, 0x00, 0x2E
    .byte 0x00, 0xD1, 0xA4, 0xE0, 0xC0, 0x20, 0x40, 0x00, 0x0A, 0xF0, 0x1A, 0xFD, 0x0E, 0x4D, 0x0F, 0x4C
    .byte 0xC0, 0x22, 0x12, 0x01, 0xA4, 0x18, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19
    .byte 0x00, 0x68, 0x0A, 0xF0, 0x05, 0xFE, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19
    .byte 0x00, 0x68, 0x01, 0x21, 0x32, 0x1C, 0x0B, 0xF0, 0xB3, 0xFC, 0x88, 0xE0, 0x20, 0x2E, 0x00, 0x03
    .byte 0x38, 0x08, 0x00, 0x00, 0x84, 0x0C, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08
    .byte 0x23, 0x2A, 0x52, 0xD8, 0x90, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00
    .byte 0x44, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08
    .byte 0xDA, 0x55, 0x05, 0x08, 0xD4, 0x55, 0x05, 0x08, 0xD4, 0x55, 0x05, 0x08, 0xD4, 0x55, 0x05, 0x08
    .byte 0xD4, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08
    .byte 0xDA, 0x55, 0x05, 0x08, 0xD4, 0x55, 0x05, 0x08, 0xD4, 0x55, 0x05, 0x08, 0xD4, 0x55, 0x05, 0x08
    .byte 0xD4, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08
    .byte 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08, 0xD4, 0x55, 0x05, 0x08
    .byte 0xD4, 0x55, 0x05, 0x08, 0xD4, 0x55, 0x05, 0x08, 0xD4, 0x55, 0x05, 0x08, 0xD4, 0x55, 0x05, 0x08
    .byte 0xD4, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08
    .byte 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08
    .byte 0xDA, 0x55, 0x05, 0x08, 0x80, 0x20, 0x00, 0x02, 0x00, 0xE0, 0x00, 0x20, 0xA0, 0x60, 0x01, 0x32
    .byte 0x5A, 0x66, 0x23, 0x2A, 0x23, 0xDD, 0x10, 0x20, 0x58, 0x66, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66
    .byte 0x23, 0x28, 0x1C, 0xDD, 0x00, 0x20, 0x18, 0x66, 0x19, 0xE0, 0xA0, 0x8E, 0x01, 0x21, 0x08, 0x40
    .byte 0x00, 0x28, 0x14, 0xD0, 0x20, 0x68, 0xA1, 0x6A, 0x40, 0x18, 0x20, 0x60, 0x60, 0x68, 0xE1, 0x6A
    .byte 0x40, 0x18, 0x60, 0x60, 0xA1, 0x68, 0x20, 0x6B, 0x09, 0x18, 0xA1, 0x60, 0x05, 0x4A, 0x80, 0x18
    .byte 0x20, 0x63, 0x00, 0x29, 0x03, 0xDC, 0x99, 0x8E, 0x03, 0x48, 0x08, 0x40, 0x98, 0x86
_0805562E:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0xC0, 0xFF, 0xFF, 0xFE, 0xFF, 0x00, 0x00
    thumb_func_start sub_805563C
sub_805563C:
    push {r4, r5, r6, lr}
    adds r3, r0, #0x0
    ldr r2, [r3, #0x64]
    adds r4, r3, #0x0
    ldr r0, [r3, #0x60]
    cmp r0, #0x37
    bls _0805564C
    b _08055ADA
_0805564C:
    lsls r0, r0, #0x02
    ldr r1, _08055658 @ =0x0805565C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_08055658: .4byte 0x0805565C
    .byte 0x52, 0x58, 0x05, 0x08, 0x3C, 0x57, 0x05, 0x08, 0x06, 0x58, 0x05, 0x08, 0x16, 0x58, 0x05, 0x08
    .byte 0x2C, 0x58, 0x05, 0x08, 0x52, 0x58, 0x05, 0x08, 0x68, 0x58, 0x05, 0x08, 0x38, 0x59, 0x05, 0x08
    .byte 0xDC, 0x59, 0x05, 0x08, 0x52, 0x58, 0x05, 0x08, 0x3C, 0x57, 0x05, 0x08, 0x06, 0x58, 0x05, 0x08
    .byte 0x16, 0x58, 0x05, 0x08, 0x2C, 0x58, 0x05, 0x08, 0x52, 0x58, 0x05, 0x08, 0x68, 0x58, 0x05, 0x08
    .byte 0x38, 0x59, 0x05, 0x08, 0xDC, 0x59, 0x05, 0x08, 0x52, 0x58, 0x05, 0x08, 0x3C, 0x57, 0x05, 0x08
    .byte 0x06, 0x58, 0x05, 0x08, 0x16, 0x58, 0x05, 0x08, 0x2C, 0x58, 0x05, 0x08, 0x52, 0x58, 0x05, 0x08
    .byte 0x68, 0x58, 0x05, 0x08, 0x38, 0x59, 0x05, 0x08, 0xDC, 0x59, 0x05, 0x08, 0x52, 0x58, 0x05, 0x08
    .byte 0x3C, 0x57, 0x05, 0x08, 0x06, 0x58, 0x05, 0x08, 0x16, 0x58, 0x05, 0x08, 0x34, 0x58, 0x05, 0x08
    .byte 0x52, 0x58, 0x05, 0x08, 0x68, 0x58, 0x05, 0x08, 0x38, 0x59, 0x05, 0x08, 0xDC, 0x59, 0x05, 0x08
    .byte 0x52, 0x58, 0x05, 0x08, 0x3C, 0x57, 0x05, 0x08, 0x06, 0x58, 0x05, 0x08, 0x16, 0x58, 0x05, 0x08
    .byte 0x34, 0x58, 0x05, 0x08, 0x52, 0x58, 0x05, 0x08, 0x68, 0x58, 0x05, 0x08, 0x38, 0x59, 0x05, 0x08
    .byte 0xDC, 0x59, 0x05, 0x08, 0x52, 0x58, 0x05, 0x08, 0x3C, 0x57, 0x05, 0x08, 0x06, 0x58, 0x05, 0x08
    .byte 0x16, 0x58, 0x05, 0x08, 0x34, 0x58, 0x05, 0x08, 0x52, 0x58, 0x05, 0x08, 0x68, 0x58, 0x05, 0x08
    .byte 0x38, 0x59, 0x05, 0x08, 0xDC, 0x59, 0x05, 0x08, 0xDA, 0x5A, 0x05, 0x08, 0xA6, 0x5A, 0x05, 0x08
    .byte 0x23, 0x2A, 0x52, 0xD8, 0x90, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00
    .byte 0x50, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08
    .byte 0xE6, 0x57, 0x05, 0x08, 0xE0, 0x57, 0x05, 0x08, 0xE0, 0x57, 0x05, 0x08, 0xE0, 0x57, 0x05, 0x08
    .byte 0xE0, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08
    .byte 0xE6, 0x57, 0x05, 0x08, 0xE0, 0x57, 0x05, 0x08, 0xE0, 0x57, 0x05, 0x08, 0xE0, 0x57, 0x05, 0x08
    .byte 0xE0, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08
    .byte 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08, 0xE0, 0x57, 0x05, 0x08
    .byte 0xE0, 0x57, 0x05, 0x08, 0xE0, 0x57, 0x05, 0x08, 0xE0, 0x57, 0x05, 0x08, 0xE0, 0x57, 0x05, 0x08
    .byte 0xE0, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08
    .byte 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08
    .byte 0xE6, 0x57, 0x05, 0x08, 0x80, 0x20, 0x00, 0x02, 0x00, 0xE0, 0x00, 0x20, 0xA0, 0x60, 0x01, 0x32
    .byte 0x5A, 0x66, 0x23, 0x2A, 0x00, 0xDC, 0x72, 0xE1, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x00, 0x20
    .byte 0x58, 0x66, 0x80, 0x20, 0x00, 0x02, 0x18, 0x63, 0x69, 0xE1, 0x01, 0x32, 0x5A, 0x66, 0xD0, 0x03
    .byte 0xA0, 0x60, 0x3F, 0x2A, 0x00, 0xDC, 0x62, 0xE1, 0x17, 0xE0, 0x01, 0x3A, 0x5A, 0x66, 0x00, 0x2A
    .byte 0x00, 0xDD, 0x5C, 0xE1, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x30, 0x20, 0x58, 0x66, 0x56, 0xE1
    .byte 0x20, 0x68, 0xA1, 0x6A, 0x40, 0x18, 0x02, 0xE0, 0x20, 0x68, 0xA1, 0x6A, 0x40, 0x1A, 0x20, 0x60
    .byte 0x01, 0x3A, 0x5A, 0x66, 0x00, 0x2A, 0x00, 0xDD, 0x49, 0xE1, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66
    .byte 0x10, 0x20, 0x58, 0x66, 0x43, 0xE1, 0x01, 0x3A, 0x5A, 0x66, 0x00, 0x2A, 0x00, 0xDD, 0x3E, 0xE1
    .byte 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x00, 0x20, 0x58, 0x66, 0x38, 0xE1, 0x23, 0x2A, 0x52, 0xD8
    .byte 0x90, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00, 0x7C, 0x58, 0x05, 0x08
    .byte 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08
    .byte 0x0C, 0x59, 0x05, 0x08, 0x0C, 0x59, 0x05, 0x08, 0x0C, 0x59, 0x05, 0x08, 0x0C, 0x59, 0x05, 0x08
    .byte 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08
    .byte 0x0C, 0x59, 0x05, 0x08, 0x0C, 0x59, 0x05, 0x08, 0x0C, 0x59, 0x05, 0x08, 0x0C, 0x59, 0x05, 0x08
    .byte 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08
    .byte 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08, 0x0C, 0x59, 0x05, 0x08, 0x0C, 0x59, 0x05, 0x08
    .byte 0x0C, 0x59, 0x05, 0x08, 0x0C, 0x59, 0x05, 0x08, 0x0C, 0x59, 0x05, 0x08, 0x0C, 0x59, 0x05, 0x08
    .byte 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08
    .byte 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08
    .byte 0x82, 0x20, 0x80, 0x03, 0x01, 0xE0, 0x80, 0x20, 0x80, 0x03, 0xA0, 0x60, 0x01, 0x32, 0x5A, 0x66
    .byte 0x23, 0x2A, 0x00, 0xDC, 0xDB, 0xE0, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x08, 0x20, 0x58, 0x66
    .byte 0x01, 0x48, 0x18, 0x63, 0xD3, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0x01, 0x3A, 0x5A, 0x66
    .byte 0x90, 0x04, 0xA0, 0x60, 0x00, 0x2A, 0x00, 0xDD, 0xC9, 0xE0, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66
    .byte 0x00, 0x20, 0x58, 0x66, 0x18, 0x63, 0x1D, 0x4A, 0x13, 0x1C, 0x24, 0x33, 0x1C, 0x49, 0x50, 0x18
    .byte 0x00, 0x68, 0x80, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD0, 0xB7, 0xE0, 0x19, 0x49
    .byte 0x50, 0x18, 0x00, 0x78, 0x00, 0x28, 0x00, 0xD1, 0xB1, 0xE0, 0x18, 0x1C, 0x21, 0x1C, 0xF7, 0xF7
    .byte 0xD5, 0xF9, 0x00, 0x04, 0x02, 0x0C, 0x18, 0x2A, 0x00, 0xDC, 0xA8, 0xE0, 0x16, 0x1C, 0x00, 0x2E
    .byte 0x00, 0xD1, 0xA4, 0xE0, 0xC0, 0x20, 0x40, 0x00, 0x0A, 0xF0, 0xC4, 0xFA, 0x0E, 0x4D, 0x0F, 0x4C
    .byte 0xC0, 0x22, 0x12, 0x01, 0xA4, 0x18, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19
    .byte 0x00, 0x68, 0x0A, 0xF0, 0xAF, 0xFB, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19
    .byte 0x00, 0x68, 0x01, 0x21, 0x32, 0x1C, 0x0B, 0xF0, 0x5D, 0xFA, 0x88, 0xE0, 0x20, 0x2E, 0x00, 0x03
    .byte 0x38, 0x08, 0x00, 0x00, 0x84, 0x0C, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08
    .byte 0x23, 0x2A, 0x52, 0xD8, 0x90, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00
    .byte 0xF0, 0x59, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08
    .byte 0x86, 0x5A, 0x05, 0x08, 0x80, 0x5A, 0x05, 0x08, 0x80, 0x5A, 0x05, 0x08, 0x80, 0x5A, 0x05, 0x08
    .byte 0x80, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08
    .byte 0x86, 0x5A, 0x05, 0x08, 0x80, 0x5A, 0x05, 0x08, 0x80, 0x5A, 0x05, 0x08, 0x80, 0x5A, 0x05, 0x08
    .byte 0x80, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08
    .byte 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08, 0x80, 0x5A, 0x05, 0x08
    .byte 0x80, 0x5A, 0x05, 0x08, 0x80, 0x5A, 0x05, 0x08, 0x80, 0x5A, 0x05, 0x08, 0x80, 0x5A, 0x05, 0x08
    .byte 0x80, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08
    .byte 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08
    .byte 0x86, 0x5A, 0x05, 0x08, 0x80, 0x20, 0x00, 0x02, 0x00, 0xE0, 0x00, 0x20, 0xA0, 0x60, 0x01, 0x32
    .byte 0x5A, 0x66, 0x23, 0x2A, 0x23, 0xDD, 0x10, 0x20, 0x58, 0x66, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66
    .byte 0x35, 0x28, 0x1C, 0xDD, 0x00, 0x20, 0x18, 0x66, 0x19, 0xE0, 0xA0, 0x8E, 0x01, 0x21, 0x08, 0x40
    .byte 0x00, 0x28, 0x14, 0xD0, 0x20, 0x68, 0xA1, 0x6A, 0x40, 0x18, 0x20, 0x60, 0x60, 0x68, 0xE1, 0x6A
    .byte 0x40, 0x18, 0x60, 0x60, 0xA1, 0x68, 0x20, 0x6B, 0x09, 0x18, 0xA1, 0x60, 0x05, 0x4A, 0x80, 0x18
    .byte 0x20, 0x63, 0x00, 0x29, 0x03, 0xDC, 0x99, 0x8E, 0x03, 0x48, 0x08, 0x40, 0x98, 0x86
_08055ADA:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0xC0, 0xFF, 0xFF, 0xFE, 0xFF, 0x00, 0x00
    thumb_func_start sub_8055AE8
sub_8055AE8:
    push {r4, lr}
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08055B48
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08055B48
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r4, #0x00
    ldsh r0, [r0, r4]
    cmp r0, #0x00
    beq _08055B48
    movs r0, #0x07
    str r0, [r3, #0x60]
    adds r0, r2, #0x0
    adds r0, #0x4E
    movs r4, #0x00
    ldsh r1, [r0, r4]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    str r0, [r3, #0x28]
    adds r0, r2, #0x0
    adds r0, #0x50
    movs r2, #0x00
    ldsh r1, [r0, r2]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    str r0, [r3, #0x2C]
    movs r0, #0x90
    lsls r0, r0, #0x0A
    str r0, [r3, #0x30]
    ldrh r1, [r3, #0x34]
    ldr r0, _08055B50 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
_08055B48:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08055B50: .4byte 0x0000FFFD
    thumb_func_start sub_8055B54
sub_8055B54:
    push {r4, lr}
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08055BB4
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08055BB4
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r4, #0x00
    ldsh r0, [r0, r4]
    cmp r0, #0x00
    beq _08055BB4
    movs r0, #0x21
    str r0, [r3, #0x60]
    adds r0, r2, #0x0
    adds r0, #0x4E
    movs r4, #0x00
    ldsh r1, [r0, r4]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    str r0, [r3, #0x28]
    adds r0, r2, #0x0
    adds r0, #0x50
    movs r2, #0x00
    ldsh r1, [r0, r2]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    str r0, [r3, #0x2C]
    movs r0, #0x90
    lsls r0, r0, #0x0A
    str r0, [r3, #0x30]
    ldrh r1, [r3, #0x34]
    ldr r0, _08055BBC @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
_08055BB4:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08055BBC: .4byte 0x0000FFFD
    thumb_func_start sub_8055BC0
sub_8055BC0:
    push {r4, lr}
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08055C20
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08055C20
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r4, #0x00
    ldsh r0, [r0, r4]
    cmp r0, #0x00
    beq _08055C20
    movs r0, #0x37
    str r0, [r3, #0x60]
    adds r0, r2, #0x0
    adds r0, #0x4E
    movs r4, #0x00
    ldsh r1, [r0, r4]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    str r0, [r3, #0x28]
    adds r0, r2, #0x0
    adds r0, #0x50
    movs r2, #0x00
    ldsh r1, [r0, r2]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    str r0, [r3, #0x2C]
    movs r0, #0x90
    lsls r0, r0, #0x0A
    str r0, [r3, #0x30]
    ldrh r1, [r3, #0x34]
    ldr r0, _08055C28 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
_08055C20:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08055C28: .4byte 0x0000FFFD
    thumb_func_start sub_8055C2C
sub_8055C2C:
    push {r4, lr}
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08055C8C
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08055C8C
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r4, #0x00
    ldsh r0, [r0, r4]
    cmp r0, #0x00
    beq _08055C8C
    movs r0, #0x25
    str r0, [r3, #0x60]
    adds r0, r2, #0x0
    adds r0, #0x4E
    movs r4, #0x00
    ldsh r1, [r0, r4]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    str r0, [r3, #0x28]
    adds r0, r2, #0x0
    adds r0, #0x50
    movs r2, #0x00
    ldsh r1, [r0, r2]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    str r0, [r3, #0x2C]
    movs r0, #0x90
    lsls r0, r0, #0x0A
    str r0, [r3, #0x30]
    ldrh r1, [r3, #0x34]
    ldr r0, _08055C94 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
_08055C8C:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08055C94: .4byte 0x0000FFFD
    thumb_func_start sub_8055C98
sub_8055C98:
    push {r4, lr}
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08055CF8
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08055CF8
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r4, #0x00
    ldsh r0, [r0, r4]
    cmp r0, #0x00
    beq _08055CF8
    movs r0, #0x25
    str r0, [r3, #0x60]
    adds r0, r2, #0x0
    adds r0, #0x4E
    movs r4, #0x00
    ldsh r1, [r0, r4]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    str r0, [r3, #0x28]
    adds r0, r2, #0x0
    adds r0, #0x50
    movs r2, #0x00
    ldsh r1, [r0, r2]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    str r0, [r3, #0x2C]
    movs r0, #0x90
    lsls r0, r0, #0x0A
    str r0, [r3, #0x30]
    ldrh r1, [r3, #0x34]
    ldr r0, _08055D00 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
_08055CF8:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08055D00: .4byte 0x0000FFFD
    thumb_func_start sub_8055D04
sub_8055D04:
    push {r4, lr}
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08055D64
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08055D64
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r4, #0x00
    ldsh r0, [r0, r4]
    cmp r0, #0x00
    beq _08055D64
    movs r0, #0x37
    str r0, [r3, #0x60]
    adds r0, r2, #0x0
    adds r0, #0x4E
    movs r4, #0x00
    ldsh r1, [r0, r4]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    str r0, [r3, #0x28]
    adds r0, r2, #0x0
    adds r0, #0x50
    movs r2, #0x00
    ldsh r1, [r0, r2]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    str r0, [r3, #0x2C]
    movs r0, #0x90
    lsls r0, r0, #0x0A
    str r0, [r3, #0x30]
    ldrh r1, [r3, #0x34]
    ldr r0, _08055D6C @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
_08055D64:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08055D6C: .4byte 0x0000FFFD
    thumb_func_start sub_8055D70
sub_8055D70:
    adds r3, r0, #0x0
    ldr r0, _08055DAC @ =0x00001004
    strh r0, [r3, #0x10]
    ldr r0, _08055DB0 @ =0x08055E5D
    str r0, [r3, #0x5C]
    ldr r0, _08055DB4 @ =0x08055F75
    str r0, [r3, #0x18]
    ldr r0, _08055DB8 @ =0x080EFF08
    str r0, [r3, #0x4C]
    ldrh r2, [r3, #0x34]
    ldr r0, _08055DBC @ =0x0000FFFD
    ands r0, r2
    ldr r2, _08055DC0 @ =0x0000FFFE
    ands r0, r2
    strh r0, [r3, #0x34]
    movs r0, #0x10
    strb r0, [r3, #0x0E]
    strb r0, [r3, #0x0D]
    strb r0, [r3, #0x0C]
    movs r0, #0x01
    str r0, [r3, #0x60]
    ldr r2, _08055DC4 @ =0xFF7DFFFF
    adds r0, r1, r2
    cmp r0, #0x0B
    bhi _08055E52
    lsls r0, r0, #0x02
    ldr r1, _08055DC8 @ =0x08055DCC
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08055DAC: .4byte 0x00001004
_08055DB0: .4byte sub_8055E5C
_08055DB4: .4byte sub_8055F74
_08055DB8: .4byte 0x080EFF08
_08055DBC: .4byte 0x0000FFFD
_08055DC0: .4byte 0x0000FFFE
_08055DC4: .4byte 0xFF7DFFFF
_08055DC8: .4byte 0x08055DCC
    .byte 0xFC, 0x5D, 0x05, 0x08, 0x02, 0x5E, 0x05, 0x08, 0x06, 0x5E, 0x05, 0x08, 0x0E, 0x5E, 0x05, 0x08
    .byte 0x16, 0x5E, 0x05, 0x08, 0x1E, 0x5E, 0x05, 0x08, 0x22, 0x5E, 0x05, 0x08, 0x2A, 0x5E, 0x05, 0x08
    .byte 0x32, 0x5E, 0x05, 0x08, 0x3A, 0x5E, 0x05, 0x08, 0x42, 0x5E, 0x05, 0x08, 0x4A, 0x5E, 0x05, 0x08
    .byte 0x64, 0x20, 0x58, 0x66, 0x2A, 0xE0, 0xB4, 0x20, 0x26, 0xE0, 0x8C, 0x20, 0x58, 0x66, 0x64, 0x20
    .byte 0x24, 0xE0, 0xA0, 0x20, 0x58, 0x66, 0x8C, 0x20, 0x20, 0xE0, 0xC8, 0x20, 0x58, 0x66, 0x64, 0x20
    .byte 0x1C, 0xE0, 0x78, 0x20, 0x18, 0xE0, 0x1E, 0x20, 0x58, 0x66, 0x50, 0x20, 0x16, 0xE0, 0x92, 0x20
    .byte 0x58, 0x66, 0xB4, 0x20, 0x12, 0xE0, 0x7A, 0x20, 0x58, 0x66, 0xB4, 0x20, 0x0E, 0xE0, 0x62, 0x20
    .byte 0x58, 0x66, 0xB4, 0x20, 0x0A, 0xE0, 0x4A, 0x20, 0x58, 0x66, 0xB4, 0x20, 0x06, 0xE0, 0x32, 0x20
    .byte 0x58, 0x66, 0xB4, 0x20, 0x02, 0xE0
_08055E52:
    movs r0, #0x00
    str r0, [r3, #0x64]
    movs r0, #0x5A
    str r0, [r3, #0x68]
    bx lr
    thumb_func_start sub_8055E5C
sub_8055E5C:
    push {r4, lr}
    adds r2, r0, #0x0
    adds r3, r2, #0x0
    ldr r0, [r2, #0x64]
    subs r0, #0x01
    str r0, [r2, #0x64]
    adds r4, r0, #0x0
    ldr r0, [r2, #0x60]
    cmp r0, #0x06
    bhi _08055F62
    lsls r0, r0, #0x02
    ldr r1, _08055E7C @ =0x08055E80
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_08055E7C: .4byte 0x08055E80
    .byte 0xE4, 0x5E, 0x05, 0x08, 0xF4, 0x5E, 0x05, 0x08, 0x9C, 0x5E, 0x05, 0x08, 0xB0, 0x5E, 0x05, 0x08
    .byte 0x0C, 0x5F, 0x05, 0x08, 0x18, 0x5F, 0x05, 0x08, 0x62, 0x5F, 0x05, 0x08, 0x0E, 0x48, 0xD0, 0x64
    .byte 0x91, 0x8E, 0x02, 0x20, 0x08, 0x43, 0x01, 0x21, 0x08, 0x43, 0x90, 0x86, 0x03, 0x20, 0x10, 0x66
    .byte 0x0A, 0x49, 0x60, 0x01, 0x40, 0x18, 0x01, 0x68, 0x48, 0x00, 0x40, 0x18, 0x00, 0x01, 0x98, 0x60
    .byte 0x1F, 0x2C, 0x01, 0xDC, 0x06, 0x48, 0xD0, 0x64, 0x00, 0x2C, 0x4A, 0xDC, 0x00, 0x20, 0x10, 0x66
    .byte 0x90, 0x6E, 0x50, 0x66, 0x45, 0xE0, 0x00, 0x00, 0x08, 0xFF, 0x0E, 0x08, 0x5C, 0x64, 0x0E, 0x08
    .byte 0x28, 0xFF, 0x0E, 0x08, 0x91, 0x8E, 0x07, 0x48, 0x08, 0x40, 0x07, 0x49, 0x08, 0x40, 0x90, 0x86
    .byte 0x01, 0x20, 0x10, 0x66, 0x00, 0x2C, 0x34, 0xDC, 0x02, 0x20, 0x10, 0x66, 0x40, 0x20, 0x50, 0x66
    .byte 0x2F, 0xE0, 0x00, 0x00, 0xFD, 0xFF, 0x00, 0x00, 0xFE, 0xFF, 0x00, 0x00, 0x90, 0x8E, 0x0B, 0x49
    .byte 0x01, 0x40, 0x91, 0x86, 0x05, 0x20, 0x10, 0x66, 0x18, 0x68, 0x91, 0x6A, 0x40, 0x18, 0x18, 0x60
    .byte 0x58, 0x68, 0xD1, 0x6A, 0x40, 0x18, 0x58, 0x60, 0x98, 0x68, 0x11, 0x6B, 0x40, 0x18, 0x98, 0x60
    .byte 0x10, 0x6B, 0x00, 0x28, 0x06, 0xDD, 0x02, 0x48, 0x05, 0xE0, 0x00, 0x00, 0xFD, 0xFF, 0x00, 0x00
    .byte 0x08, 0xFF, 0x0E, 0x08, 0x08, 0x48, 0xD0, 0x64, 0x10, 0x6B, 0x08, 0x49, 0x40, 0x18, 0x10, 0x63
    .byte 0x98, 0x68, 0x00, 0x28, 0x05, 0xDA, 0x06, 0x20, 0x10, 0x66, 0x91, 0x8E, 0x04, 0x48, 0x08, 0x40
    .byte 0x90, 0x86
_08055F62:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x28, 0xFF, 0x0E, 0x08, 0x00, 0xC0, 0xFF, 0xFF, 0xFE, 0xFF, 0x00, 0x00
    thumb_func_start sub_8055F74
sub_8055F74:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08055FBE
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08055FBE
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _08055FBE
    movs r0, #0x04
    str r0, [r3, #0x60]
    adds r0, r2, #0x0
    adds r0, #0x4E
    movs r1, #0x00
    ldsh r0, [r0, r1]
    str r0, [r3, #0x28]
    adds r0, r2, #0x0
    adds r0, #0x50
    movs r1, #0x00
    ldsh r0, [r0, r1]
    str r0, [r3, #0x2C]
    movs r0, #0xC0
    lsls r0, r0, #0x0A
    str r0, [r3, #0x30]
_08055FBE:
    bx lr
    thumb_func_start sub_8055FC0
sub_8055FC0:
    push {r4, r5, r6, lr}
    mov r6, r8
    push {r6}
    adds r4, r0, #0x0
    adds r5, r1, #0x0
    ldr r6, _08056090 @ =0x03002E20
    bl sub_8059E44
    ldr r0, [r4, #0x60]
    cmp r0, #0x00
    beq _08055FD8
    b _08056152
_08055FD8:
    ldr r1, [r4, #0x68]
    movs r2, #0x01
    adds r0, r1, #0x0
    ands r0, r2
    cmp r0, #0x00
    beq _080560B0
    movs r0, #0x02
    negs r0, r0
    ands r1, r0
    str r1, [r4, #0x68]
    ldr r0, _08056094 @ =0x080EFF88
    str r0, [r4, #0x4C]
    ldrh r0, [r5, #0x10]
    movs r1, #0x80
    lsls r1, r1, #0x06
    ands r0, r1
    cmp r0, #0x00
    bne _08055FFE
    b _08056152
_08055FFE:
    ldr r1, _08056098 @ =0x00000838
    adds r0, r6, r1
    ldr r0, [r0, #0x00]
    cmp r5, r0
    beq _0805600A
    b _08056152
_0805600A:
    ldr r0, [r5, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _08056016
    b _08056152
_08056016:
    adds r0, r5, #0x0
    adds r0, #0xBC
    ldr r1, [r0, #0x00]
    adds r0, r1, #0x0
    cmp r1, #0x00
    bge _08056024
    negs r0, r1
_08056024:
    lsls r0, r0, #0x06
    lsrs r0, r0, #0x16
    ldr r2, _0805609C @ =0xFFFFFE00
    adds r0, r0, r2
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    adds r0, r1, #0x0
    cmp r0, #0x00
    bge _08056038
    negs r0, r0
_08056038:
    asrs r4, r0, #0x14
    movs r0, #0x3F
    ands r4, r0
    adds r4, #0xC0
    lsls r6, r6, #0x10
    asrs r6, r6, #0x10
    ldr r0, _080560A0 @ =0x00000177
    bl m4aSongNumStart
    ldr r0, _080560A4 @ =0x08102414
    mov r8, r0
    ldr r5, _080560A8 @ =0x08102498
    ldr r1, _080560AC @ =0x00000BB8
    adds r5, r5, r1
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r4, #0x0
    bl m4aMPlayVolumeControl
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayPitchControl
    b _08056152
    .byte 0x00, 0x00
_08056090: .4byte 0x03002E20
_08056094: .4byte 0x080EFF88
_08056098: .4byte 0x00000838
_0805609C: .4byte 0xFFFFFE00
_080560A0: .4byte 0x00000177
_080560A4: .4byte 0x08102414
_080560A8: .4byte 0x08102498
_080560AC: .4byte 0x00000BB8
_080560B0:
    orrs r1, r2
    str r1, [r4, #0x68]
    ldr r0, _0805615C @ =0x080EFF68
    str r0, [r4, #0x4C]
    ldrh r0, [r5, #0x10]
    movs r1, #0x80
    lsls r1, r1, #0x06
    ands r0, r1
    cmp r0, #0x00
    beq _08056152
    ldr r2, _08056160 @ =0x00000838
    adds r0, r6, r2
    ldr r0, [r0, #0x00]
    cmp r5, r0
    bne _08056152
    ldr r0, [r5, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08056152
    adds r0, r5, #0x0
    adds r0, #0xBC
    ldr r1, [r0, #0x00]
    adds r0, r1, #0x0
    cmp r1, #0x00
    bge _080560E6
    negs r0, r1
_080560E6:
    lsls r0, r0, #0x06
    lsrs r0, r0, #0x16
    ldr r2, _08056164 @ =0xFFFFFE00
    adds r0, r0, r2
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    adds r0, r1, #0x0
    cmp r0, #0x00
    bge _080560FA
    negs r0, r0
_080560FA:
    asrs r4, r0, #0x14
    movs r0, #0x3F
    ands r4, r0
    adds r4, #0xC0
    lsls r6, r6, #0x10
    asrs r6, r6, #0x10
    movs r0, #0xBC
    lsls r0, r0, #0x01
    bl m4aSongNumStart
    ldr r0, _08056168 @ =0x08102414
    mov r8, r0
    ldr r5, _0805616C @ =0x08102498
    movs r1, #0xBC
    lsls r1, r1, #0x04
    adds r5, r5, r1
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r4, #0x0
    bl m4aMPlayVolumeControl
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayPitchControl
_08056152:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0805615C: .4byte 0x080EFF68
_08056160: .4byte 0x00000838
_08056164: .4byte 0xFFFFFE00
_08056168: .4byte 0x08102414
_0805616C: .4byte 0x08102498
    thumb_func_start sub_8056170
sub_8056170:
    push {r4, lr}
    adds r4, r0, #0x0
    bl sub_8059E80
    ldr r0, _08056190 @ =0x00001001
    movs r1, #0x00
    strh r0, [r4, #0x10]
    ldr r0, _08056194 @ =0x08055FC1
    str r0, [r4, #0x18]
    ldr r0, _08056198 @ =0x080EFF88
    str r0, [r4, #0x4C]
    str r1, [r4, #0x68]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08056190: .4byte 0x00001001
_08056194: .4byte sub_8055FC0
_08056198: .4byte 0x080EFF88
    thumb_func_start sub_805619C
sub_805619C:
    push {r4, lr}
    adds r2, r0, #0x0
    ldr r3, [r2, #0x68]
    ldrh r4, [r2, #0x34]
    movs r0, #0x02
    ands r0, r4
    cmp r0, #0x00
    bne _080561AE
    b _080562E8
_080561AE:
    cmp r3, #0x00
    blt _08056278
    cmp r3, #0x95
    ble _080561E8
    ldr r0, _080561E4 @ =0x00000153
    cmp r3, r0
    bgt _08056278
    cmp r3, #0xBE
    blt _08056278
    ldr r0, [r2, #0x00]
    ldr r1, [r2, #0x28]
    subs r0, r0, r1
    str r0, [r2, #0x00]
    ldr r0, [r2, #0x04]
    ldr r1, [r2, #0x2C]
    subs r0, r0, r1
    str r0, [r2, #0x04]
    ldr r0, [r2, #0x64]
    adds r0, #0x01
    str r0, [r2, #0x64]
    cmp r0, #0x06
    bge _080561DC
    b _080562CC
_080561DC:
    ldr r0, [r2, #0x60]
    cmp r0, #0x00
    beq _08056264
    b _08056240
_080561E4: .4byte 0x00000153
_080561E8:
    ldr r0, [r2, #0x00]
    ldr r1, [r2, #0x28]
    adds r0, r0, r1
    str r0, [r2, #0x00]
    ldr r0, [r2, #0x04]
    ldr r1, [r2, #0x2C]
    adds r0, r0, r1
    str r0, [r2, #0x04]
    ldr r0, [r2, #0x64]
    adds r0, #0x01
    str r0, [r2, #0x64]
    cmp r0, #0x06
    blt _080562CC
    ldr r0, [r2, #0x60]
    cmp r0, #0x00
    beq _0805622C
    ldr r1, [r2, #0x50]
    ldr r0, _08056214 @ =0x00807FFF
    cmp r1, r0
    bgt _0805621C
    ldr r0, _08056218 @ =0x080EFFC8
    b _0805621E
_08056214: .4byte 0x00807FFF
_08056218: .4byte 0x080EFFC8
_0805621C:
    ldr r0, _08056228 @ =0x080F0008
_0805621E:
    str r0, [r2, #0x4C]
    movs r0, #0x00
    str r0, [r2, #0x60]
    b _080562CA
    .byte 0x00, 0x00
_08056228: .4byte 0x080F0008
_0805622C:
    ldr r1, [r2, #0x50]
    ldr r0, _08056238 @ =0x00807FFF
    cmp r1, r0
    bgt _080562C0
    ldr r0, _0805623C @ =0x080EFFE8
    b _080562C2
_08056238: .4byte 0x00807FFF
_0805623C: .4byte 0x080EFFE8
_08056240:
    ldr r1, [r2, #0x50]
    ldr r0, _0805624C @ =0x00807FFF
    cmp r1, r0
    bgt _08056254
    ldr r0, _08056250 @ =0x080EFFC8
    b _08056256
_0805624C: .4byte 0x00807FFF
_08056250: .4byte 0x080EFFC8
_08056254:
    ldr r0, _08056260 @ =0x080F0008
_08056256:
    str r0, [r2, #0x4C]
    movs r0, #0x00
    str r0, [r2, #0x60]
    b _080562CA
    .byte 0x00, 0x00
_08056260: .4byte 0x080F0008
_08056264:
    ldr r1, [r2, #0x50]
    ldr r0, _08056270 @ =0x00807FFF
    cmp r1, r0
    bgt _080562C0
    ldr r0, _08056274 @ =0x080EFFE8
    b _080562C2
_08056270: .4byte 0x00807FFF
_08056274: .4byte 0x080EFFE8
_08056278:
    ldr r0, [r2, #0x64]
    adds r0, #0x01
    str r0, [r2, #0x64]
    cmp r0, #0x0A
    blt _080562CC
    ldr r0, [r2, #0x60]
    cmp r0, #0x00
    beq _080562AC
    ldr r1, [r2, #0x50]
    ldr r0, _08056294 @ =0x00807FFF
    cmp r1, r0
    bgt _0805629C
    ldr r0, _08056298 @ =0x080EFFC8
    b _0805629E
_08056294: .4byte 0x00807FFF
_08056298: .4byte 0x080EFFC8
_0805629C:
    ldr r0, _080562A8 @ =0x080F0008
_0805629E:
    str r0, [r2, #0x4C]
    movs r0, #0x00
    str r0, [r2, #0x60]
    b _080562CA
    .byte 0x00, 0x00
_080562A8: .4byte 0x080F0008
_080562AC:
    ldr r1, [r2, #0x50]
    ldr r0, _080562B8 @ =0x00807FFF
    cmp r1, r0
    bgt _080562C0
    ldr r0, _080562BC @ =0x080EFFE8
    b _080562C2
_080562B8: .4byte 0x00807FFF
_080562BC: .4byte 0x080EFFE8
_080562C0:
    ldr r0, _080562E0 @ =0x080F0028
_080562C2:
    str r0, [r2, #0x4C]
    movs r0, #0x01
    str r0, [r2, #0x60]
    movs r0, #0x00
_080562CA:
    str r0, [r2, #0x64]
_080562CC:
    ldr r0, [r2, #0x68]
    adds r0, #0x01
    str r0, [r2, #0x68]
    ldr r1, _080562E4 @ =0x0000017B
    cmp r0, r1
    ble _0805630E
    movs r0, #0x00
    str r0, [r2, #0x68]
    b _0805630E
    .byte 0x00, 0x00
_080562E0: .4byte 0x080F0028
_080562E4: .4byte 0x0000017B
_080562E8:
    movs r0, #0x01
    ands r0, r4
    cmp r0, #0x00
    beq _0805630E
    ldr r1, _08056314 @ =0x080E645C
    lsls r0, r3, #0x06
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x04
    str r0, [r2, #0x08]
    subs r0, r3, #0x1
    str r0, [r2, #0x68]
    cmp r0, #0x00
    bge _0805630E
    ldr r0, _08056318 @ =0x0000FFFE
    ands r4, r0
    strh r4, [r2, #0x34]
_0805630E:
    pop {r4}
    pop {r0}
    bx r0
_08056314: .4byte 0x080E645C
_08056318: .4byte 0x0000FFFE
    thumb_func_start sub_805631C
sub_805631C:
    push {r4, lr}
    adds r2, r0, #0x0
    adds r3, r1, #0x0
    ldr r0, _08056360 @ =0x00001003
    movs r4, #0x00
    strh r0, [r2, #0x10]
    ldr r0, _08056364 @ =0x080EFFC8
    str r0, [r2, #0x4C]
    ldr r0, _08056368 @ =0x0805619D
    str r0, [r2, #0x5C]
    ldr r0, _0805636C @ =0x08056389
    str r0, [r2, #0x18]
    ldrh r1, [r2, #0x34]
    movs r0, #0x02
    orrs r0, r1
    strh r0, [r2, #0x34]
    str r4, [r2, #0x60]
    str r4, [r2, #0x64]
    str r4, [r2, #0x68]
    ldr r0, _08056370 @ =0x00800001
    cmp r3, r0
    beq _08056358
    cmp r3, r0
    ble _08056378
    ldr r0, _08056374 @ =0x00808000
    cmp r3, r0
    beq _08056378
    adds r0, #0x01
    cmp r3, r0
    bne _08056378
_08056358:
    str r4, [r2, #0x28]
    movs r0, #0x80
    lsls r0, r0, #0x08
    b _08056380
_08056360: .4byte 0x00001003
_08056364: .4byte 0x080EFFC8
_08056368: .4byte sub_805619C
_0805636C: .4byte sub_8056388
_08056370: .4byte 0x00800001
_08056374: .4byte 0x00808000
_08056378:
    movs r0, #0x80
    lsls r0, r0, #0x08
    str r0, [r2, #0x28]
    movs r0, #0x00
_08056380:
    str r0, [r2, #0x2C]
    pop {r4}
    pop {r0}
    bx r0
    thumb_func_start sub_8056388
sub_8056388:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _080563C8
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _080563C8
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _080563C8
    movs r0, #0x20
    str r0, [r3, #0x68]
    ldrh r1, [r3, #0x34]
    ldr r0, _080563CC @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
    ldr r1, _080563D0 @ =0xFFFFFF00
    adds r0, r3, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
_080563C8:
    bx lr
    .byte 0x00, 0x00
_080563CC: .4byte 0x0000FFFD
_080563D0: .4byte 0xFFFFFF00
    thumb_func_start sub_80563D4
sub_80563D4:
    adds r2, r0, #0x0
    adds r3, r1, #0x0
    ldr r0, _08056414 @ =0x00001013
    strh r0, [r2, #0x10]
    movs r0, #0x04
    strb r0, [r2, #0x0E]
    strb r0, [r2, #0x0D]
    strb r0, [r2, #0x0C]
    ldr r0, _08056418 @ =0x08056441
    str r0, [r2, #0x5C]
    ldr r0, _0805641C @ =0x080F0048
    str r0, [r2, #0x4C]
    ldrh r1, [r2, #0x34]
    ldr r0, _08056420 @ =0x0000FFFE
    ands r0, r1
    ldr r1, _08056424 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x34]
    movs r0, #0x01
    str r0, [r2, #0x60]
    ldr r0, _08056428 @ =0x00840001
    cmp r3, r0
    beq _0805642C
    cmp r3, r0
    ble _08056438
    adds r0, #0x01
    cmp r3, r0
    beq _08056430
    adds r0, #0x01
    cmp r3, r0
    beq _08056434
    b _08056438
_08056414: .4byte 0x00001013
_08056418: .4byte sub_8056440
_0805641C: .4byte 0x080F0048
_08056420: .4byte 0x0000FFFE
_08056424: .4byte 0x0000FFFD
_08056428: .4byte 0x00840001
_0805642C:
    movs r0, #0x20
    b _0805643A
_08056430:
    movs r0, #0x40
    b _0805643A
_08056434:
    movs r0, #0x60
    b _0805643A
_08056438:
    movs r0, #0x00
_0805643A:
    str r0, [r2, #0x64]
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8056440
sub_8056440:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r6, r0, #0x0
    ldr r0, [r6, #0x64]
    subs r7, r0, #0x1
    ldr r0, [r6, #0x60]
    cmp r7, #0x00
    bge _0805645C
    adds r0, #0x01
    cmp r0, #0x05
    ble _0805645C
    movs r0, #0x00
    movs r7, #0x00
_0805645C:
    str r0, [r6, #0x60]
    str r7, [r6, #0x64]
    cmp r0, #0x05
    bls _08056466
    b _08056734
_08056466:
    lsls r0, r0, #0x02
    ldr r1, _08056470 @ =0x08056474
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08056470: .4byte 0x08056474
    .byte 0x8C, 0x64, 0x05, 0x08, 0x34, 0x67, 0x05, 0x08, 0xB4, 0x64, 0x05, 0x08, 0x68, 0x65, 0x05, 0x08
    .byte 0xCC, 0x65, 0x05, 0x08, 0x4E, 0x66, 0x05, 0x08, 0x01, 0x20, 0x30, 0x66, 0x40, 0x20, 0x70, 0x66
    .byte 0x04, 0x20, 0xB0, 0x73, 0x70, 0x73, 0x30, 0x73, 0xB1, 0x8E, 0x03, 0x48, 0x08, 0x40, 0x03, 0x49
    .byte 0x08, 0x40, 0xB0, 0x86, 0x44, 0xE1, 0x00, 0x00, 0xFE, 0xFF, 0x00, 0x00, 0xFD, 0xFF, 0x00, 0x00
    .byte 0x03, 0x20, 0x30, 0x66, 0x3C, 0x48, 0x70, 0x66, 0x3C, 0x48, 0xF0, 0x64, 0x3C, 0x48, 0xB0, 0x61
    .byte 0xA0, 0x20, 0x80, 0x03, 0xB0, 0x60, 0x00, 0x20, 0x30, 0x63, 0x80, 0x21, 0xC9, 0x00, 0x30, 0x1C
    .byte 0x56, 0x30, 0x01, 0x80, 0x02, 0x30, 0x01, 0x80, 0xB0, 0x8E, 0x01, 0x21, 0x08, 0x43, 0x02, 0x21
    .byte 0x08, 0x43, 0xB0, 0x86, 0x33, 0x48, 0x03, 0x1C, 0x24, 0x33, 0x33, 0x49, 0x40, 0x18, 0x02, 0x68
    .byte 0x24, 0x20, 0x31, 0x5E, 0x01, 0x20, 0x40, 0x42, 0x81, 0x42, 0x33, 0xD0, 0x90, 0x6C, 0x20, 0x21
    .byte 0x08, 0x40, 0x00, 0x28, 0x2E, 0xD1, 0x2D, 0x4F, 0x2D, 0x48, 0xBF, 0x21, 0x09, 0x01, 0x45, 0x18
    .byte 0xA9, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0xC0, 0x19, 0x00, 0x68, 0x80, 0x88, 0x00, 0x28
    .byte 0x20, 0xD1, 0x18, 0x1C, 0x31, 0x1C, 0xF6, 0xF7, 0xFD, 0xFB, 0x00, 0x04, 0x02, 0x0C, 0x3F, 0x2A
    .byte 0x18, 0xDD, 0x14, 0x1C, 0x00, 0x2C, 0x15, 0xD0, 0xBF, 0x20, 0x40, 0x00, 0x09, 0xF0, 0xEE, 0xFC
    .byte 0xA9, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0xC0, 0x19, 0x00, 0x68, 0x09, 0xF0, 0xDE, 0xFD
    .byte 0xA9, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0xC0, 0x19, 0x00, 0x68, 0x01, 0x21, 0x22, 0x1C
    .byte 0x0A, 0xF0, 0x8C, 0xFC, 0x33, 0x1C, 0x56, 0x33, 0x00, 0x21, 0x58, 0x5E, 0x18, 0x38, 0x00, 0x04
    .byte 0x02, 0x0C, 0x00, 0x14, 0x80, 0x21, 0x49, 0x00, 0x88, 0x42, 0x00, 0xDC, 0x0A, 0x1C, 0x10, 0x04
    .byte 0x00, 0x14, 0x18, 0x80, 0x31, 0x1C, 0x58, 0x31, 0x08, 0x80, 0x30, 0x6B, 0x0D, 0x49, 0x40, 0x18
    .byte 0x30, 0x63, 0xB1, 0x68, 0x09, 0x18, 0x00, 0x29, 0x04, 0xDC, 0x00, 0x21, 0x04, 0x20, 0x30, 0x66
    .byte 0x01, 0x20, 0x70, 0x66, 0xB1, 0x60, 0xC3, 0xE0, 0xE7, 0x03, 0x00, 0x00, 0x48, 0x00, 0x0F, 0x08
    .byte 0x45, 0x67, 0x05, 0x08, 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08
    .byte 0x98, 0x24, 0x10, 0x08, 0x00, 0xF8, 0xFF, 0xFF, 0x23, 0x48, 0xB0, 0x61, 0x05, 0x20, 0x30, 0x66
    .byte 0x1F, 0x20, 0x70, 0x66, 0x80, 0x21, 0x49, 0x00, 0x30, 0x1C, 0x56, 0x30, 0x01, 0x80, 0x02, 0x30
    .byte 0x01, 0x80, 0xB1, 0x8E, 0x1D, 0x48, 0x08, 0x40, 0xB0, 0x86, 0x1D, 0x48, 0x02, 0x1C, 0x24, 0x32
    .byte 0x1C, 0x49, 0x40, 0x18, 0x00, 0x68, 0x80, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x24, 0xD1
    .byte 0x10, 0x1C, 0x31, 0x1C, 0xF6, 0xF7, 0x8E, 0xFB, 0x00, 0x04, 0x02, 0x0C, 0x3F, 0x2A, 0x1C, 0xDD
    .byte 0x15, 0x1C, 0x00, 0x2D, 0x19, 0xD0, 0x14, 0x48, 0x09, 0xF0, 0x80, 0xFC, 0x13, 0x48, 0x80, 0x46
    .byte 0x13, 0x4C, 0x14, 0x49, 0x64, 0x18, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x44
    .byte 0x00, 0x68, 0x09, 0xF0, 0x6B, 0xFD, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x44
    .byte 0x00, 0x68, 0x01, 0x21, 0x2A, 0x1C, 0x0A, 0xF0, 0x19, 0xFC, 0x1F, 0x2F, 0x6E, 0xD8, 0xB8, 0x00
    .byte 0x09, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x49, 0x67, 0x05, 0x08, 0xFD, 0xFF, 0x00, 0x00
    .byte 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x7F, 0x01, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08
    .byte 0x98, 0x24, 0x10, 0x08, 0xF8, 0x0B, 0x00, 0x00, 0x80, 0x66, 0x05, 0x08, 0x30, 0x67, 0x05, 0x08
    .byte 0x30, 0x67, 0x05, 0x08, 0x30, 0x67, 0x05, 0x08, 0x30, 0x67, 0x05, 0x08, 0x30, 0x67, 0x05, 0x08
    .byte 0x30, 0x67, 0x05, 0x08, 0x30, 0x67, 0x05, 0x08, 0x30, 0x67, 0x05, 0x08, 0x28, 0x67, 0x05, 0x08
    .byte 0x28, 0x67, 0x05, 0x08, 0x28, 0x67, 0x05, 0x08, 0x28, 0x67, 0x05, 0x08, 0x28, 0x67, 0x05, 0x08
    .byte 0x28, 0x67, 0x05, 0x08, 0x20, 0x67, 0x05, 0x08, 0x20, 0x67, 0x05, 0x08, 0x20, 0x67, 0x05, 0x08
    .byte 0x20, 0x67, 0x05, 0x08, 0x20, 0x67, 0x05, 0x08, 0x20, 0x67, 0x05, 0x08, 0x18, 0x67, 0x05, 0x08
    .byte 0x18, 0x67, 0x05, 0x08, 0x18, 0x67, 0x05, 0x08, 0x18, 0x67, 0x05, 0x08, 0x10, 0x67, 0x05, 0x08
    .byte 0x10, 0x67, 0x05, 0x08, 0x10, 0x67, 0x05, 0x08, 0x10, 0x67, 0x05, 0x08, 0x00, 0x67, 0x05, 0x08
    .byte 0x00, 0x67, 0x05, 0x08, 0x00, 0x67, 0x05, 0x08, 0x00, 0x67, 0x05, 0x08, 0x14, 0x20, 0xB0, 0x73
    .byte 0x70, 0x73, 0x30, 0x73, 0x00, 0x48, 0x12, 0xE0, 0x68, 0x00, 0x0F, 0x08, 0x00, 0x48, 0x0E, 0xE0
    .byte 0x88, 0x00, 0x0F, 0x08, 0x00, 0x48, 0x0A, 0xE0, 0xA8, 0x00, 0x0F, 0x08, 0x00, 0x48, 0x06, 0xE0
    .byte 0xC8, 0x00, 0x0F, 0x08, 0x00, 0x48, 0x02, 0xE0, 0xE8, 0x00, 0x0F, 0x08, 0x03, 0x48, 0xF0, 0x64
_08056734:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00, 0x08, 0x01, 0x0F, 0x08
    thumb_func_start main_dummyIrqHandler6
main_dummyIrqHandler6: @ 08056744
    bx lr
    .byte 0x00, 0x00
    thumb_func_start main_dummyIrqHandler7
main_dummyIrqHandler7: @ 08056748
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_805674C
sub_805674C:
    ldr r1, _08056760 @ =0x00001001
    movs r2, #0x00
    strh r1, [r0, #0x10]
    ldr r1, _08056764 @ =0x0805676D
    str r1, [r0, #0x5C]
    ldr r1, _08056768 @ =0x080F0268
    str r1, [r0, #0x4C]
    str r2, [r0, #0x60]
    bx lr
    .byte 0x00, 0x00
_08056760: .4byte 0x00001001
_08056764: .4byte sub_805676C
_08056768: .4byte 0x080F0268
    thumb_func_start sub_805676C
sub_805676C:
    adds r1, r0, #0x0
    ldr r0, [r1, #0x60]
    adds r0, #0x01
    str r0, [r1, #0x60]
    cmp r0, #0x14
    bne _08056784
    ldr r0, _08056780 @ =0x080F0288
    str r0, [r1, #0x4C]
    b _08056790
    .byte 0x00, 0x00
_08056780: .4byte 0x080F0288
_08056784:
    cmp r0, #0x28
    bne _08056790
    ldr r0, _08056794 @ =0x080F0268
    str r0, [r1, #0x4C]
    movs r0, #0x00
    str r0, [r1, #0x60]
_08056790:
    bx lr
    .byte 0x00, 0x00
_08056794: .4byte 0x080F0268
    thumb_func_start sub_8056798
sub_8056798:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    ldr r5, [r4, #0x60]
    cmp r5, #0x3C
    bgt _080567AC
    cmp r5, #0x01
    bge _080567CA
    cmp r5, #0x00
    beq _080567B6
    b _08056836
_080567AC:
    cmp r5, #0x3D
    beq _08056804
    cmp r5, #0x8C
    bgt _08056836
    b _08056810
_080567B6:
    movs r0, #0x10
    str r0, [r4, #0x64]
    movs r0, #0x0A
    str r0, [r4, #0x68]
    ldrh r1, [r4, #0x34]
    ldr r0, _080567FC @ =0x0000FFFE
    ands r0, r1
    ldr r1, _08056800 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r4, #0x34]
_080567CA:
    cmp r5, #0x1C
    ble _080567F8
    adds r2, r5, #0x0
    subs r2, #0x1C
    lsls r1, r2, #0x03
    subs r1, r1, r2
    lsls r1, r1, #0x03
    movs r0, #0x80
    lsls r0, r0, #0x04
    adds r3, r0, #0x0
    subs r1, r3, r1
    movs r0, #0x35
    muls r0, r2
    subs r3, r3, r0
    ldrh r2, [r4, #0x34]
    movs r0, #0x01
    orrs r0, r2
    strh r0, [r4, #0x34]
    adds r0, r4, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r3, [r0, #0x00]
_080567F8:
    adds r5, #0x01
    b _08056836
_080567FC: .4byte 0x0000FFFE
_08056800: .4byte 0x0000FFFD
_08056804:
    ldrh r0, [r4, #0x34]
    movs r1, #0x01
    orrs r1, r0
    movs r0, #0x02
    orrs r1, r0
    strh r1, [r4, #0x34]
_08056810:
    adds r0, r4, #0x0
    bl sub_8056848
    ldr r0, [r4, #0x08]
    movs r1, #0x80
    lsls r1, r1, #0x08
    adds r0, r0, r1
    str r0, [r4, #0x08]
    adds r5, #0x01
    cmp r5, #0x8B
    ble _08056836
    movs r5, #0x00
    ldrh r0, [r4, #0x34]
    ldr r1, _08056840 @ =0x0000FFFE
    ands r1, r0
    ldr r0, _08056844 @ =0x0000FFFD
    ands r1, r0
    strh r1, [r4, #0x34]
    str r5, [r4, #0x08]
_08056836:
    str r5, [r4, #0x60]
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08056840: .4byte 0x0000FFFE
_08056844: .4byte 0x0000FFFD
    thumb_func_start sub_8056848
sub_8056848:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    ldr r0, [r4, #0x64]
    subs r6, r0, #0x1
    ldr r0, [r4, #0x68]
    subs r5, r0, #0x1
    cmp r6, #0x07
    ble _08056878
    ldr r1, _08056870 @ =0x080E645C
    lsls r0, r6, #0x08
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    adds r7, r1, #0x0
    cmp r0, #0x00
    bge _0805686A
    ldr r1, _08056874 @ =0x000003FF
    adds r0, r0, r1
_0805686A:
    asrs r0, r0, #0x0A
    b _0805688C
    .byte 0x00, 0x00
_08056870: .4byte 0x080E645C
_08056874: .4byte 0x000003FF
_08056878:
    ldr r1, _080568BC @ =0x080E645C
    lsls r0, r6, #0x08
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    adds r7, r1, #0x0
    cmp r0, #0x00
    bge _0805688A
    ldr r1, _080568C0 @ =0x000001FF
    adds r0, r0, r1
_0805688A:
    asrs r0, r0, #0x09
_0805688C:
    movs r1, #0x90
    lsls r1, r1, #0x01
    adds r0, r0, r1
    adds r1, r4, #0x0
    adds r1, #0x56
    strh r0, [r1, #0x00]
    cmp r6, #0x00
    bgt _0805689E
    movs r6, #0x10
_0805689E:
    cmp r5, #0x09
    ble _080568C8
    lsls r0, r5, #0x0A
    movs r1, #0x14
    bl __divsi3
    lsls r0, r0, #0x02
    adds r0, r0, r7
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bge _080568B8
    ldr r1, _080568C4 @ =0x000003FF
    adds r0, r0, r1
_080568B8:
    asrs r0, r0, #0x0A
    b _080568E0
_080568BC: .4byte 0x080E645C
_080568C0: .4byte 0x000001FF
_080568C4: .4byte 0x000003FF
_080568C8:
    lsls r0, r5, #0x0A
    movs r1, #0x14
    bl __divsi3
    lsls r0, r0, #0x02
    adds r0, r0, r7
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bge _080568DE
    ldr r1, _08056904 @ =0x000001FF
    adds r0, r0, r1
_080568DE:
    asrs r0, r0, #0x09
_080568E0:
    movs r1, #0x90
    lsls r1, r1, #0x01
    adds r0, r0, r1
    adds r1, r4, #0x0
    adds r1, #0x58
    strh r0, [r1, #0x00]
    cmp r5, #0x00
    bgt _080568F2
    movs r5, #0x14
_080568F2:
    adds r1, r4, #0x0
    adds r1, #0x5A
    movs r0, #0x00
    strh r0, [r1, #0x00]
    str r6, [r4, #0x64]
    str r5, [r4, #0x68]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08056904: .4byte 0x000001FF
    thumb_func_start sub_8056908
sub_8056908:
    ldr r1, _0805691C @ =0x0000100A
    movs r2, #0x00
    strh r1, [r0, #0x10]
    ldr r1, _08056920 @ =0x08056799
    str r1, [r0, #0x5C]
    ldr r1, _08056924 @ =0x080F02A8
    str r1, [r0, #0x4C]
    str r2, [r0, #0x08]
    str r2, [r0, #0x60]
    bx lr
_0805691C: .4byte 0x0000100A
_08056920: .4byte sub_8056798
_08056924: .4byte 0x080F02A8
    thumb_func_start sub_8056928
sub_8056928:
    push {r4, r5, r6, r7, lr}
    adds r6, r0, #0x0
    adds r7, r1, #0x0
    ldr r0, _08056984 @ =0x03002E20
    ldr r1, _08056988 @ =0x00000848
    adds r0, r0, r1
    ldr r5, _0805698C @ =0x080E645C
    movs r1, #0x14
    ldsh r2, [r0, r1]
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08056942
    adds r0, #0x3F
_08056942:
    asrs r3, r0, #0x06
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r1, _08056990 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r4, [r0, #0x00]
    adds r0, r3, #0x0
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r3, [r0, #0x00]
    adds r0, r6, #0x0
    cmp r0, #0x00
    bge _08056966
    adds r0, #0xFF
_08056966:
    asrs r0, r0, #0x08
    adds r2, r0, #0x0
    muls r2, r4
    adds r1, r7, #0x0
    cmp r1, #0x00
    bge _08056974
    adds r1, #0xFF
_08056974:
    asrs r0, r1, #0x08
    muls r0, r3
    subs r0, r2, r0
    cmp r0, #0x00
    bge _08056994
    movs r0, #0x00
    b _08056996
    .byte 0x00, 0x00
_08056984: .4byte 0x03002E20
_08056988: .4byte 0x00000848
_0805698C: .4byte 0x080E645C
_08056990: .4byte 0x000003FF
_08056994:
    movs r0, #0x01
_08056996:
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    thumb_func_start sub_805699C
sub_805699C:
    adds r3, r0, #0x0
    ldr r0, _08056A00 @ =0x00001005
    movs r2, #0x00
    movs r1, #0x00
    strh r0, [r3, #0x10]
    movs r0, #0x08
    strb r0, [r3, #0x0E]
    strb r0, [r3, #0x0D]
    strb r0, [r3, #0x0C]
    ldr r0, _08056A04 @ =0x080F0648
    str r0, [r3, #0x4C]
    adds r0, r3, #0x0
    adds r0, #0x60
    strb r2, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strb r2, [r0, #0x00]
    adds r2, r3, #0x0
    adds r2, #0x66
    movs r0, #0x80
    lsls r0, r0, #0x04
    strh r0, [r2, #0x00]
    adds r0, r3, #0x0
    adds r0, #0x68
    strh r1, [r0, #0x00]
    adds r2, #0x04
    movs r0, #0x10
    strb r0, [r2, #0x00]
    str r1, [r3, #0x28]
    str r1, [r3, #0x2C]
    str r1, [r3, #0x30]
    ldr r0, _08056A08 @ =0x08056BC9
    str r0, [r3, #0x18]
    ldr r0, _08056A0C @ =0x08056A11
    str r0, [r3, #0x5C]
    ldrh r0, [r3, #0x34]
    movs r1, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r3, #0x34]
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r3, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    bx lr
_08056A00: .4byte 0x00001005
_08056A04: .4byte 0x080F0648
_08056A08: .4byte sub_8056BC8
_08056A0C: .4byte sub_8056A10
    thumb_func_start sub_8056A10
sub_8056A10:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    adds r0, #0x60
    ldrb r0, [r0, #0x00]
    cmp r0, #0x08
    bls _08056A1E
    b _08056BBC
_08056A1E:
    lsls r0, r0, #0x02
    ldr r1, _08056A28 @ =0x08056A2C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08056A28: .4byte 0x08056A2C
    .byte 0x50, 0x6A, 0x05, 0x08, 0x72, 0x6A, 0x05, 0x08, 0x82, 0x6A, 0x05, 0x08, 0xEA, 0x6A, 0x05, 0x08
    .byte 0xFA, 0x6A, 0x05, 0x08, 0x68, 0x6B, 0x05, 0x08, 0x86, 0x6B, 0x05, 0x08, 0xA8, 0x6B, 0x05, 0x08
    .byte 0xBC, 0x6B, 0x05, 0x08, 0x22, 0x1C, 0x62, 0x32, 0x11, 0x88, 0x00, 0x23, 0xD0, 0x5E, 0x00, 0x28
    .byte 0x02, 0xDD, 0x48, 0x1E, 0x10, 0x80, 0xAB, 0xE0, 0x20, 0x1C, 0x60, 0x30, 0x02, 0x21, 0x01, 0x70
    .byte 0x40, 0x20, 0x10, 0x80, 0xA4, 0xE0, 0x20, 0x1C, 0x60, 0x30, 0x02, 0x21, 0x01, 0x70, 0x21, 0x1C
    .byte 0x62, 0x31, 0x80, 0x20, 0x08, 0x80, 0x20, 0x68, 0xA1, 0x6A, 0x40, 0x18, 0x20, 0x60, 0x60, 0x68
    .byte 0xE3, 0x6A, 0xC0, 0x18, 0x60, 0x60, 0x20, 0x1C, 0x66, 0x30, 0x00, 0x25, 0x42, 0x5F, 0x04, 0x30
    .byte 0x00, 0x78, 0x50, 0x43, 0x81, 0x42, 0x07, 0xD0, 0x88, 0x18, 0xA0, 0x62, 0x20, 0x1C, 0x68, 0x30
    .byte 0x00, 0x21, 0x40, 0x5E, 0x18, 0x18, 0xE0, 0x62, 0xA0, 0x6A, 0xE1, 0x6A, 0xFF, 0xF7, 0x36, 0xFF
    .byte 0x00, 0x28, 0x03, 0xD0, 0x00, 0x48, 0x03, 0xE0, 0x00, 0xFF, 0xFF, 0xFF, 0x80, 0x20, 0x40, 0x00
    .byte 0x21, 0x1C, 0x56, 0x31, 0x08, 0x80, 0x22, 0x1C, 0x62, 0x32, 0x10, 0x88, 0x01, 0x38, 0x10, 0x80
    .byte 0x00, 0x04, 0x00, 0x28, 0x6C, 0xDC, 0x20, 0x1C, 0x60, 0x30, 0x03, 0x21, 0x3A, 0xE0, 0x20, 0x1C
    .byte 0x60, 0x30, 0x04, 0x21, 0x01, 0x70, 0x21, 0x1C, 0x62, 0x31, 0x80, 0x20, 0x08, 0x80, 0x20, 0x68
    .byte 0xA1, 0x6A, 0x40, 0x18, 0x20, 0x60, 0x60, 0x68, 0xE3, 0x6A, 0xC0, 0x18, 0x60, 0x60, 0x20, 0x1C
    .byte 0x66, 0x30, 0x00, 0x25, 0x42, 0x5F, 0x04, 0x30, 0x00, 0x78, 0x50, 0x43, 0x81, 0x42, 0x07, 0xD0
    .byte 0x88, 0x1A, 0xA0, 0x62, 0x20, 0x1C, 0x68, 0x30, 0x00, 0x21, 0x40, 0x5E, 0x18, 0x1A, 0xE0, 0x62
    .byte 0xA0, 0x6A, 0xE1, 0x6A, 0xFF, 0xF7, 0xFA, 0xFE, 0x00, 0x28, 0x03, 0xD0, 0x00, 0x48, 0x03, 0xE0
    .byte 0x00, 0xFF, 0xFF, 0xFF, 0x80, 0x20, 0x40, 0x00, 0x21, 0x1C, 0x56, 0x31, 0x08, 0x80, 0x22, 0x1C
    .byte 0x62, 0x32, 0x10, 0x88, 0x01, 0x38, 0x10, 0x80, 0x00, 0x04, 0x00, 0x28, 0x30, 0xDC, 0x20, 0x1C
    .byte 0x60, 0x30, 0x01, 0x21, 0x01, 0x70, 0x80, 0x20, 0x10, 0x80, 0x29, 0xE0, 0x21, 0x1C, 0x60, 0x31
    .byte 0x06, 0x20, 0x08, 0x70, 0xA1, 0x8E, 0x0A, 0x48, 0x08, 0x40, 0xA0, 0x86, 0x09, 0x49, 0x20, 0x1C
    .byte 0x58, 0x30, 0x01, 0x80, 0xC0, 0x20, 0x80, 0x02, 0x20, 0x63, 0xA0, 0x68, 0x21, 0x6B, 0x40, 0x18
    .byte 0xA0, 0x60, 0x00, 0x28, 0x0A, 0xDB, 0x04, 0x4A, 0x88, 0x18, 0x20, 0x63, 0x10, 0xE0, 0x00, 0x00
    .byte 0xFD, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xC0, 0xFF, 0xFF, 0x21, 0x1C, 0x60, 0x31
    .byte 0x00, 0x22, 0x08, 0x20, 0x08, 0x70, 0xA2, 0x61, 0xA1, 0x8E, 0x03, 0x48, 0x08, 0x40, 0xA0, 0x86
_08056BBC:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00, 0xFE, 0xFF, 0x00, 0x00
    thumb_func_start sub_8056BC8
sub_8056BC8:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08056BFC
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08056BFC
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _08056BFC
    adds r1, r3, #0x0
    adds r1, #0x60
    movs r0, #0x05
    strb r0, [r1, #0x00]
_08056BFC:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8056C00
sub_8056C00:
    mov r12, r0
    ldr r0, _08056C60 @ =0x00001006
    movs r3, #0x00
    mov r1, r12
    strh r0, [r1, #0x10]
    movs r0, #0x08
    strb r0, [r1, #0x0E]
    strb r0, [r1, #0x0D]
    strb r0, [r1, #0x0C]
    ldr r0, _08056C64 @ =0x080F0628
    str r0, [r1, #0x4C]
    ldr r0, _08056C68 @ =0x08056EB1
    str r0, [r1, #0x18]
    ldr r0, _08056C6C @ =0x08056C71
    str r0, [r1, #0x5C]
    ldrh r0, [r1, #0x34]
    movs r1, #0x01
    movs r2, #0x00
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    mov r1, r12
    strh r0, [r1, #0x34]
    movs r1, #0x80
    lsls r1, r1, #0x01
    mov r0, r12
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    adds r0, #0x08
    strb r2, [r0, #0x00]
    adds r0, #0x01
    strb r2, [r0, #0x00]
    adds r0, #0x03
    movs r1, #0x80
    lsls r1, r1, #0x04
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r3, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    mov r0, r12
    str r3, [r0, #0x08]
    adds r0, #0x62
    strh r3, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
_08056C60: .4byte 0x00001006
_08056C64: .4byte 0x080F0628
_08056C68: .4byte sub_8056EB0
_08056C6C: .4byte sub_8056C70
    thumb_func_start sub_8056C70
sub_8056C70:
    push {r4, lr}
    mov r12, r0
    adds r0, #0x60
    ldrb r0, [r0, #0x00]
    cmp r0, #0x18
    bls _08056C7E
    b _08056EA6
_08056C7E:
    lsls r0, r0, #0x02
    ldr r1, _08056C88 @ =0x08056C8C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08056C88: .4byte 0x08056C8C
    .byte 0xF0, 0x6C, 0x05, 0x08, 0x06, 0x6D, 0x05, 0x08, 0x18, 0x6D, 0x05, 0x08, 0x42, 0x6D, 0x05, 0x08
    .byte 0x80, 0x6D, 0x05, 0x08, 0x06, 0x6D, 0x05, 0x08, 0x18, 0x6D, 0x05, 0x08, 0x42, 0x6D, 0x05, 0x08
    .byte 0x80, 0x6D, 0x05, 0x08, 0xCC, 0x6D, 0x05, 0x08, 0xE0, 0x6D, 0x05, 0x08, 0x06, 0x6D, 0x05, 0x08
    .byte 0x18, 0x6D, 0x05, 0x08, 0x42, 0x6D, 0x05, 0x08, 0x80, 0x6D, 0x05, 0x08, 0x06, 0x6D, 0x05, 0x08
    .byte 0x18, 0x6D, 0x05, 0x08, 0x42, 0x6D, 0x05, 0x08, 0x80, 0x6D, 0x05, 0x08, 0xCC, 0x6D, 0x05, 0x08
    .byte 0xE0, 0x6D, 0x05, 0x08, 0x3A, 0x6E, 0x05, 0x08, 0x66, 0x6E, 0x05, 0x08, 0x88, 0x6E, 0x05, 0x08
    .byte 0xA6, 0x6E, 0x05, 0x08, 0x61, 0x46, 0x61, 0x31, 0x08, 0x78, 0x00, 0x28, 0x02, 0xD0, 0x01, 0x38
    .byte 0x08, 0x70, 0xD2, 0xE0, 0x61, 0x46, 0x60, 0x31, 0x96, 0xE0, 0x60, 0x46, 0x60, 0x30, 0x01, 0x78
    .byte 0x01, 0x31, 0x01, 0x70, 0x61, 0x46, 0x61, 0x31, 0x0F, 0x20, 0x08, 0x70, 0x62, 0x46, 0x61, 0x32
    .byte 0x10, 0x78, 0x00, 0x01, 0x80, 0x23, 0x9B, 0x00, 0x19, 0x1C, 0x09, 0x1A, 0x60, 0x46, 0x58, 0x30
    .byte 0x01, 0x80, 0x10, 0x78, 0x00, 0x28, 0x02, 0xD0, 0x01, 0x38, 0x10, 0x70, 0xB5, 0xE0, 0x61, 0x46
    .byte 0x60, 0x31, 0x08, 0x78, 0x72, 0xE0, 0x61, 0x46, 0x60, 0x31, 0x08, 0x78, 0x01, 0x30, 0x00, 0x22
    .byte 0x08, 0x70, 0x60, 0x46, 0x61, 0x30, 0x02, 0x70, 0x80, 0x21, 0x49, 0x00, 0x09, 0x38, 0x01, 0x80
    .byte 0x0C, 0x30, 0x00, 0x24, 0x00, 0x5F, 0x40, 0x01, 0x61, 0x46, 0x88, 0x62, 0x60, 0x46, 0x66, 0x30
    .byte 0x00, 0x22, 0x80, 0x5E, 0x40, 0x01, 0xC8, 0x62, 0x60, 0x46, 0x68, 0x30, 0x00, 0x23, 0xC0, 0x5E
    .byte 0x40, 0x01, 0x08, 0x63, 0x64, 0x46, 0x20, 0x68, 0xA2, 0x6A, 0x80, 0x18, 0x20, 0x60, 0x60, 0x68
    .byte 0xE3, 0x6A, 0xC0, 0x18, 0x60, 0x60, 0xA0, 0x68, 0x21, 0x6B, 0x40, 0x18, 0xA0, 0x60, 0x60, 0x46
    .byte 0x64, 0x30, 0x00, 0x24, 0x00, 0x5F, 0x12, 0x1A, 0x60, 0x46, 0x82, 0x62, 0x66, 0x30, 0x00, 0x22
    .byte 0x80, 0x5E, 0x1B, 0x1A, 0x64, 0x46, 0xE3, 0x62, 0x60, 0x46, 0x68, 0x30, 0x00, 0x22, 0x80, 0x5E
    .byte 0x09, 0x1A, 0x21, 0x63, 0x00, 0x29, 0x70, 0xD1, 0x61, 0x46, 0x60, 0x31, 0x08, 0x78, 0x2D, 0xE0
    .byte 0x60, 0x46, 0x60, 0x30, 0x01, 0x78, 0x01, 0x31, 0x00, 0x22, 0x01, 0x70, 0x01, 0x30, 0x02, 0x70
    .byte 0x63, 0x46, 0x1A, 0x63, 0x64, 0x46, 0xA0, 0x68, 0x21, 0x6B, 0x40, 0x1A, 0xA0, 0x60, 0x11, 0x48
    .byte 0x81, 0x42, 0x03, 0xDC, 0x80, 0x22, 0x12, 0x01, 0x88, 0x18, 0x20, 0x63, 0x63, 0x46, 0x99, 0x68
    .byte 0x60, 0x46, 0x62, 0x30, 0x00, 0x24, 0x00, 0x5F, 0x00, 0x04, 0x81, 0x42, 0x4D, 0xDC, 0x98, 0x60
    .byte 0x60, 0x46, 0x64, 0x30, 0x01, 0x88, 0x49, 0x42, 0x01, 0x80, 0x61, 0x46, 0x66, 0x31, 0x08, 0x88
    .byte 0x40, 0x42, 0x08, 0x80, 0x06, 0x39, 0x08, 0x78, 0x0A, 0x28, 0x05, 0xD1, 0x01, 0x30, 0x08, 0x70
    .byte 0x3B, 0xE0, 0x00, 0x00, 0xFF, 0x7F, 0x00, 0x00, 0x01, 0x20, 0x08, 0x70, 0x35, 0xE0, 0x61, 0x46
    .byte 0x60, 0x31, 0x00, 0x22, 0x16, 0x20, 0x08, 0x70, 0x60, 0x46, 0x61, 0x30, 0x02, 0x70, 0x60, 0x46
    .byte 0x81, 0x8E, 0x0B, 0x48, 0x08, 0x40, 0x61, 0x46, 0x88, 0x86, 0x0A, 0x49, 0x60, 0x46, 0x58, 0x30
    .byte 0x01, 0x80, 0xC0, 0x20, 0x80, 0x02, 0x62, 0x46, 0x10, 0x63, 0x63, 0x46, 0x98, 0x68, 0x19, 0x6B
    .byte 0x40, 0x18, 0x98, 0x60, 0x00, 0x28, 0x09, 0xDB, 0x03, 0x4C, 0x08, 0x19, 0x18, 0x63, 0x14, 0xE0
    .byte 0xFD, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xC0, 0xFF, 0xFF, 0x61, 0x46, 0x60, 0x31
    .byte 0x00, 0x22, 0x18, 0x20, 0x08, 0x70, 0x60, 0x46, 0x61, 0x30, 0x02, 0x70, 0x60, 0x46, 0x82, 0x61
    .byte 0x81, 0x8E, 0x03, 0x48, 0x08, 0x40, 0x61, 0x46, 0x88, 0x86
_08056EA6:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0xFE, 0xFF, 0x00, 0x00
    thumb_func_start sub_8056EB0
sub_8056EB0:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08056EE4
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08056EE4
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _08056EE4
    adds r1, r3, #0x0
    adds r1, #0x60
    movs r0, #0x15
    strb r0, [r1, #0x00]
_08056EE4:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8056EE8
sub_8056EE8:
    adds r3, r0, #0x0
    ldr r0, _08056F28 @ =0x00001007
    movs r2, #0x00
    strh r0, [r3, #0x10]
    movs r0, #0x24
    movs r1, #0x40
    strb r0, [r3, #0x0C]
    strb r0, [r3, #0x0D]
    strb r1, [r3, #0x0E]
    ldr r0, _08056F2C @ =0x0805704D
    str r0, [r3, #0x18]
    ldr r0, _08056F30 @ =0x08056F61
    str r0, [r3, #0x5C]
    ldr r0, _08056F34 @ =0x080F07A8
    str r0, [r3, #0x4C]
    movs r0, #0x10
    str r0, [r3, #0x60]
    str r2, [r3, #0x64]
    movs r0, #0x80
    lsls r0, r0, #0x0C
    str r0, [r3, #0x68]
    ldr r1, [r3, #0x50]
    movs r0, #0x8D
    lsls r0, r0, #0x10
    cmp r1, r0
    beq _08056F3C
    adds r0, #0x01
    cmp r1, r0
    bne _08056F3C
    ldr r0, _08056F38 @ =0xFFFFC000
    b _08056F40
    .byte 0x00, 0x00
_08056F28: .4byte 0x00001007
_08056F2C: .4byte sub_805704C
_08056F30: .4byte sub_8056F60
_08056F34: .4byte 0x080F07A8
_08056F38: .4byte 0xFFFFC000
_08056F3C:
    movs r0, #0x80
    lsls r0, r0, #0x07
_08056F40:
    strh r0, [r3, #0x26]
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r3, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldrh r0, [r3, #0x34]
    movs r1, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r3, #0x34]
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8056F60
sub_8056F60:
    push {r4, r5, lr}
    adds r2, r0, #0x0
    ldr r0, [r2, #0x60]
    cmp r0, #0xF0
    beq _08056FF4
    cmp r0, #0xF0
    bgt _08056F78
    cmp r0, #0x10
    beq _08056F82
    cmp r0, #0x11
    beq _08056F86
    b _08057040
_08056F78:
    cmp r0, #0xF2
    beq _08057030
    cmp r0, #0xF2
    blt _0805700E
    b _08057040
_08056F82:
    movs r0, #0x11
    str r0, [r2, #0x60]
_08056F86:
    ldr r3, [r2, #0x64]
    ldr r1, _08056FD4 @ =0x080E645C
    lsls r0, r3, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _08056F94
    adds r0, #0x3F
_08056F94:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    ldr r1, [r2, #0x68]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    movs r1, #0x80
    lsls r1, r1, #0x03
    adds r0, r3, r1
    str r0, [r2, #0x64]
    ldr r4, _08056FD8 @ =0x080F07A8
    ldr r3, _08056FDC @ =0x080F07C8
    ldr r0, _08056FE0 @ =0x03002E20
    ldr r5, _08056FE4 @ =0x00000848
    adds r0, r0, r5
    movs r5, #0x26
    ldsh r1, [r2, r5]
    movs r5, #0x14
    ldsh r0, [r0, r5]
    subs r1, r1, r0
    ldr r0, _08056FE8 @ =0x0000FFFF
    ands r1, r0
    ldr r0, _08056FEC @ =0x00007FFF
    cmp r1, r0
    bgt _08056FF0
    str r4, [r2, #0x4C]
    b _08057040
    .byte 0x00, 0x00
_08056FD4: .4byte 0x080E645C
_08056FD8: .4byte 0x080F07A8
_08056FDC: .4byte 0x080F07C8
_08056FE0: .4byte 0x03002E20
_08056FE4: .4byte 0x00000848
_08056FE8: .4byte 0x0000FFFF
_08056FEC: .4byte 0x00007FFF
_08056FF0:
    str r3, [r2, #0x4C]
    b _08057040
_08056FF4:
    movs r0, #0xF1
    str r0, [r2, #0x60]
    ldrh r1, [r2, #0x34]
    ldr r0, _08057024 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x34]
    ldr r1, _08057028 @ =0xFFFFFF00
    adds r0, r2, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
    movs r0, #0xC0
    lsls r0, r0, #0x0A
    str r0, [r2, #0x30]
_0805700E:
    ldr r0, [r2, #0x08]
    ldr r1, [r2, #0x30]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    cmp r0, #0x00
    blt _08057030
    ldr r3, _0805702C @ =0xFFFFC000
    adds r0, r1, r3
    str r0, [r2, #0x30]
    b _08057040
    .byte 0x00, 0x00
_08057024: .4byte 0x0000FFFD
_08057028: .4byte 0xFFFFFF00
_0805702C: .4byte 0xFFFFC000
_08057030:
    movs r0, #0xF3
    str r0, [r2, #0x60]
    movs r0, #0x00
    str r0, [r2, #0x18]
    ldrh r1, [r2, #0x34]
    ldr r0, _08057048 @ =0x0000FFFE
    ands r0, r1
    strh r0, [r2, #0x34]
_08057040:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08057048: .4byte 0x0000FFFE
    thumb_func_start sub_805704C
sub_805704C:
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08057070
    movs r0, #0xCA
    lsls r0, r0, #0x01
    adds r2, r2, r0
    ldrh r1, [r2, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x08
    adds r0, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
_08057070:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8057074
sub_8057074:
    adds r3, r0, #0x0
    ldr r0, _080570A8 @ =0x00001009
    movs r2, #0x00
    strh r0, [r3, #0x10]
    movs r0, #0x08
    strb r0, [r3, #0x0E]
    strb r0, [r3, #0x0D]
    strb r0, [r3, #0x0C]
    ldr r0, _080570AC @ =0x08057229
    str r0, [r3, #0x18]
    ldr r0, _080570B0 @ =0x080570B9
    str r0, [r3, #0x5C]
    ldrh r1, [r3, #0x34]
    ldr r0, _080570B4 @ =0x0000FFFE
    ands r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r3, #0x34]
    movs r1, #0xE0
    adds r0, r3, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    str r2, [r3, #0x60]
    bx lr
_080570A8: .4byte 0x00001009
_080570AC: .4byte sub_8057228
_080570B0: .4byte sub_80570B8
_080570B4: .4byte 0x0000FFFE
    thumb_func_start sub_80570B8
sub_80570B8:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    adds r2, r4, #0x0
    ldr r0, _080570E0 @ =0x03002E20
    adds r3, r0, #0x0
    adds r3, #0x24
    ldr r0, [r4, #0x60]
    cmp r0, #0x11
    beq _08057134
    cmp r0, #0x11
    bgt _080570EA
    cmp r0, #0x01
    bne _080570D4
    b _0805721C
_080570D4:
    cmp r0, #0x01
    bgt _080570E4
    cmp r0, #0x00
    beq _08057102
    b _0805721C
    .byte 0x00, 0x00
_080570E0: .4byte 0x03002E20
_080570E4:
    cmp r0, #0x10
    beq _08057118
    b _0805721C
_080570EA:
    cmp r0, #0xF1
    bne _080570F0
    b _080571EA
_080570F0:
    cmp r0, #0xF1
    bgt _080570FA
    cmp r0, #0xF0
    beq _080571D0
    b _0805721C
_080570FA:
    cmp r0, #0xF2
    bne _08057100
    b _0805720C
_08057100:
    b _0805721C
_08057102:
    movs r0, #0x01
    str r0, [r4, #0x60]
    ldrh r1, [r4, #0x34]
    ldr r0, _08057114 @ =0x0000FFFE
    ands r0, r1
    movs r1, #0x02
    orrs r0, r1
    b _0805721A
    .byte 0x00, 0x00
_08057114: .4byte 0x0000FFFE
_08057118:
    movs r0, #0x11
    str r0, [r4, #0x60]
    movs r0, #0x04
    str r0, [r4, #0x64]
    movs r0, #0x00
    str r0, [r4, #0x68]
    ldrh r1, [r4, #0x34]
    movs r0, #0x01
    orrs r0, r1
    ldr r1, _08057140 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r4, #0x34]
    ldr r0, _08057144 @ =0x080F0588
    str r0, [r4, #0x4C]
_08057134:
    ldr r6, [r4, #0x64]
    ldr r5, [r4, #0x68]
    cmp r6, #0x00
    ble _08057148
    subs r6, #0x01
    b _080571C4
_08057140: .4byte 0x0000FFFD
_08057144: .4byte 0x080F0588
_08057148:
    adds r5, #0x01
    cmp r5, #0x02
    bne _08057170
    ldr r1, [r4, #0x6C]
    ldr r2, _0805717C @ =0x00000814
    adds r0, r3, r2
    ldr r0, [r0, #0x00]
    cmp r1, r0
    bne _0805716C
    ldr r0, [r1, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0805716C
    movs r0, #0xBD
    lsls r0, r0, #0x01
    bl m4aSongNumStart
_0805716C:
    cmp r5, #0x02
    beq _08057198
_08057170:
    cmp r5, #0x02
    bgt _08057180
    cmp r5, #0x01
    beq _0805718A
    b _080571BC
    .byte 0x00, 0x00
_0805717C: .4byte 0x00000814
_08057180:
    cmp r5, #0x03
    beq _080571A4
    cmp r5, #0x04
    beq _080571B0
    b _080571BC
_0805718A:
    movs r6, #0x03
    ldr r0, _08057194 @ =0x080F05A8
    str r0, [r4, #0x4C]
    b _080571C4
    .byte 0x00, 0x00
_08057194: .4byte 0x080F05A8
_08057198:
    movs r6, #0x06
    ldr r0, _080571A0 @ =0x080F05C8
    str r0, [r4, #0x4C]
    b _080571C4
_080571A0: .4byte 0x080F05C8
_080571A4:
    movs r6, #0x04
    ldr r0, _080571AC @ =0x080F0608
    str r0, [r4, #0x4C]
    b _080571C4
_080571AC: .4byte 0x080F0608
_080571B0:
    movs r6, #0x02
    ldr r0, _080571B8 @ =0x080F05E8
    str r0, [r4, #0x4C]
    b _080571C4
_080571B8: .4byte 0x080F05E8
_080571BC:
    ldr r0, _080571CC @ =0x080F05E8
    str r0, [r4, #0x4C]
    movs r0, #0x00
    str r0, [r4, #0x60]
_080571C4:
    str r6, [r4, #0x64]
    str r5, [r4, #0x68]
    b _0805721C
    .byte 0x00, 0x00
_080571CC: .4byte 0x080F05E8
_080571D0:
    movs r0, #0xF1
    str r0, [r4, #0x60]
    ldrh r1, [r4, #0x34]
    ldr r0, _08057200 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r4, #0x34]
    ldr r1, _08057204 @ =0xFFFFFF00
    adds r0, r4, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
    movs r0, #0xC0
    lsls r0, r0, #0x0A
    str r0, [r4, #0x30]
_080571EA:
    ldr r0, [r2, #0x08]
    ldr r1, [r4, #0x30]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    cmp r0, #0x00
    blt _0805720C
    ldr r0, [r4, #0x30]
    ldr r1, _08057208 @ =0xFFFFC000
    adds r0, r0, r1
    str r0, [r4, #0x30]
    b _0805721C
_08057200: .4byte 0x0000FFFD
_08057204: .4byte 0xFFFFFF00
_08057208: .4byte 0xFFFFC000
_0805720C:
    movs r0, #0xF3
    str r0, [r4, #0x60]
    movs r0, #0x00
    str r0, [r2, #0x18]
    ldrh r1, [r4, #0x34]
    ldr r0, _08057224 @ =0x0000FFFE
    ands r0, r1
_0805721A:
    strh r0, [r4, #0x34]
_0805721C:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08057224: .4byte 0x0000FFFE
    thumb_func_start sub_8057228
sub_8057228:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    adds r3, r1, #0x0
    ldr r2, _08057270 @ =0x03002E20
    adds r5, r2, #0x0
    adds r5, #0x24
    ldrh r0, [r3, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08057296
    adds r0, r3, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08057296
    ldr r0, _08057274 @ =0x00000C12
    adds r2, r2, r0
    ldrh r1, [r2, #0x00]
    movs r0, #0x01
    orrs r0, r1
    strh r0, [r2, #0x00]
    str r3, [r4, #0x6C]
    adds r0, r3, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _08057278
    movs r0, #0xF0
    b _0805727A
    .byte 0x00, 0x00
_08057270: .4byte 0x03002E20
_08057274: .4byte 0x00000C12
_08057278:
    movs r0, #0x10
_0805727A:
    str r0, [r4, #0x60]
    ldr r1, _0805729C @ =0x00000814
    adds r0, r5, r1
    ldr r0, [r0, #0x00]
    cmp r3, r0
    bne _08057296
    ldr r0, [r3, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08057296
    ldr r0, _080572A0 @ =0x00000175
    bl m4aSongNumStart
_08057296:
    pop {r4, r5}
    pop {r0}
    bx r0
_0805729C: .4byte 0x00000814
_080572A0: .4byte 0x00000175
    thumb_func_start sub_80572A4
sub_80572A4:
    adds r2, r0, #0x0
    ldr r0, _080572D8 @ =0x0000100B
    movs r1, #0x00
    strh r0, [r2, #0x10]
    ldr r0, _080572DC @ =0x080F06E8
    str r0, [r2, #0x4C]
    str r1, [r2, #0x60]
    str r1, [r2, #0x64]
    str r1, [r2, #0x08]
    ldr r0, _080572E0 @ =0x080572E5
    str r0, [r2, #0x5C]
    movs r0, #0xA0
    adds r1, r2, #0x0
    adds r1, #0x56
    strh r0, [r1, #0x00]
    movs r1, #0x80
    adds r0, r2, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
    ldrh r0, [r2, #0x34]
    movs r1, #0x02
    orrs r0, r1
    movs r1, #0x01
    orrs r0, r1
    strh r0, [r2, #0x34]
    bx lr
_080572D8: .4byte 0x0000100B
_080572DC: .4byte 0x080F06E8
_080572E0: .4byte sub_80572E4
    thumb_func_start sub_80572E4
sub_80572E4:
    push {r4, lr}
    adds r2, r0, #0x0
    ldr r4, [r2, #0x60]
    ldr r3, [r2, #0x64]
    adds r4, #0x01
    cmp r4, #0x05
    ble _08057354
    movs r4, #0x00
    adds r3, #0x01
    cmp r3, #0x05
    ble _080572FC
    movs r3, #0x00
_080572FC:
    cmp r3, #0x05
    bhi _08057350
    lsls r0, r3, #0x02
    ldr r1, _0805730C @ =0x08057310
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_0805730C: .4byte 0x08057310
    .byte 0x50, 0x73, 0x05, 0x08, 0x48, 0x73, 0x05, 0x08, 0x40, 0x73, 0x05, 0x08, 0x38, 0x73, 0x05, 0x08
    .byte 0x30, 0x73, 0x05, 0x08, 0x28, 0x73, 0x05, 0x08, 0x00, 0x48, 0x12, 0xE0, 0x88, 0x07, 0x0F, 0x08
    .byte 0x00, 0x48, 0x0E, 0xE0, 0x68, 0x07, 0x0F, 0x08, 0x00, 0x48, 0x0A, 0xE0, 0x48, 0x07, 0x0F, 0x08
    .byte 0x00, 0x48, 0x06, 0xE0, 0x28, 0x07, 0x0F, 0x08, 0x00, 0x48, 0x02, 0xE0, 0x08, 0x07, 0x0F, 0x08
_08057350:
    ldr r0, _08057360 @ =0x080F06E8
    str r0, [r2, #0x4C]
_08057354:
    str r4, [r2, #0x60]
    str r3, [r2, #0x64]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08057360: .4byte 0x080F06E8
    thumb_func_start sub_8057364
sub_8057364:
    adds r2, r0, #0x0
    ldr r0, _080573A8 @ =0x0000100C
    movs r1, #0x00
    strh r0, [r2, #0x10]
    movs r0, #0x08
    strb r0, [r2, #0x0E]
    strb r0, [r2, #0x0D]
    strb r0, [r2, #0x0C]
    ldr r0, _080573AC @ =0x08057555
    str r0, [r2, #0x18]
    ldr r0, _080573B0 @ =0x080573B9
    str r0, [r2, #0x5C]
    ldr r0, _080573B4 @ =0x080F0528
    str r0, [r2, #0x4C]
    str r1, [r2, #0x60]
    str r1, [r2, #0x64]
    str r1, [r2, #0x68]
    movs r0, #0x80
    lsls r0, r0, #0x07
    strh r0, [r2, #0x26]
    movs r1, #0xE0
    adds r0, r2, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldrh r0, [r2, #0x34]
    movs r1, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r2, #0x34]
    bx lr
    .byte 0x00, 0x00
_080573A8: .4byte 0x0000100C
_080573AC: .4byte sub_8057554
_080573B0: .4byte sub_80573B8
_080573B4: .4byte 0x080F0528
    thumb_func_start sub_80573B8
sub_80573B8:
    adds r2, r0, #0x0
    ldr r3, [r2, #0x60]
    cmp r3, #0x11
    beq _08057452
    cmp r3, #0x11
    bgt _080573D8
    cmp r3, #0x01
    beq _08057404
    cmp r3, #0x01
    bgt _080573D2
    cmp r3, #0x00
    beq _080573F2
    b _0805754C
_080573D2:
    cmp r3, #0x10
    beq _08057448
    b _0805754C
_080573D8:
    cmp r3, #0xF1
    bne _080573DE
    b _0805751A
_080573DE:
    cmp r3, #0xF1
    bgt _080573EA
    cmp r3, #0xF0
    bne _080573E8
    b _08057500
_080573E8:
    b _0805754C
_080573EA:
    cmp r3, #0xF2
    bne _080573F0
    b _0805753C
_080573F0:
    b _0805754C
_080573F2:
    movs r0, #0x01
    str r0, [r2, #0x60]
    ldrh r1, [r2, #0x34]
    movs r0, #0x02
    orrs r0, r1
    strh r0, [r2, #0x34]
    ldr r0, _08057424 @ =0x080F0528
    str r0, [r2, #0x4C]
    str r3, [r2, #0x08]
_08057404:
    ldr r0, _08057428 @ =0x03002E20
    ldr r1, _0805742C @ =0x00000848
    adds r0, r0, r1
    movs r3, #0x26
    ldsh r1, [r2, r3]
    movs r3, #0x14
    ldsh r0, [r0, r3]
    subs r1, r1, r0
    ldr r0, _08057430 @ =0x0000FFFF
    ands r1, r0
    ldr r0, _08057434 @ =0x00007FFF
    cmp r1, r0
    bgt _08057438
    movs r1, #0x80
    lsls r1, r1, #0x01
    b _0805743A
_08057424: .4byte 0x080F0528
_08057428: .4byte 0x03002E20
_0805742C: .4byte 0x00000848
_08057430: .4byte 0x0000FFFF
_08057434: .4byte 0x00007FFF
_08057438:
    ldr r1, _08057444 @ =0xFFFFFF00
_0805743A:
    adds r0, r2, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    b _0805754C
    .byte 0x00, 0x00
_08057444: .4byte 0xFFFFFF00
_08057448:
    movs r0, #0x11
    str r0, [r2, #0x60]
    movs r0, #0x00
    str r0, [r2, #0x64]
    str r0, [r2, #0x68]
_08057452:
    ldr r0, _08057474 @ =0x03002E20
    ldr r1, _08057478 @ =0x00000848
    adds r0, r0, r1
    movs r3, #0x26
    ldsh r1, [r2, r3]
    movs r3, #0x14
    ldsh r0, [r0, r3]
    subs r1, r1, r0
    ldr r0, _0805747C @ =0x0000FFFF
    ands r1, r0
    ldr r0, _08057480 @ =0x00007FFF
    cmp r1, r0
    bgt _08057484
    movs r0, #0x80
    lsls r0, r0, #0x01
    b _08057486
    .byte 0x00, 0x00
_08057474: .4byte 0x03002E20
_08057478: .4byte 0x00000848
_0805747C: .4byte 0x0000FFFF
_08057480: .4byte 0x00007FFF
_08057484:
    ldr r0, _08057498 @ =0xFFFFFF00
_08057486:
    adds r1, r2, #0x0
    adds r1, #0x56
    strh r0, [r1, #0x00]
    ldr r0, [r2, #0x64]
    cmp r0, #0x03
    bgt _0805749C
    adds r0, #0x01
    str r0, [r2, #0x64]
    b _080574A6
_08057498: .4byte 0xFFFFFF00
_0805749C:
    movs r0, #0x00
    str r0, [r2, #0x64]
    ldr r0, [r2, #0x68]
    adds r0, #0x01
    str r0, [r2, #0x68]
_080574A6:
    ldr r1, [r2, #0x68]
    cmp r1, #0x07
    bgt _080574D0
    cmp r1, #0x00
    blt _080574D0
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _080574C4
    ldr r0, _080574C0 @ =0x080F0568
    str r0, [r2, #0x4C]
    b _080574D4
    .byte 0x00, 0x00
_080574C0: .4byte 0x080F0568
_080574C4:
    ldr r0, _080574CC @ =0x080F0548
    str r0, [r2, #0x4C]
    b _080574D4
    .byte 0x00, 0x00
_080574CC: .4byte 0x080F0548
_080574D0:
    movs r0, #0x00
    str r0, [r2, #0x60]
_080574D4:
    lsls r0, r1, #0x02
    ldr r1, [r2, #0x64]
    adds r0, r0, r1
    ldr r1, _080574FC @ =0x080E645C
    lsls r0, r0, #0x1A
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _080574E6
    adds r0, #0x3F
_080574E6:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x02
    adds r0, r0, r1
    lsls r0, r0, #0x02
    str r0, [r2, #0x08]
    b _0805754C
    .byte 0x00, 0x00
_080574FC: .4byte 0x080E645C
_08057500:
    movs r0, #0xF1
    str r0, [r2, #0x60]
    ldrh r1, [r2, #0x34]
    ldr r0, _08057530 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x34]
    ldr r1, _08057534 @ =0xFFFFFF00
    adds r0, r2, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
    movs r0, #0xC0
    lsls r0, r0, #0x0A
    str r0, [r2, #0x30]
_0805751A:
    ldr r0, [r2, #0x08]
    ldr r1, [r2, #0x30]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    cmp r0, #0x00
    blt _0805753C
    ldr r3, _08057538 @ =0xFFFFC000
    adds r0, r1, r3
    str r0, [r2, #0x30]
    b _0805754C
    .byte 0x00, 0x00
_08057530: .4byte 0x0000FFFD
_08057534: .4byte 0xFFFFFF00
_08057538: .4byte 0xFFFFC000
_0805753C:
    movs r0, #0xF3
    str r0, [r2, #0x60]
    movs r0, #0x00
    str r0, [r2, #0x18]
    ldrh r1, [r2, #0x34]
    ldr r0, _08057550 @ =0x0000FFFE
    ands r0, r1
    strh r0, [r2, #0x34]
_0805754C:
    bx lr
    .byte 0x00, 0x00
_08057550: .4byte 0x0000FFFE
    thumb_func_start sub_8057554
sub_8057554:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08057592
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08057592
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _08057584
    movs r0, #0xF0
    b _08057590
_08057584:
    ldr r0, [r3, #0x60]
    movs r1, #0xF0
    ands r0, r1
    cmp r0, #0x00
    bne _08057592
    movs r0, #0x10
_08057590:
    str r0, [r3, #0x60]
_08057592:
    bx lr
    thumb_func_start sub_8057594
sub_8057594:
    adds r2, r0, #0x0
    ldr r0, _080575D8 @ =0x0000100D
    movs r1, #0x00
    strh r0, [r2, #0x10]
    movs r0, #0x08
    strb r0, [r2, #0x0E]
    strb r0, [r2, #0x0D]
    strb r0, [r2, #0x0C]
    ldr r0, _080575DC @ =0x080576B5
    str r0, [r2, #0x18]
    ldr r0, _080575E0 @ =0x080575E9
    str r0, [r2, #0x5C]
    ldr r0, _080575E4 @ =0x080F0848
    str r0, [r2, #0x4C]
    str r1, [r2, #0x60]
    str r1, [r2, #0x64]
    str r1, [r2, #0x68]
    movs r0, #0x80
    lsls r0, r0, #0x07
    strh r0, [r2, #0x26]
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r2, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldrh r0, [r2, #0x34]
    movs r1, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r2, #0x34]
    bx lr
_080575D8: .4byte 0x0000100D
_080575DC: .4byte sub_80576B4
_080575E0: .4byte sub_80575E8
_080575E4: .4byte 0x080F0848
    thumb_func_start sub_80575E8
sub_80575E8:
    adds r2, r0, #0x0
    ldr r3, [r2, #0x60]
    cmp r3, #0xF0
    beq _08057660
    cmp r3, #0xF0
    bgt _080575FE
    cmp r3, #0x00
    beq _08057608
    cmp r3, #0x01
    beq _0805761A
    b _080576AC
_080575FE:
    cmp r3, #0xF2
    beq _0805769C
    cmp r3, #0xF2
    blt _0805767A
    b _080576AC
_08057608:
    movs r0, #0x01
    str r0, [r2, #0x60]
    ldrh r1, [r2, #0x34]
    movs r0, #0x02
    orrs r0, r1
    strh r0, [r2, #0x34]
    ldr r0, _0805763C @ =0x080F0848
    str r0, [r2, #0x4C]
    str r3, [r2, #0x08]
_0805761A:
    ldr r0, _08057640 @ =0x03002E20
    ldr r1, _08057644 @ =0x00000848
    adds r0, r0, r1
    movs r3, #0x26
    ldsh r1, [r2, r3]
    movs r3, #0x14
    ldsh r0, [r0, r3]
    subs r1, r1, r0
    ldr r0, _08057648 @ =0x0000FFFF
    ands r1, r0
    ldr r0, _0805764C @ =0x00007FFF
    cmp r1, r0
    bgt _08057650
    movs r1, #0x80
    lsls r1, r1, #0x01
    b _08057652
    .byte 0x00, 0x00
_0805763C: .4byte 0x080F0848
_08057640: .4byte 0x03002E20
_08057644: .4byte 0x00000848
_08057648: .4byte 0x0000FFFF
_0805764C: .4byte 0x00007FFF
_08057650:
    ldr r1, _0805765C @ =0xFFFFFF00
_08057652:
    adds r0, r2, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    b _080576AC
    .byte 0x00, 0x00
_0805765C: .4byte 0xFFFFFF00
_08057660:
    movs r0, #0xF1
    str r0, [r2, #0x60]
    ldrh r1, [r2, #0x34]
    ldr r0, _08057690 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x34]
    ldr r1, _08057694 @ =0xFFFFFF00
    adds r0, r2, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
    movs r0, #0xC0
    lsls r0, r0, #0x0A
    str r0, [r2, #0x30]
_0805767A:
    ldr r0, [r2, #0x08]
    ldr r1, [r2, #0x30]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    cmp r0, #0x00
    blt _0805769C
    ldr r3, _08057698 @ =0xFFFFC000
    adds r0, r1, r3
    str r0, [r2, #0x30]
    b _080576AC
    .byte 0x00, 0x00
_08057690: .4byte 0x0000FFFD
_08057694: .4byte 0xFFFFFF00
_08057698: .4byte 0xFFFFC000
_0805769C:
    movs r0, #0xF3
    str r0, [r2, #0x60]
    movs r0, #0x00
    str r0, [r2, #0x18]
    ldrh r1, [r2, #0x34]
    ldr r0, _080576B0 @ =0x0000FFFE
    ands r0, r1
    strh r0, [r2, #0x34]
_080576AC:
    bx lr
    .byte 0x00, 0x00
_080576B0: .4byte 0x0000FFFE
    thumb_func_start sub_80576B4
sub_80576B4:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _080576E4
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _080576E4
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _080576E4
    movs r0, #0xF0
    str r0, [r3, #0x60]
_080576E4:
    bx lr
    .byte 0x00, 0x00, 0x02, 0x1C, 0x0D, 0x48, 0x10, 0x82, 0x08, 0x20, 0x90, 0x73, 0x50, 0x73, 0x10, 0x73
    .byte 0x0B, 0x48, 0x90, 0x61, 0x0B, 0x48, 0xD0, 0x65, 0x0B, 0x48, 0xD0, 0x64, 0x80, 0x20, 0xC0, 0x01
    .byte 0xD0, 0x84, 0x80, 0x21, 0x49, 0x00, 0x10, 0x1C, 0x56, 0x30, 0x01, 0x80, 0x02, 0x30, 0x01, 0x80
    .byte 0x91, 0x8E, 0x01, 0x20, 0x08, 0x43, 0x90, 0x86, 0x70, 0x47, 0x0E, 0x10, 0x00, 0x00, 0x31, 0x77
    .byte 0x05, 0x08, 0x35, 0x77, 0x05, 0x08, 0xA8, 0x08, 0x0F, 0x08, 0x70, 0x47, 0x00, 0x00
    thumb_func_start sub_8057734
sub_8057734:
    adds r2, r0, #0x0
    ldr r0, _08057758 @ =0x03002E20
    ldr r1, _0805775C @ =0x00000848
    adds r0, r0, r1
    movs r3, #0x26
    ldsh r1, [r2, r3]
    movs r3, #0x14
    ldsh r0, [r0, r3]
    subs r1, r1, r0
    ldr r0, _08057760 @ =0x0000FFFF
    ands r1, r0
    ldr r0, _08057764 @ =0x00007FFF
    cmp r1, r0
    bgt _08057768
    movs r1, #0x80
    lsls r1, r1, #0x01
    b _0805776A
    .byte 0x00, 0x00
_08057758: .4byte 0x03002E20
_0805775C: .4byte 0x00000848
_08057760: .4byte 0x0000FFFF
_08057764: .4byte 0x00007FFF
_08057768:
    ldr r1, _08057774 @ =0xFFFFFF00
_0805776A:
    adds r0, r2, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
_08057774: .4byte 0xFFFFFF00
    .byte 0x02, 0x1C, 0x0D, 0x48, 0x10, 0x82, 0x08, 0x20, 0x90, 0x73, 0x50, 0x73, 0x10, 0x73, 0x0B, 0x48
    .byte 0x90, 0x61, 0x0B, 0x48, 0xD0, 0x65, 0x0B, 0x48, 0xD0, 0x64, 0x80, 0x20, 0xC0, 0x01, 0xD0, 0x84
    .byte 0x80, 0x21, 0x49, 0x00, 0x10, 0x1C, 0x56, 0x30, 0x01, 0x80, 0x02, 0x30, 0x01, 0x80, 0x91, 0x8E
    .byte 0x01, 0x20, 0x08, 0x43, 0x90, 0x86, 0x70, 0x47, 0x0F, 0x10, 0x00, 0x00, 0xC1, 0x77, 0x05, 0x08
    .byte 0xC5, 0x77, 0x05, 0x08, 0xC8, 0x08, 0x0F, 0x08, 0x70, 0x47, 0x00, 0x00
    thumb_func_start sub_80577C4
sub_80577C4:
    adds r2, r0, #0x0
    ldr r0, _080577E8 @ =0x03002E20
    ldr r1, _080577EC @ =0x00000848
    adds r0, r0, r1
    movs r3, #0x26
    ldsh r1, [r2, r3]
    movs r3, #0x14
    ldsh r0, [r0, r3]
    subs r1, r1, r0
    ldr r0, _080577F0 @ =0x0000FFFF
    ands r1, r0
    ldr r0, _080577F4 @ =0x00007FFF
    cmp r1, r0
    bgt _080577F8
    movs r1, #0x80
    lsls r1, r1, #0x01
    b _080577FA
    .byte 0x00, 0x00
_080577E8: .4byte 0x03002E20
_080577EC: .4byte 0x00000848
_080577F0: .4byte 0x0000FFFF
_080577F4: .4byte 0x00007FFF
_080577F8:
    ldr r1, _08057804 @ =0xFFFFFF00
_080577FA:
    adds r0, r2, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
_08057804: .4byte 0xFFFFFF00
    thumb_func_start sub_8057808
sub_8057808:
    adds r2, r0, #0x0
    ldr r0, _08057868 @ =0x00001010
    strh r0, [r2, #0x10]
    movs r0, #0x20
    strb r0, [r2, #0x0E]
    strb r0, [r2, #0x0D]
    strb r0, [r2, #0x0C]
    ldr r0, _0805786C @ =0x0805787D
    str r0, [r2, #0x5C]
    ldr r1, [r2, #0x50]
    movs r0, #0x8F
    lsls r0, r0, #0x10
    cmp r1, r0
    blt _08057836
    adds r0, #0x01
    cmp r1, r0
    bgt _08057836
    ldr r0, _08057870 @ =0x080F08E8
    str r0, [r2, #0x4C]
    movs r0, #0x01
    str r0, [r2, #0x60]
    movs r0, #0x00
    str r0, [r2, #0x64]
_08057836:
    ldr r0, _08057874 @ =0x080F0968
    str r0, [r2, #0x4C]
    movs r0, #0x01
    str r0, [r2, #0x60]
    movs r0, #0x20
    str r0, [r2, #0x64]
    movs r0, #0x00
    str r0, [r2, #0x68]
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r2, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldrh r1, [r2, #0x34]
    movs r0, #0x01
    orrs r0, r1
    ldr r1, _08057878 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x34]
    movs r0, #0x80
    lsls r0, r0, #0x0B
    str r0, [r2, #0x08]
    bx lr
_08057868: .4byte 0x00001010
_0805786C: .4byte sub_805787C
_08057870: .4byte 0x080F08E8
_08057874: .4byte 0x080F0968
_08057878: .4byte 0x0000FFFD
    thumb_func_start sub_805787C
sub_805787C:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    ldr r0, [r4, #0x60]
    cmp r0, #0x01
    bne _08057888
    b _080579F8
_08057888:
    cmp r0, #0x01
    bgt _08057896
    cmp r0, #0x00
    bne _08057892
    b _080579D4
_08057892:
    ldr r5, [r4, #0x50]
    b _08057A08
_08057896:
    cmp r0, #0x10
    beq _080578A2
    cmp r0, #0x11
    beq _080578AA
    ldr r5, [r4, #0x50]
    b _08057A08
_080578A2:
    movs r0, #0x11
    str r0, [r4, #0x60]
    movs r0, #0x00
    str r0, [r4, #0x64]
_080578AA:
    ldr r3, [r4, #0x64]
    cmp r3, #0xAA
    beq _08057954
    cmp r3, #0xAA
    bgt _080578F0
    cmp r3, #0x5E
    beq _08057970
    cmp r3, #0x5E
    bgt _080578D4
    cmp r3, #0x3C
    beq _08057970
    cmp r3, #0x3C
    bgt _080578CC
    cmp r3, #0x00
    beq _08057994
    ldr r5, [r4, #0x50]
    b _080579C0
_080578CC:
    cmp r3, #0x40
    beq _0805799C
    ldr r5, [r4, #0x50]
    b _080579C0
_080578D4:
    cmp r3, #0x9E
    beq _08057970
    cmp r3, #0x9E
    bgt _080578E4
    cmp r3, #0x62
    beq _0805799C
    ldr r5, [r4, #0x50]
    b _080579C0
_080578E4:
    cmp r3, #0xA2
    beq _0805799C
    cmp r3, #0xA6
    beq _08057970
    ldr r5, [r4, #0x50]
    b _080579C0
_080578F0:
    ldr r5, [r4, #0x50]
    cmp r3, #0xD2
    beq _080579C0
    cmp r3, #0xD2
    ble _080579C0
    cmp r3, #0xDE
    beq _080579C0
    cmp r3, #0xDE
    ble _080579C0
    cmp r3, #0xE2
    beq _0805790C
    cmp r3, #0xEA
    beq _0805792C
    b _080579C0
_0805790C:
    movs r0, #0x02
    negs r0, r0
    ands r0, r5
    movs r1, #0x8F
    lsls r1, r1, #0x10
    cmp r0, r1
    bne _08057924
    ldr r0, _08057920 @ =0x080F0928
    b _080579BE
    .byte 0x00, 0x00
_08057920: .4byte 0x080F0928
_08057924:
    ldr r0, _08057928 @ =0x080F09A8
    b _080579BE
_08057928: .4byte 0x080F09A8
_0805792C:
    ldrh r1, [r4, #0x34]
    movs r0, #0x02
    orrs r0, r1
    strh r0, [r4, #0x34]
    movs r0, #0x02
    negs r0, r0
    ands r0, r5
    movs r1, #0x8F
    lsls r1, r1, #0x10
    cmp r0, r1
    bne _0805794C
    ldr r0, _08057948 @ =0x080F0948
    b _080579BE
    .byte 0x00, 0x00
_08057948: .4byte 0x080F0948
_0805794C:
    ldr r0, _08057950 @ =0x080F09C8
    b _080579BE
_08057950: .4byte 0x080F09C8
_08057954:
    ldr r0, [r4, #0x50]
    movs r1, #0x02
    negs r1, r1
    ands r1, r0
    movs r2, #0x8F
    lsls r2, r2, #0x10
    adds r5, r0, #0x0
    cmp r1, r2
    bne _080579BC
    ldr r0, _0805796C @ =0x080F08E8
    b _080579BE
    .byte 0x00, 0x00
_0805796C: .4byte 0x080F08E8
_08057970:
    ldr r0, [r4, #0x50]
    movs r1, #0x02
    negs r1, r1
    ands r1, r0
    movs r2, #0x8F
    lsls r2, r2, #0x10
    adds r5, r0, #0x0
    cmp r1, r2
    bne _0805798C
    ldr r0, _08057988 @ =0x080F0908
    b _080579BE
    .byte 0x00, 0x00
_08057988: .4byte 0x080F0908
_0805798C:
    ldr r0, _08057990 @ =0x080F0988
    b _080579BE
_08057990: .4byte 0x080F0988
_08057994:
    ldrh r1, [r4, #0x34]
    ldr r0, _080579B4 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r4, #0x34]
_0805799C:
    ldr r0, [r4, #0x50]
    movs r1, #0x02
    negs r1, r1
    ands r1, r0
    movs r2, #0x8F
    lsls r2, r2, #0x10
    adds r5, r0, #0x0
    cmp r1, r2
    bne _080579BC
    ldr r0, _080579B8 @ =0x080F08E8
    b _080579BE
    .byte 0x00, 0x00
_080579B4: .4byte 0x0000FFFD
_080579B8: .4byte 0x080F08E8
_080579BC:
    ldr r0, _080579D0 @ =0x080F0968
_080579BE:
    str r0, [r4, #0x4C]
_080579C0:
    adds r0, r3, #0x1
    str r0, [r4, #0x64]
    cmp r0, #0xF1
    ble _08057A08
    movs r0, #0x00
    str r0, [r4, #0x64]
    b _08057A08
    .byte 0x00, 0x00
_080579D0: .4byte 0x080F0968
_080579D4:
    movs r0, #0x01
    str r0, [r4, #0x60]
    ldr r0, [r4, #0x50]
    movs r1, #0x02
    negs r1, r1
    ands r0, r1
    movs r1, #0x8F
    lsls r1, r1, #0x10
    cmp r0, r1
    bne _080579F0
    ldr r0, _080579EC @ =0x080F08E8
    b _080579F2
_080579EC: .4byte 0x080F08E8
_080579F0:
    ldr r0, _08057A38 @ =0x080F0968
_080579F2:
    str r0, [r4, #0x4C]
    movs r0, #0x20
    str r0, [r4, #0x64]
_080579F8:
    ldr r0, [r4, #0x64]
    subs r0, #0x01
    str r0, [r4, #0x64]
    ldr r5, [r4, #0x50]
    cmp r0, #0x00
    bge _08057A08
    movs r0, #0x10
    str r0, [r4, #0x60]
_08057A08:
    movs r0, #0x01
    ands r0, r5
    cmp r0, #0x00
    beq _08057A12
    b _08057AF8
_08057A12:
    ldr r0, [r4, #0x60]
    movs r1, #0xF0
    ands r0, r1
    cmp r0, #0x10
    bne _08057AF8
    movs r0, #0x02
    negs r0, r0
    ands r0, r5
    movs r1, #0x8F
    lsls r1, r1, #0x10
    cmp r0, r1
    bne _08057A3C
    movs r0, #0x01
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r1, #0x22
    b _08057A46
    .byte 0x00, 0x00
_08057A38: .4byte 0x080F0968
_08057A3C:
    movs r0, #0x01
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r1, #0x42
_08057A46:
    ldr r0, [r4, #0x68]
    cmp r0, #0xAA
    beq _08057A94
    cmp r0, #0xAA
    bgt _08057A66
    cmp r0, #0x5E
    beq _08057AE4
    cmp r0, #0x5E
    bgt _08057AE4
    cmp r0, #0x3C
    beq _08057AE4
    cmp r0, #0x3C
    bgt _08057AE4
    cmp r0, #0x00
    beq _08057ADC
    b _08057AE4
_08057A66:
    cmp r0, #0xD2
    beq _08057ABC
    cmp r0, #0xD2
    bgt _08057A86
    cmp r0, #0xBA
    beq _08057AA4
    cmp r0, #0xBA
    bgt _08057A7C
    cmp r0, #0xB2
    beq _08057A9C
    b _08057AE4
_08057A7C:
    cmp r0, #0xC2
    beq _08057AAC
    cmp r0, #0xCA
    beq _08057AB4
    b _08057AE4
_08057A86:
    cmp r0, #0xDE
    beq _08057ACC
    cmp r0, #0xDE
    bgt _08057AE4
    cmp r0, #0xDA
    beq _08057AC4
    b _08057AE4
_08057A94:
    ldr r0, _08057A98 @ =0x08076BCA
    b _08057ACE
_08057A98: .4byte 0x08076BCA
_08057A9C:
    ldr r0, _08057AA0 @ =0x08076BD4
    b _08057ACE
_08057AA0: .4byte 0x08076BD4
_08057AA4:
    ldr r0, _08057AA8 @ =0x08076BDE
    b _08057ACE
_08057AA8: .4byte 0x08076BDE
_08057AAC:
    ldr r0, _08057AB0 @ =0x08076BE8
    b _08057ACE
_08057AB0: .4byte 0x08076BE8
_08057AB4:
    ldr r0, _08057AB8 @ =0x08076BF2
    b _08057ACE
_08057AB8: .4byte 0x08076BF2
_08057ABC:
    ldr r0, _08057AC0 @ =0x08076BFC
    b _08057ACE
_08057AC0: .4byte 0x08076BFC
_08057AC4:
    ldr r0, _08057AC8 @ =0x08076C06
    b _08057ACE
_08057AC8: .4byte 0x08076C06
_08057ACC:
    ldr r0, _08057AD8 @ =0x08076C10
_08057ACE:
    movs r2, #0x05
    bl CpuSet
    b _08057AE4
    .byte 0x00, 0x00
_08057AD8: .4byte 0x08076C10
_08057ADC:
    ldr r0, _08057B00 @ =0x08076BCA
    movs r2, #0x05
    bl CpuSet
_08057AE4:
    movs r0, #0x01
    bl pltt_setDirtyFlag
    ldr r0, [r4, #0x68]
    adds r0, #0x01
    str r0, [r4, #0x68]
    cmp r0, #0xF1
    ble _08057AF8
    movs r0, #0x00
    str r0, [r4, #0x68]
_08057AF8:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08057B00: .4byte 0x08076BCA
    thumb_func_start sub_8057B04
sub_8057B04:
    adds r3, r0, #0x0
    ldr r0, _08057B5C @ =0x00001011
    movs r2, #0x00
    strh r0, [r3, #0x10]
    movs r0, #0x08
    strb r0, [r3, #0x0E]
    strb r0, [r3, #0x0D]
    strb r0, [r3, #0x0C]
    ldr r0, _08057B60 @ =0x080F0A08
    str r0, [r3, #0x4C]
    ldrh r1, [r3, #0x34]
    ldr r0, _08057B64 @ =0x0000FFFE
    ands r0, r1
    ldr r1, _08057B68 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
    movs r1, #0xE0
    adds r0, r3, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    adds r1, r3, #0x0
    adds r1, #0x60
    movs r0, #0x01
    strb r0, [r1, #0x00]
    ldr r0, [r3, #0x00]
    str r0, [r3, #0x68]
    ldr r0, _08057B6C @ =0x08057BE1
    str r0, [r3, #0x5C]
    adds r0, r3, #0x0
    adds r0, #0x62
    strh r2, [r0, #0x00]
    ldr r0, [r3, #0x50]
    ldr r1, _08057B70 @ =0xFF690000
    adds r0, r0, r1
    cmp r0, #0x05
    bhi _08057BD0
    lsls r0, r0, #0x02
    ldr r1, _08057B74 @ =0x08057B78
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_08057B5C: .4byte 0x00001011
_08057B60: .4byte 0x080F0A08
_08057B64: .4byte 0x0000FFFE
_08057B68: .4byte 0x0000FFFD
_08057B6C: .4byte sub_8057BE0
_08057B70: .4byte 0xFF690000
_08057B74: .4byte 0x08057B78
    .byte 0xD0, 0x7B, 0x05, 0x08, 0xC0, 0x7B, 0x05, 0x08, 0xB8, 0x7B, 0x05, 0x08, 0xA8, 0x7B, 0x05, 0x08
    .byte 0xA0, 0x7B, 0x05, 0x08, 0x90, 0x7B, 0x05, 0x08, 0x18, 0x1C, 0x64, 0x30, 0x40, 0x21, 0x01, 0x80
    .byte 0x00, 0x48, 0x1F, 0xE0, 0x00, 0x00, 0xD8, 0xFF, 0x18, 0x1C, 0x64, 0x30, 0x40, 0x21, 0x16, 0xE0
    .byte 0x18, 0x1C, 0x64, 0x30, 0x30, 0x21, 0x01, 0x80, 0x00, 0x48, 0x13, 0xE0, 0x00, 0x00, 0xD8, 0xFF
    .byte 0x18, 0x1C, 0x64, 0x30, 0x30, 0x21, 0x0A, 0xE0, 0x18, 0x1C, 0x64, 0x30, 0x20, 0x21, 0x01, 0x80
    .byte 0x00, 0x48, 0x07, 0xE0, 0x00, 0x00, 0xD8, 0xFF
_08057BD0:
    adds r0, r3, #0x0
    adds r0, #0x64
    movs r1, #0x20
    strh r1, [r0, #0x00]
    movs r0, #0xA0
    lsls r0, r0, #0x0E
    str r0, [r3, #0x6C]
    bx lr
    thumb_func_start sub_8057BE0
sub_8057BE0:
    push {r4, r5, lr}
    adds r3, r0, #0x0
    adds r0, #0x60
    ldrb r2, [r0, #0x00]
    adds r0, #0x02
    movs r1, #0x00
    ldsh r0, [r0, r1]
    subs r4, r0, #0x1
    cmp r4, #0x00
    bge _08057BFE
    adds r2, #0x01
    cmp r2, #0x05
    ble _08057BFE
    movs r2, #0x00
    movs r4, #0x00
_08057BFE:
    adds r1, r3, #0x0
    adds r1, #0x60
    strb r2, [r1, #0x00]
    adds r0, r3, #0x0
    adds r0, #0x62
    strh r4, [r0, #0x00]
    adds r4, r1, #0x0
    adds r5, r0, #0x0
    cmp r2, #0x05
    bls _08057C14
    b _08057E14
_08057C14:
    lsls r0, r2, #0x02
    ldr r1, _08057C20 @ =0x08057C24
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_08057C20: .4byte 0x08057C24
    .byte 0x3C, 0x7C, 0x05, 0x08, 0x14, 0x7E, 0x05, 0x08, 0x68, 0x7C, 0x05, 0x08, 0x98, 0x7C, 0x05, 0x08
    .byte 0x10, 0x7D, 0x05, 0x08, 0x44, 0x7D, 0x05, 0x08, 0x01, 0x20, 0x20, 0x70, 0x18, 0x1C, 0x64, 0x30
    .byte 0x00, 0x88, 0x28, 0x80, 0x08, 0x20, 0x98, 0x73, 0x58, 0x73, 0x18, 0x73, 0x99, 0x8E, 0x03, 0x48
    .byte 0x08, 0x40, 0x03, 0x49, 0x08, 0x40, 0x98, 0x86, 0xDA, 0xE0, 0x00, 0x00, 0xFE, 0xFF, 0x00, 0x00
    .byte 0xFD, 0xFF, 0x00, 0x00, 0x03, 0x20, 0x20, 0x70, 0x40, 0x20, 0x28, 0x80, 0x23, 0x48, 0xD8, 0x64
    .byte 0x23, 0x48, 0x98, 0x61, 0xA0, 0x20, 0x80, 0x03, 0x98, 0x60, 0x80, 0x21, 0xC9, 0x00, 0x18, 0x1C
    .byte 0x56, 0x30, 0x01, 0x80, 0x02, 0x30, 0x01, 0x80, 0x98, 0x8E, 0x01, 0x21, 0x08, 0x43, 0x02, 0x21
    .byte 0x08, 0x43, 0x98, 0x86, 0x1A, 0x1C, 0x56, 0x32, 0x00, 0x24, 0x10, 0x5F, 0x40, 0x38, 0x00, 0x04
    .byte 0x01, 0x0C, 0x00, 0x14, 0xFF, 0x28, 0x01, 0xDC, 0x80, 0x21, 0x49, 0x00, 0x08, 0x04, 0x00, 0x14
    .byte 0x10, 0x80, 0x19, 0x1C, 0x58, 0x31, 0x08, 0x80, 0x12, 0x4A, 0xD8, 0x6E, 0x00, 0x28, 0x00, 0xDA
    .byte 0x52, 0x42, 0x19, 0x1C, 0x5A, 0x31, 0x08, 0x88, 0x80, 0x18, 0x08, 0x80, 0x00, 0x20, 0x29, 0x5E
    .byte 0x40, 0x20, 0x40, 0x1A, 0x02, 0x1C, 0x42, 0x43, 0x99, 0x6E, 0xD8, 0x6E, 0x09, 0x18, 0x00, 0x28
    .byte 0x01, 0xDA, 0x09, 0x4C, 0x00, 0x19, 0x00, 0x13, 0x50, 0x43, 0x08, 0x1A, 0x18, 0x60, 0x91, 0x02
    .byte 0x80, 0x20, 0xC0, 0x03, 0x40, 0x1A, 0x98, 0x60, 0x8A, 0xE0, 0x00, 0x00, 0x08, 0x0A, 0x0F, 0x08
    .byte 0x21, 0x7E, 0x05, 0x08, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x1D, 0x48, 0x98, 0x61
    .byte 0x00, 0x22, 0x05, 0x20, 0x20, 0x70, 0x28, 0x20, 0x28, 0x80, 0x80, 0x21, 0x49, 0x00, 0x18, 0x1C
    .byte 0x56, 0x30, 0x01, 0x80, 0x02, 0x30, 0x01, 0x80, 0x02, 0x30, 0x02, 0x80, 0xD8, 0x6E, 0x00, 0x28
    .byte 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11, 0x40, 0x42, 0x98, 0x62, 0xA0, 0x20, 0x80, 0x02, 0x18, 0x63
    .byte 0x18, 0x68, 0x99, 0x6A, 0x40, 0x18, 0x18, 0x60, 0x98, 0x68, 0x19, 0x6B, 0x40, 0x18, 0x98, 0x60
    .byte 0x00, 0x28, 0x01, 0xDA, 0x00, 0x20, 0x98, 0x60, 0x0B, 0x4A, 0x88, 0x18, 0x18, 0x63, 0x0B, 0x4A
    .byte 0xD8, 0x6E, 0x00, 0x28, 0x00, 0xDA, 0x52, 0x42, 0x19, 0x1C, 0x5A, 0x31, 0x08, 0x88, 0x80, 0x18
    .byte 0x08, 0x80, 0x00, 0x24, 0x28, 0x5F, 0x13, 0x28, 0x48, 0xD8, 0x80, 0x00, 0x04, 0x49, 0x40, 0x18
    .byte 0x00, 0x68, 0x87, 0x46, 0x25, 0x7E, 0x05, 0x08, 0x00, 0xD8, 0xFF, 0xFF, 0x00, 0xFD, 0xFF, 0xFF
    .byte 0x98, 0x7D, 0x05, 0x08, 0x08, 0x7E, 0x05, 0x08, 0x08, 0x7E, 0x05, 0x08, 0x08, 0x7E, 0x05, 0x08
    .byte 0x08, 0x7E, 0x05, 0x08, 0x00, 0x7E, 0x05, 0x08, 0x00, 0x7E, 0x05, 0x08, 0x00, 0x7E, 0x05, 0x08
    .byte 0x00, 0x7E, 0x05, 0x08, 0xF8, 0x7D, 0x05, 0x08, 0xF8, 0x7D, 0x05, 0x08, 0xF8, 0x7D, 0x05, 0x08
    .byte 0xF8, 0x7D, 0x05, 0x08, 0xF0, 0x7D, 0x05, 0x08, 0xF0, 0x7D, 0x05, 0x08, 0xF0, 0x7D, 0x05, 0x08
    .byte 0xF0, 0x7D, 0x05, 0x08, 0xE8, 0x7D, 0x05, 0x08, 0xE8, 0x7D, 0x05, 0x08, 0xE8, 0x7D, 0x05, 0x08
    .byte 0xE8, 0x7D, 0x05, 0x08, 0x00, 0x48, 0x12, 0xE0, 0x28, 0x0A, 0x0F, 0x08, 0x00, 0x48, 0x0E, 0xE0
    .byte 0x48, 0x0A, 0x0F, 0x08, 0x00, 0x48, 0x0A, 0xE0, 0x68, 0x0A, 0x0F, 0x08, 0x00, 0x48, 0x06, 0xE0
    .byte 0x28, 0x0A, 0x0F, 0x08, 0x00, 0x48, 0x02, 0xE0, 0x88, 0x0A, 0x0F, 0x08, 0x02, 0x48, 0xD8, 0x64
_08057E14:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00, 0x08, 0x0A, 0x0F, 0x08
    thumb_func_start main_dummyIrqHandler8
main_dummyIrqHandler8: @ 08057E20
    bx lr
    .byte 0x00, 0x00
    thumb_func_start main_dummyIrqHandler9
main_dummyIrqHandler9: @ 08057E24
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8057E28
sub_8057E28:
    adds r2, r0, #0x0
    ldr r0, _08057E68 @ =0x00001012
    movs r1, #0x00
    strh r0, [r2, #0x10]
    movs r0, #0x08
    strb r0, [r2, #0x0E]
    strb r0, [r2, #0x0D]
    strb r0, [r2, #0x0C]
    ldr r0, _08057E6C @ =0x08058099
    str r0, [r2, #0x18]
    ldr r0, _08057E70 @ =0x08057E79
    str r0, [r2, #0x5C]
    ldr r0, _08057E74 @ =0x080F0668
    str r0, [r2, #0x4C]
    movs r0, #0x11
    str r0, [r2, #0x60]
    str r1, [r2, #0x64]
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r2, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldrh r0, [r2, #0x34]
    movs r1, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r2, #0x34]
    bx lr
    .byte 0x00, 0x00
_08057E68: .4byte 0x00001012
_08057E6C: .4byte sub_8058098
_08057E70: .4byte sub_8057E78
_08057E74: .4byte 0x080F0668
    thumb_func_start sub_8057E78
sub_8057E78:
    adds r2, r0, #0x0
    ldr r0, [r2, #0x60]
    cmp r0, #0x31
    bls _08057E82
    b _08058094
_08057E82:
    lsls r0, r0, #0x02
    ldr r1, _08057E8C @ =0x08057E90
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08057E8C: .4byte 0x08057E90
    .byte 0x90, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x58, 0x7F, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x5C, 0x7F, 0x05, 0x08, 0x66, 0x7F, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x3C, 0x80, 0x05, 0x08, 0x5C, 0x80, 0x05, 0x08, 0x10, 0x20, 0x9A, 0xE0, 0x21, 0x20, 0x10, 0x66
    .byte 0x00, 0x20, 0x50, 0x66, 0x96, 0xE0, 0x51, 0x6E, 0x48, 0x1C, 0x50, 0x66, 0x22, 0x29, 0x00, 0xD9
    .byte 0x90, 0xE0, 0x88, 0x00, 0x01, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x80, 0x7F, 0x05, 0x08
    .byte 0x0C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x28, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x0C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x1C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x0C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x28, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x0C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x1C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x0C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x28, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x0C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x1C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x0C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x28, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x0C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x1C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x0C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x24, 0x80, 0x05, 0x08, 0x91, 0x8E, 0x02, 0x48
    .byte 0x08, 0x40, 0x90, 0x86, 0x3E, 0xE0, 0x00, 0x00, 0xFE, 0xFF, 0x00, 0x00, 0x00, 0x48, 0x04, 0xE0
    .byte 0x68, 0x06, 0x0F, 0x08, 0x22, 0x20, 0x10, 0x66, 0x03, 0x48, 0xD0, 0x64, 0x91, 0x8E, 0x01, 0x20
    .byte 0x08, 0x43, 0x90, 0x86, 0x2E, 0xE0, 0x00, 0x00, 0x88, 0x06, 0x0F, 0x08, 0x31, 0x20, 0x10, 0x66
    .byte 0x00, 0x20, 0x50, 0x66, 0x91, 0x8E, 0x03, 0x48, 0x08, 0x40, 0x90, 0x86, 0x02, 0x48, 0xD0, 0x64
    .byte 0x20, 0xE0, 0x00, 0x00, 0xFD, 0xFF, 0x00, 0x00, 0x88, 0x06, 0x0F, 0x08, 0x50, 0x6E, 0x01, 0x30
    .byte 0x50, 0x66, 0x04, 0x21, 0x08, 0x40, 0x00, 0x28, 0x03, 0xD0, 0x91, 0x8E, 0x01, 0x20, 0x08, 0x43
    .byte 0x02, 0xE0, 0x91, 0x8E, 0x05, 0x48, 0x08, 0x40, 0x90, 0x86, 0x50, 0x6E, 0x27, 0x28, 0x09, 0xDD
    .byte 0x90, 0x8E, 0x02, 0x49, 0x01, 0x40, 0x91, 0x86, 0x22, 0x20, 0x02, 0xE0, 0xFE, 0xFF, 0x00, 0x00
    .byte 0x01, 0x20, 0x10, 0x66
_08058094:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8058098
sub_8058098:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _080580E8
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _080580E8
    ldr r1, _080580D8 @ =0x03002E20
    ldr r0, _080580DC @ =0x00000C12
    adds r1, r1, r0
    ldrh r2, [r1, #0x00]
    movs r0, #0x01
    orrs r0, r2
    strh r0, [r1, #0x00]
    ldr r1, [r3, #0x60]
    movs r0, #0xF0
    ands r1, r0
    cmp r1, #0x10
    beq _080580E0
    cmp r1, #0x20
    beq _080580E4
    b _080580E8
    .byte 0x00, 0x00
_080580D8: .4byte 0x03002E20
_080580DC: .4byte 0x00000C12
_080580E0:
    movs r0, #0x20
    b _080580E6
_080580E4:
    movs r0, #0x30
_080580E6:
    str r0, [r3, #0x60]
_080580E8:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_80580EC
sub_80580EC:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r0, _08058158 @ =0x00001014
    strh r0, [r4, #0x10]
    movs r0, #0x08
    strb r0, [r4, #0x0E]
    strb r0, [r4, #0x0D]
    strb r0, [r4, #0x0C]
    ldr r0, _0805815C @ =0x080583D5
    str r0, [r4, #0x18]
    ldr r0, _08058160 @ =0x08058169
    str r0, [r4, #0x5C]
    ldr r0, _08058164 @ =0x080F0AE8
    str r0, [r4, #0x4C]
    movs r0, #0x10
    str r0, [r4, #0x60]
    bl main_getRandom
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    movs r1, #0xFC
    lsls r1, r1, #0x08
    ands r0, r1
    str r0, [r4, #0x64]
    movs r0, #0x80
    lsls r0, r0, #0x0C
    str r0, [r4, #0x68]
    bl main_getRandom
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    movs r1, #0x58
    bl __modsi3
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    str r0, [r4, #0x6C]
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r4, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldrh r0, [r4, #0x34]
    movs r1, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r4, #0x34]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08058158: .4byte 0x00001014
_0805815C: .4byte sub_80583D4
_08058160: .4byte sub_8058168
_08058164: .4byte 0x080F0AE8
    thumb_func_start sub_8058168
sub_8058168:
    adds r2, r0, #0x0
    ldr r0, [r2, #0x60]
    cmp r0, #0xF0
    bne _08058172
    b _08058380
_08058172:
    cmp r0, #0xF0
    bgt _08058180
    cmp r0, #0x10
    beq _0805818E
    cmp r0, #0x11
    beq _08058192
    b _080583CC
_08058180:
    cmp r0, #0xF2
    bne _08058186
    b _080583BC
_08058186:
    cmp r0, #0xF2
    bge _0805818C
    b _0805839A
_0805818C:
    b _080583CC
_0805818E:
    movs r0, #0x11
    str r0, [r2, #0x60]
_08058192:
    ldr r3, [r2, #0x64]
    ldr r1, _080581D0 @ =0x080E645C
    lsls r0, r3, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _080581A0
    adds r0, #0x3F
_080581A0:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    ldr r1, [r2, #0x68]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    movs r1, #0x80
    lsls r1, r1, #0x03
    adds r0, r3, r1
    str r0, [r2, #0x64]
    ldr r3, [r2, #0x6C]
    cmp r3, #0x57
    bls _080581C4
    b _08058368
_080581C4:
    lsls r0, r3, #0x02
    ldr r1, _080581D4 @ =0x080581D8
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_080581D0: .4byte 0x080E645C
_080581D4: .4byte 0x080581D8
    .byte 0x38, 0x83, 0x05, 0x08, 0x38, 0x83, 0x05, 0x08, 0x38, 0x83, 0x05, 0x08, 0x38, 0x83, 0x05, 0x08
    .byte 0x38, 0x83, 0x05, 0x08, 0x38, 0x83, 0x05, 0x08, 0x38, 0x83, 0x05, 0x08, 0x38, 0x83, 0x05, 0x08
    .byte 0x38, 0x83, 0x05, 0x08, 0x38, 0x83, 0x05, 0x08, 0x40, 0x83, 0x05, 0x08, 0x40, 0x83, 0x05, 0x08
    .byte 0x40, 0x83, 0x05, 0x08, 0x40, 0x83, 0x05, 0x08, 0x40, 0x83, 0x05, 0x08, 0x40, 0x83, 0x05, 0x08
    .byte 0x40, 0x83, 0x05, 0x08, 0x40, 0x83, 0x05, 0x08, 0x40, 0x83, 0x05, 0x08, 0x40, 0x83, 0x05, 0x08
    .byte 0x40, 0x83, 0x05, 0x08, 0x40, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08
    .byte 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08
    .byte 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08
    .byte 0x50, 0x83, 0x05, 0x08, 0x50, 0x83, 0x05, 0x08, 0x50, 0x83, 0x05, 0x08, 0x50, 0x83, 0x05, 0x08
    .byte 0x50, 0x83, 0x05, 0x08, 0x50, 0x83, 0x05, 0x08, 0x50, 0x83, 0x05, 0x08, 0x50, 0x83, 0x05, 0x08
    .byte 0x50, 0x83, 0x05, 0x08, 0x50, 0x83, 0x05, 0x08, 0x50, 0x83, 0x05, 0x08, 0x50, 0x83, 0x05, 0x08
    .byte 0x58, 0x83, 0x05, 0x08, 0x58, 0x83, 0x05, 0x08, 0x58, 0x83, 0x05, 0x08, 0x58, 0x83, 0x05, 0x08
    .byte 0x58, 0x83, 0x05, 0x08, 0x58, 0x83, 0x05, 0x08, 0x58, 0x83, 0x05, 0x08, 0x58, 0x83, 0x05, 0x08
    .byte 0x58, 0x83, 0x05, 0x08, 0x58, 0x83, 0x05, 0x08, 0x60, 0x83, 0x05, 0x08, 0x60, 0x83, 0x05, 0x08
    .byte 0x60, 0x83, 0x05, 0x08, 0x60, 0x83, 0x05, 0x08, 0x60, 0x83, 0x05, 0x08, 0x60, 0x83, 0x05, 0x08
    .byte 0x60, 0x83, 0x05, 0x08, 0x60, 0x83, 0x05, 0x08, 0x60, 0x83, 0x05, 0x08, 0x60, 0x83, 0x05, 0x08
    .byte 0x60, 0x83, 0x05, 0x08, 0x60, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08
    .byte 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08
    .byte 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08
    .byte 0x68, 0x83, 0x05, 0x08, 0x68, 0x83, 0x05, 0x08, 0x68, 0x83, 0x05, 0x08, 0x68, 0x83, 0x05, 0x08
    .byte 0x68, 0x83, 0x05, 0x08, 0x68, 0x83, 0x05, 0x08, 0x68, 0x83, 0x05, 0x08, 0x68, 0x83, 0x05, 0x08
    .byte 0x68, 0x83, 0x05, 0x08, 0x68, 0x83, 0x05, 0x08, 0x68, 0x83, 0x05, 0x08, 0x68, 0x83, 0x05, 0x08
    .byte 0x00, 0x48, 0x16, 0xE0, 0xE8, 0x0A, 0x0F, 0x08, 0x00, 0x48, 0x12, 0xE0, 0x08, 0x0B, 0x0F, 0x08
    .byte 0x00, 0x48, 0x0E, 0xE0, 0x28, 0x0B, 0x0F, 0x08, 0x00, 0x48, 0x0A, 0xE0, 0x48, 0x0B, 0x0F, 0x08
    .byte 0x00, 0x48, 0x06, 0xE0, 0x68, 0x0B, 0x0F, 0x08, 0x00, 0x48, 0x02, 0xE0, 0x88, 0x0B, 0x0F, 0x08
_08058368:
    ldr r0, _0805837C @ =0x080F0BA8
    str r0, [r2, #0x4C]
    adds r0, r3, #0x1
    str r0, [r2, #0x6C]
    cmp r0, #0x57
    ble _080583CC
    movs r0, #0x00
    str r0, [r2, #0x6C]
    b _080583CC
    .byte 0x00, 0x00
_0805837C: .4byte 0x080F0BA8
_08058380:
    movs r0, #0xF1
    str r0, [r2, #0x60]
    ldrh r1, [r2, #0x34]
    ldr r0, _080583B0 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x34]
    ldr r1, _080583B4 @ =0xFFFFFF00
    adds r0, r2, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
    movs r0, #0xC0
    lsls r0, r0, #0x0A
    str r0, [r2, #0x30]
_0805839A:
    ldr r0, [r2, #0x08]
    ldr r1, [r2, #0x30]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    cmp r0, #0x00
    blt _080583BC
    ldr r3, _080583B8 @ =0xFFFFC000
    adds r0, r1, r3
    str r0, [r2, #0x30]
    b _080583CC
    .byte 0x00, 0x00
_080583B0: .4byte 0x0000FFFD
_080583B4: .4byte 0xFFFFFF00
_080583B8: .4byte 0xFFFFC000
_080583BC:
    movs r0, #0xF3
    str r0, [r2, #0x60]
    movs r0, #0x00
    str r0, [r2, #0x18]
    ldrh r1, [r2, #0x34]
    ldr r0, _080583D0 @ =0x0000FFFE
    ands r0, r1
    strh r0, [r2, #0x34]
_080583CC:
    bx lr
    .byte 0x00, 0x00
_080583D0: .4byte 0x0000FFFE
    thumb_func_start sub_80583D4
sub_80583D4:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08058404
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08058404
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _08058404
    movs r0, #0xF0
    str r0, [r3, #0x60]
_08058404:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8058408
sub_8058408:
    adds r2, r0, #0x0
    ldr r0, _0805844C @ =0x00001015
    movs r3, #0x00
    strh r0, [r2, #0x10]
    ldr r0, _08058450 @ =0x080584F5
    str r0, [r2, #0x5C]
    ldr r0, _08058454 @ =0x08058735
    str r0, [r2, #0x18]
    ldr r0, _08058458 @ =0x080F01C8
    str r0, [r2, #0x4C]
    adds r0, r2, #0x0
    adds r0, #0x60
    strh r3, [r0, #0x00]
    adds r0, #0x02
    strh r3, [r0, #0x00]
    adds r0, #0x02
    strh r3, [r0, #0x00]
    adds r0, #0x02
    strh r3, [r0, #0x00]
    ldrh r1, [r2, #0x34]
    movs r0, #0x02
    orrs r0, r1
    strh r0, [r2, #0x34]
    ldr r1, [r2, #0x50]
    ldr r0, _0805845C @ =0x008E0001
    cmp r1, r0
    beq _08058468
    ldr r0, _08058460 @ =0x008E8001
    cmp r1, r0
    bne _08058474
    ldr r0, _08058464 @ =0x0805868D
    str r0, [r2, #0x5C]
    str r3, [r2, #0x28]
    b _08058478
_0805844C: .4byte 0x00001015
_08058450: .4byte sub_80584F4
_08058454: .4byte sub_8058734
_08058458: .4byte 0x080F01C8
_0805845C: .4byte 0x008E0001
_08058460: .4byte 0x008E8001
_08058464: .4byte sub_805868C
_08058468:
    str r3, [r2, #0x28]
    ldr r0, _08058470 @ =0xFFFF8000
    str r0, [r2, #0x2C]
    b _0805847A
_08058470: .4byte 0xFFFF8000
_08058474:
    ldr r0, _0805847C @ =0xFFFF8000
    str r0, [r2, #0x28]
_08058478:
    str r3, [r2, #0x2C]
_0805847A:
    bx lr
_0805847C: .4byte 0xFFFF8000
    thumb_func_start sub_8058480
sub_8058480:
    push {r4, r5, r6, r7, lr}
    adds r6, r0, #0x0
    adds r7, r1, #0x0
    ldr r0, _080584DC @ =0x03002E20
    ldr r1, _080584E0 @ =0x00000848
    adds r0, r0, r1
    ldr r5, _080584E4 @ =0x080E645C
    movs r1, #0x14
    ldsh r2, [r0, r1]
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _0805849A
    adds r0, #0x3F
_0805849A:
    asrs r3, r0, #0x06
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r1, _080584E8 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r4, [r0, #0x00]
    adds r0, r3, #0x0
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r3, [r0, #0x00]
    adds r0, r6, #0x0
    cmp r0, #0x00
    bge _080584BE
    adds r0, #0xFF
_080584BE:
    asrs r0, r0, #0x08
    adds r2, r0, #0x0
    muls r2, r4
    adds r1, r7, #0x0
    cmp r1, #0x00
    bge _080584CC
    adds r1, #0xFF
_080584CC:
    asrs r0, r1, #0x08
    muls r0, r3
    subs r0, r2, r0
    cmp r0, #0x00
    bge _080584EC
    movs r0, #0x00
    b _080584EE
    .byte 0x00, 0x00
_080584DC: .4byte 0x03002E20
_080584E0: .4byte 0x00000848
_080584E4: .4byte 0x080E645C
_080584E8: .4byte 0x000003FF
_080584EC:
    movs r0, #0x01
_080584EE:
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    thumb_func_start sub_80584F4
sub_80584F4:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    adds r0, #0x64
    movs r1, #0x00
    ldsh r4, [r0, r1]
    adds r6, r5, #0x0
    ldr r0, [r5, #0x28]
    ldr r1, [r5, #0x2C]
    negs r1, r1
    bl sub_8058480
    cmp r0, #0x00
    beq _08058518
    ldr r1, _08058514 @ =0xFFFFFF00
    b _0805851C
    .byte 0x00, 0x00
_08058514: .4byte 0xFFFFFF00
_08058518:
    movs r1, #0x80
    lsls r1, r1, #0x01
_0805851C:
    adds r0, r5, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r2, r0, #0x0
    ldrh r1, [r6, #0x34]
    movs r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    bne _08058530
    b _0805864E
_08058530:
    movs r0, #0x9B
    lsls r0, r0, #0x01
    cmp r4, r0
    bgt _08058558
    cmp r4, #0xFB
    bge _08058634
    cmp r4, #0xD2
    bgt _08058552
    cmp r4, #0xBF
    bge _0805862C
    cmp r4, #0x96
    bgt _08058620
    cmp r4, #0x01
    bge _0805859C
    cmp r4, #0x00
    beq _08058590
    b _08058634
_08058552:
    cmp r4, #0xE6
    ble _08058634
    b _0805862C
_08058558:
    movs r0, #0x82
    lsls r0, r0, #0x02
    cmp r4, r0
    bgt _08058580
    subs r0, #0x13
    cmp r4, r0
    bge _0805862C
    subs r0, #0x29
    cmp r4, r0
    bgt _08058620
    subs r0, #0x94
    cmp r4, r0
    bge _080585DA
    ldr r0, [r5, #0x28]
    negs r0, r0
    str r0, [r5, #0x28]
    ldr r0, [r5, #0x2C]
    negs r0, r0
    str r0, [r5, #0x2C]
    b _080585DA
_08058580:
    movs r0, #0x8C
    lsls r0, r0, #0x02
    cmp r4, r0
    bgt _08058634
    subs r0, #0x13
    cmp r4, r0
    bge _0805862C
    b _08058634
_08058590:
    ldr r0, [r5, #0x28]
    negs r0, r0
    str r0, [r5, #0x28]
    ldr r0, [r5, #0x2C]
    negs r0, r0
    str r0, [r5, #0x2C]
_0805859C:
    ldr r0, [r6, #0x00]
    ldr r1, [r5, #0x28]
    adds r0, r0, r1
    str r0, [r6, #0x00]
    ldr r0, [r6, #0x04]
    ldr r1, [r5, #0x2C]
    adds r0, r0, r1
    str r0, [r6, #0x04]
    adds r1, r5, #0x0
    adds r1, #0x62
    ldrh r0, [r1, #0x00]
    adds r0, #0x01
    strh r0, [r1, #0x00]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x0A
    blt _08058634
    movs r0, #0x00
    strh r0, [r1, #0x00]
    adds r2, r5, #0x0
    adds r2, #0x60
    ldrh r0, [r2, #0x00]
    adds r0, #0x01
    movs r1, #0x01
    ands r0, r1
    strh r0, [r2, #0x00]
    movs r1, #0x00
    ldsh r0, [r2, r1]
    cmp r0, #0x00
    beq _08058616
    b _08058620
_080585DA:
    ldr r0, [r6, #0x00]
    ldr r1, [r5, #0x28]
    adds r0, r0, r1
    str r0, [r6, #0x00]
    ldr r0, [r6, #0x04]
    ldr r1, [r5, #0x2C]
    adds r0, r0, r1
    str r0, [r6, #0x04]
    adds r1, r5, #0x0
    adds r1, #0x62
    ldrh r0, [r1, #0x00]
    adds r0, #0x01
    strh r0, [r1, #0x00]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x0A
    blt _08058634
    movs r0, #0x00
    strh r0, [r1, #0x00]
    adds r2, r5, #0x0
    adds r2, #0x60
    ldrh r0, [r2, #0x00]
    adds r0, #0x01
    movs r1, #0x01
    ands r0, r1
    strh r0, [r2, #0x00]
    movs r1, #0x00
    ldsh r0, [r2, r1]
    cmp r0, #0x00
    bne _08058620
_08058616:
    ldr r0, _0805861C @ =0x080F01C8
    str r0, [r5, #0x4C]
    b _08058634
_0805861C: .4byte 0x080F01C8
_08058620:
    ldr r0, _08058628 @ =0x080F01E8
    str r0, [r5, #0x4C]
    b _08058634
    .byte 0x00, 0x00
_08058628: .4byte 0x080F01E8
_0805862C:
    movs r1, #0x00
    ldsh r0, [r2, r1]
    negs r0, r0
    strh r0, [r2, #0x00]
_08058634:
    adds r2, r5, #0x0
    adds r2, #0x64
    ldrh r0, [r2, #0x00]
    adds r0, #0x01
    strh r0, [r2, #0x00]
    lsls r0, r0, #0x10
    movs r1, #0x9B
    lsls r1, r1, #0x12
    cmp r0, r1
    ble _0805867E
    movs r0, #0x00
    strh r0, [r2, #0x00]
    b _0805867E
_0805864E:
    movs r0, #0x01
    ands r1, r0
    cmp r1, #0x00
    beq _0805867E
    ldr r1, _08058684 @ =0x080E645C
    lsls r0, r4, #0x06
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x04
    str r0, [r6, #0x08]
    adds r1, r5, #0x0
    adds r1, #0x64
    ldrh r0, [r1, #0x00]
    subs r0, #0x01
    strh r0, [r1, #0x00]
    lsls r0, r0, #0x10
    cmp r0, #0x00
    bge _0805867E
    ldrh r1, [r5, #0x34]
    ldr r0, _08058688 @ =0x0000FFFE
    ands r0, r1
    strh r0, [r5, #0x34]
_0805867E:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_08058684: .4byte 0x080E645C
_08058688: .4byte 0x0000FFFE
    thumb_func_start sub_805868C
sub_805868C:
    push {r4, r5, r6, lr}
    adds r2, r0, #0x0
    adds r0, #0x64
    movs r1, #0x00
    ldsh r4, [r0, r1]
    ldrh r3, [r2, #0x34]
    movs r0, #0x02
    ands r0, r3
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    cmp r5, #0x00
    beq _080586F4
    adds r4, #0x01
    adds r3, r2, #0x0
    adds r3, #0x66
    movs r5, #0x00
    ldsh r0, [r3, r5]
    cmp r0, #0x00
    bne _080586CC
    ldr r0, _080586C8 @ =0x080F01E8
    str r0, [r2, #0x4C]
    cmp r4, #0x3B
    ble _0805871A
    movs r0, #0x01
    strh r0, [r3, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x0A
    str r0, [r2, #0x30]
    b _0805871A
    .byte 0x00, 0x00
_080586C8: .4byte 0x080F01E8
_080586CC:
    ldr r0, _080586EC @ =0x080F01C8
    str r0, [r2, #0x4C]
    ldr r1, [r2, #0x08]
    ldr r0, [r2, #0x30]
    adds r1, r1, r0
    str r1, [r2, #0x08]
    ldr r6, _080586F0 @ =0xFFFFC000
    adds r0, r0, r6
    str r0, [r2, #0x30]
    cmp r1, #0x00
    bgt _0805871A
    movs r0, #0x00
    str r0, [r2, #0x08]
    strh r0, [r3, #0x00]
    movs r4, #0x00
    b _0805871A
_080586EC: .4byte 0x080F01C8
_080586F0: .4byte 0xFFFFC000
_080586F4:
    movs r0, #0x01
    ands r0, r3
    cmp r0, #0x00
    beq _0805871A
    ldr r0, _08058728 @ =0x080F01C8
    str r0, [r2, #0x4C]
    ldr r1, [r2, #0x08]
    ldr r0, [r2, #0x30]
    adds r1, r1, r0
    str r1, [r2, #0x08]
    ldr r6, _0805872C @ =0xFFFFC000
    adds r0, r0, r6
    str r0, [r2, #0x30]
    cmp r1, #0x00
    bgt _0805871A
    ldr r0, _08058730 @ =0x0000FFFE
    ands r3, r0
    strh r3, [r2, #0x34]
    str r5, [r2, #0x08]
_0805871A:
    adds r0, r2, #0x0
    adds r0, #0x64
    strh r4, [r0, #0x00]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08058728: .4byte 0x080F01C8
_0805872C: .4byte 0xFFFFC000
_08058730: .4byte 0x0000FFFE
    thumb_func_start sub_8058734
sub_8058734:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _0805877E
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _0805877E
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _0805877E
    adds r1, r3, #0x0
    adds r1, #0x64
    movs r0, #0x20
    strh r0, [r1, #0x00]
    ldrh r1, [r3, #0x34]
    ldr r0, _08058780 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
    ldr r1, _08058784 @ =0xFFFFFF00
    adds r0, r3, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
    movs r0, #0xC0
    lsls r0, r0, #0x0A
    str r0, [r3, #0x30]
_0805877E:
    bx lr
_08058780: .4byte 0x0000FFFD
_08058784: .4byte 0xFFFFFF00
    thumb_func_start sub_8058788
sub_8058788:
    push {r4, lr}
    adds r2, r0, #0x0
    ldr r4, [r2, #0x64]
    ldrh r3, [r2, #0x34]
    movs r0, #0x02
    ands r0, r3
    cmp r0, #0x00
    beq _08058878
    cmp r4, #0x22
    bhi _08058864
    lsls r0, r4, #0x02
    ldr r1, _080587A8 @ =0x080587AC
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_080587A8: .4byte 0x080587AC
    .byte 0x38, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08
    .byte 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x40, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08
    .byte 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08
    .byte 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x48, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08
    .byte 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08
    .byte 0x50, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08
    .byte 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08
    .byte 0x58, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08
    .byte 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x60, 0x88, 0x05, 0x08, 0x00, 0x48, 0x12, 0xE0
    .byte 0x08, 0x0C, 0x0F, 0x08, 0x00, 0x48, 0x0E, 0xE0, 0x28, 0x0C, 0x0F, 0x08, 0x00, 0x48, 0x0A, 0xE0
    .byte 0x48, 0x0C, 0x0F, 0x08, 0x00, 0x48, 0x06, 0xE0, 0x68, 0x0C, 0x0F, 0x08, 0x00, 0x48, 0x02, 0xE0
    .byte 0x88, 0x0C, 0x0F, 0x08, 0x04, 0x48, 0xD0, 0x64
_08058864:
    adds r0, r4, #0x1
    str r0, [r2, #0x64]
    cmp r0, #0x29
    ble _0805889E
    movs r0, #0x00
    str r0, [r2, #0x64]
    b _0805889E
    .byte 0x00, 0x00, 0xA8, 0x0C, 0x0F, 0x08
_08058878:
    movs r0, #0x01
    ands r0, r3
    cmp r0, #0x00
    beq _0805889E
    ldr r1, _080588A4 @ =0x080E645C
    lsls r0, r4, #0x06
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x04
    str r0, [r2, #0x08]
    subs r0, r4, #0x1
    str r0, [r2, #0x64]
    cmp r0, #0x00
    bge _0805889E
    ldr r0, _080588A8 @ =0x0000FFFE
    ands r3, r0
    strh r3, [r2, #0x34]
_0805889E:
    pop {r4}
    pop {r0}
    bx r0
_080588A4: .4byte 0x080E645C
_080588A8: .4byte 0x0000FFFE
    thumb_func_start sub_80588AC
sub_80588AC:
    ldr r1, _080588D0 @ =0x00001016
    movs r2, #0x00
    strh r1, [r0, #0x10]
    ldr r1, _080588D4 @ =0x08058789
    str r1, [r0, #0x5C]
    ldr r1, _080588D8 @ =0x080588E1
    str r1, [r0, #0x18]
    ldr r1, _080588DC @ =0x080F0C08
    str r1, [r0, #0x4C]
    str r2, [r0, #0x60]
    ldrh r1, [r0, #0x34]
    movs r2, #0x01
    orrs r1, r2
    movs r2, #0x02
    orrs r1, r2
    strh r1, [r0, #0x34]
    bx lr
    .byte 0x00, 0x00
_080588D0: .4byte 0x00001016
_080588D4: .4byte sub_8058788
_080588D8: .4byte sub_80588E0
_080588DC: .4byte 0x080F0C08
    thumb_func_start sub_80588E0
sub_80588E0:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08058920
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08058920
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _08058920
    movs r0, #0x20
    str r0, [r3, #0x64]
    ldrh r1, [r3, #0x34]
    ldr r0, _08058924 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
    ldr r1, _08058928 @ =0xFFFFFF00
    adds r0, r3, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
_08058920:
    bx lr
    .byte 0x00, 0x00
_08058924: .4byte 0x0000FFFD
_08058928: .4byte 0xFFFFFF00
    thumb_func_start sub_805892C
sub_805892C:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r0, _08058984 @ =0x00001017
    strh r0, [r4, #0x10]
    movs r0, #0x08
    strb r0, [r4, #0x0E]
    strb r0, [r4, #0x0D]
    strb r0, [r4, #0x0C]
    ldr r0, _08058988 @ =0x08058A41
    str r0, [r4, #0x18]
    ldr r0, _0805898C @ =0x08058999
    str r0, [r4, #0x5C]
    ldr r0, _08058990 @ =0x080F0CC8
    str r0, [r4, #0x4C]
    movs r0, #0x10
    str r0, [r4, #0x60]
    bl main_getRandom
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    movs r1, #0xFC
    lsls r1, r1, #0x08
    ands r0, r1
    str r0, [r4, #0x64]
    movs r0, #0x80
    lsls r0, r0, #0x0C
    str r0, [r4, #0x68]
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r4, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldrh r1, [r4, #0x34]
    movs r0, #0x01
    orrs r0, r1
    ldr r1, _08058994 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r4, #0x34]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08058984: .4byte 0x00001017
_08058988: .4byte sub_8058A40
_0805898C: .4byte sub_8058998
_08058990: .4byte 0x080F0CC8
_08058994: .4byte 0x0000FFFD
    thumb_func_start sub_8058998
sub_8058998:
    adds r2, r0, #0x0
    ldr r0, [r2, #0x60]
    cmp r0, #0xF0
    beq _080589EC
    cmp r0, #0xF0
    bgt _080589AE
    cmp r0, #0x10
    beq _080589B8
    cmp r0, #0x11
    beq _080589BC
    b _08058A38
_080589AE:
    cmp r0, #0xF2
    beq _08058A28
    cmp r0, #0xF2
    blt _08058A06
    b _08058A38
_080589B8:
    movs r0, #0x11
    str r0, [r2, #0x60]
_080589BC:
    ldr r3, [r2, #0x64]
    ldr r1, _080589E8 @ =0x080E645C
    lsls r0, r3, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _080589CA
    adds r0, #0x3F
_080589CA:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    ldr r1, [r2, #0x68]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    movs r1, #0x80
    lsls r1, r1, #0x03
    adds r0, r3, r1
    str r0, [r2, #0x64]
    b _08058A38
_080589E8: .4byte 0x080E645C
_080589EC:
    movs r0, #0xF1
    str r0, [r2, #0x60]
    ldrh r1, [r2, #0x34]
    ldr r0, _08058A1C @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x34]
    ldr r1, _08058A20 @ =0xFFFFFF00
    adds r0, r2, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
    movs r0, #0xC0
    lsls r0, r0, #0x0A
    str r0, [r2, #0x30]
_08058A06:
    ldr r0, [r2, #0x08]
    ldr r1, [r2, #0x30]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    cmp r0, #0x00
    blt _08058A28
    ldr r3, _08058A24 @ =0xFFFFC000
    adds r0, r1, r3
    str r0, [r2, #0x30]
    b _08058A38
    .byte 0x00, 0x00
_08058A1C: .4byte 0x0000FFFD
_08058A20: .4byte 0xFFFFFF00
_08058A24: .4byte 0xFFFFC000
_08058A28:
    movs r0, #0xF3
    str r0, [r2, #0x60]
    movs r0, #0x00
    str r0, [r2, #0x18]
    ldrh r1, [r2, #0x34]
    ldr r0, _08058A3C @ =0x0000FFFE
    ands r0, r1
    strh r0, [r2, #0x34]
_08058A38:
    bx lr
    .byte 0x00, 0x00
_08058A3C: .4byte 0x0000FFFE
    thumb_func_start sub_8058A40
sub_8058A40:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08058A70
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08058A70
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _08058A70
    movs r0, #0xF0
    str r0, [r3, #0x60]
_08058A70:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8058A74
sub_8058A74:
    ldr r1, _08058AA0 @ =0x00001018
    movs r3, #0x00
    strh r1, [r0, #0x10]
    movs r1, #0x08
    strb r1, [r0, #0x0E]
    strb r1, [r0, #0x0D]
    strb r1, [r0, #0x0C]
    ldr r2, _08058AA4 @ =0x080F0128
    ldr r1, _08058AA8 @ =0x08058B4D
    str r1, [r0, #0x18]
    ldr r1, _08058AAC @ =0x08058AB1
    str r1, [r0, #0x5C]
    str r2, [r0, #0x4C]
    str r3, [r0, #0x60]
    str r3, [r0, #0x64]
    ldrh r1, [r0, #0x34]
    movs r2, #0x01
    orrs r1, r2
    movs r2, #0x02
    orrs r1, r2
    strh r1, [r0, #0x34]
    bx lr
_08058AA0: .4byte 0x00001018
_08058AA4: .4byte 0x080F0128
_08058AA8: .4byte sub_8058B4C
_08058AAC: .4byte sub_8058AB0
    thumb_func_start sub_8058AB0
sub_8058AB0:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    adds r6, r5, #0x0
    ldr r0, [r5, #0x60]
    cmp r0, #0xE0
    beq _08058AC6
    cmp r0, #0xE0
    ble _08058B42
    cmp r0, #0xE1
    beq _08058ADC
    b _08058B42
_08058AC6:
    ldrh r1, [r5, #0x34]
    ldr r0, _08058B04 @ =0x0000FFFD
    ands r0, r1
    movs r4, #0x00
    strh r0, [r5, #0x34]
    ldr r0, [r5, #0x68]
    bl sub_8058BA8
    movs r0, #0xE1
    str r0, [r5, #0x60]
    str r4, [r5, #0x64]
_08058ADC:
    ldr r0, [r5, #0x64]
    adds r0, #0x01
    str r0, [r5, #0x64]
    ldr r0, [r6, #0x00]
    ldr r1, [r5, #0x28]
    adds r0, r0, r1
    str r0, [r6, #0x00]
    ldr r0, [r6, #0x04]
    ldr r1, [r5, #0x2C]
    adds r0, r0, r1
    str r0, [r6, #0x04]
    ldr r0, [r5, #0x64]
    cmp r0, #0x0B
    beq _08058B18
    cmp r0, #0x0B
    bgt _08058B08
    cmp r0, #0x01
    beq _08058B0E
    b _08058B30
    .byte 0x00, 0x00
_08058B04: .4byte 0x0000FFFD
_08058B08:
    cmp r0, #0x15
    beq _08058B24
    b _08058B30
_08058B0E:
    ldr r0, _08058B14 @ =0x080F0CE8
    str r0, [r5, #0x4C]
    b _08058B42
_08058B14: .4byte 0x080F0CE8
_08058B18:
    ldr r0, _08058B20 @ =0x080F0D08
    str r0, [r5, #0x4C]
    b _08058B42
    .byte 0x00, 0x00
_08058B20: .4byte 0x080F0D08
_08058B24:
    ldr r0, _08058B2C @ =0x080F0D28
    str r0, [r5, #0x4C]
    b _08058B42
    .byte 0x00, 0x00
_08058B2C: .4byte 0x080F0D28
_08058B30:
    ldr r0, [r5, #0x64]
    cmp r0, #0x1E
    ble _08058B42
    movs r0, #0xF0
    str r0, [r5, #0x60]
    ldrh r1, [r5, #0x34]
    ldr r0, _08058B48 @ =0x0000FFFE
    ands r0, r1
    strh r0, [r5, #0x34]
_08058B42:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_08058B48: .4byte 0x0000FFFE
    thumb_func_start sub_8058B4C
sub_8058B4C:
    push {r4, lr}
    adds r4, r0, #0x0
    adds r3, r1, #0x0
    ldr r2, _08058BA0 @ =0x03002E20
    ldrh r0, [r3, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08058B9A
    adds r0, r3, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08058B9A
    ldr r0, _08058BA4 @ =0x00000C12
    adds r2, r2, r0
    ldrh r1, [r2, #0x00]
    movs r0, #0x01
    orrs r0, r1
    strh r0, [r2, #0x00]
    movs r0, #0xE0
    str r0, [r4, #0x60]
    str r3, [r4, #0x68]
    adds r0, r3, #0x0
    adds r0, #0x4E
    movs r1, #0x00
    ldsh r0, [r0, r1]
    lsls r0, r0, #0x08
    str r0, [r4, #0x28]
    adds r0, r3, #0x0
    adds r0, #0x50
    movs r1, #0x00
    ldsh r0, [r0, r1]
    lsls r0, r0, #0x08
    str r0, [r4, #0x2C]
_08058B9A:
    pop {r4}
    pop {r0}
    bx r0
_08058BA0: .4byte 0x03002E20
_08058BA4: .4byte 0x00000C12
    thumb_func_start sub_8058BA8
sub_8058BA8:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    ldr r0, _08058C68 @ =0x03002E20
    adds r6, r0, #0x0
    adds r6, #0x24
    movs r1, #0xE6
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_804F7AC
    adds r4, r0, #0x0
    str r5, [r4, #0x54]
    movs r2, #0x00
    strh r2, [r4, #0x26]
    str r2, [r4, #0x18]
    ldrh r1, [r4, #0x34]
    ldr r0, _08058C6C @ =0x0000FFFD
    ands r0, r1
    strh r0, [r4, #0x34]
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r4, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
    str r2, [r4, #0x6C]
    adds r0, r5, #0x0
    adds r0, #0x6A
    movs r3, #0x00
    ldsh r0, [r0, r3]
    cmp r0, #0x00
    beq _08058C74
    adds r0, r4, #0x0
    bl sub_8058CA4
    ldr r1, [r4, #0x28]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r0, r0, #0x01
    str r0, [r4, #0x28]
    ldr r1, [r4, #0x2C]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r0, r0, #0x01
    str r0, [r4, #0x2C]
    adds r1, r4, #0x0
    adds r1, #0x70
    movs r0, #0x80
    lsls r0, r0, #0x05
    strh r0, [r1, #0x00]
    adds r1, #0x02
    movs r0, #0x80
    lsls r0, r0, #0x06
    strh r0, [r1, #0x00]
    movs r0, #0x90
    lsls r0, r0, #0x09
    str r0, [r4, #0x30]
    ldr r0, [r5, #0x00]
    str r0, [r4, #0x00]
    ldr r2, [r5, #0x04]
    str r2, [r4, #0x04]
    ldr r1, [r5, #0x08]
    str r1, [r4, #0x08]
    cmp r0, #0x00
    bge _08058C34
    ldr r3, _08058C70 @ =0x0000FFFF
    adds r0, r0, r3
_08058C34:
    asrs r5, r0, #0x10
    cmp r2, #0x00
    bge _08058C3E
    ldr r0, _08058C70 @ =0x0000FFFF
    adds r2, r2, r0
_08058C3E:
    asrs r2, r2, #0x10
    adds r0, r1, #0x0
    cmp r0, #0x00
    bge _08058C4A
    ldr r1, _08058C70 @ =0x0000FFFF
    adds r0, r0, r1
_08058C4A:
    asrs r3, r0, #0x10
    adds r0, r6, #0x0
    adds r1, r5, #0x0
    bl sub_80328D4
    movs r1, #0x7F
    ands r0, r1
    adds r1, r4, #0x0
    adds r1, #0x36
    strb r0, [r1, #0x00]
    adds r0, r4, #0x0
    bl sub_8058E10
    b _08058C8E
    .byte 0x00, 0x00
_08058C68: .4byte 0x03002E20
_08058C6C: .4byte 0x0000FFFD
_08058C70: .4byte 0x0000FFFF
_08058C74:
    ldr r0, _08058CA0 @ =0x08058DE9
    str r0, [r4, #0x14]
    adds r0, r4, #0x0
    bl sub_8058E10
    adds r0, r4, #0x0
    bl sub_8058EB8
    adds r1, r5, #0x0
    adds r1, #0xAC
    movs r0, #0xB4
    lsls r0, r0, #0x01
    strh r0, [r1, #0x00]
_08058C8E:
    ldrh r1, [r4, #0x34]
    movs r0, #0x01
    orrs r0, r1
    strh r0, [r4, #0x34]
    adds r0, r4, #0x0
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_08058CA0: .4byte sub_8058DE8
    thumb_func_start sub_8058CA4
sub_8058CA4:
    push {r4, r5, r6, r7, lr}
    adds r6, r0, #0x0
    ldr r0, _08058D3C @ =0x03002E20
    adds r7, r0, #0x0
    adds r7, #0x24
    ldr r4, [r6, #0x54]
    adds r5, r6, #0x0
    ldr r1, _08058D40 @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _08058CCE
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08058CCE
    movs r0, #0xBA
    lsls r0, r0, #0x01
    bl m4aSongNumStart
_08058CCE:
    adds r0, r4, #0x0
    adds r0, #0x4E
    movs r1, #0x00
    ldsh r0, [r0, r1]
    lsls r0, r0, #0x08
    str r0, [r5, #0x28]
    adds r0, r4, #0x0
    adds r0, #0x50
    movs r1, #0x00
    ldsh r0, [r0, r1]
    lsls r0, r0, #0x08
    str r0, [r5, #0x2C]
    movs r0, #0x90
    lsls r0, r0, #0x09
    str r0, [r5, #0x30]
    ldr r1, [r5, #0x00]
    cmp r1, #0x00
    bge _08058CF6
    ldr r0, _08058D44 @ =0x0000FFFF
    adds r1, r1, r0
_08058CF6:
    asrs r1, r1, #0x10
    ldr r2, [r5, #0x04]
    cmp r2, #0x00
    bge _08058D02
    ldr r0, _08058D44 @ =0x0000FFFF
    adds r2, r2, r0
_08058D02:
    asrs r2, r2, #0x10
    ldr r3, [r5, #0x08]
    cmp r3, #0x00
    bge _08058D0E
    ldr r0, _08058D44 @ =0x0000FFFF
    adds r3, r3, r0
_08058D0E:
    asrs r3, r3, #0x10
    adds r0, r7, #0x0
    bl sub_80328D4
    movs r1, #0x7F
    ands r0, r1
    adds r1, r5, #0x0
    adds r1, #0x36
    movs r2, #0x00
    strb r0, [r1, #0x00]
    ldr r0, _08058D48 @ =0x08058D4D
    str r0, [r6, #0x14]
    adds r0, r6, #0x0
    adds r0, #0x70
    strh r2, [r0, #0x00]
    adds r1, r6, #0x0
    adds r1, #0x72
    movs r0, #0xC0
    lsls r0, r0, #0x05
    strh r0, [r1, #0x00]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08058D3C: .4byte 0x03002E20
_08058D40: .4byte 0x00000838
_08058D44: .4byte 0x0000FFFF
_08058D48: .4byte sub_8058D4C
    thumb_func_start sub_8058D4C
sub_8058D4C:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    ldr r6, _08058DCC @ =0x03002E20
    adds r7, r6, #0x0
    adds r7, #0x24
    adds r1, r4, #0x0
    adds r1, #0x70
    movs r2, #0x26
    ldsh r0, [r4, r2]
    ldrh r1, [r1, #0x00]
    adds r0, r0, r1
    strh r0, [r4, #0x26]
    ldr r2, [r4, #0x00]
    ldr r0, [r4, #0x28]
    adds r2, r2, r0
    str r2, [r4, #0x00]
    ldr r1, [r4, #0x04]
    ldr r0, [r4, #0x2C]
    adds r3, r1, r0
    str r3, [r4, #0x04]
    ldr r1, [r4, #0x08]
    ldr r0, [r4, #0x30]
    adds r0, r1, r0
    str r0, [r4, #0x08]
    cmp r2, #0x00
    bge _08058D84
    ldr r1, _08058DD0 @ =0x0000FFFF
    adds r2, r2, r1
_08058D84:
    asrs r5, r2, #0x10
    adds r1, r3, #0x0
    cmp r1, #0x00
    bge _08058D90
    ldr r2, _08058DD0 @ =0x0000FFFF
    adds r1, r1, r2
_08058D90:
    asrs r2, r1, #0x10
    adds r1, r0, #0x0
    cmp r1, #0x00
    bge _08058D9C
    ldr r0, _08058DD0 @ =0x0000FFFF
    adds r1, r1, r0
_08058D9C:
    asrs r3, r1, #0x10
    adds r0, r7, #0x0
    adds r1, r5, #0x0
    bl sub_80328D4
    movs r1, #0x7F
    ands r0, r1
    adds r1, r4, #0x0
    adds r1, #0x36
    strb r0, [r1, #0x00]
    adds r0, r4, #0x0
    bl sub_8058E10
    ldr r0, [r4, #0x08]
    cmp r0, #0x00
    blt _08058DD4
    ldr r0, [r4, #0x30]
    adds r1, r4, #0x0
    adds r1, #0x72
    movs r2, #0x00
    ldsh r1, [r1, r2]
    subs r0, r0, r1
    str r0, [r4, #0x30]
    b _08058DE0
_08058DCC: .4byte 0x03002E20
_08058DD0: .4byte 0x0000FFFF
_08058DD4:
    movs r1, #0xE6
    lsls r1, r1, #0x03
    adds r0, r6, r1
    adds r1, r4, #0x0
    bl sub_804F808
_08058DE0:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_8058DE8
sub_8058DE8:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    ldr r4, [r5, #0x54]
    bl sub_8058EB8
    adds r0, r5, #0x0
    bl sub_8058E10
    adds r4, #0xAC
    movs r1, #0x00
    ldsh r0, [r4, r1]
    cmp r0, #0x00
    bgt _08058E08
    adds r0, r5, #0x0
    bl sub_8058CA4
_08058E08:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_8058E10
sub_8058E10:
    push {r4, lr}
    adds r3, r0, #0x0
    ldr r0, _08058E40 @ =0x03002E20
    ldr r1, _08058E44 @ =0x00000848
    adds r0, r0, r1
    ldr r1, [r3, #0x54]
    movs r4, #0x14
    ldsh r2, [r0, r4]
    adds r1, #0x56
    ldrh r0, [r1, #0x00]
    subs r2, r2, r0
    movs r1, #0x26
    ldsh r0, [r3, r1]
    subs r2, r2, r0
    ldr r0, _08058E48 @ =0x0000FFFF
    ands r2, r0
    ldr r4, _08058E4C @ =0xFFFFEFFF
    adds r1, r2, r4
    ldr r0, _08058E50 @ =0x0000DFFF
    cmp r1, r0
    bls _08058E58
    ldr r0, _08058E54 @ =0x0807C558
    b _08058EAA
    .byte 0x00, 0x00
_08058E40: .4byte 0x03002E20
_08058E44: .4byte 0x00000848
_08058E48: .4byte 0x0000FFFF
_08058E4C: .4byte 0xFFFFEFFF
_08058E50: .4byte 0x0000DFFF
_08058E54: .4byte 0x0807C558
_08058E58:
    movs r0, #0xC0
    lsls r0, r0, #0x06
    cmp r2, r0
    bgt _08058E68
    ldr r0, _08058E64 @ =0x0807C550
    b _08058EAA
_08058E64: .4byte 0x0807C550
_08058E68:
    movs r0, #0xA0
    lsls r0, r0, #0x07
    cmp r2, r0
    bgt _08058E78
    ldr r0, _08058E74 @ =0x0807C548
    b _08058EAA
_08058E74: .4byte 0x0807C548
_08058E78:
    movs r0, #0x80
    lsls r0, r0, #0x08
    cmp r2, r0
    bgt _08058E88
    ldr r0, _08058E84 @ =0x0807C540
    b _08058EAA
_08058E84: .4byte 0x0807C540
_08058E88:
    movs r0, #0xB0
    lsls r0, r0, #0x08
    cmp r2, r0
    bgt _08058E98
    ldr r0, _08058E94 @ =0x0807C560
    b _08058EAA
_08058E94: .4byte 0x0807C560
_08058E98:
    movs r0, #0xD0
    lsls r0, r0, #0x08
    cmp r2, r0
    bgt _08058EA8
    ldr r0, _08058EA4 @ =0x0807C568
    b _08058EAA
_08058EA4: .4byte 0x0807C568
_08058EA8:
    ldr r0, _08058EB4 @ =0x0807C570
_08058EAA:
    str r0, [r3, #0x48]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08058EB4: .4byte 0x0807C570
    thumb_func_start sub_8058EB8
sub_8058EB8:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    ldr r1, [r0, #0x54]
    mov r12, r1
    ldr r2, _08058F38 @ =0x03002E20
    mov r10, r2
    adds r6, r0, #0x0
    mov r0, r12
    adds r0, #0xD8
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x1D
    mov r0, r12
    adds r0, #0x56
    ldrh r0, [r0, #0x00]
    ldr r3, _08058F3C @ =0xFFFFC000
    adds r0, r0, r3
    ldr r5, _08058F40 @ =0x080E645C
    lsls r0, r0, #0x10
    asrs r2, r0, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08058EEE
    adds r0, #0x3F
_08058EEE:
    asrs r3, r0, #0x06
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r4, _08058F44 @ =0x000003FF
    ands r0, r4
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    mov r9, r0
    adds r0, r3, #0x0
    ands r0, r4
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    mov r8, r0
    mov r0, r12
    adds r0, #0xBC
    ldr r0, [r0, #0x00]
    ldr r4, _08058F48 @ =0xFFFEFFFF
    adds r0, r0, r4
    ldr r1, _08058F4C @ =0x009EFFFE
    cmp r0, r1
    bhi _08058F50
    mov r1, r10
    ldr r0, [r1, #0x10]
    movs r1, #0x02
    ands r0, r1
    lsrs r3, r0, #0x01
    b _08058F52
    .byte 0x00, 0x00
_08058F38: .4byte 0x03002E20
_08058F3C: .4byte 0xFFFFC000
_08058F40: .4byte 0x080E645C
_08058F44: .4byte 0x000003FF
_08058F48: .4byte 0xFFFEFFFF
_08058F4C: .4byte 0x009EFFFE
_08058F50:
    movs r3, #0x00
_08058F52:
    movs r4, #0x00
    mov r0, r12
    adds r0, #0x85
    ldrb r5, [r0, #0x00]
    mov r2, r12
    adds r2, #0xB4
    cmp r5, #0x5C
    bne _08058F70
    ldrh r1, [r2, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _08058F9C
    movs r4, #0x01
_08058F70:
    ldrh r1, [r2, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _08058F9C
    movs r2, #0x01
    adds r1, r7, #0x0
    ands r1, r2
    movs r0, #0x1E
    ands r0, r5
    cmp r0, #0x0C
    bls _08058F96
    asrs r0, r7, #0x01
    ands r0, r2
    adds r0, r1, r0
    adds r0, r3, r0
    adds r2, r0, r4
    b _08058F9E
_08058F96:
    adds r0, r3, r1
    adds r2, r0, r4
    b _08058F9E
_08058F9C:
    adds r2, r3, r4
_08058F9E:
    lsls r2, r2, #0x0F
    mov r3, r12
    ldr r0, [r3, #0x00]
    mov r4, r9
    subs r0, r0, r4
    str r0, [r6, #0x00]
    ldr r1, [r3, #0x04]
    mov r4, r8
    subs r3, r1, r4
    str r3, [r6, #0x04]
    mov r4, r12
    ldr r1, [r4, #0x08]
    adds r1, r1, r2
    str r1, [r6, #0x08]
    cmp r0, #0x00
    bge _08058FC2
    ldr r2, _08058FFC @ =0x0000FFFF
    adds r0, r0, r2
_08058FC2:
    asrs r4, r0, #0x10
    adds r0, r3, #0x0
    cmp r0, #0x00
    bge _08058FCE
    ldr r3, _08058FFC @ =0x0000FFFF
    adds r0, r0, r3
_08058FCE:
    asrs r2, r0, #0x10
    adds r0, r1, #0x0
    cmp r0, #0x00
    bge _08058FDA
    ldr r1, _08058FFC @ =0x0000FFFF
    adds r0, r0, r1
_08058FDA:
    asrs r3, r0, #0x10
    ldr r0, _08059000 @ =0x03002E44
    adds r1, r4, #0x0
    bl sub_80328D4
    movs r1, #0x7F
    ands r0, r1
    adds r1, r6, #0x0
    adds r1, #0x36
    strb r0, [r1, #0x00]
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08058FFC: .4byte 0x0000FFFF
_08059000: .4byte 0x03002E44
    thumb_func_start sub_8059004
sub_8059004:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    ldr r0, _08059060 @ =0x00001019
    movs r4, #0x00
    strh r0, [r5, #0x10]
    movs r0, #0x08
    strb r0, [r5, #0x0E]
    strb r0, [r5, #0x0D]
    strb r0, [r5, #0x0C]
    ldr r0, _08059064 @ =0x08059169
    str r0, [r5, #0x18]
    ldr r0, _08059068 @ =0x080590E9
    str r0, [r5, #0x5C]
    ldr r0, _0805906C @ =0x080F0D68
    str r0, [r5, #0x4C]
    movs r0, #0x10
    str r0, [r5, #0x60]
    bl main_getRandom
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    movs r1, #0xFC
    lsls r1, r1, #0x08
    ands r0, r1
    str r0, [r5, #0x64]
    str r4, [r5, #0x6C]
    movs r0, #0x80
    lsls r0, r0, #0x0C
    str r0, [r5, #0x68]
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r5, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldrh r1, [r5, #0x34]
    movs r0, #0x01
    orrs r0, r1
    ldr r1, _08059070 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r5, #0x34]
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08059060: .4byte 0x00001019
_08059064: .4byte sub_8059168
_08059068: .4byte sub_80590E8
_0805906C: .4byte 0x080F0D68
_08059070: .4byte 0x0000FFFD
    thumb_func_start sub_8059074
sub_8059074:
    adds r2, r0, #0x0
    ldr r3, [r2, #0x64]
    ldr r1, _080590B0 @ =0x080E645C
    lsls r0, r3, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _08059084
    adds r0, #0x3F
_08059084:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    ldr r1, [r2, #0x68]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    movs r1, #0x80
    lsls r1, r1, #0x03
    adds r0, r3, r1
    str r0, [r2, #0x64]
    ldr r1, [r2, #0x6C]
    cmp r1, #0x0E
    beq _080590D0
    cmp r1, #0x0E
    bgt _080590B4
    cmp r1, #0x00
    beq _080590BE
    b _080590D4
_080590B0: .4byte 0x080E645C
_080590B4:
    cmp r1, #0x1A
    beq _080590C8
    cmp r1, #0x28
    beq _080590D0
    b _080590D4
_080590BE:
    ldr r0, _080590C4 @ =0x080F0D68
    b _080590D2
    .byte 0x00, 0x00
_080590C4: .4byte 0x080F0D68
_080590C8:
    ldr r0, _080590CC @ =0x080F0DA8
    b _080590D2
_080590CC: .4byte 0x080F0DA8
_080590D0:
    ldr r0, _080590E4 @ =0x080F0D88
_080590D2:
    str r0, [r2, #0x4C]
_080590D4:
    adds r0, r1, #0x1
    str r0, [r2, #0x6C]
    cmp r0, #0x33
    ble _080590E0
    movs r0, #0x00
    str r0, [r2, #0x6C]
_080590E0:
    bx lr
    .byte 0x00, 0x00
_080590E4: .4byte 0x080F0D88
    thumb_func_start sub_80590E8
sub_80590E8:
    push {lr}
    adds r2, r0, #0x0
    ldr r0, [r2, #0x60]
    cmp r0, #0xF0
    beq _08059116
    cmp r0, #0xF0
    bgt _08059100
    cmp r0, #0x10
    beq _0805910A
    cmp r0, #0x11
    beq _0805910E
    b _08059160
_08059100:
    cmp r0, #0xF2
    beq _08059150
    cmp r0, #0xF2
    blt _08059130
    b _08059160
_0805910A:
    movs r0, #0x11
    str r0, [r2, #0x60]
_0805910E:
    adds r0, r2, #0x0
    bl sub_8059074
    b _08059160
_08059116:
    movs r0, #0xF1
    str r0, [r2, #0x60]
    ldrh r1, [r2, #0x34]
    ldr r0, _08059144 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x34]
    ldr r1, _08059148 @ =0xFFFFFF00
    adds r0, r2, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
    movs r0, #0xC0
    lsls r0, r0, #0x0A
    str r0, [r2, #0x30]
_08059130:
    ldr r0, [r2, #0x08]
    ldr r1, [r2, #0x30]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    cmp r0, #0x00
    blt _08059150
    ldr r3, _0805914C @ =0xFFFFC000
    adds r0, r1, r3
    str r0, [r2, #0x30]
    b _08059160
_08059144: .4byte 0x0000FFFD
_08059148: .4byte 0xFFFFFF00
_0805914C: .4byte 0xFFFFC000
_08059150:
    movs r0, #0xF3
    str r0, [r2, #0x60]
    movs r0, #0x00
    str r0, [r2, #0x18]
    ldrh r1, [r2, #0x34]
    ldr r0, _08059164 @ =0x0000FFFE
    ands r0, r1
    strh r0, [r2, #0x34]
_08059160:
    pop {r0}
    bx r0
_08059164: .4byte 0x0000FFFE
    thumb_func_start sub_8059168
sub_8059168:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08059198
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08059198
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _08059198
    movs r0, #0xF0
    str r0, [r3, #0x60]
_08059198:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_805919C
sub_805919C:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r0, _080591F4 @ =0x0000101A
    strh r0, [r4, #0x10]
    movs r0, #0x08
    strb r0, [r4, #0x0E]
    strb r0, [r4, #0x0D]
    strb r0, [r4, #0x0C]
    ldr r0, _080591F8 @ =0x080592B1
    str r0, [r4, #0x18]
    ldr r0, _080591FC @ =0x08059209
    str r0, [r4, #0x5C]
    ldr r0, _08059200 @ =0x080F0DE8
    str r0, [r4, #0x4C]
    movs r0, #0x10
    str r0, [r4, #0x60]
    bl main_getRandom
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    movs r1, #0xFC
    lsls r1, r1, #0x08
    ands r0, r1
    str r0, [r4, #0x64]
    movs r0, #0x80
    lsls r0, r0, #0x0C
    str r0, [r4, #0x68]
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r4, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldrh r1, [r4, #0x34]
    movs r0, #0x01
    orrs r0, r1
    ldr r1, _08059204 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r4, #0x34]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_080591F4: .4byte 0x0000101A
_080591F8: .4byte sub_80592B0
_080591FC: .4byte sub_8059208
_08059200: .4byte 0x080F0DE8
_08059204: .4byte 0x0000FFFD
    thumb_func_start sub_8059208
sub_8059208:
    adds r2, r0, #0x0
    ldr r0, [r2, #0x60]
    cmp r0, #0xF0
    beq _0805925C
    cmp r0, #0xF0
    bgt _0805921E
    cmp r0, #0x10
    beq _08059228
    cmp r0, #0x11
    beq _0805922C
    b _080592A8
_0805921E:
    cmp r0, #0xF2
    beq _08059298
    cmp r0, #0xF2
    blt _08059276
    b _080592A8
_08059228:
    movs r0, #0x11
    str r0, [r2, #0x60]
_0805922C:
    ldr r3, [r2, #0x64]
    ldr r1, _08059258 @ =0x080E645C
    lsls r0, r3, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0805923A
    adds r0, #0x3F
_0805923A:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    ldr r1, [r2, #0x68]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    movs r1, #0x80
    lsls r1, r1, #0x03
    adds r0, r3, r1
    str r0, [r2, #0x64]
    b _080592A8
_08059258: .4byte 0x080E645C
_0805925C:
    movs r0, #0xF1
    str r0, [r2, #0x60]
    ldrh r1, [r2, #0x34]
    ldr r0, _0805928C @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x34]
    ldr r1, _08059290 @ =0xFFFFFF00
    adds r0, r2, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
    movs r0, #0xC0
    lsls r0, r0, #0x0A
    str r0, [r2, #0x30]
_08059276:
    ldr r0, [r2, #0x08]
    ldr r1, [r2, #0x30]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    cmp r0, #0x00
    blt _08059298
    ldr r3, _08059294 @ =0xFFFFC000
    adds r0, r1, r3
    str r0, [r2, #0x30]
    b _080592A8
    .byte 0x00, 0x00
_0805928C: .4byte 0x0000FFFD
_08059290: .4byte 0xFFFFFF00
_08059294: .4byte 0xFFFFC000
_08059298:
    movs r0, #0xF3
    str r0, [r2, #0x60]
    movs r0, #0x00
    str r0, [r2, #0x18]
    ldrh r1, [r2, #0x34]
    ldr r0, _080592AC @ =0x0000FFFE
    ands r0, r1
    strh r0, [r2, #0x34]
_080592A8:
    bx lr
    .byte 0x00, 0x00
_080592AC: .4byte 0x0000FFFE
    thumb_func_start sub_80592B0
sub_80592B0:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _080592E0
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _080592E0
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _080592E0
    movs r0, #0xF0
    str r0, [r3, #0x60]
_080592E0:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_80592E4
sub_80592E4:
    adds r3, r0, #0x0
    ldr r0, _08059348 @ =0x0000101B
    movs r1, #0x00
    movs r2, #0x00
    strh r0, [r3, #0x10]
    movs r0, #0x08
    strb r0, [r3, #0x0E]
    strb r0, [r3, #0x0D]
    strb r0, [r3, #0x0C]
    ldr r0, _0805934C @ =0x080F0E28
    str r0, [r3, #0x4C]
    adds r0, r3, #0x0
    adds r0, #0x60
    strb r1, [r0, #0x00]
    adds r0, #0x02
    strh r2, [r0, #0x00]
    adds r1, r3, #0x0
    adds r1, #0x64
    movs r0, #0x80
    lsls r0, r0, #0x04
    strh r0, [r1, #0x00]
    adds r0, r3, #0x0
    adds r0, #0x66
    strh r2, [r0, #0x00]
    adds r1, #0x04
    movs r0, #0x10
    strb r0, [r1, #0x00]
    adds r0, r3, #0x0
    adds r0, #0x6A
    strh r2, [r0, #0x00]
    str r2, [r3, #0x28]
    str r2, [r3, #0x2C]
    str r2, [r3, #0x30]
    ldr r0, _08059350 @ =0x080596D9
    str r0, [r3, #0x18]
    ldr r0, _08059354 @ =0x08059359
    str r0, [r3, #0x5C]
    ldrh r0, [r3, #0x34]
    movs r1, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r3, #0x34]
    movs r1, #0xE0
    adds r0, r3, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    bx lr
_08059348: .4byte 0x0000101B
_0805934C: .4byte 0x080F0E28
_08059350: .4byte sub_80596D8
_08059354: .4byte sub_8059358
    thumb_func_start sub_8059358
sub_8059358:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    adds r0, #0x60
    ldrb r0, [r0, #0x00]
    cmp r0, #0x08
    bls _08059366
    b _080596CC
_08059366:
    lsls r0, r0, #0x02
    ldr r1, _08059370 @ =0x08059374
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08059370: .4byte 0x08059374
    .byte 0x98, 0x93, 0x05, 0x08, 0xF0, 0x93, 0x05, 0x08, 0x00, 0x94, 0x05, 0x08, 0x2C, 0x95, 0x05, 0x08
    .byte 0x3C, 0x95, 0x05, 0x08, 0x78, 0x96, 0x05, 0x08, 0x96, 0x96, 0x05, 0x08, 0xB8, 0x96, 0x05, 0x08
    .byte 0xCC, 0x96, 0x05, 0x08, 0x2A, 0x1C, 0x62, 0x32, 0x11, 0x88, 0x00, 0x23, 0xD0, 0x5E, 0x00, 0x28
    .byte 0x01, 0xDD, 0x48, 0x1E, 0x04, 0xE0, 0x28, 0x1C, 0x60, 0x30, 0x02, 0x21, 0x01, 0x70, 0x40, 0x20
    .byte 0x10, 0x80, 0x29, 0x1C, 0x6A, 0x31, 0x80, 0x22, 0xD2, 0x00, 0x10, 0x1C, 0x0B, 0x88, 0xC0, 0x18
    .byte 0x08, 0x80, 0x09, 0x4A, 0x00, 0x23, 0xC8, 0x5E, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04
    .byte 0x80, 0x0D, 0x80, 0x00, 0x80, 0x18, 0x01, 0x68, 0x48, 0x00, 0x40, 0x18, 0xC0, 0x21, 0x09, 0x03
    .byte 0x40, 0x18, 0xA8, 0x60, 0x70, 0xE1, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0x28, 0x1C, 0x60, 0x30
    .byte 0x02, 0x21, 0x01, 0x70, 0x29, 0x1C, 0x62, 0x31, 0x80, 0x20, 0x08, 0x80, 0x28, 0x68, 0xA9, 0x6A
    .byte 0x40, 0x18, 0x28, 0x60, 0x68, 0x68, 0xE9, 0x6A, 0x40, 0x18, 0x68, 0x60, 0x29, 0x1C, 0x6A, 0x31
    .byte 0x80, 0x22, 0xD2, 0x00, 0x10, 0x1C, 0x0B, 0x88, 0xC0, 0x18, 0x08, 0x80, 0x20, 0x4A, 0x00, 0x23
    .byte 0xC8, 0x5E, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x80, 0x18
    .byte 0x01, 0x68, 0x48, 0x00, 0x40, 0x18, 0xC0, 0x21, 0x09, 0x03, 0x40, 0x18, 0xA8, 0x60, 0xAA, 0x6A
    .byte 0x2B, 0x1C, 0x64, 0x33, 0x00, 0x20, 0x19, 0x5E, 0x28, 0x1C, 0x68, 0x30, 0x00, 0x78, 0x48, 0x43
    .byte 0x82, 0x42, 0x08, 0xD0, 0x50, 0x18, 0xA8, 0x62, 0xE8, 0x6A, 0x29, 0x1C, 0x66, 0x31, 0x00, 0x22
    .byte 0x89, 0x5E, 0x40, 0x18, 0xE8, 0x62, 0xA9, 0x6A, 0x00, 0x29, 0x25, 0xD1, 0x29, 0x1C, 0x66, 0x31
    .byte 0x0C, 0x4C, 0x00, 0x22, 0x98, 0x5E, 0x00, 0x23, 0xC9, 0x5E, 0xD5, 0xF7, 0xDB, 0xFB, 0x00, 0x04
    .byte 0x00, 0x0C, 0x09, 0x49, 0x64, 0x18, 0x14, 0x22, 0xA1, 0x5E, 0x41, 0x1A, 0x07, 0x48, 0x01, 0x40
    .byte 0x07, 0x48, 0x81, 0x42, 0x36, 0xDC, 0x00, 0x29, 0x34, 0xDB, 0x06, 0x48, 0x33, 0xE0, 0x00, 0x00
    .byte 0x5C, 0x64, 0x0E, 0x08, 0x20, 0x2E, 0x00, 0x03, 0x48, 0x08, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00
    .byte 0xFF, 0x7F, 0x00, 0x00, 0x48, 0x0E, 0x0F, 0x08, 0xC8, 0x0F, 0x08, 0x18, 0xE9, 0x6A, 0xCA, 0x0F
    .byte 0x89, 0x18, 0x0B, 0x4C, 0xC0, 0x03, 0xC9, 0x03, 0x00, 0x14, 0x09, 0x14, 0xD5, 0xF7, 0xB2, 0xFB
    .byte 0x00, 0x04, 0x00, 0x0C, 0x07, 0x4B, 0xE4, 0x18, 0x14, 0x22, 0xA1, 0x5E, 0x41, 0x1A, 0x06, 0x48
    .byte 0x01, 0x40, 0x06, 0x48, 0x81, 0x42, 0x0D, 0xDC, 0x00, 0x29, 0x0B, 0xDB, 0x04, 0x48, 0x0A, 0xE0
    .byte 0x20, 0x2E, 0x00, 0x03, 0x48, 0x08, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0x7F, 0x00, 0x00
    .byte 0x48, 0x0E, 0x0F, 0x08, 0x07, 0x48, 0xE8, 0x64, 0x2A, 0x1C, 0x62, 0x32, 0x10, 0x88, 0x01, 0x38
    .byte 0x10, 0x80, 0x00, 0x04, 0x00, 0x28, 0x00, 0xDD, 0xD6, 0xE0, 0x28, 0x1C, 0x60, 0x30, 0x03, 0x21
    .byte 0xA1, 0xE0, 0x00, 0x00, 0x28, 0x0E, 0x0F, 0x08, 0x28, 0x1C, 0x60, 0x30, 0x04, 0x21, 0x01, 0x70
    .byte 0x29, 0x1C, 0x62, 0x31, 0x80, 0x20, 0x08, 0x80, 0x28, 0x68, 0xA9, 0x6A, 0x40, 0x18, 0x28, 0x60
    .byte 0x68, 0x68, 0xE9, 0x6A, 0x40, 0x18, 0x68, 0x60, 0x29, 0x1C, 0x6A, 0x31, 0x80, 0x23, 0xDB, 0x00
    .byte 0x18, 0x1C, 0x0A, 0x88, 0x80, 0x18, 0x08, 0x80, 0x23, 0x4A, 0x00, 0x23, 0xC8, 0x5E, 0x00, 0x28
    .byte 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x80, 0x18, 0x01, 0x68, 0x48, 0x00
    .byte 0x40, 0x18, 0xC0, 0x21, 0x09, 0x03, 0x40, 0x18, 0xA8, 0x60, 0xAA, 0x6A, 0x2B, 0x1C, 0x64, 0x33
    .byte 0x00, 0x20, 0x19, 0x5E, 0x28, 0x1C, 0x68, 0x30, 0x00, 0x78, 0x48, 0x43, 0xC2, 0x42, 0x08, 0xD0
    .byte 0x50, 0x1A, 0xA8, 0x62, 0xE8, 0x6A, 0x29, 0x1C, 0x66, 0x31, 0x00, 0x22, 0x89, 0x5E, 0x40, 0x1A
    .byte 0xE8, 0x62, 0xA9, 0x6A, 0x00, 0x29, 0x2B, 0xD1, 0x00, 0x21, 0x58, 0x5E, 0x40, 0x42, 0x29, 0x1C
    .byte 0x66, 0x31, 0x00, 0x22, 0x89, 0x5E, 0x49, 0x42, 0x0C, 0x4C, 0x00, 0x04, 0x00, 0x14, 0x09, 0x04
    .byte 0x09, 0x14, 0xD5, 0xF7, 0x37, 0xFB, 0x00, 0x04, 0x00, 0x0C, 0x09, 0x4B, 0xE4, 0x18, 0x14, 0x22
    .byte 0xA1, 0x5E, 0x41, 0x1A, 0x07, 0x48, 0x01, 0x40, 0x07, 0x48, 0x81, 0x42, 0x36, 0xDC, 0x00, 0x29
    .byte 0x34, 0xDB, 0x06, 0x48, 0x33, 0xE0, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0x20, 0x2E, 0x00, 0x03
    .byte 0x48, 0x08, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0x7F, 0x00, 0x00, 0x48, 0x0E, 0x0F, 0x08
    .byte 0xC8, 0x0F, 0x08, 0x18, 0xE9, 0x6A, 0xCA, 0x0F, 0x89, 0x18, 0x0B, 0x4C, 0xC0, 0x03, 0xC9, 0x03
    .byte 0x00, 0x14, 0x09, 0x14, 0xD5, 0xF7, 0x0E, 0xFB, 0x00, 0x04, 0x00, 0x0C, 0x07, 0x4B, 0xE4, 0x18
    .byte 0x14, 0x22, 0xA1, 0x5E, 0x41, 0x1A, 0x06, 0x48, 0x01, 0x40, 0x06, 0x48, 0x81, 0x42, 0x0D, 0xDC
    .byte 0x00, 0x29, 0x0B, 0xDB, 0x04, 0x48, 0x0A, 0xE0, 0x20, 0x2E, 0x00, 0x03, 0x48, 0x08, 0x00, 0x00
    .byte 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0x7F, 0x00, 0x00, 0x48, 0x0E, 0x0F, 0x08, 0x08, 0x48, 0xE8, 0x64
    .byte 0x2A, 0x1C, 0x62, 0x32, 0x10, 0x88, 0x01, 0x38, 0x10, 0x80, 0x00, 0x04, 0x00, 0x28, 0x33, 0xDC
    .byte 0x28, 0x1C, 0x60, 0x30, 0x01, 0x21, 0x01, 0x70, 0x80, 0x20, 0x10, 0x80, 0x2C, 0xE0, 0x00, 0x00
    .byte 0x28, 0x0E, 0x0F, 0x08, 0x29, 0x1C, 0x60, 0x31, 0x06, 0x20, 0x08, 0x70, 0xA9, 0x8E, 0x0A, 0x48
    .byte 0x08, 0x40, 0xA8, 0x86, 0x09, 0x49, 0x28, 0x1C, 0x58, 0x30, 0x01, 0x80, 0xC0, 0x20, 0x80, 0x02
    .byte 0x28, 0x63, 0xA8, 0x68, 0x29, 0x6B, 0x40, 0x18, 0xA8, 0x60, 0x00, 0x28, 0x0A, 0xDB, 0x04, 0x4B
    .byte 0xC8, 0x18, 0x28, 0x63, 0x10, 0xE0, 0x00, 0x00, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF
    .byte 0x00, 0xC0, 0xFF, 0xFF, 0x29, 0x1C, 0x60, 0x31, 0x00, 0x22, 0x08, 0x20, 0x08, 0x70, 0xAA, 0x61
    .byte 0xA9, 0x8E, 0x03, 0x48, 0x08, 0x40, 0xA8, 0x86
_080596CC:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00, 0xFE, 0xFF, 0x00, 0x00
    thumb_func_start sub_80596D8
sub_80596D8:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _0805970C
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _0805970C
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _0805970C
    adds r1, r3, #0x0
    adds r1, #0x60
    movs r0, #0x05
    strb r0, [r1, #0x00]
_0805970C:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8059710
sub_8059710:
    adds r2, r0, #0x0
    ldr r0, _08059758 @ =0x0000101C
    movs r3, #0x00
    strh r0, [r2, #0x10]
    ldr r0, _0805975C @ =0x080F0E68
    str r0, [r2, #0x4C]
    ldr r0, _08059760 @ =0x0805982D
    str r0, [r2, #0x5C]
    ldr r0, _08059764 @ =0x080598ED
    str r0, [r2, #0x18]
    ldrh r1, [r2, #0x34]
    movs r0, #0x02
    orrs r0, r1
    strh r0, [r2, #0x34]
    str r3, [r2, #0x60]
    str r3, [r2, #0x64]
    str r3, [r2, #0x68]
    movs r1, #0xE0
    adds r0, r2, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldr r1, [r2, #0x50]
    movs r0, #0xA1
    lsls r0, r0, #0x10
    cmp r1, r0
    beq _0805976C
    adds r0, #0x01
    cmp r1, r0
    bne _0805976C
    ldr r0, _08059768 @ =0xFFFF8000
    str r0, [r2, #0x28]
    str r3, [r2, #0x2C]
    b _08059776
    .byte 0x00, 0x00
_08059758: .4byte 0x0000101C
_0805975C: .4byte 0x080F0E68
_08059760: .4byte sub_805982C
_08059764: .4byte sub_80598EC
_08059768: .4byte 0xFFFF8000
_0805976C:
    movs r0, #0x80
    lsls r0, r0, #0x08
    str r0, [r2, #0x28]
    movs r0, #0x00
    str r0, [r2, #0x2C]
_08059776:
    bx lr
    thumb_func_start sub_8059778
sub_8059778:
    push {r4, r5, r6, lr}
    adds r6, r0, #0x0
    adds r5, r1, #0x0
    adds r0, r2, #0x0
    adds r1, r3, #0x0
    ldr r4, _080597C0 @ =0x03002E20
    lsrs r2, r0, #0x1F
    adds r0, r0, r2
    lsls r0, r0, #0x0F
    lsrs r2, r1, #0x1F
    adds r1, r1, r2
    lsls r1, r1, #0x0F
    asrs r0, r0, #0x10
    asrs r1, r1, #0x10
    bl sub_802EC38
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    ldr r1, _080597C4 @ =0x00000848
    adds r4, r4, r1
    movs r2, #0x14
    ldsh r1, [r4, r2]
    subs r2, r0, r1
    ldr r0, [r6, #0x64]
    adds r0, #0x01
    str r0, [r6, #0x64]
    cmp r0, r5
    blt _080597CE
    ldr r1, [r6, #0x60]
    cmp r1, #0x00
    beq _080597C8
    movs r0, #0x00
    str r0, [r6, #0x60]
    str r0, [r6, #0x64]
    b _080597CE
    .byte 0x00, 0x00
_080597C0: .4byte 0x03002E20
_080597C4: .4byte 0x00000848
_080597C8:
    movs r0, #0x01
    str r0, [r6, #0x60]
    str r1, [r6, #0x64]
_080597CE:
    ldr r0, [r6, #0x60]
    cmp r0, #0x00
    beq _080597FC
    ldr r1, _080597E8 @ =0x0000FFFF
    ands r1, r2
    ldr r0, _080597EC @ =0x00007FFF
    cmp r1, r0
    bgt _080597F4
    cmp r1, #0x00
    blt _080597F4
    ldr r0, _080597F0 @ =0x080F0EA8
    b _0805981E
    .byte 0x00, 0x00
_080597E8: .4byte 0x0000FFFF
_080597EC: .4byte 0x00007FFF
_080597F0: .4byte 0x080F0EA8
_080597F4:
    ldr r0, _080597F8 @ =0x080F0E68
    b _0805981E
_080597F8: .4byte 0x080F0E68
_080597FC:
    ldr r1, _08059810 @ =0x0000FFFF
    ands r1, r2
    ldr r0, _08059814 @ =0x00007FFF
    cmp r1, r0
    bgt _0805981C
    cmp r1, #0x00
    blt _0805981C
    ldr r0, _08059818 @ =0x080F0EC8
    b _0805981E
    .byte 0x00, 0x00
_08059810: .4byte 0x0000FFFF
_08059814: .4byte 0x00007FFF
_08059818: .4byte 0x080F0EC8
_0805981C:
    ldr r0, _08059828 @ =0x080F0E88
_0805981E:
    str r0, [r6, #0x4C]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08059828: .4byte 0x080F0E88
    thumb_func_start sub_805982C
sub_805982C:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r2, [r4, #0x68]
    ldrh r3, [r4, #0x34]
    movs r0, #0x02
    ands r0, r3
    cmp r0, #0x00
    beq _080598B8
    cmp r2, #0xAF
    ble _08059860
    ldr r0, _0805985C @ =0x0000010F
    cmp r2, r0
    bgt _08059890
    ldr r0, [r4, #0x00]
    ldr r2, [r4, #0x28]
    subs r0, r0, r2
    str r0, [r4, #0x00]
    ldr r0, [r4, #0x04]
    ldr r3, [r4, #0x2C]
    subs r0, r0, r3
    str r0, [r4, #0x04]
    negs r2, r2
    negs r3, r3
    b _08059878
_0805985C: .4byte 0x0000010F
_08059860:
    cmp r2, #0x60
    bge _08059882
    cmp r2, #0x00
    blt _08059890
    ldr r0, [r4, #0x00]
    ldr r2, [r4, #0x28]
    adds r0, r0, r2
    str r0, [r4, #0x00]
    ldr r0, [r4, #0x04]
    ldr r3, [r4, #0x2C]
    adds r0, r0, r3
    str r0, [r4, #0x04]
_08059878:
    adds r0, r4, #0x0
    movs r1, #0x06
    bl sub_8059778
    b _080598A0
_08059882:
    ldr r2, [r4, #0x28]
    ldr r3, [r4, #0x2C]
    adds r0, r4, #0x0
    movs r1, #0x0A
    bl sub_8059778
    b _080598A0
_08059890:
    ldr r2, [r4, #0x28]
    negs r2, r2
    ldr r3, [r4, #0x2C]
    negs r3, r3
    adds r0, r4, #0x0
    movs r1, #0x0A
    bl sub_8059778
_080598A0:
    ldr r0, [r4, #0x68]
    adds r0, #0x01
    str r0, [r4, #0x68]
    ldr r1, _080598B4 @ =0x0000015F
    cmp r0, r1
    ble _080598DE
    movs r0, #0x00
    str r0, [r4, #0x68]
    b _080598DE
    .byte 0x00, 0x00
_080598B4: .4byte 0x0000015F
_080598B8:
    movs r0, #0x01
    ands r0, r3
    cmp r0, #0x00
    beq _080598DE
    ldr r1, _080598E4 @ =0x080E645C
    lsls r0, r2, #0x06
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x04
    str r0, [r4, #0x08]
    subs r0, r2, #0x1
    str r0, [r4, #0x68]
    cmp r0, #0x00
    bge _080598DE
    ldr r0, _080598E8 @ =0x0000FFFE
    ands r3, r0
    strh r3, [r4, #0x34]
_080598DE:
    pop {r4}
    pop {r0}
    bx r0
_080598E4: .4byte 0x080E645C
_080598E8: .4byte 0x0000FFFE
    thumb_func_start sub_80598EC
sub_80598EC:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _0805992C
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _0805992C
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _0805992C
    movs r0, #0x20
    str r0, [r3, #0x68]
    ldrh r1, [r3, #0x34]
    ldr r0, _08059930 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
    ldr r1, _08059934 @ =0xFFFFFF00
    adds r0, r3, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
_0805992C:
    bx lr
    .byte 0x00, 0x00
_08059930: .4byte 0x0000FFFD
_08059934: .4byte 0xFFFFFF00
    thumb_func_start sub_8059938
sub_8059938:
    adds r3, r0, #0x0
    ldr r0, _08059998 @ =0x0000101D
    movs r2, #0x00
    strh r0, [r3, #0x10]
    movs r0, #0x08
    strb r0, [r3, #0x0E]
    strb r0, [r3, #0x0D]
    strb r0, [r3, #0x0C]
    ldr r0, _0805999C @ =0x080599ED
    str r0, [r3, #0x5C]
    ldr r0, _080599A0 @ =0x080F0EE8
    str r0, [r3, #0x4C]
    ldrh r1, [r3, #0x34]
    ldr r0, _080599A4 @ =0x0000FFFE
    ands r0, r1
    ldr r1, _080599A8 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
    movs r1, #0xE0
    adds r0, r3, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldr r0, [r3, #0x00]
    str r0, [r3, #0x68]
    ldr r0, [r3, #0x04]
    str r0, [r3, #0x6C]
    adds r0, r3, #0x0
    adds r0, #0x60
    strb r2, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x07
    str r0, [r3, #0x28]
    str r0, [r3, #0x2C]
    ldr r1, [r3, #0x50]
    ldr r0, _080599AC @ =0x00A20001
    cmp r1, r0
    beq _080599B0
    cmp r1, r0
    ble _080599DA
    adds r0, #0x01
    cmp r1, r0
    beq _080599BE
    adds r0, #0x01
    cmp r1, r0
    beq _080599CC
    b _080599DA
_08059998: .4byte 0x0000101D
_0805999C: .4byte sub_80599EC
_080599A0: .4byte 0x080F0EE8
_080599A4: .4byte 0x0000FFFE
_080599A8: .4byte 0x0000FFFD
_080599AC: .4byte 0x00A20001
_080599B0:
    adds r0, r3, #0x0
    adds r0, #0x66
    movs r1, #0x80
    strh r1, [r0, #0x00]
    subs r0, #0x02
    strh r1, [r0, #0x00]
    b _080599E8
_080599BE:
    adds r1, r3, #0x0
    adds r1, #0x66
    movs r0, #0x80
    strh r0, [r1, #0x00]
    subs r1, #0x02
    movs r0, #0x90
    b _080599E6
_080599CC:
    adds r1, r3, #0x0
    adds r1, #0x66
    movs r0, #0x80
    strh r0, [r1, #0x00]
    subs r1, #0x02
    movs r0, #0xA0
    b _080599E6
_080599DA:
    adds r1, r3, #0x0
    adds r1, #0x66
    movs r0, #0x80
    strh r0, [r1, #0x00]
    subs r1, #0x02
    movs r0, #0x70
_080599E6:
    strh r0, [r1, #0x00]
_080599E8:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_80599EC
sub_80599EC:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    adds r6, r0, #0x0
    adds r0, #0x62
    movs r1, #0x00
    ldsh r7, [r0, r1]
    subs r0, #0x02
    ldrb r0, [r0, #0x00]
    mov r8, r0
    cmp r0, #0x0B
    bls _08059A0A
    b _08059DDE
_08059A0A:
    lsls r0, r0, #0x02
    ldr r1, _08059A14 @ =0x08059A18
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08059A14: .4byte 0x08059A18
    .byte 0x48, 0x9A, 0x05, 0x08, 0x70, 0x9A, 0x05, 0x08, 0x84, 0x9A, 0x05, 0x08, 0x36, 0x9B, 0x05, 0x08
    .byte 0x90, 0x9B, 0x05, 0x08, 0x06, 0x9C, 0x05, 0x08, 0x60, 0x9C, 0x05, 0x08, 0xD2, 0x9C, 0x05, 0x08
    .byte 0x0C, 0x9D, 0x05, 0x08, 0x7C, 0x9D, 0x05, 0x08, 0xC8, 0x9D, 0x05, 0x08, 0xD4, 0x9D, 0x05, 0x08
    .byte 0x01, 0x22, 0x90, 0x46, 0x30, 0x1C, 0x64, 0x30, 0x00, 0x21, 0x47, 0x5E, 0x04, 0x20, 0xB0, 0x73
    .byte 0x70, 0x73, 0x30, 0x73, 0xB1, 0x8E, 0x07, 0x48, 0x08, 0x40, 0x07, 0x49, 0x08, 0x40, 0xB0, 0x86
    .byte 0xB0, 0x6E, 0x30, 0x60, 0xF0, 0x6E, 0x70, 0x60, 0x01, 0x3F, 0x00, 0x2F, 0x00, 0xDD, 0xB2, 0xE1
    .byte 0x02, 0x22, 0xAF, 0xE1, 0xFE, 0xFF, 0x00, 0x00, 0xFD, 0xFF, 0x00, 0x00, 0x03, 0x20, 0x80, 0x46
    .byte 0x3A, 0x48, 0xF0, 0x64, 0x3A, 0x48, 0xB0, 0x61, 0xC0, 0x20, 0x80, 0x03, 0xB0, 0x60, 0x00, 0x20
    .byte 0x30, 0x63, 0x80, 0x21, 0xC9, 0x00, 0x30, 0x1C, 0x56, 0x30, 0x01, 0x80, 0x02, 0x30, 0x01, 0x80
    .byte 0xB0, 0x8E, 0x01, 0x21, 0x08, 0x43, 0x02, 0x21, 0x08, 0x43, 0xB0, 0x86, 0x31, 0x48, 0x03, 0x1C
    .byte 0x24, 0x33, 0x31, 0x49, 0x40, 0x18, 0x02, 0x68, 0x24, 0x20, 0x31, 0x5E, 0x01, 0x20, 0x40, 0x42
    .byte 0x81, 0x42, 0x34, 0xD0, 0x90, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x2F, 0xD1, 0x2B, 0x49
    .byte 0x89, 0x46, 0x2B, 0x48, 0xC1, 0x22, 0x12, 0x01, 0x85, 0x18, 0xA9, 0x88, 0x48, 0x00, 0x40, 0x18
    .byte 0x80, 0x00, 0x48, 0x44, 0x00, 0x68, 0x80, 0x88, 0x00, 0x28, 0x20, 0xD1, 0x18, 0x1C, 0x31, 0x1C
    .byte 0xF3, 0xF7, 0x16, 0xF9, 0x00, 0x04, 0x02, 0x0C, 0x3F, 0x2A, 0x18, 0xDD, 0x14, 0x1C, 0x00, 0x2C
    .byte 0x15, 0xD0, 0xC1, 0x20, 0x40, 0x00, 0x06, 0xF0, 0x07, 0xFA, 0xA9, 0x88, 0x48, 0x00, 0x40, 0x18
    .byte 0x80, 0x00, 0x48, 0x44, 0x00, 0x68, 0x06, 0xF0, 0xF7, 0xFA, 0xA9, 0x88, 0x48, 0x00, 0x40, 0x18
    .byte 0x80, 0x00, 0x48, 0x44, 0x00, 0x68, 0x01, 0x21, 0x22, 0x1C, 0x07, 0xF0, 0xA5, 0xF9, 0x32, 0x1C
    .byte 0x56, 0x32, 0x00, 0x21, 0x50, 0x5E, 0x18, 0x38, 0x00, 0x04, 0x01, 0x0C, 0x00, 0x14, 0xC0, 0x28
    .byte 0x00, 0xDC, 0xC0, 0x21, 0x08, 0x04, 0x00, 0x14, 0x10, 0x80, 0x31, 0x1C, 0x58, 0x31, 0x08, 0x80
    .byte 0x30, 0x6B, 0x0C, 0x4A, 0x80, 0x18, 0x30, 0x63, 0xB1, 0x68, 0x09, 0x18, 0x00, 0x29, 0x02, 0xDC
    .byte 0x00, 0x21, 0x04, 0x20, 0x80, 0x46, 0xB1, 0x60, 0x35, 0xE1, 0x00, 0x00, 0xE8, 0x0E, 0x0F, 0x08
    .byte 0xF9, 0x9D, 0x05, 0x08, 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08
    .byte 0x98, 0x24, 0x10, 0x08, 0x00, 0xF4, 0xFF, 0xFF, 0x1F, 0x48, 0xB0, 0x61, 0x05, 0x21, 0x88, 0x46
    .byte 0x0A, 0x27, 0xC0, 0x21, 0x30, 0x1C, 0x56, 0x30, 0x01, 0x80, 0x02, 0x30, 0x01, 0x80, 0x1B, 0x48
    .byte 0x02, 0x1C, 0x24, 0x32, 0x1A, 0x49, 0x40, 0x18, 0x00, 0x68, 0x80, 0x6C, 0x20, 0x21, 0x08, 0x40
    .byte 0x00, 0x28, 0x24, 0xD1, 0x10, 0x1C, 0x31, 0x1C, 0xF3, 0xF7, 0xB2, 0xF8, 0x00, 0x04, 0x02, 0x0C
    .byte 0x3F, 0x2A, 0x1C, 0xDD, 0x15, 0x1C, 0x00, 0x2D, 0x19, 0xD0, 0x12, 0x48, 0x06, 0xF0, 0xA4, 0xF9
    .byte 0x11, 0x4A, 0x91, 0x46, 0x11, 0x4C, 0x12, 0x48, 0x24, 0x18, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18
    .byte 0x80, 0x00, 0x48, 0x44, 0x00, 0x68, 0x06, 0xF0, 0x8F, 0xFA, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18
    .byte 0x80, 0x00, 0x48, 0x44, 0x00, 0x68, 0x01, 0x21, 0x2A, 0x1C, 0x07, 0xF0, 0x3D, 0xF9, 0x08, 0x2F
    .byte 0x12, 0xDD, 0x08, 0x48, 0x1D, 0xE0, 0x00, 0x00, 0xFD, 0x9D, 0x05, 0x08, 0x20, 0x2E, 0x00, 0x03
    .byte 0x38, 0x08, 0x00, 0x00, 0x83, 0x01, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08
    .byte 0x18, 0x0C, 0x00, 0x00, 0x28, 0x0F, 0x0F, 0x08, 0x05, 0x2F, 0x03, 0xDD, 0x00, 0x48, 0x08, 0xE0
    .byte 0x48, 0x0F, 0x0F, 0x08, 0x02, 0x2F, 0x03, 0xDD, 0x00, 0x48, 0x02, 0xE0, 0x68, 0x0F, 0x0F, 0x08
    .byte 0x04, 0x48, 0xF0, 0x64, 0x01, 0x3F, 0x00, 0x2F, 0x00, 0xDD, 0xC4, 0xE0, 0x06, 0x21, 0x88, 0x46
    .byte 0xC1, 0xE0, 0x00, 0x00, 0x88, 0x0F, 0x0F, 0x08, 0x07, 0x22, 0x90, 0x46, 0x80, 0x20, 0x40, 0x02
    .byte 0x30, 0x63, 0x23, 0x48, 0xF0, 0x64, 0x23, 0x48, 0x02, 0x1C, 0x24, 0x32, 0x22, 0x49, 0x40, 0x18
    .byte 0x00, 0x68, 0x80, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x26, 0xD1, 0x10, 0x1C, 0x31, 0x1C
    .byte 0xF3, 0xF7, 0x4E, 0xF8, 0x00, 0x04, 0x02, 0x0C, 0x3F, 0x2A, 0x1E, 0xDD, 0x91, 0x46, 0x00, 0x2A
    .byte 0x1B, 0xD0, 0xC2, 0x20, 0x40, 0x00, 0x06, 0xF0, 0x3F, 0xF9, 0x18, 0x4A, 0x92, 0x46, 0x18, 0x4C
    .byte 0xC2, 0x20, 0x00, 0x01, 0x24, 0x18, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x50, 0x44
    .byte 0x00, 0x68, 0x06, 0xF0, 0x29, 0xFA, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x50, 0x44
    .byte 0x00, 0x68, 0x01, 0x21, 0x4A, 0x46, 0x07, 0xF0, 0xD7, 0xF8, 0x30, 0x68, 0xB1, 0x6A, 0x40, 0x18
    .byte 0x30, 0x60, 0x70, 0x68, 0xF1, 0x6A, 0x40, 0x18, 0x70, 0x60, 0xB0, 0x68, 0x31, 0x6B, 0x40, 0x18
    .byte 0xB0, 0x60, 0x00, 0x28, 0x66, 0xDC, 0x00, 0x20, 0xB0, 0x60, 0x08, 0x21, 0x88, 0x46, 0x72, 0xE0
    .byte 0xE8, 0x0E, 0x0F, 0x08, 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08
    .byte 0x98, 0x24, 0x10, 0x08, 0x09, 0x20, 0x80, 0x46, 0x30, 0x6B, 0xC1, 0x0F, 0x40, 0x18, 0x40, 0x10
    .byte 0x40, 0x42, 0x30, 0x63, 0x21, 0x48, 0x02, 0x1C, 0x24, 0x32, 0x21, 0x49, 0x40, 0x18, 0x00, 0x68
    .byte 0x80, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x24, 0xD1, 0x10, 0x1C, 0x31, 0x1C, 0xF2, 0xF7
    .byte 0xF7, 0xFF, 0x00, 0x04, 0x02, 0x0C, 0x3F, 0x2A, 0x1C, 0xDD, 0x91, 0x46, 0x00, 0x2A, 0x19, 0xD0
    .byte 0x18, 0x48, 0x06, 0xF0, 0xE9, 0xF8, 0x18, 0x4A, 0x92, 0x46, 0x18, 0x4C, 0x18, 0x48, 0x24, 0x18
    .byte 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x50, 0x44, 0x00, 0x68, 0x06, 0xF0, 0xD4, 0xF9
    .byte 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x50, 0x44, 0x00, 0x68, 0x01, 0x21, 0x4A, 0x46
    .byte 0x07, 0xF0, 0x82, 0xF8, 0x30, 0x68, 0xB1, 0x6A, 0x40, 0x18, 0x30, 0x60, 0x70, 0x68, 0xF1, 0x6A
    .byte 0x40, 0x18, 0x70, 0x60, 0xB0, 0x68, 0x31, 0x6B, 0x40, 0x18, 0xB0, 0x60, 0x00, 0x28, 0x11, 0xDC
    .byte 0x00, 0x20, 0xB0, 0x60, 0x0A, 0x21, 0x88, 0x46, 0x1D, 0xE0, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03
    .byte 0x38, 0x08, 0x00, 0x00, 0x85, 0x01, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08
    .byte 0x28, 0x0C, 0x00, 0x00, 0x01, 0x4A, 0x88, 0x18, 0x30, 0x63, 0x0C, 0xE0, 0x00, 0xE8, 0xFF, 0xFF
    .byte 0x0B, 0x20, 0x80, 0x46, 0x30, 0x1C, 0x66, 0x30, 0x00, 0x21, 0x47, 0x5E, 0x01, 0x3F, 0x00, 0x2F
    .byte 0x01, 0xDC, 0x00, 0x22, 0x90, 0x46
_08059DDE:
    adds r0, r6, #0x0
    adds r0, #0x60
    mov r1, r8
    strb r1, [r0, #0x00]
    adds r0, #0x02
    strh r7, [r0, #0x00]
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    thumb_func_start nullsub_30
nullsub_30: @ 08059DF8
    bx lr
    .byte 0x00, 0x00
    thumb_func_start nullsub_31
nullsub_31: @ 08059DFC
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8059E00
sub_8059E00:
    push {r4, lr}
    adds r2, r0, #0x0
    ldr r4, [r2, #0x64]
    ldr r0, [r2, #0x60]
    cmp r0, #0x00
    beq _08059E32
    ldrh r0, [r2, #0x34]
    ldr r3, _08059E38 @ =0x0000FFFD
    ands r3, r0
    strh r3, [r2, #0x34]
    ldr r1, _08059E3C @ =0x080E645C
    lsls r0, r4, #0x06
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x04
    str r0, [r2, #0x08]
    subs r0, r4, #0x1
    str r0, [r2, #0x64]
    cmp r0, #0x00
    bge _08059E32
    ldr r0, _08059E40 @ =0x0000FFFE
    ands r0, r3
    strh r0, [r2, #0x34]
_08059E32:
    pop {r4}
    pop {r0}
    bx r0
_08059E38: .4byte 0x0000FFFD
_08059E3C: .4byte 0x080E645C
_08059E40: .4byte 0x0000FFFE
    thumb_func_start sub_8059E44
sub_8059E44:
    adds r2, r0, #0x0
    adds r3, r1, #0x0
    ldrh r0, [r3, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08059E7A
    adds r0, r3, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _08059E7A
    ldr r0, [r2, #0x60]
    cmp r0, #0x00
    bne _08059E7A
    movs r0, #0x01
    str r0, [r2, #0x60]
    movs r0, #0x20
    str r0, [r2, #0x64]
    ldr r1, _08059E7C @ =0xFFFFFF00
    adds r0, r2, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
_08059E7A:
    bx lr
_08059E7C: .4byte 0xFFFFFF00
    thumb_func_start sub_8059E80
sub_8059E80:
    ldr r1, _08059E90 @ =0x08059E01
    str r1, [r0, #0x5C]
    ldr r1, _08059E94 @ =0x08059E45
    str r1, [r0, #0x18]
    movs r1, #0x00
    str r1, [r0, #0x60]
    str r1, [r0, #0x64]
    bx lr
_08059E90: .4byte sub_8059E00
_08059E94: .4byte sub_8059E44
    thumb_func_start sub_8059E98
sub_8059E98:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    ldr r0, _08059EF4 @ =0x00001008
    movs r4, #0x00
    strh r0, [r5, #0x10]
    movs r0, #0x08
    movs r1, #0x20
    strb r0, [r5, #0x0C]
    strb r0, [r5, #0x0D]
    strb r1, [r5, #0x0E]
    ldr r0, _08059EF8 @ =0x08059FAD
    str r0, [r5, #0x18]
    ldr r0, _08059EFC @ =0x08059F05
    str r0, [r5, #0x5C]
    ldr r0, _08059F00 @ =0x080F0FE8
    str r0, [r5, #0x4C]
    movs r0, #0x10
    str r0, [r5, #0x60]
    bl main_getRandom
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    movs r1, #0xFC
    lsls r1, r1, #0x08
    ands r0, r1
    str r0, [r5, #0x64]
    str r4, [r5, #0x6C]
    movs r0, #0x80
    lsls r0, r0, #0x0C
    str r0, [r5, #0x68]
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r5, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldrh r0, [r5, #0x34]
    movs r1, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r5, #0x34]
    pop {r4, r5}
    pop {r0}
    bx r0
_08059EF4: .4byte 0x00001008
_08059EF8: .4byte sub_8059FAC
_08059EFC: .4byte sub_8059F04
_08059F00: .4byte 0x080F0FE8
    thumb_func_start sub_8059F04
sub_8059F04:
    adds r2, r0, #0x0
    ldr r0, [r2, #0x60]
    cmp r0, #0xF0
    beq _08059F58
    cmp r0, #0xF0
    bgt _08059F1A
    cmp r0, #0x10
    beq _08059F24
    cmp r0, #0x11
    beq _08059F28
    b _08059FA4
_08059F1A:
    cmp r0, #0xF2
    beq _08059F94
    cmp r0, #0xF2
    blt _08059F72
    b _08059FA4
_08059F24:
    movs r0, #0x11
    str r0, [r2, #0x60]
_08059F28:
    ldr r3, [r2, #0x64]
    ldr r1, _08059F54 @ =0x080E645C
    lsls r0, r3, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _08059F36
    adds r0, #0x3F
_08059F36:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    ldr r1, [r2, #0x68]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    movs r1, #0x80
    lsls r1, r1, #0x03
    adds r0, r3, r1
    str r0, [r2, #0x64]
    b _08059FA4
_08059F54: .4byte 0x080E645C
_08059F58:
    movs r0, #0xF1
    str r0, [r2, #0x60]
    ldrh r1, [r2, #0x34]
    ldr r0, _08059F88 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x34]
    ldr r1, _08059F8C @ =0xFFFFFF00
    adds r0, r2, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
    movs r0, #0xC0
    lsls r0, r0, #0x0A
    str r0, [r2, #0x30]
_08059F72:
    ldr r0, [r2, #0x08]
    ldr r1, [r2, #0x30]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    cmp r0, #0x00
    blt _08059F94
    ldr r3, _08059F90 @ =0xFFFFC000
    adds r0, r1, r3
    str r0, [r2, #0x30]
    b _08059FA4
    .byte 0x00, 0x00
_08059F88: .4byte 0x0000FFFD
_08059F8C: .4byte 0xFFFFFF00
_08059F90: .4byte 0xFFFFC000
_08059F94:
    movs r0, #0xF3
    str r0, [r2, #0x60]
    movs r0, #0x00
    str r0, [r2, #0x18]
    ldrh r1, [r2, #0x34]
    ldr r0, _08059FA8 @ =0x0000FFFE
    ands r0, r1
    strh r0, [r2, #0x34]
_08059FA4:
    bx lr
    .byte 0x00, 0x00
_08059FA8: .4byte 0x0000FFFE
    thumb_func_start sub_8059FAC
sub_8059FAC:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    adds r3, r1, #0x0
    ldr r2, _08059FE4 @ =0x03002E20
    ldrh r0, [r3, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _0805A00C
    adds r0, r3, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _0805A00C
    adds r0, r3, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r5, [r0, r1]
    cmp r5, #0x00
    beq _08059FE8
    movs r0, #0xF0
    str r0, [r4, #0x60]
    b _0805A00C
    .byte 0x00, 0x00
_08059FE4: .4byte 0x03002E20
_08059FE8:
    ldr r0, _0805A014 @ =0x00000C12
    adds r2, r2, r0
    ldrh r1, [r2, #0x00]
    movs r0, #0x01
    orrs r0, r1
    strh r0, [r2, #0x00]
    ldrh r1, [r4, #0x34]
    ldr r0, _0805A018 @ =0x0000FFFE
    ands r0, r1
    ldr r1, _0805A01C @ =0x0000FFFD
    ands r0, r1
    strh r0, [r4, #0x34]
    adds r0, r3, #0x0
    bl sub_8048C2C
    movs r0, #0xF3
    str r0, [r4, #0x60]
    str r5, [r4, #0x18]
_0805A00C:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805A014: .4byte 0x00000C12
_0805A018: .4byte 0x0000FFFE
_0805A01C: .4byte 0x0000FFFD
    .byte 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x28, 0x05, 0xDC, 0x41, 0x01, 0x01, 0x48, 0x0C, 0x18, 0x05, 0xE0
    .byte 0x2E, 0x0F, 0x07, 0x08, 0x0A, 0x38, 0x40, 0x01, 0x08, 0x49, 0x44, 0x18, 0x00, 0x20, 0xD4, 0xF7
    .byte 0xF7, 0xFA, 0x01, 0x1C, 0x4A, 0x31, 0x20, 0x1C, 0x0B, 0x22, 0x07, 0xF0, 0x81, 0xF9, 0x01, 0x20
    .byte 0xD4, 0xF7, 0x0A, 0xFB, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x0E, 0x11, 0x07, 0x08
    .byte 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x28, 0x05, 0xDC, 0x41, 0x01, 0x01, 0x48, 0x0C, 0x18, 0x05, 0xE0
    .byte 0x4C, 0x10, 0x07, 0x08, 0x0A, 0x38, 0x40, 0x01, 0x08, 0x49, 0x44, 0x18, 0x00, 0x20, 0xD4, 0xF7
    .byte 0xD7, 0xFA, 0x01, 0x1C, 0x40, 0x31, 0x20, 0x1C, 0x05, 0x22, 0x07, 0xF0, 0x61, 0xF9, 0x01, 0x20
    .byte 0xD4, 0xF7, 0xEA, 0xFA, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x2C, 0x12, 0x07, 0x08
    .byte 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68, 0x00, 0x20, 0xD4, 0xF7
    .byte 0xBF, 0xFA, 0x01, 0x1C, 0x34, 0x31, 0x20, 0x1C, 0x02, 0x22, 0x07, 0xF0, 0x49, 0xF9, 0x01, 0x20
    .byte 0xD4, 0xF7, 0xD2, 0xFA, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x04, 0x17, 0x0F, 0x08
    .byte 0x10, 0xB5, 0x84, 0x6E, 0x64, 0x01, 0x08, 0x48, 0x24, 0x18, 0x00, 0x20, 0xD4, 0xF7, 0xA8, 0xFA
    .byte 0x01, 0x1C, 0x20, 0x31, 0x20, 0x1C, 0x06, 0x22, 0x07, 0xF0, 0x32, 0xF9, 0x01, 0x20, 0xD4, 0xF7
    .byte 0xBB, 0xFA, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x04, 0x13, 0x07, 0x08, 0x10, 0xB5, 0x84, 0x6E
    .byte 0x64, 0x01, 0x08, 0x48, 0x24, 0x18, 0x00, 0x20, 0xD4, 0xF7, 0x92, 0xFA, 0x01, 0x1C, 0x2C, 0x31
    .byte 0x20, 0x1C, 0x04, 0x22, 0x07, 0xF0, 0x1C, 0xF9, 0x01, 0x20, 0xD4, 0xF7, 0xA5, 0xFA, 0x10, 0xBC
    .byte 0x01, 0xBC, 0x00, 0x47, 0x10, 0x13, 0x07, 0x08, 0x10, 0xB5, 0x84, 0x6E, 0x64, 0x01, 0x08, 0x48
    .byte 0x24, 0x18, 0x00, 0x20, 0xD4, 0xF7, 0x7C, 0xFA, 0x01, 0x1C, 0x40, 0x31, 0x20, 0x1C, 0x08, 0x22
    .byte 0x07, 0xF0, 0x06, 0xF9, 0x01, 0x20, 0xD4, 0xF7, 0x8F, 0xFA, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47
    .byte 0xBC, 0x14, 0x07, 0x08, 0x10, 0xB5, 0x84, 0x6E, 0x64, 0x01, 0x0A, 0x48, 0x24, 0x18, 0x00, 0x20
    .byte 0xD4, 0xF7, 0x66, 0xFA, 0x01, 0x1C, 0x20, 0x1C, 0x0A, 0x22, 0x07, 0xF0, 0xF1, 0xF8, 0x00, 0x20
    .byte 0xD4, 0xF7, 0x5E, 0xFA, 0x00, 0x21, 0x01, 0x80, 0x01, 0x20, 0xD4, 0xF7, 0x75, 0xFA, 0x10, 0xBC
    .byte 0x01, 0xBC, 0x00, 0x47, 0x9C, 0x15, 0x07, 0x08, 0x10, 0xB5, 0x84, 0x6E, 0x64, 0x01, 0x08, 0x48
    .byte 0x24, 0x18, 0x00, 0x20, 0xD4, 0xF7, 0x4C, 0xFA, 0x01, 0x1C, 0x32, 0x31, 0x20, 0x1C, 0x05, 0x22
    .byte 0x07, 0xF0, 0xD6, 0xF8, 0x01, 0x20, 0xD4, 0xF7, 0x5F, 0xFA, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47
    .byte 0xDC, 0x16, 0x07, 0x08, 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68
    .byte 0x00, 0x20, 0xD4, 0xF7, 0x35, 0xFA, 0x01, 0x1C, 0x3C, 0x31, 0x20, 0x1C, 0x02, 0x22, 0x07, 0xF0
    .byte 0xBF, 0xF8, 0x01, 0x20, 0xD4, 0xF7, 0x48, 0xFA, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0x1C, 0x1A, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68
    .byte 0x00, 0x20, 0xD4, 0xF7, 0x1D, 0xFA, 0x01, 0x1C, 0x78, 0x31, 0x20, 0x1C, 0x02, 0x22, 0x07, 0xF0
    .byte 0xA7, 0xF8, 0x01, 0x20, 0xD4, 0xF7, 0x30, 0xFA, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0x2C, 0x1B, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68
    .byte 0x00, 0x20, 0xD4, 0xF7, 0x05, 0xFA, 0x01, 0x1C, 0xE2, 0x31, 0x20, 0x1C, 0x05, 0x22, 0x07, 0xF0
    .byte 0x8F, 0xF8, 0x01, 0x20, 0xD4, 0xF7, 0x18, 0xFA, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0x88, 0x1B, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68
    .byte 0x00, 0x20, 0xD4, 0xF7, 0xED, 0xF9, 0x01, 0x1C, 0xC2, 0x31, 0x20, 0x1C, 0x0F, 0x22, 0x07, 0xF0
    .byte 0x77, 0xF8, 0x01, 0x20, 0xD4, 0xF7, 0x00, 0xFA, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0x1C, 0x1C, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68
    .byte 0x01, 0x20, 0xD4, 0xF7, 0xD5, 0xF9, 0x01, 0x1C, 0x50, 0x31, 0x20, 0x1C, 0x06, 0x22, 0x07, 0xF0
    .byte 0x5F, 0xF8, 0x01, 0x20, 0xD4, 0xF7, 0xE8, 0xF9, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0xB0, 0x1C, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68
    .byte 0x01, 0x20, 0xD4, 0xF7, 0xBD, 0xF9, 0x01, 0x1C, 0x10, 0x31, 0x20, 0x1C, 0x06, 0x22, 0x07, 0xF0
    .byte 0x47, 0xF8, 0x01, 0x20, 0xD4, 0xF7, 0xD0, 0xF9, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0x08, 0x1E, 0x0F, 0x08
    thumb_func_start sub_805A2D4
sub_805A2D4:
    push {lr}
    ldr r1, _0805A2F0 @ =0x080F1B9C
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
    ldr r1, _0805A2F4 @ =0x080F1C30
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805A2F0: .4byte 0x080F1B9C
_0805A2F4: .4byte 0x080F1C30
    thumb_func_start sub_805A2F8
sub_805A2F8:
    push {lr}
    ldr r1, _0805A308 @ =0x080F1CE0
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
    pop {r0}
    bx r0
_0805A308: .4byte 0x080F1CE0
    thumb_func_start sub_805A30C
sub_805A30C:
    push {lr}
    ldr r1, _0805A31C @ =0x080F1E34
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
    pop {r0}
    bx r0
_0805A31C: .4byte 0x080F1E34
    .byte 0x30, 0xB5, 0x84, 0x6E, 0x0F, 0x48, 0xA4, 0x00, 0x20, 0x18, 0x05, 0x68, 0x00, 0x20, 0xD4, 0xF7
    .byte 0x7F, 0xF9, 0x01, 0x1C, 0xE0, 0x31, 0x28, 0x1C, 0x08, 0x22, 0x07, 0xF0, 0x07, 0xF8, 0x0A, 0x48
    .byte 0x24, 0x18, 0x24, 0x68, 0x00, 0x20, 0xD4, 0xF7, 0x73, 0xF9, 0x01, 0x1C, 0xC0, 0x31, 0x20, 0x1C
    .byte 0x08, 0x22, 0x06, 0xF0, 0xFB, 0xFF, 0x01, 0x20, 0xD4, 0xF7, 0x86, 0xF9, 0x30, 0xBC, 0x01, 0xBC
    .byte 0x00, 0x47, 0x00, 0x00, 0x44, 0x1F, 0x0F, 0x08, 0x60, 0x1F, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E
    .byte 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68, 0x00, 0x20, 0xD4, 0xF7, 0x59, 0xF9, 0x01, 0x1C
    .byte 0x18, 0x31, 0x20, 0x1C, 0x03, 0x22, 0x06, 0xF0, 0xE3, 0xFF, 0x01, 0x20, 0xD4, 0xF7, 0x6C, 0xF9
    .byte 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0xA4, 0x20, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E
    .byte 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68, 0x00, 0x20, 0xD4, 0xF7, 0x41, 0xF9, 0x01, 0x1C
    .byte 0x4A, 0x31, 0x20, 0x1C, 0x09, 0x22, 0x06, 0xF0, 0xCB, 0xFF, 0x01, 0x20, 0xD4, 0xF7, 0x54, 0xF9
    .byte 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x1C, 0x21, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E
    .byte 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68, 0x00, 0x20, 0xD4, 0xF7, 0x29, 0xF9, 0x01, 0x1C
    .byte 0xFA, 0x31, 0x20, 0x1C, 0x03, 0x22, 0x06, 0xF0, 0xB3, 0xFF, 0x01, 0x20, 0xD4, 0xF7, 0x3C, 0xF9
    .byte 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0xC4, 0x21, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E
    .byte 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68, 0x00, 0x20, 0xD4, 0xF7, 0x11, 0xF9, 0x01, 0x1C
    .byte 0x2C, 0x31, 0x20, 0x1C, 0x04, 0x22, 0x06, 0xF0, 0x9B, 0xFF, 0x01, 0x20, 0xD4, 0xF7, 0x24, 0xF9
    .byte 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x20, 0x22, 0x0F, 0x08, 0x30, 0xB5, 0x80, 0x6E
    .byte 0x0F, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68, 0x25, 0x1C, 0x0A, 0x35, 0x00, 0x20, 0xD4, 0xF7
    .byte 0xF7, 0xF8, 0x01, 0x1C, 0x20, 0x31, 0x28, 0x1C, 0x03, 0x22, 0x06, 0xF0, 0x81, 0xFF, 0x12, 0x34
    .byte 0x00, 0x20, 0xD4, 0xF7, 0xED, 0xF8, 0x01, 0x1C, 0x26, 0x31, 0x20, 0x1C, 0x03, 0x22, 0x06, 0xF0
    .byte 0x77, 0xFF, 0x01, 0x20, 0xD4, 0xF7, 0x00, 0xF9, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0x20, 0x22, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68
    .byte 0x00, 0x20, 0xD4, 0xF7, 0xD5, 0xF8, 0x01, 0x1C, 0x30, 0x31, 0x20, 0x1C, 0x05, 0x22, 0x06, 0xF0
    .byte 0x5F, 0xFF, 0x01, 0x20, 0xD4, 0xF7, 0xE8, 0xF8, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0xE8, 0x22, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68
    .byte 0x00, 0x20, 0xD4, 0xF7, 0xBD, 0xF8, 0x01, 0x1C, 0x14, 0x31, 0x20, 0x1C, 0x04, 0x22, 0x06, 0xF0
    .byte 0x47, 0xFF, 0x01, 0x20, 0xD4, 0xF7, 0xD0, 0xF8, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0xD0, 0x23, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68
    .byte 0x00, 0x20, 0xD4, 0xF7, 0xA5, 0xF8, 0x01, 0x1C, 0x14, 0x31, 0x20, 0x1C, 0x05, 0x22, 0x06, 0xF0
    .byte 0x2F, 0xFF, 0x01, 0x20, 0xD4, 0xF7, 0xB8, 0xF8, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0xE0, 0x24, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68
    .byte 0x00, 0x20, 0xD4, 0xF7, 0x8D, 0xF8, 0x01, 0x1C, 0x3A, 0x31, 0x20, 0x1C, 0x03, 0x22, 0x06, 0xF0
    .byte 0x17, 0xFF, 0x01, 0x20, 0xD4, 0xF7, 0xA0, 0xF8, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0x54, 0x25, 0x0F, 0x08, 0x10, 0xB5, 0x84, 0x6E, 0x64, 0x01, 0x08, 0x48, 0x24, 0x18, 0x00, 0x20
    .byte 0xD4, 0xF7, 0x76, 0xF8, 0x01, 0x1C, 0xE2, 0x31, 0x20, 0x1C, 0x04, 0x22, 0x06, 0xF0, 0x00, 0xFF
    .byte 0x01, 0x20, 0xD4, 0xF7, 0x89, 0xF8, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0xC4, 0x18, 0x07, 0x08
    .byte 0x10, 0xB5, 0x84, 0x6E, 0x64, 0x01, 0x08, 0x48, 0x24, 0x18, 0x00, 0x20, 0xD4, 0xF7, 0x60, 0xF8
    .byte 0x01, 0x1C, 0xF8, 0x31, 0x20, 0x1C, 0x04, 0x22, 0x06, 0xF0, 0xEA, 0xFE, 0x01, 0x20, 0xD4, 0xF7
    .byte 0x73, 0xF8, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0xCE, 0x18, 0x07, 0x08, 0x10, 0xB5, 0x80, 0x6E
    .byte 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68, 0x00, 0x20, 0xD4, 0xF7, 0x49, 0xF8, 0x01, 0x1C
    .byte 0xE2, 0x31, 0x20, 0x1C, 0x05, 0x22, 0x06, 0xF0, 0xD3, 0xFE, 0x01, 0x20, 0xD4, 0xF7, 0x5C, 0xF8
    .byte 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x94, 0x27, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E
    .byte 0x0A, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68, 0x00, 0x20, 0xD4, 0xF7, 0x31, 0xF8, 0x01, 0x1C
    .byte 0x93, 0x20, 0x40, 0x00, 0x09, 0x18, 0x20, 0x1C, 0x0B, 0x22, 0x06, 0xF0, 0xB9, 0xFE, 0x01, 0x20
    .byte 0xD4, 0xF7, 0x42, 0xF8, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x7C, 0x28, 0x0F, 0x08
    .byte 0x10, 0xB5, 0x04, 0x1C, 0x0B, 0x29, 0x43, 0xD8, 0x88, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68
    .byte 0x87, 0x46, 0x00, 0x00, 0x08, 0xA6, 0x05, 0x08, 0x38, 0xA6, 0x05, 0x08, 0x38, 0xA6, 0x05, 0x08
    .byte 0x38, 0xA6, 0x05, 0x08, 0x48, 0xA6, 0x05, 0x08, 0x48, 0xA6, 0x05, 0x08, 0x48, 0xA6, 0x05, 0x08
    .byte 0x58, 0xA6, 0x05, 0x08, 0x58, 0xA6, 0x05, 0x08, 0x58, 0xA6, 0x05, 0x08, 0x68, 0xA6, 0x05, 0x08
    .byte 0x68, 0xA6, 0x05, 0x08, 0x68, 0xA6, 0x05, 0x08, 0x01, 0x48, 0x02, 0x49, 0x16, 0xE0, 0x00, 0x00
    .byte 0x89, 0xA6, 0x05, 0x08, 0x80, 0x29, 0x0F, 0x08, 0x01, 0x48, 0x02, 0x49, 0x0E, 0xE0, 0x00, 0x00
    .byte 0x89, 0xA6, 0x05, 0x08, 0xB8, 0x29, 0x0F, 0x08, 0x01, 0x48, 0x02, 0x49, 0x06, 0xE0, 0x00, 0x00
    .byte 0x89, 0xA6, 0x05, 0x08, 0xF0, 0x29, 0x0F, 0x08, 0x03, 0x48, 0x04, 0x49, 0x00, 0x22, 0xD5, 0xF7
    .byte 0xD9, 0xFD, 0x44, 0x65, 0x05, 0xE0, 0x00, 0x00, 0x89, 0xA6, 0x05, 0x08, 0x28, 0x2A, 0x0F, 0x08
    .byte 0x00, 0x20, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47
    thumb_func_start sub_805A688
sub_805A688:
    ldr r2, [r0, #0x54]
    movs r1, #0x80
    lsls r1, r1, #0x08
    strh r1, [r0, #0x10]
    ldr r1, [r2, #0x00]
    str r1, [r0, #0x00]
    ldr r1, [r2, #0x04]
    str r1, [r0, #0x04]
    movs r1, #0x05
    str r1, [r0, #0x08]
    ldrh r1, [r0, #0x34]
    movs r2, #0x01
    orrs r1, r2
    movs r2, #0x02
    orrs r1, r2
    strh r1, [r0, #0x34]
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_805A6AC
sub_805A6AC:
    push {r4, r5, r6, r7, lr}
    adds r2, r0, #0x0
    ldr r0, _0805A6D4 @ =0x03002E20
    adds r7, r0, #0x0
    adds r7, #0x24
    ldr r1, _0805A6D8 @ =0x00000848
    adds r3, r0, r1
    subs r1, #0x10
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    ldrh r0, [r0, #0x34]
    movs r1, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _0805A6DC
    ldrh r1, [r2, #0x34]
    movs r0, #0x01
    orrs r0, r1
    b _0805A6E2
    .byte 0x00, 0x00
_0805A6D4: .4byte 0x03002E20
_0805A6D8: .4byte 0x00000848
_0805A6DC:
    ldrh r1, [r2, #0x34]
    ldr r0, _0805A6F8 @ =0x0000FFFE
    ands r0, r1
_0805A6E2:
    strh r0, [r2, #0x34]
    movs r1, #0xE0
    lsls r1, r1, #0x02
    adds r0, r3, r1
    ldr r0, [r0, #0x00]
    cmp r0, #0x01
    ble _0805A700
    ldr r6, _0805A6FC @ =0x080F2A70
    movs r5, #0x01
    b _0805A704
    .byte 0x00, 0x00
_0805A6F8: .4byte 0x0000FFFE
_0805A6FC: .4byte 0x080F2A70
_0805A700:
    ldr r6, _0805A728 @ =0x080F2AA8
    movs r5, #0x00
_0805A704:
    movs r2, #0x00
    ldr r0, _0805A72C @ =0x00000C58
    adds r4, r7, r0
    ldr r0, [r4, #0x00]
    cmp r0, #0x00
    bne _0805A738
    ldr r0, _0805A728 @ =0x080F2AA8
    cmp r6, r0
    beq _0805A73A
    ldr r0, _0805A730 @ =0x0805A7ED
    ldr r1, _0805A734 @ =0x080F2A70
    bl sub_8030224
    adds r2, r0, #0x0
    cmp r2, #0x00
    beq _0805A74C
    str r2, [r4, #0x00]
    b _0805A73A
_0805A728: .4byte 0x080F2AA8
_0805A72C: .4byte 0x00000C58
_0805A730: .4byte sub_805A7EC
_0805A734: .4byte 0x080F2A70
_0805A738:
    adds r2, r0, #0x0
_0805A73A:
    cmp r2, #0x00
    beq _0805A74C
    ldr r0, _0805A754 @ =0x00000C5C
    adds r1, r7, r0
    ldrb r0, [r1, #0x00]
    cmp r0, r5
    bne _0805A74C
    str r6, [r2, #0x5C]
    strb r5, [r1, #0x00]
_0805A74C:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805A754: .4byte 0x00000C5C
    .byte 0x10, 0xB5, 0x04, 0x1C, 0x0A, 0x48, 0x0B, 0x49, 0x40, 0x18, 0x00, 0x68, 0x1C, 0x22, 0x81, 0x5E
    .byte 0x21, 0x84, 0x1E, 0x22, 0x81, 0x5E, 0x61, 0x84, 0x24, 0x22, 0x81, 0x5E, 0x01, 0x31, 0xA1, 0x84
    .byte 0xE3, 0xF7, 0x4E, 0xF9, 0x58, 0x34, 0x20, 0x80, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x82, 0x8E, 0x01, 0x21, 0x11, 0x43, 0x81, 0x86
    .byte 0x70, 0x47, 0x00, 0x00, 0x82, 0x8E, 0x02, 0x49, 0x11, 0x40, 0x81, 0x86, 0x70, 0x47, 0x00, 0x00
    .byte 0xFE, 0xFF, 0x00, 0x00, 0x02, 0x48, 0x03, 0x49, 0x40, 0x18, 0x00, 0x21, 0x01, 0x60, 0x70, 0x47
    .byte 0x20, 0x2E, 0x00, 0x03, 0x7C, 0x0C, 0x00, 0x00
    thumb_func_start sub_805A7C0
sub_805A7C0:
    push {lr}
    ldr r0, _0805A7E4 @ =0x03002E20
    movs r1, #0xE8
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_804F7AC
    adds r2, r0, #0x0
    cmp r2, #0x00
    beq _0805A7DE
    adds r0, #0x4C
    movs r1, #0x00
    strh r1, [r0, #0x00]
    ldr r0, _0805A7E8 @ =0x0805A6AD
    str r0, [r2, #0x14]
_0805A7DE:
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805A7E4: .4byte 0x03002E20
_0805A7E8: .4byte sub_805A6AC
    thumb_func_start sub_805A7EC
sub_805A7EC:
    push {r4, r5, r6, lr}
    ldr r3, _0805A81C @ =0x03002E20
    ldr r2, _0805A820 @ =0x00000838
    adds r1, r3, r2
    ldr r4, [r1, #0x00]
    movs r5, #0x00
    strh r5, [r0, #0x10]
    ldrh r1, [r0, #0x34]
    movs r2, #0x01
    movs r6, #0x00
    orrs r1, r2
    strh r1, [r0, #0x34]
    ldr r1, [r4, #0x00]
    str r1, [r0, #0x00]
    ldr r1, [r4, #0x04]
    str r1, [r0, #0x04]
    str r5, [r0, #0x08]
    movs r0, #0xC8
    lsls r0, r0, #0x04
    adds r3, r3, r0
    strb r6, [r3, #0x00]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0805A81C: .4byte 0x03002E20
_0805A820: .4byte 0x00000838
    thumb_func_start sub_805A824
sub_805A824:
    push {r4, r5, lr}
    mov r12, r0
    ldr r0, [r0, #0x70]
    lsls r2, r0, #0x10
    lsrs r2, r2, #0x19
    lsls r0, r0, #0x17
    lsrs r4, r0, #0x1B
    ldr r5, _0805A868 @ =0x080F2AC0
    lsls r1, r4, #0x01
    adds r1, r1, r4
    adds r0, r1, r5
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x01
    movs r3, #0xCB
    lsls r3, r3, #0x01
    add r3, r12
    strh r0, [r3, #0x00]
    adds r0, r5, #0x1
    adds r1, r1, r0
    ldrb r0, [r1, #0x00]
    lsls r0, r0, #0x01
    movs r1, #0xCC
    lsls r1, r1, #0x01
    add r1, r12
    strh r0, [r1, #0x00]
    subs r2, #0x01
    lsls r2, r2, #0x18
    lsrs r3, r2, #0x18
    cmp r3, #0x00
    beq _0805A86C
    mov r2, r12
    adds r2, #0x71
    lsls r3, r3, #0x01
    b _0805A89A
_0805A868: .4byte 0x080F2AC0
_0805A86C:
    adds r0, r4, #0x1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    mov r3, r12
    adds r3, #0x70
    movs r1, #0x1F
    ands r1, r4
    lsls r1, r1, #0x04
    ldrh r2, [r3, #0x00]
    ldr r0, _0805A8A8 @ =0xFFFFFE0F
    ands r0, r2
    orrs r0, r1
    strh r0, [r3, #0x00]
    lsls r0, r4, #0x01
    adds r0, r0, r4
    adds r1, r5, #0x2
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0805A8AC
    mov r2, r12
    adds r2, #0x71
    lsls r3, r0, #0x01
_0805A89A:
    ldrb r1, [r2, #0x00]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r3
    strb r0, [r2, #0x00]
    b _0805A8B4
    .byte 0x00, 0x00
_0805A8A8: .4byte 0xFFFFFE0F
_0805A8AC:
    mov r0, r12
    movs r1, #0x01
    bl sub_803D950
_0805A8B4:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805A8BC
sub_805A8BC:
    adds r3, r0, #0x0
    ldr r0, [r3, #0x70]
    lsls r0, r0, #0x1C
    lsrs r0, r0, #0x1C
    cmp r0, #0x01
    beq _0805A900
    cmp r0, #0x01
    blt _0805A8D4
    cmp r0, #0x06
    bgt _0805A8D4
    cmp r0, #0x05
    bge _0805A900
_0805A8D4:
    adds r2, r3, #0x0
    adds r2, #0x70
    ldrb r1, [r2, #0x00]
    movs r0, #0x10
    negs r0, r0
    ands r0, r1
    movs r1, #0x01
    orrs r0, r1
    strb r0, [r2, #0x00]
    ldrh r1, [r2, #0x00]
    ldr r0, _0805A904 @ =0xFFFFFE0F
    ands r0, r1
    strh r0, [r2, #0x00]
    ldr r0, _0805A908 @ =0x080F2AC0
    adds r3, #0x71
    ldrb r1, [r0, #0x02]
    lsls r1, r1, #0x01
    ldrb r2, [r3, #0x00]
    movs r0, #0x01
    ands r0, r2
    orrs r0, r1
    strb r0, [r3, #0x00]
_0805A900:
    bx lr
    .byte 0x00, 0x00
_0805A904: .4byte 0xFFFFFE0F
_0805A908: .4byte 0x080F2AC0
    thumb_func_start sub_805A90C
sub_805A90C:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r7, r0, #0x0
    lsls r1, r1, #0x18
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    mov r8, r2
    movs r0, #0x6E
    adds r0, r0, r7
    mov r12, r0
    ldr r0, [r0, #0x00]
    lsls r2, r0, #0x10
    lsrs r5, r2, #0x19
    lsls r0, r0, #0x17
    lsrs r4, r0, #0x1B
    ldr r3, _0805A96C @ =0x080F2BF4
    adds r0, r7, #0x0
    adds r0, #0x4C
    ldrb r2, [r0, #0x00]
    movs r0, #0x07
    ands r0, r2
    lsls r0, r0, #0x02
    adds r0, r0, r3
    ldr r6, [r0, #0x00]
    movs r2, #0xC1
    lsls r2, r2, #0x18
    adds r1, r1, r2
    lsrs r1, r1, #0x18
    cmp r1, #0x01
    bhi _0805A950
    ldr r0, _0805A970 @ =0x000001FF
    cmp r8, r0
    bls _0805A978
_0805A950:
    mov r0, r12
    ldrh r1, [r0, #0x00]
    ldr r0, _0805A974 @ =0xFFFFFE0F
    ands r0, r1
    mov r1, r12
    strh r0, [r1, #0x00]
    ldrb r1, [r6, #0x01]
    lsls r1, r1, #0x01
    mov r0, r12
    ldrb r2, [r0, #0x01]
    movs r0, #0x01
    ands r0, r2
    orrs r0, r1
    b _0805A98E
_0805A96C: .4byte 0x080F2BF4
_0805A970: .4byte 0x000001FF
_0805A974: .4byte 0xFFFFFE0F
_0805A978:
    subs r0, r5, #0x1
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    cmp r5, #0x00
    beq _0805A994
    lsls r2, r5, #0x01
    mov r0, r12
    ldrb r1, [r0, #0x01]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r2
_0805A98E:
    mov r1, r12
    strb r0, [r1, #0x01]
    b _0805AA04
_0805A994:
    adds r0, r4, #0x1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    lsls r0, r4, #0x02
    adds r0, r0, r6
    ldrb r3, [r0, #0x01]
    ldrb r1, [r0, #0x00]
    movs r2, #0x00
    ldsb r2, [r0, r2]
    movs r0, #0x01
    negs r0, r0
    adds r5, r7, #0x0
    adds r5, #0x6C
    cmp r2, r0
    bne _0805A9CA
_0805A9B2:
    adds r0, r4, r3
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    lsls r0, r4, #0x02
    adds r0, r0, r6
    ldrb r3, [r0, #0x01]
    ldrb r1, [r0, #0x00]
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, r2
    beq _0805A9B2
_0805A9CA:
    strb r1, [r5, #0x00]
    lsls r0, r3, #0x18
    asrs r5, r0, #0x18
    cmp r5, #0x00
    beq _0805A9FC
    adds r2, r7, #0x0
    adds r2, #0x6E
    movs r0, #0x1F
    ands r4, r0
    lsls r3, r4, #0x04
    ldrh r1, [r2, #0x00]
    ldr r0, _0805A9F8 @ =0xFFFFFE0F
    ands r0, r1
    orrs r0, r3
    strh r0, [r2, #0x00]
    lsls r3, r5, #0x01
    ldrb r1, [r2, #0x01]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r3
    strb r0, [r2, #0x01]
    b _0805AA04
    .byte 0x00, 0x00
_0805A9F8: .4byte 0xFFFFFE0F
_0805A9FC:
    adds r0, r7, #0x0
    movs r1, #0x00
    bl sub_803D950
_0805AA04:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805AA10
sub_805AA10:
    mov r12, r0
    mov r3, r12
    adds r3, #0x6E
    ldrb r1, [r3, #0x00]
    movs r0, #0x0F
    ands r0, r1
    cmp r0, #0x02
    beq _0805AA62
    movs r0, #0x10
    negs r0, r0
    ands r0, r1
    movs r1, #0x02
    orrs r0, r1
    strb r0, [r3, #0x00]
    ldr r2, _0805AA64 @ =0x080F2BF4
    mov r0, r12
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r2, [r0, #0x00]
    ldrh r1, [r3, #0x00]
    ldr r0, _0805AA68 @ =0xFFFFFE0F
    ands r0, r1
    strh r0, [r3, #0x00]
    ldrb r1, [r2, #0x01]
    lsls r1, r1, #0x01
    ldrb r2, [r3, #0x01]
    movs r0, #0x01
    ands r0, r2
    orrs r0, r1
    strb r0, [r3, #0x01]
    mov r2, r12
    adds r2, #0x6D
    ldrb r1, [r2, #0x00]
    movs r0, #0x02
    negs r0, r0
    ands r0, r1
    strb r0, [r2, #0x00]
_0805AA62:
    bx lr
_0805AA64: .4byte 0x080F2BF4
_0805AA68: .4byte 0xFFFFFE0F
    thumb_func_start sub_805AA6C
sub_805AA6C:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    adds r6, r1, #0x0
    movs r5, #0x08
    cmp r6, #0x00
    beq _0805AA7A
    movs r5, #0x09
_0805AA7A:
    adds r0, r4, #0x0
    bl sub_803CA78
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    ldrh r1, [r4, #0x24]
    cmp r0, #0x00
    beq _0805AA8E
    cmp r0, #0x7F
    bne _0805AAEA
_0805AA8E:
    ldr r0, _0805AAD4 @ =0x000001FF
    cmp r1, r0
    bhi _0805AAEA
    adds r3, r4, #0x0
    adds r3, #0x6E
    ldrb r1, [r3, #0x00]
    movs r0, #0x0F
    ands r0, r1
    cmp r0, #0x00
    bne _0805AAEA
    movs r0, #0x0F
    ands r5, r0
    movs r0, #0x10
    negs r0, r0
    ands r0, r1
    orrs r0, r5
    strb r0, [r3, #0x00]
    ldr r0, _0805AAD8 @ =0x080F2C14
    ldrb r1, [r0, #0x01]
    lsls r1, r1, #0x01
    ldrb r2, [r3, #0x01]
    movs r0, #0x01
    ands r0, r2
    orrs r0, r1
    strb r0, [r3, #0x01]
    cmp r6, #0x00
    beq _0805AADC
    adds r0, r4, #0x0
    adds r0, #0x6D
    ldrb r1, [r0, #0x00]
    movs r2, #0x01
    orrs r1, r2
    strb r1, [r0, #0x00]
    b _0805AAEA
    .byte 0x00, 0x00
_0805AAD4: .4byte 0x000001FF
_0805AAD8: .4byte 0x080F2C14
_0805AADC:
    adds r2, r4, #0x0
    adds r2, #0x6D
    ldrb r1, [r2, #0x00]
    movs r0, #0x02
    negs r0, r0
    ands r0, r1
    strb r0, [r2, #0x00]
_0805AAEA:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    thumb_func_start sub_805AAF0
sub_805AAF0:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    lsls r1, r1, #0x18
    lsrs r6, r1, #0x18
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    adds r3, r5, #0x0
    adds r3, #0x6E
    ldr r0, [r3, #0x00]
    lsls r1, r0, #0x10
    lsrs r1, r1, #0x19
    lsls r0, r0, #0x17
    lsrs r4, r0, #0x1B
    cmp r6, #0x00
    beq _0805AB12
    cmp r6, #0x7F
    bne _0805AB18
_0805AB12:
    ldr r0, _0805AB20 @ =0x000001FF
    cmp r2, r0
    bls _0805AB24
_0805AB18:
    adds r0, r5, #0x0
    bl sub_805AC24
    b _0805ABAA
_0805AB20: .4byte 0x000001FF
_0805AB24:
    movs r6, #0x01
    subs r0, r1, #0x1
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #0x00
    beq _0805AB3C
    lsls r2, r1, #0x01
    ldrb r1, [r3, #0x01]
    adds r0, r6, #0x0
    ands r0, r1
    orrs r0, r2
    b _0805ABA8
_0805AB3C:
    adds r0, r4, #0x1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    ldr r0, _0805AB7C @ =0x080F2C14
    lsls r1, r4, #0x01
    adds r2, r1, r0
    ldrb r2, [r2, #0x00]
    adds r0, #0x01
    adds r1, r1, r0
    ldrb r0, [r1, #0x00]
    adds r1, r5, #0x0
    adds r1, #0x6C
    strb r2, [r1, #0x00]
    lsls r0, r0, #0x18
    asrs r5, r0, #0x18
    cmp r5, #0x00
    beq _0805AB84
    movs r0, #0x1F
    ands r4, r0
    lsls r2, r4, #0x04
    ldrh r1, [r3, #0x00]
    ldr r0, _0805AB80 @ =0xFFFFFE0F
    ands r0, r1
    orrs r0, r2
    strh r0, [r3, #0x00]
    lsls r2, r5, #0x01
    ldrb r1, [r3, #0x01]
    adds r0, r6, #0x0
    ands r0, r1
    orrs r0, r2
    b _0805ABA8
    .byte 0x00, 0x00
_0805AB7C: .4byte 0x080F2C14
_0805AB80: .4byte 0xFFFFFE0F
_0805AB84:
    ldrb r1, [r3, #0x00]
    movs r0, #0x10
    negs r0, r0
    ands r0, r1
    movs r1, #0x0A
    orrs r0, r1
    strb r0, [r3, #0x00]
    ldrh r1, [r3, #0x00]
    ldr r0, _0805ABB0 @ =0xFFFFFE0F
    ands r0, r1
    strh r0, [r3, #0x00]
    ldr r0, _0805ABB4 @ =0x080F2C22
    ldrb r1, [r0, #0x01]
    lsls r1, r1, #0x01
    ldrb r2, [r3, #0x01]
    adds r0, r6, #0x0
    ands r0, r2
    orrs r0, r1
_0805ABA8:
    strb r0, [r3, #0x01]
_0805ABAA:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0805ABB0: .4byte 0xFFFFFE0F
_0805ABB4: .4byte 0x080F2C22
    thumb_func_start sub_805ABB8
sub_805ABB8:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    adds r3, r5, #0x0
    adds r3, #0x6E
    ldr r1, [r3, #0x00]
    lsls r0, r1, #0x10
    lsrs r0, r0, #0x19
    lsls r1, r1, #0x17
    lsrs r2, r1, #0x1B
    subs r0, #0x01
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x00
    beq _0805ABD8
    lsls r2, r0, #0x01
    b _0805AC00
_0805ABD8:
    adds r0, r2, #0x1
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    ldr r0, _0805AC0C @ =0x080F2C14
    lsls r1, r2, #0x01
    adds r0, #0x01
    adds r1, r1, r0
    movs r4, #0x00
    ldsb r4, [r1, r4]
    cmp r4, #0x00
    beq _0805AC14
    movs r0, #0x1F
    ands r2, r0
    lsls r2, r2, #0x04
    ldrh r1, [r3, #0x00]
    ldr r0, _0805AC10 @ =0xFFFFFE0F
    ands r0, r1
    orrs r0, r2
    strh r0, [r3, #0x00]
    lsls r2, r4, #0x01
_0805AC00:
    ldrb r1, [r3, #0x01]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r2
    strb r0, [r3, #0x01]
    b _0805AC1C
_0805AC0C: .4byte 0x080F2C14
_0805AC10: .4byte 0xFFFFFE0F
_0805AC14:
    adds r0, r5, #0x0
    movs r1, #0x00
    bl sub_803D950
_0805AC1C:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805AC24
sub_805AC24:
    adds r0, #0x6E
    ldrb r2, [r0, #0x00]
    movs r1, #0x10
    negs r1, r1
    ands r1, r2
    movs r2, #0x0A
    orrs r1, r2
    strb r1, [r0, #0x00]
    ldrh r2, [r0, #0x00]
    ldr r1, _0805AC50 @ =0xFFFFFE0F
    ands r1, r2
    strh r1, [r0, #0x00]
    ldr r1, _0805AC54 @ =0x080F2C22
    ldrb r2, [r1, #0x01]
    lsls r2, r2, #0x01
    ldrb r3, [r0, #0x01]
    movs r1, #0x01
    ands r1, r3
    orrs r1, r2
    strb r1, [r0, #0x01]
    bx lr
    .byte 0x00, 0x00
_0805AC50: .4byte 0xFFFFFE0F
_0805AC54: .4byte 0x080F2C22
    thumb_func_start sub_805AC58
sub_805AC58:
    push {r4, r5, lr}
    mov r12, r0
    adds r0, #0x72
    ldr r0, [r0, #0x00]
    lsls r1, r0, #0x10
    lsrs r3, r1, #0x19
    lsls r0, r0, #0x17
    lsrs r4, r0, #0x1B
    movs r0, #0xCA
    lsls r0, r0, #0x01
    add r0, r12
    ldrh r2, [r0, #0x00]
    ldr r1, _0805AC84 @ =0x080F2C38
    lsls r0, r4, #0x01
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    adds r5, r1, #0x0
    cmp r0, #0x01
    bne _0805AC88
    movs r0, #0x80
    lsls r0, r0, #0x06
    b _0805AC8C
_0805AC84: .4byte 0x080F2C38
_0805AC88:
    movs r0, #0x80
    lsls r0, r0, #0x07
_0805AC8C:
    adds r1, r2, #0x0
    orrs r1, r0
    movs r0, #0xCA
    lsls r0, r0, #0x01
    add r0, r12
    strh r1, [r0, #0x00]
    subs r0, r3, #0x1
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    cmp r3, #0x00
    beq _0805ACB4
    mov r2, r12
    adds r2, #0x72
    lsls r3, r3, #0x01
    ldrb r1, [r2, #0x01]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r3
    strb r0, [r2, #0x01]
    b _0805ACF4
_0805ACB4:
    mov r3, r12
    adds r3, #0x72
    adds r0, r4, #0x1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    movs r1, #0x1F
    ands r1, r4
    lsls r1, r1, #0x04
    ldrh r2, [r3, #0x00]
    ldr r0, _0805ACE8 @ =0xFFFFFE0F
    ands r0, r2
    orrs r0, r1
    strh r0, [r3, #0x00]
    lsls r0, r4, #0x01
    adds r1, r5, #0x1
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0805ACEC
    lsls r2, r0, #0x01
    ldrb r1, [r3, #0x01]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r2
    strb r0, [r3, #0x01]
    b _0805ACF4
_0805ACE8: .4byte 0xFFFFFE0F
_0805ACEC:
    mov r0, r12
    movs r1, #0x02
    bl sub_803D950
_0805ACF4:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805ACFC
sub_805ACFC:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r3, _0805AD58 @ =0x03002E20
    movs r0, #0x72
    adds r0, r0, r4
    mov r12, r0
    ldrb r1, [r0, #0x00]
    movs r0, #0x10
    negs r0, r0
    ands r0, r1
    movs r1, #0x03
    orrs r0, r1
    mov r1, r12
    strb r0, [r1, #0x00]
    ldr r0, _0805AD5C @ =0x080F2C38
    ldrb r1, [r0, #0x01]
    lsls r1, r1, #0x01
    mov r0, r12
    ldrb r2, [r0, #0x01]
    movs r0, #0x01
    ands r0, r2
    orrs r0, r1
    mov r1, r12
    strb r0, [r1, #0x01]
    ldrh r1, [r1, #0x00]
    ldr r0, _0805AD60 @ =0xFFFFFE0F
    ands r0, r1
    mov r1, r12
    strh r0, [r1, #0x00]
    ldr r0, _0805AD64 @ =0x00000838
    adds r3, r3, r0
    ldr r0, [r3, #0x00]
    cmp r4, r0
    bne _0805AD50
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0805AD50
    adds r0, r4, #0x0
    bl sub_805C354
_0805AD50:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805AD58: .4byte 0x03002E20
_0805AD5C: .4byte 0x080F2C38
_0805AD60: .4byte 0xFFFFFE0F
_0805AD64: .4byte 0x00000838
    thumb_func_start sub_805AD68
sub_805AD68:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    ldr r3, _0805AE04 @ =0x03002E20
    adds r5, r3, #0x0
    adds r5, #0x24
    movs r0, #0x72
    adds r0, r0, r4
    mov r12, r0
    ldrb r1, [r0, #0x00]
    movs r0, #0x10
    negs r0, r0
    ands r0, r1
    movs r1, #0x0C
    orrs r0, r1
    mov r1, r12
    strb r0, [r1, #0x00]
    ldr r0, _0805AE08 @ =0x080F2C48
    ldrb r1, [r0, #0x01]
    lsls r1, r1, #0x01
    mov r0, r12
    ldrb r2, [r0, #0x01]
    movs r0, #0x01
    ands r0, r2
    orrs r0, r1
    mov r1, r12
    strb r0, [r1, #0x01]
    ldrh r1, [r1, #0x00]
    ldr r0, _0805AE0C @ =0xFFFFFE0F
    ands r0, r1
    mov r1, r12
    strh r0, [r1, #0x00]
    ldr r0, _0805AE10 @ =0x00000838
    adds r3, r3, r0
    ldr r0, [r3, #0x00]
    cmp r4, r0
    bne _0805ADE6
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0805ADE6
    ldr r2, _0805AE14 @ =0x08102414
    ldr r0, _0805AE18 @ =0x08102498
    movs r1, #0xA1
    lsls r1, r1, #0x03
    adds r0, r0, r1
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r0, [r0, #0x00]
    bl m4aMPlayStop
    movs r0, #0xCD
    lsls r0, r0, #0x01
    adds r2, r4, r0
    ldrb r1, [r2, #0x00]
    movs r0, #0xFC
    ands r0, r1
    movs r1, #0xDF
    ands r0, r1
    strb r0, [r2, #0x00]
_0805ADE6:
    ldr r1, _0805AE1C @ =0x00000814
    adds r0, r5, r1
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0805ADFC
    movs r0, #0xB6
    bl m4aSongNumStart
_0805ADFC:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805AE04: .4byte 0x03002E20
_0805AE08: .4byte 0x080F2C48
_0805AE0C: .4byte 0xFFFFFE0F
_0805AE10: .4byte 0x00000838
_0805AE14: .4byte 0x08102414
_0805AE18: .4byte 0x08102498
_0805AE1C: .4byte 0x00000814
    thumb_func_start sub_805AE20
sub_805AE20:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    ldr r6, _0805AE64 @ =0x03002E20
    movs r0, #0x72
    adds r0, r0, r4
    mov r12, r0
    ldr r0, [r0, #0x00]
    lsls r1, r0, #0x10
    lsrs r1, r1, #0x19
    lsls r0, r0, #0x17
    lsrs r5, r0, #0x1B
    movs r7, #0xCA
    lsls r7, r7, #0x01
    adds r3, r4, r7
    ldrh r2, [r3, #0x00]
    movs r7, #0x80
    lsls r7, r7, #0x04
    adds r0, r7, #0x0
    orrs r0, r2
    strh r0, [r3, #0x00]
    subs r1, #0x01
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    cmp r1, #0x00
    beq _0805AE68
    lsls r2, r1, #0x01
    mov r0, r12
    ldrb r1, [r0, #0x01]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r2
    mov r1, r12
    strb r0, [r1, #0x01]
    b _0805AEE6
_0805AE64: .4byte 0x03002E20
_0805AE68:
    adds r0, r5, #0x1
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    movs r1, #0x1F
    ands r1, r5
    lsls r1, r1, #0x04
    mov r7, r12
    ldrh r2, [r7, #0x00]
    ldr r0, _0805AE9C @ =0xFFFFFE0F
    ands r0, r2
    orrs r0, r1
    strh r0, [r7, #0x00]
    ldr r0, _0805AEA0 @ =0x080F2C48
    lsls r1, r5, #0x01
    adds r0, #0x01
    adds r1, r1, r0
    ldrb r0, [r1, #0x00]
    cmp r0, #0x00
    beq _0805AEA4
    lsls r2, r0, #0x01
    ldrb r1, [r7, #0x01]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r2
    strb r0, [r7, #0x01]
    b _0805AEE6
_0805AE9C: .4byte 0xFFFFFE0F
_0805AEA0: .4byte 0x080F2C48
_0805AEA4:
    adds r0, r4, #0x0
    movs r1, #0x02
    bl sub_803D950
    ldr r1, _0805AEEC @ =0x00000838
    adds r0, r6, r1
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _0805AEC6
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0805AEC6
    adds r0, r4, #0x0
    bl sub_805C388
_0805AEC6:
    movs r7, #0xCA
    lsls r7, r7, #0x01
    adds r2, r4, r7
    ldrh r1, [r2, #0x00]
    ldr r0, _0805AEF0 @ =0x0000F7FF
    ands r0, r1
    strh r0, [r2, #0x00]
    adds r2, r4, #0x0
    adds r2, #0xD8
    ldrb r1, [r2, #0x00]
    movs r0, #0x04
    negs r0, r0
    ands r0, r1
    movs r1, #0x02
    orrs r0, r1
    strb r0, [r2, #0x00]
_0805AEE6:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0805AEEC: .4byte 0x00000838
_0805AEF0: .4byte 0x0000F7FF
    thumb_func_start sub_805AEF4
sub_805AEF4:
    adds r0, #0x72
    ldrb r2, [r0, #0x00]
    movs r1, #0x10
    negs r1, r1
    ands r1, r2
    movs r2, #0x0B
    orrs r1, r2
    strb r1, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_805AF08
sub_805AF08:
    push {lr}
    adds r2, r0, #0x0
    adds r0, #0xB4
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0805AF22
    adds r0, r2, #0x0
    movs r1, #0x02
    bl sub_803D950
_0805AF22:
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805AF28
sub_805AF28:
    adds r0, #0x72
    ldrb r2, [r0, #0x00]
    movs r1, #0x10
    negs r1, r1
    ands r1, r2
    movs r2, #0x0D
    orrs r1, r2
    strb r1, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_805AF3C
sub_805AF3C:
    push {lr}
    adds r3, r0, #0x0
    ldr r2, _0805AF78 @ =0x03002E20
    movs r0, #0x72
    adds r0, r0, r3
    mov r12, r0
    ldrb r1, [r0, #0x00]
    movs r0, #0x10
    negs r0, r0
    ands r0, r1
    movs r1, #0x0E
    orrs r0, r1
    mov r1, r12
    strb r0, [r1, #0x00]
    ldr r0, _0805AF7C @ =0x00000838
    adds r2, r2, r0
    ldr r0, [r2, #0x00]
    cmp r3, r0
    bne _0805AF72
    ldr r0, [r3, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0805AF72
    adds r0, r3, #0x0
    bl sub_805C5C8
_0805AF72:
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805AF78: .4byte 0x03002E20
_0805AF7C: .4byte 0x00000838
    thumb_func_start sub_805AF80
sub_805AF80:
    push {lr}
    adds r2, r0, #0x0
    adds r0, #0xB4
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0805AF9A
    adds r0, r2, #0x0
    movs r1, #0x02
    bl sub_803D950
_0805AF9A:
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start nullsub_12
nullsub_12: @ 0805AFA0
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_805AFA4
sub_805AFA4:
    push {r4, lr}
    adds r4, r0, #0x0
    movs r0, #0x6E
    adds r0, r0, r4
    mov r12, r0
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x10
    lsrs r0, r0, #0x19
    lsls r1, r1, #0x17
    lsrs r3, r1, #0x1B
    subs r0, #0x01
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x00
    bne _0805AFEA
    adds r0, r3, #0x1
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    movs r1, #0x1F
    ands r1, r3
    lsls r1, r1, #0x04
    mov r0, r12
    ldrh r2, [r0, #0x00]
    ldr r0, _0805AFFC @ =0xFFFFFE0F
    ands r0, r2
    orrs r0, r1
    mov r1, r12
    strh r0, [r1, #0x00]
    ldr r0, _0805B000 @ =0x080F2C50
    lsls r1, r3, #0x01
    adds r0, #0x01
    adds r1, r1, r0
    ldrb r0, [r1, #0x00]
    cmp r0, #0x00
    beq _0805B004
_0805AFEA:
    lsls r2, r0, #0x01
    mov r0, r12
    ldrb r1, [r0, #0x01]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r2
    mov r1, r12
    strb r0, [r1, #0x01]
    b _0805B018
_0805AFFC: .4byte 0xFFFFFE0F
_0805B000: .4byte 0x080F2C50
_0805B004:
    adds r0, r4, #0x0
    movs r1, #0x00
    bl sub_803D950
    adds r0, r4, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r2, #0x08
    eors r1, r2
    strb r1, [r0, #0x00]
_0805B018:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805B020
sub_805B020:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r3, _0805B06C @ =0x03002E20
    movs r0, #0x6E
    adds r0, r0, r4
    mov r12, r0
    ldrb r0, [r0, #0x00]
    movs r1, #0x0F
    orrs r0, r1
    mov r1, r12
    strb r0, [r1, #0x00]
    ldr r0, _0805B070 @ =0x080F2C50
    ldrb r1, [r0, #0x01]
    lsls r1, r1, #0x01
    mov r0, r12
    ldrb r2, [r0, #0x01]
    movs r0, #0x01
    ands r0, r2
    orrs r0, r1
    mov r1, r12
    strb r0, [r1, #0x01]
    ldrh r1, [r1, #0x00]
    ldr r0, _0805B074 @ =0xFFFFFE0F
    ands r0, r1
    mov r1, r12
    strh r0, [r1, #0x00]
    ldr r0, _0805B078 @ =0x00000838
    adds r3, r3, r0
    ldr r0, [r3, #0x00]
    cmp r4, r0
    bne _0805B064
    adds r0, r4, #0x0
    bl sub_805C050
_0805B064:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805B06C: .4byte 0x03002E20
_0805B070: .4byte 0x080F2C50
_0805B074: .4byte 0xFFFFFE0F
_0805B078: .4byte 0x00000838
    thumb_func_start sub_805B07C
sub_805B07C:
    push {r4, r5, lr}
    mov r12, r0
    ldr r0, [r0, #0x70]
    lsls r2, r0, #0x10
    lsrs r2, r2, #0x19
    lsls r0, r0, #0x17
    lsrs r4, r0, #0x1B
    ldr r5, _0805B0C0 @ =0x080F2C54
    lsls r1, r4, #0x01
    adds r1, r1, r4
    adds r0, r1, r5
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x01
    movs r3, #0xCB
    lsls r3, r3, #0x01
    add r3, r12
    strh r0, [r3, #0x00]
    adds r0, r5, #0x1
    adds r1, r1, r0
    ldrb r0, [r1, #0x00]
    lsls r0, r0, #0x01
    movs r1, #0xCC
    lsls r1, r1, #0x01
    add r1, r12
    strh r0, [r1, #0x00]
    subs r2, #0x01
    lsls r2, r2, #0x18
    lsrs r3, r2, #0x18
    cmp r3, #0x00
    beq _0805B0C4
    mov r2, r12
    adds r2, #0x71
    lsls r3, r3, #0x01
    b _0805B0F2
_0805B0C0: .4byte 0x080F2C54
_0805B0C4:
    adds r0, r4, #0x1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    mov r3, r12
    adds r3, #0x70
    movs r1, #0x1F
    ands r1, r4
    lsls r1, r1, #0x04
    ldrh r2, [r3, #0x00]
    ldr r0, _0805B100 @ =0xFFFFFE0F
    ands r0, r2
    orrs r0, r1
    strh r0, [r3, #0x00]
    lsls r0, r4, #0x01
    adds r0, r0, r4
    adds r1, r5, #0x2
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0805B104
    mov r2, r12
    adds r2, #0x71
    lsls r3, r0, #0x01
_0805B0F2:
    ldrb r1, [r2, #0x00]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r3
    strb r0, [r2, #0x00]
    b _0805B10C
    .byte 0x00, 0x00
_0805B100: .4byte 0xFFFFFE0F
_0805B104:
    mov r0, r12
    movs r1, #0x01
    bl sub_803D950
_0805B10C:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805B114
sub_805B114:
    adds r3, r0, #0x0
    ldr r0, [r3, #0x70]
    lsls r0, r0, #0x1C
    lsrs r0, r0, #0x1C
    cmp r0, #0x01
    beq _0805B158
    cmp r0, #0x01
    blt _0805B12C
    cmp r0, #0x06
    bgt _0805B12C
    cmp r0, #0x04
    bge _0805B158
_0805B12C:
    adds r2, r3, #0x0
    adds r2, #0x70
    ldrb r1, [r2, #0x00]
    movs r0, #0x10
    negs r0, r0
    ands r0, r1
    movs r1, #0x04
    orrs r0, r1
    strb r0, [r2, #0x00]
    ldrh r1, [r2, #0x00]
    ldr r0, _0805B15C @ =0xFFFFFE0F
    ands r0, r1
    strh r0, [r2, #0x00]
    ldr r0, _0805B160 @ =0x080F2C54
    adds r3, #0x71
    ldrb r1, [r0, #0x02]
    lsls r1, r1, #0x01
    ldrb r2, [r3, #0x00]
    movs r0, #0x01
    ands r0, r2
    orrs r0, r1
    strb r0, [r3, #0x00]
_0805B158:
    bx lr
    .byte 0x00, 0x00
_0805B15C: .4byte 0xFFFFFE0F
_0805B160: .4byte 0x080F2C54
    thumb_func_start sub_805B164
sub_805B164:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    ldr r0, [r5, #0x70]
    lsls r2, r0, #0x10
    lsrs r2, r2, #0x19
    lsls r0, r0, #0x17
    lsrs r4, r0, #0x1B
    ldr r3, _0805B1A4 @ =0x080F2C86
    lsls r1, r4, #0x01
    adds r1, r1, r4
    adds r0, r1, r3
    ldrb r0, [r0, #0x00]
    movs r6, #0xCB
    lsls r6, r6, #0x01
    strh r0, [r6, r5]
    adds r3, #0x01
    adds r1, r1, r3
    ldrb r0, [r1, #0x00]
    lsls r0, r0, #0x07
    movs r3, #0xCC
    lsls r3, r3, #0x01
    adds r1, r5, r3
    strh r0, [r1, #0x00]
    subs r2, #0x01
    lsls r2, r2, #0x18
    lsrs r3, r2, #0x18
    cmp r3, #0x00
    beq _0805B1A8
    adds r2, r5, #0x0
    adds r2, #0x71
    lsls r3, r3, #0x01
    b _0805B1D6
_0805B1A4: .4byte 0x080F2C86
_0805B1A8:
    adds r0, r4, #0x1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    adds r3, r5, #0x0
    adds r3, #0x70
    movs r1, #0x1F
    ands r1, r4
    lsls r1, r1, #0x04
    ldrh r2, [r3, #0x00]
    ldr r0, _0805B1E4 @ =0xFFFFFE0F
    ands r0, r2
    orrs r0, r1
    strh r0, [r3, #0x00]
    ldr r1, _0805B1E8 @ =0x080F2C80
    lsls r0, r4, #0x01
    adds r0, r0, r4
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0805B1EC
    adds r2, r5, #0x0
    adds r2, #0x71
    lsls r3, r0, #0x01
_0805B1D6:
    ldrb r1, [r2, #0x00]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r3
    strb r0, [r2, #0x00]
    b _0805B1F4
    .byte 0x00, 0x00
_0805B1E4: .4byte 0xFFFFFE0F
_0805B1E8: .4byte 0x080F2C80
_0805B1EC:
    adds r0, r5, #0x0
    movs r1, #0x06
    bl sub_803D214
_0805B1F4:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805B1FC
sub_805B1FC:
    push {r4, r5, lr}
    mov r12, r0
    ldr r0, [r0, #0x70]
    lsls r2, r0, #0x10
    lsrs r2, r2, #0x19
    lsls r0, r0, #0x17
    lsrs r4, r0, #0x1B
    ldr r5, _0805B248 @ =0x080F2C86
    lsls r1, r4, #0x01
    adds r1, r1, r4
    adds r0, r1, r5
    ldrb r0, [r0, #0x00]
    movs r3, #0xCB
    lsls r3, r3, #0x01
    add r3, r12
    strh r0, [r3, #0x00]
    adds r0, r5, #0x1
    adds r1, r1, r0
    ldrb r0, [r1, #0x00]
    lsls r0, r0, #0x07
    movs r1, #0xCC
    lsls r1, r1, #0x01
    add r1, r12
    strh r0, [r1, #0x00]
    mov r1, r12
    movs r3, #0x22
    ldsh r0, [r1, r3]
    subs r0, #0x10
    strh r0, [r1, #0x22]
    subs r2, #0x01
    lsls r2, r2, #0x18
    lsrs r3, r2, #0x18
    cmp r3, #0x00
    beq _0805B24C
    mov r2, r12
    adds r2, #0x71
    lsls r3, r3, #0x01
    b _0805B27A
_0805B248: .4byte 0x080F2C86
_0805B24C:
    adds r0, r4, #0x1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    mov r3, r12
    adds r3, #0x70
    movs r1, #0x1F
    ands r1, r4
    lsls r1, r1, #0x04
    ldrh r2, [r3, #0x00]
    ldr r0, _0805B288 @ =0xFFFFFE0F
    ands r0, r2
    orrs r0, r1
    strh r0, [r3, #0x00]
    lsls r0, r4, #0x01
    adds r0, r0, r4
    adds r1, r5, #0x2
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0805B28C
    mov r2, r12
    adds r2, #0x71
    lsls r3, r0, #0x01
_0805B27A:
    ldrb r1, [r2, #0x00]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r3
    strb r0, [r2, #0x00]
    b _0805B294
    .byte 0x00, 0x00
_0805B288: .4byte 0xFFFFFE0F
_0805B28C:
    mov r0, r12
    movs r1, #0x01
    bl sub_803D950
_0805B294:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805B29C
sub_805B29C:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    ldr r0, [r5, #0x70]
    lsls r2, r0, #0x10
    lsrs r2, r2, #0x19
    lsls r0, r0, #0x17
    lsrs r4, r0, #0x1B
    ldr r3, _0805B2E0 @ =0x080F2C8C
    lsls r1, r4, #0x01
    adds r1, r1, r4
    adds r0, r1, r3
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x01
    movs r6, #0xCB
    lsls r6, r6, #0x01
    strh r0, [r6, r5]
    adds r3, #0x01
    adds r1, r1, r3
    ldrb r0, [r1, #0x00]
    lsls r0, r0, #0x01
    movs r3, #0xCC
    lsls r3, r3, #0x01
    adds r1, r5, r3
    strh r0, [r1, #0x00]
    subs r2, #0x01
    lsls r2, r2, #0x18
    lsrs r3, r2, #0x18
    cmp r3, #0x00
    beq _0805B2E4
    adds r2, r5, #0x0
    adds r2, #0x71
    lsls r3, r3, #0x01
    b _0805B33E
    .byte 0x00, 0x00
_0805B2E0: .4byte 0x080F2C8C
_0805B2E4:
    adds r2, r5, #0x0
    adds r2, #0x70
    ldrh r1, [r2, #0x00]
    movs r0, #0xF8
    lsls r0, r0, #0x01
    ands r0, r1
    adds r6, r2, #0x0
    cmp r0, #0x00
    bne _0805B312
    ldr r0, _0805B34C @ =0x03002E20
    ldr r1, _0805B350 @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r5, r0
    bne _0805B312
    ldr r0, [r5, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0805B312
    movs r0, #0x85
    bl m4aSongNumStart
_0805B312:
    adds r0, r4, #0x1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    movs r1, #0x1F
    ands r1, r4
    lsls r1, r1, #0x04
    ldrh r2, [r6, #0x00]
    ldr r0, _0805B354 @ =0xFFFFFE0F
    ands r0, r2
    orrs r0, r1
    strh r0, [r6, #0x00]
    ldr r1, _0805B358 @ =0x080F2C8C
    lsls r0, r4, #0x01
    adds r0, r0, r4
    adds r1, #0x02
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0805B35C
    adds r2, r5, #0x0
    adds r2, #0x71
    lsls r3, r0, #0x01
_0805B33E:
    ldrb r1, [r2, #0x00]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r3
    strb r0, [r2, #0x00]
    b _0805B364
    .byte 0x00, 0x00
_0805B34C: .4byte 0x03002E20
_0805B350: .4byte 0x00000838
_0805B354: .4byte 0xFFFFFE0F
_0805B358: .4byte 0x080F2C8C
_0805B35C:
    adds r0, r5, #0x0
    movs r1, #0x01
    bl sub_803D950
_0805B364:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805B36C
sub_805B36C:
    adds r3, r0, #0x0
    adds r3, #0x70
    ldrb r2, [r3, #0x00]
    movs r1, #0x10
    negs r1, r1
    ands r1, r2
    movs r2, #0x05
    orrs r1, r2
    strb r1, [r3, #0x00]
    ldrh r2, [r3, #0x00]
    ldr r1, _0805B39C @ =0xFFFFFE0F
    ands r1, r2
    strh r1, [r3, #0x00]
    ldr r1, _0805B3A0 @ =0x080F2C80
    adds r0, #0x71
    ldrb r2, [r1, #0x02]
    lsls r2, r2, #0x01
    ldrb r3, [r0, #0x00]
    movs r1, #0x01
    ands r1, r3
    orrs r1, r2
    strb r1, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
_0805B39C: .4byte 0xFFFFFE0F
_0805B3A0: .4byte 0x080F2C80
    thumb_func_start sub_805B3A4
sub_805B3A4:
    adds r3, r0, #0x0
    adds r3, #0x70
    ldrb r2, [r3, #0x00]
    movs r1, #0x10
    negs r1, r1
    ands r1, r2
    movs r2, #0x06
    orrs r1, r2
    strb r1, [r3, #0x00]
    ldrh r2, [r3, #0x00]
    ldr r1, _0805B3D4 @ =0xFFFFFE0F
    ands r1, r2
    strh r1, [r3, #0x00]
    ldr r1, _0805B3D8 @ =0x080F2C86
    adds r0, #0x71
    ldrb r2, [r1, #0x02]
    lsls r2, r2, #0x01
    ldrb r3, [r0, #0x00]
    movs r1, #0x01
    ands r1, r3
    orrs r1, r2
    strb r1, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
_0805B3D4: .4byte 0xFFFFFE0F
_0805B3D8: .4byte 0x080F2C86
    thumb_func_start sub_805B3DC
sub_805B3DC:
    adds r3, r0, #0x0
    ldr r0, [r3, #0x70]
    lsls r0, r0, #0x1C
    lsrs r0, r0, #0x1C
    cmp r0, #0x05
    bgt _0805B3F2
    cmp r0, #0x04
    bge _0805B422
    cmp r0, #0x01
    beq _0805B422
    b _0805B3F6
_0805B3F2:
    cmp r0, #0x07
    beq _0805B422
_0805B3F6:
    adds r2, r3, #0x0
    adds r2, #0x70
    ldrb r1, [r2, #0x00]
    movs r0, #0x10
    negs r0, r0
    ands r0, r1
    movs r1, #0x07
    orrs r0, r1
    strb r0, [r2, #0x00]
    ldrh r1, [r2, #0x00]
    ldr r0, _0805B424 @ =0xFFFFFE0F
    ands r0, r1
    strh r0, [r2, #0x00]
    ldr r0, _0805B428 @ =0x080F2C8C
    adds r3, #0x71
    ldrb r1, [r0, #0x02]
    lsls r1, r1, #0x01
    ldrb r2, [r3, #0x00]
    movs r0, #0x01
    ands r0, r2
    orrs r0, r1
    strb r0, [r3, #0x00]
_0805B422:
    bx lr
_0805B424: .4byte 0xFFFFFE0F
_0805B428: .4byte 0x080F2C8C
    thumb_func_start sub_805B42C
sub_805B42C:
    movs r2, #0x00
    str r2, [r0, #0x00]
    str r2, [r0, #0x04]
    str r2, [r0, #0x08]
    str r2, [r0, #0x0C]
    strb r2, [r0, #0x10]
    strh r2, [r0, #0x14]
    strh r2, [r0, #0x16]
    movs r1, #0x80
    lsls r1, r1, #0x01
    str r1, [r0, #0x1C]
    str r1, [r0, #0x20]
    strh r1, [r0, #0x24]
    str r2, [r0, #0x18]
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_805B44C
sub_805B44C:
    push {lr}
    adds r1, r0, #0x0
    ldr r0, [r1, #0x0C]
    cmp r0, #0x00
    ble _0805B45E
    subs r0, #0x01
    str r0, [r1, #0x0C]
    movs r0, #0x01
    b _0805B488
_0805B45E:
    ldr r2, [r1, #0x08]
    ldr r3, [r2, #0x00]
    cmp r3, #0x00
    bne _0805B46C
    ldr r0, [r2, #0x04]
    cmp r0, #0x00
    beq _0805B47A
_0805B46C:
    str r3, [r1, #0x04]
    ldr r0, [r2, #0x04]
    str r0, [r1, #0x0C]
    adds r2, #0x08
    str r2, [r1, #0x08]
    movs r0, #0x01
    b _0805B488
_0805B47A:
    ldr r0, _0805B48C @ =0x03002E20
    movs r2, #0xEA
    lsls r2, r2, #0x03
    adds r0, r0, r2
    bl sub_805B520
    movs r0, #0x00
_0805B488:
    pop {r1}
    bx r1
_0805B48C: .4byte 0x03002E20
    thumb_func_start sub_805B490
sub_805B490:
    push {lr}
    adds r1, r0, #0x0
    ldr r0, _0805B4A4 @ =0x03002E20
    movs r2, #0xEA
    lsls r2, r2, #0x03
    adds r0, r0, r2
    bl sub_805B520
    pop {r0}
    bx r0
_0805B4A4: .4byte 0x03002E20
    thumb_func_start sub_805B4A8
sub_805B4A8:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    adds r6, r1, #0x0
    movs r4, #0x00
_0805B4B0:
    adds r0, r6, #0x0
    movs r1, #0x01
    movs r2, #0x3C
    bl frmheap_calloc
    adds r2, r5, r4
    movs r1, #0x00
    strb r1, [r2, #0x00]
    lsls r2, r4, #0x02
    adds r1, r5, #0x0
    adds r1, #0x20
    adds r1, r1, r2
    str r0, [r1, #0x00]
    adds r4, #0x01
    cmp r4, #0x1F
    ble _0805B4B0
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805B4D8
sub_805B4D8:
    push {r4, lr}
    adds r4, r0, #0x0
    movs r3, #0x00
    ldrb r1, [r4, #0x00]
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _0805B4FC
    movs r2, #0x01
_0805B4EA:
    adds r3, #0x01
    cmp r3, #0x1E
    bgt _0805B4FC
    adds r0, r4, r3
    ldrb r1, [r0, #0x00]
    adds r0, r2, #0x0
    ands r0, r1
    cmp r0, #0x00
    bne _0805B4EA
_0805B4FC:
    adds r2, r4, r3
    ldrb r1, [r2, #0x00]
    movs r0, #0x01
    orrs r0, r1
    strb r0, [r2, #0x00]
    lsls r1, r3, #0x02
    adds r0, r4, #0x0
    adds r0, #0x20
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    adds r0, r4, #0x0
    bl sub_805B42C
    adds r0, r4, #0x0
    pop {r4}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_805B520
sub_805B520:
    push {r4, lr}
    adds r3, r0, #0x0
    adds r4, r1, #0x0
    movs r2, #0x00
    ldr r0, [r3, #0x20]
    cmp r0, r4
    bne _0805B532
    strb r2, [r3, #0x00]
    b _0805B54C
_0805B532:
    adds r2, #0x01
    cmp r2, #0x1F
    bgt _0805B54C
    lsls r0, r2, #0x02
    adds r1, r3, #0x0
    adds r1, #0x20
    adds r1, r1, r0
    ldr r0, [r1, #0x00]
    cmp r0, r4
    bne _0805B532
    adds r1, r3, r2
    movs r0, #0x00
    strb r0, [r1, #0x00]
_0805B54C:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805B554
sub_805B554:
    push {r4, r5, r6, lr}
    mov r6, r8
    push {r6}
    adds r5, r0, #0x0
    adds r6, r1, #0x0
    adds r4, r2, #0x0
    mov r8, r3
    lsls r5, r5, #0x10
    lsrs r5, r5, #0x10
    lsls r6, r6, #0x10
    lsrs r6, r6, #0x10
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    ldr r0, _0805B5A8 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    adds r2, r0, #0x0
    strh r4, [r2, #0x24]
    ldr r0, _0805B5AC @ =0x0805B44D
    str r0, [r2, #0x00]
    strh r5, [r2, #0x14]
    strh r6, [r2, #0x16]
    ldr r0, _0805B5B0 @ =0x080F2CBC
    mov r1, r8
    cmp r1, #0x00
    beq _0805B590
    ldr r0, _0805B5B4 @ =0x080F2CEC
_0805B590:
    str r0, [r2, #0x08]
    ldrb r1, [r2, #0x10]
    movs r0, #0x01
    orrs r0, r1
    strb r0, [r2, #0x10]
    adds r0, r2, #0x0
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805B5A8: .4byte 0x03002E20
_0805B5AC: .4byte sub_805B44C
_0805B5B0: .4byte 0x080F2CBC
_0805B5B4: .4byte 0x080F2CEC
    thumb_func_start sub_805B5B8
sub_805B5B8:
    push {r4, r5, r6, lr}
    mov r6, r8
    push {r6}
    adds r5, r0, #0x0
    adds r6, r1, #0x0
    adds r4, r2, #0x0
    mov r8, r3
    lsls r5, r5, #0x10
    lsrs r5, r5, #0x10
    lsls r6, r6, #0x10
    lsrs r6, r6, #0x10
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    ldr r0, _0805B60C @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    adds r2, r0, #0x0
    strh r4, [r2, #0x24]
    ldr r0, _0805B610 @ =0x0805B44D
    str r0, [r2, #0x00]
    strh r5, [r2, #0x14]
    strh r6, [r2, #0x16]
    ldr r0, _0805B614 @ =0x080F2D1C
    mov r1, r8
    cmp r1, #0x00
    beq _0805B5F4
    ldr r0, _0805B618 @ =0x080F2D4C
_0805B5F4:
    str r0, [r2, #0x08]
    ldrb r1, [r2, #0x10]
    movs r0, #0x01
    orrs r0, r1
    strb r0, [r2, #0x10]
    adds r0, r2, #0x0
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805B60C: .4byte 0x03002E20
_0805B610: .4byte sub_805B44C
_0805B614: .4byte 0x080F2D1C
_0805B618: .4byte 0x080F2D4C
    thumb_func_start sub_805B61C
sub_805B61C:
    push {r4, r5, r6, lr}
    mov r6, r8
    push {r6}
    adds r5, r0, #0x0
    adds r6, r1, #0x0
    adds r4, r2, #0x0
    mov r8, r3
    lsls r5, r5, #0x10
    lsrs r5, r5, #0x10
    lsls r6, r6, #0x10
    lsrs r6, r6, #0x10
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    ldr r0, _0805B670 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    adds r2, r0, #0x0
    strh r4, [r2, #0x24]
    ldr r0, _0805B674 @ =0x0805B44D
    str r0, [r2, #0x00]
    strh r5, [r2, #0x14]
    strh r6, [r2, #0x16]
    ldr r0, _0805B678 @ =0x080F2D7C
    mov r1, r8
    cmp r1, #0x00
    beq _0805B658
    ldr r0, _0805B67C @ =0x080F2DAC
_0805B658:
    str r0, [r2, #0x08]
    ldrb r1, [r2, #0x10]
    movs r0, #0x01
    orrs r0, r1
    strb r0, [r2, #0x10]
    adds r0, r2, #0x0
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805B670: .4byte 0x03002E20
_0805B674: .4byte sub_805B44C
_0805B678: .4byte 0x080F2D7C
_0805B67C: .4byte 0x080F2DAC
    thumb_func_start sub_805B680
sub_805B680:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r4, r2, #0x0
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    mov r8, r0
    lsls r1, r1, #0x10
    lsrs r6, r1, #0x10
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    lsls r3, r3, #0x18
    lsrs r7, r3, #0x18
    ldr r0, _0805B724 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    adds r5, r0, #0x0
    strh r4, [r5, #0x24]
    cmp r7, #0x00
    bne _0805B6E0
    ldr r2, _0805B728 @ =0x08102414
    ldr r0, _0805B72C @ =0x08102498
    movs r1, #0xCA
    lsls r1, r1, #0x02
    adds r3, r0, r1
    ldrh r1, [r3, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    ldrh r0, [r1, #0x04]
    cmp r0, #0x00
    beq _0805B6DA
    movs r2, #0x00
    ldr r1, [r1, #0x00]
    ldr r0, [r3, #0x00]
    cmp r1, r0
    bne _0805B6D6
    movs r2, #0x01
_0805B6D6:
    cmp r2, #0x00
    beq _0805B6E0
_0805B6DA:
    movs r0, #0x65
    bl m4aSongNumStart
_0805B6E0:
    ldr r0, _0805B730 @ =0x0805B7D1
    str r0, [r5, #0x00]
    movs r2, #0x00
    mov r0, r8
    strh r0, [r5, #0x14]
    strh r6, [r5, #0x16]
    lsls r0, r6, #0x10
    str r0, [r5, #0x2C]
    ldr r0, _0805B734 @ =0x080F2F2C
    lsls r1, r7, #0x02
    adds r0, r1, r0
    ldr r0, [r0, #0x00]
    str r0, [r5, #0x30]
    ldr r0, _0805B738 @ =0x080F2F50
    adds r0, r1, r0
    ldr r0, [r0, #0x00]
    str r0, [r5, #0x34]
    ldr r0, _0805B73C @ =0x080F2F04
    adds r1, r1, r0
    ldr r0, [r1, #0x00]
    str r0, [r5, #0x08]
    ldrb r1, [r5, #0x10]
    movs r0, #0x01
    orrs r0, r1
    strb r0, [r5, #0x10]
    adds r0, r5, #0x0
    adds r0, #0x3A
    strb r2, [r0, #0x00]
    adds r0, r5, #0x0
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
_0805B724: .4byte 0x03002E20
_0805B728: .4byte 0x08102414
_0805B72C: .4byte 0x08102498
_0805B730: .4byte sub_805B7D0
_0805B734: .4byte 0x080F2F2C
_0805B738: .4byte 0x080F2F50
_0805B73C: .4byte 0x080F2F04
    thumb_func_start sub_805B740
sub_805B740:
    push {r4, r5, r6, r7, lr}
    adds r4, r2, #0x0
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    lsls r1, r1, #0x10
    lsrs r6, r1, #0x10
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    ldr r0, _0805B7BC @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    adds r5, r0, #0x0
    strh r4, [r5, #0x24]
    ldr r2, _0805B7C0 @ =0x08102414
    ldr r0, _0805B7C4 @ =0x08102498
    movs r1, #0xCA
    lsls r1, r1, #0x02
    adds r3, r0, r1
    ldrh r1, [r3, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    ldrh r0, [r1, #0x04]
    cmp r0, #0x00
    beq _0805B78C
    movs r2, #0x00
    ldr r1, [r1, #0x00]
    ldr r0, [r3, #0x00]
    cmp r1, r0
    bne _0805B788
    movs r2, #0x01
_0805B788:
    cmp r2, #0x00
    beq _0805B792
_0805B78C:
    movs r0, #0x65
    bl m4aSongNumStart
_0805B792:
    ldr r0, _0805B7C8 @ =0x0805B989
    str r0, [r5, #0x00]
    movs r1, #0x00
    movs r0, #0x00
    strh r7, [r5, #0x14]
    strh r6, [r5, #0x16]
    str r0, [r5, #0x34]
    adds r0, r5, #0x0
    adds r0, #0x38
    strb r1, [r0, #0x00]
    ldr r0, _0805B7CC @ =0x080F2EB4
    str r0, [r5, #0x08]
    ldrb r1, [r5, #0x10]
    movs r0, #0xFE
    ands r0, r1
    strb r0, [r5, #0x10]
    adds r0, r5, #0x0
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805B7BC: .4byte 0x03002E20
_0805B7C0: .4byte 0x08102414
_0805B7C4: .4byte 0x08102498
_0805B7C8: .4byte sub_805B988
_0805B7CC: .4byte 0x080F2EB4
    thumb_func_start sub_805B7D0
sub_805B7D0:
    push {r4, r5, r6, r7, lr}
    adds r7, r0, #0x0
    ldr r0, _0805B8A0 @ =0x03002E20
    ldr r1, _0805B8A4 @ =0x00000838
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    movs r2, #0x24
    ldsh r0, [r1, r2]
    str r0, [r7, #0x1C]
    movs r2, #0x24
    ldsh r0, [r1, r2]
    str r0, [r7, #0x20]
    ldr r1, [r7, #0x30]
    ldrh r0, [r7, #0x14]
    adds r0, r0, r1
    strh r0, [r7, #0x14]
    ldr r0, [r7, #0x2C]
    ldr r2, [r7, #0x34]
    subs r0, r0, r2
    str r0, [r7, #0x2C]
    movs r1, #0x88
    lsls r1, r1, #0x10
    cmp r0, r1
    ble _0805B884
    negs r0, r2
    str r0, [r7, #0x34]
    adds r1, r7, #0x0
    adds r1, #0x3A
    ldrb r0, [r1, #0x00]
    adds r0, #0x01
    strb r0, [r1, #0x00]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    adds r4, r1, #0x0
    cmp r0, #0x03
    bhi _0805B884
    ldr r2, _0805B8A8 @ =0x08102414
    ldr r0, _0805B8AC @ =0x08102498
    movs r1, #0xCC
    lsls r1, r1, #0x02
    adds r3, r0, r1
    ldrh r1, [r3, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    ldrh r0, [r1, #0x04]
    cmp r0, #0x00
    beq _0805B844
    movs r2, #0x00
    ldr r1, [r1, #0x00]
    ldr r0, [r3, #0x00]
    cmp r1, r0
    bne _0805B840
    movs r2, #0x01
_0805B840:
    cmp r2, #0x00
    beq _0805B884
_0805B844:
    ldr r1, _0805B8B0 @ =0x080F2F74
    ldrb r0, [r4, #0x00]
    subs r0, #0x01
    lsls r0, r0, #0x01
    adds r0, r0, r1
    ldrh r6, [r0, #0x00]
    movs r0, #0x66
    bl m4aSongNumStart
    ldr r5, _0805B8A8 @ =0x08102414
    ldr r4, _0805B8AC @ =0x08102498
    movs r2, #0xCC
    lsls r2, r2, #0x02
    adds r4, r4, r2
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayVolumeControl
_0805B884:
    movs r1, #0x2E
    ldsh r0, [r7, r1]
    strh r0, [r7, #0x16]
    ldr r0, [r7, #0x34]
    ldr r2, _0805B8B4 @ =0xFFFF8000
    adds r0, r0, r2
    str r0, [r7, #0x34]
    adds r0, r7, #0x0
    bl sub_805B44C
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805B8A0: .4byte 0x03002E20
_0805B8A4: .4byte 0x00000838
_0805B8A8: .4byte 0x08102414
_0805B8AC: .4byte 0x08102498
_0805B8B0: .4byte 0x080F2F74
_0805B8B4: .4byte 0xFFFF8000
    .byte 0x00, 0xB5, 0x00, 0x04, 0x00, 0x14, 0x09, 0x04, 0x09, 0x14, 0x12, 0x04, 0x12, 0x14, 0x00, 0x23
    .byte 0xFF, 0xF7, 0xDA, 0xFE, 0x02, 0xBC, 0x08, 0x47
    thumb_func_start sub_805B8D0
sub_805B8D0:
    push {r4, lr}
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    lsls r2, r2, #0x10
    asrs r2, r2, #0x10
    movs r4, #0x04
    cmp r3, #0x00
    bne _0805B8E6
    movs r4, #0x03
_0805B8E6:
    adds r3, r4, #0x0
    bl sub_805B680
    pop {r4}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_805B8F4
sub_805B8F4:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    adds r5, r1, #0x0
    adds r6, r3, #0x0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    lsls r5, r5, #0x10
    lsrs r5, r5, #0x10
    lsls r6, r6, #0x18
    lsrs r6, r6, #0x18
    ldr r0, _0805B934 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    ldr r1, _0805B938 @ =0x0805B9C5
    str r1, [r0, #0x00]
    movs r2, #0x00
    strh r4, [r0, #0x14]
    strh r5, [r0, #0x16]
    adds r1, r0, #0x0
    adds r1, #0x38
    strb r2, [r1, #0x00]
    adds r1, #0x01
    strb r6, [r1, #0x00]
    ldr r1, _0805B93C @ =0x080F2EE4
    str r1, [r0, #0x08]
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805B934: .4byte 0x03002E20
_0805B938: .4byte sub_805B9C4
_0805B93C: .4byte 0x080F2EE4
    thumb_func_start sub_805B940
sub_805B940:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    adds r5, r1, #0x0
    adds r6, r3, #0x0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    lsls r5, r5, #0x10
    lsrs r5, r5, #0x10
    lsls r6, r6, #0x18
    lsrs r6, r6, #0x18
    ldr r0, _0805B980 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    ldr r1, _0805B984 @ =0x0805BA05
    str r1, [r0, #0x00]
    movs r2, #0x00
    movs r1, #0x00
    strh r4, [r0, #0x14]
    strh r5, [r0, #0x16]
    str r1, [r0, #0x28]
    adds r1, r0, #0x0
    adds r1, #0x38
    strb r2, [r1, #0x00]
    adds r1, #0x01
    strb r6, [r1, #0x00]
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805B980: .4byte 0x03002E20
_0805B984: .4byte sub_805BA04
    thumb_func_start sub_805B988
sub_805B988:
    push {r4, r5, lr}
    adds r3, r0, #0x0
    adds r5, r3, #0x0
    adds r5, #0x38
    ldrb r0, [r5, #0x00]
    adds r4, r0, #0x0
    cmp r4, #0x03
    bne _0805B9A0
    ldrb r1, [r3, #0x10]
    movs r0, #0x01
    orrs r0, r1
    strb r0, [r3, #0x10]
_0805B9A0:
    ldr r1, [r3, #0x34]
    asrs r2, r1, #0x10
    ldrh r0, [r3, #0x16]
    subs r0, r0, r2
    strh r0, [r3, #0x16]
    movs r0, #0x80
    lsls r0, r0, #0x08
    adds r1, r1, r0
    str r1, [r3, #0x34]
    adds r0, r4, #0x1
    strb r0, [r5, #0x00]
    adds r0, r3, #0x0
    bl sub_805B44C
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805B9C4
sub_805B9C4:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    adds r5, r4, #0x0
    adds r5, #0x38
    ldrb r1, [r5, #0x00]
    adds r6, r1, #0x0
    adds r0, #0x39
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x01
    cmp r1, r0
    bge _0805B9F6
    movs r0, #0x01
    ands r1, r0
    cmp r1, #0x00
    bne _0805B9F2
    movs r1, #0x14
    ldsh r0, [r4, r1]
    movs r2, #0x16
    ldsh r1, [r4, r2]
    movs r3, #0x24
    ldsh r2, [r4, r3]
    bl sub_805B740
_0805B9F2:
    adds r0, r6, #0x1
    strb r0, [r5, #0x00]
_0805B9F6:
    adds r0, r4, #0x0
    bl sub_805B44C
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805BA04
sub_805BA04:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    adds r0, #0x38
    ldrb r5, [r0, #0x00]
    adds r0, #0x01
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x02
    adds r0, #0x08
    cmp r5, r0
    bge _0805BA4A
    cmp r5, #0x07
    bls _0805BA40
    movs r0, #0x03
    ands r0, r5
    cmp r0, #0x00
    bne _0805BA40
    subs r3, r5, #0x4
    asrs r3, r3, #0x02
    subs r3, #0x01
    movs r0, #0x03
    ands r3, r0
    adds r3, #0x01
    movs r1, #0x14
    ldsh r0, [r4, r1]
    movs r2, #0x16
    ldsh r1, [r4, r2]
    movs r6, #0x24
    ldsh r2, [r4, r6]
    bl sub_805B680
_0805BA40:
    adds r1, r5, #0x1
    adds r0, r4, #0x0
    adds r0, #0x38
    strb r1, [r0, #0x00]
    b _0805BA50
_0805BA4A:
    adds r0, r4, #0x0
    bl sub_805B490
_0805BA50:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805BA58
sub_805BA58:
    push {r4, r5, r6, r7, lr}
    add sp, #-0x00C
    adds r5, r0, #0x0
    movs r4, #0x00
    ldr r7, _0805BA94 @ =0x03002E20
    movs r6, #0x00
_0805BA64:
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r7, r1
    bl sub_805B4D8
    lsls r2, r4, #0x02
    mov r3, sp
    adds r1, r3, r2
    str r0, [r1, #0x00]
    str r5, [r0, #0x28]
    ldr r0, [r1, #0x00]
    adds r1, r4, #0x1
    adds r0, #0x2E
    strb r1, [r0, #0x00]
    adds r3, r1, #0x0
    cmp r4, #0x01
    beq _0805BA98
    cmp r4, #0x01
    bgt _0805BA9E
    cmp r4, #0x00
    bne _0805BA9E
    ldr r1, [sp, #0x000]
    movs r0, #0x20
    b _0805BAA6
_0805BA94: .4byte 0x03002E20
_0805BA98:
    ldr r0, [sp, #0x004]
    strh r6, [r0, #0x2C]
    b _0805BAA8
_0805BA9E:
    mov r1, sp
    adds r0, r1, r2
    ldr r1, [r0, #0x00]
    movs r0, #0x40
_0805BAA6:
    strh r0, [r1, #0x2C]
_0805BAA8:
    mov r1, sp
    adds r0, r1, r2
    ldr r1, [r0, #0x00]
    ldr r0, _0805BAC8 @ =0x0805BAD1
    str r0, [r1, #0x00]
    ldr r0, _0805BACC @ =0x0807B534
    str r0, [r1, #0x04]
    adds r4, r3, #0x0
    cmp r4, #0x02
    ble _0805BA64
    ldr r0, [sp, #0x000]
    add sp, #0x00C
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805BAC8: .4byte sub_805BAD0
_0805BACC: .4byte 0x0807B534
    thumb_func_start sub_805BAD0
sub_805BAD0:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x004
    adds r6, r0, #0x0
    ldr r2, _0805BB10 @ =0x03002E20
    ldr r1, _0805BB14 @ =0x00000848
    adds r0, r2, r1
    ldr r3, [r6, #0x28]
    mov r8, r3
    ldr r1, _0805BB18 @ =0x0000017D
    add r1, r8
    ldrb r1, [r1, #0x00]
    str r1, [sp, #0x000]
    movs r3, #0x14
    ldsh r1, [r0, r3]
    mov r0, r8
    adds r0, #0x56
    ldrh r0, [r0, #0x00]
    subs r4, r1, r0
    adds r0, r6, #0x0
    adds r0, #0x2E
    ldrb r0, [r0, #0x00]
    cmp r0, #0x02
    bne _0805BB1C
    movs r0, #0xC0
    lsls r0, r0, #0x05
    adds r4, r4, r0
    b _0805BB28
    .byte 0x00, 0x00
_0805BB10: .4byte 0x03002E20
_0805BB14: .4byte 0x00000848
_0805BB18: .4byte 0x0000017D
_0805BB1C:
    cmp r0, #0x02
    bgt _0805BB24
    cmp r0, #0x01
    beq _0805BB28
_0805BB24:
    ldr r1, _0805BBFC @ =0xFFFFE800
    adds r4, r4, r1
_0805BB28:
    ldr r2, _0805BC00 @ =0x0000FFFF
    mov r9, r2
    ands r4, r2
    ldr r3, _0805BC04 @ =0x080E645C
    lsls r0, r4, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0805BB3A
    adds r0, #0x3F
_0805BB3A:
    asrs r0, r0, #0x06
    ldr r1, _0805BC08 @ =0x000003FF
    adds r2, r1, #0x0
    ands r0, r2
    lsls r0, r0, #0x02
    adds r0, r0, r3
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r7, r0, #0x03
    movs r1, #0x2C
    ldsh r0, [r6, r1]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0805BB5C
    adds r0, #0x3F
_0805BB5C:
    asrs r0, r0, #0x06
    ands r0, r2
    lsls r0, r0, #0x02
    adds r0, r0, r3
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r5, r0, #0x01
    ldrh r0, [r6, #0x2C]
    adds r0, #0x02
    strh r0, [r6, #0x2C]
    adds r0, r6, #0x0
    adds r0, #0x2E
    ldrb r1, [r0, #0x00]
    mov r10, r0
    cmp r1, #0x01
    bne _0805BB82
    ldr r2, _0805BC0C @ =0xFFFA0000
    adds r5, r5, r2
_0805BB82:
    mov r3, r8
    movs r0, #0x24
    ldsh r1, [r3, r0]
    movs r0, #0x80
    lsls r0, r0, #0x09
    bl __divsi3
    adds r1, r0, #0x0
    adds r0, r7, #0x0
    muls r0, r1
    cmp r0, #0x00
    bge _0805BB9E
    ldr r2, _0805BC10 @ =0x00FFFFFF
    adds r0, r0, r2
_0805BB9E:
    asrs r7, r0, #0x18
    adds r0, r5, #0x0
    muls r0, r1
    cmp r0, #0x00
    bge _0805BBAC
    ldr r3, _0805BC10 @ =0x00FFFFFF
    adds r0, r0, r3
_0805BBAC:
    asrs r5, r0, #0x18
    mov r1, r8
    movs r2, #0x20
    ldsh r0, [r1, r2]
    adds r0, r0, r7
    strh r0, [r6, #0x14]
    movs r3, #0x22
    ldsh r0, [r1, r3]
    adds r0, r0, r5
    strh r0, [r6, #0x16]
    movs r2, #0x24
    ldsh r0, [r1, r2]
    str r0, [r6, #0x1C]
    movs r3, #0x24
    ldsh r0, [r1, r3]
    str r0, [r6, #0x20]
    ldr r0, _0805BC14 @ =0x000087FF
    cmp r4, r0
    bgt _0805BC40
    movs r0, #0xF0
    lsls r0, r0, #0x07
    cmp r4, r0
    bge _0805BCB8
    ldr r0, _0805BC18 @ =0x000037FF
    cmp r4, r0
    bgt _0805BC20
    movs r0, #0xA0
    lsls r0, r0, #0x06
    cmp r4, r0
    bge _0805BCA4
    ldr r0, _0805BC1C @ =0x000017FF
    cmp r4, r0
    bgt _0805BC9C
    movs r0, #0x80
    lsls r0, r0, #0x04
    cmp r4, r0
    bge _0805BC94
    cmp r4, #0x00
    blt _0805BCBC
    b _0805BC86
_0805BBFC: .4byte 0xFFFFE800
_0805BC00: .4byte 0x0000FFFF
_0805BC04: .4byte 0x080E645C
_0805BC08: .4byte 0x000003FF
_0805BC0C: .4byte 0xFFFA0000
_0805BC10: .4byte 0x00FFFFFF
_0805BC14: .4byte 0x000087FF
_0805BC18: .4byte 0x000037FF
_0805BC1C: .4byte 0x000017FF
_0805BC20:
    ldr r0, _0805BC30 @ =0x000057FF
    cmp r4, r0
    bgt _0805BC34
    movs r0, #0x90
    lsls r0, r0, #0x07
    cmp r4, r0
    bge _0805BCAC
    b _0805BCBC
_0805BC30: .4byte 0x000057FF
_0805BC34:
    ldr r0, _0805BC3C @ =0x000067FF
    cmp r4, r0
    ble _0805BCB0
    b _0805BCB4
_0805BC3C: .4byte 0x000067FF
_0805BC40:
    ldr r0, _0805BC60 @ =0x0000C7FF
    cmp r4, r0
    bgt _0805BC68
    movs r0, #0xB8
    lsls r0, r0, #0x08
    cmp r4, r0
    bge _0805BCBC
    ldr r0, _0805BC64 @ =0x0000A7FF
    cmp r4, r0
    bgt _0805BCAC
    movs r0, #0x98
    lsls r0, r0, #0x08
    cmp r4, r0
    bge _0805BCB0
    b _0805BCB4
    .byte 0x00, 0x00
_0805BC60: .4byte 0x0000C7FF
_0805BC64: .4byte 0x0000A7FF
_0805BC68:
    ldr r0, _0805BC78 @ =0x0000E7FF
    cmp r4, r0
    bgt _0805BC7C
    movs r0, #0xD8
    lsls r0, r0, #0x08
    cmp r4, r0
    bge _0805BC9C
    b _0805BCA4
_0805BC78: .4byte 0x0000E7FF
_0805BC7C:
    ldr r0, _0805BC8C @ =0x0000F7FF
    cmp r4, r0
    ble _0805BC94
    cmp r4, r9
    bgt _0805BCBC
_0805BC86:
    ldr r0, _0805BC90 @ =0x0000FFFC
    b _0805BCBE
    .byte 0x00, 0x00
_0805BC8C: .4byte 0x0000F7FF
_0805BC90: .4byte 0x0000FFFC
_0805BC94:
    ldr r0, _0805BC98 @ =0x0000FFFD
    b _0805BCBE
_0805BC98: .4byte 0x0000FFFD
_0805BC9C:
    ldr r0, _0805BCA0 @ =0x0000FFFE
    b _0805BCBE
_0805BCA0: .4byte 0x0000FFFE
_0805BCA4:
    ldr r0, _0805BCA8 @ =0x0000FFFF
    b _0805BCBE
_0805BCA8: .4byte 0x0000FFFF
_0805BCAC:
    movs r0, #0x01
    b _0805BCBE
_0805BCB0:
    movs r0, #0x02
    b _0805BCBE
_0805BCB4:
    movs r0, #0x03
    b _0805BCBE
_0805BCB8:
    movs r0, #0x04
    b _0805BCBE
_0805BCBC:
    movs r0, #0x00
_0805BCBE:
    mov r2, r8
    movs r3, #0x24
    ldsh r1, [r2, r3]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    adds r0, r0, r1
    strh r0, [r6, #0x24]
    movs r0, #0xC9
    lsls r0, r0, #0x01
    add r0, r8
    ldrb r1, [r0, #0x00]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    beq _0805BD00
    movs r0, #0x14
    ldsh r1, [r6, r0]
    movs r0, #0x10
    negs r0, r0
    cmp r1, r0
    blt _0805BD00
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    bgt _0805BD00
    movs r1, #0x16
    ldsh r0, [r6, r1]
    cmp r0, #0xB0
    bgt _0805BD00
    ldrb r1, [r6, #0x10]
    movs r0, #0x01
    orrs r0, r1
    b _0805BD06
_0805BD00:
    ldrb r1, [r6, #0x10]
    movs r0, #0xFE
    ands r0, r1
_0805BD06:
    strb r0, [r6, #0x10]
    ldr r3, [sp, #0x000]
    mov r2, r10
    ldrb r2, [r2, #0x00]
    cmp r3, r2
    bge _0805BD20
    ldr r3, _0805BD30 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r3, r1
    adds r1, r6, #0x0
    bl sub_805B520
_0805BD20:
    add sp, #0x004
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0805BD30: .4byte 0x03002E20
    thumb_func_start sub_805BD34
sub_805BD34:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    adds r6, r1, #0x0
    adds r4, r2, #0x0
    lsls r5, r5, #0x10
    lsrs r5, r5, #0x10
    lsls r6, r6, #0x10
    lsrs r6, r6, #0x10
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    ldr r0, _0805BD70 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    strh r4, [r0, #0x24]
    ldr r1, _0805BD74 @ =0x0805B44D
    str r1, [r0, #0x00]
    strh r5, [r0, #0x14]
    strh r6, [r0, #0x16]
    ldr r1, _0805BD78 @ =0x080F2F7C
    str r1, [r0, #0x08]
    ldrb r2, [r0, #0x10]
    movs r1, #0x01
    orrs r1, r2
    strb r1, [r0, #0x10]
    pop {r4, r5, r6}
    pop {r1}
    bx r1
_0805BD70: .4byte 0x03002E20
_0805BD74: .4byte sub_805B44C
_0805BD78: .4byte 0x080F2F7C
    thumb_func_start sub_805BD7C
sub_805BD7C:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    adds r6, r1, #0x0
    adds r4, r2, #0x0
    lsls r5, r5, #0x10
    lsrs r5, r5, #0x10
    lsls r6, r6, #0x10
    lsrs r6, r6, #0x10
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    ldr r0, _0805BDB8 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    strh r4, [r0, #0x24]
    ldr r1, _0805BDBC @ =0x0805B44D
    str r1, [r0, #0x00]
    strh r5, [r0, #0x14]
    strh r6, [r0, #0x16]
    ldr r1, _0805BDC0 @ =0x080F2FE4
    str r1, [r0, #0x08]
    ldrb r2, [r0, #0x10]
    movs r1, #0x01
    orrs r1, r2
    strb r1, [r0, #0x10]
    pop {r4, r5, r6}
    pop {r1}
    bx r1
_0805BDB8: .4byte 0x03002E20
_0805BDBC: .4byte sub_805B44C
_0805BDC0: .4byte 0x080F2FE4
    thumb_func_start sub_805BDC4
sub_805BDC4:
    push {r4, r5, r6, lr}
    add sp, #-0x004
    adds r6, r0, #0x0
    adds r3, r1, #0x0
    adds r4, r2, #0x0
    lsls r6, r6, #0x10
    lsrs r6, r6, #0x10
    lsls r3, r3, #0x10
    lsrs r3, r3, #0x10
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    ldr r5, _0805BE20 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r5, r1
    str r3, [sp, #0x000]
    bl sub_805B4D8
    strh r4, [r0, #0x24]
    ldr r1, _0805BE24 @ =0x0805B44D
    str r1, [r0, #0x00]
    strh r6, [r0, #0x14]
    ldr r3, [sp, #0x000]
    strh r3, [r0, #0x16]
    ldr r3, _0805BE28 @ =0x00000838
    adds r5, r5, r3
    ldr r2, [r5, #0x00]
    movs r3, #0x24
    ldsh r1, [r2, r3]
    asrs r1, r1, #0x01
    str r1, [r0, #0x1C]
    movs r3, #0x24
    ldsh r1, [r2, r3]
    asrs r1, r1, #0x01
    str r1, [r0, #0x20]
    ldr r1, _0805BE2C @ =0x080F3014
    str r1, [r0, #0x08]
    ldrb r2, [r0, #0x10]
    movs r1, #0x01
    orrs r1, r2
    strb r1, [r0, #0x10]
    add sp, #0x004
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805BE20: .4byte 0x03002E20
_0805BE24: .4byte sub_805B44C
_0805BE28: .4byte 0x00000838
_0805BE2C: .4byte 0x080F3014
    .byte 0x70, 0xB5, 0x05, 0x1C, 0x0E, 0x1C, 0x14, 0x1C, 0x2D, 0x04, 0x2D, 0x0C, 0x36, 0x04, 0x36, 0x0C
    .byte 0x24, 0x04, 0x24, 0x0C, 0x09, 0x48, 0xEA, 0x21, 0xC9, 0x00, 0x40, 0x18, 0xFF, 0xF7, 0x44, 0xFB
    .byte 0x84, 0x84, 0x07, 0x49, 0x01, 0x60, 0x85, 0x82, 0xC6, 0x82, 0x06, 0x49, 0x81, 0x60, 0x02, 0x7C
    .byte 0x01, 0x21, 0x11, 0x43, 0x01, 0x74, 0x70, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x20, 0x2E, 0x00, 0x03
    .byte 0x4D, 0xB4, 0x05, 0x08, 0x34, 0x30, 0x0F, 0x08
    thumb_func_start sub_805BE78
sub_805BE78:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    add sp, #-0x00C
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    lsls r1, r1, #0x10
    lsrs r6, r1, #0x10
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    mov r9, r2
    movs r5, #0x0F
    mov r4, sp
    movs r0, #0x80
    lsls r0, r0, #0x01
    mov r8, r0
_0805BE9A:
    ldr r0, _0805BF08 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    str r0, [r4, #0x00]
    mov r1, r9
    strh r1, [r0, #0x24]
    ldr r1, [r4, #0x00]
    ldr r0, _0805BF0C @ =0x0805BF79
    str r0, [r1, #0x00]
    strh r7, [r1, #0x14]
    ldr r0, [r4, #0x00]
    strh r6, [r0, #0x16]
    ldr r1, [r4, #0x00]
    lsls r0, r7, #0x10
    str r0, [r1, #0x28]
    ldr r1, [r4, #0x00]
    lsls r0, r6, #0x10
    str r0, [r1, #0x2C]
    bl main_getRandom
    ldr r2, [r4, #0x00]
    adds r1, r5, #0x0
    ands r1, r0
    lsls r1, r1, #0x04
    add r1, r8
    str r1, [r2, #0x1C]
    bl main_getRandom
    ldr r2, [r4, #0x00]
    adds r1, r5, #0x0
    ands r1, r0
    lsls r1, r1, #0x04
    add r1, r8
    str r1, [r2, #0x20]
    add r0, sp, #0x004
    cmp r4, r0
    beq _0805BF14
    cmp r4, r0
    ble _0805BF22
    add r0, sp, #0x008
    cmp r4, r0
    bne _0805BF22
    bl main_getRandom
    ldr r2, [sp, #0x008]
    adds r1, r5, #0x0
    ands r1, r0
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x0B
    ldr r1, _0805BF10 @ =0xFFFF4000
    b _0805BF36
_0805BF08: .4byte 0x03002E20
_0805BF0C: .4byte sub_805BF78
_0805BF10: .4byte 0xFFFF4000
_0805BF14:
    bl main_getRandom
    ldr r2, [sp, #0x004]
    movs r1, #0x07
    ands r1, r0
    negs r1, r1
    b _0805BF2C
_0805BF22:
    bl main_getRandom
    ldr r2, [r4, #0x00]
    movs r1, #0x07
    ands r1, r0
_0805BF2C:
    lsls r0, r1, #0x02
    adds r0, r0, r1
    lsls r0, r0, #0x0B
    movs r1, #0xC0
    lsls r1, r1, #0x06
_0805BF36:
    adds r0, r0, r1
    str r0, [r2, #0x30]
    bl main_getRandom
    ldr r2, [r4, #0x00]
    adds r1, r5, #0x0
    ands r1, r0
    lsls r1, r1, #0x0D
    ldr r0, _0805BF70 @ =0xFFFD0000
    adds r1, r1, r0
    str r1, [r2, #0x34]
    ldm r4!, {r1}
    ldr r0, _0805BF74 @ =0x0807C754
    str r0, [r1, #0x04]
    ldrb r2, [r1, #0x10]
    movs r0, #0x01
    orrs r0, r2
    strb r0, [r1, #0x10]
    add r0, sp, #0x008
    cmp r4, r0
    ble _0805BE9A
    ldr r0, [sp, #0x000]
    add sp, #0x00C
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
_0805BF70: .4byte 0xFFFD0000
_0805BF74: .4byte 0x0807C754
    thumb_func_start sub_805BF78
sub_805BF78:
    push {r4, r5, lr}
    adds r3, r0, #0x0
    ldr r4, _0805BFD8 @ =0x03002E20
    ldr r1, _0805BFDC @ =0x00000848
    adds r0, r4, r1
    ldrh r2, [r0, #0x14]
    ldr r1, _0805BFE0 @ =0x00000BC8
    adds r0, r4, r1
    ldr r5, [r0, #0x00]
    ldr r0, [r3, #0x28]
    ldr r1, [r3, #0x30]
    adds r0, r0, r1
    str r0, [r3, #0x28]
    asrs r1, r0, #0x10
    lsls r2, r2, #0x10
    asrs r0, r2, #0x10
    cmp r0, #0x00
    bge _0805BF9E
    adds r0, #0x7F
_0805BF9E:
    asrs r0, r0, #0x07
    subs r0, r1, r0
    movs r1, #0xFF
    ands r0, r1
    strh r0, [r3, #0x14]
    ldr r2, [r3, #0x2C]
    ldr r1, [r3, #0x34]
    adds r2, r2, r1
    str r2, [r3, #0x2C]
    asrs r0, r2, #0x10
    adds r0, r0, r5
    strh r0, [r3, #0x16]
    movs r0, #0xE0
    lsls r0, r0, #0x05
    adds r1, r1, r0
    str r1, [r3, #0x34]
    ldr r0, _0805BFE4 @ =0x003FFFFF
    cmp r2, r0
    ble _0805BFD0
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r4, r1
    adds r1, r3, #0x0
    bl sub_805B520
_0805BFD0:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805BFD8: .4byte 0x03002E20
_0805BFDC: .4byte 0x00000848
_0805BFE0: .4byte 0x00000BC8
_0805BFE4: .4byte 0x003FFFFF
    thumb_func_start sub_805BFE8
sub_805BFE8:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r0, _0805C010 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    str r4, [r0, #0x28]
    ldr r1, _0805C014 @ =0x0805C01D
    str r1, [r0, #0x00]
    ldr r1, _0805C018 @ =0x080F3044
    str r1, [r0, #0x08]
    ldrb r2, [r0, #0x10]
    movs r1, #0x01
    orrs r1, r2
    strb r1, [r0, #0x10]
    pop {r4}
    pop {r1}
    bx r1
_0805C010: .4byte 0x03002E20
_0805C014: .4byte sub_805C01C
_0805C018: .4byte 0x080F3044
    thumb_func_start sub_805C01C
sub_805C01C:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    ldr r5, [r4, #0x28]
    bl sub_805B44C
    cmp r0, #0x00
    beq _0805C04A
    movs r1, #0x24
    ldsh r0, [r5, r1]
    subs r0, #0x01
    strh r0, [r4, #0x24]
    movs r1, #0x20
    ldsh r0, [r5, r1]
    strh r0, [r4, #0x14]
    movs r1, #0x22
    ldsh r0, [r5, r1]
    strh r0, [r4, #0x16]
    movs r1, #0x24
    ldsh r0, [r5, r1]
    str r0, [r4, #0x1C]
    movs r1, #0x24
    ldsh r0, [r5, r1]
    str r0, [r4, #0x20]
_0805C04A:
    pop {r4, r5}
    pop {r0}
    bx r0
    thumb_func_start sub_805C050
sub_805C050:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r0, _0805C078 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    str r4, [r0, #0x28]
    ldr r1, _0805C07C @ =0x0805C085
    str r1, [r0, #0x00]
    ldr r1, _0805C080 @ =0x080F30B4
    str r1, [r0, #0x08]
    ldrb r2, [r0, #0x10]
    movs r1, #0x01
    orrs r1, r2
    strb r1, [r0, #0x10]
    pop {r4}
    pop {r1}
    bx r1
_0805C078: .4byte 0x03002E20
_0805C07C: .4byte sub_805C084
_0805C080: .4byte 0x080F30B4
    thumb_func_start sub_805C084
sub_805C084:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    ldr r5, [r4, #0x28]
    bl sub_805B44C
    cmp r0, #0x00
    beq _0805C0B2
    movs r1, #0x24
    ldsh r0, [r5, r1]
    subs r0, #0x01
    strh r0, [r4, #0x24]
    movs r1, #0x20
    ldsh r0, [r5, r1]
    strh r0, [r4, #0x14]
    movs r1, #0x22
    ldsh r0, [r5, r1]
    strh r0, [r4, #0x16]
    movs r1, #0x24
    ldsh r0, [r5, r1]
    str r0, [r4, #0x1C]
    movs r1, #0x24
    ldsh r0, [r5, r1]
    str r0, [r4, #0x20]
_0805C0B2:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x10, 0xB5, 0x04, 0x1C, 0x11, 0x48, 0xEA, 0x21, 0xC9, 0x00, 0x40, 0x18, 0xFF, 0xF7, 0x08, 0xFA
    .byte 0x84, 0x62, 0x02, 0x1C, 0x2C, 0x32, 0x00, 0x21, 0x11, 0x70, 0x0D, 0x49, 0x01, 0x60, 0x61, 0x6C
    .byte 0x41, 0x60, 0x20, 0x22, 0xA1, 0x5E, 0x81, 0x82, 0x22, 0x22, 0xA1, 0x5E, 0x0A, 0x39, 0xC1, 0x82
    .byte 0x24, 0x22, 0xA1, 0x5E, 0xC1, 0x61, 0x24, 0x22, 0xA1, 0x5E, 0x89, 0x00, 0x01, 0x62, 0x02, 0x7C
    .byte 0x01, 0x21, 0x11, 0x43, 0x01, 0x74, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x20, 0x2E, 0x00, 0x03
    .byte 0x0D, 0xC1, 0x05, 0x08
    thumb_func_start sub_805C10C
sub_805C10C:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r6, r0, #0x0
    ldr r4, [r6, #0x28]
    movs r0, #0x2C
    adds r0, r0, r6
    mov r8, r0
    ldrb r7, [r0, #0x00]
    adds r5, r7, #0x0
    ldr r0, [r4, #0x44]
    str r0, [r6, #0x04]
    movs r1, #0x24
    ldsh r0, [r4, r1]
    adds r0, #0x01
    strh r0, [r6, #0x24]
    movs r0, #0x20
    ldsh r2, [r4, r0]
    ldr r3, _0805C194 @ =0x080F30FC
    lsls r1, r5, #0x01
    adds r1, r1, r5
    adds r0, r1, r3
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    adds r2, r2, r0
    strh r2, [r6, #0x14]
    movs r0, #0x22
    ldsh r2, [r4, r0]
    adds r0, r3, #0x1
    adds r0, r1, r0
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    adds r2, r2, r0
    strh r2, [r6, #0x16]
    adds r3, #0x02
    adds r1, r1, r3
    movs r0, #0x00
    ldsb r0, [r1, r0]
    lsls r0, r0, #0x07
    str r0, [r6, #0x18]
    movs r1, #0x24
    ldsh r0, [r4, r1]
    str r0, [r6, #0x1C]
    movs r1, #0x24
    ldsh r0, [r4, r1]
    lsls r0, r0, #0x02
    str r0, [r6, #0x20]
    adds r0, r5, #0x1
    lsls r0, r0, #0x18
    lsrs r7, r0, #0x18
    cmp r5, #0x0E
    bls _0805C186
    ldr r0, _0805C198 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    adds r1, r6, #0x0
    bl sub_805B520
_0805C186:
    mov r0, r8
    strb r7, [r0, #0x00]
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0805C194: .4byte 0x080F30FC
_0805C198: .4byte 0x03002E20
    thumb_func_start sub_805C19C
sub_805C19C:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    adds r7, r0, #0x0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    mov r8, r1
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    mov r9, r2
    ldr r4, _0805C260 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r4, r1
    bl sub_805B4D8
    adds r5, r0, #0x0
    adds r6, r7, #0x0
    ldr r2, _0805C264 @ =0x00000838
    adds r4, r4, r2
    ldr r0, [r4, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0805C204
    ldr r2, _0805C268 @ =0x08102414
    ldr r0, _0805C26C @ =0x08102498
    movs r1, #0xB7
    lsls r1, r1, #0x03
    adds r3, r0, r1
    ldrh r1, [r3, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    ldrh r0, [r1, #0x04]
    cmp r0, #0x00
    beq _0805C1FE
    movs r2, #0x00
    ldr r1, [r1, #0x00]
    ldr r0, [r3, #0x00]
    cmp r1, r0
    bne _0805C1FA
    movs r2, #0x01
_0805C1FA:
    cmp r2, #0x00
    beq _0805C204
_0805C1FE:
    movs r0, #0xB7
    bl m4aSongNumStart
_0805C204:
    str r7, [r5, #0x28]
    ldr r0, _0805C270 @ =0x0805C279
    str r0, [r5, #0x00]
    ldr r0, _0805C274 @ =0x080F312C
    str r0, [r5, #0x08]
    movs r2, #0x24
    ldsh r0, [r6, r2]
    subs r0, #0x01
    strh r0, [r5, #0x24]
    adds r0, r5, #0x0
    adds r0, #0x2C
    mov r1, r8
    strb r1, [r0, #0x00]
    adds r0, #0x01
    mov r2, r9
    strb r2, [r0, #0x00]
    movs r0, #0x20
    ldsh r4, [r6, r0]
    mov r1, r8
    lsls r0, r1, #0x18
    asrs r0, r0, #0x10
    movs r2, #0x24
    ldsh r1, [r6, r2]
    bl Div
    adds r4, r4, r0
    strh r4, [r5, #0x14]
    movs r0, #0x22
    ldsh r4, [r6, r0]
    mov r1, r9
    lsls r0, r1, #0x18
    asrs r0, r0, #0x10
    movs r2, #0x24
    ldsh r1, [r6, r2]
    bl Div
    adds r4, r4, r0
    strh r4, [r5, #0x16]
    adds r0, r5, #0x0
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805C260: .4byte 0x03002E20
_0805C264: .4byte 0x00000838
_0805C268: .4byte 0x08102414
_0805C26C: .4byte 0x08102498
_0805C270: .4byte sub_805C278
_0805C274: .4byte 0x080F312C
    thumb_func_start sub_805C278
sub_805C278:
    push {r4, r5, r6, r7, lr}
    adds r5, r0, #0x0
    ldr r7, [r5, #0x28]
    bl sub_805B44C
    cmp r0, #0x00
    beq _0805C2DC
    movs r1, #0x24
    ldsh r0, [r7, r1]
    subs r0, #0x01
    strh r0, [r5, #0x24]
    movs r2, #0x20
    ldsh r4, [r7, r2]
    adds r0, r5, #0x0
    adds r0, #0x2C
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    lsls r0, r0, #0x08
    movs r2, #0x24
    ldsh r1, [r7, r2]
    bl Div
    adds r4, r4, r0
    strh r4, [r5, #0x14]
    movs r0, #0x22
    ldsh r4, [r7, r0]
    adds r6, r5, #0x0
    adds r6, #0x2D
    movs r0, #0x00
    ldsb r0, [r6, r0]
    lsls r0, r0, #0x08
    movs r2, #0x24
    ldsh r1, [r7, r2]
    bl Div
    adds r4, r4, r0
    strh r4, [r5, #0x16]
    ldrb r0, [r6, #0x00]
    subs r0, #0x01
    strb r0, [r6, #0x00]
    adds r0, r7, #0x0
    bl sub_803D818
    cmp r0, #0x00
    bne _0805C2DC
    ldrb r0, [r5, #0x10]
    movs r1, #0x01
    orrs r0, r1
    strb r0, [r5, #0x10]
_0805C2DC:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805C2E4
sub_805C2E4:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r4, r0, #0x0
    ldr r0, [r4, #0x28]
    mov r8, r0
    adds r0, r4, #0x0
    bl sub_805B44C
    cmp r0, #0x00
    beq _0805C344
    adds r6, r4, #0x0
    adds r6, #0x2E
    ldrb r0, [r6, #0x00]
    cmp r0, #0x00
    beq _0805C308
    subs r0, #0x01
    b _0805C342
_0805C308:
    ldr r0, _0805C350 @ =0x03002E20
    ldr r5, [r0, #0x10]
    movs r1, #0x1F
    adds r0, r5, #0x0
    ands r0, r1
    subs r0, #0x10
    lsls r0, r0, #0x18
    lsrs r7, r0, #0x18
    movs r0, #0x07
    ands r0, r5
    lsls r4, r0, #0x01
    movs r0, #0xF0
    orrs r4, r0
    mov r0, r8
    bl sub_803D818
    cmp r0, #0x00
    bne _0805C33A
    lsls r1, r7, #0x18
    asrs r1, r1, #0x18
    lsls r2, r4, #0x18
    asrs r2, r2, #0x18
    mov r0, r8
    bl sub_805C19C
_0805C33A:
    movs r0, #0x03
    ands r5, r0
    lsls r0, r5, #0x02
    adds r0, #0x04
_0805C342:
    strb r0, [r6, #0x00]
_0805C344:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805C350: .4byte 0x03002E20
    thumb_func_start sub_805C354
sub_805C354:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r0, _0805C37C @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    str r4, [r0, #0x28]
    ldr r1, _0805C380 @ =0x0805C2E5
    str r1, [r0, #0x00]
    ldr r1, _0805C384 @ =0x080F3144
    str r1, [r0, #0x08]
    adds r2, r0, #0x0
    adds r2, #0x2E
    movs r1, #0x00
    strb r1, [r2, #0x00]
    pop {r4}
    pop {r1}
    bx r1
_0805C37C: .4byte 0x03002E20
_0805C380: .4byte sub_805C2E4
_0805C384: .4byte 0x080F3144
    thumb_func_start sub_805C388
sub_805C388:
    push {r4, r5, r6, r7, lr}
    adds r7, r0, #0x0
    ldr r4, _0805C3F4 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r4, r1
    bl sub_805B4D8
    adds r5, r0, #0x0
    adds r6, r7, #0x0
    ldr r0, _0805C3F8 @ =0x00000838
    adds r4, r4, r0
    ldr r0, [r4, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0805C3CE
    ldr r2, _0805C3FC @ =0x08102414
    ldr r0, _0805C400 @ =0x08102498
    movs r1, #0xB5
    lsls r1, r1, #0x03
    adds r0, r0, r1
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r0, [r0, #0x00]
    ldrh r0, [r0, #0x04]
    cmp r0, #0x00
    bne _0805C3CE
    movs r0, #0xB5
    bl m4aSongNumStart
_0805C3CE:
    str r7, [r5, #0x28]
    ldr r0, _0805C404 @ =0x0805C40D
    str r0, [r5, #0x00]
    ldr r0, _0805C408 @ =0x080F3158
    str r0, [r5, #0x08]
    movs r1, #0x24
    ldsh r0, [r6, r1]
    subs r0, #0x01
    strh r0, [r5, #0x24]
    movs r1, #0x20
    ldsh r0, [r6, r1]
    strh r0, [r5, #0x14]
    movs r1, #0x22
    ldsh r0, [r6, r1]
    strh r0, [r5, #0x16]
    adds r0, r5, #0x0
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
_0805C3F4: .4byte 0x03002E20
_0805C3F8: .4byte 0x00000838
_0805C3FC: .4byte 0x08102414
_0805C400: .4byte 0x08102498
_0805C404: .4byte sub_805C40C
_0805C408: .4byte 0x080F3158
    thumb_func_start sub_805C40C
sub_805C40C:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    ldr r5, [r4, #0x28]
    bl sub_805B44C
    cmp r0, #0x00
    beq _0805C442
    movs r1, #0x24
    ldsh r0, [r5, r1]
    subs r0, #0x01
    strh r0, [r4, #0x24]
    movs r1, #0x20
    ldsh r0, [r5, r1]
    strh r0, [r4, #0x14]
    movs r1, #0x22
    ldsh r0, [r5, r1]
    subs r0, #0x10
    strh r0, [r4, #0x16]
    adds r0, r5, #0x0
    bl sub_803D818
    cmp r0, #0x00
    bne _0805C442
    ldrb r1, [r4, #0x10]
    movs r0, #0x01
    orrs r0, r1
    strb r0, [r4, #0x10]
_0805C442:
    pop {r4, r5}
    pop {r0}
    bx r0
    thumb_func_start sub_805C448
sub_805C448:
    push {r4, r5, r6, lr}
    mov r6, r9
    mov r5, r8
    push {r5, r6}
    mov r9, r0
    adds r4, r1, #0x0
    adds r5, r2, #0x0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    lsls r5, r5, #0x18
    lsrs r5, r5, #0x18
    ldr r0, _0805C4CC @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    adds r6, r0, #0x0
    mov r2, r9
    str r2, [r6, #0x28]
    ldr r0, _0805C4D0 @ =0x0805C4D9
    str r0, [r6, #0x00]
    ldr r0, _0805C4D4 @ =0x080F3180
    str r0, [r6, #0x08]
    movs r1, #0x24
    ldsh r0, [r2, r1]
    subs r0, #0x01
    strh r0, [r6, #0x24]
    adds r0, r6, #0x0
    adds r0, #0x2C
    strb r4, [r0, #0x00]
    adds r0, #0x01
    strb r5, [r0, #0x00]
    movs r0, #0x20
    ldsh r2, [r2, r0]
    mov r8, r2
    lsls r4, r4, #0x18
    asrs r4, r4, #0x10
    mov r2, r9
    movs r0, #0x24
    ldsh r1, [r2, r0]
    adds r0, r4, #0x0
    bl Div
    add r8, r0
    mov r1, r8
    strh r1, [r6, #0x14]
    mov r2, r9
    movs r0, #0x22
    ldsh r4, [r2, r0]
    lsls r5, r5, #0x18
    asrs r5, r5, #0x10
    movs r0, #0x24
    ldsh r1, [r2, r0]
    adds r0, r5, #0x0
    bl Div
    adds r4, r4, r0
    strh r4, [r6, #0x16]
    adds r0, r6, #0x0
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6}
    pop {r1}
    bx r1
_0805C4CC: .4byte 0x03002E20
_0805C4D0: .4byte sub_805C4D8
_0805C4D4: .4byte 0x080F3180
    thumb_func_start sub_805C4D8
sub_805C4D8:
    push {r4, r5, r6, r7, lr}
    adds r5, r0, #0x0
    ldr r7, [r5, #0x28]
    bl sub_805B44C
    cmp r0, #0x00
    beq _0805C548
    movs r1, #0x24
    ldsh r0, [r7, r1]
    subs r0, #0x01
    strh r0, [r5, #0x24]
    movs r2, #0x20
    ldsh r4, [r7, r2]
    adds r0, r5, #0x0
    adds r0, #0x2C
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    lsls r0, r0, #0x08
    movs r2, #0x24
    ldsh r1, [r7, r2]
    bl Div
    adds r4, r4, r0
    strh r4, [r5, #0x14]
    movs r0, #0x22
    ldsh r4, [r7, r0]
    adds r6, r5, #0x0
    adds r6, #0x2D
    movs r0, #0x00
    ldsb r0, [r6, r0]
    lsls r0, r0, #0x08
    movs r2, #0x24
    ldsh r1, [r7, r2]
    bl Div
    adds r4, r4, r0
    strh r4, [r5, #0x16]
    ldr r2, _0805C550 @ =0x080F31A0
    ldr r1, [r5, #0x0C]
    movs r0, #0x08
    subs r0, r0, r1
    adds r0, r0, r2
    ldrb r0, [r0, #0x00]
    ldrb r1, [r6, #0x00]
    adds r0, r0, r1
    strb r0, [r6, #0x00]
    adds r0, r7, #0x0
    bl sub_803D818
    cmp r0, #0x00
    bne _0805C548
    ldrb r0, [r5, #0x10]
    movs r1, #0x01
    orrs r0, r1
    strb r0, [r5, #0x10]
_0805C548:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805C550: .4byte 0x080F31A0
    thumb_func_start sub_805C554
sub_805C554:
    push {r4, r5, r6, r7, lr}
    adds r6, r0, #0x0
    ldr r7, [r6, #0x28]
    bl sub_805B44C
    cmp r0, #0x00
    beq _0805C5BC
    adds r5, r6, #0x0
    adds r5, #0x2E
    ldrb r0, [r5, #0x00]
    cmp r0, #0x00
    beq _0805C572
    subs r0, #0x01
    strb r0, [r5, #0x00]
    b _0805C5A0
_0805C572:
    ldr r0, _0805C5C4 @ =0x03002E20
    ldr r4, [r0, #0x10]
    movs r0, #0x1F
    adds r1, r4, #0x0
    ands r1, r0
    subs r1, #0x10
    movs r2, #0x07
    ands r2, r4
    lsls r2, r2, #0x19
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    movs r0, #0xFC
    lsls r0, r0, #0x18
    adds r2, r2, r0
    asrs r2, r2, #0x18
    adds r0, r7, #0x0
    bl sub_805C448
    movs r0, #0x03
    ands r4, r0
    lsls r4, r4, #0x02
    adds r4, #0x04
    strb r4, [r5, #0x00]
_0805C5A0:
    adds r0, r7, #0x0
    adds r0, #0x72
    ldrb r1, [r0, #0x00]
    movs r0, #0x0F
    ands r0, r1
    cmp r0, #0x0E
    beq _0805C5BC
    ldr r0, _0805C5C4 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    adds r1, r6, #0x0
    bl sub_805B520
_0805C5BC:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805C5C4: .4byte 0x03002E20
    thumb_func_start sub_805C5C8
sub_805C5C8:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r0, _0805C5F0 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    str r4, [r0, #0x28]
    ldr r1, _0805C5F4 @ =0x0805C555
    str r1, [r0, #0x00]
    ldr r1, _0805C5F8 @ =0x080F3190
    str r1, [r0, #0x08]
    adds r2, r0, #0x0
    adds r2, #0x2E
    movs r1, #0x00
    strb r1, [r2, #0x00]
    pop {r4}
    pop {r1}
    bx r1
_0805C5F0: .4byte 0x03002E20
_0805C5F4: .4byte sub_805C554
_0805C5F8: .4byte 0x080F3190
    thumb_func_start sub_805C5FC
sub_805C5FC:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    adds r5, r1, #0x0
    adds r6, r2, #0x0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    lsls r5, r5, #0x10
    lsrs r5, r5, #0x10
    lsls r6, r6, #0x10
    lsrs r6, r6, #0x10
    ldr r0, _0805C648 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    movs r3, #0x00
    strh r6, [r0, #0x24]
    ldr r1, _0805C64C @ =0x0805C655
    str r1, [r0, #0x00]
    lsls r4, r4, #0x10
    asrs r4, r4, #0x10
    adds r4, #0x08
    strh r4, [r0, #0x14]
    lsls r5, r5, #0x10
    asrs r5, r5, #0x10
    subs r5, #0x20
    strh r5, [r0, #0x16]
    ldr r1, _0805C650 @ =0x080F31B0
    str r1, [r0, #0x08]
    ldrb r2, [r0, #0x10]
    movs r1, #0x01
    orrs r1, r2
    strb r1, [r0, #0x10]
    str r3, [r0, #0x28]
    pop {r4, r5, r6}
    pop {r1}
    bx r1
_0805C648: .4byte 0x03002E20
_0805C64C: .4byte sub_805C654
_0805C650: .4byte 0x080F31B0
    thumb_func_start sub_805C654
sub_805C654:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    ldr r5, [r4, #0x28]
    ldr r0, _0805C67C @ =0x080F31C0
    adds r0, r5, r0
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    ldrh r1, [r4, #0x16]
    adds r0, r0, r1
    strh r0, [r4, #0x16]
    adds r0, r4, #0x0
    bl sub_805B44C
    adds r5, #0x01
    str r5, [r4, #0x28]
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805C67C: .4byte 0x080F31C0
    thumb_func_start sub_805C680
sub_805C680:
    push {r4, lr}
    adds r4, r0, #0x0
    lsls r1, r1, #0x18
    movs r2, #0xFF
    lsrs r1, r1, #0x18
    movs r3, #0x00
    cmp r1, #0x09
    bhi _0805C69A
    ldr r0, _0805C6E8 @ =0x02032B50
    adds r0, #0x0E
    adds r0, r1, r0
    ldrb r2, [r0, #0x00]
    movs r3, #0x01
_0805C69A:
    cmp r3, #0x00
    bne _0805C6C0
    adds r0, r1, #0x0
    subs r0, #0x0A
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #0x01
    bhi _0805C6B4
    ldr r0, _0805C6E8 @ =0x02032B50
    adds r0, #0x18
    adds r0, r1, r0
    ldrb r2, [r0, #0x00]
    movs r3, #0x01
_0805C6B4:
    cmp r3, #0x00
    bne _0805C6C0
    cmp r1, #0x02
    bne _0805C6C0
    ldr r0, _0805C6E8 @ =0x02032B50
    ldrb r2, [r0, #0x1A]
_0805C6C0:
    movs r0, #0x08
    ldr r1, _0805C6EC @ =0x03005C90
    strh r0, [r1, #0x00]
    lsls r0, r2, #0x18
    asrs r1, r0, #0x18
    cmp r1, #0x00
    blt _0805C6F4
    ldr r0, _0805C6F0 @ =0x030023DC
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    bne _0805C6F4
    lsls r0, r1, #0x10
    lsrs r0, r0, #0x10
    movs r1, #0x08
    adds r2, r4, #0x0
    movs r3, #0x20
    bl ReadFlash
    movs r0, #0x00
    b _0805C6F6
_0805C6E8: .4byte 0x02032B50
_0805C6EC: .4byte 0x03005C90
_0805C6F0: .4byte 0x030023DC
_0805C6F4:
    movs r0, #0x01
_0805C6F6:
    pop {r4}
    pop {r1}
    bx r1
    .byte 0xF0, 0xB5, 0x47, 0x46, 0x80, 0xB4, 0x0E, 0x4D, 0xBF, 0x20, 0x00, 0x01, 0x2C, 0x18, 0x21, 0x88
    .byte 0x80, 0x27, 0x3F, 0x02, 0x38, 0x1C, 0x08, 0x40, 0x00, 0x04, 0x06, 0x0C, 0x09, 0x48, 0x00, 0x78
    .byte 0x01, 0x28, 0x05, 0xD1, 0x00, 0x20, 0x00, 0x21, 0x2A, 0x1C, 0x07, 0x4B, 0x04, 0xF0, 0xCA, 0xFF
    .byte 0x07, 0x20, 0x28, 0x81, 0x00, 0x2E, 0x09, 0xD0, 0x21, 0x88, 0x38, 0x1C, 0x08, 0x43, 0x08, 0xE0
    .byte 0x80, 0x2B, 0x03, 0x02, 0xDC, 0x23, 0x00, 0x03, 0xF4, 0x0B, 0x00, 0x00, 0x21, 0x88, 0x1D, 0x48
    .byte 0x08, 0x40, 0x20, 0x80, 0x29, 0x1C, 0xBF, 0x24, 0x24, 0x01, 0x00, 0x23, 0x00, 0x22, 0x1A, 0x48
    .byte 0x40, 0x19, 0x80, 0x46, 0x08, 0x78, 0x18, 0x18, 0x00, 0x04, 0x03, 0x0C, 0x01, 0x31, 0x50, 0x1C
    .byte 0x00, 0x04, 0x02, 0x0C, 0xA2, 0x42, 0xF5, 0xDB, 0x14, 0x49, 0x08, 0x1C, 0x43, 0x40, 0x40, 0x46
    .byte 0x01, 0x88, 0x59, 0x40, 0x48, 0x42, 0x08, 0x43, 0x00, 0x28, 0x49, 0xDA, 0xBF, 0x21, 0x09, 0x01
    .byte 0x6C, 0x18, 0x21, 0x88, 0x80, 0x27, 0x3F, 0x02, 0x38, 0x1C, 0x08, 0x40, 0x00, 0x04, 0x06, 0x0C
    .byte 0x0B, 0x48, 0x00, 0x78, 0x01, 0x28, 0x05, 0xD1, 0x01, 0x20, 0x00, 0x21, 0x2A, 0x1C, 0x09, 0x4B
    .byte 0x04, 0xF0, 0x88, 0xFF, 0x07, 0x20, 0x28, 0x81, 0x00, 0x2E, 0x0D, 0xD0, 0x21, 0x88, 0x38, 0x1C
    .byte 0x08, 0x43, 0x0C, 0xE0, 0xFF, 0x7F, 0x00, 0x00, 0xF2, 0x0B, 0x00, 0x00, 0xB4, 0x2C, 0x00, 0x00
    .byte 0xDC, 0x23, 0x00, 0x03, 0xF4, 0x0B, 0x00, 0x00, 0x21, 0x88, 0x0F, 0x48, 0x08, 0x40, 0x20, 0x80
    .byte 0x2A, 0x1C, 0xBF, 0x24, 0x24, 0x01, 0x00, 0x23, 0x00, 0x21, 0x10, 0x78, 0x18, 0x18, 0x00, 0x04
    .byte 0x03, 0x0C, 0x01, 0x32, 0x48, 0x1C, 0x00, 0x04, 0x01, 0x0C, 0xA1, 0x42, 0xF5, 0xDB, 0x07, 0x49
    .byte 0x08, 0x1C, 0x43, 0x40, 0x40, 0x46, 0x01, 0x88, 0x59, 0x40, 0x48, 0x42, 0x08, 0x43, 0x00, 0x28
    .byte 0x06, 0xDA, 0x01, 0x20, 0x05, 0xE0, 0x00, 0x00, 0xFF, 0x7F, 0x00, 0x00, 0xB4, 0x2C, 0x00, 0x00
    .byte 0x00, 0x20, 0x08, 0xBC, 0x98, 0x46, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x30, 0xB5, 0x00, 0x06
    .byte 0x17, 0x4C, 0x80, 0x21, 0x89, 0x04, 0x40, 0x18, 0x01, 0x0E, 0x16, 0x48, 0x00, 0x78, 0x01, 0x28
    .byte 0x06, 0xD1, 0x08, 0x1C, 0x00, 0x21, 0x22, 0x1C, 0x80, 0x23, 0x5B, 0x01, 0x04, 0xF0, 0x3A, 0xFF
    .byte 0x09, 0x20, 0x60, 0x82, 0x23, 0x1C, 0x00, 0x22, 0x00, 0x21, 0x0F, 0x48, 0x25, 0x18, 0x18, 0x78
    .byte 0x10, 0x18, 0x00, 0x04, 0x02, 0x0C, 0x01, 0x33, 0x48, 0x1C, 0x00, 0x04, 0x01, 0x0C, 0x02, 0x29
    .byte 0xF5, 0xDB, 0x0A, 0x49, 0x08, 0x1C, 0x42, 0x40, 0x29, 0x88, 0x51, 0x40, 0x48, 0x42, 0x08, 0x43
    .byte 0x00, 0x28, 0x0D, 0xDB, 0x60, 0x89, 0x00, 0x28, 0x0A, 0xD0, 0x00, 0x20, 0x09, 0xE0, 0x00, 0x00
    .byte 0x00, 0x34, 0x02, 0x02, 0xDC, 0x23, 0x00, 0x03, 0xFE, 0x0F, 0x00, 0x00, 0xB4, 0x2C, 0x00, 0x00
    .byte 0x01, 0x20, 0x30, 0xBC, 0x02, 0xBC, 0x08, 0x47
    thumb_func_start save_805C8A4
save_805C8A4:
    push {r4, r5, r6, lr}
    ldr r5, _0805C8E8 @ =0x02032B80
    ldr r6, _0805C8EC @ =0x08000E6D
    ldr r0, _0805C8F0 @ =0x030023DC
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    bne _0805C8F4
    bl sub_805DA18
    cmp r0, #0x00
    bne _0805C8DA
    bl sub_805E42C
    bl sub_805D30C
    bl sub_805DCF4
    bl sub_805DD08
    bl sub_805DD40
    bl sub_805DD74
    bl sub_805DD88
    bl sub_805DA68
_0805C8DA:
    bl sub_805E58C
    cmp r0, #0x00
    bne _0805C948
    bl sub_805E5E8
    b _0805C948
_0805C8E8: .4byte 0x02032B80
_0805C8EC: .4byte title_main
_0805C8F0: .4byte 0x030023DC
_0805C8F4:
    bl sub_805DDBC
    bl sub_805E42C
    bl sub_805D30C
    bl sub_805DCF4
    bl sub_805DD08
    bl sub_805DD40
    bl sub_805DD74
    bl sub_805DD88
    adds r3, r5, #0x0
    movs r4, #0xBF
    lsls r4, r4, #0x04
    movs r1, #0x00
    movs r2, #0x00
_0805C91E:
    ldrb r0, [r3, #0x00]
    adds r0, r1, r0
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    adds r3, #0x01
    adds r0, r2, #0x1
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, r4
    blt _0805C91E
    ldr r2, _0805C968 @ =0x00002CB4
    adds r0, r2, #0x0
    eors r1, r0
    ldr r2, _0805C96C @ =0x00000BF2
    adds r0, r5, r2
    strh r1, [r0, #0x00]
    bl sub_805E5E8
    movs r0, #0x01
    bl sub_80152F8
_0805C948:
    ldr r0, _0805C970 @ =0x04000130
    ldrh r0, [r0, #0x00]
    movs r1, #0x00
    cmp r0, #0xF5
    bne _0805C954
    movs r1, #0x01
_0805C954:
    cmp r1, #0x00
    beq _0805C994
    ldr r0, _0805C974 @ =0x030023DC
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0805C978
    movs r0, #0x01
    bl sub_80152B0
    b _0805C97E
_0805C968: .4byte 0x00002CB4
_0805C96C: .4byte 0x00000BF2
_0805C970: .4byte 0x04000130
_0805C974: .4byte 0x030023DC
_0805C978:
    movs r0, #0x01
    bl sub_80152F8
_0805C97E:
    adds r0, r6, #0x0
    bl sub_8015330
    ldr r0, _0805C99C @ =0x080149AD
    ldr r2, _0805C9A0 @ =0x03002E20
    str r0, [r2, #0x00]
    ldrb r0, [r2, #0x08]
    adds r0, #0x01
    movs r1, #0x07
    ands r0, r1
    strb r0, [r2, #0x08]
_0805C994:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805C99C: .4byte sub_80149AC
_0805C9A0: .4byte 0x03002E20
    thumb_func_start sub_805C9A4
sub_805C9A4:
    push {r4, r5, r6, r7, lr}
    ldr r7, _0805CA98 @ =0x02032B80
    movs r4, #0x01
    bl m4aSoundVSyncOff
    ldr r0, _0805CA9C @ =0x04000200
    ldrh r0, [r0, #0x00]
    adds r6, r0, #0x0
    movs r1, #0x80
    lsls r1, r1, #0x09
    movs r0, #0x00
    bl irq_updateMask
    ldr r1, _0805CAA0 @ =0x040000B0
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CAA4 @ =0x0000C5FF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CAA8 @ =0x00007FFF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r0, [r1, #0x0A]
    ldr r0, [r1, #0x08]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r0, #0x00
    bge _0805C9E4
_0805C9DC:
    ldr r0, [r1, #0x08]
    ands r0, r2
    cmp r0, #0x00
    bne _0805C9DC
_0805C9E4:
    ldr r1, _0805CAAC @ =0x040000BC
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CAA4 @ =0x0000C5FF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CAA8 @ =0x00007FFF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r0, [r1, #0x0A]
    ldr r0, [r1, #0x08]
    movs r2, #0x80
    lsls r2, r2, #0x18
    ldr r5, _0805CAB0 @ =0x02029400
    cmp r0, #0x00
    bge _0805CA0C
_0805CA04:
    ldr r0, [r1, #0x08]
    ands r0, r2
    cmp r0, #0x00
    bne _0805CA04
_0805CA0C:
    ldr r1, _0805CAB4 @ =0x040000C8
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CAA4 @ =0x0000C5FF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CAA8 @ =0x00007FFF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r0, [r1, #0x0A]
    ldr r0, [r1, #0x08]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r0, #0x00
    bge _0805CA32
_0805CA2A:
    ldr r0, [r1, #0x08]
    ands r0, r2
    cmp r0, #0x00
    bne _0805CA2A
_0805CA32:
    ldr r1, _0805CAB8 @ =0x040000D4
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CAA4 @ =0x0000C5FF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CAA8 @ =0x00007FFF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r0, [r1, #0x0A]
    ldr r0, [r1, #0x08]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r0, #0x00
    bge _0805CA58
_0805CA50:
    ldr r0, [r1, #0x08]
    ands r0, r2
    cmp r0, #0x00
    bne _0805CA50
_0805CA58:
    adds r1, r5, #0x0
    ldr r2, _0805CABC @ =0x000005FA
    adds r0, r7, #0x0
    bl CpuSet
    movs r0, #0x10
    adds r1, r7, #0x0
    bl sub_805EB04
    cmp r0, #0x00
    bne _0805CA70
    movs r4, #0x00
_0805CA70:
    movs r0, #0x11
    adds r1, r5, #0x0
    bl sub_805EB04
    cmp r0, #0x00
    bne _0805CA7E
    movs r4, #0x00
_0805CA7E:
    bl main_waitVBlankFlag
    movs r0, #0x02
    adds r1, r6, #0x0
    bl irq_updateMask
    bl m4aSoundVSyncOn
    adds r0, r4, #0x0
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805CA98: .4byte 0x02032B80
_0805CA9C: .4byte 0x04000200
_0805CAA0: .4byte 0x040000B0
_0805CAA4: .4byte 0x0000C5FF
_0805CAA8: .4byte 0x00007FFF
_0805CAAC: .4byte 0x040000BC
_0805CAB0: .4byte 0x02029400
_0805CAB4: .4byte 0x040000C8
_0805CAB8: .4byte 0x040000D4
_0805CABC: .4byte 0x000005FA
    thumb_func_start sub_805CAC0
sub_805CAC0:
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    ldr r5, _0805CC24 @ =0x02020400
    movs r7, #0x01
    ldr r4, _0805CC28 @ =0x0000FFFF
    adds r6, r5, #0x0
    adds r6, #0x08
    lsrs r0, r0, #0x18
    movs r1, #0x00
    cmp r0, #0x09
    bhi _0805CADC
    adds r4, r0, #0x0
    adds r4, #0x20
    movs r1, #0x01
_0805CADC:
    cmp r1, #0x00
    bne _0805CAFA
    subs r0, #0x0A
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x01
    bhi _0805CAF0
    adds r4, r0, #0x0
    adds r4, #0x40
    movs r1, #0x01
_0805CAF0:
    cmp r1, #0x00
    bne _0805CAFA
    cmp r0, #0x02
    bne _0805CAFA
    movs r4, #0x80
_0805CAFA:
    lsls r4, r4, #0x10
    lsrs r0, r4, #0x10
    bl sub_805E8B4
    strh r0, [r5, #0x04]
    movs r0, #0x09
    strh r0, [r6, #0x0A]
    adds r1, r5, #0x0
    movs r2, #0x00
    movs r3, #0x00
_0805CB0E:
    ldrb r0, [r1, #0x00]
    adds r0, r2, r0
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    adds r1, #0x01
    adds r0, r3, #0x1
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    cmp r3, #0x1E
    blt _0805CB0E
    ldr r1, _0805CC2C @ =0x00002CB4
    adds r0, r1, #0x0
    eors r2, r0
    strh r2, [r6, #0x1E]
    adds r1, r5, #0x0
    movs r2, #0x00
    movs r3, #0x00
_0805CB30:
    ldrb r0, [r1, #0x00]
    adds r0, r2, r0
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    adds r1, #0x01
    adds r0, r3, #0x1
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    cmp r3, #0x02
    blt _0805CB30
    ldr r1, _0805CC2C @ =0x00002CB4
    adds r0, r1, #0x0
    eors r2, r0
    ldr r1, _0805CC30 @ =0x00000FFE
    adds r0, r5, r1
    strh r2, [r0, #0x00]
    bl m4aSoundVSyncOff
    ldr r0, _0805CC34 @ =0x04000200
    ldrh r0, [r0, #0x00]
    adds r6, r0, #0x0
    movs r1, #0x80
    lsls r1, r1, #0x09
    movs r0, #0x00
    bl irq_updateMask
    ldr r1, _0805CC38 @ =0x040000B0
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CC3C @ =0x0000C5FF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CC40 @ =0x00007FFF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r0, [r1, #0x0A]
    ldr r0, [r1, #0x08]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r0, #0x00
    bge _0805CB8A
_0805CB82:
    ldr r0, [r1, #0x08]
    ands r0, r2
    cmp r0, #0x00
    bne _0805CB82
_0805CB8A:
    ldr r1, _0805CC44 @ =0x040000BC
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CC3C @ =0x0000C5FF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CC40 @ =0x00007FFF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r0, [r1, #0x0A]
    ldr r0, [r1, #0x08]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r0, #0x00
    bge _0805CBB0
_0805CBA8:
    ldr r0, [r1, #0x08]
    ands r0, r2
    cmp r0, #0x00
    bne _0805CBA8
_0805CBB0:
    ldr r1, _0805CC48 @ =0x040000C8
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CC3C @ =0x0000C5FF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CC40 @ =0x00007FFF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r0, [r1, #0x0A]
    ldr r0, [r1, #0x08]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r0, #0x00
    bge _0805CBD6
_0805CBCE:
    ldr r0, [r1, #0x08]
    ands r0, r2
    cmp r0, #0x00
    bne _0805CBCE
_0805CBD6:
    ldr r1, _0805CC4C @ =0x040000D4
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CC3C @ =0x0000C5FF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CC40 @ =0x00007FFF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r0, [r1, #0x0A]
    ldr r0, [r1, #0x08]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r0, #0x00
    bge _0805CBFC
_0805CBF4:
    ldr r0, [r1, #0x08]
    ands r0, r2
    cmp r0, #0x00
    bne _0805CBF4
_0805CBFC:
    lsrs r0, r4, #0x10
    adds r1, r5, #0x0
    bl sub_805EB04
    cmp r0, #0x00
    bne _0805CC0A
    movs r7, #0x00
_0805CC0A:
    bl main_waitVBlankFlag
    movs r0, #0x02
    adds r1, r6, #0x0
    bl irq_updateMask
    bl m4aSoundVSyncOn
    adds r0, r7, #0x0
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805CC24: .4byte 0x02020400
_0805CC28: .4byte 0x0000FFFF
_0805CC2C: .4byte 0x00002CB4
_0805CC30: .4byte 0x00000FFE
_0805CC34: .4byte 0x04000200
_0805CC38: .4byte 0x040000B0
_0805CC3C: .4byte 0x0000C5FF
_0805CC40: .4byte 0x00007FFF
_0805CC44: .4byte 0x040000BC
_0805CC48: .4byte 0x040000C8
_0805CC4C: .4byte 0x040000D4
    .byte 0xF0, 0xB5, 0x13, 0x4E, 0x13, 0x4F, 0x3D, 0x1C, 0x24, 0x35, 0x13, 0x49, 0x70, 0x18, 0x00, 0x78
    .byte 0x00, 0x28, 0x6E, 0xD0, 0x11, 0x4A, 0xB0, 0x18, 0x01, 0x78, 0x80, 0x22, 0x12, 0x01, 0xB8, 0x18
    .byte 0x01, 0x70, 0x0F, 0x49, 0x70, 0x18, 0x00, 0x78, 0x0E, 0x4A, 0xB1, 0x18, 0x80, 0x00, 0x09, 0x78
    .byte 0x40, 0x18, 0x01, 0x30, 0xA5, 0xF7, 0xD4, 0xFF, 0xAD, 0x21, 0xC9, 0x00, 0x70, 0x18, 0x01, 0x78
    .byte 0x28, 0x1C, 0x01, 0x22, 0xEE, 0xF7, 0xE0, 0xF8, 0x00, 0x24, 0x07, 0x4A, 0xB8, 0x18, 0x24, 0xE0
    .byte 0x80, 0x2B, 0x03, 0x02, 0x20, 0x2E, 0x00, 0x03, 0x64, 0x05, 0x00, 0x00, 0x65, 0x05, 0x00, 0x00
    .byte 0x66, 0x05, 0x00, 0x00, 0x67, 0x05, 0x00, 0x00, 0x15, 0x08, 0x00, 0x00, 0xA0, 0x00, 0x22, 0x4A
    .byte 0xA9, 0x18, 0x09, 0x18, 0x0A, 0x68, 0xFE, 0x21, 0xC9, 0x00, 0x68, 0x18, 0x00, 0x78, 0x84, 0x42
    .byte 0x08, 0xDB, 0x10, 0x1C, 0x4C, 0x30, 0x00, 0x78, 0x07, 0x21, 0x01, 0x40, 0x28, 0x1C, 0x00, 0x22
    .byte 0xEE, 0xF7, 0xBA, 0xF8, 0x01, 0x34, 0x19, 0x4A, 0xA8, 0x18, 0x00, 0x78, 0x84, 0x42, 0xE5, 0xDB
    .byte 0x00, 0x24, 0xA1, 0x00, 0x14, 0x4A, 0xA8, 0x18, 0x40, 0x18, 0x02, 0x68, 0xAD, 0x21, 0xC9, 0x00
    .byte 0x70, 0x18, 0x00, 0x19, 0x01, 0x78, 0x10, 0x1C, 0x4C, 0x30, 0x01, 0x70, 0xAE, 0x21, 0xC9, 0x00
    .byte 0x70, 0x18, 0x00, 0x19, 0x01, 0x78, 0x10, 0x1C, 0xC4, 0x30, 0x01, 0x70, 0xAF, 0x21, 0xC9, 0x00
    .byte 0x70, 0x18, 0x00, 0x19, 0x00, 0x78, 0x40, 0x00, 0x11, 0x1C, 0xBA, 0x31, 0x08, 0x80, 0x09, 0x88
    .byte 0x49, 0x08, 0x09, 0x06, 0x09, 0x0E, 0x28, 0x1C, 0xEE, 0xF7, 0xD6, 0xF8, 0x01, 0x34, 0x07, 0x2C
    .byte 0xD7, 0xDD, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0xF4, 0x07, 0x00, 0x00, 0xF1, 0x07, 0x00, 0x00
    thumb_func_start sub_805CD50
sub_805CD50:
    push {r4, r5, r6, r7, lr}
    ldr r7, _0805CE18 @ =0x02032B80
    ldr r5, _0805CE1C @ =0x03002E20
    bl sub_8002C24
    adds r4, r0, #0x0
    movs r0, #0x03
    ands r4, r0
    movs r1, #0x80
    lsls r1, r1, #0x04
    adds r0, r5, r1
    ldrb r1, [r0, #0x00]
    ldr r2, _0805CE20 @ =0x00000565
    adds r0, r7, r2
    strb r1, [r0, #0x00]
    bl sub_8002C24
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x1A
    ldr r3, _0805CE24 @ =0x00000566
    adds r1, r7, r3
    strb r0, [r1, #0x00]
    ldr r1, _0805CE28 @ =0x00000567
    adds r0, r7, r1
    strb r4, [r0, #0x00]
    ldr r2, _0805CE2C @ =0x00000838
    adds r0, r5, r2
    ldr r6, [r0, #0x00]
    lsls r4, r4, #0x02
    adds r4, r4, r7
    adds r0, r6, #0x0
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r0, r0, #0x01
    adds r3, #0x1C
    adds r1, r4, r3
    strb r0, [r1, #0x00]
    adds r0, r6, #0x0
    bl sub_803DAC4
    movs r2, #0xB0
    lsls r2, r2, #0x03
    adds r1, r4, r2
    strh r0, [r1, #0x00]
    movs r3, #0xBC
    lsls r3, r3, #0x01
    adds r0, r6, r3
    ldrh r0, [r0, #0x00]
    ldr r1, _0805CE30 @ =0x00000583
    adds r4, r4, r1
    strb r0, [r4, #0x00]
    movs r3, #0x00
    movs r0, #0xAD
    lsls r0, r0, #0x03
    adds r2, r7, r0
    ldr r1, _0805CE34 @ =0x00000818
    adds r5, r5, r1
    movs r0, #0x07
    mov r12, r0
    movs r1, #0xAF
    lsls r1, r1, #0x03
    adds r4, r7, r1
_0805CDCC:
    ldm r5!, {r6}
    adds r0, r6, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    mov r0, r12
    ands r0, r1
    strb r0, [r2, #0x00]
    adds r0, r6, #0x0
    adds r0, #0xC4
    ldrb r0, [r0, #0x00]
    strb r0, [r2, #0x08]
    adds r1, r4, r3
    adds r0, r6, #0x0
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r0, r0, #0x01
    strb r0, [r1, #0x00]
    adds r2, #0x01
    adds r3, #0x01
    cmp r3, #0x07
    ble _0805CDCC
    ldr r2, _0805CE38 @ =0x00000564
    adds r1, r7, r2
    movs r0, #0x01
    strb r0, [r1, #0x00]
    movs r3, #0xBF
    lsls r3, r3, #0x04
    adds r2, r7, r3
    ldrh r1, [r2, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x07
    adds r0, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805CE18: .4byte 0x02032B80
_0805CE1C: .4byte 0x03002E20
_0805CE20: .4byte 0x00000565
_0805CE24: .4byte 0x00000566
_0805CE28: .4byte 0x00000567
_0805CE2C: .4byte 0x00000838
_0805CE30: .4byte 0x00000583
_0805CE34: .4byte 0x00000818
_0805CE38: .4byte 0x00000564
    thumb_func_start sub_805CE3C
sub_805CE3C:
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    lsrs r6, r0, #0x18
    cmp r6, #0x1C
    bne _0805CE88
    bl sub_805DCC8
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0x00
    blt _0805CECE
    ldr r4, _0805CE80 @ =0x02032B30
    lsls r5, r0, #0x18
    lsrs r1, r5, #0x18
    adds r0, r4, #0x0
    bl sub_805C680
    cmp r0, #0x00
    bne _0805CECE
    ldrh r0, [r4, #0x02]
    cmp r0, #0x00
    beq _0805CECE
    ldrb r1, [r4, #0x00]
    movs r0, #0x20
    ands r0, r1
    movs r1, #0x01
    cmp r0, #0x00
    beq _0805CE76
    movs r1, #0x00
_0805CE76:
    cmp r1, #0x00
    beq _0805CECE
    asrs r0, r5, #0x18
    b _0805CED2
    .byte 0x00, 0x00
_0805CE80: .4byte 0x02032B30
_0805CE84:
    asrs r0, r2, #0x18
    b _0805CED2
_0805CE88:
    movs r7, #0x00
    ldr r4, _0805CED8 @ =0x02032B30
    movs r5, #0x00
_0805CE8E:
    lsrs r1, r5, #0x18
    adds r0, r4, #0x0
    bl sub_805C680
    adds r2, r5, #0x0
    cmp r0, #0x00
    bne _0805CEC2
    ldrh r0, [r4, #0x02]
    cmp r0, #0x00
    beq _0805CEC2
    ldrb r1, [r4, #0x00]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0805CEC2
    movs r0, #0x01
    negs r0, r0
    movs r1, #0x01
    cmp r6, r0
    beq _0805CEBE
    ldrb r0, [r4, #0x09]
    cmp r0, r6
    beq _0805CEBE
    movs r1, #0x00
_0805CEBE:
    cmp r1, #0x00
    bne _0805CE84
_0805CEC2:
    movs r0, #0x80
    lsls r0, r0, #0x11
    adds r5, r5, r0
    adds r7, #0x01
    cmp r7, #0x09
    ble _0805CE8E
_0805CECE:
    movs r0, #0x01
    negs r0, r0
_0805CED2:
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
_0805CED8: .4byte 0x02032B30
    .byte 0x70, 0xB5, 0x0C, 0x48, 0x40, 0x7C, 0xFF, 0xF7, 0xAB, 0xFF, 0x00, 0x06, 0x02, 0x0E, 0x00, 0x16
    .byte 0x01, 0x21, 0x49, 0x42, 0x88, 0x42, 0x1E, 0xD1, 0x00, 0x25, 0x07, 0x4E, 0x2C, 0x06, 0x21, 0x0E
    .byte 0x30, 0x1C, 0xFF, 0xF7, 0xBF, 0xFB, 0x00, 0x28, 0x02, 0xD1, 0x70, 0x88, 0x00, 0x28, 0x05, 0xD1
    .byte 0x20, 0x0E, 0x08, 0xE0, 0x00, 0x04, 0x02, 0x02, 0x30, 0x2B, 0x03, 0x02, 0x01, 0x35, 0x09, 0x2D
    .byte 0xEC, 0xDD, 0x01, 0x20, 0x40, 0x42, 0x00, 0x06, 0x02, 0x0E, 0x00, 0x16, 0x01, 0x21, 0x49, 0x42
    .byte 0x88, 0x42, 0x00, 0xD1, 0x00, 0x22, 0x08, 0x48, 0x40, 0x89, 0x00, 0x28, 0x08, 0xD0, 0x07, 0x48
    .byte 0xBF, 0x21, 0x09, 0x01, 0x40, 0x18, 0x01, 0x21, 0x91, 0x40, 0x02, 0x88, 0x11, 0x43, 0x01, 0x80
    .byte 0x70, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x00, 0x04, 0x02, 0x02, 0x80, 0x2B, 0x03, 0x02
    .byte 0x70, 0xB5, 0x0A, 0x25, 0x06, 0x4E, 0x2C, 0x06, 0x21, 0x0E, 0x30, 0x1C, 0xFF, 0xF7, 0x8A, 0xFB
    .byte 0x00, 0x28, 0x02, 0xD1, 0x70, 0x88, 0x00, 0x28, 0x04, 0xD1, 0x20, 0x0E, 0x07, 0xE0, 0x00, 0x00
    .byte 0x30, 0x2B, 0x03, 0x02, 0x01, 0x35, 0x0B, 0x2D, 0xED, 0xDD, 0x01, 0x20, 0x40, 0x42, 0x00, 0x06
    .byte 0x02, 0x0E, 0x00, 0x16, 0x01, 0x21, 0x49, 0x42, 0x88, 0x42, 0x00, 0xD1, 0x0A, 0x22, 0x08, 0x48
    .byte 0x40, 0x89, 0x00, 0x28, 0x08, 0xD0, 0x07, 0x48, 0xBF, 0x21, 0x09, 0x01, 0x40, 0x18, 0x01, 0x21
    .byte 0x91, 0x40, 0x02, 0x88, 0x11, 0x43, 0x01, 0x80, 0x70, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0x00, 0x04, 0x02, 0x02, 0x80, 0x2B, 0x03, 0x02
    thumb_func_start sub_805CFC4
sub_805CFC4:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    add sp, #-0x020
    ldr r0, _0805D014 @ =0x03002E20
    ldr r1, _0805D018 @ =0x00000801
    adds r0, r0, r1
    ldrb r5, [r0, #0x00]
    ldr r0, _0805D01C @ =0x02020400
    adds r0, #0x08
    ldrb r4, [r0, #0x09]
    ldrh r7, [r0, #0x02]
    adds r0, r5, #0x0
    bl sub_805CE3C
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    mov r8, r0
    lsls r1, r0, #0x18
    asrs r0, r1, #0x18
    movs r6, #0x01
    negs r6, r6
    cmp r0, r6
    beq _0805D056
    movs r0, #0x00
    mov r9, r0
    cmp r7, #0x00
    beq _0805D03C
    cmp r4, r5
    bne _0805D03C
    lsrs r1, r1, #0x18
    mov r0, sp
    bl sub_805C680
    cmp r0, #0x00
    beq _0805D024
    adds r0, r6, #0x0
    b _0805D02A
    .byte 0x00, 0x00
_0805D014: .4byte 0x03002E20
_0805D018: .4byte 0x00000801
_0805D01C: .4byte 0x02020400
_0805D020:
    lsrs r0, r5, #0x18
    b _0805D080
_0805D024:
    mov r0, sp
    movs r1, #0x02
    ldsh r0, [r0, r1]
_0805D02A:
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, r7
    bge _0805D036
    movs r0, #0x01
    mov r9, r0
_0805D036:
    mov r1, r9
    cmp r1, #0x00
    beq _0805D056
_0805D03C:
    ldr r6, _0805D0C0 @ =0x02020400
    mov r4, r8
    adds r4, #0x20
    adds r0, r4, #0x0
    adds r1, r6, #0x0
    bl sub_805EF10
    cmp r0, #0x00
    bne _0805D056
    adds r0, r4, #0x0
    adds r1, r6, #0x0
    bl sub_805EF88
_0805D056:
    adds r7, r5, #0x0
    movs r4, #0x0A
    ldr r6, _0805D0C4 @ =0x02032B30
_0805D05C:
    lsls r5, r4, #0x18
    lsrs r1, r5, #0x18
    adds r0, r6, #0x0
    bl sub_805C680
    cmp r0, #0x00
    bne _0805D076
    ldrh r0, [r6, #0x02]
    cmp r0, #0x00
    beq _0805D076
    ldrb r0, [r6, #0x09]
    cmp r0, r7
    beq _0805D020
_0805D076:
    adds r4, #0x01
    cmp r4, #0x0B
    ble _0805D05C
    movs r0, #0x01
    negs r0, r0
_0805D080:
    lsls r2, r0, #0x18
    asrs r1, r2, #0x18
    movs r0, #0x01
    negs r0, r0
    cmp r1, r0
    beq _0805D0B2
    ldr r0, _0805D0C0 @ =0x02020400
    movs r1, #0x80
    lsls r1, r1, #0x05
    adds r5, r0, r1
    lsrs r0, r2, #0x08
    movs r1, #0x80
    lsls r1, r1, #0x0E
    adds r0, r0, r1
    lsrs r4, r0, #0x10
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl sub_805EF10
    cmp r0, #0x00
    bne _0805D0B2
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl sub_805EF88
_0805D0B2:
    add sp, #0x020
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0805D0C0: .4byte 0x02020400
_0805D0C4: .4byte 0x02032B30
    .byte 0x30, 0xB5, 0x88, 0xB0, 0x00, 0x06, 0xA0, 0x21, 0x09, 0x05, 0x44, 0x18, 0x21, 0x0E, 0x68, 0x46
    .byte 0xFF, 0xF7, 0xD2, 0xFA, 0x00, 0x28, 0x07, 0xD1, 0x68, 0x46, 0x40, 0x88, 0x00, 0x21, 0x00, 0x28
    .byte 0x00, 0xD1, 0x01, 0x21, 0x00, 0x29, 0x02, 0xD0, 0x01, 0x20, 0x40, 0x42, 0x00, 0xE0, 0x20, 0x0E
    .byte 0x00, 0x06, 0x0B, 0x49, 0x80, 0x22, 0x52, 0x01, 0x8D, 0x18, 0x00, 0x0A, 0x80, 0x21, 0x89, 0x03
    .byte 0x40, 0x18, 0x04, 0x0C, 0x20, 0x1C, 0x29, 0x1C, 0x01, 0xF0, 0xFE, 0xFE, 0x00, 0x28, 0x03, 0xD1
    .byte 0x20, 0x1C, 0x29, 0x1C, 0x01, 0xF0, 0x34, 0xFF, 0x08, 0xB0, 0x30, 0xBC, 0x02, 0xBC, 0x08, 0x47
    .byte 0x00, 0x04, 0x02, 0x02
    thumb_func_start sub_805D12C
sub_805D12C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x028
    ldr r7, _0805D1D0 @ =0x02032B80
    movs r0, #0x01
    str r0, [sp, #0x020]
    movs r1, #0xBF
    lsls r1, r1, #0x04
    adds r0, r7, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _0805D152
    b _0805D2F4
_0805D152:
    ldr r0, _0805D1D4 @ =0x08102414
    ldr r0, [r0, #0x00]
    ldrh r0, [r0, #0x04]
    str r0, [sp, #0x024]
    movs r0, #0x1E
    ldr r2, [sp, #0x024]
    cmp r2, #0x00
    beq _0805D16C
    ldr r0, _0805D1D8 @ =0x030066E0
    movs r1, #0x03
    bl m4aMPlayFadeOutTemporarily
    movs r0, #0x40
_0805D16C:
    cmp r0, #0x00
    beq _0805D17C
    adds r4, r0, #0x0
_0805D172:
    bl main_frameProc
    subs r4, #0x01
    cmp r4, #0x00
    bne _0805D172
_0805D17C:
    movs r1, #0xBF
    lsls r1, r1, #0x04
    adds r0, r7, r1
    ldrh r0, [r0, #0x00]
    ldr r1, _0805D1DC @ =0xFFFF3FFF
    ands r0, r1
    cmp r0, #0x00
    bne _0805D18E
    b _0805D29E
_0805D18E:
    movs r6, #0x00
    movs r2, #0xBF
    lsls r2, r2, #0x04
    adds r2, r2, r7
    mov r8, r2
    movs r0, #0x01
    mov r9, r0
    movs r1, #0x01
    negs r1, r1
    mov r10, r1
_0805D1A2:
    mov r2, r8
    ldrh r0, [r2, #0x00]
    asrs r0, r6
    mov r1, r9
    ands r0, r1
    cmp r0, #0x00
    beq _0805D298
    movs r5, #0x00
    lsls r4, r6, #0x18
    cmp r6, #0x09
    bgt _0805D20C
    cmp r6, #0x0B
    beq _0805D206
    lsrs r1, r4, #0x18
    mov r0, sp
    bl sub_805C680
    cmp r0, #0x00
    beq _0805D1E0
    movs r0, #0x01
    negs r0, r0
    b _0805D1E4
    .byte 0x00, 0x00
_0805D1D0: .4byte 0x02032B80
_0805D1D4: .4byte 0x08102414
_0805D1D8: .4byte 0x030066E0
_0805D1DC: .4byte 0xFFFF3FFF
_0805D1E0:
    mov r0, sp
    ldrb r0, [r0, #0x09]
_0805D1E4:
    lsls r1, r0, #0x18
    asrs r0, r1, #0x18
    cmp r0, r10
    ble _0805D20C
    lsrs r0, r1, #0x18
    bl track_getTrackIndex
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    lsls r1, r0, #0x02
    adds r1, r1, r0
    lsls r1, r1, #0x02
    movs r2, #0xB2
    lsls r2, r2, #0x03
    adds r1, r1, r2
    adds r5, r7, r1
    b _0805D20C
_0805D206:
    movs r0, #0xE4
    lsls r0, r0, #0x03
    adds r5, r7, r0
_0805D20C:
    lsrs r4, r4, #0x18
    adds r0, r4, #0x0
    bl sub_805CAC0
    cmp r0, #0x00
    beq _0805D278
    cmp r5, #0x00
    beq _0805D224
    ldrb r1, [r5, #0x0B]
    movs r0, #0xFE
    ands r0, r1
    strb r0, [r5, #0x0B]
_0805D224:
    cmp r6, #0x09
    bgt _0805D26A
    cmp r6, #0x0B
    beq _0805D264
    mov r0, sp
    adds r1, r4, #0x0
    bl sub_805C680
    cmp r0, #0x00
    beq _0805D23E
    movs r0, #0x01
    negs r0, r0
    b _0805D242
_0805D23E:
    mov r0, sp
    ldrb r0, [r0, #0x09]
_0805D242:
    lsls r1, r0, #0x18
    asrs r0, r1, #0x18
    cmp r0, r10
    ble _0805D26A
    lsrs r0, r1, #0x18
    bl track_getTrackIndex
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    lsls r1, r0, #0x02
    adds r1, r1, r0
    lsls r1, r1, #0x02
    movs r2, #0xB2
    lsls r2, r2, #0x03
    adds r1, r1, r2
    adds r5, r7, r1
    b _0805D26A
_0805D264:
    movs r0, #0xE4
    lsls r0, r0, #0x03
    adds r5, r7, r0
_0805D26A:
    cmp r5, #0x00
    beq _0805D27C
    ldrb r1, [r5, #0x0B]
    movs r0, #0xFE
    ands r0, r1
    strb r0, [r5, #0x0B]
    b _0805D27C
_0805D278:
    movs r1, #0x00
    str r1, [sp, #0x020]
_0805D27C:
    mov r1, r9
    lsls r1, r6
    mov r2, r8
    ldrh r0, [r2, #0x00]
    bics r0, r1
    strh r0, [r2, #0x00]
    ldr r0, _0805D2CC @ =0x00000BE8
    adds r2, r7, r0
    adds r0, r6, #0x2
    mov r1, r9
    lsls r1, r0
    ldr r0, [r2, #0x00]
    bics r0, r1
    str r0, [r2, #0x00]
_0805D298:
    adds r6, #0x01
    cmp r6, #0x0C
    ble _0805D1A2
_0805D29E:
    movs r1, #0xBF
    lsls r1, r1, #0x04
    adds r4, r7, r1
    ldrh r1, [r4, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x07
    ands r0, r1
    cmp r0, #0x00
    beq _0805D2BE
    bl sub_805C9A4
    str r0, [sp, #0x020]
    ldrh r1, [r4, #0x00]
    ldr r0, _0805D2D0 @ =0x0000BFFF
    ands r0, r1
    strh r0, [r4, #0x00]
_0805D2BE:
    ldr r2, [sp, #0x020]
    cmp r2, #0x00
    beq _0805D2D4
    movs r0, #0xC4
    bl m4aSongNumStart
    b _0805D2DA
_0805D2CC: .4byte 0x00000BE8
_0805D2D0: .4byte 0x0000BFFF
_0805D2D4:
    movs r0, #0x91
    bl m4aSongNumStart
_0805D2DA:
    ldr r0, [sp, #0x024]
    cmp r0, #0x00
    beq _0805D2F4
    movs r4, #0x1D
_0805D2E2:
    bl main_frameProc
    subs r4, #0x01
    cmp r4, #0x00
    bge _0805D2E2
    ldr r0, _0805D308 @ =0x030066E0
    movs r1, #0x04
    bl m4aMPlayFadeIn
_0805D2F4:
    ldr r0, [sp, #0x020]
    add sp, #0x028
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805D308: .4byte 0x030066E0
    thumb_func_start sub_805D30C
sub_805D30C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x054
    mov r0, sp
    bl sub_805DF40
    add r0, sp, #0x010
    movs r1, #0x00
    strh r1, [r0, #0x00]
    ldr r2, _0805D420 @ =0x010005FA
    ldr r1, _0805D424 @ =0x02032B80
    bl CpuSet
    mov r0, sp
    bl sub_805DF70
    movs r1, #0x00
    ldr r2, _0805D424 @ =0x02032B80
    adds r2, #0x46
    ldr r7, _0805D424 @ =0x02032B80
    adds r7, #0x55
    ldr r0, _0805D424 @ =0x02032B80
    adds r0, #0x28
    mov r8, r0
    ldr r3, _0805D424 @ =0x02032B80
    adds r3, #0x37
    mov r9, r3
    movs r6, #0x08
_0805D34A:
    movs r3, #0x00
    lsls r0, r1, #0x01
    adds r5, r1, #0x1
    adds r4, r0, r1
_0805D352:
    adds r1, r3, r4
    adds r0, r2, r1
    strb r6, [r0, #0x00]
    adds r1, r7, r1
    strb r6, [r1, #0x00]
    adds r0, r3, #0x1
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    cmp r3, #0x02
    bls _0805D352
    lsls r0, r5, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #0x04
    bls _0805D34A
    movs r1, #0x00
    mov r10, r8
    movs r4, #0xFF
    mov r8, r4
    mov r6, r9
_0805D378:
    movs r3, #0x00
    lsls r0, r1, #0x01
    adds r5, r1, #0x1
    adds r4, r0, r1
_0805D380:
    adds r1, r3, r4
    mov r7, r10
    adds r2, r7, r1
    ldrb r0, [r2, #0x00]
    mov r7, r8
    orrs r0, r7
    strb r0, [r2, #0x00]
    adds r1, r6, r1
    ldrb r0, [r1, #0x00]
    mov r2, r8
    orrs r0, r2
    strb r0, [r1, #0x00]
    adds r0, r3, #0x1
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    cmp r3, #0x02
    bls _0805D380
    lsls r0, r5, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #0x04
    bls _0805D378
    movs r3, #0x00
    str r3, [sp, #0x034]
_0805D3AE:
    movs r4, #0x00
    mov r9, r4
    ldr r5, [sp, #0x034]
    lsls r5, r5, #0x02
    str r5, [sp, #0x048]
_0805D3B8:
    ldr r0, [sp, #0x048]
    add r0, r9
    bl track_getMKSCTrack
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    ldr r1, _0805D428 @ =0x080E7FEC
    lsls r0, r3, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    ldr r2, [r0, #0x20]
    cmp r2, #0x00
    beq _0805D4AC
    mov r8, r2
    ldr r7, [sp, #0x034]
    lsls r5, r7, #0x07
    adds r1, r5, #0x0
    adds r1, #0x64
    ldr r0, _0805D424 @ =0x02032B80
    adds r1, r0, r1
    mov r2, r9
    lsls r4, r2, #0x05
    adds r1, r1, r4
    mov r7, r8
    ldrb r2, [r7, #0x00]
    movs r0, #0x10
    orrs r0, r2
    strb r0, [r1, #0x14]
    ldrh r0, [r7, #0x02]
    strh r0, [r1, #0x16]
    adds r0, r3, #0x0
    bl sub_805CE3C
    lsls r0, r0, #0x18
    lsrs r7, r0, #0x18
    ldr r3, _0805D42C @ =0x0000FFFF
    movs r0, #0x00
    mov r10, r0
    lsls r1, r7, #0x18
    adds r6, r5, #0x0
    cmp r1, #0x00
    blt _0805D43A
    lsrs r1, r1, #0x18
    add r0, sp, #0x014
    bl sub_805C680
    cmp r0, #0x00
    beq _0805D430
    movs r0, #0x01
    negs r0, r0
    b _0805D436
    .byte 0x00, 0x00
_0805D420: .4byte 0x010005FA
_0805D424: .4byte 0x02032B80
_0805D428: .4byte 0x080E7FEC
_0805D42C: .4byte 0x0000FFFF
_0805D430:
    add r0, sp, #0x014
    movs r1, #0x02
    ldsh r0, [r0, r1]
_0805D436:
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
_0805D43A:
    movs r5, #0x00
    adds r0, r6, #0x0
    adds r0, #0x64
    ldr r2, _0805D474 @ =0x02032B80
    adds r0, r2, r0
    adds r0, r0, r4
    str r0, [sp, #0x038]
    lsls r6, r7, #0x18
_0805D44A:
    lsls r0, r5, #0x02
    ldr r7, [sp, #0x038]
    adds r4, r7, r0
    mov r1, r10
    adds r0, r5, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldrh r0, [r0, #0x06]
    cmp r3, r0
    bls _0805D478
    subs r1, r5, r1
    lsls r1, r1, #0x02
    add r1, r8
    ldrb r2, [r1, #0x04]
    movs r0, #0x10
    orrs r0, r2
    strb r0, [r4, #0x00]
    ldrh r0, [r1, #0x06]
    strh r0, [r4, #0x02]
    b _0805D4A2
    .byte 0x00, 0x00
_0805D474: .4byte 0x02032B80
_0805D478:
    add r0, sp, #0x014
    lsrs r1, r6, #0x18
    str r3, [sp, #0x04C]
    bl sub_805C680
    ldr r3, [sp, #0x04C]
    cmp r0, #0x00
    beq _0805D48E
    movs r0, #0x01
    negs r0, r0
    b _0805D492
_0805D48E:
    add r0, sp, #0x014
    ldrb r0, [r0, #0x00]
_0805D492:
    strb r0, [r4, #0x00]
    strh r3, [r4, #0x02]
    mov r0, r10
    adds r0, #0x01
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    mov r10, r0
    ldr r3, _0805D594 @ =0x0000FFFF
_0805D4A2:
    adds r0, r5, #0x1
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    cmp r5, #0x04
    bls _0805D44A
_0805D4AC:
    mov r0, r9
    adds r0, #0x01
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    mov r9, r0
    cmp r0, #0x03
    bhi _0805D4BC
    b _0805D3B8
_0805D4BC:
    ldr r0, [sp, #0x034]
    adds r0, #0x01
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    str r0, [sp, #0x034]
    cmp r0, #0x04
    bhi _0805D4CC
    b _0805D3AE
_0805D4CC:
    movs r2, #0x00
    str r2, [sp, #0x034]
_0805D4D0:
    movs r3, #0x00
    mov r9, r3
    ldr r4, [sp, #0x034]
    lsls r4, r4, #0x02
    str r4, [sp, #0x048]
    ldr r5, [sp, #0x034]
    lsls r6, r5, #0x07
    adds r5, #0x01
    str r5, [sp, #0x044]
    movs r7, #0xB9
    lsls r7, r7, #0x02
    adds r0, r6, r7
    ldr r1, _0805D598 @ =0x02032B80
    adds r0, r1, r0
    str r0, [sp, #0x03C]
    str r0, [sp, #0x040]
_0805D4F0:
    ldr r0, [sp, #0x048]
    add r0, r9
    bl track_getRetroTrack
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    ldr r1, _0805D59C @ =0x080E7FEC
    lsls r0, r2, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x20]
    cmp r0, #0x00
    bne _0805D5A4
    mov r2, r9
    lsls r4, r2, #0x05
    ldr r3, [sp, #0x03C]
    adds r2, r3, r4
    ldr r1, [sp, #0x034]
    adds r1, #0x03
    mov r0, r9
    adds r0, #0x0B
    muls r0, r1
    movs r1, #0x07
    ands r0, r1
    movs r5, #0x10
    orrs r0, r5
    strb r0, [r2, #0x14]
    movs r0, #0x0B
    ldr r7, [sp, #0x034]
    adds r1, r7, #0x0
    muls r1, r0
    movs r0, #0xC0
    lsls r0, r0, #0x06
    adds r1, r1, r0
    mov r3, r9
    lsls r0, r3, #0x01
    add r0, r9
    adds r1, r1, r0
    strh r1, [r2, #0x16]
    movs r5, #0x00
    movs r7, #0x01
    add r7, r9
    mov r8, r7
    adds r3, #0x07
    ldr r0, [sp, #0x034]
    lsls r2, r0, #0x01
    mov r7, r9
    lsls r1, r7, #0x02
    ldr r0, [sp, #0x040]
    adds r6, r0, r4
    ldr r0, [sp, #0x034]
    adds r0, #0x05
    muls r3, r0
    ldr r4, [sp, #0x034]
    adds r2, r2, r4
    add r1, r9
    ldr r7, _0805D5A0 @ =0xFFFF8000
    adds r0, r7, #0x0
    adds r1, r1, r0
    adds r2, r2, r1
_0805D568:
    lsls r0, r5, #0x02
    adds r4, r6, r0
    movs r0, #0x0D
    muls r0, r5
    adds r0, r3, r0
    movs r1, #0x07
    ands r0, r1
    movs r1, #0x10
    orrs r0, r1
    strb r0, [r4, #0x00]
    lsls r0, r5, #0x05
    adds r0, r0, r5
    lsls r0, r0, #0x02
    adds r0, r0, r5
    adds r0, r2, r0
    strh r0, [r4, #0x02]
    adds r0, r5, #0x1
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    cmp r5, #0x04
    bls _0805D568
    b _0805D664
_0805D594: .4byte 0x0000FFFF
_0805D598: .4byte 0x02032B80
_0805D59C: .4byte 0x080E7FEC
_0805D5A0: .4byte 0xFFFF8000
_0805D5A4:
    adds r6, r0, #0x0
    mov r3, r9
    lsls r4, r3, #0x05
    ldr r5, [sp, #0x03C]
    adds r1, r5, r4
    ldrb r0, [r6, #0x00]
    movs r7, #0x10
    orrs r0, r7
    strb r0, [r1, #0x14]
    ldrh r0, [r6, #0x02]
    strh r0, [r1, #0x16]
    adds r0, r2, #0x0
    bl sub_805CE3C
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    str r0, [sp, #0x050]
    ldr r2, _0805D5E8 @ =0x0000FFFF
    movs r3, #0x00
    lsls r1, r0, #0x18
    cmp r1, #0x00
    blt _0805D5F6
    lsrs r1, r1, #0x18
    add r0, sp, #0x014
    str r3, [sp, #0x04C]
    bl sub_805C680
    ldr r3, [sp, #0x04C]
    cmp r0, #0x00
    beq _0805D5EC
    movs r0, #0x01
    negs r0, r0
    b _0805D5F2
    .byte 0x00, 0x00
_0805D5E8: .4byte 0x0000FFFF
_0805D5EC:
    add r0, sp, #0x014
    movs r1, #0x02
    ldsh r0, [r0, r1]
_0805D5F2:
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
_0805D5F6:
    movs r5, #0x00
    movs r7, #0x01
    add r7, r9
    mov r8, r7
    ldr r0, [sp, #0x040]
    adds r0, r0, r4
    mov r10, r0
    ldr r1, [sp, #0x050]
    lsls r1, r1, #0x18
    mov r9, r1
_0805D60A:
    lsls r1, r5, #0x02
    mov r7, r10
    adds r4, r7, r1
    adds r0, r5, r3
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldrh r0, [r0, #0x06]
    cmp r2, r0
    bls _0805D62C
    adds r0, r1, r6
    ldrb r1, [r0, #0x04]
    movs r7, #0x10
    orrs r1, r7
    strb r1, [r4, #0x00]
    ldrh r0, [r0, #0x06]
    strh r0, [r4, #0x02]
    b _0805D65A
_0805D62C:
    add r0, sp, #0x014
    mov r2, r9
    lsrs r1, r2, #0x18
    str r3, [sp, #0x04C]
    bl sub_805C680
    ldr r7, [sp, #0x050]
    lsls r1, r7, #0x18
    ldr r3, [sp, #0x04C]
    cmp r0, #0x00
    beq _0805D648
    movs r0, #0x01
    negs r0, r0
    b _0805D64C
_0805D648:
    add r0, sp, #0x014
    ldrb r0, [r0, #0x00]
_0805D64C:
    strb r0, [r4, #0x00]
    asrs r0, r1, #0x18
    strh r0, [r4, #0x02]
    adds r0, r3, #0x1
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    ldr r2, _0805D718 @ =0x0000FFFF
_0805D65A:
    adds r0, r5, #0x1
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    cmp r5, #0x04
    bls _0805D60A
_0805D664:
    mov r1, r8
    lsls r0, r1, #0x18
    lsrs r0, r0, #0x18
    mov r9, r0
    cmp r0, #0x03
    bhi _0805D672
    b _0805D4F0
_0805D672:
    ldr r2, [sp, #0x044]
    lsls r0, r2, #0x18
    lsrs r0, r0, #0x18
    str r0, [sp, #0x034]
    cmp r0, #0x04
    bhi _0805D680
    b _0805D4D0
_0805D680:
    movs r1, #0x00
    ldr r3, _0805D71C @ =0x02032B80
    movs r4, #0xAE
    lsls r4, r4, #0x03
    adds r0, r3, r4
    movs r4, #0x07
_0805D68C:
    strb r1, [r0, #0x00]
    strb r1, [r0, #0x08]
    adds r0, #0x01
    subs r4, #0x01
    cmp r4, #0x00
    bge _0805D68C
    movs r1, #0x00
    ldr r5, _0805D71C @ =0x02032B80
    movs r7, #0xB0
    lsls r7, r7, #0x03
    adds r0, r5, r7
    movs r4, #0x03
_0805D6A4:
    strb r1, [r0, #0x02]
    strh r1, [r0, #0x00]
    strb r1, [r0, #0x03]
    adds r0, #0x04
    subs r4, #0x01
    cmp r4, #0x00
    bge _0805D6A4
    movs r4, #0x04
    movs r2, #0x00
    ldr r1, _0805D71C @ =0x02032B80
    ldr r3, _0805D720 @ =0x00000564
    adds r0, r1, r3
    strb r2, [r0, #0x00]
    ldr r5, _0805D724 @ =0x00000BEC
    adds r3, r1, r5
    ldrh r1, [r3, #0x00]
    movs r7, #0x80
    lsls r7, r7, #0x08
    adds r0, r7, #0x0
    orrs r0, r1
    ldr r5, _0805D728 @ =0x00007FFF
    adds r1, r5, #0x0
    orrs r0, r1
    strh r0, [r3, #0x00]
    ldr r7, _0805D71C @ =0x02032B80
    ldr r1, _0805D72C @ =0x00000BEE
    adds r0, r7, r1
    strh r2, [r0, #0x00]
    movs r0, #0x07
    strh r0, [r7, #0x08]
    movs r3, #0xBF
    lsls r3, r3, #0x04
    adds r0, r7, r3
    strh r2, [r0, #0x00]
    ldr r5, _0805D730 @ =0x00000BE8
    adds r0, r7, r5
    str r2, [r0, #0x00]
    bl sub_805E474
    ldr r1, _0805D734 @ =0x00000B9A
    adds r0, r7, r1
    strb r4, [r0, #0x00]
    ldr r2, _0805D738 @ =0x00000B9B
    adds r1, r7, r2
    movs r0, #0x03
    strb r0, [r1, #0x00]
    ldr r3, _0805D73C @ =0x00000B9C
    adds r0, r7, r3
    strb r4, [r0, #0x00]
    add sp, #0x054
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805D718: .4byte 0x0000FFFF
_0805D71C: .4byte 0x02032B80
_0805D720: .4byte 0x00000564
_0805D724: .4byte 0x00000BEC
_0805D728: .4byte 0x00007FFF
_0805D72C: .4byte 0x00000BEE
_0805D730: .4byte 0x00000BE8
_0805D734: .4byte 0x00000B9A
_0805D738: .4byte 0x00000B9B
_0805D73C: .4byte 0x00000B9C
    thumb_func_start sub_805D740
sub_805D740:
    push {r4, r5, r6, lr}
    add sp, #-0x010
    ldr r5, _0805D7E8 @ =0x02032B80
    mov r0, sp
    bl sub_805DF40
    bl sub_805F0F8
    bl sub_805D30C
    mov r0, sp
    bl sub_805DF70
    adds r1, r5, #0x0
    adds r2, r5, #0x0
    adds r2, #0x1C
    ldr r0, _0805D7EC @ =0x00000AD4
    adds r4, r5, r0
    movs r3, #0x00
    movs r0, #0x04
_0805D768:
    strb r3, [r2, #0x00]
    adds r2, #0x01
    subs r0, #0x01
    cmp r0, #0x00
    bge _0805D768
    movs r0, #0x00
    strb r0, [r4, #0x00]
    ldr r0, _0805D7F0 @ =0x00000AE5
    adds r1, r1, r0
    movs r0, #0x00
    strb r0, [r1, #0x00]
    ldr r2, _0805D7E8 @ =0x02032B80
    ldr r0, _0805D7F4 @ =0x00000AE6
    adds r1, r2, r0
    movs r0, #0x2F
    strb r0, [r1, #0x00]
    adds r6, r2, #0x0
    movs r2, #0x00
    movs r4, #0x00
_0805D78E:
    lsls r0, r2, #0x02
    adds r0, r0, r2
    lsls r0, r0, #0x02
    movs r1, #0xB2
    lsls r1, r1, #0x03
    adds r0, r0, r1
    adds r1, r6, r0
    movs r3, #0x00
    adds r0, r2, #0x1
_0805D7A0:
    strb r4, [r1, #0x00]
    adds r1, #0x01
    adds r3, #0x01
    cmp r3, #0x13
    bls _0805D7A0
    adds r2, r0, #0x0
    cmp r2, #0x17
    ble _0805D78E
    adds r1, r5, #0x0
    movs r4, #0xBF
    lsls r4, r4, #0x04
    movs r2, #0x00
    movs r3, #0x00
_0805D7BA:
    ldrb r0, [r1, #0x00]
    adds r0, r2, r0
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    adds r1, #0x01
    adds r0, r3, #0x1
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    cmp r3, r4
    blt _0805D7BA
    ldr r1, _0805D7F8 @ =0x00002CB4
    adds r0, r1, #0x0
    eors r2, r0
    ldr r1, _0805D7FC @ =0x00000BF2
    adds r0, r5, r1
    strh r2, [r0, #0x00]
    bl sub_805E5E8
    add sp, #0x010
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805D7E8: .4byte 0x02032B80
_0805D7EC: .4byte 0x00000AD4
_0805D7F0: .4byte 0x00000AE5
_0805D7F4: .4byte 0x00000AE6
_0805D7F8: .4byte 0x00002CB4
_0805D7FC: .4byte 0x00000BF2
    .byte 0x70, 0xB5, 0x05, 0x1C, 0x15, 0x4E, 0x68, 0x00, 0x40, 0x19, 0xC0, 0x00, 0xBA, 0x21, 0x09, 0x01
    .byte 0x40, 0x18, 0x81, 0x19, 0x0B, 0x1C, 0x08, 0x33, 0x00, 0x24, 0x04, 0x22, 0x08, 0x78, 0x20, 0x18
    .byte 0x00, 0x04, 0x04, 0x0C, 0x01, 0x31, 0x01, 0x3A, 0x00, 0x2A, 0xF7, 0xDA, 0x69, 0x00, 0x0F, 0x22
    .byte 0x18, 0x78, 0x20, 0x18, 0x00, 0x04, 0x04, 0x0C, 0x01, 0x33, 0x01, 0x3A, 0x00, 0x2A, 0xF7, 0xDA
    .byte 0x00, 0x22, 0x48, 0x19, 0xC0, 0x00, 0x30, 0x18, 0x05, 0x49, 0x40, 0x18, 0x00, 0x88, 0x84, 0x42
    .byte 0x00, 0xD1, 0x01, 0x22, 0x10, 0x1C, 0x70, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x80, 0x2B, 0x03, 0x02
    .byte 0xA6, 0x0B, 0x00, 0x00
    thumb_func_start sub_805D864
sub_805D864:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r6, r1, #0x18
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    mov r8, r2
    adds r0, r5, #0x0
    bl sub_8032BC8
    ldr r7, _0805D8A0 @ =0x02032B80
    cmp r0, #0x00
    beq _0805D8A4
    adds r0, r5, #0x0
    bl track_getCup
    adds r4, r0, #0x0
    adds r0, r5, #0x0
    bl track_getCupIndex
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x11
    movs r1, #0xB9
    lsls r1, r1, #0x02
    adds r4, r4, r1
    b _0805D8B8
    .byte 0x00, 0x00
_0805D8A0: .4byte 0x02032B80
_0805D8A4:
    adds r0, r5, #0x0
    bl track_getCup
    adds r4, r0, #0x0
    adds r0, r5, #0x0
    bl track_getCupIndex
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x11
    adds r4, #0x64
_0805D8B8:
    adds r4, r4, r7
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x13
    adds r4, r4, r0
    lsls r0, r6, #0x02
    adds r0, r4, r0
    ldrh r0, [r0, #0x02]
    cmp r0, r8
    bcs _0805D8CE
    movs r0, #0x00
    b _0805D8D0
_0805D8CE:
    movs r0, #0x01
_0805D8D0:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_805D8DC
sub_805D8DC:
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    lsls r1, r1, #0x10
    lsrs r7, r1, #0x10
    adds r0, r5, #0x0
    bl sub_8032BC8
    ldr r6, _0805D90C @ =0x02032B80
    cmp r0, #0x00
    beq _0805D910
    adds r0, r5, #0x0
    bl track_getCup
    adds r4, r0, #0x0
    adds r0, r5, #0x0
    bl track_getCupIndex
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x11
    movs r1, #0xB9
    lsls r1, r1, #0x02
    adds r4, r4, r1
    b _0805D924
_0805D90C: .4byte 0x02032B80
_0805D910:
    adds r0, r5, #0x0
    bl track_getCup
    adds r4, r0, #0x0
    adds r0, r5, #0x0
    bl track_getCupIndex
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x11
    adds r4, #0x64
_0805D924:
    adds r4, r4, r6
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x13
    adds r4, r4, r0
    adds r4, #0x14
    ldrh r0, [r4, #0x02]
    cmp r0, r7
    bcs _0805D938
    movs r0, #0x00
    b _0805D93A
_0805D938:
    movs r0, #0x01
_0805D93A:
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x10, 0xB5, 0x03, 0x1C, 0x00, 0x24, 0x94, 0x42, 0x0A, 0xDA, 0x18, 0x78, 0x08, 0x70, 0x00, 0x06
    .byte 0x01, 0x33, 0x01, 0x31, 0x00, 0x28, 0x00, 0xD0, 0x01, 0x24, 0x01, 0x3A, 0x00, 0x2A, 0xF4, 0xD1
    .byte 0x20, 0x1C, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x30, 0xB5, 0x04, 0x1C, 0x0B, 0x1C, 0x01, 0x3A
    .byte 0x01, 0x20, 0x40, 0x42, 0x82, 0x42, 0x0B, 0xD0, 0x05, 0x1C, 0x21, 0x78, 0x18, 0x78, 0x01, 0x33
    .byte 0x01, 0x34, 0x81, 0x42, 0x01, 0xD0, 0x00, 0x20, 0x03, 0xE0, 0x01, 0x3A, 0xAA, 0x42, 0xF4, 0xD1
    .byte 0x01, 0x20, 0x30, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x01, 0x49, 0x08, 0x70, 0x70, 0x47, 0x00, 0x00
    .byte 0x8C, 0xEC, 0x03, 0x02, 0x01, 0x48, 0x00, 0x78, 0x70, 0x47, 0x00, 0x00, 0x8C, 0xEC, 0x03, 0x02
    thumb_func_start save_getSavePointer_805D9B0
save_getSavePointer_805D9B0:
    ldr r0, _0805D9B4 @ =0x02032B80
    bx lr
_0805D9B4: .4byte 0x02032B80
    thumb_func_start sub_805D9B8
sub_805D9B8:
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x0C
    ldr r1, _0805D9C4 @ =0x02020400
    adds r0, r0, r1
    bx lr
    .byte 0x00, 0x00
_0805D9C4: .4byte 0x02020400
    thumb_func_start sub_805D9C8
sub_805D9C8:
    push {r4, lr}
    ldr r4, _0805DA0C @ =0x030023DC
    movs r0, #0x00
    strb r0, [r4, #0x00]
    bl m4aSoundVSyncOff
    bl IdentifyFlash
    lsls r0, r0, #0x10
    cmp r0, #0x00
    bne _0805D9F2
    ldr r1, _0805DA10 @ =0x03004F80
    adds r1, #0x10
    movs r0, #0x01
    bl SetFlashTimerIntr
    lsls r0, r0, #0x10
    cmp r0, #0x00
    bne _0805D9F2
    movs r0, #0x01
    strb r0, [r4, #0x00]
_0805D9F2:
    bl m4aSoundVSyncOn
    ldr r2, _0805DA0C @ =0x030023DC
    ldrb r0, [r2, #0x00]
    cmp r0, #0x00
    bne _0805DA00
    strb r0, [r2, #0x00]
_0805DA00:
    ldr r1, _0805DA14 @ =0x02032B50
    ldrb r0, [r2, #0x00]
    strb r0, [r1, #0x00]
    pop {r4}
    pop {r0}
    bx r0
_0805DA0C: .4byte 0x030023DC
_0805DA10: .4byte 0x03004F80
_0805DA14: .4byte 0x02032B50
    thumb_func_start sub_805DA18
sub_805DA18:
    push {r4, lr}
    ldr r4, _0805DA64 @ =0x02032B80
    movs r0, #0x10
    adds r1, r4, #0x0
    bl sub_805EF10
    adds r2, r0, #0x0
    cmp r2, #0x00
    bne _0805DA50
    movs r0, #0x11
    adds r1, r4, #0x0
    bl sub_805EF10
    adds r2, r0, #0x0
    cmp r2, #0x00
    bne _0805DA50
    movs r0, #0x10
    adds r1, r4, #0x0
    bl sub_805EF88
    adds r2, r0, #0x0
    cmp r2, #0x00
    bne _0805DA50
    movs r0, #0x11
    adds r1, r4, #0x0
    bl sub_805EF88
    adds r2, r0, #0x0
_0805DA50:
    movs r0, #0xBF
    lsls r0, r0, #0x04
    adds r1, r4, r0
    movs r0, #0x00
    strh r0, [r1, #0x00]
    adds r0, r2, #0x0
    pop {r4}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805DA64: .4byte 0x02032B80
    thumb_func_start sub_805DA68
sub_805DA68:
    push {r4, r5, lr}
    ldr r4, _0805DAB0 @ =0x02032B80
    adds r2, r4, #0x0
    movs r5, #0xBF
    lsls r5, r5, #0x04
    movs r3, #0x00
    movs r1, #0x00
_0805DA76:
    ldrb r0, [r2, #0x00]
    adds r0, r3, r0
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    adds r2, #0x01
    adds r0, r1, #0x1
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    cmp r1, r5
    blt _0805DA76
    ldr r1, _0805DAB4 @ =0x00002CB4
    adds r0, r1, #0x0
    eors r3, r0
    ldr r1, _0805DAB8 @ =0x00000BF2
    adds r0, r4, r1
    strh r3, [r0, #0x00]
    movs r3, #0xBF
    lsls r3, r3, #0x04
    adds r2, r4, r3
    ldrh r1, [r2, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x07
    adds r0, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805DAB0: .4byte 0x02032B80
_0805DAB4: .4byte 0x00002CB4
_0805DAB8: .4byte 0x00000BF2
    thumb_func_start sub_805DABC
sub_805DABC:
    ldr r1, _0805DADC @ =0x02032B80
    ldr r0, _0805DAE0 @ =0x00000564
    adds r2, r1, r0
    movs r0, #0x00
    strb r0, [r2, #0x00]
    movs r3, #0xBF
    lsls r3, r3, #0x04
    adds r1, r1, r3
    ldrh r2, [r1, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x07
    adds r0, r3, #0x0
    orrs r0, r2
    strh r0, [r1, #0x00]
    bx lr
    .byte 0x00, 0x00
_0805DADC: .4byte 0x02032B80
_0805DAE0: .4byte 0x00000564
    .byte 0x00, 0xB5, 0x02, 0x1C, 0x08, 0x1C, 0x12, 0x06, 0x12, 0x0E, 0x11, 0x1C, 0xFE, 0xF7, 0xC6, 0xFD
    .byte 0x00, 0x28, 0x01, 0xD1, 0x01, 0x20, 0x00, 0xE0, 0x00, 0x20, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00
    .byte 0x30, 0xB5, 0x0D, 0x1C, 0x00, 0x06, 0x00, 0x0A, 0x80, 0x21, 0x89, 0x03, 0x40, 0x18, 0x04, 0x0C
    .byte 0x20, 0x1C, 0x29, 0x1C, 0x01, 0xF0, 0xFA, 0xF9, 0x00, 0x28, 0x03, 0xD1, 0x20, 0x1C, 0x29, 0x1C
    .byte 0x01, 0xF0, 0x30, 0xFA, 0x30, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00
    thumb_func_start sub_805DB30
sub_805DB30:
    push {r4, r5, lr}
    lsls r0, r0, #0x18
    lsls r1, r1, #0x0C
    ldr r2, _0805DB60 @ =0x02020400
    adds r5, r1, r2
    lsrs r0, r0, #0x08
    movs r1, #0x80
    lsls r1, r1, #0x0E
    adds r0, r0, r1
    lsrs r4, r0, #0x10
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl sub_805EF10
    cmp r0, #0x00
    bne _0805DB58
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl sub_805EF88
_0805DB58:
    pop {r4, r5}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805DB60: .4byte 0x02020400
    thumb_func_start sub_805DB64
sub_805DB64:
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    ldr r0, _0805DB84 @ =0x02020400
    ldrh r0, [r0, #0x0A]
    cmp r0, #0x00
    beq _0805DB82
    ldr r0, _0805DB88 @ =0x02032B80
    movs r1, #0xBF
    lsls r1, r1, #0x04
    adds r0, r0, r1
    movs r1, #0x01
    lsls r1, r2
    ldrh r2, [r0, #0x00]
    orrs r1, r2
    strh r1, [r0, #0x00]
_0805DB82:
    bx lr
_0805DB84: .4byte 0x02020400
_0805DB88: .4byte 0x02032B80
    .byte 0x10, 0xB5, 0x88, 0xB0, 0x00, 0x06, 0xA0, 0x21, 0x09, 0x05, 0x44, 0x18, 0x21, 0x0E, 0x68, 0x46
    .byte 0xFE, 0xF7, 0x70, 0xFD, 0x00, 0x28, 0x07, 0xD1, 0x68, 0x46, 0x40, 0x88, 0x00, 0x21, 0x00, 0x28
    .byte 0x00, 0xD1, 0x01, 0x21, 0x00, 0x29, 0x02, 0xD0, 0x01, 0x20, 0x40, 0x42, 0x00, 0xE0, 0x20, 0x0E
    .byte 0x00, 0x06, 0x02, 0x0E, 0x08, 0x48, 0x40, 0x89, 0x00, 0x28, 0x08, 0xD0, 0x07, 0x48, 0xBF, 0x21
    .byte 0x09, 0x01, 0x40, 0x18, 0x01, 0x21, 0x91, 0x40, 0x02, 0x88, 0x11, 0x43, 0x01, 0x80, 0x08, 0xB0
    .byte 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x00, 0x04, 0x02, 0x02, 0x80, 0x2B, 0x03, 0x02
    .byte 0xF0, 0xB5, 0x00, 0x06, 0x07, 0x0E, 0x0A, 0x25, 0x07, 0x4E, 0x2C, 0x06, 0x21, 0x0E, 0x30, 0x1C
    .byte 0xFE, 0xF7, 0x40, 0xFD, 0x00, 0x28, 0x09, 0xD1, 0x70, 0x88, 0x00, 0x28, 0x06, 0xD0, 0x70, 0x7A
    .byte 0xB8, 0x42, 0x03, 0xD1, 0x20, 0x16, 0x06, 0xE0, 0x30, 0x2B, 0x03, 0x02, 0x01, 0x35, 0x0B, 0x2D
    .byte 0xEB, 0xDD, 0x01, 0x20, 0x40, 0x42, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47
    thumb_func_start sub_805DC28
sub_805DC28:
    push {r4, lr}
    add sp, #-0x020
    lsls r0, r0, #0x18
    movs r1, #0xA0
    lsls r1, r1, #0x14
    adds r4, r0, r1
    lsrs r1, r4, #0x18
    mov r0, sp
    bl sub_805C680
    cmp r0, #0x00
    bne _0805DC50
    mov r0, sp
    ldrh r0, [r0, #0x02]
    movs r1, #0x00
    cmp r0, #0x00
    bne _0805DC4C
    movs r1, #0x01
_0805DC4C:
    cmp r1, #0x00
    beq _0805DC56
_0805DC50:
    movs r0, #0x01
    negs r0, r0
    b _0805DC58
_0805DC56:
    asrs r0, r4, #0x18
_0805DC58:
    add sp, #0x020
    pop {r4}
    pop {r1}
    bx r1
    thumb_func_start sub_805DC60
sub_805DC60:
    push {r4, r5, r6, lr}
    movs r5, #0x00
    ldr r6, _0805DC80 @ =0x02032B30
_0805DC66:
    lsls r4, r5, #0x18
    lsrs r1, r4, #0x18
    adds r0, r6, #0x0
    bl sub_805C680
    cmp r0, #0x00
    bne _0805DC7A
    ldrh r0, [r6, #0x02]
    cmp r0, #0x00
    bne _0805DC84
_0805DC7A:
    asrs r0, r4, #0x18
    b _0805DC8E
    .byte 0x00, 0x00
_0805DC80: .4byte 0x02032B30
_0805DC84:
    adds r5, #0x01
    cmp r5, #0x09
    ble _0805DC66
    movs r0, #0x01
    negs r0, r0
_0805DC8E:
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    thumb_func_start sub_805DC94
sub_805DC94:
    push {r4, r5, r6, lr}
    movs r5, #0x0A
    ldr r6, _0805DCB4 @ =0x02032B30
_0805DC9A:
    lsls r4, r5, #0x18
    lsrs r1, r4, #0x18
    adds r0, r6, #0x0
    bl sub_805C680
    cmp r0, #0x00
    bne _0805DCAE
    ldrh r0, [r6, #0x02]
    cmp r0, #0x00
    bne _0805DCB8
_0805DCAE:
    asrs r0, r4, #0x18
    b _0805DCC2
    .byte 0x00, 0x00
_0805DCB4: .4byte 0x02032B30
_0805DCB8:
    adds r5, #0x01
    cmp r5, #0x0B
    ble _0805DC9A
    movs r0, #0x01
    negs r0, r0
_0805DCC2:
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    thumb_func_start sub_805DCC8
sub_805DCC8:
    movs r0, #0x0C
    bx lr
    .byte 0x00, 0x06, 0x00, 0x0E, 0x06, 0x4A, 0x07, 0x4B, 0x00, 0x21, 0x59, 0x80, 0xBF, 0x21, 0x09, 0x01
    .byte 0x52, 0x18, 0x01, 0x21, 0x81, 0x40, 0x10, 0x88, 0x01, 0x43, 0x11, 0x80, 0x70, 0x47, 0x00, 0x00
    .byte 0x80, 0x2B, 0x03, 0x02, 0x00, 0x04, 0x02, 0x02
    thumb_func_start sub_805DCF4
sub_805DCF4:
    ldr r0, _0805DD00 @ =0x02032B80
    ldr r1, _0805DD04 @ =0x00000AE8
    adds r0, r0, r1
    movs r1, #0x00
    strh r1, [r0, #0x00]
    bx lr
_0805DD00: .4byte 0x02032B80
_0805DD04: .4byte 0x00000AE8
    thumb_func_start sub_805DD08
sub_805DD08:
    push {r4, lr}
    ldr r1, _0805DD34 @ =0x02032B80
    adds r2, r1, #0x0
    adds r2, #0x1C
    ldr r0, _0805DD38 @ =0x00000AD4
    adds r4, r1, r0
    movs r3, #0x00
    movs r0, #0x04
_0805DD18:
    strb r3, [r2, #0x00]
    adds r2, #0x01
    subs r0, #0x01
    cmp r0, #0x00
    bge _0805DD18
    movs r0, #0x00
    strb r0, [r4, #0x00]
    ldr r0, _0805DD3C @ =0x00000AE5
    adds r1, r1, r0
    movs r0, #0x00
    strb r0, [r1, #0x00]
    pop {r4}
    pop {r0}
    bx r0
_0805DD34: .4byte 0x02032B80
_0805DD38: .4byte 0x00000AD4
_0805DD3C: .4byte 0x00000AE5
    thumb_func_start sub_805DD40
sub_805DD40:
    ldr r0, _0805DD54 @ =0x02032B80
    adds r0, #0x0C
    movs r2, #0x00
    movs r1, #0x0F
_0805DD48:
    strb r2, [r0, #0x00]
    adds r0, #0x01
    subs r1, #0x01
    cmp r1, #0x00
    bge _0805DD48
    bx lr
_0805DD54: .4byte 0x02032B80
    .byte 0x05, 0x48, 0x02, 0x1C, 0x0C, 0x32, 0x00, 0x21, 0x10, 0x78, 0x40, 0x18, 0x10, 0x70, 0x01, 0x32
    .byte 0x01, 0x31, 0x0F, 0x29, 0xF8, 0xDD, 0x70, 0x47, 0x80, 0x2B, 0x03, 0x02
    thumb_func_start sub_805DD74
sub_805DD74:
    ldr r0, _0805DD80 @ =0x02032B80
    ldr r1, _0805DD84 @ =0x00000AE6
    adds r0, r0, r1
    movs r1, #0x2F
    strb r1, [r0, #0x00]
    bx lr
_0805DD80: .4byte 0x02032B80
_0805DD84: .4byte 0x00000AE6
    thumb_func_start sub_805DD88
sub_805DD88:
    push {r4, r5, r6, lr}
    ldr r6, _0805DDB8 @ =0x02032B80
    movs r3, #0x00
    movs r5, #0xB2
    lsls r5, r5, #0x03
    movs r4, #0x00
_0805DD94:
    lsls r0, r3, #0x02
    adds r0, r0, r3
    lsls r0, r0, #0x02
    adds r0, r0, r5
    adds r1, r6, r0
    movs r2, #0x00
    adds r0, r3, #0x1
_0805DDA2:
    strb r4, [r1, #0x00]
    adds r1, #0x01
    adds r2, #0x01
    cmp r2, #0x13
    bls _0805DDA2
    adds r3, r0, #0x0
    cmp r3, #0x17
    ble _0805DD94
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0805DDB8: .4byte 0x02032B80
    thumb_func_start sub_805DDBC
sub_805DDBC:
    push {r4, r5, r6, lr}
    movs r2, #0x00
    ldr r6, _0805DDE4 @ =0x02020400
    movs r5, #0x00
    ldr r3, _0805DDE8 @ =0x02033770
    movs r4, #0x01
_0805DDC8:
    lsls r0, r2, #0x18
    lsrs r0, r0, #0x18
    strh r5, [r6, #0x02]
    adds r1, r4, #0x0
    lsls r1, r0
    ldrh r0, [r3, #0x00]
    orrs r1, r0
    strh r1, [r3, #0x00]
    adds r2, #0x01
    cmp r2, #0x0C
    ble _0805DDC8
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0805DDE4: .4byte 0x02020400
_0805DDE8: .4byte 0x02033770
    thumb_func_start sub_805DDEC
sub_805DDEC:
    push {r4, lr}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    ldr r4, _0805DE1C @ =0x02032B80
    lsls r3, r0, #0x01
    adds r3, r3, r0
    adds r1, r1, r3
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    movs r0, #0x80
    lsls r0, r0, #0x09
    lsls r0, r1
    lsrs r3, r0, #0x10
    cmp r2, #0x00
    beq _0805DE24
    ldr r0, _0805DE20 @ =0x00000BEC
    adds r2, r4, r0
    ldrh r1, [r2, #0x00]
    adds r0, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    b _0805DE2E
_0805DE1C: .4byte 0x02032B80
_0805DE20: .4byte 0x00000BEC
_0805DE24:
    ldr r0, _0805DE34 @ =0x00000BEC
    adds r1, r4, r0
    ldrh r0, [r1, #0x00]
    bics r0, r3
    strh r0, [r1, #0x00]
_0805DE2E:
    pop {r4}
    pop {r0}
    bx r0
_0805DE34: .4byte 0x00000BEC
    thumb_func_start sub_805DE38
sub_805DE38:
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    ldr r3, _0805DE60 @ =0x02032B80
    lsls r2, r0, #0x01
    adds r2, r2, r0
    adds r1, r1, r2
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    movs r0, #0x80
    lsls r0, r0, #0x09
    lsls r0, r1
    lsrs r0, r0, #0x10
    ldr r1, _0805DE64 @ =0x00000BEC
    adds r3, r3, r1
    ldrh r1, [r3, #0x00]
    ands r0, r1
    bx lr
    .byte 0x00, 0x00
_0805DE60: .4byte 0x02032B80
_0805DE64: .4byte 0x00000BEC
    thumb_func_start sub_805DE68
sub_805DE68:
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    ldr r1, _0805DE80 @ =0x02032B80
    movs r2, #0x00
    adds r1, #0x28
    adds r1, r0, r1
_0805DE74:
    movs r0, #0x00
    ldsb r0, [r1, r0]
    cmp r0, #0x00
    beq _0805DE84
    movs r0, #0x01
    b _0805DE8E
_0805DE80: .4byte 0x02032B80
_0805DE84:
    adds r1, #0x03
    adds r2, #0x01
    cmp r2, #0x03
    ble _0805DE74
    movs r0, #0x00
_0805DE8E:
    bx lr
    thumb_func_start sub_805DE90
sub_805DE90:
    push {lr}
    add sp, #-0x020
    adds r1, r0, #0x0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    mov r0, sp
    bl sub_805C680
    cmp r0, #0x00
    bne _0805DEAE
    mov r0, sp
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    b _0805DEB2
_0805DEAE:
    movs r0, #0x01
    negs r0, r0
_0805DEB2:
    add sp, #0x020
    pop {r1}
    bx r1
    thumb_func_start sub_805DEB8
sub_805DEB8:
    push {lr}
    add sp, #-0x020
    adds r1, r0, #0x0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    mov r0, sp
    bl sub_805C680
    cmp r0, #0x00
    bne _0805DED4
    mov r0, sp
    movs r1, #0x02
    ldsh r0, [r0, r1]
    b _0805DED8
_0805DED4:
    movs r0, #0x01
    negs r0, r0
_0805DED8:
    add sp, #0x020
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_805DEE0
sub_805DEE0:
    push {r4, r5, lr}
    add sp, #-0x020
    adds r2, r0, #0x0
    adds r4, r1, #0x0
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    movs r5, #0x00
    mov r0, sp
    adds r1, r2, #0x0
    bl sub_805C680
    cmp r0, #0x00
    bne _0805DF0E
    add r1, sp, #0x004
    movs r2, #0x04
_0805DEFE:
    ldrb r0, [r1, #0x00]
    strb r0, [r4, #0x00]
    adds r1, #0x01
    adds r4, #0x01
    subs r2, #0x01
    cmp r2, #0x00
    bge _0805DEFE
    movs r5, #0x01
_0805DF0E:
    adds r0, r5, #0x0
    add sp, #0x020
    pop {r4, r5}
    pop {r1}
    bx r1
    thumb_func_start sub_805DF18
sub_805DF18:
    push {lr}
    add sp, #-0x020
    adds r1, r0, #0x0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    mov r0, sp
    bl sub_805C680
    cmp r0, #0x00
    bne _0805DF36
    mov r0, sp
    ldrb r0, [r0, #0x09]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    b _0805DF3A
_0805DF36:
    movs r0, #0x01
    negs r0, r0
_0805DF3A:
    add sp, #0x020
    pop {r1}
    bx r1
    thumb_func_start sub_805DF40
sub_805DF40:
    push {r4, lr}
    adds r1, r0, #0x0
    ldr r0, _0805DF6C @ =0x02032B80
    adds r3, r0, #0x0
    adds r3, #0x0C
    movs r4, #0x00
    movs r2, #0x0F
_0805DF4E:
    ldrb r0, [r3, #0x00]
    strb r0, [r1, #0x00]
    lsls r0, r0, #0x18
    adds r3, #0x01
    adds r1, #0x01
    cmp r0, #0x00
    beq _0805DF5E
    movs r4, #0x01
_0805DF5E:
    subs r2, #0x01
    cmp r2, #0x00
    bge _0805DF4E
    adds r0, r4, #0x0
    pop {r4}
    pop {r1}
    bx r1
_0805DF6C: .4byte 0x02032B80
    thumb_func_start sub_805DF70
sub_805DF70:
    adds r1, r0, #0x0
    ldr r0, _0805DF8C @ =0x02032B80
    adds r3, r0, #0x0
    adds r3, #0x0C
    movs r2, #0x0F
_0805DF7A:
    ldrb r0, [r1, #0x00]
    strb r0, [r3, #0x00]
    adds r1, #0x01
    adds r3, #0x01
    subs r2, #0x01
    cmp r2, #0x00
    bge _0805DF7A
    bx lr
    .byte 0x00, 0x00
_0805DF8C: .4byte 0x02032B80
    thumb_func_start sub_805DF90
sub_805DF90:
    push {r4, lr}
    adds r1, r0, #0x0
    ldr r0, _0805DFBC @ =0x02032B80
    adds r3, r0, #0x0
    adds r3, #0x1C
    movs r4, #0x00
    movs r2, #0x04
_0805DF9E:
    ldrb r0, [r3, #0x00]
    strb r0, [r1, #0x00]
    lsls r0, r0, #0x18
    adds r3, #0x01
    adds r1, #0x01
    cmp r0, #0x00
    beq _0805DFAE
    movs r4, #0x01
_0805DFAE:
    subs r2, #0x01
    cmp r2, #0x00
    bge _0805DF9E
    adds r0, r4, #0x0
    pop {r4}
    pop {r1}
    bx r1
_0805DFBC: .4byte 0x02032B80
    .byte 0x01, 0x1C, 0x06, 0x48, 0x03, 0x1C, 0x1C, 0x33, 0x04, 0x22, 0x08, 0x78, 0x18, 0x70, 0x01, 0x31
    .byte 0x01, 0x33, 0x01, 0x3A, 0x00, 0x2A, 0xF8, 0xDA, 0x70, 0x47, 0x00, 0x00, 0x80, 0x2B, 0x03, 0x02
    .byte 0x02, 0x1C, 0x04, 0x48, 0x04, 0x4B, 0xC1, 0x18, 0x08, 0x78, 0x00, 0x28, 0x06, 0xD1, 0x00, 0x20
    .byte 0x0D, 0xE0, 0x00, 0x00, 0x80, 0x2B, 0x03, 0x02, 0xD4, 0x0A, 0x00, 0x00, 0x10, 0x23, 0x08, 0x78
    .byte 0x10, 0x70, 0x01, 0x31, 0x01, 0x32, 0x01, 0x3B, 0x00, 0x2B, 0xF8, 0xDA, 0x01, 0x20, 0x70, 0x47
    .byte 0x01, 0x1C, 0x06, 0x48, 0x06, 0x4A, 0x83, 0x18, 0x10, 0x22, 0x08, 0x78, 0x18, 0x70, 0x01, 0x31
    .byte 0x01, 0x33, 0x01, 0x3A, 0x00, 0x2A, 0xF8, 0xDA, 0x70, 0x47, 0x00, 0x00, 0x80, 0x2B, 0x03, 0x02
    .byte 0xD4, 0x0A, 0x00, 0x00, 0x10, 0xB5, 0x01, 0x1C, 0x09, 0x48, 0x03, 0x1C, 0x21, 0x33, 0x00, 0x24
    .byte 0x04, 0x22, 0x18, 0x78, 0x08, 0x70, 0x00, 0x06, 0x01, 0x33, 0x01, 0x31, 0x00, 0x28, 0x00, 0xD0
    .byte 0x01, 0x24, 0x01, 0x3A, 0x00, 0x2A, 0xF4, 0xDA, 0x20, 0x1C, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47
    .byte 0x80, 0x2B, 0x03, 0x02, 0x01, 0x1C, 0x06, 0x48, 0x03, 0x1C, 0x21, 0x33, 0x04, 0x22, 0x08, 0x78
    .byte 0x18, 0x70, 0x01, 0x31, 0x01, 0x33, 0x01, 0x3A, 0x00, 0x2A, 0xF8, 0xDA, 0x70, 0x47, 0x00, 0x00
    .byte 0x80, 0x2B, 0x03, 0x02, 0x10, 0xB5, 0x0A, 0x49, 0x0A, 0x4A, 0x89, 0x18, 0x02, 0x1C, 0x00, 0x24
    .byte 0x7F, 0x23, 0x08, 0x78, 0x10, 0x70, 0x00, 0x06, 0x01, 0x31, 0x01, 0x32, 0x00, 0x28, 0x00, 0xD0
    .byte 0x01, 0x24, 0x01, 0x3B, 0x00, 0x2B, 0xF4, 0xDA, 0x20, 0x1C, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47
    .byte 0x80, 0x2B, 0x03, 0x02, 0xF5, 0x0A, 0x00, 0x00, 0x06, 0x49, 0x02, 0x1C, 0x06, 0x48, 0x09, 0x18
    .byte 0x7F, 0x23, 0x10, 0x78, 0x08, 0x70, 0x01, 0x32, 0x01, 0x31, 0x01, 0x3B, 0x00, 0x2B, 0xF8, 0xDA
    .byte 0x70, 0x47, 0x00, 0x00, 0x80, 0x2B, 0x03, 0x02, 0xF5, 0x0A, 0x00, 0x00, 0x10, 0xB5, 0x0A, 0x49
    .byte 0x0A, 0x4A, 0x89, 0x18, 0x02, 0x1C, 0x00, 0x24, 0x07, 0x23, 0x08, 0x78, 0x10, 0x70, 0x00, 0x06
    .byte 0x01, 0x31, 0x01, 0x32, 0x00, 0x28, 0x00, 0xD0, 0x01, 0x24, 0x01, 0x3B, 0x00, 0x2B, 0xF4, 0xDA
    .byte 0x20, 0x1C, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x80, 0x2B, 0x03, 0x02, 0x75, 0x0B, 0x00, 0x00
    .byte 0x06, 0x49, 0x02, 0x1C, 0x06, 0x48, 0x09, 0x18, 0x07, 0x23, 0x10, 0x78, 0x08, 0x70, 0x01, 0x32
    .byte 0x01, 0x31, 0x01, 0x3B, 0x00, 0x2B, 0xF8, 0xDA, 0x70, 0x47, 0x00, 0x00, 0x80, 0x2B, 0x03, 0x02
    .byte 0x75, 0x0B, 0x00, 0x00, 0x05, 0x49, 0x06, 0x4A, 0x89, 0x18, 0x09, 0x78, 0x01, 0x70, 0x00, 0x20
    .byte 0x09, 0x06, 0x09, 0x0E, 0x2E, 0x29, 0x00, 0xD8, 0x01, 0x20, 0x70, 0x47, 0x80, 0x2B, 0x03, 0x02
    .byte 0xE6, 0x0A, 0x00, 0x00, 0x02, 0x49, 0x03, 0x4A, 0x89, 0x18, 0x00, 0x78, 0x08, 0x70, 0x70, 0x47
    .byte 0x80, 0x2B, 0x03, 0x02, 0xE6, 0x0A, 0x00, 0x00, 0x10, 0xB5, 0x0A, 0x49, 0x0A, 0x4A, 0x89, 0x18
    .byte 0x02, 0x1C, 0x00, 0x24, 0x0B, 0x23, 0x08, 0x78, 0x10, 0x70, 0x00, 0x06, 0x01, 0x31, 0x01, 0x32
    .byte 0x00, 0x28, 0x00, 0xD0, 0x01, 0x24, 0x01, 0x3B, 0x00, 0x2B, 0xF4, 0xDA, 0x20, 0x1C, 0x10, 0xBC
    .byte 0x02, 0xBC, 0x08, 0x47, 0x80, 0x2B, 0x03, 0x02, 0x8D, 0x0B, 0x00, 0x00, 0x06, 0x49, 0x02, 0x1C
    .byte 0x06, 0x48, 0x09, 0x18, 0x0B, 0x23, 0x10, 0x78, 0x08, 0x70, 0x01, 0x32, 0x01, 0x31, 0x01, 0x3B
    .byte 0x00, 0x2B, 0xF8, 0xDA, 0x70, 0x47, 0x00, 0x00, 0x80, 0x2B, 0x03, 0x02, 0x8D, 0x0B, 0x00, 0x00
    .byte 0x10, 0xB5, 0x0A, 0x49, 0x0A, 0x4A, 0x89, 0x18, 0x02, 0x1C, 0x00, 0x24, 0x0F, 0x23, 0x08, 0x78
    .byte 0x10, 0x70, 0x00, 0x06, 0x01, 0x31, 0x01, 0x32, 0x00, 0x28, 0x00, 0xD0, 0x01, 0x24, 0x01, 0x3B
    .byte 0x00, 0x2B, 0xF4, 0xDA, 0x20, 0x1C, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x80, 0x2B, 0x03, 0x02
    .byte 0x7D, 0x0B, 0x00, 0x00, 0x06, 0x49, 0x02, 0x1C, 0x06, 0x48, 0x09, 0x18, 0x0F, 0x23, 0x10, 0x78
    .byte 0x08, 0x70, 0x01, 0x32, 0x01, 0x31, 0x01, 0x3B, 0x00, 0x2B, 0xF8, 0xDA, 0x70, 0x47, 0x00, 0x00
    .byte 0x80, 0x2B, 0x03, 0x02, 0x7D, 0x0B, 0x00, 0x00, 0x10, 0xB5, 0x0D, 0x4B, 0x4A, 0x00, 0x52, 0x18
    .byte 0xD2, 0x00, 0xBA, 0x21, 0x09, 0x01, 0x52, 0x18, 0xD2, 0x18, 0x01, 0x1C, 0x00, 0x24, 0x04, 0x23
    .byte 0x10, 0x78, 0x08, 0x70, 0x00, 0x06, 0x01, 0x32, 0x01, 0x31, 0x00, 0x28, 0x00, 0xD0, 0x01, 0x24
    .byte 0x01, 0x3B, 0x00, 0x2B, 0xF4, 0xDA, 0x20, 0x1C, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00
    .byte 0x80, 0x2B, 0x03, 0x02, 0x08, 0x4B, 0x4A, 0x00, 0x52, 0x18, 0xD2, 0x00, 0xBA, 0x21, 0x09, 0x01
    .byte 0x52, 0x18, 0x01, 0x1C, 0xD2, 0x18, 0x04, 0x23, 0x08, 0x78, 0x10, 0x70, 0x01, 0x31, 0x01, 0x32
    .byte 0x01, 0x3B, 0x00, 0x2B, 0xF8, 0xDA, 0x70, 0x47, 0x80, 0x2B, 0x03, 0x02, 0x10, 0xB5, 0x0C, 0x4B
    .byte 0x4A, 0x00, 0x52, 0x18, 0xD2, 0x00, 0xD2, 0x18, 0x0A, 0x49, 0x52, 0x18, 0x01, 0x1C, 0x00, 0x24
    .byte 0x0F, 0x23, 0x10, 0x78, 0x08, 0x70, 0x00, 0x06, 0x01, 0x32, 0x01, 0x31, 0x00, 0x28, 0x00, 0xD0
    .byte 0x01, 0x24, 0x01, 0x3B, 0x00, 0x2B, 0xF4, 0xDA, 0x20, 0x1C, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47
    .byte 0x80, 0x2B, 0x03, 0x02, 0xA8, 0x0B, 0x00, 0x00, 0x08, 0x4B, 0x4A, 0x00, 0x52, 0x18, 0xD2, 0x00
    .byte 0xD2, 0x18, 0x01, 0x1C, 0x06, 0x48, 0x12, 0x18, 0x0F, 0x23, 0x08, 0x78, 0x10, 0x70, 0x01, 0x31
    .byte 0x01, 0x32, 0x01, 0x3B, 0x00, 0x2B, 0xF8, 0xDA, 0x70, 0x47, 0x00, 0x00, 0x80, 0x2B, 0x03, 0x02
    .byte 0xA8, 0x0B, 0x00, 0x00, 0xF0, 0xB5, 0x05, 0x1C, 0x09, 0x06, 0x0A, 0x0E, 0xBF, 0x20, 0x00, 0x01
    .byte 0x2C, 0x18, 0x21, 0x88, 0x80, 0x27, 0x3F, 0x02, 0x38, 0x1C, 0x08, 0x40, 0x00, 0x04, 0x06, 0x0C
    .byte 0x08, 0x48, 0x00, 0x78, 0x01, 0x28, 0x05, 0xD1, 0x07, 0x4B, 0x10, 0x1C, 0x00, 0x21, 0x2A, 0x1C
    .byte 0x03, 0xF0, 0xD6, 0xF9, 0x07, 0x20, 0x28, 0x81, 0x00, 0x2E, 0x07, 0xD0, 0x21, 0x88, 0x38, 0x1C
    .byte 0x08, 0x43, 0x06, 0xE0, 0xDC, 0x23, 0x00, 0x03, 0xF4, 0x0B, 0x00, 0x00, 0x21, 0x88, 0x03, 0x48
    .byte 0x08, 0x40, 0x20, 0x80, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0xFF, 0x7F, 0x00, 0x00
    .byte 0x00, 0xB5, 0x02, 0x1C, 0x09, 0x06, 0x09, 0x0E, 0x05, 0x48, 0x00, 0x78, 0x01, 0x28, 0x05, 0xD1
    .byte 0x80, 0x23, 0x5B, 0x01, 0x08, 0x1C, 0x00, 0x21, 0x03, 0xF0, 0xB2, 0xF9, 0x01, 0xBC, 0x00, 0x47
    .byte 0xDC, 0x23, 0x00, 0x03
    thumb_func_start sub_805E364
sub_805E364:
    push {lr}
    adds r2, r0, #0x0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    ldr r0, _0805E384 @ =0x030023DC
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    bne _0805E37E
    ldr r3, _0805E388 @ =0x0000B408
    adds r0, r1, #0x0
    movs r1, #0x00
    bl ReadFlash
_0805E37E:
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805E384: .4byte 0x030023DC
_0805E388: .4byte 0x0000B408
    thumb_func_start sub_805E38C
sub_805E38C:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    lsls r1, r1, #0x18
    lsrs r4, r1, #0x18
    ldr r0, _0805E3B8 @ =0x030023DC
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    bne _0805E3C0
    ldr r0, _0805E3BC @ =0x03006A84
    ldr r2, [r0, #0x00]
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl _call_via_r2
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl VerifyFlashSector
    cmp r0, #0x00
    bne _0805E3C0
    movs r0, #0x01
    b _0805E3C2
_0805E3B8: .4byte 0x030023DC
_0805E3BC: .4byte 0x03006A84
_0805E3C0:
    movs r0, #0x00
_0805E3C2:
    pop {r4, r5}
    pop {r1}
    bx r1
    .byte 0x30, 0xB5, 0x05, 0x1C, 0x09, 0x06, 0x0C, 0x0E, 0x08, 0x48, 0x00, 0x78, 0x01, 0x28, 0x11, 0xD1
    .byte 0x07, 0x48, 0x02, 0x68, 0x20, 0x1C, 0x29, 0x1C, 0x03, 0xF0, 0x4C, 0xFD, 0x20, 0x1C, 0x29, 0x1C
    .byte 0x03, 0xF0, 0xCA, 0xF9, 0x00, 0x28, 0x05, 0xD1, 0x01, 0x20, 0x04, 0xE0, 0xDC, 0x23, 0x00, 0x03
    .byte 0x84, 0x6A, 0x00, 0x03, 0x00, 0x20, 0x30, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0xB5, 0x88, 0xB0
    .byte 0x01, 0x1C, 0x09, 0x06, 0x09, 0x0E, 0x68, 0x46, 0xFE, 0xF7, 0x36, 0xF9, 0x00, 0x28, 0x05, 0xD1
    .byte 0x68, 0x46, 0x40, 0x88, 0x00, 0x28, 0x01, 0xD0, 0x00, 0x20, 0x00, 0xE0, 0x01, 0x20, 0x08, 0xB0
    .byte 0x02, 0xBC, 0x08, 0x47
    thumb_func_start sub_805E42C
sub_805E42C:
    push {r4, r5, lr}
    add sp, #-0x01C
    ldr r4, _0805E46C @ =0x02032B80
    mov r0, sp
    bl sub_805DF40
    add r5, sp, #0x014
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    movs r2, #0x04
    bl CpuSet
    add r0, sp, #0x010
    movs r1, #0x00
    strh r1, [r0, #0x00]
    ldr r2, _0805E470 @ =0x010005FA
    adds r1, r4, #0x0
    bl CpuSet
    adds r0, r5, #0x0
    adds r1, r4, #0x0
    movs r2, #0x04
    bl CpuSet
    mov r0, sp
    bl sub_805DF70
    add sp, #0x01C
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805E46C: .4byte 0x02032B80
_0805E470: .4byte 0x010005FA
    thumb_func_start sub_805E474
sub_805E474:
    push {r4, r5, r6, lr}
    mov r6, r8
    push {r6}
    add sp, #-0x008
    ldr r5, _0805E4D0 @ =0x02032B80
    ldr r0, _0805E4D4 @ =0x00000AF5
    adds r1, r5, r0
    adds r0, #0x80
    adds r6, r5, r0
    adds r0, #0x08
    adds r0, r0, r5
    mov r8, r0
    ldr r0, _0805E4D8 @ =0x00000B8D
    adds r5, r5, r0
    mov r0, sp
    movs r4, #0x00
    strh r4, [r0, #0x00]
    ldr r2, _0805E4DC @ =0x01000040
    bl CpuSet
    mov r0, sp
    adds r0, #0x02
    strh r4, [r0, #0x00]
    ldr r2, _0805E4E0 @ =0x01000004
    adds r1, r6, #0x0
    bl CpuSet
    add r0, sp, #0x004
    strh r4, [r0, #0x00]
    ldr r2, _0805E4E4 @ =0x01000008
    mov r1, r8
    bl CpuSet
    mov r0, sp
    adds r0, #0x06
    strh r4, [r0, #0x00]
    ldr r2, _0805E4E8 @ =0x01000006
    adds r1, r5, #0x0
    bl CpuSet
    add sp, #0x008
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0805E4D0: .4byte 0x02032B80
_0805E4D4: .4byte 0x00000AF5
_0805E4D8: .4byte 0x00000B8D
_0805E4DC: .4byte 0x01000040
_0805E4E0: .4byte 0x01000004
_0805E4E4: .4byte 0x01000008
_0805E4E8: .4byte 0x01000006
    .byte 0x70, 0xB5, 0x05, 0x1C, 0x13, 0x4E, 0x68, 0x00, 0x40, 0x19, 0xC0, 0x00, 0xBA, 0x21, 0x09, 0x01
    .byte 0x40, 0x18, 0x81, 0x19, 0x0B, 0x1C, 0x08, 0x33, 0x00, 0x24, 0x04, 0x22, 0x08, 0x78, 0x20, 0x18
    .byte 0x00, 0x04, 0x04, 0x0C, 0x01, 0x31, 0x01, 0x3A, 0x00, 0x2A, 0xF7, 0xDA, 0x69, 0x00, 0x0F, 0x22
    .byte 0x18, 0x78, 0x20, 0x18, 0x00, 0x04, 0x04, 0x0C, 0x01, 0x33, 0x01, 0x3A, 0x00, 0x2A, 0xF7, 0xDA
    .byte 0x48, 0x19, 0xC0, 0x00, 0x30, 0x18, 0x04, 0x49, 0x40, 0x18, 0x04, 0x80, 0x70, 0xBC, 0x01, 0xBC
    .byte 0x00, 0x47, 0x00, 0x00, 0x80, 0x2B, 0x03, 0x02, 0xA6, 0x0B, 0x00, 0x00, 0x10, 0xB5, 0x4A, 0x00
    .byte 0x52, 0x18, 0xD2, 0x00, 0xBA, 0x21, 0x09, 0x01, 0x52, 0x18, 0x81, 0x18, 0x0C, 0x1C, 0x08, 0x34
    .byte 0x00, 0x23, 0x04, 0x22, 0x08, 0x78, 0x18, 0x18, 0x00, 0x04, 0x03, 0x0C, 0x01, 0x31, 0x01, 0x3A
    .byte 0x00, 0x2A, 0xF7, 0xDA, 0x0F, 0x22, 0x20, 0x78, 0x18, 0x18, 0x00, 0x04, 0x03, 0x0C, 0x01, 0x34
    .byte 0x01, 0x3A, 0x00, 0x2A, 0xF7, 0xDA, 0x18, 0x1C, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00
    thumb_func_start sub_805E58C
sub_805E58C:
    push {r4, r5, lr}
    ldr r4, _0805E5D0 @ =0x02033780
    adds r0, r4, #0x0
    movs r1, #0x0E
    bl sub_805E364
    adds r3, r4, #0x0
    ldr r5, _0805E5D4 @ =0x0000B404
    movs r2, #0x00
    movs r1, #0x00
_0805E5A0:
    ldrb r0, [r3, #0x00]
    adds r0, r2, r0
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    adds r3, #0x01
    adds r0, r1, #0x1
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    cmp r1, r5
    blt _0805E5A0
    ldr r1, _0805E5D8 @ =0x00002CB4
    adds r0, r1, #0x0
    eors r2, r0
    ldr r1, _0805E5DC @ =0x0000B406
    adds r0, r4, r1
    ldrh r1, [r0, #0x00]
    eors r1, r2
    negs r0, r1
    orrs r0, r1
    cmp r0, #0x00
    blt _0805E5E0
    movs r0, #0x01
    b _0805E5E2
    .byte 0x00, 0x00
_0805E5D0: .4byte 0x02033780
_0805E5D4: .4byte 0x0000B404
_0805E5D8: .4byte 0x00002CB4
_0805E5DC: .4byte 0x0000B406
_0805E5E0:
    movs r0, #0x00
_0805E5E2:
    pop {r4, r5}
    pop {r1}
    bx r1
    thumb_func_start sub_805E5E8
sub_805E5E8:
    ldr r1, _0805E5FC @ =0x02033780
    movs r0, #0x00
    ldr r3, _0805E600 @ =0x0000B407
    movs r2, #0x00
_0805E5F0:
    strb r2, [r1, #0x00]
    adds r1, #0x01
    adds r0, #0x01
    cmp r0, r3
    bls _0805E5F0
    bx lr
_0805E5FC: .4byte 0x02033780
_0805E600: .4byte 0x0000B407
    .byte 0x82, 0x1D, 0x04, 0x23, 0x10, 0x78, 0x08, 0x70, 0x01, 0x32, 0x01, 0x31, 0x01, 0x3B, 0x00, 0x2B
    .byte 0xF8, 0xDA, 0x70, 0x47, 0x82, 0x1D, 0x04, 0x23, 0x08, 0x78, 0x10, 0x70, 0x01, 0x31, 0x01, 0x32
    .byte 0x01, 0x3B, 0x00, 0x2B, 0xF8, 0xDA, 0x70, 0x47, 0x02, 0x1C, 0x0F, 0x32, 0x0F, 0x23, 0x10, 0x78
    .byte 0x08, 0x70, 0x01, 0x32, 0x01, 0x31, 0x01, 0x3B, 0x00, 0x2B, 0xF8, 0xDA, 0x70, 0x47, 0x00, 0x00
    .byte 0x02, 0x1C, 0x0F, 0x32, 0x0F, 0x23, 0x08, 0x78, 0x10, 0x70, 0x01, 0x31, 0x01, 0x32, 0x01, 0x3B
    .byte 0x00, 0x2B, 0xF8, 0xDA, 0x70, 0x47, 0x00, 0x00, 0x30, 0xB5, 0x0E, 0x4C, 0x20, 0x1C, 0x0E, 0x21
    .byte 0xFF, 0xF7, 0x7E, 0xFE, 0x23, 0x1C, 0x0C, 0x4D, 0x00, 0x22, 0x00, 0x21, 0x18, 0x78, 0x10, 0x18
    .byte 0x00, 0x04, 0x02, 0x0C, 0x01, 0x33, 0x48, 0x1C, 0x00, 0x04, 0x01, 0x0C, 0xA9, 0x42, 0xF5, 0xDB
    .byte 0x06, 0x49, 0x08, 0x1C, 0x42, 0x40, 0x06, 0x49, 0x60, 0x18, 0x00, 0x88, 0x90, 0x42, 0x09, 0xD0
    .byte 0x01, 0x20, 0x08, 0xE0, 0x80, 0x37, 0x03, 0x02, 0x04, 0xB4, 0x00, 0x00, 0xB4, 0x2C, 0x00, 0x00
    .byte 0x06, 0xB4, 0x00, 0x00, 0x00, 0x20, 0x30, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x30, 0xB5, 0x0E, 0x4C
    .byte 0x23, 0x1C, 0x0E, 0x4D, 0x00, 0x21, 0x00, 0x22, 0x18, 0x78, 0x08, 0x18, 0x00, 0x04, 0x01, 0x0C
    .byte 0x01, 0x33, 0x50, 0x1C, 0x00, 0x04, 0x02, 0x0C, 0xAA, 0x42, 0xF5, 0xDB, 0x08, 0x4A, 0x10, 0x1C
    .byte 0x41, 0x40, 0x08, 0x4A, 0xA0, 0x18, 0x01, 0x80, 0x20, 0x1C, 0x0E, 0x21, 0xFF, 0xF7, 0x54, 0xFE
    .byte 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x80, 0x37, 0x03, 0x02, 0x04, 0xB4, 0x00, 0x00
    .byte 0xB4, 0x2C, 0x00, 0x00, 0x06, 0xB4, 0x00, 0x00
    thumb_func_start sub_805E6FC
sub_805E6FC:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x004
    adds r6, r0, #0x0
    lsls r1, r1, #0x18
    lsrs r7, r1, #0x18
    movs r0, #0x02
    mov r10, r0
    bl m4aSoundVSyncOff
    ldr r0, _0805E7C8 @ =0x04000200
    ldrh r0, [r0, #0x00]
    str r0, [sp, #0x000]
    movs r1, #0x80
    lsls r1, r1, #0x09
    movs r0, #0x00
    bl irq_updateMask
    ldr r1, _0805E7CC @ =0x040000B0
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805E7D0 @ =0x0000C5FF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805E7D4 @ =0x00007FFF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r0, [r1, #0x0A]
    ldr r0, [r1, #0x08]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r0, #0x00
    bge _0805E74C
_0805E744:
    ldr r0, [r1, #0x08]
    ands r0, r2
    cmp r0, #0x00
    bne _0805E744
_0805E74C:
    ldr r1, _0805E7D8 @ =0x040000BC
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805E7D0 @ =0x0000C5FF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805E7D4 @ =0x00007FFF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r0, [r1, #0x0A]
    ldr r0, [r1, #0x08]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r0, #0x00
    bge _0805E772
_0805E76A:
    ldr r0, [r1, #0x08]
    ands r0, r2
    cmp r0, #0x00
    bne _0805E76A
_0805E772:
    ldr r1, _0805E7DC @ =0x040000C8
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805E7D0 @ =0x0000C5FF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805E7D4 @ =0x00007FFF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r0, [r1, #0x0A]
    ldr r0, [r1, #0x08]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r0, #0x00
    bge _0805E798
_0805E790:
    ldr r0, [r1, #0x08]
    ands r0, r2
    cmp r0, #0x00
    bne _0805E790
_0805E798:
    ldr r1, _0805E7E0 @ =0x040000D4
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805E7D0 @ =0x0000C5FF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805E7D4 @ =0x00007FFF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r0, [r1, #0x0A]
    ldr r0, [r1, #0x08]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r0, #0x00
    bge _0805E7BE
_0805E7B6:
    ldr r0, [r1, #0x08]
    ands r0, r2
    cmp r0, #0x00
    bne _0805E7B6
_0805E7BE:
    ldr r1, _0805E7E4 @ =0x04000204
    mov r9, r1
    ldr r4, _0805E7E8 @ =0x09FE2FFE
    mov r8, r4
    b _0805E7FA
_0805E7C8: .4byte 0x04000200
_0805E7CC: .4byte 0x040000B0
_0805E7D0: .4byte 0x0000C5FF
_0805E7D4: .4byte 0x00007FFF
_0805E7D8: .4byte 0x040000BC
_0805E7DC: .4byte 0x040000C8
_0805E7E0: .4byte 0x040000D4
_0805E7E4: .4byte 0x04000204
_0805E7E8: .4byte 0x09FE2FFE
_0805E7EC:
    mov r0, r10
    subs r0, #0x01
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    mov r10, r0
    cmp r0, #0xFF
    beq _0805E88A
_0805E7FA:
    ldr r0, _0805E80C @ =0x02032B50
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    beq _0805E810
    cmp r0, #0x02
    beq _0805E830
_0805E806:
    movs r4, #0x00
    b _0805E7EC
    .byte 0x00, 0x00
_0805E80C: .4byte 0x02032B50
_0805E810:
    ldr r0, _0805E82C @ =0x03006A84
    ldr r2, [r0, #0x00]
    adds r0, r7, #0x0
    adds r1, r6, #0x0
    bl _call_via_r2
    adds r0, r7, #0x0
    adds r1, r6, #0x0
    bl VerifyFlashSector
    movs r4, #0x01
    cmp r0, #0x00
    beq _0805E88A
    b _0805E806
_0805E82C: .4byte 0x03006A84
_0805E830:
    adds r3, r6, #0x0
    lsls r0, r7, #0x0C
    movs r1, #0x86
    lsls r1, r1, #0x14
    adds r2, r0, r1
    movs r4, #0x80
    lsls r4, r4, #0x03
    adds r1, r4, #0x0
    mov r4, r9
    strh r1, [r4, #0x00]
    movs r1, #0x20
    mov r4, r8
    strh r1, [r4, #0x00]
    adds r4, r0, #0x0
    movs r1, #0x80
    lsls r1, r1, #0x04
_0805E850:
    ldrh r0, [r3, #0x00]
    strh r0, [r2, #0x00]
    adds r3, #0x02
    adds r2, #0x02
    subs r1, #0x01
    cmp r1, #0x00
    bne _0805E850
    mov r0, r8
    strh r1, [r0, #0x00]
    ldr r1, _0805E8AC @ =0x00004494
    adds r0, r1, #0x0
    mov r1, r9
    strh r0, [r1, #0x00]
    adds r3, r6, #0x0
    movs r0, #0x86
    lsls r0, r0, #0x14
    adds r2, r4, r0
    movs r4, #0x00
    ldr r5, _0805E8B0 @ =0x000007FF
_0805E876:
    ldrh r1, [r2, #0x00]
    ldrh r0, [r3, #0x00]
    adds r3, #0x02
    adds r2, #0x02
    cmp r1, r0
    bne _0805E806
    adds r4, #0x01
    cmp r4, r5
    ble _0805E876
    movs r4, #0x01
_0805E88A:
    bl main_waitVBlankFlag
    movs r0, #0x02
    ldr r1, [sp, #0x000]
    bl irq_updateMask
    bl m4aSoundVSyncOn
    adds r0, r4, #0x0
    add sp, #0x004
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
_0805E8AC: .4byte 0x00004494
_0805E8B0: .4byte 0x000007FF
    thumb_func_start sub_805E8B4
sub_805E8B4:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    mov r9, r0
    movs r0, #0x00
    mov r8, r0
    movs r4, #0x00
    ldr r7, _0805E8E8 @ =0x02029400
    mov r12, r7
    ldr r1, _0805E8EC @ =0x07FF0000
    mov r10, r1
_0805E8D2:
    lsls r0, r4, #0x18
    lsrs r1, r0, #0x18
    ldr r0, _0805E8F0 @ =0x02032B50
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    beq _0805E8F4
    cmp r0, #0x02
    beq _0805E906
    adds r6, r4, #0x1
    b _0805E926
    .byte 0x00, 0x00
_0805E8E8: .4byte 0x02029400
_0805E8EC: .4byte 0x07FF0000
_0805E8F0: .4byte 0x02032B50
_0805E8F4:
    adds r0, r1, #0x0
    movs r1, #0x00
    mov r2, r12
    movs r3, #0x80
    lsls r3, r3, #0x05
    bl ReadFlash
    adds r6, r4, #0x1
    b _0805E926
_0805E906:
    adds r3, r7, #0x0
    lsls r0, r1, #0x0C
    movs r2, #0x86
    lsls r2, r2, #0x14
    adds r1, r0, r2
    movs r2, #0x00
    movs r5, #0x80
    lsls r5, r5, #0x04
    adds r6, r4, #0x1
_0805E918:
    ldrh r0, [r1, #0x00]
    strh r0, [r3, #0x00]
    adds r1, #0x02
    adds r3, #0x02
    adds r2, #0x01
    cmp r2, r5
    bcc _0805E918
_0805E926:
    ldrh r5, [r7, #0x00]
    adds r1, r7, #0x2
    movs r2, #0x00
    movs r3, #0x00
    subs r0, r1, #0x2
    mov r12, r0
    mov r0, r10
    lsrs r4, r0, #0x10
_0805E936:
    ldrh r0, [r1, #0x00]
    adds r0, r2, r0
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    adds r1, #0x02
    adds r3, #0x01
    cmp r3, r4
    bcc _0805E936
    ldr r1, _0805E97C @ =0x00002CB4
    adds r0, r1, #0x0
    eors r2, r0
    movs r0, #0x00
    cmp r5, r2
    bne _0805E954
    movs r0, #0x01
_0805E954:
    cmp r0, #0x00
    beq _0805E966
    ldrh r1, [r7, #0x04]
    ldrh r0, [r7, #0x06]
    cmp r0, r9
    bne _0805E966
    cmp r1, r8
    bls _0805E966
    mov r8, r1
_0805E966:
    adds r4, r6, #0x0
    cmp r4, #0x0F
    ble _0805E8D2
    mov r0, r8
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
_0805E97C: .4byte 0x00002CB4
    thumb_func_start sub_805E980
sub_805E980:
    push {r4, lr}
    lsls r1, r1, #0x10
    ldr r2, _0805E9B4 @ =0xFFFE0000
    adds r1, r1, r2
    adds r2, r0, #0x2
    movs r3, #0x00
    movs r4, #0x00
    lsrs r1, r1, #0x11
    cmp r3, r1
    bcs _0805E9A4
_0805E994:
    ldrh r0, [r2, #0x00]
    adds r0, r3, r0
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    adds r2, #0x02
    adds r4, #0x01
    cmp r4, r1
    bcc _0805E994
_0805E9A4:
    ldr r1, _0805E9B8 @ =0x00002CB4
    adds r0, r1, #0x0
    eors r3, r0
    adds r0, r3, #0x0
    pop {r4}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805E9B4: .4byte 0xFFFE0000
_0805E9B8: .4byte 0x00002CB4
    thumb_func_start sub_805E9BC
sub_805E9BC:
    push {r4, r5, lr}
    lsls r1, r1, #0x10
    ldrh r5, [r0, #0x00]
    ldr r2, _0805E9F0 @ =0xFFFE0000
    adds r1, r1, r2
    adds r2, r0, #0x2
    movs r3, #0x00
    movs r4, #0x00
    lsrs r1, r1, #0x11
    cmp r3, r1
    bcs _0805E9E2
_0805E9D2:
    ldrh r0, [r2, #0x00]
    adds r0, r3, r0
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    adds r2, #0x02
    adds r4, #0x01
    cmp r4, r1
    bcc _0805E9D2
_0805E9E2:
    ldr r1, _0805E9F4 @ =0x00002CB4
    adds r0, r1, #0x0
    eors r3, r0
    cmp r5, r3
    beq _0805E9F8
    movs r0, #0x00
    b _0805E9FA
_0805E9F0: .4byte 0xFFFE0000
_0805E9F4: .4byte 0x00002CB4
_0805E9F8:
    movs r0, #0x01
_0805E9FA:
    pop {r4, r5}
    pop {r1}
    bx r1
    thumb_func_start sub_805EA00
sub_805EA00:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    lsls r4, r3, #0x10
    lsrs r3, r4, #0x10
    ldr r0, _0805EA20 @ =0x02032B50
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    beq _0805EA24
    cmp r0, #0x02
    beq _0805EA30
    b _0805EA54
    .byte 0x00, 0x00
_0805EA20: .4byte 0x02032B50
_0805EA24:
    adds r0, r1, #0x0
    adds r1, r2, #0x0
    adds r2, r5, #0x0
    bl ReadFlash
    b _0805EA54
_0805EA30:
    adds r3, r5, #0x0
    lsls r1, r1, #0x0C
    movs r5, #0x86
    lsls r5, r5, #0x14
    adds r0, r2, r5
    adds r1, r1, r0
    movs r2, #0x00
    lsrs r0, r4, #0x11
    cmp r2, r0
    bcs _0805EA54
    adds r4, r0, #0x0
_0805EA46:
    ldrh r0, [r1, #0x00]
    strh r0, [r3, #0x00]
    adds r1, #0x02
    adds r3, #0x02
    adds r2, #0x01
    cmp r2, r4
    bcc _0805EA46
_0805EA54:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805EA5C
sub_805EA5C:
    push {r4, r5, r6, lr}
    ldr r0, _0805EAFC @ =0x02032B50
    mov r12, r0
    movs r1, #0x00
    mov r3, r12
    adds r3, #0x0C
    movs r2, #0x01
    negs r2, r2
_0805EA6C:
    lsls r0, r1, #0x18
    lsrs r0, r0, #0x18
    adds r0, r3, r0
    strb r2, [r0, #0x00]
    adds r1, #0x01
    cmp r1, #0x01
    ble _0805EA6C
    movs r1, #0x00
    mov r4, r12
    adds r4, #0x18
    mov r5, r12
    adds r5, #0x1A
    mov r6, r12
    adds r6, #0x1B
    mov r2, r12
    adds r2, #0x0E
    movs r3, #0x01
    negs r3, r3
_0805EA90:
    lsls r0, r1, #0x18
    lsrs r0, r0, #0x18
    adds r0, r2, r0
    strb r3, [r0, #0x00]
    adds r1, #0x01
    cmp r1, #0x09
    ble _0805EA90
    movs r1, #0x00
    adds r2, r4, #0x0
    movs r3, #0x01
    negs r3, r3
_0805EAA6:
    lsls r0, r1, #0x18
    lsrs r0, r0, #0x18
    adds r0, r2, r0
    strb r3, [r0, #0x00]
    adds r1, #0x01
    cmp r1, #0x01
    ble _0805EAA6
    movs r1, #0x00
    adds r2, r5, #0x0
    movs r3, #0x01
    negs r3, r3
_0805EABC:
    lsls r0, r1, #0x18
    lsrs r0, r0, #0x18
    adds r0, r2, r0
    strb r3, [r0, #0x00]
    adds r1, #0x01
    cmp r1, #0x00
    ble _0805EABC
    movs r1, #0x00
    adds r2, r6, #0x0
    movs r3, #0x01
    negs r3, r3
_0805EAD2:
    lsls r0, r1, #0x18
    lsrs r0, r0, #0x18
    adds r0, r2, r0
    strb r3, [r0, #0x00]
    adds r1, #0x01
    cmp r1, #0x00
    ble _0805EAD2
    ldr r1, _0805EB00 @ =0x0000FFFF
    movs r3, #0x00
    movs r2, #0x00
    mov r4, r12
    strh r1, [r4, #0x04]
    movs r0, #0x10
    strb r0, [r4, #0x1C]
    strh r1, [r4, #0x06]
    strb r0, [r4, #0x1D]
    strh r2, [r4, #0x08]
    strb r3, [r4, #0x1E]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0805EAFC: .4byte 0x02032B50
_0805EB00: .4byte 0x0000FFFF
    thumb_func_start sub_805EB04
sub_805EB04:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x00C
    adds r7, r1, #0x0
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    mov r8, r0
    ldr r5, _0805EB50 @ =0x02032B50
    adds r0, r5, #0x0
    mov r1, r8
    bl sub_805F04C
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    str r0, [sp, #0x004]
    movs r0, #0x02
    mov r9, r0
    mov r1, r8
    strh r1, [r7, #0x06]
    ldrh r0, [r7, #0x04]
    adds r0, #0x01
    strh r0, [r7, #0x04]
    adds r0, r5, #0x0
    mov r1, r8
    bl sub_805EC3C
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    str r0, [sp, #0x000]
    movs r0, #0x0F
    mov r3, r8
    ands r3, r0
    movs r0, #0x01
    mov r10, r0
    b _0805EB78
_0805EB50: .4byte 0x02032B50
_0805EB54:
    mov r1, r10
    lsls r1, r4
    ldrh r0, [r5, #0x06]
    bics r0, r1
    strh r0, [r5, #0x06]
    ldrh r0, [r5, #0x08]
    orrs r1, r0
    strh r1, [r5, #0x08]
    ldrb r0, [r5, #0x1E]
    adds r0, #0x01
    strb r0, [r5, #0x1E]
    mov r0, r9
    subs r0, #0x01
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    mov r9, r0
    cmp r0, #0xFF
    beq _0805EC28
_0805EB78:
    adds r0, r5, #0x0
    str r3, [sp, #0x008]
    bl sub_805EE6C
    adds r4, r0, #0x0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    ldrh r0, [r5, #0x20]
    adds r0, #0x01
    strh r0, [r7, #0x02]
    adds r0, r7, #0x0
    ldr r1, [sp, #0x004]
    bl sub_805E980
    strh r0, [r7, #0x00]
    lsls r6, r4, #0x18
    lsrs r4, r6, #0x18
    adds r0, r7, #0x0
    adds r1, r4, #0x0
    bl sub_805E6FC
    mov r12, r0
    ldr r3, [sp, #0x008]
    cmp r0, #0x00
    beq _0805EB54
    ldr r1, [sp, #0x000]
    lsls r0, r1, #0x18
    cmp r0, #0x00
    blt _0805EBBE
    lsrs r0, r0, #0x18
    mov r1, r10
    lsls r1, r0
    ldrh r0, [r5, #0x04]
    orrs r1, r0
    strh r1, [r5, #0x04]
_0805EBBE:
    mov r1, r10
    lsls r1, r4
    mvns r1, r1
    ldrh r2, [r5, #0x04]
    adds r0, r1, #0x0
    ands r0, r2
    strh r0, [r5, #0x04]
    ldrh r0, [r5, #0x06]
    ands r1, r0
    strh r1, [r5, #0x06]
    ldr r1, _0805EBEC @ =0x0000FFF0
    adds r0, r1, #0x0
    mov r1, r8
    ands r1, r0
    cmp r1, #0x40
    beq _0805EC0E
    cmp r1, #0x40
    bgt _0805EBF0
    cmp r1, #0x10
    beq _0805EBFE
    cmp r1, #0x20
    beq _0805EC06
    b _0805EC28
_0805EBEC: .4byte 0x0000FFF0
_0805EBF0:
    cmp r1, #0x80
    beq _0805EC16
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    beq _0805EC1E
    b _0805EC28
_0805EBFE:
    asrs r1, r6, #0x18
    adds r0, r5, #0x0
    adds r0, #0x0C
    b _0805EC24
_0805EC06:
    asrs r1, r6, #0x18
    adds r0, r5, #0x0
    adds r0, #0x0E
    b _0805EC24
_0805EC0E:
    asrs r1, r6, #0x18
    adds r0, r5, #0x0
    adds r0, #0x18
    b _0805EC24
_0805EC16:
    asrs r1, r6, #0x18
    adds r0, r5, #0x0
    adds r0, #0x1A
    b _0805EC24
_0805EC1E:
    asrs r1, r6, #0x18
    adds r0, r5, #0x0
    adds r0, #0x1B
_0805EC24:
    adds r0, r0, r3
    strb r1, [r0, #0x00]
_0805EC28:
    mov r0, r12
    add sp, #0x00C
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_805EC3C
sub_805EC3C:
    adds r3, r0, #0x0
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    ldr r2, _0805EC58 @ =0x0000FFF0
    ands r2, r1
    cmp r2, #0x40
    beq _0805EC7E
    cmp r2, #0x40
    bgt _0805EC5C
    cmp r2, #0x10
    beq _0805EC6A
    cmp r2, #0x20
    beq _0805EC74
    b _0805ECA0
_0805EC58: .4byte 0x0000FFF0
_0805EC5C:
    cmp r2, #0x80
    beq _0805EC88
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r2, r0
    beq _0805EC92
    b _0805ECA0
_0805EC6A:
    movs r0, #0x0F
    ands r1, r0
    adds r0, r3, #0x0
    adds r0, #0x0C
    b _0805EC9A
_0805EC74:
    movs r0, #0x0F
    ands r1, r0
    adds r0, r3, #0x0
    adds r0, #0x0E
    b _0805EC9A
_0805EC7E:
    movs r0, #0x0F
    ands r1, r0
    adds r0, r3, #0x0
    adds r0, #0x18
    b _0805EC9A
_0805EC88:
    movs r0, #0x0F
    ands r1, r0
    adds r0, r3, #0x0
    adds r0, #0x1A
    b _0805EC9A
_0805EC92:
    movs r0, #0x0F
    ands r1, r0
    adds r0, r3, #0x0
    adds r0, #0x1B
_0805EC9A:
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    b _0805ECA2
_0805ECA0:
    movs r0, #0xFF
_0805ECA2:
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    bx lr
    thumb_func_start sub_805ECA8
sub_805ECA8:
    push {r4, lr}
    adds r4, r0, #0x0
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    ldr r3, _0805ECCC @ =0x0000FFF0
    ands r3, r1
    cmp r3, #0x40
    beq _0805ECF2
    cmp r3, #0x40
    bgt _0805ECD0
    cmp r3, #0x10
    beq _0805ECDE
    cmp r3, #0x20
    beq _0805ECE8
    b _0805ED12
    .byte 0x00, 0x00
_0805ECCC: .4byte 0x0000FFF0
_0805ECD0:
    cmp r3, #0x80
    beq _0805ECFC
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r3, r0
    beq _0805ED06
    b _0805ED12
_0805ECDE:
    movs r0, #0x0F
    ands r1, r0
    adds r0, r4, #0x0
    adds r0, #0x0C
    b _0805ED0E
_0805ECE8:
    movs r0, #0x0F
    ands r1, r0
    adds r0, r4, #0x0
    adds r0, #0x0E
    b _0805ED0E
_0805ECF2:
    movs r0, #0x0F
    ands r1, r0
    adds r0, r4, #0x0
    adds r0, #0x18
    b _0805ED0E
_0805ECFC:
    movs r0, #0x0F
    ands r1, r0
    adds r0, r4, #0x0
    adds r0, #0x1A
    b _0805ED0E
_0805ED06:
    movs r0, #0x0F
    ands r1, r0
    adds r0, r4, #0x0
    adds r0, #0x1B
_0805ED0E:
    adds r0, r0, r1
    strb r2, [r0, #0x00]
_0805ED12:
    pop {r4}
    pop {r0}
    bx r0
    thumb_func_start sub_805ED18
sub_805ED18:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r4, r0, #0x0
    adds r6, r1, #0x0
    lsls r2, r2, #0x10
    lsrs r5, r2, #0x10
    lsls r3, r3, #0x18
    lsrs r7, r3, #0x18
    movs r0, #0x00
    mov r8, r0
    ldr r0, _0805ED44 @ =0x0000FFF0
    ands r0, r5
    cmp r0, #0x40
    beq _0805ED54
    cmp r0, #0x40
    bgt _0805ED48
    cmp r0, #0x10
    beq _0805ED4E
    cmp r0, #0x20
    beq _0805ED54
    b _0805ED58
_0805ED44: .4byte 0x0000FFF0
_0805ED48:
    cmp r0, #0x80
    beq _0805ED54
    b _0805ED58
_0805ED4E:
    movs r0, #0x07
    strh r0, [r6, #0x08]
    b _0805ED58
_0805ED54:
    movs r0, #0x09
    strh r0, [r6, #0x12]
_0805ED58:
    ldr r0, _0805ED70 @ =0x0000FFF0
    ands r0, r5
    cmp r0, #0x40
    beq _0805ED78
    cmp r0, #0x40
    bgt _0805ED74
    cmp r0, #0x10
    beq _0805ED78
    cmp r0, #0x20
    beq _0805ED78
    b _0805EDB4
    .byte 0x00, 0x00
_0805ED70: .4byte 0x0000FFF0
_0805ED74:
    cmp r0, #0x80
    bne _0805EDB4
_0805ED78:
    ldr r0, _0805ED90 @ =0x0000FFF0
    ands r0, r5
    cmp r0, #0x40
    beq _0805EDA4
    cmp r0, #0x40
    bgt _0805ED94
    cmp r0, #0x10
    beq _0805ED9A
    cmp r0, #0x20
    beq _0805EDA4
    b _0805EDAA
    .byte 0x00, 0x00
_0805ED90: .4byte 0x0000FFF0
_0805ED94:
    cmp r0, #0x80
    beq _0805EDA4
    b _0805EDAA
_0805ED9A:
    ldr r1, _0805EDA0 @ =0x00000BF4
    b _0805EDAC
    .byte 0x00, 0x00
_0805EDA0: .4byte 0x00000BF4
_0805EDA4:
    movs r1, #0x80
    lsls r1, r1, #0x05
    b _0805EDAC
_0805EDAA:
    movs r1, #0x00
_0805EDAC:
    adds r0, r6, #0x0
    bl sub_805E9BC
    b _0805EDB6
_0805EDB4:
    movs r0, #0x00
_0805EDB6:
    cmp r0, #0x00
    beq _0805EE40
    movs r6, #0xFF
    cmp r5, #0x00
    beq _0805EE32
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl sub_805EC3C
    lsls r0, r0, #0x18
    lsrs r6, r0, #0x18
    lsls r2, r6, #0x18
    asrs r1, r2, #0x18
    movs r0, #0x01
    negs r0, r0
    cmp r1, r0
    bne _0805EDDE
    movs r0, #0x01
    mov r8, r0
    b _0805EDF2
_0805EDDE:
    lsrs r0, r2, #0x18
    bl sub_805F1CC
    cmp r0, #0x00
    beq _0805EDEC
    movs r0, #0x01
    mov r8, r0
_0805EDEC:
    mov r0, r8
    cmp r0, #0x00
    beq _0805EE3C
_0805EDF2:
    lsls r2, r7, #0x18
    asrs r2, r2, #0x18
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl sub_805ECA8
    ldrb r3, [r4, #0x1C]
    subs r0, r3, #0x1
    strb r0, [r4, #0x1C]
    movs r5, #0x01
    adds r1, r5, #0x0
    lsls r1, r7
    mvns r1, r1
    ldrh r0, [r4, #0x04]
    adds r2, r1, #0x0
    ands r2, r0
    strh r2, [r4, #0x04]
    ldrb r0, [r4, #0x1D]
    subs r0, #0x01
    strb r0, [r4, #0x1D]
    ldrh r0, [r4, #0x06]
    ands r1, r0
    strh r1, [r4, #0x06]
    lsls r1, r6, #0x18
    cmp r1, #0x00
    blt _0805EE32
    strb r3, [r4, #0x1C]
    lsrs r1, r1, #0x18
    adds r0, r5, #0x0
    lsls r0, r1
    orrs r0, r2
    strh r0, [r4, #0x04]
_0805EE32:
    mov r0, r8
    cmp r0, #0x00
    beq _0805EE3C
    adds r0, r6, #0x0
    b _0805EE42
_0805EE3C:
    adds r0, r7, #0x0
    b _0805EE42
_0805EE40:
    movs r0, #0xFF
_0805EE42:
    lsls r2, r0, #0x18
    asrs r1, r2, #0x18
    movs r0, #0x01
    negs r0, r0
    cmp r1, r0
    beq _0805EE60
    ldrb r0, [r4, #0x1D]
    subs r0, #0x01
    strb r0, [r4, #0x1D]
    lsrs r0, r2, #0x18
    movs r1, #0x01
    lsls r1, r0
    ldrh r0, [r4, #0x06]
    bics r0, r1
    strh r0, [r4, #0x06]
_0805EE60:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805EE6C
sub_805EE6C:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    movs r3, #0xFF
    movs r0, #0x00
    strh r0, [r5, #0x20]
    ldrh r0, [r5, #0x06]
    cmp r0, #0x00
    beq _0805EE98
    movs r4, #0x00
    adds r2, r0, #0x0
    movs r6, #0x01
_0805EE82:
    lsls r0, r4, #0x18
    lsrs r1, r0, #0x18
    adds r0, r6, #0x0
    lsls r0, r1
    ands r0, r2
    cmp r0, #0x00
    beq _0805EE92
    adds r3, r1, #0x0
_0805EE92:
    adds r4, #0x01
    cmp r4, #0x0F
    ble _0805EE82
_0805EE98:
    lsls r0, r3, #0x18
    asrs r0, r0, #0x18
    movs r1, #0x01
    negs r1, r1
    cmp r0, r1
    bne _0805EEEA
    ldrh r0, [r5, #0x04]
    cmp r0, #0x00
    beq _0805EEBC
    movs r4, #0x0F
_0805EEAC:
    adds r0, r5, #0x0
    bl sub_805F200
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    subs r4, #0x01
    cmp r4, #0x00
    bge _0805EEAC
_0805EEBC:
    lsls r0, r3, #0x18
    asrs r0, r0, #0x18
    movs r1, #0x01
    negs r1, r1
    cmp r0, r1
    bne _0805EEEA
    ldrh r0, [r5, #0x08]
    cmp r0, #0x00
    beq _0805EEEA
    movs r4, #0x00
    adds r2, r0, #0x0
    movs r5, #0x01
_0805EED4:
    lsls r0, r4, #0x18
    lsrs r1, r0, #0x18
    adds r0, r5, #0x0
    lsls r0, r1
    ands r0, r2
    cmp r0, #0x00
    beq _0805EEE4
    adds r3, r1, #0x0
_0805EEE4:
    adds r4, #0x01
    cmp r4, #0x0F
    ble _0805EED4
_0805EEEA:
    lsls r0, r3, #0x18
    asrs r0, r0, #0x18
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    thumb_func_start save_805EEF4
save_805EEF4:
    push {r4, lr}
    ldr r4, _0805EF0C @ =0x02032B50
    bl sub_805D9C8
    bl sub_805EA5C
    adds r0, r4, #0x0
    bl sub_805EFD8
    pop {r4}
    pop {r0}
    bx r0
_0805EF0C: .4byte 0x02032B50
    thumb_func_start sub_805EF10
sub_805EF10:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    mov r8, r1
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    ldr r5, _0805EF84 @ =0x02032B50
    adds r0, r5, #0x0
    adds r1, r7, #0x0
    bl sub_805EC3C
    lsls r6, r0, #0x18
    asrs r0, r6, #0x18
    mvns r0, r0
    lsrs r4, r0, #0x1F
    cmp r4, #0x00
    beq _0805EF78
    adds r0, r5, #0x0
    adds r1, r7, #0x0
    bl sub_805F04C
    adds r4, r0, #0x0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    lsrs r6, r6, #0x18
    mov r0, r8
    adds r1, r6, #0x0
    movs r2, #0x00
    adds r3, r4, #0x0
    bl sub_805EA00
    mov r0, r8
    adds r1, r4, #0x0
    bl sub_805E9BC
    adds r4, r0, #0x0
    cmp r4, #0x00
    bne _0805EF78
    movs r2, #0x01
    negs r2, r2
    adds r0, r5, #0x0
    adds r1, r7, #0x0
    bl sub_805ECA8
    movs r0, #0x01
    lsls r0, r6
    ldrh r1, [r5, #0x06]
    orrs r0, r1
    strh r0, [r5, #0x06]
    ldrb r0, [r5, #0x1D]
    adds r0, #0x01
    strb r0, [r5, #0x1D]
_0805EF78:
    adds r0, r4, #0x0
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
_0805EF84: .4byte 0x02032B50
    thumb_func_start sub_805EF88
sub_805EF88:
    push {r4, r5, r6, r7, lr}
    adds r6, r1, #0x0
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    ldr r7, _0805EFCC @ =0x02032B50
    adds r0, r7, #0x0
    adds r1, r4, #0x0
    bl sub_805F088
    lsls r5, r0, #0x18
    cmp r5, #0x00
    blt _0805EFD0
    adds r0, r7, #0x0
    adds r1, r4, #0x0
    bl sub_805F04C
    adds r4, r0, #0x0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    lsrs r1, r5, #0x18
    adds r0, r6, #0x0
    movs r2, #0x00
    adds r3, r4, #0x0
    bl sub_805EA00
    adds r0, r6, #0x0
    adds r1, r4, #0x0
    bl sub_805E9BC
    negs r1, r0
    orrs r1, r0
    lsrs r0, r1, #0x1F
    b _0805EFD2
    .byte 0x00, 0x00
_0805EFCC: .4byte 0x02032B50
_0805EFD0:
    movs r0, #0x00
_0805EFD2:
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    thumb_func_start sub_805EFD8
sub_805EFD8:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    mov r9, r0
    movs r0, #0x00
    mov r8, r0
    ldr r6, _0805F048 @ =0x02029400
_0805EFE8:
    bl main_frameProc
    mov r1, r8
    lsls r0, r1, #0x18
    lsrs r7, r0, #0x18
    adds r0, r6, #0x0
    adds r1, r7, #0x0
    movs r2, #0x00
    movs r3, #0x80
    lsls r3, r3, #0x05
    bl sub_805EA00
    ldrh r5, [r6, #0x06]
    mov r0, r9
    adds r1, r5, #0x0
    bl sub_805F04C
    adds r4, r0, #0x0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    adds r0, r6, #0x0
    adds r1, r5, #0x0
    bl sub_805F198
    adds r0, r6, #0x0
    adds r1, r4, #0x0
    bl sub_805E9BC
    cmp r0, #0x00
    bne _0805F026
    movs r5, #0x00
_0805F026:
    mov r0, r9
    adds r1, r6, #0x0
    adds r2, r5, #0x0
    adds r3, r7, #0x0
    bl sub_805ED18
    movs r0, #0x01
    add r8, r0
    mov r1, r8
    cmp r1, #0x0F
    ble _0805EFE8
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0805F048: .4byte 0x02029400
    thumb_func_start sub_805F04C
sub_805F04C:
    lsls r1, r1, #0x10
    ldr r0, _0805F068 @ =0xFFF00000
    ands r0, r1
    lsrs r0, r0, #0x10
    cmp r0, #0x40
    beq _0805F07C
    cmp r0, #0x40
    bgt _0805F06C
    cmp r0, #0x10
    beq _0805F072
    cmp r0, #0x20
    beq _0805F07C
    b _0805F082
    .byte 0x00, 0x00
_0805F068: .4byte 0xFFF00000
_0805F06C:
    cmp r0, #0x80
    beq _0805F07C
    b _0805F082
_0805F072:
    ldr r0, _0805F078 @ =0x00000BF4
    b _0805F084
    .byte 0x00, 0x00
_0805F078: .4byte 0x00000BF4
_0805F07C:
    movs r0, #0x80
    lsls r0, r0, #0x05
    b _0805F084
_0805F082:
    movs r0, #0x00
_0805F084:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_805F088
sub_805F088:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x008
    adds r7, r0, #0x0
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    mov r10, r1
    movs r0, #0x00
    mov r8, r0
    movs r1, #0xFF
    mov r9, r1
    movs r6, #0x00
_0805F0A6:
    lsls r0, r6, #0x18
    lsrs r5, r0, #0x18
    ldrh r1, [r7, #0x04]
    movs r0, #0x01
    lsls r0, r5
    ands r1, r0
    cmp r1, #0x00
    beq _0805F0DC
    mov r4, sp
    mov r0, sp
    adds r1, r5, #0x0
    movs r2, #0x00
    movs r3, #0x08
    bl sub_805EA00
    ldrh r0, [r4, #0x06]
    cmp r0, r10
    bne _0805F0DC
    ldrh r0, [r4, #0x04]
    cmp r0, r8
    bls _0805F0DC
    mov r8, r0
    mov r9, r5
    mov r0, r8
    strh r0, [r7, #0x22]
    ldrh r0, [r4, #0x02]
    strh r0, [r7, #0x20]
_0805F0DC:
    adds r6, #0x01
    cmp r6, #0x0F
    ble _0805F0A6
    mov r1, r9
    lsls r0, r1, #0x18
    asrs r0, r0, #0x18
    add sp, #0x008
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    thumb_func_start sub_805F0F8
sub_805F0F8:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    add sp, #-0x004
    movs r6, #0x00
    ldr r4, _0805F158 @ =0x02029400
    movs r0, #0x80
    lsls r0, r0, #0x05
    mov r8, r0
_0805F10A:
    movs r7, #0x00
    lsls r0, r6, #0x18
    lsrs r5, r0, #0x18
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    movs r2, #0x00
    mov r3, r8
    bl sub_805EA00
    adds r0, r4, #0x0
    mov r1, r8
    bl sub_805E9BC
    cmp r0, #0x00
    beq _0805F12A
    ldrh r7, [r4, #0x02]
_0805F12A:
    ldr r0, _0805F15C @ =0x0000FFFF
    str r0, [sp, #0x000]
    mov r0, sp
    adds r1, r4, #0x0
    ldr r2, _0805F160 @ =0x01000400
    bl CpuFastSet
    strh r7, [r4, #0x02]
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl sub_805E6FC
    adds r6, #0x01
    cmp r6, #0x0F
    ble _0805F10A
    bl sub_805EA5C
    add sp, #0x004
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0805F158: .4byte 0x02029400
_0805F15C: .4byte 0x0000FFFF
_0805F160: .4byte 0x01000400
    thumb_func_start sub_805F164
sub_805F164:
    push {r4, lr}
    add sp, #-0x004
    movs r0, #0x00
    str r0, [sp, #0x000]
    ldr r1, _0805F190 @ =0x02029400
    ldr r2, _0805F194 @ =0x01000400
    mov r0, sp
    bl CpuFastSet
    movs r4, #0x00
_0805F178:
    lsls r1, r4, #0x18
    lsrs r1, r1, #0x18
    ldr r0, _0805F190 @ =0x02029400
    bl sub_805E6FC
    adds r4, #0x01
    cmp r4, #0x0F
    ble _0805F178
    add sp, #0x004
    pop {r4}
    pop {r0}
    bx r0
_0805F190: .4byte 0x02029400
_0805F194: .4byte 0x01000400
    thumb_func_start sub_805F198
sub_805F198:
    adds r2, r0, #0x0
    lsls r1, r1, #0x10
    ldr r0, _0805F1B4 @ =0xFFF00000
    ands r0, r1
    lsrs r0, r0, #0x10
    cmp r0, #0x40
    beq _0805F1C4
    cmp r0, #0x40
    bgt _0805F1B8
    cmp r0, #0x10
    beq _0805F1BE
    cmp r0, #0x20
    beq _0805F1C4
    b _0805F1C8
_0805F1B4: .4byte 0xFFF00000
_0805F1B8:
    cmp r0, #0x80
    beq _0805F1C4
    b _0805F1C8
_0805F1BE:
    movs r0, #0x07
    strh r0, [r2, #0x08]
    b _0805F1C8
_0805F1C4:
    movs r0, #0x09
    strh r0, [r2, #0x12]
_0805F1C8:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_805F1CC
sub_805F1CC:
    push {r4, lr}
    add sp, #-0x008
    adds r1, r0, #0x0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    mov r4, sp
    mov r0, sp
    movs r2, #0x00
    movs r3, #0x08
    bl sub_805EA00
    ldr r1, _0805F1FC @ =0x02029400
    movs r2, #0x00
    ldrh r0, [r4, #0x04]
    ldrh r1, [r1, #0x04]
    cmp r0, r1
    bcs _0805F1F0
    movs r2, #0x01
_0805F1F0:
    adds r0, r2, #0x0
    add sp, #0x008
    pop {r4}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805F1FC: .4byte 0x02029400
    thumb_func_start sub_805F200
sub_805F200:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    add sp, #-0x008
    adds r6, r0, #0x0
    ldr r7, _0805F25C @ =0x0000FFFF
    movs r0, #0xFF
    mov r8, r0
    movs r5, #0x00
    mov r9, sp
_0805F216:
    lsls r0, r5, #0x18
    lsrs r4, r0, #0x18
    ldrh r1, [r6, #0x04]
    movs r0, #0x01
    lsls r0, r4
    ands r1, r0
    cmp r1, #0x00
    beq _0805F240
    mov r0, sp
    adds r1, r4, #0x0
    movs r2, #0x00
    movs r3, #0x08
    bl sub_805EA00
    mov r1, r9
    ldrh r0, [r1, #0x02]
    cmp r0, r7
    bcs _0805F240
    adds r7, r0, #0x0
    mov r8, r4
    strh r7, [r6, #0x20]
_0805F240:
    adds r5, #0x01
    cmp r5, #0x0F
    ble _0805F216
    mov r1, r8
    lsls r0, r1, #0x18
    asrs r0, r0, #0x18
    add sp, #0x008
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805F25C: .4byte 0x0000FFFF
