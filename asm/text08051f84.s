.include "asm/macros.inc"

.syntax unified
.text
thumb_func_start sub_8051F84
sub_8051F84:
    push {r4, r5, r6, lr}
    ldr r4, _08051FB0 @ =0x03002E20
    adds r6, r4, #0x0
    adds r6, #0x24
    ldr r0, _08051FB4 @ =0x00000848
    adds r5, r4, r0
    adds r0, r5, #0x0
    bl sub_80312E8
    ldr r0, _08051FB8 @ =0x00000BC8
    adds r4, r4, r0
    movs r0, #0x14
    ldsh r1, [r5, r0]
    movs r2, #0x00
    ldsb r2, [r4, r2]
    adds r0, r6, #0x0
    bl sub_804AD00
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08051FB0: .4byte 0x03002E20
_08051FB4: .4byte 0x00000848
_08051FB8: .4byte 0x00000BC8
    thumb_func_start sub_8051FBC
sub_8051FBC:
    ldr r1, _08051FCC @ =0x03004F70
    ldrb r0, [r1, #0x0F]
    cmp r0, #0x28
    bne _08051FC8
    movs r0, #0x00
    str r0, [r1, #0x00]
_08051FC8:
    bx lr
    .byte 0x00, 0x00
_08051FCC: .4byte 0x03004F70
    thumb_func_start sub_8051FD0
sub_8051FD0:
    push {r4, r5, lr}
    movs r1, #0x05
    negs r1, r1
    movs r0, #0x01
    bl irq_updateMask
    movs r5, #0x00
    ldr r4, _08052014 @ =0x03002E20
    movs r0, #0x01
    movs r1, #0x02
    negs r1, r1
    bl irq_updateMask
    str r5, [r4, #0x0C]
    movs r0, #0x02
    ldr r1, _08052018 @ =0x00010001
    bl irq_updateMask
    ldr r1, _0805201C @ =0x04000050
    movs r0, #0xFF
    strh r0, [r1, #0x00]
    adds r1, #0x04
    movs r0, #0x10
    strh r0, [r1, #0x00]
    movs r0, #0x00
    bl pltt_getBuffer
    strh r5, [r0, #0x00]
    movs r0, #0x01
    bl pltt_setDirtyFlag
    pop {r4, r5}
    pop {r0}
    bx r0
_08052014: .4byte 0x03002E20
_08052018: .4byte 0x00010001
_0805201C: .4byte 0x04000050
    thumb_func_start sub_8052020
sub_8052020:
    push {lr}
    add sp, #-0x004
    ldr r2, _0805206C @ =0x04000008
    ldrb r1, [r2, #0x01]
    movs r0, #0x20
    negs r0, r0
    ands r0, r1
    movs r1, #0x06
    orrs r0, r1
    strb r0, [r2, #0x01]
    movs r0, #0x00
    bl pltt_getBuffer
    movs r2, #0x9F
    lsls r2, r2, #0x01
    adds r1, r0, r2
    movs r0, #0x00
    strh r0, [r1, #0x00]
    movs r0, #0x01
    bl pltt_setDirtyFlag
    movs r0, #0x01
    negs r0, r0
    str r0, [sp, #0x000]
    ldr r1, _08052070 @ =0x06002E00
    ldr r2, _08052074 @ =0x01000008
    mov r0, sp
    bl CpuFastSet
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldrh r1, [r2, #0x00]
    ldr r0, _08052078 @ =0x00009FFF
    ands r0, r1
    strh r0, [r2, #0x00]
    add sp, #0x004
    pop {r0}
    bx r0
_0805206C: .4byte 0x04000008
_08052070: .4byte 0x06002E00
_08052074: .4byte 0x01000008
_08052078: .4byte 0x00009FFF
    thumb_func_start sub_805207C
sub_805207C:
    ldr r2, _0805208C @ =0x03004F70
    ldrb r1, [r2, #0x0F]
    cmp r1, #0x08
    bne _08052090
    movs r0, #0x00
    str r0, [r2, #0x00]
    b _080520AC
    .byte 0x00, 0x00
_0805208C: .4byte 0x03004F70
_08052090:
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _080520A0
    asrs r1, r1, #0x01
    movs r0, #0x07
    subs r0, r0, r1
    b _080520A2
_080520A0:
    asrs r0, r1, #0x01
_080520A2:
    lsls r0, r0, #0x02
    ldr r2, _080520B0 @ =0x06002E00
    adds r1, r0, r2
    movs r0, #0x00
    str r0, [r1, #0x00]
_080520AC:
    bx lr
    .byte 0x00, 0x00
_080520B0: .4byte 0x06002E00
    thumb_func_start sub_80520B4
sub_80520B4:
    push {lr}
    ldr r2, _080520D0 @ =0x04000008
    ldrb r1, [r2, #0x01]
    movs r0, #0x20
    negs r0, r0
    ands r0, r1
    movs r1, #0x07
    orrs r0, r1
    strb r0, [r2, #0x01]
    bl sub_804EDAC
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_080520D0: .4byte 0x04000008
    thumb_func_start sub_80520D4
sub_80520D4:
    push {r4, lr}
    add sp, #-0x008
    movs r0, #0x00
    bl pltt_getBuffer
    movs r2, #0x9F
    lsls r2, r2, #0x01
    adds r1, r0, r2
    movs r0, #0x00
    strh r0, [r1, #0x00]
    movs r0, #0x01
    bl pltt_setDirtyFlag
    movs r0, #0x00
    str r0, [sp, #0x000]
    ldr r1, _08052148 @ =0x06002E00
    ldr r2, _0805214C @ =0x01000008
    mov r0, sp
    bl CpuFastSet
    ldr r0, _08052150 @ =0x91709170
    str r0, [sp, #0x004]
    add r4, sp, #0x004
    movs r0, #0x01
    bl map_getBufferPtr
    adds r1, r0, #0x0
    ldr r2, _08052154 @ =0x01000200
    adds r0, r4, #0x0
    bl CpuFastSet
    movs r0, #0x02
    bl map_setBufferDirty
    ldr r1, _08052158 @ =0x04000040
    movs r0, #0xF0
    strh r0, [r1, #0x00]
    adds r1, #0x04
    movs r0, #0xA0
    strh r0, [r1, #0x00]
    ldr r0, _0805215C @ =0x04000048
    movs r1, #0x3F
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldrh r1, [r2, #0x00]
    ldr r0, _08052160 @ =0x00009FFF
    ands r0, r1
    strh r0, [r2, #0x00]
    movs r1, #0x03
    ldr r0, _08052164 @ =0x03004F70
    strb r1, [r0, #0x0E]
    add sp, #0x008
    pop {r4}
    pop {r0}
    bx r0
_08052148: .4byte 0x06002E00
_0805214C: .4byte 0x01000008
_08052150: .4byte 0x91709170
_08052154: .4byte 0x01000200
_08052158: .4byte 0x04000040
_0805215C: .4byte 0x04000048
_08052160: .4byte 0x00009FFF
_08052164: .4byte 0x03004F70
    thumb_func_start sub_8052168
sub_8052168:
    push {r4, lr}
    ldr r4, _080521A0 @ =0x03004F70
    ldrb r3, [r4, #0x0F]
    ldr r2, _080521A4 @ =0x04000008
    ldrb r1, [r2, #0x01]
    movs r0, #0x20
    negs r0, r0
    ands r0, r1
    movs r1, #0x06
    orrs r0, r1
    strb r0, [r2, #0x01]
    cmp r3, #0x14
    bne _08052186
    movs r0, #0x00
    str r0, [r4, #0x00]
_08052186:
    cmp r3, #0x07
    bgt _080521BA
    movs r0, #0x01
    ands r0, r3
    cmp r0, #0x00
    beq _080521AC
    asrs r1, r3, #0x01
    movs r0, #0x03
    subs r0, r0, r1
    lsls r0, r0, #0x02
    ldr r2, _080521A8 @ =0x06002E00
    b _080521B2
    .byte 0x00, 0x00
_080521A0: .4byte 0x03004F70
_080521A4: .4byte 0x04000008
_080521A8: .4byte 0x06002E00
_080521AC:
    asrs r0, r3, #0x01
    lsls r0, r0, #0x02
    ldr r2, _080521C0 @ =0x06002E10
_080521B2:
    adds r1, r0, r2
    movs r0, #0x01
    negs r0, r0
    str r0, [r1, #0x00]
_080521BA:
    pop {r4}
    pop {r0}
    bx r0
_080521C0: .4byte 0x06002E10
    thumb_func_start sub_80521C4
sub_80521C4:
    push {r4, r5, lr}
    movs r1, #0x05
    negs r1, r1
    movs r0, #0x01
    bl irq_updateMask
    movs r5, #0x00
    ldr r4, _0805220C @ =0x03002E20
    movs r0, #0x01
    movs r1, #0x02
    negs r1, r1
    bl irq_updateMask
    str r5, [r4, #0x0C]
    movs r0, #0x02
    ldr r1, _08052210 @ =0x00010001
    bl irq_updateMask
    movs r0, #0x00
    bl pltt_getBuffer
    adds r4, r0, #0x0
    movs r0, #0x00
    bl pltt_getBuffer
    movs r1, #0x9F
    lsls r1, r1, #0x01
    adds r0, r0, r1
    ldrh r0, [r0, #0x00]
    strh r0, [r4, #0x00]
    movs r0, #0x01
    bl pltt_setDirtyFlag
    pop {r4, r5}
    pop {r0}
    bx r0
_0805220C: .4byte 0x03002E20
_08052210: .4byte 0x00010001
    .byte 0x10, 0xB5, 0x11, 0x4A, 0x51, 0x78, 0x20, 0x20, 0x40, 0x42, 0x08, 0x40, 0x06, 0x21, 0x08, 0x43
    .byte 0x50, 0x70, 0xDB, 0xF7, 0xD3, 0xF9, 0x01, 0x1C, 0x03, 0x20, 0x08, 0x40, 0x80, 0x00, 0x0B, 0x49
    .byte 0x40, 0x18, 0x0B, 0x4C, 0x21, 0x1C, 0x0F, 0xF0, 0x91, 0xF8, 0x0A, 0x49, 0x20, 0x1C, 0x08, 0x22
    .byte 0x0F, 0xF0, 0x82, 0xF8, 0x80, 0x22, 0xD2, 0x04, 0x11, 0x88, 0x07, 0x48, 0x08, 0x40, 0x10, 0x80
    .byte 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x08, 0x00, 0x00, 0x04, 0x74, 0xFC, 0x0E, 0x08
    .byte 0x80, 0x2B, 0x00, 0x06, 0x00, 0x0E, 0x00, 0x06, 0xFF, 0x9F, 0x00, 0x00, 0x00, 0xB5, 0x03, 0x49
    .byte 0xC8, 0x7B, 0x04, 0x28, 0x04, 0xD1, 0x00, 0x20, 0x08, 0x60, 0x0C, 0xE0, 0x70, 0x4F, 0x00, 0x03
    .byte 0xAE, 0x21, 0x49, 0x00, 0x40, 0x18, 0x40, 0x01, 0xC0, 0x21, 0xC9, 0x04, 0x40, 0x18, 0x03, 0x49
    .byte 0x08, 0x22, 0x0F, 0xF0, 0x59, 0xF8, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x06
    thumb_func_start sub_80522A4
sub_80522A4:
    push {r4, r5, r6, lr}
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    ldr r2, _080522E0 @ =0x03002E20
    adds r6, r2, #0x0
    adds r6, #0x24
    ldr r1, _080522E4 @ =0x00000838
    adds r0, r2, r1
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _080522C2
    b _080523D2
_080522C2:
    cmp r5, #0x10
    bne _080522EC
    ldr r0, _080522E8 @ =0x00000C96
    adds r4, r2, r0
    ldrb r0, [r4, #0x00]
    cmp r0, #0x1F
    bhi _080522EC
    movs r0, #0x0A
    bl m4aSongNumStart
    ldrb r1, [r4, #0x00]
    movs r0, #0x10
    orrs r0, r1
    strb r0, [r4, #0x00]
    b _080523D2
_080522E0: .4byte 0x03002E20
_080522E4: .4byte 0x00000838
_080522E8: .4byte 0x00000C96
_080522EC:
    ldr r1, _08052308 @ =0x00000C72
    adds r0, r6, r1
    ldrb r0, [r0, #0x00]
    cmp r0, r5
    bcs _080523C6
    adds r2, r6, #0x0
    subs r0, r5, #0x1
    cmp r0, #0x1F
    bhi _080523C6
    lsls r0, r0, #0x02
    ldr r1, _0805230C @ =0x08052310
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08052308: .4byte 0x00000C72
_0805230C: .4byte 0x08052310
    .byte 0xB8, 0x23, 0x05, 0x08, 0xB0, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xA8, 0x23, 0x05, 0x08
    .byte 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xA0, 0x23, 0x05, 0x08
    .byte 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08
    .byte 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0x98, 0x23, 0x05, 0x08
    .byte 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08
    .byte 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08
    .byte 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08
    .byte 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0xC6, 0x23, 0x05, 0x08, 0x90, 0x23, 0x05, 0x08
    .byte 0x13, 0x20, 0x0D, 0xF0, 0xC5, 0xFD, 0x16, 0xE0, 0x0A, 0x20, 0x0D, 0xF0, 0xC1, 0xFD, 0x12, 0xE0
    .byte 0x0C, 0x20, 0x0D, 0xF0, 0xBD, 0xFD, 0x0E, 0xE0, 0x0B, 0x20, 0x0D, 0xF0, 0xB9, 0xFD, 0x0A, 0xE0
    .byte 0x0D, 0x20, 0x0D, 0xF0, 0xB5, 0xFD, 0x06, 0xE0, 0x10, 0x1C, 0xE0, 0xF7, 0x3D, 0xFC, 0x00, 0x06
    .byte 0x00, 0x0E, 0x0D, 0xF0, 0xAD, 0xFD
_080523C6:
    ldr r0, _080523D8 @ =0x00000C72
    adds r2, r6, r0
    ldrb r1, [r2, #0x00]
    adds r0, r5, #0x0
    orrs r0, r1
    strb r0, [r2, #0x00]
_080523D2:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_080523D8: .4byte 0x00000C72
    thumb_func_start sub_80523DC
sub_80523DC:
    push {r4, r5, r6, lr}
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    ldr r1, _08052418 @ =0x03002E20
    adds r4, r1, #0x0
    adds r4, #0x24
    ldr r3, _0805241C @ =0x00000838
    adds r0, r1, r3
    ldr r5, [r0, #0x00]
    ldr r0, [r5, #0x48]
    movs r3, #0x20
    ands r0, r3
    cmp r0, #0x00
    bne _080524BC
    ldr r0, _08052420 @ =0x00000C96
    adds r1, r1, r0
    ldrb r0, [r1, #0x00]
    bics r0, r2
    strb r0, [r1, #0x00]
    ldrb r1, [r1, #0x00]
    cmp r1, r2
    bcs _080524BC
    adds r0, r1, #0x0
    ands r0, r3
    cmp r0, #0x00
    beq _08052424
    movs r0, #0x13
    bl m4aSongNumStart
    b _080524BC
_08052418: .4byte 0x03002E20
_0805241C: .4byte 0x00000838
_08052420: .4byte 0x00000C96
_08052424:
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    beq _08052434
    movs r0, #0x0A
    bl m4aSongNumStart
    b _080524BC
_08052434:
    movs r6, #0x08
    adds r0, r1, #0x0
    ands r0, r6
    cmp r0, #0x00
    beq _08052446
    movs r0, #0x0C
    bl m4aSongNumStart
    b _080524BC
_08052446:
    movs r0, #0x04
    ands r0, r1
    cmp r0, #0x00
    beq _08052456
    movs r0, #0x0B
    bl m4aSongNumStart
    b _080524BC
_08052456:
    movs r0, #0x02
    ands r1, r0
    cmp r1, #0x00
    beq _08052466
    movs r0, #0x0D
    bl m4aSongNumStart
    b _080524BC
_08052466:
    adds r0, r4, #0x0
    bl sub_8032C38
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x24
    bne _08052476
    movs r0, #0x1C
_08052476:
    adds r4, r0, #0x0
    ldr r0, [r5, #0x48]
    ands r0, r6
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r6, r1, #0x0
    cmp r0, #0x00
    beq _0805248C
    movs r3, #0xA0
    lsls r3, r3, #0x01
    adds r6, r3, #0x0
_0805248C:
    adds r0, r4, #0x0
    bl m4aSongNumStart
    ldr r5, _080524C4 @ =0x08102414
    ldr r0, _080524C8 @ =0x08102498
    lsls r4, r4, #0x03
    adds r4, r4, r0
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    adds r1, r6, #0x0
    bl m4aMPlayTempoControl
_080524BC:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_080524C4: .4byte 0x08102414
_080524C8: .4byte 0x08102498
    thumb_func_start sub_80524CC
sub_80524CC:
    push {r4, r5, r6, r7, lr}
    ldr r6, _0805255C @ =0x03002E20
    ldr r0, _08052560 @ =0x00000801
    adds r5, r6, r0
    ldrb r0, [r5, #0x00]
    bl track_getCup
    adds r4, r0, #0x0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    ldrb r0, [r5, #0x00]
    bl track_getCupIndex
    lsls r0, r0, #0x18
    lsrs r7, r0, #0x18
    ldr r0, _08052564 @ =0x080EFD44
    lsls r5, r4, #0x02
    adds r0, r5, r0
    ldr r4, [r0, #0x00]
    movs r0, #0x00
    bl pltt_getBuffer
    adds r1, r0, #0x0
    movs r3, #0xA0
    lsls r3, r3, #0x01
    adds r1, r1, r3
    adds r0, r4, #0x0
    movs r2, #0x08
    bl CpuFastSet
    movs r0, #0x01
    bl pltt_setDirtyFlag
    movs r1, #0x80
    lsls r1, r1, #0x04
    adds r0, r6, r1
    ldrb r4, [r0, #0x00]
    bl dmaq_getVBlankDmaQueue
    lsls r1, r4, #0x01
    adds r1, r1, r4
    lsls r1, r1, #0x06
    ldr r2, _08052568 @ =0x0809AA4C
    adds r1, r1, r2
    ldr r2, _0805256C @ =0x06000020
    ldr r3, _08052570 @ =0x84000030
    bl dmaq_enqueue
    ldr r0, _08052574 @ =0x080EFD58
    adds r0, r5, r0
    ldr r0, [r0, #0x00]
    ldr r1, _08052578 @ =0x06000400
    bl LZ77UnCompVram
    ldr r0, _0805257C @ =0x08076EA8
    ldr r1, _08052580 @ =0x060009C0
    bl LZ77UnCompVram
    ldr r3, _08052584 @ =0x0000059C
    adds r6, r6, r3
    ldr r0, [r6, #0x00]
    ldr r0, [r0, #0x0C]
    bl sub_8032BC8
    cmp r0, #0x00
    beq _0805258C
    ldr r4, _08052588 @ =0x080E7FEC
    adds r0, r5, r7
    bl track_getRetroTrack
    b _08052594
    .byte 0x00, 0x00
_0805255C: .4byte 0x03002E20
_08052560: .4byte 0x00000801
_08052564: .4byte 0x080EFD44
_08052568: .4byte 0x0809AA4C
_0805256C: .4byte 0x06000020
_08052570: .4byte 0x84000030
_08052574: .4byte 0x080EFD58
_08052578: .4byte 0x06000400
_0805257C: .4byte 0x08076EA8
_08052580: .4byte 0x060009C0
_08052584: .4byte 0x0000059C
_08052588: .4byte 0x080E7FEC
_0805258C:
    ldr r4, _08052630 @ =0x080E7FEC
    adds r0, r5, r7
    bl track_getMKSCTrack
_08052594:
    lsls r0, r0, #0x02
    adds r0, r0, r4
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x30]
    ldr r1, _08052634 @ =0x060000E0
    bl LZ77UnCompVram
    ldr r4, _08052638 @ =0x08076EB4
    movs r0, #0x00
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    movs r2, #0x30
    bl CpuFastSet
    ldr r4, _0805263C @ =0x08076F74
    movs r0, #0x00
    movs r1, #0x00
    movs r2, #0x12
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    movs r2, #0x20
    bl CpuFastSet
    movs r0, #0x01
    bl map_setBufferDirty
    ldr r2, _08052640 @ =0x04000008
    ldrb r1, [r2, #0x01]
    movs r0, #0x3F
    ands r0, r1
    movs r1, #0x40
    orrs r0, r1
    strb r0, [r2, #0x01]
    ldrb r1, [r2, #0x01]
    movs r0, #0x20
    negs r0, r0
    ands r0, r1
    movs r1, #0x06
    orrs r0, r1
    strb r0, [r2, #0x01]
    ldr r1, _08052644 @ =0x08052EB1
    movs r0, #0x00
    bl vcount_register
    ldr r1, _08052648 @ =0x030023D4
    str r0, [r1, #0x00]
    ldr r1, _0805264C @ =0x08052EDD
    movs r0, #0x28
    bl vcount_register
    ldr r1, _08052650 @ =0x030023D8
    str r0, [r1, #0x00]
    movs r0, #0x00
    bl pltt_getBuffer
    movs r1, #0x00
    strh r1, [r0, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldrh r1, [r2, #0x00]
    ldr r0, _08052654 @ =0x00009FFF
    ands r0, r1
    strh r0, [r2, #0x00]
    ldrh r0, [r2, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x06
    adds r1, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08052630: .4byte 0x080E7FEC
_08052634: .4byte 0x060000E0
_08052638: .4byte 0x08076EB4
_0805263C: .4byte 0x08076F74
_08052640: .4byte 0x04000008
_08052644: .4byte sub_8052EB0
_08052648: .4byte 0x030023D4
_0805264C: .4byte sub_8052EDC
_08052650: .4byte 0x030023D8
_08052654: .4byte 0x00009FFF
    .byte 0xF0, 0xB5, 0x57, 0x46, 0x4E, 0x46, 0x45, 0x46, 0xE0, 0xB4, 0x84, 0xB0, 0x45, 0x48, 0x81, 0x46
    .byte 0x24, 0x21, 0x49, 0x44, 0x8C, 0x46, 0x44, 0x48, 0x48, 0x44, 0x06, 0x68, 0x43, 0x48, 0x00, 0x68
    .byte 0x80, 0x22, 0xD2, 0x01, 0x80, 0x18, 0x42, 0x4D, 0x00, 0x04, 0x02, 0x14, 0x10, 0x1C, 0x00, 0x2A
    .byte 0x00, 0xDA, 0x3F, 0x30, 0x84, 0x11, 0x80, 0x23, 0x5B, 0x00, 0x18, 0x1B, 0x3D, 0x49, 0x8A, 0x46
    .byte 0x08, 0x40, 0x80, 0x00, 0x40, 0x19, 0x01, 0x68, 0x3B, 0x48, 0x03, 0x68, 0x18, 0x1C, 0x48, 0x43
    .byte 0x40, 0x00, 0x80, 0x46, 0x20, 0x1C, 0x52, 0x46, 0x10, 0x40, 0x80, 0x00, 0x40, 0x19, 0x00, 0x68
    .byte 0x58, 0x43, 0x47, 0x00, 0x30, 0x1C, 0xBA, 0x30, 0x01, 0x88, 0x49, 0x08, 0x02, 0xAB, 0x03, 0xA8
    .byte 0x00, 0x90, 0x60, 0x46, 0x01, 0xAA, 0xE0, 0xF7, 0xE7, 0xF9, 0x30, 0x1C, 0x7C, 0x30, 0x00, 0x23
    .byte 0xC1, 0x5E, 0x08, 0x1C, 0x00, 0x29, 0x00, 0xDA, 0x3F, 0x30, 0x82, 0x11, 0x10, 0x1C, 0x53, 0x46
    .byte 0x18, 0x40, 0x80, 0x00, 0x40, 0x19, 0x06, 0x68, 0x80, 0x21, 0x49, 0x00, 0x88, 0x1A, 0x52, 0x46
    .byte 0x10, 0x40, 0x80, 0x00, 0x40, 0x19, 0x04, 0x68, 0x24, 0x48, 0x48, 0x44, 0x05, 0x68, 0x2B, 0x1C
    .byte 0x63, 0x43, 0xD8, 0x0F, 0x1B, 0x18, 0x5B, 0x10, 0x21, 0x48, 0x48, 0x44, 0x02, 0x68, 0x10, 0x1C
    .byte 0x70, 0x43, 0xC1, 0x0F, 0x40, 0x18, 0x40, 0x10, 0x1B, 0x18, 0x52, 0x42, 0x11, 0x1C, 0x61, 0x43
    .byte 0xC8, 0x0F, 0x09, 0x18, 0x49, 0x10, 0x28, 0x1C, 0x70, 0x43, 0xC2, 0x0F, 0x80, 0x18, 0x40, 0x10
    .byte 0x09, 0x18, 0x01, 0x9A, 0xD3, 0x18, 0x98, 0x44, 0x02, 0x98, 0x41, 0x18, 0x7F, 0x18, 0x43, 0x46
    .byte 0xD2, 0x1A, 0xC1, 0x1B, 0x00, 0x2A, 0x01, 0xD1, 0x00, 0x29, 0x30, 0xD0, 0x80, 0x26, 0xF6, 0x00
    .byte 0x10, 0x4D, 0x54, 0x46, 0x10, 0x4B, 0x90, 0x19, 0xA8, 0x42, 0x03, 0xD8, 0xA1, 0x42, 0x01, 0xDC
    .byte 0x99, 0x42, 0x1B, 0xDA, 0xD0, 0x0F, 0x10, 0x18, 0x42, 0x10, 0xC8, 0x0F, 0x08, 0x18, 0x41, 0x10
    .byte 0xF1, 0xE7, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x84, 0xEC, 0x03, 0x02
    .byte 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x03, 0x00, 0x00, 0x88, 0xEC, 0x03, 0x02, 0xF8, 0x0B, 0x00, 0x00
    .byte 0xFC, 0x0B, 0x00, 0x00, 0xFF, 0x07, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0x10, 0x04, 0x00, 0x14
    .byte 0x09, 0x04, 0x09, 0x14, 0xDC, 0xF7, 0x44, 0xFA, 0x00, 0x04, 0x04, 0x0C, 0x00, 0xE0, 0x00, 0x24
    .byte 0x08, 0x48, 0x41, 0x46, 0x3A, 0x1C, 0xDE, 0xF7, 0x93, 0xFB, 0x06, 0x48, 0x21, 0x1C, 0xDE, 0xF7
    .byte 0x81, 0xFB, 0x04, 0xB0, 0x38, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xAA, 0x46, 0xF0, 0xBC, 0x01, 0xBC
    .byte 0x00, 0x47, 0x00, 0x00, 0x68, 0x36, 0x00, 0x03, 0xF0, 0xB5, 0x07, 0x1C, 0xBD, 0x6E, 0x01, 0x35
    .byte 0x80, 0x21, 0x49, 0x00, 0x8D, 0x42, 0x33, 0xDC, 0x13, 0x4E, 0x14, 0x4A, 0xE8, 0x05, 0x04, 0x14
    .byte 0x20, 0x1C, 0x00, 0x2C, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11, 0x08, 0x1A, 0x10, 0x49, 0x08, 0x40
    .byte 0x80, 0x00, 0x80, 0x18, 0x03, 0x68, 0x0F, 0x48, 0x02, 0x68, 0x51, 0x42, 0x80, 0x20, 0x00, 0x02
    .byte 0xC3, 0x1A, 0x08, 0x1C, 0x58, 0x43, 0xC1, 0x0F, 0x40, 0x18, 0x00, 0x14, 0x12, 0x18, 0x32, 0x60
    .byte 0x09, 0x4E, 0x0A, 0x48, 0x02, 0x68, 0x50, 0x42, 0x58, 0x43, 0xC1, 0x0F, 0x40, 0x18, 0x00, 0x14
    .byte 0x12, 0x18, 0x32, 0x60, 0x00, 0x20, 0x0C, 0xE0, 0x88, 0xEC, 0x03, 0x02, 0x5C, 0x64, 0x0E, 0x08
    .byte 0xFF, 0x03, 0x00, 0x00, 0x80, 0xEC, 0x03, 0x02, 0x84, 0xEC, 0x03, 0x02, 0x7C, 0xEC, 0x03, 0x02
    .byte 0x01, 0x20, 0xBD, 0x66, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00
    thumb_func_start sub_8052864
sub_8052864:
    push {r4, r5, r6, r7, lr}
    add sp, #-0x008
    ldr r0, _08052964 @ =0x03004F70
    ldrb r7, [r0, #0x0F]
    cmp r7, #0x0A
    ble _08052872
    b _08052978
_08052872:
    cmp r7, #0x07
    bgt _080528AC
    ldr r4, _08052968 @ =0x91719171
    str r4, [sp, #0x000]
    movs r2, #0x0A
    subs r2, r2, r7
    movs r0, #0x01
    movs r1, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    ldr r5, _0805296C @ =0x01000010
    mov r0, sp
    adds r2, r5, #0x0
    bl CpuFastSet
    str r4, [sp, #0x004]
    add r4, sp, #0x004
    adds r2, r7, #0x0
    adds r2, #0x0A
    movs r0, #0x01
    movs r1, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    adds r0, r4, #0x0
    adds r2, r5, #0x0
    bl CpuFastSet
_080528AC:
    subs r0, r7, #0x1
    cmp r0, #0x07
    bhi _080528E8
    ldr r6, _08052970 @ =0x91729172
    str r6, [sp, #0x004]
    add r4, sp, #0x004
    movs r2, #0x0B
    subs r2, r2, r7
    movs r0, #0x01
    movs r1, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    ldr r5, _0805296C @ =0x01000010
    adds r0, r4, #0x0
    adds r2, r5, #0x0
    bl CpuFastSet
    str r6, [sp, #0x000]
    adds r2, r7, #0x0
    adds r2, #0x09
    movs r0, #0x01
    movs r1, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    mov r0, sp
    adds r2, r5, #0x0
    bl CpuFastSet
_080528E8:
    subs r0, r7, #0x2
    cmp r0, #0x07
    bhi _08052924
    ldr r6, _08052974 @ =0x91739173
    str r6, [sp, #0x004]
    add r4, sp, #0x004
    movs r2, #0x0C
    subs r2, r2, r7
    movs r0, #0x01
    movs r1, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    ldr r5, _0805296C @ =0x01000010
    adds r0, r4, #0x0
    adds r2, r5, #0x0
    bl CpuFastSet
    str r6, [sp, #0x000]
    adds r2, r7, #0x0
    adds r2, #0x08
    movs r0, #0x01
    movs r1, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    mov r0, sp
    adds r2, r5, #0x0
    bl CpuFastSet
_08052924:
    cmp r7, #0x02
    ble _0805295C
    movs r6, #0x00
    str r6, [sp, #0x004]
    add r4, sp, #0x004
    movs r2, #0x0D
    subs r2, r2, r7
    movs r0, #0x01
    movs r1, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    ldr r5, _0805296C @ =0x01000010
    adds r0, r4, #0x0
    adds r2, r5, #0x0
    bl CpuFastSet
    str r6, [sp, #0x000]
    adds r2, r7, #0x7
    movs r0, #0x01
    movs r1, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    mov r0, sp
    adds r2, r5, #0x0
    bl CpuFastSet
_0805295C:
    movs r0, #0x02
    bl map_setBufferDirty
    b _080529AA
_08052964: .4byte 0x03004F70
_08052968: .4byte 0x91719171
_0805296C: .4byte 0x01000010
_08052970: .4byte 0x91729172
_08052974: .4byte 0x91739173
_08052978:
    ldr r1, _08052A30 @ =0x04000040
    movs r0, #0xF0
    strh r0, [r1, #0x00]
    adds r0, r7, #0x0
    subs r0, #0x0B
    lsls r1, r0, #0x01
    adds r0, r1, r0
    lsls r0, r0, #0x03
    negs r0, r0
    cmp r0, #0x00
    bge _08052990
    adds r0, #0x07
_08052990:
    asrs r0, r0, #0x03
    adds r0, #0x18
    lsls r0, r0, #0x08
    adds r1, #0x90
    orrs r0, r1
    ldr r1, _08052A34 @ =0x04000044
    strh r0, [r1, #0x00]
    adds r1, #0x04
    movs r0, #0x3E
    strh r0, [r1, #0x00]
    adds r1, #0x02
    movs r0, #0x20
    strh r0, [r1, #0x00]
_080529AA:
    cmp r7, #0x0A
    bne _08052A1E
    movs r5, #0x00
    str r5, [sp, #0x004]
    add r4, sp, #0x004
    movs r0, #0x01
    movs r1, #0x00
    movs r2, #0x00
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    ldr r2, _08052A38 @ =0x01000030
    adds r0, r4, #0x0
    bl CpuFastSet
    str r5, [sp, #0x000]
    movs r0, #0x01
    movs r1, #0x00
    movs r2, #0x12
    bl map_getBufferPtr2d
    adds r1, r0, #0x0
    ldr r2, _08052A3C @ =0x01000020
    mov r0, sp
    bl CpuFastSet
    ldr r1, _08052A30 @ =0x04000040
    movs r0, #0xF0
    strh r0, [r1, #0x00]
    adds r1, #0x04
    ldr r2, _08052A40 @ =0x00001890
    adds r0, r2, #0x0
    strh r0, [r1, #0x00]
    adds r1, #0x04
    movs r0, #0x3F
    strh r0, [r1, #0x00]
    adds r1, #0x02
    movs r0, #0x21
    strh r0, [r1, #0x00]
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldrh r1, [r2, #0x00]
    ldr r0, _08052A44 @ =0x00009FFF
    ands r0, r1
    strh r0, [r2, #0x00]
    ldrh r0, [r2, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x06
    adds r1, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    movs r0, #0x01
    ldr r1, _08052A48 @ =0x03004F70
    strb r0, [r1, #0x0E]
    ldrb r2, [r1, #0x0C]
    movs r0, #0x80
    orrs r0, r2
    strb r0, [r1, #0x0C]
_08052A1E:
    cmp r7, #0x13
    bne _08052A28
    ldr r1, _08052A48 @ =0x03004F70
    movs r0, #0x00
    str r0, [r1, #0x00]
_08052A28:
    add sp, #0x008
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08052A30: .4byte 0x04000040
_08052A34: .4byte 0x04000044
_08052A38: .4byte 0x01000030
_08052A3C: .4byte 0x01000020
_08052A40: .4byte 0x00001890
_08052A44: .4byte 0x00009FFF
_08052A48: .4byte 0x03004F70
    thumb_func_start sub_8052A4C
sub_8052A4C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x014
    ldr r0, _08052AA0 @ =0x03002E20
    ldr r1, _08052AA4 @ =0x00000801
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    bl track_getCupIndex
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    str r0, [sp, #0x008]
    movs r2, #0x00
    mov r8, r2
    movs r3, #0x00
    str r3, [sp, #0x00C]
    ldr r0, _08052AA8 @ =0x0203EC78
    mov r7, r8
    strh r7, [r0, #0x00]
    ldr r0, _08052AAC @ =0x0203EC6C
    mov r1, r8
    str r1, [r0, #0x00]
    ldr r1, _08052AB0 @ =0x080EFD6C
    movs r0, #0x00
    bl sub_8030224
    ldr r2, [sp, #0x008]
    cmp r2, #0x00
    bne _08052ABC
    ldr r0, _08052AB4 @ =0x0203EC70
    mov r3, r8
    str r3, [r0, #0x00]
    ldr r1, _08052AB8 @ =0x080EFDAC
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
    b _08052AC2
    .byte 0x00, 0x00
_08052AA0: .4byte 0x03002E20
_08052AA4: .4byte 0x00000801
_08052AA8: .4byte 0x0203EC78
_08052AAC: .4byte 0x0203EC6C
_08052AB0: .4byte 0x080EFD6C
_08052AB4: .4byte 0x0203EC70
_08052AB8: .4byte 0x080EFDAC
_08052ABC:
    ldr r1, _08052AE4 @ =0x0203EC70
    movs r0, #0x01
    str r0, [r1, #0x00]
_08052AC2:
    ldr r1, _08052AE8 @ =0x0203EC74
    movs r0, #0x01
    str r0, [r1, #0x00]
_08052AC8:
    bl oam_update
    bl main_frameProc
    mov r7, r8
    cmp r7, #0x0A
    bls _08052AD8
    b _08052E4A
_08052AD8:
    lsls r0, r7, #0x02
    ldr r1, _08052AEC @ =0x08052AF0
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_08052AE4: .4byte 0x0203EC70
_08052AE8: .4byte 0x0203EC74
_08052AEC: .4byte 0x08052AF0
    .byte 0x1C, 0x2B, 0x05, 0x08, 0x44, 0x2B, 0x05, 0x08, 0x58, 0x2B, 0x05, 0x08, 0x92, 0x2B, 0x05, 0x08
    .byte 0xCA, 0x2B, 0x05, 0x08, 0x0E, 0x2C, 0x05, 0x08, 0x24, 0x2C, 0x05, 0x08, 0x3C, 0x2C, 0x05, 0x08
    .byte 0x90, 0x2C, 0x05, 0x08, 0x96, 0x2C, 0x05, 0x08, 0x34, 0x2E, 0x05, 0x08, 0x05, 0x48, 0x06, 0x49
    .byte 0x48, 0x60, 0x06, 0x48, 0x08, 0x60, 0x06, 0x48, 0x88, 0x60, 0x03, 0x20, 0x88, 0x73, 0xDD, 0xF7
    .byte 0x7F, 0xFD, 0x78, 0xE1, 0x75, 0x30, 0x05, 0x08, 0x70, 0x4F, 0x00, 0x03, 0x65, 0x28, 0x05, 0x08
    .byte 0xC5, 0x30, 0x05, 0x08, 0x03, 0x48, 0x01, 0x7B, 0x80, 0x20, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD1
    .byte 0x7B, 0xE1, 0x59, 0xE0, 0x70, 0x4F, 0x00, 0x03, 0x03, 0x9A, 0x01, 0x32, 0x03, 0x92, 0x20, 0x2A
    .byte 0x14, 0xDC, 0x08, 0x4A, 0x08, 0x49, 0x03, 0x9B, 0x58, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA
    .byte 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0x00, 0x02, 0xC0, 0x13
    .byte 0x10, 0x80, 0x62, 0xE1, 0x78, 0xEC, 0x03, 0x02, 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x27, 0x03, 0x97
    .byte 0x49, 0xE1, 0x02, 0x99, 0x00, 0x29, 0x0F, 0xD1, 0x05, 0x48, 0x00, 0x68, 0x01, 0x28, 0x00, 0xD0
    .byte 0x53, 0xE1, 0x04, 0x48, 0x00, 0x68, 0x01, 0x28, 0x00, 0xD0, 0x4E, 0xE1, 0x34, 0xE0, 0x00, 0x00
    .byte 0x6C, 0xEC, 0x03, 0x02, 0x70, 0xEC, 0x03, 0x02, 0x03, 0x9B, 0x01, 0x33, 0x03, 0x93, 0xB4, 0x2B
    .byte 0x00, 0xDC, 0x42, 0xE1, 0x00, 0x27, 0x03, 0x97, 0x2D, 0xE1, 0x03, 0x99, 0x01, 0x31, 0x03, 0x91
    .byte 0x20, 0x29, 0x17, 0xDC, 0x09, 0x4A, 0x0A, 0x49, 0x03, 0x9B, 0x58, 0x06, 0x00, 0x14, 0x00, 0x28
    .byte 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0x00, 0x02
    .byte 0xC0, 0x13, 0x80, 0x27, 0x7F, 0x00, 0xC0, 0x19, 0x10, 0x80, 0x26, 0xE1, 0x78, 0xEC, 0x03, 0x02
    .byte 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x20, 0x03, 0x90, 0x01, 0x21, 0x88, 0x44, 0x1D, 0xE1, 0x04, 0x4A
    .byte 0x11, 0x7B, 0x7F, 0x20, 0x08, 0x40, 0x10, 0x73, 0x01, 0x22, 0x90, 0x44, 0x15, 0xE1, 0x00, 0x00
    .byte 0x70, 0x4F, 0x00, 0x03, 0x04, 0x48, 0x01, 0x7B, 0x02, 0x20, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD0
    .byte 0x0B, 0xE1, 0x01, 0x23, 0x98, 0x44, 0x08, 0xE1, 0x70, 0x4F, 0x00, 0x03, 0x00, 0x24, 0x00, 0x94
    .byte 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0xDB, 0xF7, 0x33, 0xFD, 0x01, 0x1C, 0x68, 0x46, 0x0C, 0x4A
    .byte 0x0E, 0xF0, 0x7C, 0xFB, 0x01, 0x94, 0x00, 0x20, 0x00, 0x21, 0x12, 0x22, 0xDB, 0xF7, 0x28, 0xFD
    .byte 0x01, 0x1C, 0x01, 0xA8, 0x07, 0x4A, 0x0E, 0xF0, 0x71, 0xFB, 0xDD, 0xF7, 0xE3, 0xFB, 0x06, 0x49
    .byte 0xC0, 0x22, 0xD2, 0x04, 0x05, 0x4B, 0xDD, 0xF7, 0xB5, 0xFB, 0x01, 0x27, 0xB8, 0x44, 0xE4, 0xE0
    .byte 0x30, 0x00, 0x00, 0x01, 0x20, 0x00, 0x00, 0x01, 0x34, 0x28, 0x06, 0x08, 0x00, 0x06, 0x00, 0x80
    .byte 0xFC, 0xF7, 0x8C, 0xF8, 0xC7, 0xE0, 0x03, 0x99, 0x01, 0x31, 0x03, 0x91, 0x0A, 0x29, 0x00, 0xDD
    .byte 0x9D, 0xE0, 0x0A, 0x39, 0x04, 0x91, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0xDB, 0xF7, 0x00, 0xFD
    .byte 0x81, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0xDB, 0xF7, 0xFA, 0xFC, 0x84, 0x46, 0x00, 0x21
    .byte 0x04, 0x9A, 0x92, 0x46, 0x00, 0x23, 0x04, 0x9F, 0xCD, 0x19, 0x4E, 0x1C, 0x2C, 0x1C, 0x60, 0x01
    .byte 0x04, 0x30, 0x49, 0x01, 0x04, 0x31, 0x40, 0x00, 0x67, 0x46, 0xC2, 0x19, 0x18, 0x1D, 0x00, 0x28
    .byte 0x09, 0xDB, 0x00, 0x2D, 0x07, 0xDB, 0x1D, 0x28, 0x05, 0xDC, 0x13, 0x2C, 0x03, 0xDC, 0x48, 0x00
    .byte 0x48, 0x44, 0x00, 0x88, 0x10, 0x80, 0x02, 0x32, 0x01, 0x31, 0x01, 0x33, 0x1A, 0x2B, 0xED, 0xDB
    .byte 0x31, 0x1C, 0x04, 0x29, 0xDE, 0xDB, 0x02, 0x20, 0xDB, 0xF7, 0xF8, 0xFC, 0x56, 0x46, 0x00, 0x20
    .byte 0x00, 0x21, 0x00, 0x22, 0xDB, 0xF7, 0xCC, 0xFC, 0x81, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22
    .byte 0xDB, 0xF7, 0xC6, 0xFC, 0x84, 0x46, 0x00, 0x20, 0x00, 0x24, 0x85, 0x1C, 0x01, 0x30, 0x82, 0x46
    .byte 0x2B, 0x1C, 0x98, 0x01, 0x49, 0x46, 0x42, 0x18, 0x58, 0x01, 0x30, 0x18, 0x40, 0x00, 0x67, 0x46
    .byte 0xC1, 0x19, 0xA0, 0x19, 0x00, 0x28, 0x07, 0xDB, 0x00, 0x2D, 0x05, 0xDB, 0x1D, 0x28, 0x03, 0xDC
    .byte 0x13, 0x2B, 0x01, 0xDC, 0x10, 0x88, 0x08, 0x80, 0x02, 0x32, 0x02, 0x31, 0x01, 0x34, 0x06, 0x2C
    .byte 0xEF, 0xDB, 0x50, 0x46, 0x11, 0x28, 0xDF, 0xDB, 0x02, 0x20, 0xDB, 0xF7, 0xC7, 0xFC, 0x0A, 0x20
    .byte 0x03, 0x99, 0x40, 0x1A, 0x04, 0x90, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0xDB, 0xF7, 0x98, 0xFC
    .byte 0x82, 0x46, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0xDB, 0xF7, 0x92, 0xFC, 0x81, 0x46, 0x00, 0x20
    .byte 0x05, 0x1C, 0x0C, 0x35, 0x01, 0x30, 0x84, 0x46, 0x2C, 0x1C, 0x60, 0x01, 0x16, 0x30, 0x04, 0x9A
    .byte 0x11, 0x18, 0x16, 0x32, 0x08, 0x26, 0x49, 0x00, 0x49, 0x44, 0x40, 0x00, 0x57, 0x46, 0xC3, 0x19
    .byte 0x00, 0x2A, 0x07, 0xDB, 0x00, 0x2D, 0x05, 0xDB, 0x1D, 0x2A, 0x03, 0xDC, 0x13, 0x2C, 0x01, 0xDC
    .byte 0x18, 0x88, 0x08, 0x80, 0x02, 0x33, 0x02, 0x31, 0x01, 0x32, 0x01, 0x3E, 0x00, 0x2E, 0xEF, 0xDA
    .byte 0x60, 0x46, 0x09, 0x28, 0xDC, 0xDB, 0x02, 0x20, 0xDB, 0xF7, 0x90, 0xFC, 0x35, 0xE0, 0x13, 0x4A
    .byte 0x11, 0x78, 0x7F, 0x20, 0x08, 0x40, 0x10, 0x70, 0x51, 0x78, 0x3F, 0x20, 0x08, 0x40, 0x50, 0x70
    .byte 0x11, 0x78, 0x04, 0x20, 0x40, 0x42, 0x08, 0x40, 0x10, 0x70, 0x11, 0x78, 0x41, 0x20, 0x40, 0x42
    .byte 0x08, 0x40, 0x10, 0x70, 0x11, 0x78, 0x0D, 0x20, 0x40, 0x42, 0x08, 0x40, 0x10, 0x70, 0x51, 0x78
    .byte 0x20, 0x20, 0x40, 0x42, 0x08, 0x40, 0x07, 0x21, 0x08, 0x43, 0x50, 0x70, 0x04, 0x48, 0x00, 0x21
    .byte 0x01, 0x80, 0x02, 0x30, 0x01, 0x80, 0x01, 0x20, 0x80, 0x44, 0x0E, 0xE0, 0x08, 0x00, 0x00, 0x04
    .byte 0x10, 0x00, 0x00, 0x04, 0x19, 0x48, 0x00, 0x68, 0xDD, 0xF7, 0x88, 0xFB, 0x18, 0x48, 0x00, 0x68
    .byte 0xDD, 0xF7, 0x84, 0xFB, 0x17, 0x49, 0x00, 0x20, 0x08, 0x60
_08052E4A:
    ldr r1, _08052EA8 @ =0x03002E20
    ldr r0, [r1, #0x10]
    adds r0, #0x01
    str r0, [r1, #0x10]
    bl sub_804D8F8
    ldr r0, _08052EAC @ =0x03002E44
    bl sub_804978C
    bl sub_8051014
    ldr r0, _08052EAC @ =0x03002E44
    bl sub_8049850
    ldr r0, _08052EAC @ =0x03002E44
    bl sub_804A878
    ldr r0, _08052EAC @ =0x03002E44
    bl sub_804C0A8
    ldr r0, _08052EAC @ =0x03002E44
    bl sub_8049B0C
    ldr r0, _08052EAC @ =0x03002E44
    bl sub_8049D78
    bl sub_804389C
    ldr r0, _08052EA4 @ =0x0203EC74
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    beq _08052E8C
    b _08052AC8
_08052E8C:
    add sp, #0x014
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0xD4, 0x23, 0x00, 0x03, 0xD8, 0x23, 0x00, 0x03
_08052EA4: .4byte 0x0203EC74
_08052EA8: .4byte 0x03002E20
_08052EAC: .4byte 0x03002E44
    thumb_func_start sub_8052EB0
sub_8052EB0:
    add sp, #-0x004
    movs r0, #0x00
    str r0, [sp, #0x000]
    ldr r0, [sp, #0x000]
    ldr r2, _08052ED4 @ =0x0203EC78
    cmp r0, #0x31
    bgt _08052ECA
_08052EBE:
    ldr r0, [sp, #0x000]
    adds r0, #0x01
    str r0, [sp, #0x000]
    ldr r0, [sp, #0x000]
    cmp r0, #0x31
    ble _08052EBE
_08052ECA:
    ldr r1, _08052ED8 @ =0x04000010
    ldrh r0, [r2, #0x00]
    strh r0, [r1, #0x00]
    add sp, #0x004
    bx lr
_08052ED4: .4byte 0x0203EC78
_08052ED8: .4byte 0x04000010
    thumb_func_start sub_8052EDC
sub_8052EDC:
    add sp, #-0x004
    movs r0, #0x00
    str r0, [sp, #0x000]
    ldr r0, [sp, #0x000]
    ldr r1, _08052F08 @ =0x0203EC78
    cmp r0, #0x31
    bgt _08052EF6
_08052EEA:
    ldr r0, [sp, #0x000]
    adds r0, #0x01
    str r0, [sp, #0x000]
    ldr r0, [sp, #0x000]
    cmp r0, #0x31
    ble _08052EEA
_08052EF6:
    ldr r2, _08052F0C @ =0x04000010
    ldrh r1, [r1, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x02
    adds r0, r3, #0x0
    subs r0, r0, r1
    strh r0, [r2, #0x00]
    add sp, #0x004
    bx lr
_08052F08: .4byte 0x0203EC78
_08052F0C: .4byte 0x04000010
    .byte 0x30, 0xB5, 0x0F, 0x4B, 0x12, 0x21, 0x0F, 0x4A, 0x98, 0x18, 0x01, 0x60, 0x0E, 0x4A, 0x0F, 0x49
    .byte 0xEE, 0x20, 0xC0, 0x01, 0x08, 0x60, 0x10, 0x60, 0x0D, 0x4C, 0x0E, 0x4D, 0xD0, 0x22, 0x2A, 0x60
    .byte 0x22, 0x60, 0x0D, 0x48, 0x1B, 0x18, 0x18, 0x68, 0xBA, 0x30, 0x01, 0x88, 0x49, 0x08, 0x07, 0x20
    .byte 0x40, 0x1A, 0x00, 0x01, 0x12, 0x1A, 0x22, 0x60, 0x2A, 0x60, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47
    .byte 0x20, 0x2E, 0x00, 0x03, 0x08, 0x0C, 0x00, 0x00, 0x7C, 0xEC, 0x03, 0x02, 0x84, 0xEC, 0x03, 0x02
    .byte 0x80, 0xEC, 0x03, 0x02, 0x88, 0xEC, 0x03, 0x02, 0x38, 0x08, 0x00, 0x00, 0x04, 0x48, 0x06, 0x21
    .byte 0x04, 0x4A, 0x80, 0x18, 0x01, 0x60, 0x04, 0x49, 0x01, 0x20, 0x08, 0x60, 0x70, 0x47, 0x00, 0x00
    .byte 0x20, 0x2E, 0x00, 0x03, 0x08, 0x0C, 0x00, 0x00, 0x6C, 0xEC, 0x03, 0x02, 0x30, 0xB5, 0x05, 0x48
    .byte 0x05, 0x1C, 0x24, 0x35, 0x04, 0x48, 0x41, 0x78, 0x01, 0x29, 0x07, 0xD9, 0x08, 0x20, 0x40, 0x1A
    .byte 0x05, 0xE0, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03, 0x80, 0x2C, 0x00, 0x03, 0x07, 0x20, 0x04, 0x1C
    .byte 0x13, 0xE0, 0x21, 0x06, 0x09, 0x0E, 0x28, 0x1C, 0xF7, 0xF7, 0x8C, 0xFF, 0x02, 0x1C, 0x90, 0x6C
    .byte 0x80, 0x21, 0x09, 0x02, 0x08, 0x40, 0x00, 0x28, 0x06, 0xD0, 0x51, 0x68, 0xE0, 0x04, 0x40, 0x18
    .byte 0xF0, 0x21, 0x49, 0x03, 0x40, 0x18, 0x50, 0x60, 0x01, 0x34, 0xFE, 0x21, 0xC9, 0x00, 0x68, 0x18
    .byte 0x00, 0x78, 0x84, 0x42, 0xE5, 0xDB, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0xF0, 0xB5, 0x4F, 0x46
    .byte 0x46, 0x46, 0xC0, 0xB4, 0x84, 0xB0, 0x12, 0x48, 0x24, 0x21, 0x09, 0x18, 0x88, 0x46, 0xC1, 0x46
    .byte 0x10, 0x4A, 0x80, 0x18, 0x06, 0x78, 0x00, 0x27, 0x00, 0x25, 0xB7, 0x42, 0x22, 0xDA, 0x29, 0x06
    .byte 0x09, 0x0E, 0x48, 0x46, 0xF7, 0xF7, 0x5E, 0xFF, 0x04, 0x1C, 0xBA, 0x30, 0x01, 0x88, 0x49, 0x08
    .byte 0x03, 0xA8, 0x00, 0x90, 0x40, 0x46, 0x01, 0xAA, 0x02, 0xAB, 0xDF, 0xF7, 0x39, 0xFD, 0x61, 0x68
    .byte 0x02, 0x98, 0x88, 0x42, 0x0A, 0xD0, 0x04, 0x4A, 0x88, 0x18, 0x60, 0x60, 0x07, 0xE0, 0x00, 0x00
    .byte 0x20, 0x2E, 0x00, 0x03, 0x14, 0x08, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0x01, 0x37, 0x01, 0x35
    .byte 0xB5, 0x42, 0xDC, 0xDB, 0xB7, 0x42, 0x01, 0xD0, 0x00, 0x20, 0x02, 0xE0, 0x04, 0x49, 0x01, 0x20
    .byte 0x08, 0x60, 0x04, 0xB0, 0x18, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47
    .byte 0x70, 0xEC, 0x03, 0x02
    thumb_func_start sub_8053074
sub_8053074:
    push {lr}
    ldr r2, _080530B4 @ =0x04000008
    ldrb r1, [r2, #0x01]
    movs r0, #0x20
    negs r0, r0
    ands r0, r1
    movs r1, #0x06
    orrs r0, r1
    strb r0, [r2, #0x01]
    movs r0, #0x00
    bl pltt_getBuffer
    movs r2, #0x9F
    lsls r2, r2, #0x01
    adds r1, r0, r2
    movs r0, #0x00
    strh r0, [r1, #0x00]
    movs r0, #0x01
    bl pltt_setDirtyFlag
    ldr r0, _080530B8 @ =0x080EFDC4
    ldr r1, _080530BC @ =0x06002E00
    bl LZ77UnCompVram
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldrh r1, [r2, #0x00]
    ldr r0, _080530C0 @ =0x00009FFF
    ands r0, r1
    strh r0, [r2, #0x00]
    pop {r0}
    bx r0
_080530B4: .4byte 0x04000008
_080530B8: .4byte 0x080EFDC4
_080530BC: .4byte 0x06002E00
_080530C0: .4byte 0x00009FFF
    thumb_func_start sub_80530C4
sub_80530C4:
    push {r4, r5, lr}
    movs r2, #0x80
    lsls r2, r2, #0x13
    ldrh r1, [r2, #0x00]
    ldr r0, _080530F8 @ =0x00009FFF
    ands r0, r1
    strh r0, [r2, #0x00]
    ldr r1, _080530FC @ =0x04000040
    movs r0, #0xF0
    strh r0, [r1, #0x00]
    adds r1, #0x04
    movs r0, #0xA0
    strh r0, [r1, #0x00]
    ldr r4, _08053100 @ =0x03002E20
    adds r4, #0x24
    movs r0, #0x00
    bl pltt_getBuffer
    adds r5, r0, #0x0
    adds r0, r4, #0x0
    bl sub_8032D44
    strh r0, [r5, #0x00]
    pop {r4, r5}
    pop {r0}
    bx r0
_080530F8: .4byte 0x00009FFF
_080530FC: .4byte 0x04000040
_08053100: .4byte 0x03002E20
    thumb_func_start sub_8053104
sub_8053104:
    push {r4, lr}
    adds r4, r0, #0x0
    bl sub_802F5C0
    movs r0, #0x80
    lsls r0, r0, #0x05
    movs r2, #0x00
    strh r0, [r4, #0x10]
    movs r0, #0x08
    strb r0, [r4, #0x0E]
    strb r0, [r4, #0x0D]
    strb r0, [r4, #0x0C]
    movs r0, #0x01
    strh r0, [r4, #0x34]
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r4, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r2, [r0, #0x00]
    str r2, [r4, #0x5C]
    ldrh r1, [r4, #0x34]
    ldr r0, _08053144 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r4, #0x34]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08053144: .4byte 0x0000FFFD
    thumb_func_start sub_8053148
sub_8053148:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r6, r0, #0x0
    mov r8, r6
    ldr r1, _08053170 @ =0x000007DD
    adds r0, r6, r1
    ldrb r7, [r0, #0x00]
    movs r4, #0x00
    ldr r2, _08053174 @ =0x00000574
    adds r0, r6, r2
    ldr r1, [r0, #0x00]
    adds r0, r1, #0x0
    adds r0, #0x94
    ldr r0, [r0, #0x00]
    movs r5, #0x00
    cmp r0, #0x00
    beq _0805318A
    adds r5, r1, r0
    b _0805318A
_08053170: .4byte 0x000007DD
_08053174: .4byte 0x00000574
_08053178:
    ldrb r1, [r5, #0x00]
    adds r0, r7, #0x0
    bl sub_8053DC4
    ldr r1, _080531BC @ =0xFFFF0000
    cmp r0, r1
    bne _08053188
    adds r4, #0x01
_08053188:
    adds r5, #0x04
_0805318A:
    ldrb r0, [r5, #0x00]
    cmp r0, #0x00
    bne _08053178
    ldr r1, _080531C0 @ =0x000006FC
    adds r0, r6, r1
    movs r2, #0xDC
    lsls r2, r2, #0x03
    adds r1, r6, r2
    adds r2, r4, #0x0
    bl sub_804F750
    cmp r4, #0x00
    ble _08053212
    ldr r0, _080531C4 @ =0x00000574
    add r0, r8
    ldr r1, [r0, #0x00]
    adds r0, r1, #0x0
    adds r0, #0x94
    ldr r0, [r0, #0x00]
    movs r5, #0x00
    cmp r0, #0x00
    beq _0805320C
    adds r5, r1, r0
    b _0805320C
    .byte 0x00, 0x00
_080531BC: .4byte 0xFFFF0000
_080531C0: .4byte 0x000006FC
_080531C4: .4byte 0x00000574
_080531C8:
    ldrb r1, [r5, #0x00]
    adds r0, r7, #0x0
    bl sub_8053DC4
    ldr r1, _080531DC @ =0xFFFF0000
    cmp r0, r1
    beq _080531E0
    adds r5, #0x04
    b _0805320C
    .byte 0x00, 0x00
_080531DC: .4byte 0xFFFF0000
_080531E0:
    adds r5, #0x01
    ldr r1, _0805321C @ =0x000006FC
    adds r0, r6, r1
    bl sub_804F7AC
    adds r4, r0, #0x0
    bl sub_8043860
    ldrb r0, [r5, #0x00]
    lsls r0, r0, #0x13
    adds r5, #0x01
    str r0, [r4, #0x00]
    ldrb r0, [r5, #0x00]
    lsls r0, r0, #0x13
    adds r5, #0x01
    str r0, [r4, #0x04]
    movs r0, #0x00
    str r0, [r4, #0x08]
    ldrb r0, [r5, #0x00]
    adds r4, #0x36
    strb r0, [r4, #0x00]
    adds r5, #0x01
_0805320C:
    ldrb r0, [r5, #0x00]
    cmp r0, #0x00
    bne _080531C8
_08053212:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0805321C: .4byte 0x000006FC
    thumb_func_start sub_8053220
sub_8053220:
    push {r4, r5, r6, r7, lr}
    adds r6, r0, #0x0
    adds r5, r1, #0x0
    adds r7, r2, #0x0
    ldr r1, _080532AC @ =0x000007CC
    adds r0, r6, r1
    ldr r4, [r0, #0x00]
    movs r2, #0x04
    ldsh r1, [r5, r2]
    lsls r1, r1, #0x03
    movs r0, #0x06
    ldsh r2, [r5, r0]
    lsls r2, r2, #0x03
    adds r0, r6, #0x0
    bl sub_8032CA0
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    strh r1, [r5, #0x08]
    cmp r4, r5
    beq _08053268
    movs r2, #0x08
    ldsh r0, [r4, r2]
    cmp r0, r1
    beq _08053264
_08053252:
    adds r4, #0x0C
    cmp r4, r5
    beq _08053268
    movs r0, #0x08
    ldsh r1, [r4, r0]
    movs r2, #0x08
    ldsh r0, [r5, r2]
    cmp r1, r0
    bne _08053252
_08053264:
    cmp r4, r5
    bne _080532B8
_08053268:
    ldr r3, [r7, #0x00]
    adds r3, #0xD0
    lsls r3, r3, #0x10
    asrs r3, r3, #0x10
    strh r3, [r5, #0x0A]
    movs r4, #0x04
    ldsh r1, [r5, r4]
    lsls r1, r1, #0x03
    movs r0, #0x06
    ldsh r2, [r5, r0]
    lsls r2, r2, #0x03
    lsls r3, r3, #0x18
    lsrs r3, r3, #0x18
    adds r0, r6, #0x0
    bl sub_8032798
    bl dmaq_getVBlankDmaQueue
    movs r2, #0x08
    ldsh r1, [r5, r2]
    lsls r1, r1, #0x06
    ldr r3, _080532B0 @ =0x06008000
    adds r1, r1, r3
    movs r4, #0x0A
    ldsh r2, [r5, r4]
    lsls r2, r2, #0x06
    adds r2, r2, r3
    ldr r3, _080532B4 @ =0x80000020
    bl dmaq_enqueue
    ldr r0, [r7, #0x00]
    adds r0, #0x01
    str r0, [r7, #0x00]
    b _080532D4
_080532AC: .4byte 0x000007CC
_080532B0: .4byte 0x06008000
_080532B4: .4byte 0x80000020
_080532B8:
    movs r0, #0x0A
    ldsh r3, [r4, r0]
    strh r3, [r5, #0x0A]
    movs r2, #0x04
    ldsh r1, [r5, r2]
    lsls r1, r1, #0x03
    movs r4, #0x06
    ldsh r2, [r5, r4]
    lsls r2, r2, #0x03
    lsls r3, r3, #0x18
    lsrs r3, r3, #0x18
    adds r0, r6, #0x0
    bl sub_8032798
_080532D4:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start loadtrack_loadObjects
loadtrack_loadObjects: @ 080532DC
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x008
    str r0, [sp, #0x004]
    movs r0, #0x00
    mov r8, r0
    movs r5, #0x00
    str r5, [sp, #0x000]
    ldr r1, [sp, #0x004]
    ldr r2, _08053388 @ =0x00000574
    adds r0, r1, r2
    ldr r1, [r0, #0x00]
    adds r0, r1, #0x0
    adds r0, #0x8C
    ldr r0, [r0, #0x00]
    movs r7, #0x00
    cmp r0, #0x00
    beq _08053308
    adds r7, r1, r0
_08053308:
    cmp r7, #0x00
    bne _08053310
    bl sub_8053D86
_08053310:
    ldrb r0, [r7, #0x00]
    ldr r3, [sp, #0x004]
    ldr r1, _0805338C @ =0x000007CC
    adds r3, r3, r1
    mov r9, r3
    cmp r0, #0x00
    beq _080533F0
    ldr r2, [sp, #0x004]
    ldr r3, _08053390 @ =0x000007DD
    adds r4, r2, r3
    ldr r6, _08053394 @ =0xFFFF0000
_08053326:
    ldrb r0, [r4, #0x00]
    ldrb r1, [r7, #0x00]
    bl sub_8053DC4
    cmp r0, r6
    beq _080533E8
    ldrb r0, [r4, #0x00]
    ldrb r1, [r7, #0x00]
    bl sub_8053DC4
    ldr r1, _08053398 @ =0xFFF80000
    cmp r0, r1
    beq _080533E8
    ldrb r0, [r4, #0x00]
    ldrb r1, [r7, #0x00]
    bl sub_8053DC4
    ands r0, r6
    ldr r1, _0805339C @ =0xFFF00000
    cmp r0, r1
    beq _080533E8
    movs r0, #0x01
    add r8, r0
    ldrb r0, [r4, #0x00]
    ldrb r1, [r7, #0x00]
    bl sub_8053DC4
    adds r1, r0, #0x0
    ands r1, r6
    movs r0, #0xA0
    lsls r0, r0, #0x0C
    cmp r1, r0
    beq _080533E6
    cmp r1, r0
    bhi _080533AE
    movs r0, #0xC0
    lsls r0, r0, #0x0B
    cmp r1, r0
    beq _080533E6
    cmp r1, r0
    bhi _080533A0
    movs r0, #0x80
    lsls r0, r0, #0x0B
    cmp r1, r0
    beq _080533E6
    movs r0, #0xA0
    lsls r0, r0, #0x0B
    b _080533D8
    .byte 0x00, 0x00
_08053388: .4byte 0x00000574
_0805338C: .4byte 0x000007CC
_08053390: .4byte 0x000007DD
_08053394: .4byte 0xFFFF0000
_08053398: .4byte 0xFFF80000
_0805339C: .4byte 0xFFF00000
_080533A0:
    movs r0, #0x80
    lsls r0, r0, #0x0C
    cmp r1, r0
    beq _080533E6
    movs r0, #0x90
    lsls r0, r0, #0x0C
    b _080533D8
_080533AE:
    movs r0, #0x86
    lsls r0, r0, #0x10
    cmp r1, r0
    beq _080533E6
    cmp r1, r0
    bhi _080533C8
    movs r0, #0xC0
    lsls r0, r0, #0x0C
    cmp r1, r0
    beq _080533E6
    movs r0, #0xE0
    lsls r0, r0, #0x0C
    b _080533D8
_080533C8:
    movs r0, #0x96
    lsls r0, r0, #0x10
    cmp r1, r0
    beq _080533E6
    cmp r1, r0
    bhi _080533DE
    movs r0, #0x95
    lsls r0, r0, #0x10
_080533D8:
    cmp r1, r0
    beq _080533E6
    b _080533E8
_080533DE:
    movs r0, #0x98
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _080533E8
_080533E6:
    adds r5, #0x01
_080533E8:
    adds r7, #0x04
    ldrb r0, [r7, #0x00]
    cmp r0, #0x00
    bne _08053326
_080533F0:
    cmp r5, #0x00
    ble _08053418
    ldr r1, [sp, #0x004]
    movs r2, #0xDC
    lsls r2, r2, #0x03
    adds r0, r1, r2
    adds r1, r5, #0x1
    lsls r2, r1, #0x01
    adds r2, r2, r1
    lsls r2, r2, #0x02
    movs r1, #0x01
    bl frmheap_calloc
    mov r3, r9
    str r0, [r3, #0x00]
    mov r10, r0
    movs r0, #0x00
    mov r1, r10
    str r0, [r1, #0x00]
    b _08053420
_08053418:
    movs r0, #0x00
    mov r2, r9
    str r0, [r2, #0x00]
    mov r10, r0
_08053420:
    mov r3, r8
    cmp r3, #0x00
    bgt _0805342A
    bl sub_8053D74
_0805342A:
    ldr r1, [sp, #0x004]
    ldr r2, _08053494 @ =0x000006EC
    adds r0, r1, r2
    movs r3, #0xDC
    lsls r3, r3, #0x03
    adds r1, r1, r3
    mov r2, r8
    bl sub_804F824
    ldr r1, [sp, #0x004]
    ldr r2, _08053498 @ =0x00000574
    adds r0, r1, r2
    ldr r1, [r0, #0x00]
    adds r0, r1, #0x0
    adds r0, #0x8C
    ldr r0, [r0, #0x00]
    movs r7, #0x00
    cmp r0, #0x00
    beq _08053452
    adds r7, r1, r0
_08053452:
    ldrb r0, [r7, #0x00]
    cmp r0, #0x00
    bne _0805345C
    bl sub_8053D86
_0805345C:
    movs r3, #0xE0
    mov r8, r3
    ldr r0, _0805349C @ =0x00001001
    mov r9, r0
_08053464:
    ldr r1, [sp, #0x004]
    ldr r2, _080534A0 @ =0x000007DD
    adds r0, r1, r2
    ldrb r0, [r0, #0x00]
    ldrb r1, [r7, #0x00]
    adds r7, #0x01
    bl sub_8053DC4
    adds r6, r0, #0x0
    ldr r1, _080534A4 @ =0xFFFF0000
    cmp r6, r1
    beq _0805348C
    ldr r0, _080534A8 @ =0xFFF80000
    cmp r6, r0
    beq _0805348C
    adds r4, r6, #0x0
    ands r4, r1
    ldr r0, _080534AC @ =0xFFF00000
    cmp r4, r0
    bne _080534B0
_0805348C:
    adds r7, #0x03
    bl sub_8053D64
    lsls r0, r0, #0x00
_08053494:
    lsls r4, r5, #0x1B
    lsls r0, r0, #0x00
_08053498:
    lsls r4, r6, #0x15
    lsls r0, r0, #0x00
_0805349C:
    asrs r1, r0, #0x20
    lsls r0, r0, #0x00
_080534A0:
    lsls r5, r3, #0x1F
    lsls r0, r0, #0x00
_080534A4:
    lsls r0, r0, #0x00
    .2byte 0xFFFF @ bl lr+4094
_080534A8:
    lsls r0, r0, #0x00
    .2byte 0xFFF8 @ bl lr+4080
_080534AC:
    lsls r0, r0, #0x00
    .2byte 0xFFF0 @ bl lr+4064
_080534B0:
    ldr r3, [sp, #0x004]
    ldr r1, _080534F0 @ =0x000006EC
    adds r0, r3, r1
    bl sub_804F85C
    adds r5, r0, #0x0
    bl sub_8053104
    str r6, [r5, #0x50]
    ldrb r0, [r7, #0x00]
    lsls r0, r0, #0x13
    movs r1, #0x80
    lsls r1, r1, #0x0B
    adds r0, r0, r1
    str r0, [r5, #0x00]
    movs r0, #0xA0
    lsls r0, r0, #0x0C
    cmp r4, r0
    beq _0805353A
    cmp r4, r0
    bhi _08053502
    movs r0, #0xC0
    lsls r0, r0, #0x0B
    cmp r4, r0
    beq _0805353A
    cmp r4, r0
    bhi _080534F4
    cmp r4, r1
    beq _0805353A
    movs r0, #0xA0
    lsls r0, r0, #0x0B
    b _0805352C
_080534F0:
    lsls r4, r5, #0x1B
    lsls r0, r0, #0x00
_080534F4:
    movs r0, #0x80
    lsls r0, r0, #0x0C
    cmp r4, r0
    beq _0805353A
    movs r0, #0x90
    lsls r0, r0, #0x0C
    b _0805352C
_08053502:
    movs r0, #0x86
    lsls r0, r0, #0x10
    cmp r4, r0
    beq _0805353A
    cmp r4, r0
    bhi _0805351C
    movs r0, #0xC0
    lsls r0, r0, #0x0C
    cmp r4, r0
    beq _0805353A
    movs r0, #0xE0
    lsls r0, r0, #0x0C
    b _0805352C
_0805351C:
    movs r0, #0x96
    lsls r0, r0, #0x10
    cmp r4, r0
    beq _0805353A
    cmp r4, r0
    bhi _08053532
    movs r0, #0x95
    lsls r0, r0, #0x10
_0805352C:
    cmp r4, r0
    beq _0805353A
    b _08053540
_08053532:
    movs r0, #0x98
    lsls r0, r0, #0x10
    cmp r4, r0
    bne _08053540
_0805353A:
    ldrb r0, [r7, #0x00]
    mov r2, r10
    strh r0, [r2, #0x04]
_08053540:
    adds r7, #0x01
    ldrb r0, [r7, #0x00]
    lsls r0, r0, #0x13
    movs r2, #0x80
    lsls r2, r2, #0x0B
    adds r0, r0, r2
    str r0, [r5, #0x04]
    ldr r1, _08053574 @ =0xFFFF0000
    ands r1, r6
    movs r0, #0xA0
    lsls r0, r0, #0x0C
    cmp r1, r0
    beq _080535BE
    cmp r1, r0
    bhi _08053586
    movs r0, #0xC0
    lsls r0, r0, #0x0B
    cmp r1, r0
    beq _080535BE
    cmp r1, r0
    bhi _08053578
    cmp r1, r2
    beq _080535BE
    movs r0, #0xA0
    lsls r0, r0, #0x0B
    b _080535B0
_08053574: .4byte 0xFFFF0000
_08053578:
    movs r0, #0x80
    lsls r0, r0, #0x0C
    cmp r1, r0
    beq _080535BE
    movs r0, #0x90
    lsls r0, r0, #0x0C
    b _080535B0
_08053586:
    movs r0, #0x86
    lsls r0, r0, #0x10
    cmp r1, r0
    beq _080535BE
    cmp r1, r0
    bhi _080535A0
    movs r0, #0xC0
    lsls r0, r0, #0x0C
    cmp r1, r0
    beq _080535BE
    movs r0, #0xE0
    lsls r0, r0, #0x0C
    b _080535B0
_080535A0:
    movs r0, #0x96
    lsls r0, r0, #0x10
    cmp r1, r0
    beq _080535BE
    cmp r1, r0
    bhi _080535B6
    movs r0, #0x95
    lsls r0, r0, #0x10
_080535B0:
    cmp r1, r0
    beq _080535BE
    b _080535C4
_080535B6:
    movs r0, #0x98
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _080535C4
_080535BE:
    ldrb r0, [r7, #0x00]
    mov r3, r10
    strh r0, [r3, #0x06]
_080535C4:
    adds r7, #0x01
    movs r0, #0x00
    str r0, [r5, #0x08]
    ldrb r0, [r7, #0x00]
    adds r1, r5, #0x0
    adds r1, #0x36
    strb r0, [r1, #0x00]
    ldrb r1, [r7, #0x00]
    adds r0, r5, #0x0
    adds r0, #0x54
    strb r1, [r0, #0x00]
    adds r7, #0x01
    ldr r1, _08053608 @ =0xFFFF0000
    ands r1, r6
    movs r0, #0xA0
    lsls r0, r0, #0x0C
    cmp r1, r0
    beq _08053652
    cmp r1, r0
    bhi _0805361A
    movs r0, #0xC0
    lsls r0, r0, #0x0B
    cmp r1, r0
    beq _08053652
    cmp r1, r0
    bhi _0805360C
    movs r0, #0x80
    lsls r0, r0, #0x0B
    cmp r1, r0
    beq _08053652
    movs r0, #0xA0
    lsls r0, r0, #0x0B
    b _08053644
    .byte 0x00, 0x00
_08053608: .4byte 0xFFFF0000
_0805360C:
    movs r0, #0x80
    lsls r0, r0, #0x0C
    cmp r1, r0
    beq _08053652
    movs r0, #0x90
    lsls r0, r0, #0x0C
    b _08053644
_0805361A:
    movs r0, #0x86
    lsls r0, r0, #0x10
    cmp r1, r0
    beq _08053652
    cmp r1, r0
    bhi _08053634
    movs r0, #0xC0
    lsls r0, r0, #0x0C
    cmp r1, r0
    beq _08053652
    movs r0, #0xE0
    lsls r0, r0, #0x0C
    b _08053644
_08053634:
    movs r0, #0x96
    lsls r0, r0, #0x10
    cmp r1, r0
    beq _08053652
    cmp r1, r0
    bhi _0805364A
    movs r0, #0x95
    lsls r0, r0, #0x10
_08053644:
    cmp r1, r0
    beq _08053652
    b _0805366A
_0805364A:
    movs r0, #0x98
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _0805366A
_08053652:
    mov r0, r10
    str r5, [r0, #0x00]
    ldr r0, [sp, #0x004]
    mov r1, r10
    mov r2, sp
    bl sub_8053220
    movs r1, #0x0C
    add r10, r1
    movs r0, #0x00
    mov r2, r10
    str r0, [r2, #0x00]
_0805366A:
    ldr r1, _080536C0 @ =0xFFFF0000
    ands r1, r6
    movs r0, #0x89
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053678
    b _08053C90
_08053678:
    cmp r1, r0
    bls _0805367E
    b _08053790
_0805367E:
    movs r0, #0xC0
    lsls r0, r0, #0x0C
    cmp r1, r0
    bne _08053688
    b _080538AC
_08053688:
    cmp r1, r0
    bhi _08053708
    movs r0, #0xC0
    lsls r0, r0, #0x0B
    cmp r1, r0
    bne _08053696
    b _080538AC
_08053696:
    cmp r1, r0
    bhi _080536D4
    movs r0, #0xC0
    lsls r0, r0, #0x0A
    cmp r1, r0
    bne _080536A4
    b _08053C18
_080536A4:
    cmp r1, r0
    bhi _080536C4
    movs r0, #0x80
    lsls r0, r0, #0x09
    cmp r1, r0
    bne _080536B2
    b _08053BE8
_080536B2:
    movs r0, #0x80
    lsls r0, r0, #0x0A
    cmp r1, r0
    bne _080536BC
    b _08053C10
_080536BC:
    b _08053D60
    .byte 0x00, 0x00
_080536C0: .4byte 0xFFFF0000
_080536C4:
    movs r0, #0x80
    lsls r0, r0, #0x0B
    cmp r1, r0
    bne _080536CE
    b _080538AC
_080536CE:
    movs r0, #0xA0
    lsls r0, r0, #0x0B
    b _08053816
_080536D4:
    movs r0, #0x90
    lsls r0, r0, #0x0C
    cmp r1, r0
    bne _080536DE
    b _080538AC
_080536DE:
    cmp r1, r0
    bhi _080536F2
    movs r0, #0xE0
    lsls r0, r0, #0x0B
    cmp r1, r0
    bne _080536EC
    b _08053C38
_080536EC:
    movs r0, #0x80
    lsls r0, r0, #0x0C
    b _08053816
_080536F2:
    movs r0, #0xA0
    lsls r0, r0, #0x0C
    cmp r1, r0
    bne _080536FC
    b _080538AC
_080536FC:
    movs r0, #0xB0
    lsls r0, r0, #0x0C
    cmp r1, r0
    bne _08053706
    b _08053C20
_08053706:
    b _08053D60
_08053708:
    movs r0, #0x82
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053712
    b _08053C64
_08053712:
    cmp r1, r0
    bhi _0805374C
    movs r0, #0x80
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053720
    b _08053C40
_08053720:
    cmp r1, r0
    bhi _08053734
    movs r0, #0xD0
    lsls r0, r0, #0x0C
    cmp r1, r0
    bne _0805372E
    b _08053CF0
_0805372E:
    movs r0, #0xE0
    lsls r0, r0, #0x0C
    b _08053816
_08053734:
    ldr r0, _08053748 @ =0x00808000
    cmp r1, r0
    bne _0805373C
    b _08053C4A
_0805373C:
    movs r0, #0x81
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053746
    b _08053C5C
_08053746:
    b _08053D60
_08053748: .4byte 0x00808000
_0805374C:
    movs r0, #0x85
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053756
    b _08053C80
_08053756:
    cmp r1, r0
    bhi _08053770
    movs r0, #0x83
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053764
    b _08053C6E
_08053764:
    movs r0, #0x84
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _0805376E
    b _08053C76
_0805376E:
    b _08053D60
_08053770:
    movs r0, #0x87
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _0805377A
    b _08053CE0
_0805377A:
    cmp r1, r0
    bhi _08053784
    movs r0, #0x86
    lsls r0, r0, #0x10
    b _08053816
_08053784:
    movs r0, #0x88
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _0805378E
    b _08053C88
_0805378E:
    b _08053D60
_08053790:
    movs r0, #0x97
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _0805379A
    b _08053D00
_0805379A:
    cmp r1, r0
    bhi _0805381C
    movs r0, #0x90
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _080537A8
    b _08053CC8
_080537A8:
    cmp r1, r0
    bhi _080537E6
    movs r0, #0x8D
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _080537B6
    b _08053CB0
_080537B6:
    cmp r1, r0
    bhi _080537D0
    movs r0, #0x8A
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _080537C4
    b _08053C98
_080537C4:
    movs r0, #0x8C
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _080537CE
    b _08053CA8
_080537CE:
    b _08053D60
_080537D0:
    movs r0, #0x8E
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _080537DA
    b _08053CB8
_080537DA:
    movs r0, #0x8F
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _080537E4
    b _08053CC0
_080537E4:
    b _08053D60
_080537E6:
    movs r0, #0x94
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _080537F0
    b _08053CF8
_080537F0:
    cmp r1, r0
    bhi _0805380A
    movs r0, #0x91
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _080537FE
    b _08053CD0
_080537FE:
    movs r0, #0x92
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053808
    b _08053CD8
_08053808:
    b _08053D60
_0805380A:
    movs r0, #0x95
    lsls r0, r0, #0x10
    cmp r1, r0
    beq _080538AC
    movs r0, #0x96
    lsls r0, r0, #0x10
_08053816:
    cmp r1, r0
    beq _080538AC
    b _08053D60
_0805381C:
    movs r0, #0x9D
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053826
    b _08053D28
_08053826:
    cmp r1, r0
    bhi _08053862
    movs r0, #0x9A
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053834
    b _08053D10
_08053834:
    cmp r1, r0
    bhi _0805384C
    movs r0, #0x98
    lsls r0, r0, #0x10
    cmp r1, r0
    beq _080538AC
    movs r0, #0x99
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _0805384A
    b _08053D08
_0805384A:
    b _08053D60
_0805384C:
    movs r0, #0x9B
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053856
    b _08053D18
_08053856:
    movs r0, #0x9C
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053860
    b _08053D20
_08053860:
    b _08053D60
_08053862:
    movs r0, #0xA0
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _0805386C
    b _08053D40
_0805386C:
    cmp r1, r0
    bhi _08053886
    movs r0, #0x9E
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _0805387A
    b _08053D30
_0805387A:
    movs r0, #0x9F
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053884
    b _08053D38
_08053884:
    b _08053D60
_08053886:
    movs r0, #0xA2
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _08053890
    b _08053D50
_08053890:
    cmp r1, r0
    bhi _080538A0
    movs r0, #0xA1
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _0805389E
    b _08053D48
_0805389E:
    b _08053D60
_080538A0:
    movs r0, #0xA3
    lsls r0, r0, #0x10
    cmp r1, r0
    bne _080538AA
    b _08053D58
_080538AA:
    b _08053D60
_080538AC:
    ldr r0, _080538EC @ =0x000A0007
    cmp r6, r0
    bne _080538B4
    b _08053B44
_080538B4:
    cmp r6, r0
    bgt _08053960
    movs r0, #0x90
    lsls r0, r0, #0x0C
    cmp r6, r0
    bne _080538C2
    b _08053B8C
_080538C2:
    cmp r6, r0
    bgt _0805391C
    ldr r0, _080538F0 @ =0x00050002
    cmp r6, r0
    bne _080538CE
    b _08053B0C
_080538CE:
    cmp r6, r0
    bgt _080538F4
    subs r0, #0x02
    cmp r6, r0
    bne _080538DA
    b _08053AFC
_080538DA:
    cmp r6, r0
    ble _080538E0
    b _08053B04
_080538E0:
    movs r0, #0x80
    lsls r0, r0, #0x0B
    cmp r6, r0
    bne _080538EA
    b _08053BC8
_080538EA:
    b _08053BD4
_080538EC: .4byte 0x000A0007
_080538F0: .4byte 0x00050002
_080538F4:
    ldr r0, _0805390C @ =0x00060001
    cmp r6, r0
    bne _080538FC
    b _08053B64
_080538FC:
    cmp r6, r0
    bgt _08053910
    subs r0, #0x01
    cmp r6, r0
    bne _08053908
    b _08053B4C
_08053908:
    b _08053BD4
    .byte 0x00, 0x00
_0805390C: .4byte 0x00060001
_08053910:
    movs r0, #0x80
    lsls r0, r0, #0x0C
    cmp r6, r0
    bne _0805391A
    b _08053B7C
_0805391A:
    b _08053BD4
_0805391C:
    ldr r0, _08053940 @ =0x000A0003
    cmp r6, r0
    bne _08053924
    b _08053B2C
_08053924:
    cmp r6, r0
    bgt _08053944
    subs r0, #0x02
    cmp r6, r0
    bne _08053930
    b _08053B1C
_08053930:
    cmp r6, r0
    ble _08053936
    b _08053B24
_08053936:
    subs r0, #0x01
    cmp r6, r0
    bne _0805393E
    b _08053B14
_0805393E:
    b _08053BD4
_08053940: .4byte 0x000A0003
_08053944:
    ldr r0, _08053958 @ =0x000A0005
    cmp r6, r0
    bne _0805394C
    b _08053B34
_0805394C:
    cmp r6, r0
    ble _08053952
    b _08053B3C
_08053952:
    ldr r0, _0805395C @ =0x080F0348
    b _08053BDA
    .byte 0x00, 0x00
_08053958: .4byte 0x000A0005
_0805395C: .4byte 0x080F0348
_08053960:
    ldr r0, _0805398C @ =0x000C0007
    cmp r6, r0
    bne _08053968
    b _08053AB0
_08053968:
    cmp r6, r0
    bgt _080539B8
    subs r0, #0x04
    cmp r6, r0
    bne _08053974
    b _08053A68
_08053974:
    cmp r6, r0
    bgt _08053990
    subs r0, #0x02
    cmp r6, r0
    beq _08053A38
    cmp r6, r0
    bgt _08053A50
    subs r0, #0x01
    cmp r6, r0
    beq _08053A1E
    b _08053BD4
    .byte 0x00, 0x00
_0805398C: .4byte 0x000C0007
_08053990:
    ldr r0, _080539B0 @ =0x000C0005
    cmp r6, r0
    beq _08053A80
    cmp r6, r0
    ble _0805399C
    b _08053A98
_0805399C:
    adds r0, r5, #0x0
    adds r0, #0x56
    mov r3, r8
    strh r3, [r0, #0x00]
    adds r0, #0x02
    strh r3, [r0, #0x00]
    mov r0, r9
    strh r0, [r5, #0x10]
    ldr r0, _080539B4 @ =0x080F0508
    b _08053BDA
_080539B0: .4byte 0x000C0005
_080539B4: .4byte 0x080F0508
_080539B8:
    ldr r0, _080539E8 @ =0x000C000B
    cmp r6, r0
    bne _080539C0
    b _08053AF4
_080539C0:
    cmp r6, r0
    bgt _080539F0
    subs r0, #0x02
    cmp r6, r0
    bne _080539CC
    b _08053AC2
_080539CC:
    cmp r6, r0
    ble _080539D2
    b _08053ADC
_080539D2:
    adds r0, r5, #0x0
    adds r0, #0x56
    mov r1, r8
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    mov r2, r9
    strh r2, [r5, #0x10]
    ldr r0, _080539EC @ =0x080F0D48
    b _08053BDA
    .byte 0x00, 0x00
_080539E8: .4byte 0x000C000B
_080539EC: .4byte 0x080F0D48
_080539F0:
    movs r0, #0x86
    lsls r0, r0, #0x10
    cmp r6, r0
    bne _080539FA
    b _08053BB4
_080539FA:
    cmp r6, r0
    bgt _08053A0A
    movs r0, #0xE0
    lsls r0, r0, #0x0C
    cmp r6, r0
    bne _08053A08
    b _08053BBC
_08053A08:
    b _08053BD4
_08053A0A:
    movs r0, #0x98
    lsls r0, r0, #0x10
    cmp r6, r0
    bne _08053A14
    b _08053B9C
_08053A14:
    adds r0, #0x01
    cmp r6, r0
    bne _08053A1C
    b _08053BA8
_08053A1C:
    b _08053BD4
_08053A1E:
    adds r0, r5, #0x0
    adds r0, #0x56
    mov r3, r8
    strh r3, [r0, #0x00]
    adds r0, #0x02
    strh r3, [r0, #0x00]
    mov r0, r9
    strh r0, [r5, #0x10]
    ldr r0, _08053A34 @ =0x080F09E8
    b _08053BDA
    .byte 0x00, 0x00
_08053A34: .4byte 0x080F09E8
_08053A38:
    adds r0, r5, #0x0
    adds r0, #0x56
    mov r1, r8
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    mov r2, r9
    strh r2, [r5, #0x10]
    ldr r0, _08053A4C @ =0x080F0148
    b _08053BDA
_08053A4C: .4byte 0x080F0148
_08053A50:
    adds r0, r5, #0x0
    adds r0, #0x56
    mov r3, r8
    strh r3, [r0, #0x00]
    adds r0, #0x02
    strh r3, [r0, #0x00]
    mov r0, r9
    strh r0, [r5, #0x10]
    ldr r0, _08053A64 @ =0x080F04E8
    b _08053BDA
_08053A64: .4byte 0x080F04E8
_08053A68:
    adds r0, r5, #0x0
    adds r0, #0x56
    mov r1, r8
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    mov r2, r9
    strh r2, [r5, #0x10]
    ldr r0, _08053A7C @ =0x080EFDE8
    b _08053BDA
_08053A7C: .4byte 0x080EFDE8
_08053A80:
    adds r0, r5, #0x0
    adds r0, #0x56
    mov r3, r8
    strh r3, [r0, #0x00]
    adds r0, #0x02
    strh r3, [r0, #0x00]
    mov r0, r9
    strh r0, [r5, #0x10]
    ldr r0, _08053A94 @ =0x080F0168
    b _08053BDA
_08053A94: .4byte 0x080F0168
_08053A98:
    adds r0, r5, #0x0
    adds r0, #0x56
    mov r1, r8
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    mov r2, r9
    strh r2, [r5, #0x10]
    ldr r0, _08053AAC @ =0x080F0188
    b _08053BDA
_08053AAC: .4byte 0x080F0188
_08053AB0:
    adds r0, r5, #0x0
    adds r0, #0x56
    mov r3, r8
    strh r3, [r0, #0x00]
    adds r0, #0x02
    strh r3, [r0, #0x00]
    mov r0, r9
    strh r0, [r5, #0x10]
    b _08053BD8
_08053AC2:
    adds r0, r5, #0x0
    adds r0, #0x56
    mov r1, r8
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    mov r2, r9
    strh r2, [r5, #0x10]
    ldr r0, _08053AD8 @ =0x080F0DC8
    b _08053BDA
    .byte 0x00, 0x00
_08053AD8: .4byte 0x080F0DC8
_08053ADC:
    adds r0, r5, #0x0
    adds r0, #0x56
    mov r3, r8
    strh r3, [r0, #0x00]
    adds r0, #0x02
    strh r3, [r0, #0x00]
    mov r0, r9
    strh r0, [r5, #0x10]
    ldr r0, _08053AF0 @ =0x080F0E08
    b _08053BDA
_08053AF0: .4byte 0x080F0E08
_08053AF4:
    ldr r0, _08053AF8 @ =0x080F0448
    b _08053BDA
_08053AF8: .4byte 0x080F0448
_08053AFC:
    ldr r0, _08053B00 @ =0x080F0208
    b _08053BDA
_08053B00: .4byte 0x080F0208
_08053B04:
    ldr r0, _08053B08 @ =0x080F0228
    b _08053BDA
_08053B08: .4byte 0x080F0228
_08053B0C:
    ldr r0, _08053B10 @ =0x080F0248
    b _08053BDA
_08053B10: .4byte 0x080F0248
_08053B14:
    ldr r0, _08053B18 @ =0x080F02C8
    b _08053BDA
_08053B18: .4byte 0x080F02C8
_08053B1C:
    ldr r0, _08053B20 @ =0x080F02E8
    b _08053BDA
_08053B20: .4byte 0x080F02E8
_08053B24:
    ldr r0, _08053B28 @ =0x080F0308
    b _08053BDA
_08053B28: .4byte 0x080F0308
_08053B2C:
    ldr r0, _08053B30 @ =0x080F0328
    b _08053BDA
_08053B30: .4byte 0x080F0328
_08053B34:
    ldr r0, _08053B38 @ =0x080F0368
    b _08053BDA
_08053B38: .4byte 0x080F0368
_08053B3C:
    ldr r0, _08053B40 @ =0x080F0388
    b _08053BDA
_08053B40: .4byte 0x080F0388
_08053B44:
    ldr r0, _08053B48 @ =0x080F03A8
    b _08053BDA
_08053B48: .4byte 0x080F03A8
_08053B4C:
    movs r0, #0xB8
    adds r1, r5, #0x0
    adds r1, #0x56
    strh r0, [r1, #0x00]
    adds r1, #0x02
    strh r0, [r1, #0x00]
    mov r1, r9
    strh r1, [r5, #0x10]
    ldr r0, _08053B60 @ =0x080F03C8
    b _08053BDA
_08053B60: .4byte 0x080F03C8
_08053B64:
    movs r0, #0xB8
    adds r1, r5, #0x0
    adds r1, #0x56
    strh r0, [r1, #0x00]
    adds r1, #0x02
    strh r0, [r1, #0x00]
    mov r2, r9
    strh r2, [r5, #0x10]
    ldr r0, _08053B78 @ =0x080F03E8
    b _08053BDA
_08053B78: .4byte 0x080F03E8
_08053B7C:
    ldrh r0, [r5, #0x34]
    movs r1, #0x02
    orrs r1, r0
    strh r1, [r5, #0x34]
    ldr r0, _08053B88 @ =0x080F04A8
    b _08053BDA
_08053B88: .4byte 0x080F04A8
_08053B8C:
    ldrh r0, [r5, #0x34]
    movs r1, #0x02
    orrs r1, r0
    strh r1, [r5, #0x34]
    ldr r0, _08053B98 @ =0x080F04C8
    b _08053BDA
_08053B98: .4byte 0x080F04C8
_08053B9C:
    mov r3, r9
    strh r3, [r5, #0x10]
    ldr r0, _08053BA4 @ =0x080F0AA8
    b _08053BDA
_08053BA4: .4byte 0x080F0AA8
_08053BA8:
    mov r0, r9
    strh r0, [r5, #0x10]
    ldr r0, _08053BB0 @ =0x080F0AC8
    b _08053BDA
_08053BB0: .4byte 0x080F0AC8
_08053BB4:
    adds r0, r5, #0x0
    bl sub_8056170
    b sub_8053D64
_08053BBC:
    mov r1, r9
    strh r1, [r5, #0x10]
    ldr r0, _08053BC4 @ =0x080F0FC8
    b _08053BDA
_08053BC4: .4byte 0x080F0FC8
_08053BC8:
    mov r2, r9
    strh r2, [r5, #0x10]
    ldr r0, _08053BD0 @ =0x080F0FA8
    b _08053BDA
_08053BD0: .4byte 0x080F0FA8
_08053BD4:
    mov r3, r9
    strh r3, [r5, #0x10]
_08053BD8:
    ldr r0, _08053BE4 @ =0x080F01A8
_08053BDA:
    str r0, [r5, #0x4C]
    adds r0, r5, #0x0
    bl sub_8059E80
    b sub_8053D64
_08053BE4: .4byte 0x080F01A8
_08053BE8:
    ldr r0, [r5, #0x08]
    ldr r1, _08053BFC @ =0xFFF80000
    adds r0, r0, r1
    str r0, [r5, #0x08]
    ldr r0, _08053C00 @ =0x00010001
    cmp r6, r0
    bne _08053C08
    ldr r0, _08053C04 @ =0x080F06C8
    b _08053D62
    .byte 0x00, 0x00
_08053BFC: .4byte 0xFFF80000
_08053C00: .4byte 0x00010001
_08053C04: .4byte 0x080F06C8
_08053C08:
    ldr r0, _08053C0C @ =0x080F06A8
    b _08053D62
_08053C0C: .4byte 0x080F06A8
_08053C10:
    ldr r0, _08053C14 @ =0x080F0488
    b _08053D62
_08053C14: .4byte 0x080F0488
_08053C18:
    adds r0, r5, #0x0
    bl sub_8058A74
    b sub_8053D64
_08053C20:
    cmp r6, r1
    bne _08053C30
    mov r2, r9
    strh r2, [r5, #0x10]
    ldr r0, _08053C2C @ =0x080F0408
    b _08053D62
_08053C2C: .4byte 0x080F0408
_08053C30:
    ldr r0, _08053C34 @ =0x080F0428
    b _08053D62
_08053C34: .4byte 0x080F0428
_08053C38:
    ldr r0, _08053C3C @ =0x080F0468
    b _08053D62
_08053C3C: .4byte 0x080F0468
_08053C40:
    ldr r1, [r5, #0x50]
    adds r0, r5, #0x0
    bl sub_805631C
    b sub_8053D64
_08053C4A:
    ldr r1, [r5, #0x50]
    adds r0, r5, #0x0
    bl sub_805631C
    ldr r0, _08053C58 @ =0x080F0008
    b _08053D62
    .byte 0x00, 0x00
_08053C58: .4byte 0x080F0008
_08053C5C:
    adds r0, r5, #0x0
    bl sub_8053EF4
    b sub_8053D64
_08053C64:
    ldr r1, [r5, #0x50]
    adds r0, r5, #0x0
    bl sub_8055D70
    b sub_8053D64
_08053C6E:
    adds r0, r5, #0x0
    bl sub_8056908
    b sub_8053D64
_08053C76:
    ldr r1, [r5, #0x50]
    adds r0, r5, #0x0
    bl sub_80563D4
    b sub_8053D64
_08053C80:
    ldr r0, _08053C84 @ =0x080EFE48
    b _08053D62
_08053C84: .4byte 0x080EFE48
_08053C88:
    adds r0, r5, #0x0
    bl sub_8056C00
    b sub_8053D64
_08053C90:
    adds r0, r5, #0x0
    bl sub_805699C
    b sub_8053D64
_08053C98:
    adds r0, r5, #0x0
    bl sub_8057074
    ldr r0, _08053CA4 @ =0x080F0588
    b _08053D62
    .byte 0x00, 0x00
_08053CA4: .4byte 0x080F0588
_08053CA8:
    ldr r0, _08053CAC @ =0x080EFE48
    b _08053D62
_08053CAC: .4byte 0x080EFE48
_08053CB0:
    adds r0, r5, #0x0
    bl sub_8056EE8
    b sub_8053D64
_08053CB8:
    adds r0, r5, #0x0
    bl sub_8058408
    b sub_8053D64
_08053CC0:
    adds r0, r5, #0x0
    bl sub_8057808
    b sub_8053D64
_08053CC8:
    ldr r0, _08053CCC @ =0x080EFE48
    b _08053D62
_08053CCC: .4byte 0x080EFE48
_08053CD0:
    adds r0, r5, #0x0
    bl sub_805674C
    b sub_8053D64
_08053CD8:
    adds r0, r5, #0x0
    bl sub_8057E28
    b sub_8053D64
_08053CE0:
    adds r0, r5, #0x0
    bl sub_8057364
    ldr r0, _08053CEC @ =0x080F0528
    b _08053D62
    .byte 0x00, 0x00
_08053CEC: .4byte 0x080F0528
_08053CF0:
    adds r0, r5, #0x0
    bl sub_80572A4
    b sub_8053D64
_08053CF8:
    adds r0, r5, #0x0
    bl sub_8057594
    b sub_8053D64
_08053D00:
    adds r0, r5, #0x0
    bl sub_8057B04
    b sub_8053D64
_08053D08:
    adds r0, r5, #0x0
    bl sub_80580EC
    b sub_8053D64
_08053D10:
    ldr r0, _08053D14 @ =0x080F0BC8
    b _08053D62
_08053D14: .4byte 0x080F0BC8
_08053D18:
    ldr r0, _08053D1C @ =0x080F0BE8
    b _08053D62
_08053D1C: .4byte 0x080F0BE8
_08053D20:
    adds r0, r5, #0x0
    bl sub_80588AC
    b sub_8053D64
_08053D28:
    adds r0, r5, #0x0
    bl sub_805892C
    b sub_8053D64
_08053D30:
    adds r0, r5, #0x0
    bl sub_8059004
    b sub_8053D64
_08053D38:
    adds r0, r5, #0x0
    bl sub_805919C
    b sub_8053D64
_08053D40:
    adds r0, r5, #0x0
    bl sub_80592E4
    b sub_8053D64
_08053D48:
    adds r0, r5, #0x0
    bl sub_8059710
    b sub_8053D64
_08053D50:
    adds r0, r5, #0x0
    bl sub_8059938
    b sub_8053D64
_08053D58:
    adds r0, r5, #0x0
    bl sub_8059E98
    b sub_8053D64
_08053D60:
    ldr r0, _08053D70 @ =0x080EFE88
_08053D62:
    str r0, [r5, #0x4C]
    thumb_func_start sub_8053D64
sub_8053D64:
    ldrb r0, [r7, #0x00]
    cmp r0, #0x00
    beq _08053D6E
    bl _08053464
_08053D6E:
    b sub_8053D86
_08053D70: .4byte 0x080EFE88
    thumb_func_start sub_8053D74
sub_8053D74:
    ldr r3, [sp, #0x004]
    ldr r1, _08053D98 @ =0x000006EC
    adds r0, r3, r1
    movs r2, #0xDC
    lsls r2, r2, #0x03
    adds r1, r3, r2
    movs r2, #0x00
    bl sub_804F824
    non_word_aligned_thumb_func_start sub_8053D86
sub_8053D86:
    add sp, #0x008
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08053D98: .4byte 0x000006EC
    thumb_func_start sub_8053D9C
sub_8053D9C:
    push {r4, lr}
    ldr r1, _08053DC0 @ =0x000006EC
    adds r0, r0, r1
    ldr r4, [r0, #0x08]
    cmp r4, #0x00
    beq _08053DBA
_08053DA8:
    ldr r1, [r4, #0x5C]
    cmp r1, #0x00
    beq _08053DB4
    adds r0, r4, #0x0
    bl _call_via_r1
_08053DB4:
    ldr r4, [r4, #0x3C]
    cmp r4, #0x00
    bne _08053DA8
_08053DBA:
    pop {r4}
    pop {r0}
    bx r0
_08053DC0: .4byte 0x000006EC
    thumb_func_start sub_8053DC4
sub_8053DC4:
    adds r2, r1, #0x0
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    ldr r3, _08053DE0 @ =0x080F1010
    subs r0, #0x04
    cmp r0, #0x18
    bls _08053DD4
    b _08053ED4
_08053DD4:
    lsls r0, r0, #0x02
    ldr r1, _08053DE4 @ =0x08053DE8
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_08053DE0: .4byte 0x080F1010
_08053DE4: .4byte 0x08053DE8
    .byte 0x4C, 0x3E, 0x05, 0x08, 0x54, 0x3E, 0x05, 0x08, 0x5C, 0x3E, 0x05, 0x08, 0xBC, 0x3E, 0x05, 0x08
    .byte 0x64, 0x3E, 0x05, 0x08, 0x6C, 0x3E, 0x05, 0x08, 0x74, 0x3E, 0x05, 0x08, 0xBC, 0x3E, 0x05, 0x08
    .byte 0x7C, 0x3E, 0x05, 0x08, 0x84, 0x3E, 0x05, 0x08, 0x8C, 0x3E, 0x05, 0x08, 0xBC, 0x3E, 0x05, 0x08
    .byte 0x94, 0x3E, 0x05, 0x08, 0x9C, 0x3E, 0x05, 0x08, 0xA4, 0x3E, 0x05, 0x08, 0xAC, 0x3E, 0x05, 0x08
    .byte 0xB4, 0x3E, 0x05, 0x08, 0xC4, 0x3E, 0x05, 0x08, 0xBC, 0x3E, 0x05, 0x08, 0xCC, 0x3E, 0x05, 0x08
    .byte 0xD4, 0x3E, 0x05, 0x08, 0xBC, 0x3E, 0x05, 0x08, 0x74, 0x3E, 0x05, 0x08, 0xD4, 0x3E, 0x05, 0x08
    .byte 0x4C, 0x3E, 0x05, 0x08, 0x00, 0x49, 0x42, 0xE0, 0x54, 0x10, 0x0F, 0x08, 0x00, 0x49, 0x3E, 0xE0
    .byte 0x60, 0x10, 0x0F, 0x08, 0x00, 0x49, 0x3A, 0xE0, 0x88, 0x10, 0x0F, 0x08, 0x00, 0x49, 0x36, 0xE0
    .byte 0x18, 0x11, 0x0F, 0x08, 0x00, 0x49, 0x32, 0xE0, 0x30, 0x11, 0x0F, 0x08, 0x00, 0x49, 0x2E, 0xE0
    .byte 0x54, 0x11, 0x0F, 0x08, 0x00, 0x49, 0x2A, 0xE0, 0x74, 0x11, 0x0F, 0x08, 0x00, 0x49, 0x26, 0xE0
    .byte 0x88, 0x11, 0x0F, 0x08, 0x00, 0x49, 0x22, 0xE0, 0xA0, 0x11, 0x0F, 0x08, 0x00, 0x49, 0x1E, 0xE0
    .byte 0xC0, 0x11, 0x0F, 0x08, 0x00, 0x49, 0x1A, 0xE0, 0xD8, 0x11, 0x0F, 0x08, 0x00, 0x49, 0x16, 0xE0
    .byte 0x04, 0x12, 0x0F, 0x08, 0x00, 0x49, 0x12, 0xE0, 0x28, 0x12, 0x0F, 0x08, 0x00, 0x49, 0x0E, 0xE0
    .byte 0x5C, 0x12, 0x0F, 0x08, 0x00, 0x49, 0x0A, 0xE0, 0xA0, 0x10, 0x0F, 0x08, 0x00, 0x49, 0x06, 0xE0
    .byte 0xEC, 0x11, 0x0F, 0x08, 0x00, 0x49, 0x02, 0xE0, 0x6C, 0x12, 0x0F, 0x08
_08053ED4:
    ldr r1, _08053EE0 @ =0x080F1008
    cmp r2, #0x7F
    bgt _08053EE4
    lsls r0, r2, #0x02
    b _08053EEA
    .byte 0x00, 0x00
_08053EE0: .4byte 0x080F1008
_08053EE4:
    lsls r0, r2, #0x02
    adds r0, r0, r3
    ldr r1, _08053EF0 @ =0xFFFFFE00
_08053EEA:
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    bx lr
_08053EF0: .4byte 0xFFFFFE00
    thumb_func_start sub_8053EF4
sub_8053EF4:
    push {r4, lr}
    adds r3, r0, #0x0
    adds r4, r3, #0x0
    ldr r0, _08053F34 @ =0x00001002
    movs r2, #0x00
    strh r0, [r3, #0x10]
    movs r0, #0x14
    strb r0, [r3, #0x0E]
    strb r0, [r3, #0x0D]
    strb r0, [r3, #0x0C]
    ldr r0, _08053F38 @ =0x080540A1
    str r0, [r3, #0x5C]
    ldr r0, _08053F3C @ =0x080EFEE8
    str r0, [r3, #0x4C]
    ldr r0, _08053F40 @ =0x08055AE9
    str r0, [r3, #0x18]
    ldrh r1, [r3, #0x34]
    movs r0, #0x02
    orrs r0, r1
    strh r0, [r3, #0x34]
    str r2, [r3, #0x60]
    ldr r0, [r3, #0x50]
    ldr r1, _08053F44 @ =0xFF7EFFFF
    adds r0, r0, r1
    cmp r0, #0x0A
    bls _08053F2A
    b _08054094
_08053F2A:
    lsls r0, r0, #0x02
    ldr r1, _08053F48 @ =0x08053F4C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08053F34: .4byte 0x00001002
_08053F38: .4byte sub_80540A0
_08053F3C: .4byte 0x080EFEE8
_08053F40: .4byte sub_8055AE8
_08053F44: .4byte 0xFF7EFFFF
_08053F48: .4byte 0x08053F4C
    .byte 0x78, 0x3F, 0x05, 0x08, 0x7C, 0x3F, 0x05, 0x08, 0x80, 0x3F, 0x05, 0x08, 0x84, 0x3F, 0x05, 0x08
    .byte 0xAC, 0x3F, 0x05, 0x08, 0xD8, 0x3F, 0x05, 0x08, 0xF0, 0x3F, 0x05, 0x08, 0x18, 0x40, 0x05, 0x08
    .byte 0x30, 0x40, 0x05, 0x08, 0x58, 0x40, 0x05, 0x08, 0x70, 0x40, 0x05, 0x08, 0x21, 0x20, 0x8C, 0xE0
    .byte 0x41, 0x20, 0x8A, 0xE0, 0x61, 0x20, 0x88, 0xE0, 0x00, 0x21, 0x59, 0x66, 0x04, 0x48, 0xD8, 0x65
    .byte 0x04, 0x48, 0xA0, 0x61, 0x19, 0x66, 0x04, 0x48, 0xA0, 0x62, 0x04, 0x48, 0xE0, 0x62, 0x7D, 0xE0
    .byte 0x2D, 0x44, 0x05, 0x08, 0x55, 0x5B, 0x05, 0x08, 0xAB, 0x2A, 0xFD, 0xFF, 0x55, 0xD5, 0x02, 0x00
    .byte 0x00, 0x20, 0x58, 0x66, 0x05, 0x48, 0xD8, 0x65, 0x05, 0x48, 0xA0, 0x61, 0x10, 0x20, 0x18, 0x66
    .byte 0x04, 0x48, 0xA0, 0x62, 0x04, 0x48, 0xE0, 0x62, 0x68, 0xE0, 0x00, 0x00, 0x2D, 0x44, 0x05, 0x08
    .byte 0x55, 0x5B, 0x05, 0x08, 0x55, 0xD5, 0x02, 0x00, 0xAB, 0x2A, 0xFD, 0xFF, 0x20, 0x20, 0x58, 0x66
    .byte 0x02, 0x48, 0xD8, 0x65, 0x02, 0x48, 0xA0, 0x61, 0x00, 0x20, 0x0A, 0xE0, 0x89, 0x48, 0x05, 0x08
    .byte 0xC1, 0x5B, 0x05, 0x08, 0x38, 0x20, 0x58, 0x66, 0x05, 0x48, 0xD8, 0x65, 0x05, 0x48, 0xA0, 0x61
    .byte 0x12, 0x20, 0x18, 0x66, 0x04, 0x48, 0xA0, 0x62, 0x80, 0x20, 0x80, 0x02, 0xE0, 0x62, 0x45, 0xE0
    .byte 0x51, 0x4D, 0x05, 0x08, 0x2D, 0x5C, 0x05, 0x08, 0x00, 0x00, 0xFE, 0xFF, 0x00, 0x21, 0x59, 0x66
    .byte 0x02, 0x48, 0xD8, 0x65, 0x02, 0x48, 0xA0, 0x61, 0x19, 0x66, 0x0B, 0xE0, 0x51, 0x4D, 0x05, 0x08
    .byte 0x2D, 0x5C, 0x05, 0x08, 0x50, 0x20, 0x58, 0x66, 0x05, 0x48, 0xD8, 0x65, 0x05, 0x48, 0xA0, 0x61
    .byte 0x24, 0x20, 0x18, 0x66, 0x80, 0x20, 0x80, 0x02, 0xA0, 0x62, 0x03, 0x48, 0xE0, 0x62, 0x25, 0xE0
    .byte 0x89, 0x48, 0x05, 0x08, 0xC1, 0x5B, 0x05, 0x08, 0x00, 0x00, 0xFE, 0xFF, 0x00, 0x20, 0x58, 0x66
    .byte 0x02, 0x48, 0xD8, 0x65, 0x02, 0x48, 0xA0, 0x61, 0x09, 0x20, 0x0A, 0xE0, 0xD1, 0x51, 0x05, 0x08
    .byte 0x99, 0x5C, 0x05, 0x08, 0x00, 0x20, 0x58, 0x66, 0x04, 0x48, 0xD8, 0x65, 0x04, 0x48, 0xA0, 0x61
    .byte 0x24, 0x20, 0x18, 0x66, 0x03, 0x48, 0xA0, 0x62, 0x08, 0xE0, 0x00, 0x00, 0x3D, 0x56, 0x05, 0x08
    .byte 0x05, 0x5D, 0x05, 0x08, 0x56, 0x55, 0xFE, 0xFF
_08054094:
    movs r0, #0x01
    str r0, [r3, #0x64]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_80540A0
sub_80540A0:
    push {r4, r5, r6, lr}
    adds r3, r0, #0x0
    adds r4, r3, #0x0
    ldr r0, [r3, #0x64]
    subs r0, #0x01
    str r0, [r3, #0x64]
    adds r2, r0, #0x0
    ldr r0, [r3, #0x60]
    cmp r0, #0x07
    bls _080540B6
    b _0805441C
_080540B6:
    lsls r0, r0, #0x02
    ldr r1, _080540C0 @ =0x080540C4
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_080540C0: .4byte 0x080540C4
    .byte 0xBE, 0x41, 0x05, 0x08, 0xE4, 0x40, 0x05, 0x08, 0xAA, 0x41, 0x05, 0x08, 0xBE, 0x41, 0x05, 0x08
    .byte 0xD0, 0x41, 0x05, 0x08, 0x9C, 0x42, 0x05, 0x08, 0x3C, 0x43, 0x05, 0x08, 0xE8, 0x43, 0x05, 0x08
    .byte 0x23, 0x2A, 0x52, 0xD8, 0x90, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00
    .byte 0xF8, 0x40, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08
    .byte 0x8E, 0x41, 0x05, 0x08, 0x88, 0x41, 0x05, 0x08, 0x88, 0x41, 0x05, 0x08, 0x88, 0x41, 0x05, 0x08
    .byte 0x88, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08
    .byte 0x8E, 0x41, 0x05, 0x08, 0x88, 0x41, 0x05, 0x08, 0x88, 0x41, 0x05, 0x08, 0x88, 0x41, 0x05, 0x08
    .byte 0x88, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08
    .byte 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08, 0x88, 0x41, 0x05, 0x08
    .byte 0x88, 0x41, 0x05, 0x08, 0x88, 0x41, 0x05, 0x08, 0x88, 0x41, 0x05, 0x08, 0x88, 0x41, 0x05, 0x08
    .byte 0x88, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08
    .byte 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08, 0x8E, 0x41, 0x05, 0x08
    .byte 0x8E, 0x41, 0x05, 0x08, 0x80, 0x20, 0x00, 0x02, 0x00, 0xE0, 0x00, 0x20, 0xA0, 0x60, 0x00, 0x2A
    .byte 0x00, 0xDD, 0x41, 0xE1, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x40, 0x20, 0x58, 0x66, 0x80, 0x20
    .byte 0x00, 0x02, 0x18, 0x63, 0x38, 0xE1, 0x40, 0x20, 0x80, 0x1A, 0xC0, 0x03, 0xA0, 0x60, 0x00, 0x2A
    .byte 0x00, 0xDD, 0x31, 0xE1, 0x18, 0x6E, 0x01, 0x30, 0x10, 0xE1, 0x00, 0x2A, 0x00, 0xDD, 0x2B, 0xE1
    .byte 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x24, 0x20, 0x58, 0x66, 0x25, 0xE1, 0x23, 0x2A, 0x52, 0xD8
    .byte 0x90, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00, 0xE4, 0x41, 0x05, 0x08
    .byte 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08
    .byte 0x74, 0x42, 0x05, 0x08, 0x74, 0x42, 0x05, 0x08, 0x74, 0x42, 0x05, 0x08, 0x74, 0x42, 0x05, 0x08
    .byte 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08
    .byte 0x74, 0x42, 0x05, 0x08, 0x74, 0x42, 0x05, 0x08, 0x74, 0x42, 0x05, 0x08, 0x74, 0x42, 0x05, 0x08
    .byte 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08
    .byte 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08, 0x74, 0x42, 0x05, 0x08, 0x74, 0x42, 0x05, 0x08
    .byte 0x74, 0x42, 0x05, 0x08, 0x74, 0x42, 0x05, 0x08, 0x74, 0x42, 0x05, 0x08, 0x74, 0x42, 0x05, 0x08
    .byte 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08
    .byte 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08, 0x7A, 0x42, 0x05, 0x08
    .byte 0x82, 0x20, 0x80, 0x03, 0x01, 0xE0, 0x80, 0x20, 0x80, 0x03, 0xA0, 0x60, 0x00, 0x2A, 0x00, 0xDD
    .byte 0xCA, 0xE0, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x08, 0x20, 0x58, 0x66, 0x01, 0x48, 0x18, 0x63
    .byte 0xC2, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0x90, 0x04, 0xA0, 0x60, 0x00, 0x2A, 0x00, 0xDD
    .byte 0xBA, 0xE0, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x20, 0x21, 0x59, 0x66, 0x00, 0x20, 0x18, 0x63
    .byte 0x1C, 0x4A, 0x13, 0x1C, 0x24, 0x33, 0x1C, 0x4D, 0x50, 0x19, 0x00, 0x68, 0x80, 0x6C, 0x08, 0x40
    .byte 0x00, 0x28, 0x00, 0xD0, 0xA8, 0xE0, 0x19, 0x49, 0x50, 0x18, 0x00, 0x78, 0x00, 0x28, 0x00, 0xD1
    .byte 0xA2, 0xE0, 0x18, 0x1C, 0x21, 0x1C, 0xF8, 0xF7, 0x25, 0xFD, 0x00, 0x04, 0x02, 0x0C, 0x18, 0x2A
    .byte 0x00, 0xDC, 0x99, 0xE0, 0x16, 0x1C, 0x00, 0x2E, 0x00, 0xD1, 0x95, 0xE0, 0xC0, 0x20, 0x40, 0x00
    .byte 0x0B, 0xF0, 0x14, 0xFE, 0x0E, 0x4D, 0x0F, 0x4C, 0xC0, 0x22, 0x12, 0x01, 0xA4, 0x18, 0xA1, 0x88
    .byte 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x0B, 0xF0, 0xFF, 0xFE, 0xA1, 0x88
    .byte 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x01, 0x21, 0x32, 0x1C, 0x0C, 0xF0
    .byte 0xAD, 0xFD, 0x79, 0xE0, 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x84, 0x0C, 0x00, 0x00
    .byte 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08, 0x1F, 0x2A, 0x4A, 0xD8, 0x90, 0x00, 0x02, 0x49
    .byte 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00, 0x50, 0x43, 0x05, 0x08, 0xD6, 0x43, 0x05, 0x08
    .byte 0xD6, 0x43, 0x05, 0x08, 0xD6, 0x43, 0x05, 0x08, 0xD6, 0x43, 0x05, 0x08, 0xD0, 0x43, 0x05, 0x08
    .byte 0xD0, 0x43, 0x05, 0x08, 0xD0, 0x43, 0x05, 0x08, 0xD0, 0x43, 0x05, 0x08, 0xD6, 0x43, 0x05, 0x08
    .byte 0xD6, 0x43, 0x05, 0x08, 0xD6, 0x43, 0x05, 0x08, 0xD6, 0x43, 0x05, 0x08, 0xD0, 0x43, 0x05, 0x08
    .byte 0xD0, 0x43, 0x05, 0x08, 0xD0, 0x43, 0x05, 0x08, 0xD0, 0x43, 0x05, 0x08, 0xD6, 0x43, 0x05, 0x08
    .byte 0xD6, 0x43, 0x05, 0x08, 0xD6, 0x43, 0x05, 0x08, 0xD6, 0x43, 0x05, 0x08, 0xD0, 0x43, 0x05, 0x08
    .byte 0xD0, 0x43, 0x05, 0x08, 0xD0, 0x43, 0x05, 0x08, 0xD0, 0x43, 0x05, 0x08, 0xD6, 0x43, 0x05, 0x08
    .byte 0xD6, 0x43, 0x05, 0x08, 0xD6, 0x43, 0x05, 0x08, 0xD6, 0x43, 0x05, 0x08, 0xD0, 0x43, 0x05, 0x08
    .byte 0xD0, 0x43, 0x05, 0x08, 0xD0, 0x43, 0x05, 0x08, 0xD0, 0x43, 0x05, 0x08, 0x80, 0x20, 0x00, 0x02
    .byte 0x00, 0xE0, 0x00, 0x20, 0xA0, 0x60, 0x00, 0x2A, 0x1E, 0xDC, 0x00, 0x20, 0x18, 0x66, 0x20, 0x20
    .byte 0x58, 0x66, 0x19, 0xE0, 0xA0, 0x8E, 0x01, 0x21, 0x08, 0x40, 0x00, 0x28, 0x14, 0xD0, 0x20, 0x68
    .byte 0xA1, 0x6A, 0x40, 0x18, 0x20, 0x60, 0x60, 0x68, 0xE1, 0x6A, 0x40, 0x18, 0x60, 0x60, 0xA1, 0x68
    .byte 0x20, 0x6B, 0x09, 0x18, 0xA1, 0x60, 0x06, 0x4D, 0x40, 0x19, 0x20, 0x63, 0x00, 0x29, 0x03, 0xDC
    .byte 0x99, 0x8E, 0x04, 0x48, 0x08, 0x40, 0x98, 0x86
_0805441C:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00, 0x00, 0xC0, 0xFF, 0xFF, 0xFE, 0xFF, 0x00, 0x00
    thumb_func_start sub_805442C
sub_805442C:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    ldr r2, [r4, #0x64]
    adds r3, r4, #0x0
    ldr r0, [r4, #0x60]
    cmp r0, #0x21
    bls _0805443C
    b _0805487A
_0805443C:
    lsls r0, r0, #0x02
    ldr r1, _08054448 @ =0x0805444C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_08054448: .4byte 0x0805444C
    .byte 0xF2, 0x45, 0x05, 0x08, 0xD4, 0x44, 0x05, 0x08, 0x9E, 0x45, 0x05, 0x08, 0xB8, 0x45, 0x05, 0x08
    .byte 0xF2, 0x45, 0x05, 0x08, 0x08, 0x46, 0x05, 0x08, 0xD8, 0x46, 0x05, 0x08, 0x7C, 0x47, 0x05, 0x08
    .byte 0xF2, 0x45, 0x05, 0x08, 0xD4, 0x44, 0x05, 0x08, 0x9E, 0x45, 0x05, 0x08, 0xCA, 0x45, 0x05, 0x08
    .byte 0xF2, 0x45, 0x05, 0x08, 0x08, 0x46, 0x05, 0x08, 0xD8, 0x46, 0x05, 0x08, 0x7C, 0x47, 0x05, 0x08
    .byte 0xF2, 0x45, 0x05, 0x08, 0xD4, 0x44, 0x05, 0x08, 0x9E, 0x45, 0x05, 0x08, 0xC2, 0x45, 0x05, 0x08
    .byte 0xF2, 0x45, 0x05, 0x08, 0x08, 0x46, 0x05, 0x08, 0xD8, 0x46, 0x05, 0x08, 0x7C, 0x47, 0x05, 0x08
    .byte 0xF2, 0x45, 0x05, 0x08, 0xD4, 0x44, 0x05, 0x08, 0x9E, 0x45, 0x05, 0x08, 0xD4, 0x45, 0x05, 0x08
    .byte 0xF2, 0x45, 0x05, 0x08, 0x08, 0x46, 0x05, 0x08, 0xD8, 0x46, 0x05, 0x08, 0x7C, 0x47, 0x05, 0x08
    .byte 0x7A, 0x48, 0x05, 0x08, 0x46, 0x48, 0x05, 0x08, 0x23, 0x2A, 0x52, 0xD8, 0x90, 0x00, 0x02, 0x49
    .byte 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00, 0xE8, 0x44, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08
    .byte 0x7E, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08, 0x78, 0x45, 0x05, 0x08
    .byte 0x78, 0x45, 0x05, 0x08, 0x78, 0x45, 0x05, 0x08, 0x78, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08
    .byte 0x7E, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08, 0x78, 0x45, 0x05, 0x08
    .byte 0x78, 0x45, 0x05, 0x08, 0x78, 0x45, 0x05, 0x08, 0x78, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08
    .byte 0x7E, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08
    .byte 0x7E, 0x45, 0x05, 0x08, 0x78, 0x45, 0x05, 0x08, 0x78, 0x45, 0x05, 0x08, 0x78, 0x45, 0x05, 0x08
    .byte 0x78, 0x45, 0x05, 0x08, 0x78, 0x45, 0x05, 0x08, 0x78, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08
    .byte 0x7E, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08
    .byte 0x7E, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08, 0x7E, 0x45, 0x05, 0x08, 0x80, 0x20, 0x00, 0x02
    .byte 0x00, 0xE0, 0x00, 0x20, 0x98, 0x60, 0x01, 0x32, 0x62, 0x66, 0x23, 0x2A, 0x00, 0xDC, 0x76, 0xE1
    .byte 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x00, 0x20, 0x60, 0x66, 0x80, 0x20, 0x00, 0x02, 0x20, 0x63
    .byte 0x6D, 0xE1, 0x01, 0x32, 0x62, 0x66, 0xD0, 0x03, 0x98, 0x60, 0x3F, 0x2A, 0x00, 0xDC, 0x66, 0xE1
    .byte 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x30, 0x20, 0x60, 0x66, 0x60, 0xE1, 0x18, 0x68, 0x99, 0x6A
    .byte 0x40, 0x18, 0x18, 0x60, 0x0C, 0xE0, 0x58, 0x68, 0xD9, 0x6A, 0x40, 0x18, 0x07, 0xE0, 0x18, 0x68
    .byte 0x99, 0x6A, 0x40, 0x1A, 0x18, 0x60, 0x03, 0xE0, 0x58, 0x68, 0xD9, 0x6A, 0x40, 0x1A, 0x58, 0x60
    .byte 0x01, 0x3A, 0x62, 0x66, 0x00, 0x2A, 0x00, 0xDD, 0x49, 0xE1, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66
    .byte 0x40, 0x20, 0x60, 0x66, 0x43, 0xE1, 0x01, 0x3A, 0x62, 0x66, 0x00, 0x2A, 0x00, 0xDD, 0x3E, 0xE1
    .byte 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x00, 0x20, 0x60, 0x66, 0x38, 0xE1, 0x23, 0x2A, 0x52, 0xD8
    .byte 0x90, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00, 0x1C, 0x46, 0x05, 0x08
    .byte 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08
    .byte 0xAC, 0x46, 0x05, 0x08, 0xAC, 0x46, 0x05, 0x08, 0xAC, 0x46, 0x05, 0x08, 0xAC, 0x46, 0x05, 0x08
    .byte 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08
    .byte 0xAC, 0x46, 0x05, 0x08, 0xAC, 0x46, 0x05, 0x08, 0xAC, 0x46, 0x05, 0x08, 0xAC, 0x46, 0x05, 0x08
    .byte 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08
    .byte 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08, 0xAC, 0x46, 0x05, 0x08, 0xAC, 0x46, 0x05, 0x08
    .byte 0xAC, 0x46, 0x05, 0x08, 0xAC, 0x46, 0x05, 0x08, 0xAC, 0x46, 0x05, 0x08, 0xAC, 0x46, 0x05, 0x08
    .byte 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08
    .byte 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08, 0xB2, 0x46, 0x05, 0x08
    .byte 0x82, 0x20, 0x80, 0x03, 0x01, 0xE0, 0x80, 0x20, 0x80, 0x03, 0x98, 0x60, 0x01, 0x32, 0x62, 0x66
    .byte 0x23, 0x2A, 0x00, 0xDC, 0xDB, 0xE0, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x08, 0x20, 0x60, 0x66
    .byte 0x01, 0x48, 0x20, 0x63, 0xD3, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0x01, 0x3A, 0x62, 0x66
    .byte 0x90, 0x04, 0x98, 0x60, 0x00, 0x2A, 0x00, 0xDD, 0xC9, 0xE0, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66
    .byte 0x00, 0x20, 0x60, 0x66, 0x20, 0x63, 0x1D, 0x4A, 0x14, 0x1C, 0x24, 0x34, 0x1C, 0x49, 0x50, 0x18
    .byte 0x00, 0x68, 0x80, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD0, 0xB7, 0xE0, 0x19, 0x49
    .byte 0x50, 0x18, 0x00, 0x78, 0x00, 0x28, 0x00, 0xD1, 0xB1, 0xE0, 0x20, 0x1C, 0x19, 0x1C, 0xF8, 0xF7
    .byte 0x05, 0xFB, 0x00, 0x04, 0x02, 0x0C, 0x18, 0x2A, 0x00, 0xDC, 0xA8, 0xE0, 0x16, 0x1C, 0x00, 0x2E
    .byte 0x00, 0xD1, 0xA4, 0xE0, 0xC0, 0x20, 0x40, 0x00, 0x0B, 0xF0, 0xF4, 0xFB, 0x0E, 0x4D, 0x0F, 0x4C
    .byte 0xC0, 0x22, 0x12, 0x01, 0xA4, 0x18, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19
    .byte 0x00, 0x68, 0x0B, 0xF0, 0xDF, 0xFC, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19
    .byte 0x00, 0x68, 0x01, 0x21, 0x32, 0x1C, 0x0C, 0xF0, 0x8D, 0xFB, 0x88, 0xE0, 0x20, 0x2E, 0x00, 0x03
    .byte 0x38, 0x08, 0x00, 0x00, 0x84, 0x0C, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08
    .byte 0x23, 0x2A, 0x52, 0xD8, 0x90, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00
    .byte 0x90, 0x47, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08
    .byte 0x26, 0x48, 0x05, 0x08, 0x20, 0x48, 0x05, 0x08, 0x20, 0x48, 0x05, 0x08, 0x20, 0x48, 0x05, 0x08
    .byte 0x20, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08
    .byte 0x26, 0x48, 0x05, 0x08, 0x20, 0x48, 0x05, 0x08, 0x20, 0x48, 0x05, 0x08, 0x20, 0x48, 0x05, 0x08
    .byte 0x20, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08
    .byte 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08, 0x20, 0x48, 0x05, 0x08
    .byte 0x20, 0x48, 0x05, 0x08, 0x20, 0x48, 0x05, 0x08, 0x20, 0x48, 0x05, 0x08, 0x20, 0x48, 0x05, 0x08
    .byte 0x20, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08
    .byte 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08, 0x26, 0x48, 0x05, 0x08
    .byte 0x26, 0x48, 0x05, 0x08, 0x80, 0x20, 0x00, 0x02, 0x00, 0xE0, 0x00, 0x20, 0x98, 0x60, 0x01, 0x32
    .byte 0x62, 0x66, 0x23, 0x2A, 0x23, 0xDD, 0x30, 0x20, 0x60, 0x66, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66
    .byte 0x1F, 0x28, 0x1C, 0xDD, 0x00, 0x20, 0x20, 0x66, 0x19, 0xE0, 0x98, 0x8E, 0x01, 0x21, 0x08, 0x40
    .byte 0x00, 0x28, 0x14, 0xD0, 0x18, 0x68, 0x99, 0x6A, 0x40, 0x18, 0x18, 0x60, 0x58, 0x68, 0xD9, 0x6A
    .byte 0x40, 0x18, 0x58, 0x60, 0x99, 0x68, 0x18, 0x6B, 0x09, 0x18, 0x99, 0x60, 0x05, 0x4A, 0x80, 0x18
    .byte 0x18, 0x63, 0x00, 0x29, 0x03, 0xDC, 0xA1, 0x8E, 0x03, 0x48, 0x08, 0x40, 0xA0, 0x86
_0805487A:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0xC0, 0xFF, 0xFF, 0xFE, 0xFF, 0x00, 0x00
    thumb_func_start sub_8054888
sub_8054888:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    ldr r2, [r4, #0x64]
    adds r3, r4, #0x0
    ldr r0, [r4, #0x60]
    cmp r0, #0x37
    bls _08054898
    b _08054D42
_08054898:
    lsls r0, r0, #0x02
    ldr r1, _080548A4 @ =0x080548A8
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_080548A4: .4byte 0x080548A8
    .byte 0xBC, 0x4A, 0x05, 0x08, 0x88, 0x49, 0x05, 0x08, 0x52, 0x4A, 0x05, 0x08, 0x6C, 0x4A, 0x05, 0x08
    .byte 0x82, 0x4A, 0x05, 0x08, 0xBC, 0x4A, 0x05, 0x08, 0xD2, 0x4A, 0x05, 0x08, 0xA0, 0x4B, 0x05, 0x08
    .byte 0x44, 0x4C, 0x05, 0x08, 0xBC, 0x4A, 0x05, 0x08, 0x88, 0x49, 0x05, 0x08, 0x52, 0x4A, 0x05, 0x08
    .byte 0x6C, 0x4A, 0x05, 0x08, 0x82, 0x4A, 0x05, 0x08, 0xBC, 0x4A, 0x05, 0x08, 0xD2, 0x4A, 0x05, 0x08
    .byte 0xA0, 0x4B, 0x05, 0x08, 0x44, 0x4C, 0x05, 0x08, 0xBC, 0x4A, 0x05, 0x08, 0x88, 0x49, 0x05, 0x08
    .byte 0x52, 0x4A, 0x05, 0x08, 0x6C, 0x4A, 0x05, 0x08, 0x8C, 0x4A, 0x05, 0x08, 0xBC, 0x4A, 0x05, 0x08
    .byte 0xD2, 0x4A, 0x05, 0x08, 0xA0, 0x4B, 0x05, 0x08, 0x44, 0x4C, 0x05, 0x08, 0xBC, 0x4A, 0x05, 0x08
    .byte 0x88, 0x49, 0x05, 0x08, 0x52, 0x4A, 0x05, 0x08, 0x6C, 0x4A, 0x05, 0x08, 0x8C, 0x4A, 0x05, 0x08
    .byte 0xBC, 0x4A, 0x05, 0x08, 0xD2, 0x4A, 0x05, 0x08, 0xA0, 0x4B, 0x05, 0x08, 0x44, 0x4C, 0x05, 0x08
    .byte 0xBC, 0x4A, 0x05, 0x08, 0x88, 0x49, 0x05, 0x08, 0x52, 0x4A, 0x05, 0x08, 0x6C, 0x4A, 0x05, 0x08
    .byte 0x96, 0x4A, 0x05, 0x08, 0xBC, 0x4A, 0x05, 0x08, 0xD2, 0x4A, 0x05, 0x08, 0xA0, 0x4B, 0x05, 0x08
    .byte 0x44, 0x4C, 0x05, 0x08, 0xBC, 0x4A, 0x05, 0x08, 0x88, 0x49, 0x05, 0x08, 0x52, 0x4A, 0x05, 0x08
    .byte 0x6C, 0x4A, 0x05, 0x08, 0x9E, 0x4A, 0x05, 0x08, 0xBC, 0x4A, 0x05, 0x08, 0xD2, 0x4A, 0x05, 0x08
    .byte 0xA0, 0x4B, 0x05, 0x08, 0x44, 0x4C, 0x05, 0x08, 0x42, 0x4D, 0x05, 0x08, 0x0E, 0x4D, 0x05, 0x08
    .byte 0x23, 0x2A, 0x52, 0xD8, 0x90, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00
    .byte 0x9C, 0x49, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08
    .byte 0x32, 0x4A, 0x05, 0x08, 0x2C, 0x4A, 0x05, 0x08, 0x2C, 0x4A, 0x05, 0x08, 0x2C, 0x4A, 0x05, 0x08
    .byte 0x2C, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08
    .byte 0x32, 0x4A, 0x05, 0x08, 0x2C, 0x4A, 0x05, 0x08, 0x2C, 0x4A, 0x05, 0x08, 0x2C, 0x4A, 0x05, 0x08
    .byte 0x2C, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08
    .byte 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08, 0x2C, 0x4A, 0x05, 0x08
    .byte 0x2C, 0x4A, 0x05, 0x08, 0x2C, 0x4A, 0x05, 0x08, 0x2C, 0x4A, 0x05, 0x08, 0x2C, 0x4A, 0x05, 0x08
    .byte 0x2C, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08
    .byte 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08, 0x32, 0x4A, 0x05, 0x08
    .byte 0x32, 0x4A, 0x05, 0x08, 0x80, 0x20, 0x00, 0x02, 0x00, 0xE0, 0x00, 0x20, 0x98, 0x60, 0x01, 0x32
    .byte 0x62, 0x66, 0x23, 0x2A, 0x00, 0xDC, 0x80, 0xE1, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x00, 0x20
    .byte 0x60, 0x66, 0x80, 0x20, 0x00, 0x02, 0x20, 0x63, 0x77, 0xE1, 0x01, 0x32, 0x62, 0x66, 0xD0, 0x03
    .byte 0x98, 0x60, 0x3F, 0x2A, 0x00, 0xDC, 0x70, 0xE1, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x10, 0x20
    .byte 0x60, 0x66, 0x6A, 0xE1, 0x01, 0x3A, 0x62, 0x66, 0x00, 0x2A, 0x00, 0xDD, 0x65, 0xE1, 0x20, 0x6E
    .byte 0x01, 0x30, 0x20, 0x66, 0x30, 0x20, 0x60, 0x66, 0x5F, 0xE1, 0x18, 0x68, 0x99, 0x6A, 0x40, 0x18
    .byte 0x18, 0x60, 0x0C, 0xE0, 0x18, 0x68, 0x99, 0x6A, 0x40, 0x1A, 0x18, 0x60, 0x07, 0xE0, 0x58, 0x68
    .byte 0xD9, 0x6A, 0x40, 0x18, 0x02, 0xE0, 0x58, 0x68, 0xD9, 0x6A, 0x40, 0x1A, 0x58, 0x60, 0x01, 0x3A
    .byte 0x62, 0x66, 0x00, 0x2A, 0x00, 0xDD, 0x48, 0xE1, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x20, 0x20
    .byte 0x60, 0x66, 0x42, 0xE1, 0x01, 0x3A, 0x62, 0x66, 0x00, 0x2A, 0x00, 0xDD, 0x3D, 0xE1, 0x20, 0x6E
    .byte 0x01, 0x30, 0x20, 0x66, 0x00, 0x20, 0x60, 0x66, 0x37, 0xE1, 0x23, 0x2A, 0x51, 0xD8, 0x90, 0x00
    .byte 0x01, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0xE4, 0x4A, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08
    .byte 0x7A, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08, 0x74, 0x4B, 0x05, 0x08
    .byte 0x74, 0x4B, 0x05, 0x08, 0x74, 0x4B, 0x05, 0x08, 0x74, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08
    .byte 0x7A, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08, 0x74, 0x4B, 0x05, 0x08
    .byte 0x74, 0x4B, 0x05, 0x08, 0x74, 0x4B, 0x05, 0x08, 0x74, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08
    .byte 0x7A, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08
    .byte 0x7A, 0x4B, 0x05, 0x08, 0x74, 0x4B, 0x05, 0x08, 0x74, 0x4B, 0x05, 0x08, 0x74, 0x4B, 0x05, 0x08
    .byte 0x74, 0x4B, 0x05, 0x08, 0x74, 0x4B, 0x05, 0x08, 0x74, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08
    .byte 0x7A, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08
    .byte 0x7A, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08, 0x7A, 0x4B, 0x05, 0x08, 0x82, 0x20, 0x80, 0x03
    .byte 0x01, 0xE0, 0x80, 0x20, 0x80, 0x03, 0x98, 0x60, 0x01, 0x32, 0x62, 0x66, 0x23, 0x2A, 0x00, 0xDC
    .byte 0xDB, 0xE0, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x08, 0x20, 0x60, 0x66, 0x01, 0x48, 0x20, 0x63
    .byte 0xD3, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0x01, 0x3A, 0x62, 0x66, 0x90, 0x04, 0x98, 0x60
    .byte 0x00, 0x2A, 0x00, 0xDD, 0xC9, 0xE0, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x00, 0x20, 0x60, 0x66
    .byte 0x20, 0x63, 0x1D, 0x4A, 0x14, 0x1C, 0x24, 0x34, 0x1C, 0x49, 0x50, 0x18, 0x00, 0x68, 0x80, 0x6C
    .byte 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD0, 0xB7, 0xE0, 0x19, 0x49, 0x50, 0x18, 0x00, 0x78
    .byte 0x00, 0x28, 0x00, 0xD1, 0xB1, 0xE0, 0x20, 0x1C, 0x19, 0x1C, 0xF8, 0xF7, 0xA1, 0xF8, 0x00, 0x04
    .byte 0x02, 0x0C, 0x18, 0x2A, 0x00, 0xDC, 0xA8, 0xE0, 0x16, 0x1C, 0x00, 0x2E, 0x00, 0xD1, 0xA4, 0xE0
    .byte 0xC0, 0x20, 0x40, 0x00, 0x0B, 0xF0, 0x90, 0xF9, 0x0E, 0x4D, 0x0F, 0x4C, 0xC0, 0x22, 0x12, 0x01
    .byte 0xA4, 0x18, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x0B, 0xF0
    .byte 0x7B, 0xFA, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x01, 0x21
    .byte 0x32, 0x1C, 0x0C, 0xF0, 0x29, 0xF9, 0x88, 0xE0, 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00
    .byte 0x84, 0x0C, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08, 0x23, 0x2A, 0x52, 0xD8
    .byte 0x90, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00, 0x58, 0x4C, 0x05, 0x08
    .byte 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08
    .byte 0xE8, 0x4C, 0x05, 0x08, 0xE8, 0x4C, 0x05, 0x08, 0xE8, 0x4C, 0x05, 0x08, 0xE8, 0x4C, 0x05, 0x08
    .byte 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08
    .byte 0xE8, 0x4C, 0x05, 0x08, 0xE8, 0x4C, 0x05, 0x08, 0xE8, 0x4C, 0x05, 0x08, 0xE8, 0x4C, 0x05, 0x08
    .byte 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08
    .byte 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08, 0xE8, 0x4C, 0x05, 0x08, 0xE8, 0x4C, 0x05, 0x08
    .byte 0xE8, 0x4C, 0x05, 0x08, 0xE8, 0x4C, 0x05, 0x08, 0xE8, 0x4C, 0x05, 0x08, 0xE8, 0x4C, 0x05, 0x08
    .byte 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08
    .byte 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08, 0xEE, 0x4C, 0x05, 0x08
    .byte 0x80, 0x20, 0x00, 0x02, 0x00, 0xE0, 0x00, 0x20, 0x98, 0x60, 0x01, 0x32, 0x62, 0x66, 0x23, 0x2A
    .byte 0x23, 0xDD, 0x10, 0x20, 0x60, 0x66, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x35, 0x28, 0x1C, 0xDD
    .byte 0x00, 0x20, 0x20, 0x66, 0x19, 0xE0, 0x98, 0x8E, 0x01, 0x21, 0x08, 0x40, 0x00, 0x28, 0x14, 0xD0
    .byte 0x18, 0x68, 0x99, 0x6A, 0x40, 0x18, 0x18, 0x60, 0x58, 0x68, 0xD9, 0x6A, 0x40, 0x18, 0x58, 0x60
    .byte 0x99, 0x68, 0x18, 0x6B, 0x09, 0x18, 0x99, 0x60, 0x05, 0x4A, 0x80, 0x18, 0x18, 0x63, 0x00, 0x29
    .byte 0x03, 0xDC, 0xA1, 0x8E, 0x03, 0x48, 0x08, 0x40, 0xA0, 0x86
_08054D42:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0xC0, 0xFF, 0xFF, 0xFE, 0xFF, 0x00, 0x00
    thumb_func_start sub_8054D50
sub_8054D50:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    ldr r2, [r4, #0x64]
    adds r3, r4, #0x0
    ldr r0, [r4, #0x60]
    cmp r0, #0x25
    bls _08054D60
    b _080551C2
_08054D60:
    lsls r0, r0, #0x02
    ldr r1, _08054D6C @ =0x08054D70
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_08054D6C: .4byte 0x08054D70
    .byte 0x3C, 0x4F, 0x05, 0x08, 0x08, 0x4E, 0x05, 0x08, 0xD2, 0x4E, 0x05, 0x08, 0xEC, 0x4E, 0x05, 0x08
    .byte 0x02, 0x4F, 0x05, 0x08, 0x3C, 0x4F, 0x05, 0x08, 0x52, 0x4F, 0x05, 0x08, 0x20, 0x50, 0x05, 0x08
    .byte 0xC4, 0x50, 0x05, 0x08, 0x3C, 0x4F, 0x05, 0x08, 0x08, 0x4E, 0x05, 0x08, 0xD2, 0x4E, 0x05, 0x08
    .byte 0xEC, 0x4E, 0x05, 0x08, 0x14, 0x4F, 0x05, 0x08, 0x3C, 0x4F, 0x05, 0x08, 0x52, 0x4F, 0x05, 0x08
    .byte 0x20, 0x50, 0x05, 0x08, 0xC4, 0x50, 0x05, 0x08, 0x3C, 0x4F, 0x05, 0x08, 0x08, 0x4E, 0x05, 0x08
    .byte 0xD2, 0x4E, 0x05, 0x08, 0xEC, 0x4E, 0x05, 0x08, 0x0C, 0x4F, 0x05, 0x08, 0x3C, 0x4F, 0x05, 0x08
    .byte 0x52, 0x4F, 0x05, 0x08, 0x20, 0x50, 0x05, 0x08, 0xC4, 0x50, 0x05, 0x08, 0x3C, 0x4F, 0x05, 0x08
    .byte 0x08, 0x4E, 0x05, 0x08, 0xD2, 0x4E, 0x05, 0x08, 0xEC, 0x4E, 0x05, 0x08, 0x1E, 0x4F, 0x05, 0x08
    .byte 0x3C, 0x4F, 0x05, 0x08, 0x52, 0x4F, 0x05, 0x08, 0x20, 0x50, 0x05, 0x08, 0xC4, 0x50, 0x05, 0x08
    .byte 0xC2, 0x51, 0x05, 0x08, 0x8E, 0x51, 0x05, 0x08, 0x23, 0x2A, 0x52, 0xD8, 0x90, 0x00, 0x02, 0x49
    .byte 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00, 0x1C, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08
    .byte 0xB2, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08, 0xAC, 0x4E, 0x05, 0x08
    .byte 0xAC, 0x4E, 0x05, 0x08, 0xAC, 0x4E, 0x05, 0x08, 0xAC, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08
    .byte 0xB2, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08, 0xAC, 0x4E, 0x05, 0x08
    .byte 0xAC, 0x4E, 0x05, 0x08, 0xAC, 0x4E, 0x05, 0x08, 0xAC, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08
    .byte 0xB2, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08
    .byte 0xB2, 0x4E, 0x05, 0x08, 0xAC, 0x4E, 0x05, 0x08, 0xAC, 0x4E, 0x05, 0x08, 0xAC, 0x4E, 0x05, 0x08
    .byte 0xAC, 0x4E, 0x05, 0x08, 0xAC, 0x4E, 0x05, 0x08, 0xAC, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08
    .byte 0xB2, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08
    .byte 0xB2, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08, 0xB2, 0x4E, 0x05, 0x08, 0x80, 0x20, 0x00, 0x02
    .byte 0x00, 0xE0, 0x00, 0x20, 0x98, 0x60, 0x01, 0x32, 0x62, 0x66, 0x23, 0x2A, 0x00, 0xDC, 0x80, 0xE1
    .byte 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x00, 0x20, 0x60, 0x66, 0x80, 0x20, 0x00, 0x02, 0x20, 0x63
    .byte 0x77, 0xE1, 0x01, 0x32, 0x62, 0x66, 0xD0, 0x03, 0x98, 0x60, 0x3F, 0x2A, 0x00, 0xDC, 0x70, 0xE1
    .byte 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x10, 0x20, 0x60, 0x66, 0x6A, 0xE1, 0x01, 0x3A, 0x62, 0x66
    .byte 0x00, 0x2A, 0x00, 0xDD, 0x65, 0xE1, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x30, 0x20, 0x60, 0x66
    .byte 0x5F, 0xE1, 0x18, 0x68, 0x99, 0x6A, 0x40, 0x18, 0x18, 0x60, 0x0C, 0xE0, 0x58, 0x68, 0xD9, 0x6A
    .byte 0x40, 0x18, 0x07, 0xE0, 0x18, 0x68, 0x99, 0x6A, 0x40, 0x1A, 0x18, 0x60, 0x03, 0xE0, 0x58, 0x68
    .byte 0xD9, 0x6A, 0x40, 0x1A, 0x58, 0x60, 0x01, 0x3A, 0x62, 0x66, 0x00, 0x2A, 0x00, 0xDD, 0x48, 0xE1
    .byte 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x20, 0x20, 0x60, 0x66, 0x42, 0xE1, 0x01, 0x3A, 0x62, 0x66
    .byte 0x00, 0x2A, 0x00, 0xDD, 0x3D, 0xE1, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66, 0x00, 0x20, 0x60, 0x66
    .byte 0x37, 0xE1, 0x23, 0x2A, 0x51, 0xD8, 0x90, 0x00, 0x01, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46
    .byte 0x64, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08
    .byte 0xFA, 0x4F, 0x05, 0x08, 0xF4, 0x4F, 0x05, 0x08, 0xF4, 0x4F, 0x05, 0x08, 0xF4, 0x4F, 0x05, 0x08
    .byte 0xF4, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08
    .byte 0xFA, 0x4F, 0x05, 0x08, 0xF4, 0x4F, 0x05, 0x08, 0xF4, 0x4F, 0x05, 0x08, 0xF4, 0x4F, 0x05, 0x08
    .byte 0xF4, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08
    .byte 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08, 0xF4, 0x4F, 0x05, 0x08
    .byte 0xF4, 0x4F, 0x05, 0x08, 0xF4, 0x4F, 0x05, 0x08, 0xF4, 0x4F, 0x05, 0x08, 0xF4, 0x4F, 0x05, 0x08
    .byte 0xF4, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08
    .byte 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08, 0xFA, 0x4F, 0x05, 0x08
    .byte 0xFA, 0x4F, 0x05, 0x08, 0x82, 0x20, 0x80, 0x03, 0x01, 0xE0, 0x80, 0x20, 0x80, 0x03, 0x98, 0x60
    .byte 0x01, 0x32, 0x62, 0x66, 0x23, 0x2A, 0x00, 0xDC, 0xDB, 0xE0, 0x20, 0x6E, 0x01, 0x30, 0x20, 0x66
    .byte 0x08, 0x20, 0x60, 0x66, 0x01, 0x48, 0x20, 0x63, 0xD3, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF
    .byte 0x01, 0x3A, 0x62, 0x66, 0x90, 0x04, 0x98, 0x60, 0x00, 0x2A, 0x00, 0xDD, 0xC9, 0xE0, 0x20, 0x6E
    .byte 0x01, 0x30, 0x20, 0x66, 0x00, 0x20, 0x60, 0x66, 0x20, 0x63, 0x1D, 0x4A, 0x14, 0x1C, 0x24, 0x34
    .byte 0x1C, 0x49, 0x50, 0x18, 0x00, 0x68, 0x80, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD0
    .byte 0xB7, 0xE0, 0x19, 0x49, 0x50, 0x18, 0x00, 0x78, 0x00, 0x28, 0x00, 0xD1, 0xB1, 0xE0, 0x20, 0x1C
    .byte 0x19, 0x1C, 0xF7, 0xF7, 0x61, 0xFE, 0x00, 0x04, 0x02, 0x0C, 0x18, 0x2A, 0x00, 0xDC, 0xA8, 0xE0
    .byte 0x16, 0x1C, 0x00, 0x2E, 0x00, 0xD1, 0xA4, 0xE0, 0xC0, 0x20, 0x40, 0x00, 0x0A, 0xF0, 0x50, 0xFF
    .byte 0x0E, 0x4D, 0x0F, 0x4C, 0xC0, 0x22, 0x12, 0x01, 0xA4, 0x18, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18
    .byte 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x0B, 0xF0, 0x3B, 0xF8, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18
    .byte 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x01, 0x21, 0x32, 0x1C, 0x0B, 0xF0, 0xE9, 0xFE, 0x88, 0xE0
    .byte 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x84, 0x0C, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08
    .byte 0x98, 0x24, 0x10, 0x08, 0x23, 0x2A, 0x52, 0xD8, 0x90, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68
    .byte 0x87, 0x46, 0x00, 0x00, 0xD8, 0x50, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08
    .byte 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08, 0x68, 0x51, 0x05, 0x08, 0x68, 0x51, 0x05, 0x08
    .byte 0x68, 0x51, 0x05, 0x08, 0x68, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08
    .byte 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08, 0x68, 0x51, 0x05, 0x08, 0x68, 0x51, 0x05, 0x08
    .byte 0x68, 0x51, 0x05, 0x08, 0x68, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08
    .byte 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08
    .byte 0x68, 0x51, 0x05, 0x08, 0x68, 0x51, 0x05, 0x08, 0x68, 0x51, 0x05, 0x08, 0x68, 0x51, 0x05, 0x08
    .byte 0x68, 0x51, 0x05, 0x08, 0x68, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08
    .byte 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08
    .byte 0x6E, 0x51, 0x05, 0x08, 0x6E, 0x51, 0x05, 0x08, 0x80, 0x20, 0x00, 0x02, 0x00, 0xE0, 0x00, 0x20
    .byte 0x98, 0x60, 0x01, 0x32, 0x62, 0x66, 0x23, 0x2A, 0x23, 0xDD, 0x10, 0x20, 0x60, 0x66, 0x20, 0x6E
    .byte 0x01, 0x30, 0x20, 0x66, 0x23, 0x28, 0x1C, 0xDD, 0x00, 0x20, 0x20, 0x66, 0x19, 0xE0, 0x98, 0x8E
    .byte 0x01, 0x21, 0x08, 0x40, 0x00, 0x28, 0x14, 0xD0, 0x18, 0x68, 0x99, 0x6A, 0x40, 0x18, 0x18, 0x60
    .byte 0x58, 0x68, 0xD9, 0x6A, 0x40, 0x18, 0x58, 0x60, 0x99, 0x68, 0x18, 0x6B, 0x09, 0x18, 0x99, 0x60
    .byte 0x05, 0x4A, 0x80, 0x18, 0x18, 0x63, 0x00, 0x29, 0x03, 0xDC, 0xA1, 0x8E, 0x03, 0x48, 0x08, 0x40
    .byte 0xA0, 0x86
_080551C2:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0xC0, 0xFF, 0xFF, 0xFE, 0xFF, 0x00, 0x00
    thumb_func_start sub_80551D0
sub_80551D0:
    push {r4, r5, r6, lr}
    adds r3, r0, #0x0
    ldr r2, [r3, #0x64]
    adds r4, r3, #0x0
    ldr r0, [r3, #0x60]
    cmp r0, #0x25
    bls _080551E0
    b _0805562E
_080551E0:
    lsls r0, r0, #0x02
    ldr r1, _080551EC @ =0x080551F0
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_080551EC: .4byte 0x080551F0
    .byte 0xA8, 0x53, 0x05, 0x08, 0x88, 0x52, 0x05, 0x08, 0x52, 0x53, 0x05, 0x08, 0x6C, 0x53, 0x05, 0x08
    .byte 0x82, 0x53, 0x05, 0x08, 0xA8, 0x53, 0x05, 0x08, 0xBE, 0x53, 0x05, 0x08, 0x8C, 0x54, 0x05, 0x08
    .byte 0x30, 0x55, 0x05, 0x08, 0xA8, 0x53, 0x05, 0x08, 0x88, 0x52, 0x05, 0x08, 0x52, 0x53, 0x05, 0x08
    .byte 0x6C, 0x53, 0x05, 0x08, 0x82, 0x53, 0x05, 0x08, 0xA8, 0x53, 0x05, 0x08, 0xBE, 0x53, 0x05, 0x08
    .byte 0x8C, 0x54, 0x05, 0x08, 0x30, 0x55, 0x05, 0x08, 0xA8, 0x53, 0x05, 0x08, 0x88, 0x52, 0x05, 0x08
    .byte 0x52, 0x53, 0x05, 0x08, 0x6C, 0x53, 0x05, 0x08, 0x8A, 0x53, 0x05, 0x08, 0xA8, 0x53, 0x05, 0x08
    .byte 0xBE, 0x53, 0x05, 0x08, 0x8C, 0x54, 0x05, 0x08, 0x30, 0x55, 0x05, 0x08, 0xA8, 0x53, 0x05, 0x08
    .byte 0x88, 0x52, 0x05, 0x08, 0x52, 0x53, 0x05, 0x08, 0x6C, 0x53, 0x05, 0x08, 0x8A, 0x53, 0x05, 0x08
    .byte 0xA8, 0x53, 0x05, 0x08, 0xBE, 0x53, 0x05, 0x08, 0x8C, 0x54, 0x05, 0x08, 0x30, 0x55, 0x05, 0x08
    .byte 0x2E, 0x56, 0x05, 0x08, 0xFA, 0x55, 0x05, 0x08, 0x23, 0x2A, 0x52, 0xD8, 0x90, 0x00, 0x02, 0x49
    .byte 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00, 0x9C, 0x52, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08
    .byte 0x32, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08, 0x2C, 0x53, 0x05, 0x08
    .byte 0x2C, 0x53, 0x05, 0x08, 0x2C, 0x53, 0x05, 0x08, 0x2C, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08
    .byte 0x32, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08, 0x2C, 0x53, 0x05, 0x08
    .byte 0x2C, 0x53, 0x05, 0x08, 0x2C, 0x53, 0x05, 0x08, 0x2C, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08
    .byte 0x32, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08
    .byte 0x32, 0x53, 0x05, 0x08, 0x2C, 0x53, 0x05, 0x08, 0x2C, 0x53, 0x05, 0x08, 0x2C, 0x53, 0x05, 0x08
    .byte 0x2C, 0x53, 0x05, 0x08, 0x2C, 0x53, 0x05, 0x08, 0x2C, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08
    .byte 0x32, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08
    .byte 0x32, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08, 0x32, 0x53, 0x05, 0x08, 0x80, 0x20, 0x00, 0x02
    .byte 0x00, 0xE0, 0x00, 0x20, 0xA0, 0x60, 0x01, 0x32, 0x5A, 0x66, 0x23, 0x2A, 0x00, 0xDC, 0x76, 0xE1
    .byte 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x00, 0x20, 0x58, 0x66, 0x80, 0x20, 0x00, 0x02, 0x18, 0x63
    .byte 0x6D, 0xE1, 0x01, 0x32, 0x5A, 0x66, 0xD0, 0x03, 0xA0, 0x60, 0x3F, 0x2A, 0x00, 0xDC, 0x66, 0xE1
    .byte 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x10, 0x20, 0x58, 0x66, 0x60, 0xE1, 0x01, 0x3A, 0x5A, 0x66
    .byte 0x00, 0x2A, 0x00, 0xDD, 0x5B, 0xE1, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x30, 0x20, 0x58, 0x66
    .byte 0x55, 0xE1, 0x20, 0x68, 0xA1, 0x6A, 0x40, 0x18, 0x02, 0xE0, 0x20, 0x68, 0xA1, 0x6A, 0x40, 0x1A
    .byte 0x20, 0x60, 0x01, 0x3A, 0x5A, 0x66, 0x00, 0x2A, 0x00, 0xDD, 0x48, 0xE1, 0x18, 0x6E, 0x01, 0x30
    .byte 0x18, 0x66, 0x18, 0x20, 0x58, 0x66, 0x42, 0xE1, 0x01, 0x3A, 0x5A, 0x66, 0x00, 0x2A, 0x00, 0xDD
    .byte 0x3D, 0xE1, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x00, 0x20, 0x58, 0x66, 0x37, 0xE1, 0x23, 0x2A
    .byte 0x51, 0xD8, 0x90, 0x00, 0x01, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0xD0, 0x53, 0x05, 0x08
    .byte 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08
    .byte 0x60, 0x54, 0x05, 0x08, 0x60, 0x54, 0x05, 0x08, 0x60, 0x54, 0x05, 0x08, 0x60, 0x54, 0x05, 0x08
    .byte 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08
    .byte 0x60, 0x54, 0x05, 0x08, 0x60, 0x54, 0x05, 0x08, 0x60, 0x54, 0x05, 0x08, 0x60, 0x54, 0x05, 0x08
    .byte 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08
    .byte 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08, 0x60, 0x54, 0x05, 0x08, 0x60, 0x54, 0x05, 0x08
    .byte 0x60, 0x54, 0x05, 0x08, 0x60, 0x54, 0x05, 0x08, 0x60, 0x54, 0x05, 0x08, 0x60, 0x54, 0x05, 0x08
    .byte 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08
    .byte 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08, 0x66, 0x54, 0x05, 0x08
    .byte 0x82, 0x20, 0x80, 0x03, 0x01, 0xE0, 0x80, 0x20, 0x80, 0x03, 0xA0, 0x60, 0x01, 0x32, 0x5A, 0x66
    .byte 0x23, 0x2A, 0x00, 0xDC, 0xDB, 0xE0, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x08, 0x20, 0x58, 0x66
    .byte 0x01, 0x48, 0x18, 0x63, 0xD3, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0x01, 0x3A, 0x5A, 0x66
    .byte 0x90, 0x04, 0xA0, 0x60, 0x00, 0x2A, 0x00, 0xDD, 0xC9, 0xE0, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66
    .byte 0x00, 0x20, 0x58, 0x66, 0x18, 0x63, 0x1D, 0x4A, 0x13, 0x1C, 0x24, 0x33, 0x1C, 0x49, 0x50, 0x18
    .byte 0x00, 0x68, 0x80, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD0, 0xB7, 0xE0, 0x19, 0x49
    .byte 0x50, 0x18, 0x00, 0x78, 0x00, 0x28, 0x00, 0xD1, 0xB1, 0xE0, 0x18, 0x1C, 0x21, 0x1C, 0xF7, 0xF7
    .byte 0x2B, 0xFC, 0x00, 0x04, 0x02, 0x0C, 0x18, 0x2A, 0x00, 0xDC, 0xA8, 0xE0, 0x16, 0x1C, 0x00, 0x2E
    .byte 0x00, 0xD1, 0xA4, 0xE0, 0xC0, 0x20, 0x40, 0x00, 0x0A, 0xF0, 0x1A, 0xFD, 0x0E, 0x4D, 0x0F, 0x4C
    .byte 0xC0, 0x22, 0x12, 0x01, 0xA4, 0x18, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19
    .byte 0x00, 0x68, 0x0A, 0xF0, 0x05, 0xFE, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19
    .byte 0x00, 0x68, 0x01, 0x21, 0x32, 0x1C, 0x0B, 0xF0, 0xB3, 0xFC, 0x88, 0xE0, 0x20, 0x2E, 0x00, 0x03
    .byte 0x38, 0x08, 0x00, 0x00, 0x84, 0x0C, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08
    .byte 0x23, 0x2A, 0x52, 0xD8, 0x90, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00
    .byte 0x44, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08
    .byte 0xDA, 0x55, 0x05, 0x08, 0xD4, 0x55, 0x05, 0x08, 0xD4, 0x55, 0x05, 0x08, 0xD4, 0x55, 0x05, 0x08
    .byte 0xD4, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08
    .byte 0xDA, 0x55, 0x05, 0x08, 0xD4, 0x55, 0x05, 0x08, 0xD4, 0x55, 0x05, 0x08, 0xD4, 0x55, 0x05, 0x08
    .byte 0xD4, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08
    .byte 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08, 0xD4, 0x55, 0x05, 0x08
    .byte 0xD4, 0x55, 0x05, 0x08, 0xD4, 0x55, 0x05, 0x08, 0xD4, 0x55, 0x05, 0x08, 0xD4, 0x55, 0x05, 0x08
    .byte 0xD4, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08
    .byte 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08, 0xDA, 0x55, 0x05, 0x08
    .byte 0xDA, 0x55, 0x05, 0x08, 0x80, 0x20, 0x00, 0x02, 0x00, 0xE0, 0x00, 0x20, 0xA0, 0x60, 0x01, 0x32
    .byte 0x5A, 0x66, 0x23, 0x2A, 0x23, 0xDD, 0x10, 0x20, 0x58, 0x66, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66
    .byte 0x23, 0x28, 0x1C, 0xDD, 0x00, 0x20, 0x18, 0x66, 0x19, 0xE0, 0xA0, 0x8E, 0x01, 0x21, 0x08, 0x40
    .byte 0x00, 0x28, 0x14, 0xD0, 0x20, 0x68, 0xA1, 0x6A, 0x40, 0x18, 0x20, 0x60, 0x60, 0x68, 0xE1, 0x6A
    .byte 0x40, 0x18, 0x60, 0x60, 0xA1, 0x68, 0x20, 0x6B, 0x09, 0x18, 0xA1, 0x60, 0x05, 0x4A, 0x80, 0x18
    .byte 0x20, 0x63, 0x00, 0x29, 0x03, 0xDC, 0x99, 0x8E, 0x03, 0x48, 0x08, 0x40, 0x98, 0x86
_0805562E:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0xC0, 0xFF, 0xFF, 0xFE, 0xFF, 0x00, 0x00
    thumb_func_start sub_805563C
sub_805563C:
    push {r4, r5, r6, lr}
    adds r3, r0, #0x0
    ldr r2, [r3, #0x64]
    adds r4, r3, #0x0
    ldr r0, [r3, #0x60]
    cmp r0, #0x37
    bls _0805564C
    b _08055ADA
_0805564C:
    lsls r0, r0, #0x02
    ldr r1, _08055658 @ =0x0805565C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_08055658: .4byte 0x0805565C
    .byte 0x52, 0x58, 0x05, 0x08, 0x3C, 0x57, 0x05, 0x08, 0x06, 0x58, 0x05, 0x08, 0x16, 0x58, 0x05, 0x08
    .byte 0x2C, 0x58, 0x05, 0x08, 0x52, 0x58, 0x05, 0x08, 0x68, 0x58, 0x05, 0x08, 0x38, 0x59, 0x05, 0x08
    .byte 0xDC, 0x59, 0x05, 0x08, 0x52, 0x58, 0x05, 0x08, 0x3C, 0x57, 0x05, 0x08, 0x06, 0x58, 0x05, 0x08
    .byte 0x16, 0x58, 0x05, 0x08, 0x2C, 0x58, 0x05, 0x08, 0x52, 0x58, 0x05, 0x08, 0x68, 0x58, 0x05, 0x08
    .byte 0x38, 0x59, 0x05, 0x08, 0xDC, 0x59, 0x05, 0x08, 0x52, 0x58, 0x05, 0x08, 0x3C, 0x57, 0x05, 0x08
    .byte 0x06, 0x58, 0x05, 0x08, 0x16, 0x58, 0x05, 0x08, 0x2C, 0x58, 0x05, 0x08, 0x52, 0x58, 0x05, 0x08
    .byte 0x68, 0x58, 0x05, 0x08, 0x38, 0x59, 0x05, 0x08, 0xDC, 0x59, 0x05, 0x08, 0x52, 0x58, 0x05, 0x08
    .byte 0x3C, 0x57, 0x05, 0x08, 0x06, 0x58, 0x05, 0x08, 0x16, 0x58, 0x05, 0x08, 0x34, 0x58, 0x05, 0x08
    .byte 0x52, 0x58, 0x05, 0x08, 0x68, 0x58, 0x05, 0x08, 0x38, 0x59, 0x05, 0x08, 0xDC, 0x59, 0x05, 0x08
    .byte 0x52, 0x58, 0x05, 0x08, 0x3C, 0x57, 0x05, 0x08, 0x06, 0x58, 0x05, 0x08, 0x16, 0x58, 0x05, 0x08
    .byte 0x34, 0x58, 0x05, 0x08, 0x52, 0x58, 0x05, 0x08, 0x68, 0x58, 0x05, 0x08, 0x38, 0x59, 0x05, 0x08
    .byte 0xDC, 0x59, 0x05, 0x08, 0x52, 0x58, 0x05, 0x08, 0x3C, 0x57, 0x05, 0x08, 0x06, 0x58, 0x05, 0x08
    .byte 0x16, 0x58, 0x05, 0x08, 0x34, 0x58, 0x05, 0x08, 0x52, 0x58, 0x05, 0x08, 0x68, 0x58, 0x05, 0x08
    .byte 0x38, 0x59, 0x05, 0x08, 0xDC, 0x59, 0x05, 0x08, 0xDA, 0x5A, 0x05, 0x08, 0xA6, 0x5A, 0x05, 0x08
    .byte 0x23, 0x2A, 0x52, 0xD8, 0x90, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00
    .byte 0x50, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08
    .byte 0xE6, 0x57, 0x05, 0x08, 0xE0, 0x57, 0x05, 0x08, 0xE0, 0x57, 0x05, 0x08, 0xE0, 0x57, 0x05, 0x08
    .byte 0xE0, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08
    .byte 0xE6, 0x57, 0x05, 0x08, 0xE0, 0x57, 0x05, 0x08, 0xE0, 0x57, 0x05, 0x08, 0xE0, 0x57, 0x05, 0x08
    .byte 0xE0, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08
    .byte 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08, 0xE0, 0x57, 0x05, 0x08
    .byte 0xE0, 0x57, 0x05, 0x08, 0xE0, 0x57, 0x05, 0x08, 0xE0, 0x57, 0x05, 0x08, 0xE0, 0x57, 0x05, 0x08
    .byte 0xE0, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08
    .byte 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08, 0xE6, 0x57, 0x05, 0x08
    .byte 0xE6, 0x57, 0x05, 0x08, 0x80, 0x20, 0x00, 0x02, 0x00, 0xE0, 0x00, 0x20, 0xA0, 0x60, 0x01, 0x32
    .byte 0x5A, 0x66, 0x23, 0x2A, 0x00, 0xDC, 0x72, 0xE1, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x00, 0x20
    .byte 0x58, 0x66, 0x80, 0x20, 0x00, 0x02, 0x18, 0x63, 0x69, 0xE1, 0x01, 0x32, 0x5A, 0x66, 0xD0, 0x03
    .byte 0xA0, 0x60, 0x3F, 0x2A, 0x00, 0xDC, 0x62, 0xE1, 0x17, 0xE0, 0x01, 0x3A, 0x5A, 0x66, 0x00, 0x2A
    .byte 0x00, 0xDD, 0x5C, 0xE1, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x30, 0x20, 0x58, 0x66, 0x56, 0xE1
    .byte 0x20, 0x68, 0xA1, 0x6A, 0x40, 0x18, 0x02, 0xE0, 0x20, 0x68, 0xA1, 0x6A, 0x40, 0x1A, 0x20, 0x60
    .byte 0x01, 0x3A, 0x5A, 0x66, 0x00, 0x2A, 0x00, 0xDD, 0x49, 0xE1, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66
    .byte 0x10, 0x20, 0x58, 0x66, 0x43, 0xE1, 0x01, 0x3A, 0x5A, 0x66, 0x00, 0x2A, 0x00, 0xDD, 0x3E, 0xE1
    .byte 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x00, 0x20, 0x58, 0x66, 0x38, 0xE1, 0x23, 0x2A, 0x52, 0xD8
    .byte 0x90, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00, 0x7C, 0x58, 0x05, 0x08
    .byte 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08
    .byte 0x0C, 0x59, 0x05, 0x08, 0x0C, 0x59, 0x05, 0x08, 0x0C, 0x59, 0x05, 0x08, 0x0C, 0x59, 0x05, 0x08
    .byte 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08
    .byte 0x0C, 0x59, 0x05, 0x08, 0x0C, 0x59, 0x05, 0x08, 0x0C, 0x59, 0x05, 0x08, 0x0C, 0x59, 0x05, 0x08
    .byte 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08
    .byte 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08, 0x0C, 0x59, 0x05, 0x08, 0x0C, 0x59, 0x05, 0x08
    .byte 0x0C, 0x59, 0x05, 0x08, 0x0C, 0x59, 0x05, 0x08, 0x0C, 0x59, 0x05, 0x08, 0x0C, 0x59, 0x05, 0x08
    .byte 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08
    .byte 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08, 0x12, 0x59, 0x05, 0x08
    .byte 0x82, 0x20, 0x80, 0x03, 0x01, 0xE0, 0x80, 0x20, 0x80, 0x03, 0xA0, 0x60, 0x01, 0x32, 0x5A, 0x66
    .byte 0x23, 0x2A, 0x00, 0xDC, 0xDB, 0xE0, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66, 0x08, 0x20, 0x58, 0x66
    .byte 0x01, 0x48, 0x18, 0x63, 0xD3, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0x01, 0x3A, 0x5A, 0x66
    .byte 0x90, 0x04, 0xA0, 0x60, 0x00, 0x2A, 0x00, 0xDD, 0xC9, 0xE0, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66
    .byte 0x00, 0x20, 0x58, 0x66, 0x18, 0x63, 0x1D, 0x4A, 0x13, 0x1C, 0x24, 0x33, 0x1C, 0x49, 0x50, 0x18
    .byte 0x00, 0x68, 0x80, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD0, 0xB7, 0xE0, 0x19, 0x49
    .byte 0x50, 0x18, 0x00, 0x78, 0x00, 0x28, 0x00, 0xD1, 0xB1, 0xE0, 0x18, 0x1C, 0x21, 0x1C, 0xF7, 0xF7
    .byte 0xD5, 0xF9, 0x00, 0x04, 0x02, 0x0C, 0x18, 0x2A, 0x00, 0xDC, 0xA8, 0xE0, 0x16, 0x1C, 0x00, 0x2E
    .byte 0x00, 0xD1, 0xA4, 0xE0, 0xC0, 0x20, 0x40, 0x00, 0x0A, 0xF0, 0xC4, 0xFA, 0x0E, 0x4D, 0x0F, 0x4C
    .byte 0xC0, 0x22, 0x12, 0x01, 0xA4, 0x18, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19
    .byte 0x00, 0x68, 0x0A, 0xF0, 0xAF, 0xFB, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19
    .byte 0x00, 0x68, 0x01, 0x21, 0x32, 0x1C, 0x0B, 0xF0, 0x5D, 0xFA, 0x88, 0xE0, 0x20, 0x2E, 0x00, 0x03
    .byte 0x38, 0x08, 0x00, 0x00, 0x84, 0x0C, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08
    .byte 0x23, 0x2A, 0x52, 0xD8, 0x90, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00
    .byte 0xF0, 0x59, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08
    .byte 0x86, 0x5A, 0x05, 0x08, 0x80, 0x5A, 0x05, 0x08, 0x80, 0x5A, 0x05, 0x08, 0x80, 0x5A, 0x05, 0x08
    .byte 0x80, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08
    .byte 0x86, 0x5A, 0x05, 0x08, 0x80, 0x5A, 0x05, 0x08, 0x80, 0x5A, 0x05, 0x08, 0x80, 0x5A, 0x05, 0x08
    .byte 0x80, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08
    .byte 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08, 0x80, 0x5A, 0x05, 0x08
    .byte 0x80, 0x5A, 0x05, 0x08, 0x80, 0x5A, 0x05, 0x08, 0x80, 0x5A, 0x05, 0x08, 0x80, 0x5A, 0x05, 0x08
    .byte 0x80, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08
    .byte 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08, 0x86, 0x5A, 0x05, 0x08
    .byte 0x86, 0x5A, 0x05, 0x08, 0x80, 0x20, 0x00, 0x02, 0x00, 0xE0, 0x00, 0x20, 0xA0, 0x60, 0x01, 0x32
    .byte 0x5A, 0x66, 0x23, 0x2A, 0x23, 0xDD, 0x10, 0x20, 0x58, 0x66, 0x18, 0x6E, 0x01, 0x30, 0x18, 0x66
    .byte 0x35, 0x28, 0x1C, 0xDD, 0x00, 0x20, 0x18, 0x66, 0x19, 0xE0, 0xA0, 0x8E, 0x01, 0x21, 0x08, 0x40
    .byte 0x00, 0x28, 0x14, 0xD0, 0x20, 0x68, 0xA1, 0x6A, 0x40, 0x18, 0x20, 0x60, 0x60, 0x68, 0xE1, 0x6A
    .byte 0x40, 0x18, 0x60, 0x60, 0xA1, 0x68, 0x20, 0x6B, 0x09, 0x18, 0xA1, 0x60, 0x05, 0x4A, 0x80, 0x18
    .byte 0x20, 0x63, 0x00, 0x29, 0x03, 0xDC, 0x99, 0x8E, 0x03, 0x48, 0x08, 0x40, 0x98, 0x86
_08055ADA:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0xC0, 0xFF, 0xFF, 0xFE, 0xFF, 0x00, 0x00
    thumb_func_start sub_8055AE8
sub_8055AE8:
    push {r4, lr}
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08055B48
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08055B48
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r4, #0x00
    ldsh r0, [r0, r4]
    cmp r0, #0x00
    beq _08055B48
    movs r0, #0x07
    str r0, [r3, #0x60]
    adds r0, r2, #0x0
    adds r0, #0x4E
    movs r4, #0x00
    ldsh r1, [r0, r4]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    str r0, [r3, #0x28]
    adds r0, r2, #0x0
    adds r0, #0x50
    movs r2, #0x00
    ldsh r1, [r0, r2]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    str r0, [r3, #0x2C]
    movs r0, #0x90
    lsls r0, r0, #0x0A
    str r0, [r3, #0x30]
    ldrh r1, [r3, #0x34]
    ldr r0, _08055B50 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
_08055B48:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08055B50: .4byte 0x0000FFFD
    thumb_func_start sub_8055B54
sub_8055B54:
    push {r4, lr}
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08055BB4
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08055BB4
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r4, #0x00
    ldsh r0, [r0, r4]
    cmp r0, #0x00
    beq _08055BB4
    movs r0, #0x21
    str r0, [r3, #0x60]
    adds r0, r2, #0x0
    adds r0, #0x4E
    movs r4, #0x00
    ldsh r1, [r0, r4]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    str r0, [r3, #0x28]
    adds r0, r2, #0x0
    adds r0, #0x50
    movs r2, #0x00
    ldsh r1, [r0, r2]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    str r0, [r3, #0x2C]
    movs r0, #0x90
    lsls r0, r0, #0x0A
    str r0, [r3, #0x30]
    ldrh r1, [r3, #0x34]
    ldr r0, _08055BBC @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
_08055BB4:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08055BBC: .4byte 0x0000FFFD
    thumb_func_start sub_8055BC0
sub_8055BC0:
    push {r4, lr}
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08055C20
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08055C20
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r4, #0x00
    ldsh r0, [r0, r4]
    cmp r0, #0x00
    beq _08055C20
    movs r0, #0x37
    str r0, [r3, #0x60]
    adds r0, r2, #0x0
    adds r0, #0x4E
    movs r4, #0x00
    ldsh r1, [r0, r4]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    str r0, [r3, #0x28]
    adds r0, r2, #0x0
    adds r0, #0x50
    movs r2, #0x00
    ldsh r1, [r0, r2]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    str r0, [r3, #0x2C]
    movs r0, #0x90
    lsls r0, r0, #0x0A
    str r0, [r3, #0x30]
    ldrh r1, [r3, #0x34]
    ldr r0, _08055C28 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
_08055C20:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08055C28: .4byte 0x0000FFFD
    thumb_func_start sub_8055C2C
sub_8055C2C:
    push {r4, lr}
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08055C8C
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08055C8C
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r4, #0x00
    ldsh r0, [r0, r4]
    cmp r0, #0x00
    beq _08055C8C
    movs r0, #0x25
    str r0, [r3, #0x60]
    adds r0, r2, #0x0
    adds r0, #0x4E
    movs r4, #0x00
    ldsh r1, [r0, r4]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    str r0, [r3, #0x28]
    adds r0, r2, #0x0
    adds r0, #0x50
    movs r2, #0x00
    ldsh r1, [r0, r2]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    str r0, [r3, #0x2C]
    movs r0, #0x90
    lsls r0, r0, #0x0A
    str r0, [r3, #0x30]
    ldrh r1, [r3, #0x34]
    ldr r0, _08055C94 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
_08055C8C:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08055C94: .4byte 0x0000FFFD
    thumb_func_start sub_8055C98
sub_8055C98:
    push {r4, lr}
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08055CF8
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08055CF8
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r4, #0x00
    ldsh r0, [r0, r4]
    cmp r0, #0x00
    beq _08055CF8
    movs r0, #0x25
    str r0, [r3, #0x60]
    adds r0, r2, #0x0
    adds r0, #0x4E
    movs r4, #0x00
    ldsh r1, [r0, r4]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    str r0, [r3, #0x28]
    adds r0, r2, #0x0
    adds r0, #0x50
    movs r2, #0x00
    ldsh r1, [r0, r2]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    str r0, [r3, #0x2C]
    movs r0, #0x90
    lsls r0, r0, #0x0A
    str r0, [r3, #0x30]
    ldrh r1, [r3, #0x34]
    ldr r0, _08055D00 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
_08055CF8:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08055D00: .4byte 0x0000FFFD
    thumb_func_start sub_8055D04
sub_8055D04:
    push {r4, lr}
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08055D64
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08055D64
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r4, #0x00
    ldsh r0, [r0, r4]
    cmp r0, #0x00
    beq _08055D64
    movs r0, #0x37
    str r0, [r3, #0x60]
    adds r0, r2, #0x0
    adds r0, #0x4E
    movs r4, #0x00
    ldsh r1, [r0, r4]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    str r0, [r3, #0x28]
    adds r0, r2, #0x0
    adds r0, #0x50
    movs r2, #0x00
    ldsh r1, [r0, r2]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x07
    str r0, [r3, #0x2C]
    movs r0, #0x90
    lsls r0, r0, #0x0A
    str r0, [r3, #0x30]
    ldrh r1, [r3, #0x34]
    ldr r0, _08055D6C @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
_08055D64:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08055D6C: .4byte 0x0000FFFD
    thumb_func_start sub_8055D70
sub_8055D70:
    adds r3, r0, #0x0
    ldr r0, _08055DAC @ =0x00001004
    strh r0, [r3, #0x10]
    ldr r0, _08055DB0 @ =0x08055E5D
    str r0, [r3, #0x5C]
    ldr r0, _08055DB4 @ =0x08055F75
    str r0, [r3, #0x18]
    ldr r0, _08055DB8 @ =0x080EFF08
    str r0, [r3, #0x4C]
    ldrh r2, [r3, #0x34]
    ldr r0, _08055DBC @ =0x0000FFFD
    ands r0, r2
    ldr r2, _08055DC0 @ =0x0000FFFE
    ands r0, r2
    strh r0, [r3, #0x34]
    movs r0, #0x10
    strb r0, [r3, #0x0E]
    strb r0, [r3, #0x0D]
    strb r0, [r3, #0x0C]
    movs r0, #0x01
    str r0, [r3, #0x60]
    ldr r2, _08055DC4 @ =0xFF7DFFFF
    adds r0, r1, r2
    cmp r0, #0x0B
    bhi _08055E52
    lsls r0, r0, #0x02
    ldr r1, _08055DC8 @ =0x08055DCC
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08055DAC: .4byte 0x00001004
_08055DB0: .4byte sub_8055E5C
_08055DB4: .4byte sub_8055F74
_08055DB8: .4byte 0x080EFF08
_08055DBC: .4byte 0x0000FFFD
_08055DC0: .4byte 0x0000FFFE
_08055DC4: .4byte 0xFF7DFFFF
_08055DC8: .4byte 0x08055DCC
    .byte 0xFC, 0x5D, 0x05, 0x08, 0x02, 0x5E, 0x05, 0x08, 0x06, 0x5E, 0x05, 0x08, 0x0E, 0x5E, 0x05, 0x08
    .byte 0x16, 0x5E, 0x05, 0x08, 0x1E, 0x5E, 0x05, 0x08, 0x22, 0x5E, 0x05, 0x08, 0x2A, 0x5E, 0x05, 0x08
    .byte 0x32, 0x5E, 0x05, 0x08, 0x3A, 0x5E, 0x05, 0x08, 0x42, 0x5E, 0x05, 0x08, 0x4A, 0x5E, 0x05, 0x08
    .byte 0x64, 0x20, 0x58, 0x66, 0x2A, 0xE0, 0xB4, 0x20, 0x26, 0xE0, 0x8C, 0x20, 0x58, 0x66, 0x64, 0x20
    .byte 0x24, 0xE0, 0xA0, 0x20, 0x58, 0x66, 0x8C, 0x20, 0x20, 0xE0, 0xC8, 0x20, 0x58, 0x66, 0x64, 0x20
    .byte 0x1C, 0xE0, 0x78, 0x20, 0x18, 0xE0, 0x1E, 0x20, 0x58, 0x66, 0x50, 0x20, 0x16, 0xE0, 0x92, 0x20
    .byte 0x58, 0x66, 0xB4, 0x20, 0x12, 0xE0, 0x7A, 0x20, 0x58, 0x66, 0xB4, 0x20, 0x0E, 0xE0, 0x62, 0x20
    .byte 0x58, 0x66, 0xB4, 0x20, 0x0A, 0xE0, 0x4A, 0x20, 0x58, 0x66, 0xB4, 0x20, 0x06, 0xE0, 0x32, 0x20
    .byte 0x58, 0x66, 0xB4, 0x20, 0x02, 0xE0
_08055E52:
    movs r0, #0x00
    str r0, [r3, #0x64]
    movs r0, #0x5A
    str r0, [r3, #0x68]
    bx lr
    thumb_func_start sub_8055E5C
sub_8055E5C:
    push {r4, lr}
    adds r2, r0, #0x0
    adds r3, r2, #0x0
    ldr r0, [r2, #0x64]
    subs r0, #0x01
    str r0, [r2, #0x64]
    adds r4, r0, #0x0
    ldr r0, [r2, #0x60]
    cmp r0, #0x06
    bhi _08055F62
    lsls r0, r0, #0x02
    ldr r1, _08055E7C @ =0x08055E80
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_08055E7C: .4byte 0x08055E80
    .byte 0xE4, 0x5E, 0x05, 0x08, 0xF4, 0x5E, 0x05, 0x08, 0x9C, 0x5E, 0x05, 0x08, 0xB0, 0x5E, 0x05, 0x08
    .byte 0x0C, 0x5F, 0x05, 0x08, 0x18, 0x5F, 0x05, 0x08, 0x62, 0x5F, 0x05, 0x08, 0x0E, 0x48, 0xD0, 0x64
    .byte 0x91, 0x8E, 0x02, 0x20, 0x08, 0x43, 0x01, 0x21, 0x08, 0x43, 0x90, 0x86, 0x03, 0x20, 0x10, 0x66
    .byte 0x0A, 0x49, 0x60, 0x01, 0x40, 0x18, 0x01, 0x68, 0x48, 0x00, 0x40, 0x18, 0x00, 0x01, 0x98, 0x60
    .byte 0x1F, 0x2C, 0x01, 0xDC, 0x06, 0x48, 0xD0, 0x64, 0x00, 0x2C, 0x4A, 0xDC, 0x00, 0x20, 0x10, 0x66
    .byte 0x90, 0x6E, 0x50, 0x66, 0x45, 0xE0, 0x00, 0x00, 0x08, 0xFF, 0x0E, 0x08, 0x5C, 0x64, 0x0E, 0x08
    .byte 0x28, 0xFF, 0x0E, 0x08, 0x91, 0x8E, 0x07, 0x48, 0x08, 0x40, 0x07, 0x49, 0x08, 0x40, 0x90, 0x86
    .byte 0x01, 0x20, 0x10, 0x66, 0x00, 0x2C, 0x34, 0xDC, 0x02, 0x20, 0x10, 0x66, 0x40, 0x20, 0x50, 0x66
    .byte 0x2F, 0xE0, 0x00, 0x00, 0xFD, 0xFF, 0x00, 0x00, 0xFE, 0xFF, 0x00, 0x00, 0x90, 0x8E, 0x0B, 0x49
    .byte 0x01, 0x40, 0x91, 0x86, 0x05, 0x20, 0x10, 0x66, 0x18, 0x68, 0x91, 0x6A, 0x40, 0x18, 0x18, 0x60
    .byte 0x58, 0x68, 0xD1, 0x6A, 0x40, 0x18, 0x58, 0x60, 0x98, 0x68, 0x11, 0x6B, 0x40, 0x18, 0x98, 0x60
    .byte 0x10, 0x6B, 0x00, 0x28, 0x06, 0xDD, 0x02, 0x48, 0x05, 0xE0, 0x00, 0x00, 0xFD, 0xFF, 0x00, 0x00
    .byte 0x08, 0xFF, 0x0E, 0x08, 0x08, 0x48, 0xD0, 0x64, 0x10, 0x6B, 0x08, 0x49, 0x40, 0x18, 0x10, 0x63
    .byte 0x98, 0x68, 0x00, 0x28, 0x05, 0xDA, 0x06, 0x20, 0x10, 0x66, 0x91, 0x8E, 0x04, 0x48, 0x08, 0x40
    .byte 0x90, 0x86
_08055F62:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x28, 0xFF, 0x0E, 0x08, 0x00, 0xC0, 0xFF, 0xFF, 0xFE, 0xFF, 0x00, 0x00
    thumb_func_start sub_8055F74
sub_8055F74:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08055FBE
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08055FBE
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _08055FBE
    movs r0, #0x04
    str r0, [r3, #0x60]
    adds r0, r2, #0x0
    adds r0, #0x4E
    movs r1, #0x00
    ldsh r0, [r0, r1]
    str r0, [r3, #0x28]
    adds r0, r2, #0x0
    adds r0, #0x50
    movs r1, #0x00
    ldsh r0, [r0, r1]
    str r0, [r3, #0x2C]
    movs r0, #0xC0
    lsls r0, r0, #0x0A
    str r0, [r3, #0x30]
_08055FBE:
    bx lr
    thumb_func_start sub_8055FC0
sub_8055FC0:
    push {r4, r5, r6, lr}
    mov r6, r8
    push {r6}
    adds r4, r0, #0x0
    adds r5, r1, #0x0
    ldr r6, _08056090 @ =0x03002E20
    bl sub_8059E44
    ldr r0, [r4, #0x60]
    cmp r0, #0x00
    beq _08055FD8
    b _08056152
_08055FD8:
    ldr r1, [r4, #0x68]
    movs r2, #0x01
    adds r0, r1, #0x0
    ands r0, r2
    cmp r0, #0x00
    beq _080560B0
    movs r0, #0x02
    negs r0, r0
    ands r1, r0
    str r1, [r4, #0x68]
    ldr r0, _08056094 @ =0x080EFF88
    str r0, [r4, #0x4C]
    ldrh r0, [r5, #0x10]
    movs r1, #0x80
    lsls r1, r1, #0x06
    ands r0, r1
    cmp r0, #0x00
    bne _08055FFE
    b _08056152
_08055FFE:
    ldr r1, _08056098 @ =0x00000838
    adds r0, r6, r1
    ldr r0, [r0, #0x00]
    cmp r5, r0
    beq _0805600A
    b _08056152
_0805600A:
    ldr r0, [r5, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    beq _08056016
    b _08056152
_08056016:
    adds r0, r5, #0x0
    adds r0, #0xBC
    ldr r1, [r0, #0x00]
    adds r0, r1, #0x0
    cmp r1, #0x00
    bge _08056024
    negs r0, r1
_08056024:
    lsls r0, r0, #0x06
    lsrs r0, r0, #0x16
    ldr r2, _0805609C @ =0xFFFFFE00
    adds r0, r0, r2
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    adds r0, r1, #0x0
    cmp r0, #0x00
    bge _08056038
    negs r0, r0
_08056038:
    asrs r4, r0, #0x14
    movs r0, #0x3F
    ands r4, r0
    adds r4, #0xC0
    lsls r6, r6, #0x10
    asrs r6, r6, #0x10
    ldr r0, _080560A0 @ =0x00000177
    bl m4aSongNumStart
    ldr r0, _080560A4 @ =0x08102414
    mov r8, r0
    ldr r5, _080560A8 @ =0x08102498
    ldr r1, _080560AC @ =0x00000BB8
    adds r5, r5, r1
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r4, #0x0
    bl m4aMPlayVolumeControl
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayPitchControl
    b _08056152
    .byte 0x00, 0x00
_08056090: .4byte 0x03002E20
_08056094: .4byte 0x080EFF88
_08056098: .4byte 0x00000838
_0805609C: .4byte 0xFFFFFE00
_080560A0: .4byte 0x00000177
_080560A4: .4byte 0x08102414
_080560A8: .4byte 0x08102498
_080560AC: .4byte 0x00000BB8
_080560B0:
    orrs r1, r2
    str r1, [r4, #0x68]
    ldr r0, _0805615C @ =0x080EFF68
    str r0, [r4, #0x4C]
    ldrh r0, [r5, #0x10]
    movs r1, #0x80
    lsls r1, r1, #0x06
    ands r0, r1
    cmp r0, #0x00
    beq _08056152
    ldr r2, _08056160 @ =0x00000838
    adds r0, r6, r2
    ldr r0, [r0, #0x00]
    cmp r5, r0
    bne _08056152
    ldr r0, [r5, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08056152
    adds r0, r5, #0x0
    adds r0, #0xBC
    ldr r1, [r0, #0x00]
    adds r0, r1, #0x0
    cmp r1, #0x00
    bge _080560E6
    negs r0, r1
_080560E6:
    lsls r0, r0, #0x06
    lsrs r0, r0, #0x16
    ldr r2, _08056164 @ =0xFFFFFE00
    adds r0, r0, r2
    lsls r0, r0, #0x10
    lsrs r6, r0, #0x10
    adds r0, r1, #0x0
    cmp r0, #0x00
    bge _080560FA
    negs r0, r0
_080560FA:
    asrs r4, r0, #0x14
    movs r0, #0x3F
    ands r4, r0
    adds r4, #0xC0
    lsls r6, r6, #0x10
    asrs r6, r6, #0x10
    movs r0, #0xBC
    lsls r0, r0, #0x01
    bl m4aSongNumStart
    ldr r0, _08056168 @ =0x08102414
    mov r8, r0
    ldr r5, _0805616C @ =0x08102498
    movs r1, #0xBC
    lsls r1, r1, #0x04
    adds r5, r5, r1
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r4, #0x0
    bl m4aMPlayVolumeControl
    ldrh r1, [r5, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayPitchControl
_08056152:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0805615C: .4byte 0x080EFF68
_08056160: .4byte 0x00000838
_08056164: .4byte 0xFFFFFE00
_08056168: .4byte 0x08102414
_0805616C: .4byte 0x08102498
    thumb_func_start sub_8056170
sub_8056170:
    push {r4, lr}
    adds r4, r0, #0x0
    bl sub_8059E80
    ldr r0, _08056190 @ =0x00001001
    movs r1, #0x00
    strh r0, [r4, #0x10]
    ldr r0, _08056194 @ =0x08055FC1
    str r0, [r4, #0x18]
    ldr r0, _08056198 @ =0x080EFF88
    str r0, [r4, #0x4C]
    str r1, [r4, #0x68]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08056190: .4byte 0x00001001
_08056194: .4byte sub_8055FC0
_08056198: .4byte 0x080EFF88
    thumb_func_start sub_805619C
sub_805619C:
    push {r4, lr}
    adds r2, r0, #0x0
    ldr r3, [r2, #0x68]
    ldrh r4, [r2, #0x34]
    movs r0, #0x02
    ands r0, r4
    cmp r0, #0x00
    bne _080561AE
    b _080562E8
_080561AE:
    cmp r3, #0x00
    blt _08056278
    cmp r3, #0x95
    ble _080561E8
    ldr r0, _080561E4 @ =0x00000153
    cmp r3, r0
    bgt _08056278
    cmp r3, #0xBE
    blt _08056278
    ldr r0, [r2, #0x00]
    ldr r1, [r2, #0x28]
    subs r0, r0, r1
    str r0, [r2, #0x00]
    ldr r0, [r2, #0x04]
    ldr r1, [r2, #0x2C]
    subs r0, r0, r1
    str r0, [r2, #0x04]
    ldr r0, [r2, #0x64]
    adds r0, #0x01
    str r0, [r2, #0x64]
    cmp r0, #0x06
    bge _080561DC
    b _080562CC
_080561DC:
    ldr r0, [r2, #0x60]
    cmp r0, #0x00
    beq _08056264
    b _08056240
_080561E4: .4byte 0x00000153
_080561E8:
    ldr r0, [r2, #0x00]
    ldr r1, [r2, #0x28]
    adds r0, r0, r1
    str r0, [r2, #0x00]
    ldr r0, [r2, #0x04]
    ldr r1, [r2, #0x2C]
    adds r0, r0, r1
    str r0, [r2, #0x04]
    ldr r0, [r2, #0x64]
    adds r0, #0x01
    str r0, [r2, #0x64]
    cmp r0, #0x06
    blt _080562CC
    ldr r0, [r2, #0x60]
    cmp r0, #0x00
    beq _0805622C
    ldr r1, [r2, #0x50]
    ldr r0, _08056214 @ =0x00807FFF
    cmp r1, r0
    bgt _0805621C
    ldr r0, _08056218 @ =0x080EFFC8
    b _0805621E
_08056214: .4byte 0x00807FFF
_08056218: .4byte 0x080EFFC8
_0805621C:
    ldr r0, _08056228 @ =0x080F0008
_0805621E:
    str r0, [r2, #0x4C]
    movs r0, #0x00
    str r0, [r2, #0x60]
    b _080562CA
    .byte 0x00, 0x00
_08056228: .4byte 0x080F0008
_0805622C:
    ldr r1, [r2, #0x50]
    ldr r0, _08056238 @ =0x00807FFF
    cmp r1, r0
    bgt _080562C0
    ldr r0, _0805623C @ =0x080EFFE8
    b _080562C2
_08056238: .4byte 0x00807FFF
_0805623C: .4byte 0x080EFFE8
_08056240:
    ldr r1, [r2, #0x50]
    ldr r0, _0805624C @ =0x00807FFF
    cmp r1, r0
    bgt _08056254
    ldr r0, _08056250 @ =0x080EFFC8
    b _08056256
_0805624C: .4byte 0x00807FFF
_08056250: .4byte 0x080EFFC8
_08056254:
    ldr r0, _08056260 @ =0x080F0008
_08056256:
    str r0, [r2, #0x4C]
    movs r0, #0x00
    str r0, [r2, #0x60]
    b _080562CA
    .byte 0x00, 0x00
_08056260: .4byte 0x080F0008
_08056264:
    ldr r1, [r2, #0x50]
    ldr r0, _08056270 @ =0x00807FFF
    cmp r1, r0
    bgt _080562C0
    ldr r0, _08056274 @ =0x080EFFE8
    b _080562C2
_08056270: .4byte 0x00807FFF
_08056274: .4byte 0x080EFFE8
_08056278:
    ldr r0, [r2, #0x64]
    adds r0, #0x01
    str r0, [r2, #0x64]
    cmp r0, #0x0A
    blt _080562CC
    ldr r0, [r2, #0x60]
    cmp r0, #0x00
    beq _080562AC
    ldr r1, [r2, #0x50]
    ldr r0, _08056294 @ =0x00807FFF
    cmp r1, r0
    bgt _0805629C
    ldr r0, _08056298 @ =0x080EFFC8
    b _0805629E
_08056294: .4byte 0x00807FFF
_08056298: .4byte 0x080EFFC8
_0805629C:
    ldr r0, _080562A8 @ =0x080F0008
_0805629E:
    str r0, [r2, #0x4C]
    movs r0, #0x00
    str r0, [r2, #0x60]
    b _080562CA
    .byte 0x00, 0x00
_080562A8: .4byte 0x080F0008
_080562AC:
    ldr r1, [r2, #0x50]
    ldr r0, _080562B8 @ =0x00807FFF
    cmp r1, r0
    bgt _080562C0
    ldr r0, _080562BC @ =0x080EFFE8
    b _080562C2
_080562B8: .4byte 0x00807FFF
_080562BC: .4byte 0x080EFFE8
_080562C0:
    ldr r0, _080562E0 @ =0x080F0028
_080562C2:
    str r0, [r2, #0x4C]
    movs r0, #0x01
    str r0, [r2, #0x60]
    movs r0, #0x00
_080562CA:
    str r0, [r2, #0x64]
_080562CC:
    ldr r0, [r2, #0x68]
    adds r0, #0x01
    str r0, [r2, #0x68]
    ldr r1, _080562E4 @ =0x0000017B
    cmp r0, r1
    ble _0805630E
    movs r0, #0x00
    str r0, [r2, #0x68]
    b _0805630E
    .byte 0x00, 0x00
_080562E0: .4byte 0x080F0028
_080562E4: .4byte 0x0000017B
_080562E8:
    movs r0, #0x01
    ands r0, r4
    cmp r0, #0x00
    beq _0805630E
    ldr r1, _08056314 @ =0x080E645C
    lsls r0, r3, #0x06
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x04
    str r0, [r2, #0x08]
    subs r0, r3, #0x1
    str r0, [r2, #0x68]
    cmp r0, #0x00
    bge _0805630E
    ldr r0, _08056318 @ =0x0000FFFE
    ands r4, r0
    strh r4, [r2, #0x34]
_0805630E:
    pop {r4}
    pop {r0}
    bx r0
_08056314: .4byte 0x080E645C
_08056318: .4byte 0x0000FFFE
    thumb_func_start sub_805631C
sub_805631C:
    push {r4, lr}
    adds r2, r0, #0x0
    adds r3, r1, #0x0
    ldr r0, _08056360 @ =0x00001003
    movs r4, #0x00
    strh r0, [r2, #0x10]
    ldr r0, _08056364 @ =0x080EFFC8
    str r0, [r2, #0x4C]
    ldr r0, _08056368 @ =0x0805619D
    str r0, [r2, #0x5C]
    ldr r0, _0805636C @ =0x08056389
    str r0, [r2, #0x18]
    ldrh r1, [r2, #0x34]
    movs r0, #0x02
    orrs r0, r1
    strh r0, [r2, #0x34]
    str r4, [r2, #0x60]
    str r4, [r2, #0x64]
    str r4, [r2, #0x68]
    ldr r0, _08056370 @ =0x00800001
    cmp r3, r0
    beq _08056358
    cmp r3, r0
    ble _08056378
    ldr r0, _08056374 @ =0x00808000
    cmp r3, r0
    beq _08056378
    adds r0, #0x01
    cmp r3, r0
    bne _08056378
_08056358:
    str r4, [r2, #0x28]
    movs r0, #0x80
    lsls r0, r0, #0x08
    b _08056380
_08056360: .4byte 0x00001003
_08056364: .4byte 0x080EFFC8
_08056368: .4byte sub_805619C
_0805636C: .4byte sub_8056388
_08056370: .4byte 0x00800001
_08056374: .4byte 0x00808000
_08056378:
    movs r0, #0x80
    lsls r0, r0, #0x08
    str r0, [r2, #0x28]
    movs r0, #0x00
_08056380:
    str r0, [r2, #0x2C]
    pop {r4}
    pop {r0}
    bx r0
    thumb_func_start sub_8056388
sub_8056388:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _080563C8
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _080563C8
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _080563C8
    movs r0, #0x20
    str r0, [r3, #0x68]
    ldrh r1, [r3, #0x34]
    ldr r0, _080563CC @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
    ldr r1, _080563D0 @ =0xFFFFFF00
    adds r0, r3, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
_080563C8:
    bx lr
    .byte 0x00, 0x00
_080563CC: .4byte 0x0000FFFD
_080563D0: .4byte 0xFFFFFF00
    thumb_func_start sub_80563D4
sub_80563D4:
    adds r2, r0, #0x0
    adds r3, r1, #0x0
    ldr r0, _08056414 @ =0x00001013
    strh r0, [r2, #0x10]
    movs r0, #0x04
    strb r0, [r2, #0x0E]
    strb r0, [r2, #0x0D]
    strb r0, [r2, #0x0C]
    ldr r0, _08056418 @ =0x08056441
    str r0, [r2, #0x5C]
    ldr r0, _0805641C @ =0x080F0048
    str r0, [r2, #0x4C]
    ldrh r1, [r2, #0x34]
    ldr r0, _08056420 @ =0x0000FFFE
    ands r0, r1
    ldr r1, _08056424 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x34]
    movs r0, #0x01
    str r0, [r2, #0x60]
    ldr r0, _08056428 @ =0x00840001
    cmp r3, r0
    beq _0805642C
    cmp r3, r0
    ble _08056438
    adds r0, #0x01
    cmp r3, r0
    beq _08056430
    adds r0, #0x01
    cmp r3, r0
    beq _08056434
    b _08056438
_08056414: .4byte 0x00001013
_08056418: .4byte sub_8056440
_0805641C: .4byte 0x080F0048
_08056420: .4byte 0x0000FFFE
_08056424: .4byte 0x0000FFFD
_08056428: .4byte 0x00840001
_0805642C:
    movs r0, #0x20
    b _0805643A
_08056430:
    movs r0, #0x40
    b _0805643A
_08056434:
    movs r0, #0x60
    b _0805643A
_08056438:
    movs r0, #0x00
_0805643A:
    str r0, [r2, #0x64]
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8056440
sub_8056440:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r6, r0, #0x0
    ldr r0, [r6, #0x64]
    subs r7, r0, #0x1
    ldr r0, [r6, #0x60]
    cmp r7, #0x00
    bge _0805645C
    adds r0, #0x01
    cmp r0, #0x05
    ble _0805645C
    movs r0, #0x00
    movs r7, #0x00
_0805645C:
    str r0, [r6, #0x60]
    str r7, [r6, #0x64]
    cmp r0, #0x05
    bls _08056466
    b _08056734
_08056466:
    lsls r0, r0, #0x02
    ldr r1, _08056470 @ =0x08056474
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08056470: .4byte 0x08056474
    .byte 0x8C, 0x64, 0x05, 0x08, 0x34, 0x67, 0x05, 0x08, 0xB4, 0x64, 0x05, 0x08, 0x68, 0x65, 0x05, 0x08
    .byte 0xCC, 0x65, 0x05, 0x08, 0x4E, 0x66, 0x05, 0x08, 0x01, 0x20, 0x30, 0x66, 0x40, 0x20, 0x70, 0x66
    .byte 0x04, 0x20, 0xB0, 0x73, 0x70, 0x73, 0x30, 0x73, 0xB1, 0x8E, 0x03, 0x48, 0x08, 0x40, 0x03, 0x49
    .byte 0x08, 0x40, 0xB0, 0x86, 0x44, 0xE1, 0x00, 0x00, 0xFE, 0xFF, 0x00, 0x00, 0xFD, 0xFF, 0x00, 0x00
    .byte 0x03, 0x20, 0x30, 0x66, 0x3C, 0x48, 0x70, 0x66, 0x3C, 0x48, 0xF0, 0x64, 0x3C, 0x48, 0xB0, 0x61
    .byte 0xA0, 0x20, 0x80, 0x03, 0xB0, 0x60, 0x00, 0x20, 0x30, 0x63, 0x80, 0x21, 0xC9, 0x00, 0x30, 0x1C
    .byte 0x56, 0x30, 0x01, 0x80, 0x02, 0x30, 0x01, 0x80, 0xB0, 0x8E, 0x01, 0x21, 0x08, 0x43, 0x02, 0x21
    .byte 0x08, 0x43, 0xB0, 0x86, 0x33, 0x48, 0x03, 0x1C, 0x24, 0x33, 0x33, 0x49, 0x40, 0x18, 0x02, 0x68
    .byte 0x24, 0x20, 0x31, 0x5E, 0x01, 0x20, 0x40, 0x42, 0x81, 0x42, 0x33, 0xD0, 0x90, 0x6C, 0x20, 0x21
    .byte 0x08, 0x40, 0x00, 0x28, 0x2E, 0xD1, 0x2D, 0x4F, 0x2D, 0x48, 0xBF, 0x21, 0x09, 0x01, 0x45, 0x18
    .byte 0xA9, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0xC0, 0x19, 0x00, 0x68, 0x80, 0x88, 0x00, 0x28
    .byte 0x20, 0xD1, 0x18, 0x1C, 0x31, 0x1C, 0xF6, 0xF7, 0xFD, 0xFB, 0x00, 0x04, 0x02, 0x0C, 0x3F, 0x2A
    .byte 0x18, 0xDD, 0x14, 0x1C, 0x00, 0x2C, 0x15, 0xD0, 0xBF, 0x20, 0x40, 0x00, 0x09, 0xF0, 0xEE, 0xFC
    .byte 0xA9, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0xC0, 0x19, 0x00, 0x68, 0x09, 0xF0, 0xDE, 0xFD
    .byte 0xA9, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0xC0, 0x19, 0x00, 0x68, 0x01, 0x21, 0x22, 0x1C
    .byte 0x0A, 0xF0, 0x8C, 0xFC, 0x33, 0x1C, 0x56, 0x33, 0x00, 0x21, 0x58, 0x5E, 0x18, 0x38, 0x00, 0x04
    .byte 0x02, 0x0C, 0x00, 0x14, 0x80, 0x21, 0x49, 0x00, 0x88, 0x42, 0x00, 0xDC, 0x0A, 0x1C, 0x10, 0x04
    .byte 0x00, 0x14, 0x18, 0x80, 0x31, 0x1C, 0x58, 0x31, 0x08, 0x80, 0x30, 0x6B, 0x0D, 0x49, 0x40, 0x18
    .byte 0x30, 0x63, 0xB1, 0x68, 0x09, 0x18, 0x00, 0x29, 0x04, 0xDC, 0x00, 0x21, 0x04, 0x20, 0x30, 0x66
    .byte 0x01, 0x20, 0x70, 0x66, 0xB1, 0x60, 0xC3, 0xE0, 0xE7, 0x03, 0x00, 0x00, 0x48, 0x00, 0x0F, 0x08
    .byte 0x45, 0x67, 0x05, 0x08, 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08
    .byte 0x98, 0x24, 0x10, 0x08, 0x00, 0xF8, 0xFF, 0xFF, 0x23, 0x48, 0xB0, 0x61, 0x05, 0x20, 0x30, 0x66
    .byte 0x1F, 0x20, 0x70, 0x66, 0x80, 0x21, 0x49, 0x00, 0x30, 0x1C, 0x56, 0x30, 0x01, 0x80, 0x02, 0x30
    .byte 0x01, 0x80, 0xB1, 0x8E, 0x1D, 0x48, 0x08, 0x40, 0xB0, 0x86, 0x1D, 0x48, 0x02, 0x1C, 0x24, 0x32
    .byte 0x1C, 0x49, 0x40, 0x18, 0x00, 0x68, 0x80, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x24, 0xD1
    .byte 0x10, 0x1C, 0x31, 0x1C, 0xF6, 0xF7, 0x8E, 0xFB, 0x00, 0x04, 0x02, 0x0C, 0x3F, 0x2A, 0x1C, 0xDD
    .byte 0x15, 0x1C, 0x00, 0x2D, 0x19, 0xD0, 0x14, 0x48, 0x09, 0xF0, 0x80, 0xFC, 0x13, 0x48, 0x80, 0x46
    .byte 0x13, 0x4C, 0x14, 0x49, 0x64, 0x18, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x44
    .byte 0x00, 0x68, 0x09, 0xF0, 0x6B, 0xFD, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x44
    .byte 0x00, 0x68, 0x01, 0x21, 0x2A, 0x1C, 0x0A, 0xF0, 0x19, 0xFC, 0x1F, 0x2F, 0x6E, 0xD8, 0xB8, 0x00
    .byte 0x09, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x49, 0x67, 0x05, 0x08, 0xFD, 0xFF, 0x00, 0x00
    .byte 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x7F, 0x01, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08
    .byte 0x98, 0x24, 0x10, 0x08, 0xF8, 0x0B, 0x00, 0x00, 0x80, 0x66, 0x05, 0x08, 0x30, 0x67, 0x05, 0x08
    .byte 0x30, 0x67, 0x05, 0x08, 0x30, 0x67, 0x05, 0x08, 0x30, 0x67, 0x05, 0x08, 0x30, 0x67, 0x05, 0x08
    .byte 0x30, 0x67, 0x05, 0x08, 0x30, 0x67, 0x05, 0x08, 0x30, 0x67, 0x05, 0x08, 0x28, 0x67, 0x05, 0x08
    .byte 0x28, 0x67, 0x05, 0x08, 0x28, 0x67, 0x05, 0x08, 0x28, 0x67, 0x05, 0x08, 0x28, 0x67, 0x05, 0x08
    .byte 0x28, 0x67, 0x05, 0x08, 0x20, 0x67, 0x05, 0x08, 0x20, 0x67, 0x05, 0x08, 0x20, 0x67, 0x05, 0x08
    .byte 0x20, 0x67, 0x05, 0x08, 0x20, 0x67, 0x05, 0x08, 0x20, 0x67, 0x05, 0x08, 0x18, 0x67, 0x05, 0x08
    .byte 0x18, 0x67, 0x05, 0x08, 0x18, 0x67, 0x05, 0x08, 0x18, 0x67, 0x05, 0x08, 0x10, 0x67, 0x05, 0x08
    .byte 0x10, 0x67, 0x05, 0x08, 0x10, 0x67, 0x05, 0x08, 0x10, 0x67, 0x05, 0x08, 0x00, 0x67, 0x05, 0x08
    .byte 0x00, 0x67, 0x05, 0x08, 0x00, 0x67, 0x05, 0x08, 0x00, 0x67, 0x05, 0x08, 0x14, 0x20, 0xB0, 0x73
    .byte 0x70, 0x73, 0x30, 0x73, 0x00, 0x48, 0x12, 0xE0, 0x68, 0x00, 0x0F, 0x08, 0x00, 0x48, 0x0E, 0xE0
    .byte 0x88, 0x00, 0x0F, 0x08, 0x00, 0x48, 0x0A, 0xE0, 0xA8, 0x00, 0x0F, 0x08, 0x00, 0x48, 0x06, 0xE0
    .byte 0xC8, 0x00, 0x0F, 0x08, 0x00, 0x48, 0x02, 0xE0, 0xE8, 0x00, 0x0F, 0x08, 0x03, 0x48, 0xF0, 0x64
_08056734:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00, 0x08, 0x01, 0x0F, 0x08
    thumb_func_start main_dummyIrqHandler6
main_dummyIrqHandler6: @ 08056744
    bx lr
    .byte 0x00, 0x00
    thumb_func_start main_dummyIrqHandler7
main_dummyIrqHandler7: @ 08056748
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_805674C
sub_805674C:
    ldr r1, _08056760 @ =0x00001001
    movs r2, #0x00
    strh r1, [r0, #0x10]
    ldr r1, _08056764 @ =0x0805676D
    str r1, [r0, #0x5C]
    ldr r1, _08056768 @ =0x080F0268
    str r1, [r0, #0x4C]
    str r2, [r0, #0x60]
    bx lr
    .byte 0x00, 0x00
_08056760: .4byte 0x00001001
_08056764: .4byte sub_805676C
_08056768: .4byte 0x080F0268
    thumb_func_start sub_805676C
sub_805676C:
    adds r1, r0, #0x0
    ldr r0, [r1, #0x60]
    adds r0, #0x01
    str r0, [r1, #0x60]
    cmp r0, #0x14
    bne _08056784
    ldr r0, _08056780 @ =0x080F0288
    str r0, [r1, #0x4C]
    b _08056790
    .byte 0x00, 0x00
_08056780: .4byte 0x080F0288
_08056784:
    cmp r0, #0x28
    bne _08056790
    ldr r0, _08056794 @ =0x080F0268
    str r0, [r1, #0x4C]
    movs r0, #0x00
    str r0, [r1, #0x60]
_08056790:
    bx lr
    .byte 0x00, 0x00
_08056794: .4byte 0x080F0268
    thumb_func_start sub_8056798
sub_8056798:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    ldr r5, [r4, #0x60]
    cmp r5, #0x3C
    bgt _080567AC
    cmp r5, #0x01
    bge _080567CA
    cmp r5, #0x00
    beq _080567B6
    b _08056836
_080567AC:
    cmp r5, #0x3D
    beq _08056804
    cmp r5, #0x8C
    bgt _08056836
    b _08056810
_080567B6:
    movs r0, #0x10
    str r0, [r4, #0x64]
    movs r0, #0x0A
    str r0, [r4, #0x68]
    ldrh r1, [r4, #0x34]
    ldr r0, _080567FC @ =0x0000FFFE
    ands r0, r1
    ldr r1, _08056800 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r4, #0x34]
_080567CA:
    cmp r5, #0x1C
    ble _080567F8
    adds r2, r5, #0x0
    subs r2, #0x1C
    lsls r1, r2, #0x03
    subs r1, r1, r2
    lsls r1, r1, #0x03
    movs r0, #0x80
    lsls r0, r0, #0x04
    adds r3, r0, #0x0
    subs r1, r3, r1
    movs r0, #0x35
    muls r0, r2
    subs r3, r3, r0
    ldrh r2, [r4, #0x34]
    movs r0, #0x01
    orrs r0, r2
    strh r0, [r4, #0x34]
    adds r0, r4, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r3, [r0, #0x00]
_080567F8:
    adds r5, #0x01
    b _08056836
_080567FC: .4byte 0x0000FFFE
_08056800: .4byte 0x0000FFFD
_08056804:
    ldrh r0, [r4, #0x34]
    movs r1, #0x01
    orrs r1, r0
    movs r0, #0x02
    orrs r1, r0
    strh r1, [r4, #0x34]
_08056810:
    adds r0, r4, #0x0
    bl sub_8056848
    ldr r0, [r4, #0x08]
    movs r1, #0x80
    lsls r1, r1, #0x08
    adds r0, r0, r1
    str r0, [r4, #0x08]
    adds r5, #0x01
    cmp r5, #0x8B
    ble _08056836
    movs r5, #0x00
    ldrh r0, [r4, #0x34]
    ldr r1, _08056840 @ =0x0000FFFE
    ands r1, r0
    ldr r0, _08056844 @ =0x0000FFFD
    ands r1, r0
    strh r1, [r4, #0x34]
    str r5, [r4, #0x08]
_08056836:
    str r5, [r4, #0x60]
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08056840: .4byte 0x0000FFFE
_08056844: .4byte 0x0000FFFD
    thumb_func_start sub_8056848
sub_8056848:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    ldr r0, [r4, #0x64]
    subs r6, r0, #0x1
    ldr r0, [r4, #0x68]
    subs r5, r0, #0x1
    cmp r6, #0x07
    ble _08056878
    ldr r1, _08056870 @ =0x080E645C
    lsls r0, r6, #0x08
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    adds r7, r1, #0x0
    cmp r0, #0x00
    bge _0805686A
    ldr r1, _08056874 @ =0x000003FF
    adds r0, r0, r1
_0805686A:
    asrs r0, r0, #0x0A
    b _0805688C
    .byte 0x00, 0x00
_08056870: .4byte 0x080E645C
_08056874: .4byte 0x000003FF
_08056878:
    ldr r1, _080568BC @ =0x080E645C
    lsls r0, r6, #0x08
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    adds r7, r1, #0x0
    cmp r0, #0x00
    bge _0805688A
    ldr r1, _080568C0 @ =0x000001FF
    adds r0, r0, r1
_0805688A:
    asrs r0, r0, #0x09
_0805688C:
    movs r1, #0x90
    lsls r1, r1, #0x01
    adds r0, r0, r1
    adds r1, r4, #0x0
    adds r1, #0x56
    strh r0, [r1, #0x00]
    cmp r6, #0x00
    bgt _0805689E
    movs r6, #0x10
_0805689E:
    cmp r5, #0x09
    ble _080568C8
    lsls r0, r5, #0x0A
    movs r1, #0x14
    bl __divsi3
    lsls r0, r0, #0x02
    adds r0, r0, r7
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bge _080568B8
    ldr r1, _080568C4 @ =0x000003FF
    adds r0, r0, r1
_080568B8:
    asrs r0, r0, #0x0A
    b _080568E0
_080568BC: .4byte 0x080E645C
_080568C0: .4byte 0x000001FF
_080568C4: .4byte 0x000003FF
_080568C8:
    lsls r0, r5, #0x0A
    movs r1, #0x14
    bl __divsi3
    lsls r0, r0, #0x02
    adds r0, r0, r7
    ldr r0, [r0, #0x00]
    cmp r0, #0x00
    bge _080568DE
    ldr r1, _08056904 @ =0x000001FF
    adds r0, r0, r1
_080568DE:
    asrs r0, r0, #0x09
_080568E0:
    movs r1, #0x90
    lsls r1, r1, #0x01
    adds r0, r0, r1
    adds r1, r4, #0x0
    adds r1, #0x58
    strh r0, [r1, #0x00]
    cmp r5, #0x00
    bgt _080568F2
    movs r5, #0x14
_080568F2:
    adds r1, r4, #0x0
    adds r1, #0x5A
    movs r0, #0x00
    strh r0, [r1, #0x00]
    str r6, [r4, #0x64]
    str r5, [r4, #0x68]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08056904: .4byte 0x000001FF
    thumb_func_start sub_8056908
sub_8056908:
    ldr r1, _0805691C @ =0x0000100A
    movs r2, #0x00
    strh r1, [r0, #0x10]
    ldr r1, _08056920 @ =0x08056799
    str r1, [r0, #0x5C]
    ldr r1, _08056924 @ =0x080F02A8
    str r1, [r0, #0x4C]
    str r2, [r0, #0x08]
    str r2, [r0, #0x60]
    bx lr
_0805691C: .4byte 0x0000100A
_08056920: .4byte sub_8056798
_08056924: .4byte 0x080F02A8
    thumb_func_start sub_8056928
sub_8056928:
    push {r4, r5, r6, r7, lr}
    adds r6, r0, #0x0
    adds r7, r1, #0x0
    ldr r0, _08056984 @ =0x03002E20
    ldr r1, _08056988 @ =0x00000848
    adds r0, r0, r1
    ldr r5, _0805698C @ =0x080E645C
    movs r1, #0x14
    ldsh r2, [r0, r1]
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08056942
    adds r0, #0x3F
_08056942:
    asrs r3, r0, #0x06
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r1, _08056990 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r4, [r0, #0x00]
    adds r0, r3, #0x0
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r3, [r0, #0x00]
    adds r0, r6, #0x0
    cmp r0, #0x00
    bge _08056966
    adds r0, #0xFF
_08056966:
    asrs r0, r0, #0x08
    adds r2, r0, #0x0
    muls r2, r4
    adds r1, r7, #0x0
    cmp r1, #0x00
    bge _08056974
    adds r1, #0xFF
_08056974:
    asrs r0, r1, #0x08
    muls r0, r3
    subs r0, r2, r0
    cmp r0, #0x00
    bge _08056994
    movs r0, #0x00
    b _08056996
    .byte 0x00, 0x00
_08056984: .4byte 0x03002E20
_08056988: .4byte 0x00000848
_0805698C: .4byte 0x080E645C
_08056990: .4byte 0x000003FF
_08056994:
    movs r0, #0x01
_08056996:
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    thumb_func_start sub_805699C
sub_805699C:
    adds r3, r0, #0x0
    ldr r0, _08056A00 @ =0x00001005
    movs r2, #0x00
    movs r1, #0x00
    strh r0, [r3, #0x10]
    movs r0, #0x08
    strb r0, [r3, #0x0E]
    strb r0, [r3, #0x0D]
    strb r0, [r3, #0x0C]
    ldr r0, _08056A04 @ =0x080F0648
    str r0, [r3, #0x4C]
    adds r0, r3, #0x0
    adds r0, #0x60
    strb r2, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strb r2, [r0, #0x00]
    adds r2, r3, #0x0
    adds r2, #0x66
    movs r0, #0x80
    lsls r0, r0, #0x04
    strh r0, [r2, #0x00]
    adds r0, r3, #0x0
    adds r0, #0x68
    strh r1, [r0, #0x00]
    adds r2, #0x04
    movs r0, #0x10
    strb r0, [r2, #0x00]
    str r1, [r3, #0x28]
    str r1, [r3, #0x2C]
    str r1, [r3, #0x30]
    ldr r0, _08056A08 @ =0x08056BC9
    str r0, [r3, #0x18]
    ldr r0, _08056A0C @ =0x08056A11
    str r0, [r3, #0x5C]
    ldrh r0, [r3, #0x34]
    movs r1, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r3, #0x34]
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r3, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    bx lr
_08056A00: .4byte 0x00001005
_08056A04: .4byte 0x080F0648
_08056A08: .4byte sub_8056BC8
_08056A0C: .4byte sub_8056A10
    thumb_func_start sub_8056A10
sub_8056A10:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    adds r0, #0x60
    ldrb r0, [r0, #0x00]
    cmp r0, #0x08
    bls _08056A1E
    b _08056BBC
_08056A1E:
    lsls r0, r0, #0x02
    ldr r1, _08056A28 @ =0x08056A2C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08056A28: .4byte 0x08056A2C
    .byte 0x50, 0x6A, 0x05, 0x08, 0x72, 0x6A, 0x05, 0x08, 0x82, 0x6A, 0x05, 0x08, 0xEA, 0x6A, 0x05, 0x08
    .byte 0xFA, 0x6A, 0x05, 0x08, 0x68, 0x6B, 0x05, 0x08, 0x86, 0x6B, 0x05, 0x08, 0xA8, 0x6B, 0x05, 0x08
    .byte 0xBC, 0x6B, 0x05, 0x08, 0x22, 0x1C, 0x62, 0x32, 0x11, 0x88, 0x00, 0x23, 0xD0, 0x5E, 0x00, 0x28
    .byte 0x02, 0xDD, 0x48, 0x1E, 0x10, 0x80, 0xAB, 0xE0, 0x20, 0x1C, 0x60, 0x30, 0x02, 0x21, 0x01, 0x70
    .byte 0x40, 0x20, 0x10, 0x80, 0xA4, 0xE0, 0x20, 0x1C, 0x60, 0x30, 0x02, 0x21, 0x01, 0x70, 0x21, 0x1C
    .byte 0x62, 0x31, 0x80, 0x20, 0x08, 0x80, 0x20, 0x68, 0xA1, 0x6A, 0x40, 0x18, 0x20, 0x60, 0x60, 0x68
    .byte 0xE3, 0x6A, 0xC0, 0x18, 0x60, 0x60, 0x20, 0x1C, 0x66, 0x30, 0x00, 0x25, 0x42, 0x5F, 0x04, 0x30
    .byte 0x00, 0x78, 0x50, 0x43, 0x81, 0x42, 0x07, 0xD0, 0x88, 0x18, 0xA0, 0x62, 0x20, 0x1C, 0x68, 0x30
    .byte 0x00, 0x21, 0x40, 0x5E, 0x18, 0x18, 0xE0, 0x62, 0xA0, 0x6A, 0xE1, 0x6A, 0xFF, 0xF7, 0x36, 0xFF
    .byte 0x00, 0x28, 0x03, 0xD0, 0x00, 0x48, 0x03, 0xE0, 0x00, 0xFF, 0xFF, 0xFF, 0x80, 0x20, 0x40, 0x00
    .byte 0x21, 0x1C, 0x56, 0x31, 0x08, 0x80, 0x22, 0x1C, 0x62, 0x32, 0x10, 0x88, 0x01, 0x38, 0x10, 0x80
    .byte 0x00, 0x04, 0x00, 0x28, 0x6C, 0xDC, 0x20, 0x1C, 0x60, 0x30, 0x03, 0x21, 0x3A, 0xE0, 0x20, 0x1C
    .byte 0x60, 0x30, 0x04, 0x21, 0x01, 0x70, 0x21, 0x1C, 0x62, 0x31, 0x80, 0x20, 0x08, 0x80, 0x20, 0x68
    .byte 0xA1, 0x6A, 0x40, 0x18, 0x20, 0x60, 0x60, 0x68, 0xE3, 0x6A, 0xC0, 0x18, 0x60, 0x60, 0x20, 0x1C
    .byte 0x66, 0x30, 0x00, 0x25, 0x42, 0x5F, 0x04, 0x30, 0x00, 0x78, 0x50, 0x43, 0x81, 0x42, 0x07, 0xD0
    .byte 0x88, 0x1A, 0xA0, 0x62, 0x20, 0x1C, 0x68, 0x30, 0x00, 0x21, 0x40, 0x5E, 0x18, 0x1A, 0xE0, 0x62
    .byte 0xA0, 0x6A, 0xE1, 0x6A, 0xFF, 0xF7, 0xFA, 0xFE, 0x00, 0x28, 0x03, 0xD0, 0x00, 0x48, 0x03, 0xE0
    .byte 0x00, 0xFF, 0xFF, 0xFF, 0x80, 0x20, 0x40, 0x00, 0x21, 0x1C, 0x56, 0x31, 0x08, 0x80, 0x22, 0x1C
    .byte 0x62, 0x32, 0x10, 0x88, 0x01, 0x38, 0x10, 0x80, 0x00, 0x04, 0x00, 0x28, 0x30, 0xDC, 0x20, 0x1C
    .byte 0x60, 0x30, 0x01, 0x21, 0x01, 0x70, 0x80, 0x20, 0x10, 0x80, 0x29, 0xE0, 0x21, 0x1C, 0x60, 0x31
    .byte 0x06, 0x20, 0x08, 0x70, 0xA1, 0x8E, 0x0A, 0x48, 0x08, 0x40, 0xA0, 0x86, 0x09, 0x49, 0x20, 0x1C
    .byte 0x58, 0x30, 0x01, 0x80, 0xC0, 0x20, 0x80, 0x02, 0x20, 0x63, 0xA0, 0x68, 0x21, 0x6B, 0x40, 0x18
    .byte 0xA0, 0x60, 0x00, 0x28, 0x0A, 0xDB, 0x04, 0x4A, 0x88, 0x18, 0x20, 0x63, 0x10, 0xE0, 0x00, 0x00
    .byte 0xFD, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xC0, 0xFF, 0xFF, 0x21, 0x1C, 0x60, 0x31
    .byte 0x00, 0x22, 0x08, 0x20, 0x08, 0x70, 0xA2, 0x61, 0xA1, 0x8E, 0x03, 0x48, 0x08, 0x40, 0xA0, 0x86
_08056BBC:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00, 0xFE, 0xFF, 0x00, 0x00
    thumb_func_start sub_8056BC8
sub_8056BC8:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08056BFC
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08056BFC
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _08056BFC
    adds r1, r3, #0x0
    adds r1, #0x60
    movs r0, #0x05
    strb r0, [r1, #0x00]
_08056BFC:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8056C00
sub_8056C00:
    mov r12, r0
    ldr r0, _08056C60 @ =0x00001006
    movs r3, #0x00
    mov r1, r12
    strh r0, [r1, #0x10]
    movs r0, #0x08
    strb r0, [r1, #0x0E]
    strb r0, [r1, #0x0D]
    strb r0, [r1, #0x0C]
    ldr r0, _08056C64 @ =0x080F0628
    str r0, [r1, #0x4C]
    ldr r0, _08056C68 @ =0x08056EB1
    str r0, [r1, #0x18]
    ldr r0, _08056C6C @ =0x08056C71
    str r0, [r1, #0x5C]
    ldrh r0, [r1, #0x34]
    movs r1, #0x01
    movs r2, #0x00
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    mov r1, r12
    strh r0, [r1, #0x34]
    movs r1, #0x80
    lsls r1, r1, #0x01
    mov r0, r12
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    adds r0, #0x08
    strb r2, [r0, #0x00]
    adds r0, #0x01
    strb r2, [r0, #0x00]
    adds r0, #0x03
    movs r1, #0x80
    lsls r1, r1, #0x04
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r3, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    mov r0, r12
    str r3, [r0, #0x08]
    adds r0, #0x62
    strh r3, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
_08056C60: .4byte 0x00001006
_08056C64: .4byte 0x080F0628
_08056C68: .4byte sub_8056EB0
_08056C6C: .4byte sub_8056C70
    thumb_func_start sub_8056C70
sub_8056C70:
    push {r4, lr}
    mov r12, r0
    adds r0, #0x60
    ldrb r0, [r0, #0x00]
    cmp r0, #0x18
    bls _08056C7E
    b _08056EA6
_08056C7E:
    lsls r0, r0, #0x02
    ldr r1, _08056C88 @ =0x08056C8C
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08056C88: .4byte 0x08056C8C
    .byte 0xF0, 0x6C, 0x05, 0x08, 0x06, 0x6D, 0x05, 0x08, 0x18, 0x6D, 0x05, 0x08, 0x42, 0x6D, 0x05, 0x08
    .byte 0x80, 0x6D, 0x05, 0x08, 0x06, 0x6D, 0x05, 0x08, 0x18, 0x6D, 0x05, 0x08, 0x42, 0x6D, 0x05, 0x08
    .byte 0x80, 0x6D, 0x05, 0x08, 0xCC, 0x6D, 0x05, 0x08, 0xE0, 0x6D, 0x05, 0x08, 0x06, 0x6D, 0x05, 0x08
    .byte 0x18, 0x6D, 0x05, 0x08, 0x42, 0x6D, 0x05, 0x08, 0x80, 0x6D, 0x05, 0x08, 0x06, 0x6D, 0x05, 0x08
    .byte 0x18, 0x6D, 0x05, 0x08, 0x42, 0x6D, 0x05, 0x08, 0x80, 0x6D, 0x05, 0x08, 0xCC, 0x6D, 0x05, 0x08
    .byte 0xE0, 0x6D, 0x05, 0x08, 0x3A, 0x6E, 0x05, 0x08, 0x66, 0x6E, 0x05, 0x08, 0x88, 0x6E, 0x05, 0x08
    .byte 0xA6, 0x6E, 0x05, 0x08, 0x61, 0x46, 0x61, 0x31, 0x08, 0x78, 0x00, 0x28, 0x02, 0xD0, 0x01, 0x38
    .byte 0x08, 0x70, 0xD2, 0xE0, 0x61, 0x46, 0x60, 0x31, 0x96, 0xE0, 0x60, 0x46, 0x60, 0x30, 0x01, 0x78
    .byte 0x01, 0x31, 0x01, 0x70, 0x61, 0x46, 0x61, 0x31, 0x0F, 0x20, 0x08, 0x70, 0x62, 0x46, 0x61, 0x32
    .byte 0x10, 0x78, 0x00, 0x01, 0x80, 0x23, 0x9B, 0x00, 0x19, 0x1C, 0x09, 0x1A, 0x60, 0x46, 0x58, 0x30
    .byte 0x01, 0x80, 0x10, 0x78, 0x00, 0x28, 0x02, 0xD0, 0x01, 0x38, 0x10, 0x70, 0xB5, 0xE0, 0x61, 0x46
    .byte 0x60, 0x31, 0x08, 0x78, 0x72, 0xE0, 0x61, 0x46, 0x60, 0x31, 0x08, 0x78, 0x01, 0x30, 0x00, 0x22
    .byte 0x08, 0x70, 0x60, 0x46, 0x61, 0x30, 0x02, 0x70, 0x80, 0x21, 0x49, 0x00, 0x09, 0x38, 0x01, 0x80
    .byte 0x0C, 0x30, 0x00, 0x24, 0x00, 0x5F, 0x40, 0x01, 0x61, 0x46, 0x88, 0x62, 0x60, 0x46, 0x66, 0x30
    .byte 0x00, 0x22, 0x80, 0x5E, 0x40, 0x01, 0xC8, 0x62, 0x60, 0x46, 0x68, 0x30, 0x00, 0x23, 0xC0, 0x5E
    .byte 0x40, 0x01, 0x08, 0x63, 0x64, 0x46, 0x20, 0x68, 0xA2, 0x6A, 0x80, 0x18, 0x20, 0x60, 0x60, 0x68
    .byte 0xE3, 0x6A, 0xC0, 0x18, 0x60, 0x60, 0xA0, 0x68, 0x21, 0x6B, 0x40, 0x18, 0xA0, 0x60, 0x60, 0x46
    .byte 0x64, 0x30, 0x00, 0x24, 0x00, 0x5F, 0x12, 0x1A, 0x60, 0x46, 0x82, 0x62, 0x66, 0x30, 0x00, 0x22
    .byte 0x80, 0x5E, 0x1B, 0x1A, 0x64, 0x46, 0xE3, 0x62, 0x60, 0x46, 0x68, 0x30, 0x00, 0x22, 0x80, 0x5E
    .byte 0x09, 0x1A, 0x21, 0x63, 0x00, 0x29, 0x70, 0xD1, 0x61, 0x46, 0x60, 0x31, 0x08, 0x78, 0x2D, 0xE0
    .byte 0x60, 0x46, 0x60, 0x30, 0x01, 0x78, 0x01, 0x31, 0x00, 0x22, 0x01, 0x70, 0x01, 0x30, 0x02, 0x70
    .byte 0x63, 0x46, 0x1A, 0x63, 0x64, 0x46, 0xA0, 0x68, 0x21, 0x6B, 0x40, 0x1A, 0xA0, 0x60, 0x11, 0x48
    .byte 0x81, 0x42, 0x03, 0xDC, 0x80, 0x22, 0x12, 0x01, 0x88, 0x18, 0x20, 0x63, 0x63, 0x46, 0x99, 0x68
    .byte 0x60, 0x46, 0x62, 0x30, 0x00, 0x24, 0x00, 0x5F, 0x00, 0x04, 0x81, 0x42, 0x4D, 0xDC, 0x98, 0x60
    .byte 0x60, 0x46, 0x64, 0x30, 0x01, 0x88, 0x49, 0x42, 0x01, 0x80, 0x61, 0x46, 0x66, 0x31, 0x08, 0x88
    .byte 0x40, 0x42, 0x08, 0x80, 0x06, 0x39, 0x08, 0x78, 0x0A, 0x28, 0x05, 0xD1, 0x01, 0x30, 0x08, 0x70
    .byte 0x3B, 0xE0, 0x00, 0x00, 0xFF, 0x7F, 0x00, 0x00, 0x01, 0x20, 0x08, 0x70, 0x35, 0xE0, 0x61, 0x46
    .byte 0x60, 0x31, 0x00, 0x22, 0x16, 0x20, 0x08, 0x70, 0x60, 0x46, 0x61, 0x30, 0x02, 0x70, 0x60, 0x46
    .byte 0x81, 0x8E, 0x0B, 0x48, 0x08, 0x40, 0x61, 0x46, 0x88, 0x86, 0x0A, 0x49, 0x60, 0x46, 0x58, 0x30
    .byte 0x01, 0x80, 0xC0, 0x20, 0x80, 0x02, 0x62, 0x46, 0x10, 0x63, 0x63, 0x46, 0x98, 0x68, 0x19, 0x6B
    .byte 0x40, 0x18, 0x98, 0x60, 0x00, 0x28, 0x09, 0xDB, 0x03, 0x4C, 0x08, 0x19, 0x18, 0x63, 0x14, 0xE0
    .byte 0xFD, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xC0, 0xFF, 0xFF, 0x61, 0x46, 0x60, 0x31
    .byte 0x00, 0x22, 0x18, 0x20, 0x08, 0x70, 0x60, 0x46, 0x61, 0x30, 0x02, 0x70, 0x60, 0x46, 0x82, 0x61
    .byte 0x81, 0x8E, 0x03, 0x48, 0x08, 0x40, 0x61, 0x46, 0x88, 0x86
_08056EA6:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0xFE, 0xFF, 0x00, 0x00
    thumb_func_start sub_8056EB0
sub_8056EB0:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08056EE4
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08056EE4
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _08056EE4
    adds r1, r3, #0x0
    adds r1, #0x60
    movs r0, #0x15
    strb r0, [r1, #0x00]
_08056EE4:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8056EE8
sub_8056EE8:
    adds r3, r0, #0x0
    ldr r0, _08056F28 @ =0x00001007
    movs r2, #0x00
    strh r0, [r3, #0x10]
    movs r0, #0x24
    movs r1, #0x40
    strb r0, [r3, #0x0C]
    strb r0, [r3, #0x0D]
    strb r1, [r3, #0x0E]
    ldr r0, _08056F2C @ =0x0805704D
    str r0, [r3, #0x18]
    ldr r0, _08056F30 @ =0x08056F61
    str r0, [r3, #0x5C]
    ldr r0, _08056F34 @ =0x080F07A8
    str r0, [r3, #0x4C]
    movs r0, #0x10
    str r0, [r3, #0x60]
    str r2, [r3, #0x64]
    movs r0, #0x80
    lsls r0, r0, #0x0C
    str r0, [r3, #0x68]
    ldr r1, [r3, #0x50]
    movs r0, #0x8D
    lsls r0, r0, #0x10
    cmp r1, r0
    beq _08056F3C
    adds r0, #0x01
    cmp r1, r0
    bne _08056F3C
    ldr r0, _08056F38 @ =0xFFFFC000
    b _08056F40
    .byte 0x00, 0x00
_08056F28: .4byte 0x00001007
_08056F2C: .4byte sub_805704C
_08056F30: .4byte sub_8056F60
_08056F34: .4byte 0x080F07A8
_08056F38: .4byte 0xFFFFC000
_08056F3C:
    movs r0, #0x80
    lsls r0, r0, #0x07
_08056F40:
    strh r0, [r3, #0x26]
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r3, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldrh r0, [r3, #0x34]
    movs r1, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r3, #0x34]
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8056F60
sub_8056F60:
    push {r4, r5, lr}
    adds r2, r0, #0x0
    ldr r0, [r2, #0x60]
    cmp r0, #0xF0
    beq _08056FF4
    cmp r0, #0xF0
    bgt _08056F78
    cmp r0, #0x10
    beq _08056F82
    cmp r0, #0x11
    beq _08056F86
    b _08057040
_08056F78:
    cmp r0, #0xF2
    beq _08057030
    cmp r0, #0xF2
    blt _0805700E
    b _08057040
_08056F82:
    movs r0, #0x11
    str r0, [r2, #0x60]
_08056F86:
    ldr r3, [r2, #0x64]
    ldr r1, _08056FD4 @ =0x080E645C
    lsls r0, r3, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _08056F94
    adds r0, #0x3F
_08056F94:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    ldr r1, [r2, #0x68]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    movs r1, #0x80
    lsls r1, r1, #0x03
    adds r0, r3, r1
    str r0, [r2, #0x64]
    ldr r4, _08056FD8 @ =0x080F07A8
    ldr r3, _08056FDC @ =0x080F07C8
    ldr r0, _08056FE0 @ =0x03002E20
    ldr r5, _08056FE4 @ =0x00000848
    adds r0, r0, r5
    movs r5, #0x26
    ldsh r1, [r2, r5]
    movs r5, #0x14
    ldsh r0, [r0, r5]
    subs r1, r1, r0
    ldr r0, _08056FE8 @ =0x0000FFFF
    ands r1, r0
    ldr r0, _08056FEC @ =0x00007FFF
    cmp r1, r0
    bgt _08056FF0
    str r4, [r2, #0x4C]
    b _08057040
    .byte 0x00, 0x00
_08056FD4: .4byte 0x080E645C
_08056FD8: .4byte 0x080F07A8
_08056FDC: .4byte 0x080F07C8
_08056FE0: .4byte 0x03002E20
_08056FE4: .4byte 0x00000848
_08056FE8: .4byte 0x0000FFFF
_08056FEC: .4byte 0x00007FFF
_08056FF0:
    str r3, [r2, #0x4C]
    b _08057040
_08056FF4:
    movs r0, #0xF1
    str r0, [r2, #0x60]
    ldrh r1, [r2, #0x34]
    ldr r0, _08057024 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x34]
    ldr r1, _08057028 @ =0xFFFFFF00
    adds r0, r2, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
    movs r0, #0xC0
    lsls r0, r0, #0x0A
    str r0, [r2, #0x30]
_0805700E:
    ldr r0, [r2, #0x08]
    ldr r1, [r2, #0x30]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    cmp r0, #0x00
    blt _08057030
    ldr r3, _0805702C @ =0xFFFFC000
    adds r0, r1, r3
    str r0, [r2, #0x30]
    b _08057040
    .byte 0x00, 0x00
_08057024: .4byte 0x0000FFFD
_08057028: .4byte 0xFFFFFF00
_0805702C: .4byte 0xFFFFC000
_08057030:
    movs r0, #0xF3
    str r0, [r2, #0x60]
    movs r0, #0x00
    str r0, [r2, #0x18]
    ldrh r1, [r2, #0x34]
    ldr r0, _08057048 @ =0x0000FFFE
    ands r0, r1
    strh r0, [r2, #0x34]
_08057040:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08057048: .4byte 0x0000FFFE
    thumb_func_start sub_805704C
sub_805704C:
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08057070
    movs r0, #0xCA
    lsls r0, r0, #0x01
    adds r2, r2, r0
    ldrh r1, [r2, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x08
    adds r0, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
_08057070:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8057074
sub_8057074:
    adds r3, r0, #0x0
    ldr r0, _080570A8 @ =0x00001009
    movs r2, #0x00
    strh r0, [r3, #0x10]
    movs r0, #0x08
    strb r0, [r3, #0x0E]
    strb r0, [r3, #0x0D]
    strb r0, [r3, #0x0C]
    ldr r0, _080570AC @ =0x08057229
    str r0, [r3, #0x18]
    ldr r0, _080570B0 @ =0x080570B9
    str r0, [r3, #0x5C]
    ldrh r1, [r3, #0x34]
    ldr r0, _080570B4 @ =0x0000FFFE
    ands r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r3, #0x34]
    movs r1, #0xE0
    adds r0, r3, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    str r2, [r3, #0x60]
    bx lr
_080570A8: .4byte 0x00001009
_080570AC: .4byte sub_8057228
_080570B0: .4byte sub_80570B8
_080570B4: .4byte 0x0000FFFE
    thumb_func_start sub_80570B8
sub_80570B8:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    adds r2, r4, #0x0
    ldr r0, _080570E0 @ =0x03002E20
    adds r3, r0, #0x0
    adds r3, #0x24
    ldr r0, [r4, #0x60]
    cmp r0, #0x11
    beq _08057134
    cmp r0, #0x11
    bgt _080570EA
    cmp r0, #0x01
    bne _080570D4
    b _0805721C
_080570D4:
    cmp r0, #0x01
    bgt _080570E4
    cmp r0, #0x00
    beq _08057102
    b _0805721C
    .byte 0x00, 0x00
_080570E0: .4byte 0x03002E20
_080570E4:
    cmp r0, #0x10
    beq _08057118
    b _0805721C
_080570EA:
    cmp r0, #0xF1
    bne _080570F0
    b _080571EA
_080570F0:
    cmp r0, #0xF1
    bgt _080570FA
    cmp r0, #0xF0
    beq _080571D0
    b _0805721C
_080570FA:
    cmp r0, #0xF2
    bne _08057100
    b _0805720C
_08057100:
    b _0805721C
_08057102:
    movs r0, #0x01
    str r0, [r4, #0x60]
    ldrh r1, [r4, #0x34]
    ldr r0, _08057114 @ =0x0000FFFE
    ands r0, r1
    movs r1, #0x02
    orrs r0, r1
    b _0805721A
    .byte 0x00, 0x00
_08057114: .4byte 0x0000FFFE
_08057118:
    movs r0, #0x11
    str r0, [r4, #0x60]
    movs r0, #0x04
    str r0, [r4, #0x64]
    movs r0, #0x00
    str r0, [r4, #0x68]
    ldrh r1, [r4, #0x34]
    movs r0, #0x01
    orrs r0, r1
    ldr r1, _08057140 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r4, #0x34]
    ldr r0, _08057144 @ =0x080F0588
    str r0, [r4, #0x4C]
_08057134:
    ldr r6, [r4, #0x64]
    ldr r5, [r4, #0x68]
    cmp r6, #0x00
    ble _08057148
    subs r6, #0x01
    b _080571C4
_08057140: .4byte 0x0000FFFD
_08057144: .4byte 0x080F0588
_08057148:
    adds r5, #0x01
    cmp r5, #0x02
    bne _08057170
    ldr r1, [r4, #0x6C]
    ldr r2, _0805717C @ =0x00000814
    adds r0, r3, r2
    ldr r0, [r0, #0x00]
    cmp r1, r0
    bne _0805716C
    ldr r0, [r1, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0805716C
    movs r0, #0xBD
    lsls r0, r0, #0x01
    bl m4aSongNumStart
_0805716C:
    cmp r5, #0x02
    beq _08057198
_08057170:
    cmp r5, #0x02
    bgt _08057180
    cmp r5, #0x01
    beq _0805718A
    b _080571BC
    .byte 0x00, 0x00
_0805717C: .4byte 0x00000814
_08057180:
    cmp r5, #0x03
    beq _080571A4
    cmp r5, #0x04
    beq _080571B0
    b _080571BC
_0805718A:
    movs r6, #0x03
    ldr r0, _08057194 @ =0x080F05A8
    str r0, [r4, #0x4C]
    b _080571C4
    .byte 0x00, 0x00
_08057194: .4byte 0x080F05A8
_08057198:
    movs r6, #0x06
    ldr r0, _080571A0 @ =0x080F05C8
    str r0, [r4, #0x4C]
    b _080571C4
_080571A0: .4byte 0x080F05C8
_080571A4:
    movs r6, #0x04
    ldr r0, _080571AC @ =0x080F0608
    str r0, [r4, #0x4C]
    b _080571C4
_080571AC: .4byte 0x080F0608
_080571B0:
    movs r6, #0x02
    ldr r0, _080571B8 @ =0x080F05E8
    str r0, [r4, #0x4C]
    b _080571C4
_080571B8: .4byte 0x080F05E8
_080571BC:
    ldr r0, _080571CC @ =0x080F05E8
    str r0, [r4, #0x4C]
    movs r0, #0x00
    str r0, [r4, #0x60]
_080571C4:
    str r6, [r4, #0x64]
    str r5, [r4, #0x68]
    b _0805721C
    .byte 0x00, 0x00
_080571CC: .4byte 0x080F05E8
_080571D0:
    movs r0, #0xF1
    str r0, [r4, #0x60]
    ldrh r1, [r4, #0x34]
    ldr r0, _08057200 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r4, #0x34]
    ldr r1, _08057204 @ =0xFFFFFF00
    adds r0, r4, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
    movs r0, #0xC0
    lsls r0, r0, #0x0A
    str r0, [r4, #0x30]
_080571EA:
    ldr r0, [r2, #0x08]
    ldr r1, [r4, #0x30]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    cmp r0, #0x00
    blt _0805720C
    ldr r0, [r4, #0x30]
    ldr r1, _08057208 @ =0xFFFFC000
    adds r0, r0, r1
    str r0, [r4, #0x30]
    b _0805721C
_08057200: .4byte 0x0000FFFD
_08057204: .4byte 0xFFFFFF00
_08057208: .4byte 0xFFFFC000
_0805720C:
    movs r0, #0xF3
    str r0, [r4, #0x60]
    movs r0, #0x00
    str r0, [r2, #0x18]
    ldrh r1, [r4, #0x34]
    ldr r0, _08057224 @ =0x0000FFFE
    ands r0, r1
_0805721A:
    strh r0, [r4, #0x34]
_0805721C:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08057224: .4byte 0x0000FFFE
    thumb_func_start sub_8057228
sub_8057228:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    adds r3, r1, #0x0
    ldr r2, _08057270 @ =0x03002E20
    adds r5, r2, #0x0
    adds r5, #0x24
    ldrh r0, [r3, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08057296
    adds r0, r3, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08057296
    ldr r0, _08057274 @ =0x00000C12
    adds r2, r2, r0
    ldrh r1, [r2, #0x00]
    movs r0, #0x01
    orrs r0, r1
    strh r0, [r2, #0x00]
    str r3, [r4, #0x6C]
    adds r0, r3, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _08057278
    movs r0, #0xF0
    b _0805727A
    .byte 0x00, 0x00
_08057270: .4byte 0x03002E20
_08057274: .4byte 0x00000C12
_08057278:
    movs r0, #0x10
_0805727A:
    str r0, [r4, #0x60]
    ldr r1, _0805729C @ =0x00000814
    adds r0, r5, r1
    ldr r0, [r0, #0x00]
    cmp r3, r0
    bne _08057296
    ldr r0, [r3, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08057296
    ldr r0, _080572A0 @ =0x00000175
    bl m4aSongNumStart
_08057296:
    pop {r4, r5}
    pop {r0}
    bx r0
_0805729C: .4byte 0x00000814
_080572A0: .4byte 0x00000175
    thumb_func_start sub_80572A4
sub_80572A4:
    adds r2, r0, #0x0
    ldr r0, _080572D8 @ =0x0000100B
    movs r1, #0x00
    strh r0, [r2, #0x10]
    ldr r0, _080572DC @ =0x080F06E8
    str r0, [r2, #0x4C]
    str r1, [r2, #0x60]
    str r1, [r2, #0x64]
    str r1, [r2, #0x08]
    ldr r0, _080572E0 @ =0x080572E5
    str r0, [r2, #0x5C]
    movs r0, #0xA0
    adds r1, r2, #0x0
    adds r1, #0x56
    strh r0, [r1, #0x00]
    movs r1, #0x80
    adds r0, r2, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
    ldrh r0, [r2, #0x34]
    movs r1, #0x02
    orrs r0, r1
    movs r1, #0x01
    orrs r0, r1
    strh r0, [r2, #0x34]
    bx lr
_080572D8: .4byte 0x0000100B
_080572DC: .4byte 0x080F06E8
_080572E0: .4byte sub_80572E4
    thumb_func_start sub_80572E4
sub_80572E4:
    push {r4, lr}
    adds r2, r0, #0x0
    ldr r4, [r2, #0x60]
    ldr r3, [r2, #0x64]
    adds r4, #0x01
    cmp r4, #0x05
    ble _08057354
    movs r4, #0x00
    adds r3, #0x01
    cmp r3, #0x05
    ble _080572FC
    movs r3, #0x00
_080572FC:
    cmp r3, #0x05
    bhi _08057350
    lsls r0, r3, #0x02
    ldr r1, _0805730C @ =0x08057310
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_0805730C: .4byte 0x08057310
    .byte 0x50, 0x73, 0x05, 0x08, 0x48, 0x73, 0x05, 0x08, 0x40, 0x73, 0x05, 0x08, 0x38, 0x73, 0x05, 0x08
    .byte 0x30, 0x73, 0x05, 0x08, 0x28, 0x73, 0x05, 0x08, 0x00, 0x48, 0x12, 0xE0, 0x88, 0x07, 0x0F, 0x08
    .byte 0x00, 0x48, 0x0E, 0xE0, 0x68, 0x07, 0x0F, 0x08, 0x00, 0x48, 0x0A, 0xE0, 0x48, 0x07, 0x0F, 0x08
    .byte 0x00, 0x48, 0x06, 0xE0, 0x28, 0x07, 0x0F, 0x08, 0x00, 0x48, 0x02, 0xE0, 0x08, 0x07, 0x0F, 0x08
_08057350:
    ldr r0, _08057360 @ =0x080F06E8
    str r0, [r2, #0x4C]
_08057354:
    str r4, [r2, #0x60]
    str r3, [r2, #0x64]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08057360: .4byte 0x080F06E8
    thumb_func_start sub_8057364
sub_8057364:
    adds r2, r0, #0x0
    ldr r0, _080573A8 @ =0x0000100C
    movs r1, #0x00
    strh r0, [r2, #0x10]
    movs r0, #0x08
    strb r0, [r2, #0x0E]
    strb r0, [r2, #0x0D]
    strb r0, [r2, #0x0C]
    ldr r0, _080573AC @ =0x08057555
    str r0, [r2, #0x18]
    ldr r0, _080573B0 @ =0x080573B9
    str r0, [r2, #0x5C]
    ldr r0, _080573B4 @ =0x080F0528
    str r0, [r2, #0x4C]
    str r1, [r2, #0x60]
    str r1, [r2, #0x64]
    str r1, [r2, #0x68]
    movs r0, #0x80
    lsls r0, r0, #0x07
    strh r0, [r2, #0x26]
    movs r1, #0xE0
    adds r0, r2, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldrh r0, [r2, #0x34]
    movs r1, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r2, #0x34]
    bx lr
    .byte 0x00, 0x00
_080573A8: .4byte 0x0000100C
_080573AC: .4byte sub_8057554
_080573B0: .4byte sub_80573B8
_080573B4: .4byte 0x080F0528
    thumb_func_start sub_80573B8
sub_80573B8:
    adds r2, r0, #0x0
    ldr r3, [r2, #0x60]
    cmp r3, #0x11
    beq _08057452
    cmp r3, #0x11
    bgt _080573D8
    cmp r3, #0x01
    beq _08057404
    cmp r3, #0x01
    bgt _080573D2
    cmp r3, #0x00
    beq _080573F2
    b _0805754C
_080573D2:
    cmp r3, #0x10
    beq _08057448
    b _0805754C
_080573D8:
    cmp r3, #0xF1
    bne _080573DE
    b _0805751A
_080573DE:
    cmp r3, #0xF1
    bgt _080573EA
    cmp r3, #0xF0
    bne _080573E8
    b _08057500
_080573E8:
    b _0805754C
_080573EA:
    cmp r3, #0xF2
    bne _080573F0
    b _0805753C
_080573F0:
    b _0805754C
_080573F2:
    movs r0, #0x01
    str r0, [r2, #0x60]
    ldrh r1, [r2, #0x34]
    movs r0, #0x02
    orrs r0, r1
    strh r0, [r2, #0x34]
    ldr r0, _08057424 @ =0x080F0528
    str r0, [r2, #0x4C]
    str r3, [r2, #0x08]
_08057404:
    ldr r0, _08057428 @ =0x03002E20
    ldr r1, _0805742C @ =0x00000848
    adds r0, r0, r1
    movs r3, #0x26
    ldsh r1, [r2, r3]
    movs r3, #0x14
    ldsh r0, [r0, r3]
    subs r1, r1, r0
    ldr r0, _08057430 @ =0x0000FFFF
    ands r1, r0
    ldr r0, _08057434 @ =0x00007FFF
    cmp r1, r0
    bgt _08057438
    movs r1, #0x80
    lsls r1, r1, #0x01
    b _0805743A
_08057424: .4byte 0x080F0528
_08057428: .4byte 0x03002E20
_0805742C: .4byte 0x00000848
_08057430: .4byte 0x0000FFFF
_08057434: .4byte 0x00007FFF
_08057438:
    ldr r1, _08057444 @ =0xFFFFFF00
_0805743A:
    adds r0, r2, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    b _0805754C
    .byte 0x00, 0x00
_08057444: .4byte 0xFFFFFF00
_08057448:
    movs r0, #0x11
    str r0, [r2, #0x60]
    movs r0, #0x00
    str r0, [r2, #0x64]
    str r0, [r2, #0x68]
_08057452:
    ldr r0, _08057474 @ =0x03002E20
    ldr r1, _08057478 @ =0x00000848
    adds r0, r0, r1
    movs r3, #0x26
    ldsh r1, [r2, r3]
    movs r3, #0x14
    ldsh r0, [r0, r3]
    subs r1, r1, r0
    ldr r0, _0805747C @ =0x0000FFFF
    ands r1, r0
    ldr r0, _08057480 @ =0x00007FFF
    cmp r1, r0
    bgt _08057484
    movs r0, #0x80
    lsls r0, r0, #0x01
    b _08057486
    .byte 0x00, 0x00
_08057474: .4byte 0x03002E20
_08057478: .4byte 0x00000848
_0805747C: .4byte 0x0000FFFF
_08057480: .4byte 0x00007FFF
_08057484:
    ldr r0, _08057498 @ =0xFFFFFF00
_08057486:
    adds r1, r2, #0x0
    adds r1, #0x56
    strh r0, [r1, #0x00]
    ldr r0, [r2, #0x64]
    cmp r0, #0x03
    bgt _0805749C
    adds r0, #0x01
    str r0, [r2, #0x64]
    b _080574A6
_08057498: .4byte 0xFFFFFF00
_0805749C:
    movs r0, #0x00
    str r0, [r2, #0x64]
    ldr r0, [r2, #0x68]
    adds r0, #0x01
    str r0, [r2, #0x68]
_080574A6:
    ldr r1, [r2, #0x68]
    cmp r1, #0x07
    bgt _080574D0
    cmp r1, #0x00
    blt _080574D0
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _080574C4
    ldr r0, _080574C0 @ =0x080F0568
    str r0, [r2, #0x4C]
    b _080574D4
    .byte 0x00, 0x00
_080574C0: .4byte 0x080F0568
_080574C4:
    ldr r0, _080574CC @ =0x080F0548
    str r0, [r2, #0x4C]
    b _080574D4
    .byte 0x00, 0x00
_080574CC: .4byte 0x080F0548
_080574D0:
    movs r0, #0x00
    str r0, [r2, #0x60]
_080574D4:
    lsls r0, r1, #0x02
    ldr r1, [r2, #0x64]
    adds r0, r0, r1
    ldr r1, _080574FC @ =0x080E645C
    lsls r0, r0, #0x1A
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _080574E6
    adds r0, #0x3F
_080574E6:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x02
    adds r0, r0, r1
    lsls r0, r0, #0x02
    str r0, [r2, #0x08]
    b _0805754C
    .byte 0x00, 0x00
_080574FC: .4byte 0x080E645C
_08057500:
    movs r0, #0xF1
    str r0, [r2, #0x60]
    ldrh r1, [r2, #0x34]
    ldr r0, _08057530 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x34]
    ldr r1, _08057534 @ =0xFFFFFF00
    adds r0, r2, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
    movs r0, #0xC0
    lsls r0, r0, #0x0A
    str r0, [r2, #0x30]
_0805751A:
    ldr r0, [r2, #0x08]
    ldr r1, [r2, #0x30]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    cmp r0, #0x00
    blt _0805753C
    ldr r3, _08057538 @ =0xFFFFC000
    adds r0, r1, r3
    str r0, [r2, #0x30]
    b _0805754C
    .byte 0x00, 0x00
_08057530: .4byte 0x0000FFFD
_08057534: .4byte 0xFFFFFF00
_08057538: .4byte 0xFFFFC000
_0805753C:
    movs r0, #0xF3
    str r0, [r2, #0x60]
    movs r0, #0x00
    str r0, [r2, #0x18]
    ldrh r1, [r2, #0x34]
    ldr r0, _08057550 @ =0x0000FFFE
    ands r0, r1
    strh r0, [r2, #0x34]
_0805754C:
    bx lr
    .byte 0x00, 0x00
_08057550: .4byte 0x0000FFFE
    thumb_func_start sub_8057554
sub_8057554:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08057592
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08057592
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _08057584
    movs r0, #0xF0
    b _08057590
_08057584:
    ldr r0, [r3, #0x60]
    movs r1, #0xF0
    ands r0, r1
    cmp r0, #0x00
    bne _08057592
    movs r0, #0x10
_08057590:
    str r0, [r3, #0x60]
_08057592:
    bx lr
    thumb_func_start sub_8057594
sub_8057594:
    adds r2, r0, #0x0
    ldr r0, _080575D8 @ =0x0000100D
    movs r1, #0x00
    strh r0, [r2, #0x10]
    movs r0, #0x08
    strb r0, [r2, #0x0E]
    strb r0, [r2, #0x0D]
    strb r0, [r2, #0x0C]
    ldr r0, _080575DC @ =0x080576B5
    str r0, [r2, #0x18]
    ldr r0, _080575E0 @ =0x080575E9
    str r0, [r2, #0x5C]
    ldr r0, _080575E4 @ =0x080F0848
    str r0, [r2, #0x4C]
    str r1, [r2, #0x60]
    str r1, [r2, #0x64]
    str r1, [r2, #0x68]
    movs r0, #0x80
    lsls r0, r0, #0x07
    strh r0, [r2, #0x26]
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r2, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldrh r0, [r2, #0x34]
    movs r1, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r2, #0x34]
    bx lr
_080575D8: .4byte 0x0000100D
_080575DC: .4byte sub_80576B4
_080575E0: .4byte sub_80575E8
_080575E4: .4byte 0x080F0848
    thumb_func_start sub_80575E8
sub_80575E8:
    adds r2, r0, #0x0
    ldr r3, [r2, #0x60]
    cmp r3, #0xF0
    beq _08057660
    cmp r3, #0xF0
    bgt _080575FE
    cmp r3, #0x00
    beq _08057608
    cmp r3, #0x01
    beq _0805761A
    b _080576AC
_080575FE:
    cmp r3, #0xF2
    beq _0805769C
    cmp r3, #0xF2
    blt _0805767A
    b _080576AC
_08057608:
    movs r0, #0x01
    str r0, [r2, #0x60]
    ldrh r1, [r2, #0x34]
    movs r0, #0x02
    orrs r0, r1
    strh r0, [r2, #0x34]
    ldr r0, _0805763C @ =0x080F0848
    str r0, [r2, #0x4C]
    str r3, [r2, #0x08]
_0805761A:
    ldr r0, _08057640 @ =0x03002E20
    ldr r1, _08057644 @ =0x00000848
    adds r0, r0, r1
    movs r3, #0x26
    ldsh r1, [r2, r3]
    movs r3, #0x14
    ldsh r0, [r0, r3]
    subs r1, r1, r0
    ldr r0, _08057648 @ =0x0000FFFF
    ands r1, r0
    ldr r0, _0805764C @ =0x00007FFF
    cmp r1, r0
    bgt _08057650
    movs r1, #0x80
    lsls r1, r1, #0x01
    b _08057652
    .byte 0x00, 0x00
_0805763C: .4byte 0x080F0848
_08057640: .4byte 0x03002E20
_08057644: .4byte 0x00000848
_08057648: .4byte 0x0000FFFF
_0805764C: .4byte 0x00007FFF
_08057650:
    ldr r1, _0805765C @ =0xFFFFFF00
_08057652:
    adds r0, r2, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    b _080576AC
    .byte 0x00, 0x00
_0805765C: .4byte 0xFFFFFF00
_08057660:
    movs r0, #0xF1
    str r0, [r2, #0x60]
    ldrh r1, [r2, #0x34]
    ldr r0, _08057690 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x34]
    ldr r1, _08057694 @ =0xFFFFFF00
    adds r0, r2, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
    movs r0, #0xC0
    lsls r0, r0, #0x0A
    str r0, [r2, #0x30]
_0805767A:
    ldr r0, [r2, #0x08]
    ldr r1, [r2, #0x30]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    cmp r0, #0x00
    blt _0805769C
    ldr r3, _08057698 @ =0xFFFFC000
    adds r0, r1, r3
    str r0, [r2, #0x30]
    b _080576AC
    .byte 0x00, 0x00
_08057690: .4byte 0x0000FFFD
_08057694: .4byte 0xFFFFFF00
_08057698: .4byte 0xFFFFC000
_0805769C:
    movs r0, #0xF3
    str r0, [r2, #0x60]
    movs r0, #0x00
    str r0, [r2, #0x18]
    ldrh r1, [r2, #0x34]
    ldr r0, _080576B0 @ =0x0000FFFE
    ands r0, r1
    strh r0, [r2, #0x34]
_080576AC:
    bx lr
    .byte 0x00, 0x00
_080576B0: .4byte 0x0000FFFE
    thumb_func_start sub_80576B4
sub_80576B4:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _080576E4
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _080576E4
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _080576E4
    movs r0, #0xF0
    str r0, [r3, #0x60]
_080576E4:
    bx lr
    .byte 0x00, 0x00, 0x02, 0x1C, 0x0D, 0x48, 0x10, 0x82, 0x08, 0x20, 0x90, 0x73, 0x50, 0x73, 0x10, 0x73
    .byte 0x0B, 0x48, 0x90, 0x61, 0x0B, 0x48, 0xD0, 0x65, 0x0B, 0x48, 0xD0, 0x64, 0x80, 0x20, 0xC0, 0x01
    .byte 0xD0, 0x84, 0x80, 0x21, 0x49, 0x00, 0x10, 0x1C, 0x56, 0x30, 0x01, 0x80, 0x02, 0x30, 0x01, 0x80
    .byte 0x91, 0x8E, 0x01, 0x20, 0x08, 0x43, 0x90, 0x86, 0x70, 0x47, 0x0E, 0x10, 0x00, 0x00, 0x31, 0x77
    .byte 0x05, 0x08, 0x35, 0x77, 0x05, 0x08, 0xA8, 0x08, 0x0F, 0x08, 0x70, 0x47, 0x00, 0x00
    thumb_func_start sub_8057734
sub_8057734:
    adds r2, r0, #0x0
    ldr r0, _08057758 @ =0x03002E20
    ldr r1, _0805775C @ =0x00000848
    adds r0, r0, r1
    movs r3, #0x26
    ldsh r1, [r2, r3]
    movs r3, #0x14
    ldsh r0, [r0, r3]
    subs r1, r1, r0
    ldr r0, _08057760 @ =0x0000FFFF
    ands r1, r0
    ldr r0, _08057764 @ =0x00007FFF
    cmp r1, r0
    bgt _08057768
    movs r1, #0x80
    lsls r1, r1, #0x01
    b _0805776A
    .byte 0x00, 0x00
_08057758: .4byte 0x03002E20
_0805775C: .4byte 0x00000848
_08057760: .4byte 0x0000FFFF
_08057764: .4byte 0x00007FFF
_08057768:
    ldr r1, _08057774 @ =0xFFFFFF00
_0805776A:
    adds r0, r2, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
_08057774: .4byte 0xFFFFFF00
    .byte 0x02, 0x1C, 0x0D, 0x48, 0x10, 0x82, 0x08, 0x20, 0x90, 0x73, 0x50, 0x73, 0x10, 0x73, 0x0B, 0x48
    .byte 0x90, 0x61, 0x0B, 0x48, 0xD0, 0x65, 0x0B, 0x48, 0xD0, 0x64, 0x80, 0x20, 0xC0, 0x01, 0xD0, 0x84
    .byte 0x80, 0x21, 0x49, 0x00, 0x10, 0x1C, 0x56, 0x30, 0x01, 0x80, 0x02, 0x30, 0x01, 0x80, 0x91, 0x8E
    .byte 0x01, 0x20, 0x08, 0x43, 0x90, 0x86, 0x70, 0x47, 0x0F, 0x10, 0x00, 0x00, 0xC1, 0x77, 0x05, 0x08
    .byte 0xC5, 0x77, 0x05, 0x08, 0xC8, 0x08, 0x0F, 0x08, 0x70, 0x47, 0x00, 0x00
    thumb_func_start sub_80577C4
sub_80577C4:
    adds r2, r0, #0x0
    ldr r0, _080577E8 @ =0x03002E20
    ldr r1, _080577EC @ =0x00000848
    adds r0, r0, r1
    movs r3, #0x26
    ldsh r1, [r2, r3]
    movs r3, #0x14
    ldsh r0, [r0, r3]
    subs r1, r1, r0
    ldr r0, _080577F0 @ =0x0000FFFF
    ands r1, r0
    ldr r0, _080577F4 @ =0x00007FFF
    cmp r1, r0
    bgt _080577F8
    movs r1, #0x80
    lsls r1, r1, #0x01
    b _080577FA
    .byte 0x00, 0x00
_080577E8: .4byte 0x03002E20
_080577EC: .4byte 0x00000848
_080577F0: .4byte 0x0000FFFF
_080577F4: .4byte 0x00007FFF
_080577F8:
    ldr r1, _08057804 @ =0xFFFFFF00
_080577FA:
    adds r0, r2, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
_08057804: .4byte 0xFFFFFF00
    thumb_func_start sub_8057808
sub_8057808:
    adds r2, r0, #0x0
    ldr r0, _08057868 @ =0x00001010
    strh r0, [r2, #0x10]
    movs r0, #0x20
    strb r0, [r2, #0x0E]
    strb r0, [r2, #0x0D]
    strb r0, [r2, #0x0C]
    ldr r0, _0805786C @ =0x0805787D
    str r0, [r2, #0x5C]
    ldr r1, [r2, #0x50]
    movs r0, #0x8F
    lsls r0, r0, #0x10
    cmp r1, r0
    blt _08057836
    adds r0, #0x01
    cmp r1, r0
    bgt _08057836
    ldr r0, _08057870 @ =0x080F08E8
    str r0, [r2, #0x4C]
    movs r0, #0x01
    str r0, [r2, #0x60]
    movs r0, #0x00
    str r0, [r2, #0x64]
_08057836:
    ldr r0, _08057874 @ =0x080F0968
    str r0, [r2, #0x4C]
    movs r0, #0x01
    str r0, [r2, #0x60]
    movs r0, #0x20
    str r0, [r2, #0x64]
    movs r0, #0x00
    str r0, [r2, #0x68]
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r2, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldrh r1, [r2, #0x34]
    movs r0, #0x01
    orrs r0, r1
    ldr r1, _08057878 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x34]
    movs r0, #0x80
    lsls r0, r0, #0x0B
    str r0, [r2, #0x08]
    bx lr
_08057868: .4byte 0x00001010
_0805786C: .4byte sub_805787C
_08057870: .4byte 0x080F08E8
_08057874: .4byte 0x080F0968
_08057878: .4byte 0x0000FFFD
    thumb_func_start sub_805787C
sub_805787C:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    ldr r0, [r4, #0x60]
    cmp r0, #0x01
    bne _08057888
    b _080579F8
_08057888:
    cmp r0, #0x01
    bgt _08057896
    cmp r0, #0x00
    bne _08057892
    b _080579D4
_08057892:
    ldr r5, [r4, #0x50]
    b _08057A08
_08057896:
    cmp r0, #0x10
    beq _080578A2
    cmp r0, #0x11
    beq _080578AA
    ldr r5, [r4, #0x50]
    b _08057A08
_080578A2:
    movs r0, #0x11
    str r0, [r4, #0x60]
    movs r0, #0x00
    str r0, [r4, #0x64]
_080578AA:
    ldr r3, [r4, #0x64]
    cmp r3, #0xAA
    beq _08057954
    cmp r3, #0xAA
    bgt _080578F0
    cmp r3, #0x5E
    beq _08057970
    cmp r3, #0x5E
    bgt _080578D4
    cmp r3, #0x3C
    beq _08057970
    cmp r3, #0x3C
    bgt _080578CC
    cmp r3, #0x00
    beq _08057994
    ldr r5, [r4, #0x50]
    b _080579C0
_080578CC:
    cmp r3, #0x40
    beq _0805799C
    ldr r5, [r4, #0x50]
    b _080579C0
_080578D4:
    cmp r3, #0x9E
    beq _08057970
    cmp r3, #0x9E
    bgt _080578E4
    cmp r3, #0x62
    beq _0805799C
    ldr r5, [r4, #0x50]
    b _080579C0
_080578E4:
    cmp r3, #0xA2
    beq _0805799C
    cmp r3, #0xA6
    beq _08057970
    ldr r5, [r4, #0x50]
    b _080579C0
_080578F0:
    ldr r5, [r4, #0x50]
    cmp r3, #0xD2
    beq _080579C0
    cmp r3, #0xD2
    ble _080579C0
    cmp r3, #0xDE
    beq _080579C0
    cmp r3, #0xDE
    ble _080579C0
    cmp r3, #0xE2
    beq _0805790C
    cmp r3, #0xEA
    beq _0805792C
    b _080579C0
_0805790C:
    movs r0, #0x02
    negs r0, r0
    ands r0, r5
    movs r1, #0x8F
    lsls r1, r1, #0x10
    cmp r0, r1
    bne _08057924
    ldr r0, _08057920 @ =0x080F0928
    b _080579BE
    .byte 0x00, 0x00
_08057920: .4byte 0x080F0928
_08057924:
    ldr r0, _08057928 @ =0x080F09A8
    b _080579BE
_08057928: .4byte 0x080F09A8
_0805792C:
    ldrh r1, [r4, #0x34]
    movs r0, #0x02
    orrs r0, r1
    strh r0, [r4, #0x34]
    movs r0, #0x02
    negs r0, r0
    ands r0, r5
    movs r1, #0x8F
    lsls r1, r1, #0x10
    cmp r0, r1
    bne _0805794C
    ldr r0, _08057948 @ =0x080F0948
    b _080579BE
    .byte 0x00, 0x00
_08057948: .4byte 0x080F0948
_0805794C:
    ldr r0, _08057950 @ =0x080F09C8
    b _080579BE
_08057950: .4byte 0x080F09C8
_08057954:
    ldr r0, [r4, #0x50]
    movs r1, #0x02
    negs r1, r1
    ands r1, r0
    movs r2, #0x8F
    lsls r2, r2, #0x10
    adds r5, r0, #0x0
    cmp r1, r2
    bne _080579BC
    ldr r0, _0805796C @ =0x080F08E8
    b _080579BE
    .byte 0x00, 0x00
_0805796C: .4byte 0x080F08E8
_08057970:
    ldr r0, [r4, #0x50]
    movs r1, #0x02
    negs r1, r1
    ands r1, r0
    movs r2, #0x8F
    lsls r2, r2, #0x10
    adds r5, r0, #0x0
    cmp r1, r2
    bne _0805798C
    ldr r0, _08057988 @ =0x080F0908
    b _080579BE
    .byte 0x00, 0x00
_08057988: .4byte 0x080F0908
_0805798C:
    ldr r0, _08057990 @ =0x080F0988
    b _080579BE
_08057990: .4byte 0x080F0988
_08057994:
    ldrh r1, [r4, #0x34]
    ldr r0, _080579B4 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r4, #0x34]
_0805799C:
    ldr r0, [r4, #0x50]
    movs r1, #0x02
    negs r1, r1
    ands r1, r0
    movs r2, #0x8F
    lsls r2, r2, #0x10
    adds r5, r0, #0x0
    cmp r1, r2
    bne _080579BC
    ldr r0, _080579B8 @ =0x080F08E8
    b _080579BE
    .byte 0x00, 0x00
_080579B4: .4byte 0x0000FFFD
_080579B8: .4byte 0x080F08E8
_080579BC:
    ldr r0, _080579D0 @ =0x080F0968
_080579BE:
    str r0, [r4, #0x4C]
_080579C0:
    adds r0, r3, #0x1
    str r0, [r4, #0x64]
    cmp r0, #0xF1
    ble _08057A08
    movs r0, #0x00
    str r0, [r4, #0x64]
    b _08057A08
    .byte 0x00, 0x00
_080579D0: .4byte 0x080F0968
_080579D4:
    movs r0, #0x01
    str r0, [r4, #0x60]
    ldr r0, [r4, #0x50]
    movs r1, #0x02
    negs r1, r1
    ands r0, r1
    movs r1, #0x8F
    lsls r1, r1, #0x10
    cmp r0, r1
    bne _080579F0
    ldr r0, _080579EC @ =0x080F08E8
    b _080579F2
_080579EC: .4byte 0x080F08E8
_080579F0:
    ldr r0, _08057A38 @ =0x080F0968
_080579F2:
    str r0, [r4, #0x4C]
    movs r0, #0x20
    str r0, [r4, #0x64]
_080579F8:
    ldr r0, [r4, #0x64]
    subs r0, #0x01
    str r0, [r4, #0x64]
    ldr r5, [r4, #0x50]
    cmp r0, #0x00
    bge _08057A08
    movs r0, #0x10
    str r0, [r4, #0x60]
_08057A08:
    movs r0, #0x01
    ands r0, r5
    cmp r0, #0x00
    beq _08057A12
    b _08057AF8
_08057A12:
    ldr r0, [r4, #0x60]
    movs r1, #0xF0
    ands r0, r1
    cmp r0, #0x10
    bne _08057AF8
    movs r0, #0x02
    negs r0, r0
    ands r0, r5
    movs r1, #0x8F
    lsls r1, r1, #0x10
    cmp r0, r1
    bne _08057A3C
    movs r0, #0x01
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r1, #0x22
    b _08057A46
    .byte 0x00, 0x00
_08057A38: .4byte 0x080F0968
_08057A3C:
    movs r0, #0x01
    bl pltt_getBuffer
    adds r1, r0, #0x0
    adds r1, #0x42
_08057A46:
    ldr r0, [r4, #0x68]
    cmp r0, #0xAA
    beq _08057A94
    cmp r0, #0xAA
    bgt _08057A66
    cmp r0, #0x5E
    beq _08057AE4
    cmp r0, #0x5E
    bgt _08057AE4
    cmp r0, #0x3C
    beq _08057AE4
    cmp r0, #0x3C
    bgt _08057AE4
    cmp r0, #0x00
    beq _08057ADC
    b _08057AE4
_08057A66:
    cmp r0, #0xD2
    beq _08057ABC
    cmp r0, #0xD2
    bgt _08057A86
    cmp r0, #0xBA
    beq _08057AA4
    cmp r0, #0xBA
    bgt _08057A7C
    cmp r0, #0xB2
    beq _08057A9C
    b _08057AE4
_08057A7C:
    cmp r0, #0xC2
    beq _08057AAC
    cmp r0, #0xCA
    beq _08057AB4
    b _08057AE4
_08057A86:
    cmp r0, #0xDE
    beq _08057ACC
    cmp r0, #0xDE
    bgt _08057AE4
    cmp r0, #0xDA
    beq _08057AC4
    b _08057AE4
_08057A94:
    ldr r0, _08057A98 @ =0x08076BCA
    b _08057ACE
_08057A98: .4byte 0x08076BCA
_08057A9C:
    ldr r0, _08057AA0 @ =0x08076BD4
    b _08057ACE
_08057AA0: .4byte 0x08076BD4
_08057AA4:
    ldr r0, _08057AA8 @ =0x08076BDE
    b _08057ACE
_08057AA8: .4byte 0x08076BDE
_08057AAC:
    ldr r0, _08057AB0 @ =0x08076BE8
    b _08057ACE
_08057AB0: .4byte 0x08076BE8
_08057AB4:
    ldr r0, _08057AB8 @ =0x08076BF2
    b _08057ACE
_08057AB8: .4byte 0x08076BF2
_08057ABC:
    ldr r0, _08057AC0 @ =0x08076BFC
    b _08057ACE
_08057AC0: .4byte 0x08076BFC
_08057AC4:
    ldr r0, _08057AC8 @ =0x08076C06
    b _08057ACE
_08057AC8: .4byte 0x08076C06
_08057ACC:
    ldr r0, _08057AD8 @ =0x08076C10
_08057ACE:
    movs r2, #0x05
    bl CpuSet
    b _08057AE4
    .byte 0x00, 0x00
_08057AD8: .4byte 0x08076C10
_08057ADC:
    ldr r0, _08057B00 @ =0x08076BCA
    movs r2, #0x05
    bl CpuSet
_08057AE4:
    movs r0, #0x01
    bl pltt_setDirtyFlag
    ldr r0, [r4, #0x68]
    adds r0, #0x01
    str r0, [r4, #0x68]
    cmp r0, #0xF1
    ble _08057AF8
    movs r0, #0x00
    str r0, [r4, #0x68]
_08057AF8:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08057B00: .4byte 0x08076BCA
    thumb_func_start sub_8057B04
sub_8057B04:
    adds r3, r0, #0x0
    ldr r0, _08057B5C @ =0x00001011
    movs r2, #0x00
    strh r0, [r3, #0x10]
    movs r0, #0x08
    strb r0, [r3, #0x0E]
    strb r0, [r3, #0x0D]
    strb r0, [r3, #0x0C]
    ldr r0, _08057B60 @ =0x080F0A08
    str r0, [r3, #0x4C]
    ldrh r1, [r3, #0x34]
    ldr r0, _08057B64 @ =0x0000FFFE
    ands r0, r1
    ldr r1, _08057B68 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
    movs r1, #0xE0
    adds r0, r3, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    adds r1, r3, #0x0
    adds r1, #0x60
    movs r0, #0x01
    strb r0, [r1, #0x00]
    ldr r0, [r3, #0x00]
    str r0, [r3, #0x68]
    ldr r0, _08057B6C @ =0x08057BE1
    str r0, [r3, #0x5C]
    adds r0, r3, #0x0
    adds r0, #0x62
    strh r2, [r0, #0x00]
    ldr r0, [r3, #0x50]
    ldr r1, _08057B70 @ =0xFF690000
    adds r0, r0, r1
    cmp r0, #0x05
    bhi _08057BD0
    lsls r0, r0, #0x02
    ldr r1, _08057B74 @ =0x08057B78
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_08057B5C: .4byte 0x00001011
_08057B60: .4byte 0x080F0A08
_08057B64: .4byte 0x0000FFFE
_08057B68: .4byte 0x0000FFFD
_08057B6C: .4byte sub_8057BE0
_08057B70: .4byte 0xFF690000
_08057B74: .4byte 0x08057B78
    .byte 0xD0, 0x7B, 0x05, 0x08, 0xC0, 0x7B, 0x05, 0x08, 0xB8, 0x7B, 0x05, 0x08, 0xA8, 0x7B, 0x05, 0x08
    .byte 0xA0, 0x7B, 0x05, 0x08, 0x90, 0x7B, 0x05, 0x08, 0x18, 0x1C, 0x64, 0x30, 0x40, 0x21, 0x01, 0x80
    .byte 0x00, 0x48, 0x1F, 0xE0, 0x00, 0x00, 0xD8, 0xFF, 0x18, 0x1C, 0x64, 0x30, 0x40, 0x21, 0x16, 0xE0
    .byte 0x18, 0x1C, 0x64, 0x30, 0x30, 0x21, 0x01, 0x80, 0x00, 0x48, 0x13, 0xE0, 0x00, 0x00, 0xD8, 0xFF
    .byte 0x18, 0x1C, 0x64, 0x30, 0x30, 0x21, 0x0A, 0xE0, 0x18, 0x1C, 0x64, 0x30, 0x20, 0x21, 0x01, 0x80
    .byte 0x00, 0x48, 0x07, 0xE0, 0x00, 0x00, 0xD8, 0xFF
_08057BD0:
    adds r0, r3, #0x0
    adds r0, #0x64
    movs r1, #0x20
    strh r1, [r0, #0x00]
    movs r0, #0xA0
    lsls r0, r0, #0x0E
    str r0, [r3, #0x6C]
    bx lr
    thumb_func_start sub_8057BE0
sub_8057BE0:
    push {r4, r5, lr}
    adds r3, r0, #0x0
    adds r0, #0x60
    ldrb r2, [r0, #0x00]
    adds r0, #0x02
    movs r1, #0x00
    ldsh r0, [r0, r1]
    subs r4, r0, #0x1
    cmp r4, #0x00
    bge _08057BFE
    adds r2, #0x01
    cmp r2, #0x05
    ble _08057BFE
    movs r2, #0x00
    movs r4, #0x00
_08057BFE:
    adds r1, r3, #0x0
    adds r1, #0x60
    strb r2, [r1, #0x00]
    adds r0, r3, #0x0
    adds r0, #0x62
    strh r4, [r0, #0x00]
    adds r4, r1, #0x0
    adds r5, r0, #0x0
    cmp r2, #0x05
    bls _08057C14
    b _08057E14
_08057C14:
    lsls r0, r2, #0x02
    ldr r1, _08057C20 @ =0x08057C24
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_08057C20: .4byte 0x08057C24
    .byte 0x3C, 0x7C, 0x05, 0x08, 0x14, 0x7E, 0x05, 0x08, 0x68, 0x7C, 0x05, 0x08, 0x98, 0x7C, 0x05, 0x08
    .byte 0x10, 0x7D, 0x05, 0x08, 0x44, 0x7D, 0x05, 0x08, 0x01, 0x20, 0x20, 0x70, 0x18, 0x1C, 0x64, 0x30
    .byte 0x00, 0x88, 0x28, 0x80, 0x08, 0x20, 0x98, 0x73, 0x58, 0x73, 0x18, 0x73, 0x99, 0x8E, 0x03, 0x48
    .byte 0x08, 0x40, 0x03, 0x49, 0x08, 0x40, 0x98, 0x86, 0xDA, 0xE0, 0x00, 0x00, 0xFE, 0xFF, 0x00, 0x00
    .byte 0xFD, 0xFF, 0x00, 0x00, 0x03, 0x20, 0x20, 0x70, 0x40, 0x20, 0x28, 0x80, 0x23, 0x48, 0xD8, 0x64
    .byte 0x23, 0x48, 0x98, 0x61, 0xA0, 0x20, 0x80, 0x03, 0x98, 0x60, 0x80, 0x21, 0xC9, 0x00, 0x18, 0x1C
    .byte 0x56, 0x30, 0x01, 0x80, 0x02, 0x30, 0x01, 0x80, 0x98, 0x8E, 0x01, 0x21, 0x08, 0x43, 0x02, 0x21
    .byte 0x08, 0x43, 0x98, 0x86, 0x1A, 0x1C, 0x56, 0x32, 0x00, 0x24, 0x10, 0x5F, 0x40, 0x38, 0x00, 0x04
    .byte 0x01, 0x0C, 0x00, 0x14, 0xFF, 0x28, 0x01, 0xDC, 0x80, 0x21, 0x49, 0x00, 0x08, 0x04, 0x00, 0x14
    .byte 0x10, 0x80, 0x19, 0x1C, 0x58, 0x31, 0x08, 0x80, 0x12, 0x4A, 0xD8, 0x6E, 0x00, 0x28, 0x00, 0xDA
    .byte 0x52, 0x42, 0x19, 0x1C, 0x5A, 0x31, 0x08, 0x88, 0x80, 0x18, 0x08, 0x80, 0x00, 0x20, 0x29, 0x5E
    .byte 0x40, 0x20, 0x40, 0x1A, 0x02, 0x1C, 0x42, 0x43, 0x99, 0x6E, 0xD8, 0x6E, 0x09, 0x18, 0x00, 0x28
    .byte 0x01, 0xDA, 0x09, 0x4C, 0x00, 0x19, 0x00, 0x13, 0x50, 0x43, 0x08, 0x1A, 0x18, 0x60, 0x91, 0x02
    .byte 0x80, 0x20, 0xC0, 0x03, 0x40, 0x1A, 0x98, 0x60, 0x8A, 0xE0, 0x00, 0x00, 0x08, 0x0A, 0x0F, 0x08
    .byte 0x21, 0x7E, 0x05, 0x08, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x1D, 0x48, 0x98, 0x61
    .byte 0x00, 0x22, 0x05, 0x20, 0x20, 0x70, 0x28, 0x20, 0x28, 0x80, 0x80, 0x21, 0x49, 0x00, 0x18, 0x1C
    .byte 0x56, 0x30, 0x01, 0x80, 0x02, 0x30, 0x01, 0x80, 0x02, 0x30, 0x02, 0x80, 0xD8, 0x6E, 0x00, 0x28
    .byte 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11, 0x40, 0x42, 0x98, 0x62, 0xA0, 0x20, 0x80, 0x02, 0x18, 0x63
    .byte 0x18, 0x68, 0x99, 0x6A, 0x40, 0x18, 0x18, 0x60, 0x98, 0x68, 0x19, 0x6B, 0x40, 0x18, 0x98, 0x60
    .byte 0x00, 0x28, 0x01, 0xDA, 0x00, 0x20, 0x98, 0x60, 0x0B, 0x4A, 0x88, 0x18, 0x18, 0x63, 0x0B, 0x4A
    .byte 0xD8, 0x6E, 0x00, 0x28, 0x00, 0xDA, 0x52, 0x42, 0x19, 0x1C, 0x5A, 0x31, 0x08, 0x88, 0x80, 0x18
    .byte 0x08, 0x80, 0x00, 0x24, 0x28, 0x5F, 0x13, 0x28, 0x48, 0xD8, 0x80, 0x00, 0x04, 0x49, 0x40, 0x18
    .byte 0x00, 0x68, 0x87, 0x46, 0x25, 0x7E, 0x05, 0x08, 0x00, 0xD8, 0xFF, 0xFF, 0x00, 0xFD, 0xFF, 0xFF
    .byte 0x98, 0x7D, 0x05, 0x08, 0x08, 0x7E, 0x05, 0x08, 0x08, 0x7E, 0x05, 0x08, 0x08, 0x7E, 0x05, 0x08
    .byte 0x08, 0x7E, 0x05, 0x08, 0x00, 0x7E, 0x05, 0x08, 0x00, 0x7E, 0x05, 0x08, 0x00, 0x7E, 0x05, 0x08
    .byte 0x00, 0x7E, 0x05, 0x08, 0xF8, 0x7D, 0x05, 0x08, 0xF8, 0x7D, 0x05, 0x08, 0xF8, 0x7D, 0x05, 0x08
    .byte 0xF8, 0x7D, 0x05, 0x08, 0xF0, 0x7D, 0x05, 0x08, 0xF0, 0x7D, 0x05, 0x08, 0xF0, 0x7D, 0x05, 0x08
    .byte 0xF0, 0x7D, 0x05, 0x08, 0xE8, 0x7D, 0x05, 0x08, 0xE8, 0x7D, 0x05, 0x08, 0xE8, 0x7D, 0x05, 0x08
    .byte 0xE8, 0x7D, 0x05, 0x08, 0x00, 0x48, 0x12, 0xE0, 0x28, 0x0A, 0x0F, 0x08, 0x00, 0x48, 0x0E, 0xE0
    .byte 0x48, 0x0A, 0x0F, 0x08, 0x00, 0x48, 0x0A, 0xE0, 0x68, 0x0A, 0x0F, 0x08, 0x00, 0x48, 0x06, 0xE0
    .byte 0x28, 0x0A, 0x0F, 0x08, 0x00, 0x48, 0x02, 0xE0, 0x88, 0x0A, 0x0F, 0x08, 0x02, 0x48, 0xD8, 0x64
_08057E14:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00, 0x08, 0x0A, 0x0F, 0x08
    thumb_func_start main_dummyIrqHandler8
main_dummyIrqHandler8: @ 08057E20
    bx lr
    .byte 0x00, 0x00
    thumb_func_start main_dummyIrqHandler9
main_dummyIrqHandler9: @ 08057E24
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8057E28
sub_8057E28:
    adds r2, r0, #0x0
    ldr r0, _08057E68 @ =0x00001012
    movs r1, #0x00
    strh r0, [r2, #0x10]
    movs r0, #0x08
    strb r0, [r2, #0x0E]
    strb r0, [r2, #0x0D]
    strb r0, [r2, #0x0C]
    ldr r0, _08057E6C @ =0x08058099
    str r0, [r2, #0x18]
    ldr r0, _08057E70 @ =0x08057E79
    str r0, [r2, #0x5C]
    ldr r0, _08057E74 @ =0x080F0668
    str r0, [r2, #0x4C]
    movs r0, #0x11
    str r0, [r2, #0x60]
    str r1, [r2, #0x64]
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r2, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldrh r0, [r2, #0x34]
    movs r1, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r2, #0x34]
    bx lr
    .byte 0x00, 0x00
_08057E68: .4byte 0x00001012
_08057E6C: .4byte sub_8058098
_08057E70: .4byte sub_8057E78
_08057E74: .4byte 0x080F0668
    thumb_func_start sub_8057E78
sub_8057E78:
    adds r2, r0, #0x0
    ldr r0, [r2, #0x60]
    cmp r0, #0x31
    bls _08057E82
    b _08058094
_08057E82:
    lsls r0, r0, #0x02
    ldr r1, _08057E8C @ =0x08057E90
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08057E8C: .4byte 0x08057E90
    .byte 0x90, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x58, 0x7F, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x5C, 0x7F, 0x05, 0x08, 0x66, 0x7F, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x3C, 0x80, 0x05, 0x08, 0x5C, 0x80, 0x05, 0x08, 0x10, 0x20, 0x9A, 0xE0, 0x21, 0x20, 0x10, 0x66
    .byte 0x00, 0x20, 0x50, 0x66, 0x96, 0xE0, 0x51, 0x6E, 0x48, 0x1C, 0x50, 0x66, 0x22, 0x29, 0x00, 0xD9
    .byte 0x90, 0xE0, 0x88, 0x00, 0x01, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x80, 0x7F, 0x05, 0x08
    .byte 0x0C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x28, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x0C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x1C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x0C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x28, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x0C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x1C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x0C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x28, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x0C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x1C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x0C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x28, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x0C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x1C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08
    .byte 0x0C, 0x80, 0x05, 0x08, 0x94, 0x80, 0x05, 0x08, 0x24, 0x80, 0x05, 0x08, 0x91, 0x8E, 0x02, 0x48
    .byte 0x08, 0x40, 0x90, 0x86, 0x3E, 0xE0, 0x00, 0x00, 0xFE, 0xFF, 0x00, 0x00, 0x00, 0x48, 0x04, 0xE0
    .byte 0x68, 0x06, 0x0F, 0x08, 0x22, 0x20, 0x10, 0x66, 0x03, 0x48, 0xD0, 0x64, 0x91, 0x8E, 0x01, 0x20
    .byte 0x08, 0x43, 0x90, 0x86, 0x2E, 0xE0, 0x00, 0x00, 0x88, 0x06, 0x0F, 0x08, 0x31, 0x20, 0x10, 0x66
    .byte 0x00, 0x20, 0x50, 0x66, 0x91, 0x8E, 0x03, 0x48, 0x08, 0x40, 0x90, 0x86, 0x02, 0x48, 0xD0, 0x64
    .byte 0x20, 0xE0, 0x00, 0x00, 0xFD, 0xFF, 0x00, 0x00, 0x88, 0x06, 0x0F, 0x08, 0x50, 0x6E, 0x01, 0x30
    .byte 0x50, 0x66, 0x04, 0x21, 0x08, 0x40, 0x00, 0x28, 0x03, 0xD0, 0x91, 0x8E, 0x01, 0x20, 0x08, 0x43
    .byte 0x02, 0xE0, 0x91, 0x8E, 0x05, 0x48, 0x08, 0x40, 0x90, 0x86, 0x50, 0x6E, 0x27, 0x28, 0x09, 0xDD
    .byte 0x90, 0x8E, 0x02, 0x49, 0x01, 0x40, 0x91, 0x86, 0x22, 0x20, 0x02, 0xE0, 0xFE, 0xFF, 0x00, 0x00
    .byte 0x01, 0x20, 0x10, 0x66
_08058094:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8058098
sub_8058098:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _080580E8
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _080580E8
    ldr r1, _080580D8 @ =0x03002E20
    ldr r0, _080580DC @ =0x00000C12
    adds r1, r1, r0
    ldrh r2, [r1, #0x00]
    movs r0, #0x01
    orrs r0, r2
    strh r0, [r1, #0x00]
    ldr r1, [r3, #0x60]
    movs r0, #0xF0
    ands r1, r0
    cmp r1, #0x10
    beq _080580E0
    cmp r1, #0x20
    beq _080580E4
    b _080580E8
    .byte 0x00, 0x00
_080580D8: .4byte 0x03002E20
_080580DC: .4byte 0x00000C12
_080580E0:
    movs r0, #0x20
    b _080580E6
_080580E4:
    movs r0, #0x30
_080580E6:
    str r0, [r3, #0x60]
_080580E8:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_80580EC
sub_80580EC:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r0, _08058158 @ =0x00001014
    strh r0, [r4, #0x10]
    movs r0, #0x08
    strb r0, [r4, #0x0E]
    strb r0, [r4, #0x0D]
    strb r0, [r4, #0x0C]
    ldr r0, _0805815C @ =0x080583D5
    str r0, [r4, #0x18]
    ldr r0, _08058160 @ =0x08058169
    str r0, [r4, #0x5C]
    ldr r0, _08058164 @ =0x080F0AE8
    str r0, [r4, #0x4C]
    movs r0, #0x10
    str r0, [r4, #0x60]
    bl main_getRandom
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    movs r1, #0xFC
    lsls r1, r1, #0x08
    ands r0, r1
    str r0, [r4, #0x64]
    movs r0, #0x80
    lsls r0, r0, #0x0C
    str r0, [r4, #0x68]
    bl main_getRandom
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    movs r1, #0x58
    bl __modsi3
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    str r0, [r4, #0x6C]
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r4, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldrh r0, [r4, #0x34]
    movs r1, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r4, #0x34]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08058158: .4byte 0x00001014
_0805815C: .4byte sub_80583D4
_08058160: .4byte sub_8058168
_08058164: .4byte 0x080F0AE8
    thumb_func_start sub_8058168
sub_8058168:
    adds r2, r0, #0x0
    ldr r0, [r2, #0x60]
    cmp r0, #0xF0
    bne _08058172
    b _08058380
_08058172:
    cmp r0, #0xF0
    bgt _08058180
    cmp r0, #0x10
    beq _0805818E
    cmp r0, #0x11
    beq _08058192
    b _080583CC
_08058180:
    cmp r0, #0xF2
    bne _08058186
    b _080583BC
_08058186:
    cmp r0, #0xF2
    bge _0805818C
    b _0805839A
_0805818C:
    b _080583CC
_0805818E:
    movs r0, #0x11
    str r0, [r2, #0x60]
_08058192:
    ldr r3, [r2, #0x64]
    ldr r1, _080581D0 @ =0x080E645C
    lsls r0, r3, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _080581A0
    adds r0, #0x3F
_080581A0:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    ldr r1, [r2, #0x68]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    movs r1, #0x80
    lsls r1, r1, #0x03
    adds r0, r3, r1
    str r0, [r2, #0x64]
    ldr r3, [r2, #0x6C]
    cmp r3, #0x57
    bls _080581C4
    b _08058368
_080581C4:
    lsls r0, r3, #0x02
    ldr r1, _080581D4 @ =0x080581D8
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_080581D0: .4byte 0x080E645C
_080581D4: .4byte 0x080581D8
    .byte 0x38, 0x83, 0x05, 0x08, 0x38, 0x83, 0x05, 0x08, 0x38, 0x83, 0x05, 0x08, 0x38, 0x83, 0x05, 0x08
    .byte 0x38, 0x83, 0x05, 0x08, 0x38, 0x83, 0x05, 0x08, 0x38, 0x83, 0x05, 0x08, 0x38, 0x83, 0x05, 0x08
    .byte 0x38, 0x83, 0x05, 0x08, 0x38, 0x83, 0x05, 0x08, 0x40, 0x83, 0x05, 0x08, 0x40, 0x83, 0x05, 0x08
    .byte 0x40, 0x83, 0x05, 0x08, 0x40, 0x83, 0x05, 0x08, 0x40, 0x83, 0x05, 0x08, 0x40, 0x83, 0x05, 0x08
    .byte 0x40, 0x83, 0x05, 0x08, 0x40, 0x83, 0x05, 0x08, 0x40, 0x83, 0x05, 0x08, 0x40, 0x83, 0x05, 0x08
    .byte 0x40, 0x83, 0x05, 0x08, 0x40, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08
    .byte 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08
    .byte 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08
    .byte 0x50, 0x83, 0x05, 0x08, 0x50, 0x83, 0x05, 0x08, 0x50, 0x83, 0x05, 0x08, 0x50, 0x83, 0x05, 0x08
    .byte 0x50, 0x83, 0x05, 0x08, 0x50, 0x83, 0x05, 0x08, 0x50, 0x83, 0x05, 0x08, 0x50, 0x83, 0x05, 0x08
    .byte 0x50, 0x83, 0x05, 0x08, 0x50, 0x83, 0x05, 0x08, 0x50, 0x83, 0x05, 0x08, 0x50, 0x83, 0x05, 0x08
    .byte 0x58, 0x83, 0x05, 0x08, 0x58, 0x83, 0x05, 0x08, 0x58, 0x83, 0x05, 0x08, 0x58, 0x83, 0x05, 0x08
    .byte 0x58, 0x83, 0x05, 0x08, 0x58, 0x83, 0x05, 0x08, 0x58, 0x83, 0x05, 0x08, 0x58, 0x83, 0x05, 0x08
    .byte 0x58, 0x83, 0x05, 0x08, 0x58, 0x83, 0x05, 0x08, 0x60, 0x83, 0x05, 0x08, 0x60, 0x83, 0x05, 0x08
    .byte 0x60, 0x83, 0x05, 0x08, 0x60, 0x83, 0x05, 0x08, 0x60, 0x83, 0x05, 0x08, 0x60, 0x83, 0x05, 0x08
    .byte 0x60, 0x83, 0x05, 0x08, 0x60, 0x83, 0x05, 0x08, 0x60, 0x83, 0x05, 0x08, 0x60, 0x83, 0x05, 0x08
    .byte 0x60, 0x83, 0x05, 0x08, 0x60, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08
    .byte 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08
    .byte 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08, 0x48, 0x83, 0x05, 0x08
    .byte 0x68, 0x83, 0x05, 0x08, 0x68, 0x83, 0x05, 0x08, 0x68, 0x83, 0x05, 0x08, 0x68, 0x83, 0x05, 0x08
    .byte 0x68, 0x83, 0x05, 0x08, 0x68, 0x83, 0x05, 0x08, 0x68, 0x83, 0x05, 0x08, 0x68, 0x83, 0x05, 0x08
    .byte 0x68, 0x83, 0x05, 0x08, 0x68, 0x83, 0x05, 0x08, 0x68, 0x83, 0x05, 0x08, 0x68, 0x83, 0x05, 0x08
    .byte 0x00, 0x48, 0x16, 0xE0, 0xE8, 0x0A, 0x0F, 0x08, 0x00, 0x48, 0x12, 0xE0, 0x08, 0x0B, 0x0F, 0x08
    .byte 0x00, 0x48, 0x0E, 0xE0, 0x28, 0x0B, 0x0F, 0x08, 0x00, 0x48, 0x0A, 0xE0, 0x48, 0x0B, 0x0F, 0x08
    .byte 0x00, 0x48, 0x06, 0xE0, 0x68, 0x0B, 0x0F, 0x08, 0x00, 0x48, 0x02, 0xE0, 0x88, 0x0B, 0x0F, 0x08
_08058368:
    ldr r0, _0805837C @ =0x080F0BA8
    str r0, [r2, #0x4C]
    adds r0, r3, #0x1
    str r0, [r2, #0x6C]
    cmp r0, #0x57
    ble _080583CC
    movs r0, #0x00
    str r0, [r2, #0x6C]
    b _080583CC
    .byte 0x00, 0x00
_0805837C: .4byte 0x080F0BA8
_08058380:
    movs r0, #0xF1
    str r0, [r2, #0x60]
    ldrh r1, [r2, #0x34]
    ldr r0, _080583B0 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x34]
    ldr r1, _080583B4 @ =0xFFFFFF00
    adds r0, r2, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
    movs r0, #0xC0
    lsls r0, r0, #0x0A
    str r0, [r2, #0x30]
_0805839A:
    ldr r0, [r2, #0x08]
    ldr r1, [r2, #0x30]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    cmp r0, #0x00
    blt _080583BC
    ldr r3, _080583B8 @ =0xFFFFC000
    adds r0, r1, r3
    str r0, [r2, #0x30]
    b _080583CC
    .byte 0x00, 0x00
_080583B0: .4byte 0x0000FFFD
_080583B4: .4byte 0xFFFFFF00
_080583B8: .4byte 0xFFFFC000
_080583BC:
    movs r0, #0xF3
    str r0, [r2, #0x60]
    movs r0, #0x00
    str r0, [r2, #0x18]
    ldrh r1, [r2, #0x34]
    ldr r0, _080583D0 @ =0x0000FFFE
    ands r0, r1
    strh r0, [r2, #0x34]
_080583CC:
    bx lr
    .byte 0x00, 0x00
_080583D0: .4byte 0x0000FFFE
    thumb_func_start sub_80583D4
sub_80583D4:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08058404
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08058404
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _08058404
    movs r0, #0xF0
    str r0, [r3, #0x60]
_08058404:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8058408
sub_8058408:
    adds r2, r0, #0x0
    ldr r0, _0805844C @ =0x00001015
    movs r3, #0x00
    strh r0, [r2, #0x10]
    ldr r0, _08058450 @ =0x080584F5
    str r0, [r2, #0x5C]
    ldr r0, _08058454 @ =0x08058735
    str r0, [r2, #0x18]
    ldr r0, _08058458 @ =0x080F01C8
    str r0, [r2, #0x4C]
    adds r0, r2, #0x0
    adds r0, #0x60
    strh r3, [r0, #0x00]
    adds r0, #0x02
    strh r3, [r0, #0x00]
    adds r0, #0x02
    strh r3, [r0, #0x00]
    adds r0, #0x02
    strh r3, [r0, #0x00]
    ldrh r1, [r2, #0x34]
    movs r0, #0x02
    orrs r0, r1
    strh r0, [r2, #0x34]
    ldr r1, [r2, #0x50]
    ldr r0, _0805845C @ =0x008E0001
    cmp r1, r0
    beq _08058468
    ldr r0, _08058460 @ =0x008E8001
    cmp r1, r0
    bne _08058474
    ldr r0, _08058464 @ =0x0805868D
    str r0, [r2, #0x5C]
    str r3, [r2, #0x28]
    b _08058478
_0805844C: .4byte 0x00001015
_08058450: .4byte sub_80584F4
_08058454: .4byte sub_8058734
_08058458: .4byte 0x080F01C8
_0805845C: .4byte 0x008E0001
_08058460: .4byte 0x008E8001
_08058464: .4byte sub_805868C
_08058468:
    str r3, [r2, #0x28]
    ldr r0, _08058470 @ =0xFFFF8000
    str r0, [r2, #0x2C]
    b _0805847A
_08058470: .4byte 0xFFFF8000
_08058474:
    ldr r0, _0805847C @ =0xFFFF8000
    str r0, [r2, #0x28]
_08058478:
    str r3, [r2, #0x2C]
_0805847A:
    bx lr
_0805847C: .4byte 0xFFFF8000
    thumb_func_start sub_8058480
sub_8058480:
    push {r4, r5, r6, r7, lr}
    adds r6, r0, #0x0
    adds r7, r1, #0x0
    ldr r0, _080584DC @ =0x03002E20
    ldr r1, _080584E0 @ =0x00000848
    adds r0, r0, r1
    ldr r5, _080584E4 @ =0x080E645C
    movs r1, #0x14
    ldsh r2, [r0, r1]
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _0805849A
    adds r0, #0x3F
_0805849A:
    asrs r3, r0, #0x06
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r1, _080584E8 @ =0x000003FF
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r4, [r0, #0x00]
    adds r0, r3, #0x0
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r3, [r0, #0x00]
    adds r0, r6, #0x0
    cmp r0, #0x00
    bge _080584BE
    adds r0, #0xFF
_080584BE:
    asrs r0, r0, #0x08
    adds r2, r0, #0x0
    muls r2, r4
    adds r1, r7, #0x0
    cmp r1, #0x00
    bge _080584CC
    adds r1, #0xFF
_080584CC:
    asrs r0, r1, #0x08
    muls r0, r3
    subs r0, r2, r0
    cmp r0, #0x00
    bge _080584EC
    movs r0, #0x00
    b _080584EE
    .byte 0x00, 0x00
_080584DC: .4byte 0x03002E20
_080584E0: .4byte 0x00000848
_080584E4: .4byte 0x080E645C
_080584E8: .4byte 0x000003FF
_080584EC:
    movs r0, #0x01
_080584EE:
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    thumb_func_start sub_80584F4
sub_80584F4:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    adds r0, #0x64
    movs r1, #0x00
    ldsh r4, [r0, r1]
    adds r6, r5, #0x0
    ldr r0, [r5, #0x28]
    ldr r1, [r5, #0x2C]
    negs r1, r1
    bl sub_8058480
    cmp r0, #0x00
    beq _08058518
    ldr r1, _08058514 @ =0xFFFFFF00
    b _0805851C
    .byte 0x00, 0x00
_08058514: .4byte 0xFFFFFF00
_08058518:
    movs r1, #0x80
    lsls r1, r1, #0x01
_0805851C:
    adds r0, r5, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r2, r0, #0x0
    ldrh r1, [r6, #0x34]
    movs r0, #0x02
    ands r0, r1
    cmp r0, #0x00
    bne _08058530
    b _0805864E
_08058530:
    movs r0, #0x9B
    lsls r0, r0, #0x01
    cmp r4, r0
    bgt _08058558
    cmp r4, #0xFB
    bge _08058634
    cmp r4, #0xD2
    bgt _08058552
    cmp r4, #0xBF
    bge _0805862C
    cmp r4, #0x96
    bgt _08058620
    cmp r4, #0x01
    bge _0805859C
    cmp r4, #0x00
    beq _08058590
    b _08058634
_08058552:
    cmp r4, #0xE6
    ble _08058634
    b _0805862C
_08058558:
    movs r0, #0x82
    lsls r0, r0, #0x02
    cmp r4, r0
    bgt _08058580
    subs r0, #0x13
    cmp r4, r0
    bge _0805862C
    subs r0, #0x29
    cmp r4, r0
    bgt _08058620
    subs r0, #0x94
    cmp r4, r0
    bge _080585DA
    ldr r0, [r5, #0x28]
    negs r0, r0
    str r0, [r5, #0x28]
    ldr r0, [r5, #0x2C]
    negs r0, r0
    str r0, [r5, #0x2C]
    b _080585DA
_08058580:
    movs r0, #0x8C
    lsls r0, r0, #0x02
    cmp r4, r0
    bgt _08058634
    subs r0, #0x13
    cmp r4, r0
    bge _0805862C
    b _08058634
_08058590:
    ldr r0, [r5, #0x28]
    negs r0, r0
    str r0, [r5, #0x28]
    ldr r0, [r5, #0x2C]
    negs r0, r0
    str r0, [r5, #0x2C]
_0805859C:
    ldr r0, [r6, #0x00]
    ldr r1, [r5, #0x28]
    adds r0, r0, r1
    str r0, [r6, #0x00]
    ldr r0, [r6, #0x04]
    ldr r1, [r5, #0x2C]
    adds r0, r0, r1
    str r0, [r6, #0x04]
    adds r1, r5, #0x0
    adds r1, #0x62
    ldrh r0, [r1, #0x00]
    adds r0, #0x01
    strh r0, [r1, #0x00]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x0A
    blt _08058634
    movs r0, #0x00
    strh r0, [r1, #0x00]
    adds r2, r5, #0x0
    adds r2, #0x60
    ldrh r0, [r2, #0x00]
    adds r0, #0x01
    movs r1, #0x01
    ands r0, r1
    strh r0, [r2, #0x00]
    movs r1, #0x00
    ldsh r0, [r2, r1]
    cmp r0, #0x00
    beq _08058616
    b _08058620
_080585DA:
    ldr r0, [r6, #0x00]
    ldr r1, [r5, #0x28]
    adds r0, r0, r1
    str r0, [r6, #0x00]
    ldr r0, [r6, #0x04]
    ldr r1, [r5, #0x2C]
    adds r0, r0, r1
    str r0, [r6, #0x04]
    adds r1, r5, #0x0
    adds r1, #0x62
    ldrh r0, [r1, #0x00]
    adds r0, #0x01
    strh r0, [r1, #0x00]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x0A
    blt _08058634
    movs r0, #0x00
    strh r0, [r1, #0x00]
    adds r2, r5, #0x0
    adds r2, #0x60
    ldrh r0, [r2, #0x00]
    adds r0, #0x01
    movs r1, #0x01
    ands r0, r1
    strh r0, [r2, #0x00]
    movs r1, #0x00
    ldsh r0, [r2, r1]
    cmp r0, #0x00
    bne _08058620
_08058616:
    ldr r0, _0805861C @ =0x080F01C8
    str r0, [r5, #0x4C]
    b _08058634
_0805861C: .4byte 0x080F01C8
_08058620:
    ldr r0, _08058628 @ =0x080F01E8
    str r0, [r5, #0x4C]
    b _08058634
    .byte 0x00, 0x00
_08058628: .4byte 0x080F01E8
_0805862C:
    movs r1, #0x00
    ldsh r0, [r2, r1]
    negs r0, r0
    strh r0, [r2, #0x00]
_08058634:
    adds r2, r5, #0x0
    adds r2, #0x64
    ldrh r0, [r2, #0x00]
    adds r0, #0x01
    strh r0, [r2, #0x00]
    lsls r0, r0, #0x10
    movs r1, #0x9B
    lsls r1, r1, #0x12
    cmp r0, r1
    ble _0805867E
    movs r0, #0x00
    strh r0, [r2, #0x00]
    b _0805867E
_0805864E:
    movs r0, #0x01
    ands r1, r0
    cmp r1, #0x00
    beq _0805867E
    ldr r1, _08058684 @ =0x080E645C
    lsls r0, r4, #0x06
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x04
    str r0, [r6, #0x08]
    adds r1, r5, #0x0
    adds r1, #0x64
    ldrh r0, [r1, #0x00]
    subs r0, #0x01
    strh r0, [r1, #0x00]
    lsls r0, r0, #0x10
    cmp r0, #0x00
    bge _0805867E
    ldrh r1, [r5, #0x34]
    ldr r0, _08058688 @ =0x0000FFFE
    ands r0, r1
    strh r0, [r5, #0x34]
_0805867E:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_08058684: .4byte 0x080E645C
_08058688: .4byte 0x0000FFFE
    thumb_func_start sub_805868C
sub_805868C:
    push {r4, r5, r6, lr}
    adds r2, r0, #0x0
    adds r0, #0x64
    movs r1, #0x00
    ldsh r4, [r0, r1]
    ldrh r3, [r2, #0x34]
    movs r0, #0x02
    ands r0, r3
    lsls r0, r0, #0x10
    lsrs r5, r0, #0x10
    cmp r5, #0x00
    beq _080586F4
    adds r4, #0x01
    adds r3, r2, #0x0
    adds r3, #0x66
    movs r5, #0x00
    ldsh r0, [r3, r5]
    cmp r0, #0x00
    bne _080586CC
    ldr r0, _080586C8 @ =0x080F01E8
    str r0, [r2, #0x4C]
    cmp r4, #0x3B
    ble _0805871A
    movs r0, #0x01
    strh r0, [r3, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x0A
    str r0, [r2, #0x30]
    b _0805871A
    .byte 0x00, 0x00
_080586C8: .4byte 0x080F01E8
_080586CC:
    ldr r0, _080586EC @ =0x080F01C8
    str r0, [r2, #0x4C]
    ldr r1, [r2, #0x08]
    ldr r0, [r2, #0x30]
    adds r1, r1, r0
    str r1, [r2, #0x08]
    ldr r6, _080586F0 @ =0xFFFFC000
    adds r0, r0, r6
    str r0, [r2, #0x30]
    cmp r1, #0x00
    bgt _0805871A
    movs r0, #0x00
    str r0, [r2, #0x08]
    strh r0, [r3, #0x00]
    movs r4, #0x00
    b _0805871A
_080586EC: .4byte 0x080F01C8
_080586F0: .4byte 0xFFFFC000
_080586F4:
    movs r0, #0x01
    ands r0, r3
    cmp r0, #0x00
    beq _0805871A
    ldr r0, _08058728 @ =0x080F01C8
    str r0, [r2, #0x4C]
    ldr r1, [r2, #0x08]
    ldr r0, [r2, #0x30]
    adds r1, r1, r0
    str r1, [r2, #0x08]
    ldr r6, _0805872C @ =0xFFFFC000
    adds r0, r0, r6
    str r0, [r2, #0x30]
    cmp r1, #0x00
    bgt _0805871A
    ldr r0, _08058730 @ =0x0000FFFE
    ands r3, r0
    strh r3, [r2, #0x34]
    str r5, [r2, #0x08]
_0805871A:
    adds r0, r2, #0x0
    adds r0, #0x64
    strh r4, [r0, #0x00]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08058728: .4byte 0x080F01C8
_0805872C: .4byte 0xFFFFC000
_08058730: .4byte 0x0000FFFE
    thumb_func_start sub_8058734
sub_8058734:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _0805877E
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _0805877E
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _0805877E
    adds r1, r3, #0x0
    adds r1, #0x64
    movs r0, #0x20
    strh r0, [r1, #0x00]
    ldrh r1, [r3, #0x34]
    ldr r0, _08058780 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
    ldr r1, _08058784 @ =0xFFFFFF00
    adds r0, r3, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
    movs r0, #0xC0
    lsls r0, r0, #0x0A
    str r0, [r3, #0x30]
_0805877E:
    bx lr
_08058780: .4byte 0x0000FFFD
_08058784: .4byte 0xFFFFFF00
    thumb_func_start sub_8058788
sub_8058788:
    push {r4, lr}
    adds r2, r0, #0x0
    ldr r4, [r2, #0x64]
    ldrh r3, [r2, #0x34]
    movs r0, #0x02
    ands r0, r3
    cmp r0, #0x00
    beq _08058878
    cmp r4, #0x22
    bhi _08058864
    lsls r0, r4, #0x02
    ldr r1, _080587A8 @ =0x080587AC
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
    .byte 0x00, 0x00
_080587A8: .4byte 0x080587AC
    .byte 0x38, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08
    .byte 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x40, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08
    .byte 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08
    .byte 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x48, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08
    .byte 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08
    .byte 0x50, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08
    .byte 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08
    .byte 0x58, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08
    .byte 0x64, 0x88, 0x05, 0x08, 0x64, 0x88, 0x05, 0x08, 0x60, 0x88, 0x05, 0x08, 0x00, 0x48, 0x12, 0xE0
    .byte 0x08, 0x0C, 0x0F, 0x08, 0x00, 0x48, 0x0E, 0xE0, 0x28, 0x0C, 0x0F, 0x08, 0x00, 0x48, 0x0A, 0xE0
    .byte 0x48, 0x0C, 0x0F, 0x08, 0x00, 0x48, 0x06, 0xE0, 0x68, 0x0C, 0x0F, 0x08, 0x00, 0x48, 0x02, 0xE0
    .byte 0x88, 0x0C, 0x0F, 0x08, 0x04, 0x48, 0xD0, 0x64
_08058864:
    adds r0, r4, #0x1
    str r0, [r2, #0x64]
    cmp r0, #0x29
    ble _0805889E
    movs r0, #0x00
    str r0, [r2, #0x64]
    b _0805889E
    .byte 0x00, 0x00, 0xA8, 0x0C, 0x0F, 0x08
_08058878:
    movs r0, #0x01
    ands r0, r3
    cmp r0, #0x00
    beq _0805889E
    ldr r1, _080588A4 @ =0x080E645C
    lsls r0, r4, #0x06
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x04
    str r0, [r2, #0x08]
    subs r0, r4, #0x1
    str r0, [r2, #0x64]
    cmp r0, #0x00
    bge _0805889E
    ldr r0, _080588A8 @ =0x0000FFFE
    ands r3, r0
    strh r3, [r2, #0x34]
_0805889E:
    pop {r4}
    pop {r0}
    bx r0
_080588A4: .4byte 0x080E645C
_080588A8: .4byte 0x0000FFFE
    thumb_func_start sub_80588AC
sub_80588AC:
    ldr r1, _080588D0 @ =0x00001016
    movs r2, #0x00
    strh r1, [r0, #0x10]
    ldr r1, _080588D4 @ =0x08058789
    str r1, [r0, #0x5C]
    ldr r1, _080588D8 @ =0x080588E1
    str r1, [r0, #0x18]
    ldr r1, _080588DC @ =0x080F0C08
    str r1, [r0, #0x4C]
    str r2, [r0, #0x60]
    ldrh r1, [r0, #0x34]
    movs r2, #0x01
    orrs r1, r2
    movs r2, #0x02
    orrs r1, r2
    strh r1, [r0, #0x34]
    bx lr
    .byte 0x00, 0x00
_080588D0: .4byte 0x00001016
_080588D4: .4byte sub_8058788
_080588D8: .4byte sub_80588E0
_080588DC: .4byte 0x080F0C08
    thumb_func_start sub_80588E0
sub_80588E0:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08058920
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08058920
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _08058920
    movs r0, #0x20
    str r0, [r3, #0x64]
    ldrh r1, [r3, #0x34]
    ldr r0, _08058924 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
    ldr r1, _08058928 @ =0xFFFFFF00
    adds r0, r3, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
_08058920:
    bx lr
    .byte 0x00, 0x00
_08058924: .4byte 0x0000FFFD
_08058928: .4byte 0xFFFFFF00
    thumb_func_start sub_805892C
sub_805892C:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r0, _08058984 @ =0x00001017
    strh r0, [r4, #0x10]
    movs r0, #0x08
    strb r0, [r4, #0x0E]
    strb r0, [r4, #0x0D]
    strb r0, [r4, #0x0C]
    ldr r0, _08058988 @ =0x08058A41
    str r0, [r4, #0x18]
    ldr r0, _0805898C @ =0x08058999
    str r0, [r4, #0x5C]
    ldr r0, _08058990 @ =0x080F0CC8
    str r0, [r4, #0x4C]
    movs r0, #0x10
    str r0, [r4, #0x60]
    bl main_getRandom
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    movs r1, #0xFC
    lsls r1, r1, #0x08
    ands r0, r1
    str r0, [r4, #0x64]
    movs r0, #0x80
    lsls r0, r0, #0x0C
    str r0, [r4, #0x68]
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r4, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldrh r1, [r4, #0x34]
    movs r0, #0x01
    orrs r0, r1
    ldr r1, _08058994 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r4, #0x34]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08058984: .4byte 0x00001017
_08058988: .4byte sub_8058A40
_0805898C: .4byte sub_8058998
_08058990: .4byte 0x080F0CC8
_08058994: .4byte 0x0000FFFD
    thumb_func_start sub_8058998
sub_8058998:
    adds r2, r0, #0x0
    ldr r0, [r2, #0x60]
    cmp r0, #0xF0
    beq _080589EC
    cmp r0, #0xF0
    bgt _080589AE
    cmp r0, #0x10
    beq _080589B8
    cmp r0, #0x11
    beq _080589BC
    b _08058A38
_080589AE:
    cmp r0, #0xF2
    beq _08058A28
    cmp r0, #0xF2
    blt _08058A06
    b _08058A38
_080589B8:
    movs r0, #0x11
    str r0, [r2, #0x60]
_080589BC:
    ldr r3, [r2, #0x64]
    ldr r1, _080589E8 @ =0x080E645C
    lsls r0, r3, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _080589CA
    adds r0, #0x3F
_080589CA:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    ldr r1, [r2, #0x68]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    movs r1, #0x80
    lsls r1, r1, #0x03
    adds r0, r3, r1
    str r0, [r2, #0x64]
    b _08058A38
_080589E8: .4byte 0x080E645C
_080589EC:
    movs r0, #0xF1
    str r0, [r2, #0x60]
    ldrh r1, [r2, #0x34]
    ldr r0, _08058A1C @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x34]
    ldr r1, _08058A20 @ =0xFFFFFF00
    adds r0, r2, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
    movs r0, #0xC0
    lsls r0, r0, #0x0A
    str r0, [r2, #0x30]
_08058A06:
    ldr r0, [r2, #0x08]
    ldr r1, [r2, #0x30]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    cmp r0, #0x00
    blt _08058A28
    ldr r3, _08058A24 @ =0xFFFFC000
    adds r0, r1, r3
    str r0, [r2, #0x30]
    b _08058A38
    .byte 0x00, 0x00
_08058A1C: .4byte 0x0000FFFD
_08058A20: .4byte 0xFFFFFF00
_08058A24: .4byte 0xFFFFC000
_08058A28:
    movs r0, #0xF3
    str r0, [r2, #0x60]
    movs r0, #0x00
    str r0, [r2, #0x18]
    ldrh r1, [r2, #0x34]
    ldr r0, _08058A3C @ =0x0000FFFE
    ands r0, r1
    strh r0, [r2, #0x34]
_08058A38:
    bx lr
    .byte 0x00, 0x00
_08058A3C: .4byte 0x0000FFFE
    thumb_func_start sub_8058A40
sub_8058A40:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08058A70
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08058A70
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _08058A70
    movs r0, #0xF0
    str r0, [r3, #0x60]
_08058A70:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8058A74
sub_8058A74:
    ldr r1, _08058AA0 @ =0x00001018
    movs r3, #0x00
    strh r1, [r0, #0x10]
    movs r1, #0x08
    strb r1, [r0, #0x0E]
    strb r1, [r0, #0x0D]
    strb r1, [r0, #0x0C]
    ldr r2, _08058AA4 @ =0x080F0128
    ldr r1, _08058AA8 @ =0x08058B4D
    str r1, [r0, #0x18]
    ldr r1, _08058AAC @ =0x08058AB1
    str r1, [r0, #0x5C]
    str r2, [r0, #0x4C]
    str r3, [r0, #0x60]
    str r3, [r0, #0x64]
    ldrh r1, [r0, #0x34]
    movs r2, #0x01
    orrs r1, r2
    movs r2, #0x02
    orrs r1, r2
    strh r1, [r0, #0x34]
    bx lr
_08058AA0: .4byte 0x00001018
_08058AA4: .4byte 0x080F0128
_08058AA8: .4byte sub_8058B4C
_08058AAC: .4byte sub_8058AB0
    thumb_func_start sub_8058AB0
sub_8058AB0:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    adds r6, r5, #0x0
    ldr r0, [r5, #0x60]
    cmp r0, #0xE0
    beq _08058AC6
    cmp r0, #0xE0
    ble _08058B42
    cmp r0, #0xE1
    beq _08058ADC
    b _08058B42
_08058AC6:
    ldrh r1, [r5, #0x34]
    ldr r0, _08058B04 @ =0x0000FFFD
    ands r0, r1
    movs r4, #0x00
    strh r0, [r5, #0x34]
    ldr r0, [r5, #0x68]
    bl sub_8058BA8
    movs r0, #0xE1
    str r0, [r5, #0x60]
    str r4, [r5, #0x64]
_08058ADC:
    ldr r0, [r5, #0x64]
    adds r0, #0x01
    str r0, [r5, #0x64]
    ldr r0, [r6, #0x00]
    ldr r1, [r5, #0x28]
    adds r0, r0, r1
    str r0, [r6, #0x00]
    ldr r0, [r6, #0x04]
    ldr r1, [r5, #0x2C]
    adds r0, r0, r1
    str r0, [r6, #0x04]
    ldr r0, [r5, #0x64]
    cmp r0, #0x0B
    beq _08058B18
    cmp r0, #0x0B
    bgt _08058B08
    cmp r0, #0x01
    beq _08058B0E
    b _08058B30
    .byte 0x00, 0x00
_08058B04: .4byte 0x0000FFFD
_08058B08:
    cmp r0, #0x15
    beq _08058B24
    b _08058B30
_08058B0E:
    ldr r0, _08058B14 @ =0x080F0CE8
    str r0, [r5, #0x4C]
    b _08058B42
_08058B14: .4byte 0x080F0CE8
_08058B18:
    ldr r0, _08058B20 @ =0x080F0D08
    str r0, [r5, #0x4C]
    b _08058B42
    .byte 0x00, 0x00
_08058B20: .4byte 0x080F0D08
_08058B24:
    ldr r0, _08058B2C @ =0x080F0D28
    str r0, [r5, #0x4C]
    b _08058B42
    .byte 0x00, 0x00
_08058B2C: .4byte 0x080F0D28
_08058B30:
    ldr r0, [r5, #0x64]
    cmp r0, #0x1E
    ble _08058B42
    movs r0, #0xF0
    str r0, [r5, #0x60]
    ldrh r1, [r5, #0x34]
    ldr r0, _08058B48 @ =0x0000FFFE
    ands r0, r1
    strh r0, [r5, #0x34]
_08058B42:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_08058B48: .4byte 0x0000FFFE
    thumb_func_start sub_8058B4C
sub_8058B4C:
    push {r4, lr}
    adds r4, r0, #0x0
    adds r3, r1, #0x0
    ldr r2, _08058BA0 @ =0x03002E20
    ldrh r0, [r3, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08058B9A
    adds r0, r3, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08058B9A
    ldr r0, _08058BA4 @ =0x00000C12
    adds r2, r2, r0
    ldrh r1, [r2, #0x00]
    movs r0, #0x01
    orrs r0, r1
    strh r0, [r2, #0x00]
    movs r0, #0xE0
    str r0, [r4, #0x60]
    str r3, [r4, #0x68]
    adds r0, r3, #0x0
    adds r0, #0x4E
    movs r1, #0x00
    ldsh r0, [r0, r1]
    lsls r0, r0, #0x08
    str r0, [r4, #0x28]
    adds r0, r3, #0x0
    adds r0, #0x50
    movs r1, #0x00
    ldsh r0, [r0, r1]
    lsls r0, r0, #0x08
    str r0, [r4, #0x2C]
_08058B9A:
    pop {r4}
    pop {r0}
    bx r0
_08058BA0: .4byte 0x03002E20
_08058BA4: .4byte 0x00000C12
    thumb_func_start sub_8058BA8
sub_8058BA8:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    ldr r0, _08058C68 @ =0x03002E20
    adds r6, r0, #0x0
    adds r6, #0x24
    movs r1, #0xE6
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_804F7AC
    adds r4, r0, #0x0
    str r5, [r4, #0x54]
    movs r2, #0x00
    strh r2, [r4, #0x26]
    str r2, [r4, #0x18]
    ldrh r1, [r4, #0x34]
    ldr r0, _08058C6C @ =0x0000FFFD
    ands r0, r1
    strh r0, [r4, #0x34]
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r4, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
    str r2, [r4, #0x6C]
    adds r0, r5, #0x0
    adds r0, #0x6A
    movs r3, #0x00
    ldsh r0, [r0, r3]
    cmp r0, #0x00
    beq _08058C74
    adds r0, r4, #0x0
    bl sub_8058CA4
    ldr r1, [r4, #0x28]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r0, r0, #0x01
    str r0, [r4, #0x28]
    ldr r1, [r4, #0x2C]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsrs r1, r0, #0x1F
    adds r0, r0, r1
    asrs r0, r0, #0x01
    str r0, [r4, #0x2C]
    adds r1, r4, #0x0
    adds r1, #0x70
    movs r0, #0x80
    lsls r0, r0, #0x05
    strh r0, [r1, #0x00]
    adds r1, #0x02
    movs r0, #0x80
    lsls r0, r0, #0x06
    strh r0, [r1, #0x00]
    movs r0, #0x90
    lsls r0, r0, #0x09
    str r0, [r4, #0x30]
    ldr r0, [r5, #0x00]
    str r0, [r4, #0x00]
    ldr r2, [r5, #0x04]
    str r2, [r4, #0x04]
    ldr r1, [r5, #0x08]
    str r1, [r4, #0x08]
    cmp r0, #0x00
    bge _08058C34
    ldr r3, _08058C70 @ =0x0000FFFF
    adds r0, r0, r3
_08058C34:
    asrs r5, r0, #0x10
    cmp r2, #0x00
    bge _08058C3E
    ldr r0, _08058C70 @ =0x0000FFFF
    adds r2, r2, r0
_08058C3E:
    asrs r2, r2, #0x10
    adds r0, r1, #0x0
    cmp r0, #0x00
    bge _08058C4A
    ldr r1, _08058C70 @ =0x0000FFFF
    adds r0, r0, r1
_08058C4A:
    asrs r3, r0, #0x10
    adds r0, r6, #0x0
    adds r1, r5, #0x0
    bl sub_80328D4
    movs r1, #0x7F
    ands r0, r1
    adds r1, r4, #0x0
    adds r1, #0x36
    strb r0, [r1, #0x00]
    adds r0, r4, #0x0
    bl sub_8058E10
    b _08058C8E
    .byte 0x00, 0x00
_08058C68: .4byte 0x03002E20
_08058C6C: .4byte 0x0000FFFD
_08058C70: .4byte 0x0000FFFF
_08058C74:
    ldr r0, _08058CA0 @ =0x08058DE9
    str r0, [r4, #0x14]
    adds r0, r4, #0x0
    bl sub_8058E10
    adds r0, r4, #0x0
    bl sub_8058EB8
    adds r1, r5, #0x0
    adds r1, #0xAC
    movs r0, #0xB4
    lsls r0, r0, #0x01
    strh r0, [r1, #0x00]
_08058C8E:
    ldrh r1, [r4, #0x34]
    movs r0, #0x01
    orrs r0, r1
    strh r0, [r4, #0x34]
    adds r0, r4, #0x0
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_08058CA0: .4byte sub_8058DE8
    thumb_func_start sub_8058CA4
sub_8058CA4:
    push {r4, r5, r6, r7, lr}
    adds r6, r0, #0x0
    ldr r0, _08058D3C @ =0x03002E20
    adds r7, r0, #0x0
    adds r7, #0x24
    ldr r4, [r6, #0x54]
    adds r5, r6, #0x0
    ldr r1, _08058D40 @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _08058CCE
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _08058CCE
    movs r0, #0xBA
    lsls r0, r0, #0x01
    bl m4aSongNumStart
_08058CCE:
    adds r0, r4, #0x0
    adds r0, #0x4E
    movs r1, #0x00
    ldsh r0, [r0, r1]
    lsls r0, r0, #0x08
    str r0, [r5, #0x28]
    adds r0, r4, #0x0
    adds r0, #0x50
    movs r1, #0x00
    ldsh r0, [r0, r1]
    lsls r0, r0, #0x08
    str r0, [r5, #0x2C]
    movs r0, #0x90
    lsls r0, r0, #0x09
    str r0, [r5, #0x30]
    ldr r1, [r5, #0x00]
    cmp r1, #0x00
    bge _08058CF6
    ldr r0, _08058D44 @ =0x0000FFFF
    adds r1, r1, r0
_08058CF6:
    asrs r1, r1, #0x10
    ldr r2, [r5, #0x04]
    cmp r2, #0x00
    bge _08058D02
    ldr r0, _08058D44 @ =0x0000FFFF
    adds r2, r2, r0
_08058D02:
    asrs r2, r2, #0x10
    ldr r3, [r5, #0x08]
    cmp r3, #0x00
    bge _08058D0E
    ldr r0, _08058D44 @ =0x0000FFFF
    adds r3, r3, r0
_08058D0E:
    asrs r3, r3, #0x10
    adds r0, r7, #0x0
    bl sub_80328D4
    movs r1, #0x7F
    ands r0, r1
    adds r1, r5, #0x0
    adds r1, #0x36
    movs r2, #0x00
    strb r0, [r1, #0x00]
    ldr r0, _08058D48 @ =0x08058D4D
    str r0, [r6, #0x14]
    adds r0, r6, #0x0
    adds r0, #0x70
    strh r2, [r0, #0x00]
    adds r1, r6, #0x0
    adds r1, #0x72
    movs r0, #0xC0
    lsls r0, r0, #0x05
    strh r0, [r1, #0x00]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08058D3C: .4byte 0x03002E20
_08058D40: .4byte 0x00000838
_08058D44: .4byte 0x0000FFFF
_08058D48: .4byte sub_8058D4C
    thumb_func_start sub_8058D4C
sub_8058D4C:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    ldr r6, _08058DCC @ =0x03002E20
    adds r7, r6, #0x0
    adds r7, #0x24
    adds r1, r4, #0x0
    adds r1, #0x70
    movs r2, #0x26
    ldsh r0, [r4, r2]
    ldrh r1, [r1, #0x00]
    adds r0, r0, r1
    strh r0, [r4, #0x26]
    ldr r2, [r4, #0x00]
    ldr r0, [r4, #0x28]
    adds r2, r2, r0
    str r2, [r4, #0x00]
    ldr r1, [r4, #0x04]
    ldr r0, [r4, #0x2C]
    adds r3, r1, r0
    str r3, [r4, #0x04]
    ldr r1, [r4, #0x08]
    ldr r0, [r4, #0x30]
    adds r0, r1, r0
    str r0, [r4, #0x08]
    cmp r2, #0x00
    bge _08058D84
    ldr r1, _08058DD0 @ =0x0000FFFF
    adds r2, r2, r1
_08058D84:
    asrs r5, r2, #0x10
    adds r1, r3, #0x0
    cmp r1, #0x00
    bge _08058D90
    ldr r2, _08058DD0 @ =0x0000FFFF
    adds r1, r1, r2
_08058D90:
    asrs r2, r1, #0x10
    adds r1, r0, #0x0
    cmp r1, #0x00
    bge _08058D9C
    ldr r0, _08058DD0 @ =0x0000FFFF
    adds r1, r1, r0
_08058D9C:
    asrs r3, r1, #0x10
    adds r0, r7, #0x0
    adds r1, r5, #0x0
    bl sub_80328D4
    movs r1, #0x7F
    ands r0, r1
    adds r1, r4, #0x0
    adds r1, #0x36
    strb r0, [r1, #0x00]
    adds r0, r4, #0x0
    bl sub_8058E10
    ldr r0, [r4, #0x08]
    cmp r0, #0x00
    blt _08058DD4
    ldr r0, [r4, #0x30]
    adds r1, r4, #0x0
    adds r1, #0x72
    movs r2, #0x00
    ldsh r1, [r1, r2]
    subs r0, r0, r1
    str r0, [r4, #0x30]
    b _08058DE0
_08058DCC: .4byte 0x03002E20
_08058DD0: .4byte 0x0000FFFF
_08058DD4:
    movs r1, #0xE6
    lsls r1, r1, #0x03
    adds r0, r6, r1
    adds r1, r4, #0x0
    bl sub_804F808
_08058DE0:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_8058DE8
sub_8058DE8:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    ldr r4, [r5, #0x54]
    bl sub_8058EB8
    adds r0, r5, #0x0
    bl sub_8058E10
    adds r4, #0xAC
    movs r1, #0x00
    ldsh r0, [r4, r1]
    cmp r0, #0x00
    bgt _08058E08
    adds r0, r5, #0x0
    bl sub_8058CA4
_08058E08:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_8058E10
sub_8058E10:
    push {r4, lr}
    adds r3, r0, #0x0
    ldr r0, _08058E40 @ =0x03002E20
    ldr r1, _08058E44 @ =0x00000848
    adds r0, r0, r1
    ldr r1, [r3, #0x54]
    movs r4, #0x14
    ldsh r2, [r0, r4]
    adds r1, #0x56
    ldrh r0, [r1, #0x00]
    subs r2, r2, r0
    movs r1, #0x26
    ldsh r0, [r3, r1]
    subs r2, r2, r0
    ldr r0, _08058E48 @ =0x0000FFFF
    ands r2, r0
    ldr r4, _08058E4C @ =0xFFFFEFFF
    adds r1, r2, r4
    ldr r0, _08058E50 @ =0x0000DFFF
    cmp r1, r0
    bls _08058E58
    ldr r0, _08058E54 @ =0x0807C558
    b _08058EAA
    .byte 0x00, 0x00
_08058E40: .4byte 0x03002E20
_08058E44: .4byte 0x00000848
_08058E48: .4byte 0x0000FFFF
_08058E4C: .4byte 0xFFFFEFFF
_08058E50: .4byte 0x0000DFFF
_08058E54: .4byte 0x0807C558
_08058E58:
    movs r0, #0xC0
    lsls r0, r0, #0x06
    cmp r2, r0
    bgt _08058E68
    ldr r0, _08058E64 @ =0x0807C550
    b _08058EAA
_08058E64: .4byte 0x0807C550
_08058E68:
    movs r0, #0xA0
    lsls r0, r0, #0x07
    cmp r2, r0
    bgt _08058E78
    ldr r0, _08058E74 @ =0x0807C548
    b _08058EAA
_08058E74: .4byte 0x0807C548
_08058E78:
    movs r0, #0x80
    lsls r0, r0, #0x08
    cmp r2, r0
    bgt _08058E88
    ldr r0, _08058E84 @ =0x0807C540
    b _08058EAA
_08058E84: .4byte 0x0807C540
_08058E88:
    movs r0, #0xB0
    lsls r0, r0, #0x08
    cmp r2, r0
    bgt _08058E98
    ldr r0, _08058E94 @ =0x0807C560
    b _08058EAA
_08058E94: .4byte 0x0807C560
_08058E98:
    movs r0, #0xD0
    lsls r0, r0, #0x08
    cmp r2, r0
    bgt _08058EA8
    ldr r0, _08058EA4 @ =0x0807C568
    b _08058EAA
_08058EA4: .4byte 0x0807C568
_08058EA8:
    ldr r0, _08058EB4 @ =0x0807C570
_08058EAA:
    str r0, [r3, #0x48]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08058EB4: .4byte 0x0807C570
    thumb_func_start sub_8058EB8
sub_8058EB8:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    ldr r1, [r0, #0x54]
    mov r12, r1
    ldr r2, _08058F38 @ =0x03002E20
    mov r10, r2
    adds r6, r0, #0x0
    mov r0, r12
    adds r0, #0xD8
    ldr r0, [r0, #0x00]
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x1D
    mov r0, r12
    adds r0, #0x56
    ldrh r0, [r0, #0x00]
    ldr r3, _08058F3C @ =0xFFFFC000
    adds r0, r0, r3
    ldr r5, _08058F40 @ =0x080E645C
    lsls r0, r0, #0x10
    asrs r2, r0, #0x10
    adds r0, r2, #0x0
    cmp r2, #0x00
    bge _08058EEE
    adds r0, #0x3F
_08058EEE:
    asrs r3, r0, #0x06
    movs r0, #0x80
    lsls r0, r0, #0x01
    subs r0, r0, r3
    ldr r4, _08058F44 @ =0x000003FF
    ands r0, r4
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    mov r9, r0
    adds r0, r3, #0x0
    ands r0, r4
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    mov r8, r0
    mov r0, r12
    adds r0, #0xBC
    ldr r0, [r0, #0x00]
    ldr r4, _08058F48 @ =0xFFFEFFFF
    adds r0, r0, r4
    ldr r1, _08058F4C @ =0x009EFFFE
    cmp r0, r1
    bhi _08058F50
    mov r1, r10
    ldr r0, [r1, #0x10]
    movs r1, #0x02
    ands r0, r1
    lsrs r3, r0, #0x01
    b _08058F52
    .byte 0x00, 0x00
_08058F38: .4byte 0x03002E20
_08058F3C: .4byte 0xFFFFC000
_08058F40: .4byte 0x080E645C
_08058F44: .4byte 0x000003FF
_08058F48: .4byte 0xFFFEFFFF
_08058F4C: .4byte 0x009EFFFE
_08058F50:
    movs r3, #0x00
_08058F52:
    movs r4, #0x00
    mov r0, r12
    adds r0, #0x85
    ldrb r5, [r0, #0x00]
    mov r2, r12
    adds r2, #0xB4
    cmp r5, #0x5C
    bne _08058F70
    ldrh r1, [r2, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _08058F9C
    movs r4, #0x01
_08058F70:
    ldrh r1, [r2, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _08058F9C
    movs r2, #0x01
    adds r1, r7, #0x0
    ands r1, r2
    movs r0, #0x1E
    ands r0, r5
    cmp r0, #0x0C
    bls _08058F96
    asrs r0, r7, #0x01
    ands r0, r2
    adds r0, r1, r0
    adds r0, r3, r0
    adds r2, r0, r4
    b _08058F9E
_08058F96:
    adds r0, r3, r1
    adds r2, r0, r4
    b _08058F9E
_08058F9C:
    adds r2, r3, r4
_08058F9E:
    lsls r2, r2, #0x0F
    mov r3, r12
    ldr r0, [r3, #0x00]
    mov r4, r9
    subs r0, r0, r4
    str r0, [r6, #0x00]
    ldr r1, [r3, #0x04]
    mov r4, r8
    subs r3, r1, r4
    str r3, [r6, #0x04]
    mov r4, r12
    ldr r1, [r4, #0x08]
    adds r1, r1, r2
    str r1, [r6, #0x08]
    cmp r0, #0x00
    bge _08058FC2
    ldr r2, _08058FFC @ =0x0000FFFF
    adds r0, r0, r2
_08058FC2:
    asrs r4, r0, #0x10
    adds r0, r3, #0x0
    cmp r0, #0x00
    bge _08058FCE
    ldr r3, _08058FFC @ =0x0000FFFF
    adds r0, r0, r3
_08058FCE:
    asrs r2, r0, #0x10
    adds r0, r1, #0x0
    cmp r0, #0x00
    bge _08058FDA
    ldr r1, _08058FFC @ =0x0000FFFF
    adds r0, r0, r1
_08058FDA:
    asrs r3, r0, #0x10
    ldr r0, _08059000 @ =0x03002E44
    adds r1, r4, #0x0
    bl sub_80328D4
    movs r1, #0x7F
    ands r0, r1
    adds r1, r6, #0x0
    adds r1, #0x36
    strb r0, [r1, #0x00]
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_08058FFC: .4byte 0x0000FFFF
_08059000: .4byte 0x03002E44
    thumb_func_start sub_8059004
sub_8059004:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    ldr r0, _08059060 @ =0x00001019
    movs r4, #0x00
    strh r0, [r5, #0x10]
    movs r0, #0x08
    strb r0, [r5, #0x0E]
    strb r0, [r5, #0x0D]
    strb r0, [r5, #0x0C]
    ldr r0, _08059064 @ =0x08059169
    str r0, [r5, #0x18]
    ldr r0, _08059068 @ =0x080590E9
    str r0, [r5, #0x5C]
    ldr r0, _0805906C @ =0x080F0D68
    str r0, [r5, #0x4C]
    movs r0, #0x10
    str r0, [r5, #0x60]
    bl main_getRandom
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    movs r1, #0xFC
    lsls r1, r1, #0x08
    ands r0, r1
    str r0, [r5, #0x64]
    str r4, [r5, #0x6C]
    movs r0, #0x80
    lsls r0, r0, #0x0C
    str r0, [r5, #0x68]
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r5, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldrh r1, [r5, #0x34]
    movs r0, #0x01
    orrs r0, r1
    ldr r1, _08059070 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r5, #0x34]
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08059060: .4byte 0x00001019
_08059064: .4byte sub_8059168
_08059068: .4byte sub_80590E8
_0805906C: .4byte 0x080F0D68
_08059070: .4byte 0x0000FFFD
    thumb_func_start sub_8059074
sub_8059074:
    adds r2, r0, #0x0
    ldr r3, [r2, #0x64]
    ldr r1, _080590B0 @ =0x080E645C
    lsls r0, r3, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _08059084
    adds r0, #0x3F
_08059084:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    ldr r1, [r2, #0x68]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    movs r1, #0x80
    lsls r1, r1, #0x03
    adds r0, r3, r1
    str r0, [r2, #0x64]
    ldr r1, [r2, #0x6C]
    cmp r1, #0x0E
    beq _080590D0
    cmp r1, #0x0E
    bgt _080590B4
    cmp r1, #0x00
    beq _080590BE
    b _080590D4
_080590B0: .4byte 0x080E645C
_080590B4:
    cmp r1, #0x1A
    beq _080590C8
    cmp r1, #0x28
    beq _080590D0
    b _080590D4
_080590BE:
    ldr r0, _080590C4 @ =0x080F0D68
    b _080590D2
    .byte 0x00, 0x00
_080590C4: .4byte 0x080F0D68
_080590C8:
    ldr r0, _080590CC @ =0x080F0DA8
    b _080590D2
_080590CC: .4byte 0x080F0DA8
_080590D0:
    ldr r0, _080590E4 @ =0x080F0D88
_080590D2:
    str r0, [r2, #0x4C]
_080590D4:
    adds r0, r1, #0x1
    str r0, [r2, #0x6C]
    cmp r0, #0x33
    ble _080590E0
    movs r0, #0x00
    str r0, [r2, #0x6C]
_080590E0:
    bx lr
    .byte 0x00, 0x00
_080590E4: .4byte 0x080F0D88
    thumb_func_start sub_80590E8
sub_80590E8:
    push {lr}
    adds r2, r0, #0x0
    ldr r0, [r2, #0x60]
    cmp r0, #0xF0
    beq _08059116
    cmp r0, #0xF0
    bgt _08059100
    cmp r0, #0x10
    beq _0805910A
    cmp r0, #0x11
    beq _0805910E
    b _08059160
_08059100:
    cmp r0, #0xF2
    beq _08059150
    cmp r0, #0xF2
    blt _08059130
    b _08059160
_0805910A:
    movs r0, #0x11
    str r0, [r2, #0x60]
_0805910E:
    adds r0, r2, #0x0
    bl sub_8059074
    b _08059160
_08059116:
    movs r0, #0xF1
    str r0, [r2, #0x60]
    ldrh r1, [r2, #0x34]
    ldr r0, _08059144 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x34]
    ldr r1, _08059148 @ =0xFFFFFF00
    adds r0, r2, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
    movs r0, #0xC0
    lsls r0, r0, #0x0A
    str r0, [r2, #0x30]
_08059130:
    ldr r0, [r2, #0x08]
    ldr r1, [r2, #0x30]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    cmp r0, #0x00
    blt _08059150
    ldr r3, _0805914C @ =0xFFFFC000
    adds r0, r1, r3
    str r0, [r2, #0x30]
    b _08059160
_08059144: .4byte 0x0000FFFD
_08059148: .4byte 0xFFFFFF00
_0805914C: .4byte 0xFFFFC000
_08059150:
    movs r0, #0xF3
    str r0, [r2, #0x60]
    movs r0, #0x00
    str r0, [r2, #0x18]
    ldrh r1, [r2, #0x34]
    ldr r0, _08059164 @ =0x0000FFFE
    ands r0, r1
    strh r0, [r2, #0x34]
_08059160:
    pop {r0}
    bx r0
_08059164: .4byte 0x0000FFFE
    thumb_func_start sub_8059168
sub_8059168:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08059198
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _08059198
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _08059198
    movs r0, #0xF0
    str r0, [r3, #0x60]
_08059198:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_805919C
sub_805919C:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r0, _080591F4 @ =0x0000101A
    strh r0, [r4, #0x10]
    movs r0, #0x08
    strb r0, [r4, #0x0E]
    strb r0, [r4, #0x0D]
    strb r0, [r4, #0x0C]
    ldr r0, _080591F8 @ =0x080592B1
    str r0, [r4, #0x18]
    ldr r0, _080591FC @ =0x08059209
    str r0, [r4, #0x5C]
    ldr r0, _08059200 @ =0x080F0DE8
    str r0, [r4, #0x4C]
    movs r0, #0x10
    str r0, [r4, #0x60]
    bl main_getRandom
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    movs r1, #0xFC
    lsls r1, r1, #0x08
    ands r0, r1
    str r0, [r4, #0x64]
    movs r0, #0x80
    lsls r0, r0, #0x0C
    str r0, [r4, #0x68]
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r4, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldrh r1, [r4, #0x34]
    movs r0, #0x01
    orrs r0, r1
    ldr r1, _08059204 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r4, #0x34]
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_080591F4: .4byte 0x0000101A
_080591F8: .4byte sub_80592B0
_080591FC: .4byte sub_8059208
_08059200: .4byte 0x080F0DE8
_08059204: .4byte 0x0000FFFD
    thumb_func_start sub_8059208
sub_8059208:
    adds r2, r0, #0x0
    ldr r0, [r2, #0x60]
    cmp r0, #0xF0
    beq _0805925C
    cmp r0, #0xF0
    bgt _0805921E
    cmp r0, #0x10
    beq _08059228
    cmp r0, #0x11
    beq _0805922C
    b _080592A8
_0805921E:
    cmp r0, #0xF2
    beq _08059298
    cmp r0, #0xF2
    blt _08059276
    b _080592A8
_08059228:
    movs r0, #0x11
    str r0, [r2, #0x60]
_0805922C:
    ldr r3, [r2, #0x64]
    ldr r1, _08059258 @ =0x080E645C
    lsls r0, r3, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0805923A
    adds r0, #0x3F
_0805923A:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    ldr r1, [r2, #0x68]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    movs r1, #0x80
    lsls r1, r1, #0x03
    adds r0, r3, r1
    str r0, [r2, #0x64]
    b _080592A8
_08059258: .4byte 0x080E645C
_0805925C:
    movs r0, #0xF1
    str r0, [r2, #0x60]
    ldrh r1, [r2, #0x34]
    ldr r0, _0805928C @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x34]
    ldr r1, _08059290 @ =0xFFFFFF00
    adds r0, r2, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
    movs r0, #0xC0
    lsls r0, r0, #0x0A
    str r0, [r2, #0x30]
_08059276:
    ldr r0, [r2, #0x08]
    ldr r1, [r2, #0x30]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    cmp r0, #0x00
    blt _08059298
    ldr r3, _08059294 @ =0xFFFFC000
    adds r0, r1, r3
    str r0, [r2, #0x30]
    b _080592A8
    .byte 0x00, 0x00
_0805928C: .4byte 0x0000FFFD
_08059290: .4byte 0xFFFFFF00
_08059294: .4byte 0xFFFFC000
_08059298:
    movs r0, #0xF3
    str r0, [r2, #0x60]
    movs r0, #0x00
    str r0, [r2, #0x18]
    ldrh r1, [r2, #0x34]
    ldr r0, _080592AC @ =0x0000FFFE
    ands r0, r1
    strh r0, [r2, #0x34]
_080592A8:
    bx lr
    .byte 0x00, 0x00
_080592AC: .4byte 0x0000FFFE
    thumb_func_start sub_80592B0
sub_80592B0:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _080592E0
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _080592E0
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _080592E0
    movs r0, #0xF0
    str r0, [r3, #0x60]
_080592E0:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_80592E4
sub_80592E4:
    adds r3, r0, #0x0
    ldr r0, _08059348 @ =0x0000101B
    movs r1, #0x00
    movs r2, #0x00
    strh r0, [r3, #0x10]
    movs r0, #0x08
    strb r0, [r3, #0x0E]
    strb r0, [r3, #0x0D]
    strb r0, [r3, #0x0C]
    ldr r0, _0805934C @ =0x080F0E28
    str r0, [r3, #0x4C]
    adds r0, r3, #0x0
    adds r0, #0x60
    strb r1, [r0, #0x00]
    adds r0, #0x02
    strh r2, [r0, #0x00]
    adds r1, r3, #0x0
    adds r1, #0x64
    movs r0, #0x80
    lsls r0, r0, #0x04
    strh r0, [r1, #0x00]
    adds r0, r3, #0x0
    adds r0, #0x66
    strh r2, [r0, #0x00]
    adds r1, #0x04
    movs r0, #0x10
    strb r0, [r1, #0x00]
    adds r0, r3, #0x0
    adds r0, #0x6A
    strh r2, [r0, #0x00]
    str r2, [r3, #0x28]
    str r2, [r3, #0x2C]
    str r2, [r3, #0x30]
    ldr r0, _08059350 @ =0x080596D9
    str r0, [r3, #0x18]
    ldr r0, _08059354 @ =0x08059359
    str r0, [r3, #0x5C]
    ldrh r0, [r3, #0x34]
    movs r1, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r3, #0x34]
    movs r1, #0xE0
    adds r0, r3, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    bx lr
_08059348: .4byte 0x0000101B
_0805934C: .4byte 0x080F0E28
_08059350: .4byte sub_80596D8
_08059354: .4byte sub_8059358
    thumb_func_start sub_8059358
sub_8059358:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    adds r0, #0x60
    ldrb r0, [r0, #0x00]
    cmp r0, #0x08
    bls _08059366
    b _080596CC
_08059366:
    lsls r0, r0, #0x02
    ldr r1, _08059370 @ =0x08059374
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08059370: .4byte 0x08059374
    .byte 0x98, 0x93, 0x05, 0x08, 0xF0, 0x93, 0x05, 0x08, 0x00, 0x94, 0x05, 0x08, 0x2C, 0x95, 0x05, 0x08
    .byte 0x3C, 0x95, 0x05, 0x08, 0x78, 0x96, 0x05, 0x08, 0x96, 0x96, 0x05, 0x08, 0xB8, 0x96, 0x05, 0x08
    .byte 0xCC, 0x96, 0x05, 0x08, 0x2A, 0x1C, 0x62, 0x32, 0x11, 0x88, 0x00, 0x23, 0xD0, 0x5E, 0x00, 0x28
    .byte 0x01, 0xDD, 0x48, 0x1E, 0x04, 0xE0, 0x28, 0x1C, 0x60, 0x30, 0x02, 0x21, 0x01, 0x70, 0x40, 0x20
    .byte 0x10, 0x80, 0x29, 0x1C, 0x6A, 0x31, 0x80, 0x22, 0xD2, 0x00, 0x10, 0x1C, 0x0B, 0x88, 0xC0, 0x18
    .byte 0x08, 0x80, 0x09, 0x4A, 0x00, 0x23, 0xC8, 0x5E, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04
    .byte 0x80, 0x0D, 0x80, 0x00, 0x80, 0x18, 0x01, 0x68, 0x48, 0x00, 0x40, 0x18, 0xC0, 0x21, 0x09, 0x03
    .byte 0x40, 0x18, 0xA8, 0x60, 0x70, 0xE1, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0x28, 0x1C, 0x60, 0x30
    .byte 0x02, 0x21, 0x01, 0x70, 0x29, 0x1C, 0x62, 0x31, 0x80, 0x20, 0x08, 0x80, 0x28, 0x68, 0xA9, 0x6A
    .byte 0x40, 0x18, 0x28, 0x60, 0x68, 0x68, 0xE9, 0x6A, 0x40, 0x18, 0x68, 0x60, 0x29, 0x1C, 0x6A, 0x31
    .byte 0x80, 0x22, 0xD2, 0x00, 0x10, 0x1C, 0x0B, 0x88, 0xC0, 0x18, 0x08, 0x80, 0x20, 0x4A, 0x00, 0x23
    .byte 0xC8, 0x5E, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x80, 0x18
    .byte 0x01, 0x68, 0x48, 0x00, 0x40, 0x18, 0xC0, 0x21, 0x09, 0x03, 0x40, 0x18, 0xA8, 0x60, 0xAA, 0x6A
    .byte 0x2B, 0x1C, 0x64, 0x33, 0x00, 0x20, 0x19, 0x5E, 0x28, 0x1C, 0x68, 0x30, 0x00, 0x78, 0x48, 0x43
    .byte 0x82, 0x42, 0x08, 0xD0, 0x50, 0x18, 0xA8, 0x62, 0xE8, 0x6A, 0x29, 0x1C, 0x66, 0x31, 0x00, 0x22
    .byte 0x89, 0x5E, 0x40, 0x18, 0xE8, 0x62, 0xA9, 0x6A, 0x00, 0x29, 0x25, 0xD1, 0x29, 0x1C, 0x66, 0x31
    .byte 0x0C, 0x4C, 0x00, 0x22, 0x98, 0x5E, 0x00, 0x23, 0xC9, 0x5E, 0xD5, 0xF7, 0xDB, 0xFB, 0x00, 0x04
    .byte 0x00, 0x0C, 0x09, 0x49, 0x64, 0x18, 0x14, 0x22, 0xA1, 0x5E, 0x41, 0x1A, 0x07, 0x48, 0x01, 0x40
    .byte 0x07, 0x48, 0x81, 0x42, 0x36, 0xDC, 0x00, 0x29, 0x34, 0xDB, 0x06, 0x48, 0x33, 0xE0, 0x00, 0x00
    .byte 0x5C, 0x64, 0x0E, 0x08, 0x20, 0x2E, 0x00, 0x03, 0x48, 0x08, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00
    .byte 0xFF, 0x7F, 0x00, 0x00, 0x48, 0x0E, 0x0F, 0x08, 0xC8, 0x0F, 0x08, 0x18, 0xE9, 0x6A, 0xCA, 0x0F
    .byte 0x89, 0x18, 0x0B, 0x4C, 0xC0, 0x03, 0xC9, 0x03, 0x00, 0x14, 0x09, 0x14, 0xD5, 0xF7, 0xB2, 0xFB
    .byte 0x00, 0x04, 0x00, 0x0C, 0x07, 0x4B, 0xE4, 0x18, 0x14, 0x22, 0xA1, 0x5E, 0x41, 0x1A, 0x06, 0x48
    .byte 0x01, 0x40, 0x06, 0x48, 0x81, 0x42, 0x0D, 0xDC, 0x00, 0x29, 0x0B, 0xDB, 0x04, 0x48, 0x0A, 0xE0
    .byte 0x20, 0x2E, 0x00, 0x03, 0x48, 0x08, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0x7F, 0x00, 0x00
    .byte 0x48, 0x0E, 0x0F, 0x08, 0x07, 0x48, 0xE8, 0x64, 0x2A, 0x1C, 0x62, 0x32, 0x10, 0x88, 0x01, 0x38
    .byte 0x10, 0x80, 0x00, 0x04, 0x00, 0x28, 0x00, 0xDD, 0xD6, 0xE0, 0x28, 0x1C, 0x60, 0x30, 0x03, 0x21
    .byte 0xA1, 0xE0, 0x00, 0x00, 0x28, 0x0E, 0x0F, 0x08, 0x28, 0x1C, 0x60, 0x30, 0x04, 0x21, 0x01, 0x70
    .byte 0x29, 0x1C, 0x62, 0x31, 0x80, 0x20, 0x08, 0x80, 0x28, 0x68, 0xA9, 0x6A, 0x40, 0x18, 0x28, 0x60
    .byte 0x68, 0x68, 0xE9, 0x6A, 0x40, 0x18, 0x68, 0x60, 0x29, 0x1C, 0x6A, 0x31, 0x80, 0x23, 0xDB, 0x00
    .byte 0x18, 0x1C, 0x0A, 0x88, 0x80, 0x18, 0x08, 0x80, 0x23, 0x4A, 0x00, 0x23, 0xC8, 0x5E, 0x00, 0x28
    .byte 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x80, 0x18, 0x01, 0x68, 0x48, 0x00
    .byte 0x40, 0x18, 0xC0, 0x21, 0x09, 0x03, 0x40, 0x18, 0xA8, 0x60, 0xAA, 0x6A, 0x2B, 0x1C, 0x64, 0x33
    .byte 0x00, 0x20, 0x19, 0x5E, 0x28, 0x1C, 0x68, 0x30, 0x00, 0x78, 0x48, 0x43, 0xC2, 0x42, 0x08, 0xD0
    .byte 0x50, 0x1A, 0xA8, 0x62, 0xE8, 0x6A, 0x29, 0x1C, 0x66, 0x31, 0x00, 0x22, 0x89, 0x5E, 0x40, 0x1A
    .byte 0xE8, 0x62, 0xA9, 0x6A, 0x00, 0x29, 0x2B, 0xD1, 0x00, 0x21, 0x58, 0x5E, 0x40, 0x42, 0x29, 0x1C
    .byte 0x66, 0x31, 0x00, 0x22, 0x89, 0x5E, 0x49, 0x42, 0x0C, 0x4C, 0x00, 0x04, 0x00, 0x14, 0x09, 0x04
    .byte 0x09, 0x14, 0xD5, 0xF7, 0x37, 0xFB, 0x00, 0x04, 0x00, 0x0C, 0x09, 0x4B, 0xE4, 0x18, 0x14, 0x22
    .byte 0xA1, 0x5E, 0x41, 0x1A, 0x07, 0x48, 0x01, 0x40, 0x07, 0x48, 0x81, 0x42, 0x36, 0xDC, 0x00, 0x29
    .byte 0x34, 0xDB, 0x06, 0x48, 0x33, 0xE0, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0x20, 0x2E, 0x00, 0x03
    .byte 0x48, 0x08, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0x7F, 0x00, 0x00, 0x48, 0x0E, 0x0F, 0x08
    .byte 0xC8, 0x0F, 0x08, 0x18, 0xE9, 0x6A, 0xCA, 0x0F, 0x89, 0x18, 0x0B, 0x4C, 0xC0, 0x03, 0xC9, 0x03
    .byte 0x00, 0x14, 0x09, 0x14, 0xD5, 0xF7, 0x0E, 0xFB, 0x00, 0x04, 0x00, 0x0C, 0x07, 0x4B, 0xE4, 0x18
    .byte 0x14, 0x22, 0xA1, 0x5E, 0x41, 0x1A, 0x06, 0x48, 0x01, 0x40, 0x06, 0x48, 0x81, 0x42, 0x0D, 0xDC
    .byte 0x00, 0x29, 0x0B, 0xDB, 0x04, 0x48, 0x0A, 0xE0, 0x20, 0x2E, 0x00, 0x03, 0x48, 0x08, 0x00, 0x00
    .byte 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0x7F, 0x00, 0x00, 0x48, 0x0E, 0x0F, 0x08, 0x08, 0x48, 0xE8, 0x64
    .byte 0x2A, 0x1C, 0x62, 0x32, 0x10, 0x88, 0x01, 0x38, 0x10, 0x80, 0x00, 0x04, 0x00, 0x28, 0x33, 0xDC
    .byte 0x28, 0x1C, 0x60, 0x30, 0x01, 0x21, 0x01, 0x70, 0x80, 0x20, 0x10, 0x80, 0x2C, 0xE0, 0x00, 0x00
    .byte 0x28, 0x0E, 0x0F, 0x08, 0x29, 0x1C, 0x60, 0x31, 0x06, 0x20, 0x08, 0x70, 0xA9, 0x8E, 0x0A, 0x48
    .byte 0x08, 0x40, 0xA8, 0x86, 0x09, 0x49, 0x28, 0x1C, 0x58, 0x30, 0x01, 0x80, 0xC0, 0x20, 0x80, 0x02
    .byte 0x28, 0x63, 0xA8, 0x68, 0x29, 0x6B, 0x40, 0x18, 0xA8, 0x60, 0x00, 0x28, 0x0A, 0xDB, 0x04, 0x4B
    .byte 0xC8, 0x18, 0x28, 0x63, 0x10, 0xE0, 0x00, 0x00, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF
    .byte 0x00, 0xC0, 0xFF, 0xFF, 0x29, 0x1C, 0x60, 0x31, 0x00, 0x22, 0x08, 0x20, 0x08, 0x70, 0xAA, 0x61
    .byte 0xA9, 0x8E, 0x03, 0x48, 0x08, 0x40, 0xA8, 0x86
_080596CC:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00, 0xFE, 0xFF, 0x00, 0x00
    thumb_func_start sub_80596D8
sub_80596D8:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _0805970C
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _0805970C
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _0805970C
    adds r1, r3, #0x0
    adds r1, #0x60
    movs r0, #0x05
    strb r0, [r1, #0x00]
_0805970C:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8059710
sub_8059710:
    adds r2, r0, #0x0
    ldr r0, _08059758 @ =0x0000101C
    movs r3, #0x00
    strh r0, [r2, #0x10]
    ldr r0, _0805975C @ =0x080F0E68
    str r0, [r2, #0x4C]
    ldr r0, _08059760 @ =0x0805982D
    str r0, [r2, #0x5C]
    ldr r0, _08059764 @ =0x080598ED
    str r0, [r2, #0x18]
    ldrh r1, [r2, #0x34]
    movs r0, #0x02
    orrs r0, r1
    strh r0, [r2, #0x34]
    str r3, [r2, #0x60]
    str r3, [r2, #0x64]
    str r3, [r2, #0x68]
    movs r1, #0xE0
    adds r0, r2, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldr r1, [r2, #0x50]
    movs r0, #0xA1
    lsls r0, r0, #0x10
    cmp r1, r0
    beq _0805976C
    adds r0, #0x01
    cmp r1, r0
    bne _0805976C
    ldr r0, _08059768 @ =0xFFFF8000
    str r0, [r2, #0x28]
    str r3, [r2, #0x2C]
    b _08059776
    .byte 0x00, 0x00
_08059758: .4byte 0x0000101C
_0805975C: .4byte 0x080F0E68
_08059760: .4byte sub_805982C
_08059764: .4byte sub_80598EC
_08059768: .4byte 0xFFFF8000
_0805976C:
    movs r0, #0x80
    lsls r0, r0, #0x08
    str r0, [r2, #0x28]
    movs r0, #0x00
    str r0, [r2, #0x2C]
_08059776:
    bx lr
    thumb_func_start sub_8059778
sub_8059778:
    push {r4, r5, r6, lr}
    adds r6, r0, #0x0
    adds r5, r1, #0x0
    adds r0, r2, #0x0
    adds r1, r3, #0x0
    ldr r4, _080597C0 @ =0x03002E20
    lsrs r2, r0, #0x1F
    adds r0, r0, r2
    lsls r0, r0, #0x0F
    lsrs r2, r1, #0x1F
    adds r1, r1, r2
    lsls r1, r1, #0x0F
    asrs r0, r0, #0x10
    asrs r1, r1, #0x10
    bl sub_802EC38
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    ldr r1, _080597C4 @ =0x00000848
    adds r4, r4, r1
    movs r2, #0x14
    ldsh r1, [r4, r2]
    subs r2, r0, r1
    ldr r0, [r6, #0x64]
    adds r0, #0x01
    str r0, [r6, #0x64]
    cmp r0, r5
    blt _080597CE
    ldr r1, [r6, #0x60]
    cmp r1, #0x00
    beq _080597C8
    movs r0, #0x00
    str r0, [r6, #0x60]
    str r0, [r6, #0x64]
    b _080597CE
    .byte 0x00, 0x00
_080597C0: .4byte 0x03002E20
_080597C4: .4byte 0x00000848
_080597C8:
    movs r0, #0x01
    str r0, [r6, #0x60]
    str r1, [r6, #0x64]
_080597CE:
    ldr r0, [r6, #0x60]
    cmp r0, #0x00
    beq _080597FC
    ldr r1, _080597E8 @ =0x0000FFFF
    ands r1, r2
    ldr r0, _080597EC @ =0x00007FFF
    cmp r1, r0
    bgt _080597F4
    cmp r1, #0x00
    blt _080597F4
    ldr r0, _080597F0 @ =0x080F0EA8
    b _0805981E
    .byte 0x00, 0x00
_080597E8: .4byte 0x0000FFFF
_080597EC: .4byte 0x00007FFF
_080597F0: .4byte 0x080F0EA8
_080597F4:
    ldr r0, _080597F8 @ =0x080F0E68
    b _0805981E
_080597F8: .4byte 0x080F0E68
_080597FC:
    ldr r1, _08059810 @ =0x0000FFFF
    ands r1, r2
    ldr r0, _08059814 @ =0x00007FFF
    cmp r1, r0
    bgt _0805981C
    cmp r1, #0x00
    blt _0805981C
    ldr r0, _08059818 @ =0x080F0EC8
    b _0805981E
    .byte 0x00, 0x00
_08059810: .4byte 0x0000FFFF
_08059814: .4byte 0x00007FFF
_08059818: .4byte 0x080F0EC8
_0805981C:
    ldr r0, _08059828 @ =0x080F0E88
_0805981E:
    str r0, [r6, #0x4C]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_08059828: .4byte 0x080F0E88
    thumb_func_start sub_805982C
sub_805982C:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r2, [r4, #0x68]
    ldrh r3, [r4, #0x34]
    movs r0, #0x02
    ands r0, r3
    cmp r0, #0x00
    beq _080598B8
    cmp r2, #0xAF
    ble _08059860
    ldr r0, _0805985C @ =0x0000010F
    cmp r2, r0
    bgt _08059890
    ldr r0, [r4, #0x00]
    ldr r2, [r4, #0x28]
    subs r0, r0, r2
    str r0, [r4, #0x00]
    ldr r0, [r4, #0x04]
    ldr r3, [r4, #0x2C]
    subs r0, r0, r3
    str r0, [r4, #0x04]
    negs r2, r2
    negs r3, r3
    b _08059878
_0805985C: .4byte 0x0000010F
_08059860:
    cmp r2, #0x60
    bge _08059882
    cmp r2, #0x00
    blt _08059890
    ldr r0, [r4, #0x00]
    ldr r2, [r4, #0x28]
    adds r0, r0, r2
    str r0, [r4, #0x00]
    ldr r0, [r4, #0x04]
    ldr r3, [r4, #0x2C]
    adds r0, r0, r3
    str r0, [r4, #0x04]
_08059878:
    adds r0, r4, #0x0
    movs r1, #0x06
    bl sub_8059778
    b _080598A0
_08059882:
    ldr r2, [r4, #0x28]
    ldr r3, [r4, #0x2C]
    adds r0, r4, #0x0
    movs r1, #0x0A
    bl sub_8059778
    b _080598A0
_08059890:
    ldr r2, [r4, #0x28]
    negs r2, r2
    ldr r3, [r4, #0x2C]
    negs r3, r3
    adds r0, r4, #0x0
    movs r1, #0x0A
    bl sub_8059778
_080598A0:
    ldr r0, [r4, #0x68]
    adds r0, #0x01
    str r0, [r4, #0x68]
    ldr r1, _080598B4 @ =0x0000015F
    cmp r0, r1
    ble _080598DE
    movs r0, #0x00
    str r0, [r4, #0x68]
    b _080598DE
    .byte 0x00, 0x00
_080598B4: .4byte 0x0000015F
_080598B8:
    movs r0, #0x01
    ands r0, r3
    cmp r0, #0x00
    beq _080598DE
    ldr r1, _080598E4 @ =0x080E645C
    lsls r0, r2, #0x06
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x04
    str r0, [r4, #0x08]
    subs r0, r2, #0x1
    str r0, [r4, #0x68]
    cmp r0, #0x00
    bge _080598DE
    ldr r0, _080598E8 @ =0x0000FFFE
    ands r3, r0
    strh r3, [r4, #0x34]
_080598DE:
    pop {r4}
    pop {r0}
    bx r0
_080598E4: .4byte 0x080E645C
_080598E8: .4byte 0x0000FFFE
    thumb_func_start sub_80598EC
sub_80598EC:
    adds r3, r0, #0x0
    adds r2, r1, #0x0
    ldrh r0, [r2, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _0805992C
    adds r0, r2, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _0805992C
    adds r0, r2, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _0805992C
    movs r0, #0x20
    str r0, [r3, #0x68]
    ldrh r1, [r3, #0x34]
    ldr r0, _08059930 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
    ldr r1, _08059934 @ =0xFFFFFF00
    adds r0, r3, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
_0805992C:
    bx lr
    .byte 0x00, 0x00
_08059930: .4byte 0x0000FFFD
_08059934: .4byte 0xFFFFFF00
    thumb_func_start sub_8059938
sub_8059938:
    adds r3, r0, #0x0
    ldr r0, _08059998 @ =0x0000101D
    movs r2, #0x00
    strh r0, [r3, #0x10]
    movs r0, #0x08
    strb r0, [r3, #0x0E]
    strb r0, [r3, #0x0D]
    strb r0, [r3, #0x0C]
    ldr r0, _0805999C @ =0x080599ED
    str r0, [r3, #0x5C]
    ldr r0, _080599A0 @ =0x080F0EE8
    str r0, [r3, #0x4C]
    ldrh r1, [r3, #0x34]
    ldr r0, _080599A4 @ =0x0000FFFE
    ands r0, r1
    ldr r1, _080599A8 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r3, #0x34]
    movs r1, #0xE0
    adds r0, r3, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldr r0, [r3, #0x00]
    str r0, [r3, #0x68]
    ldr r0, [r3, #0x04]
    str r0, [r3, #0x6C]
    adds r0, r3, #0x0
    adds r0, #0x60
    strb r2, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x07
    str r0, [r3, #0x28]
    str r0, [r3, #0x2C]
    ldr r1, [r3, #0x50]
    ldr r0, _080599AC @ =0x00A20001
    cmp r1, r0
    beq _080599B0
    cmp r1, r0
    ble _080599DA
    adds r0, #0x01
    cmp r1, r0
    beq _080599BE
    adds r0, #0x01
    cmp r1, r0
    beq _080599CC
    b _080599DA
_08059998: .4byte 0x0000101D
_0805999C: .4byte sub_80599EC
_080599A0: .4byte 0x080F0EE8
_080599A4: .4byte 0x0000FFFE
_080599A8: .4byte 0x0000FFFD
_080599AC: .4byte 0x00A20001
_080599B0:
    adds r0, r3, #0x0
    adds r0, #0x66
    movs r1, #0x80
    strh r1, [r0, #0x00]
    subs r0, #0x02
    strh r1, [r0, #0x00]
    b _080599E8
_080599BE:
    adds r1, r3, #0x0
    adds r1, #0x66
    movs r0, #0x80
    strh r0, [r1, #0x00]
    subs r1, #0x02
    movs r0, #0x90
    b _080599E6
_080599CC:
    adds r1, r3, #0x0
    adds r1, #0x66
    movs r0, #0x80
    strh r0, [r1, #0x00]
    subs r1, #0x02
    movs r0, #0xA0
    b _080599E6
_080599DA:
    adds r1, r3, #0x0
    adds r1, #0x66
    movs r0, #0x80
    strh r0, [r1, #0x00]
    subs r1, #0x02
    movs r0, #0x70
_080599E6:
    strh r0, [r1, #0x00]
_080599E8:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_80599EC
sub_80599EC:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    adds r6, r0, #0x0
    adds r0, #0x62
    movs r1, #0x00
    ldsh r7, [r0, r1]
    subs r0, #0x02
    ldrb r0, [r0, #0x00]
    mov r8, r0
    cmp r0, #0x0B
    bls _08059A0A
    b _08059DDE
_08059A0A:
    lsls r0, r0, #0x02
    ldr r1, _08059A14 @ =0x08059A18
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    mov pc, r0
_08059A14: .4byte 0x08059A18
    .byte 0x48, 0x9A, 0x05, 0x08, 0x70, 0x9A, 0x05, 0x08, 0x84, 0x9A, 0x05, 0x08, 0x36, 0x9B, 0x05, 0x08
    .byte 0x90, 0x9B, 0x05, 0x08, 0x06, 0x9C, 0x05, 0x08, 0x60, 0x9C, 0x05, 0x08, 0xD2, 0x9C, 0x05, 0x08
    .byte 0x0C, 0x9D, 0x05, 0x08, 0x7C, 0x9D, 0x05, 0x08, 0xC8, 0x9D, 0x05, 0x08, 0xD4, 0x9D, 0x05, 0x08
    .byte 0x01, 0x22, 0x90, 0x46, 0x30, 0x1C, 0x64, 0x30, 0x00, 0x21, 0x47, 0x5E, 0x04, 0x20, 0xB0, 0x73
    .byte 0x70, 0x73, 0x30, 0x73, 0xB1, 0x8E, 0x07, 0x48, 0x08, 0x40, 0x07, 0x49, 0x08, 0x40, 0xB0, 0x86
    .byte 0xB0, 0x6E, 0x30, 0x60, 0xF0, 0x6E, 0x70, 0x60, 0x01, 0x3F, 0x00, 0x2F, 0x00, 0xDD, 0xB2, 0xE1
    .byte 0x02, 0x22, 0xAF, 0xE1, 0xFE, 0xFF, 0x00, 0x00, 0xFD, 0xFF, 0x00, 0x00, 0x03, 0x20, 0x80, 0x46
    .byte 0x3A, 0x48, 0xF0, 0x64, 0x3A, 0x48, 0xB0, 0x61, 0xC0, 0x20, 0x80, 0x03, 0xB0, 0x60, 0x00, 0x20
    .byte 0x30, 0x63, 0x80, 0x21, 0xC9, 0x00, 0x30, 0x1C, 0x56, 0x30, 0x01, 0x80, 0x02, 0x30, 0x01, 0x80
    .byte 0xB0, 0x8E, 0x01, 0x21, 0x08, 0x43, 0x02, 0x21, 0x08, 0x43, 0xB0, 0x86, 0x31, 0x48, 0x03, 0x1C
    .byte 0x24, 0x33, 0x31, 0x49, 0x40, 0x18, 0x02, 0x68, 0x24, 0x20, 0x31, 0x5E, 0x01, 0x20, 0x40, 0x42
    .byte 0x81, 0x42, 0x34, 0xD0, 0x90, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x2F, 0xD1, 0x2B, 0x49
    .byte 0x89, 0x46, 0x2B, 0x48, 0xC1, 0x22, 0x12, 0x01, 0x85, 0x18, 0xA9, 0x88, 0x48, 0x00, 0x40, 0x18
    .byte 0x80, 0x00, 0x48, 0x44, 0x00, 0x68, 0x80, 0x88, 0x00, 0x28, 0x20, 0xD1, 0x18, 0x1C, 0x31, 0x1C
    .byte 0xF3, 0xF7, 0x16, 0xF9, 0x00, 0x04, 0x02, 0x0C, 0x3F, 0x2A, 0x18, 0xDD, 0x14, 0x1C, 0x00, 0x2C
    .byte 0x15, 0xD0, 0xC1, 0x20, 0x40, 0x00, 0x06, 0xF0, 0x07, 0xFA, 0xA9, 0x88, 0x48, 0x00, 0x40, 0x18
    .byte 0x80, 0x00, 0x48, 0x44, 0x00, 0x68, 0x06, 0xF0, 0xF7, 0xFA, 0xA9, 0x88, 0x48, 0x00, 0x40, 0x18
    .byte 0x80, 0x00, 0x48, 0x44, 0x00, 0x68, 0x01, 0x21, 0x22, 0x1C, 0x07, 0xF0, 0xA5, 0xF9, 0x32, 0x1C
    .byte 0x56, 0x32, 0x00, 0x21, 0x50, 0x5E, 0x18, 0x38, 0x00, 0x04, 0x01, 0x0C, 0x00, 0x14, 0xC0, 0x28
    .byte 0x00, 0xDC, 0xC0, 0x21, 0x08, 0x04, 0x00, 0x14, 0x10, 0x80, 0x31, 0x1C, 0x58, 0x31, 0x08, 0x80
    .byte 0x30, 0x6B, 0x0C, 0x4A, 0x80, 0x18, 0x30, 0x63, 0xB1, 0x68, 0x09, 0x18, 0x00, 0x29, 0x02, 0xDC
    .byte 0x00, 0x21, 0x04, 0x20, 0x80, 0x46, 0xB1, 0x60, 0x35, 0xE1, 0x00, 0x00, 0xE8, 0x0E, 0x0F, 0x08
    .byte 0xF9, 0x9D, 0x05, 0x08, 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08
    .byte 0x98, 0x24, 0x10, 0x08, 0x00, 0xF4, 0xFF, 0xFF, 0x1F, 0x48, 0xB0, 0x61, 0x05, 0x21, 0x88, 0x46
    .byte 0x0A, 0x27, 0xC0, 0x21, 0x30, 0x1C, 0x56, 0x30, 0x01, 0x80, 0x02, 0x30, 0x01, 0x80, 0x1B, 0x48
    .byte 0x02, 0x1C, 0x24, 0x32, 0x1A, 0x49, 0x40, 0x18, 0x00, 0x68, 0x80, 0x6C, 0x20, 0x21, 0x08, 0x40
    .byte 0x00, 0x28, 0x24, 0xD1, 0x10, 0x1C, 0x31, 0x1C, 0xF3, 0xF7, 0xB2, 0xF8, 0x00, 0x04, 0x02, 0x0C
    .byte 0x3F, 0x2A, 0x1C, 0xDD, 0x15, 0x1C, 0x00, 0x2D, 0x19, 0xD0, 0x12, 0x48, 0x06, 0xF0, 0xA4, 0xF9
    .byte 0x11, 0x4A, 0x91, 0x46, 0x11, 0x4C, 0x12, 0x48, 0x24, 0x18, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18
    .byte 0x80, 0x00, 0x48, 0x44, 0x00, 0x68, 0x06, 0xF0, 0x8F, 0xFA, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18
    .byte 0x80, 0x00, 0x48, 0x44, 0x00, 0x68, 0x01, 0x21, 0x2A, 0x1C, 0x07, 0xF0, 0x3D, 0xF9, 0x08, 0x2F
    .byte 0x12, 0xDD, 0x08, 0x48, 0x1D, 0xE0, 0x00, 0x00, 0xFD, 0x9D, 0x05, 0x08, 0x20, 0x2E, 0x00, 0x03
    .byte 0x38, 0x08, 0x00, 0x00, 0x83, 0x01, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08
    .byte 0x18, 0x0C, 0x00, 0x00, 0x28, 0x0F, 0x0F, 0x08, 0x05, 0x2F, 0x03, 0xDD, 0x00, 0x48, 0x08, 0xE0
    .byte 0x48, 0x0F, 0x0F, 0x08, 0x02, 0x2F, 0x03, 0xDD, 0x00, 0x48, 0x02, 0xE0, 0x68, 0x0F, 0x0F, 0x08
    .byte 0x04, 0x48, 0xF0, 0x64, 0x01, 0x3F, 0x00, 0x2F, 0x00, 0xDD, 0xC4, 0xE0, 0x06, 0x21, 0x88, 0x46
    .byte 0xC1, 0xE0, 0x00, 0x00, 0x88, 0x0F, 0x0F, 0x08, 0x07, 0x22, 0x90, 0x46, 0x80, 0x20, 0x40, 0x02
    .byte 0x30, 0x63, 0x23, 0x48, 0xF0, 0x64, 0x23, 0x48, 0x02, 0x1C, 0x24, 0x32, 0x22, 0x49, 0x40, 0x18
    .byte 0x00, 0x68, 0x80, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x26, 0xD1, 0x10, 0x1C, 0x31, 0x1C
    .byte 0xF3, 0xF7, 0x4E, 0xF8, 0x00, 0x04, 0x02, 0x0C, 0x3F, 0x2A, 0x1E, 0xDD, 0x91, 0x46, 0x00, 0x2A
    .byte 0x1B, 0xD0, 0xC2, 0x20, 0x40, 0x00, 0x06, 0xF0, 0x3F, 0xF9, 0x18, 0x4A, 0x92, 0x46, 0x18, 0x4C
    .byte 0xC2, 0x20, 0x00, 0x01, 0x24, 0x18, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x50, 0x44
    .byte 0x00, 0x68, 0x06, 0xF0, 0x29, 0xFA, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x50, 0x44
    .byte 0x00, 0x68, 0x01, 0x21, 0x4A, 0x46, 0x07, 0xF0, 0xD7, 0xF8, 0x30, 0x68, 0xB1, 0x6A, 0x40, 0x18
    .byte 0x30, 0x60, 0x70, 0x68, 0xF1, 0x6A, 0x40, 0x18, 0x70, 0x60, 0xB0, 0x68, 0x31, 0x6B, 0x40, 0x18
    .byte 0xB0, 0x60, 0x00, 0x28, 0x66, 0xDC, 0x00, 0x20, 0xB0, 0x60, 0x08, 0x21, 0x88, 0x46, 0x72, 0xE0
    .byte 0xE8, 0x0E, 0x0F, 0x08, 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08
    .byte 0x98, 0x24, 0x10, 0x08, 0x09, 0x20, 0x80, 0x46, 0x30, 0x6B, 0xC1, 0x0F, 0x40, 0x18, 0x40, 0x10
    .byte 0x40, 0x42, 0x30, 0x63, 0x21, 0x48, 0x02, 0x1C, 0x24, 0x32, 0x21, 0x49, 0x40, 0x18, 0x00, 0x68
    .byte 0x80, 0x6C, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28, 0x24, 0xD1, 0x10, 0x1C, 0x31, 0x1C, 0xF2, 0xF7
    .byte 0xF7, 0xFF, 0x00, 0x04, 0x02, 0x0C, 0x3F, 0x2A, 0x1C, 0xDD, 0x91, 0x46, 0x00, 0x2A, 0x19, 0xD0
    .byte 0x18, 0x48, 0x06, 0xF0, 0xE9, 0xF8, 0x18, 0x4A, 0x92, 0x46, 0x18, 0x4C, 0x18, 0x48, 0x24, 0x18
    .byte 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x50, 0x44, 0x00, 0x68, 0x06, 0xF0, 0xD4, 0xF9
    .byte 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x50, 0x44, 0x00, 0x68, 0x01, 0x21, 0x4A, 0x46
    .byte 0x07, 0xF0, 0x82, 0xF8, 0x30, 0x68, 0xB1, 0x6A, 0x40, 0x18, 0x30, 0x60, 0x70, 0x68, 0xF1, 0x6A
    .byte 0x40, 0x18, 0x70, 0x60, 0xB0, 0x68, 0x31, 0x6B, 0x40, 0x18, 0xB0, 0x60, 0x00, 0x28, 0x11, 0xDC
    .byte 0x00, 0x20, 0xB0, 0x60, 0x0A, 0x21, 0x88, 0x46, 0x1D, 0xE0, 0x00, 0x00, 0x20, 0x2E, 0x00, 0x03
    .byte 0x38, 0x08, 0x00, 0x00, 0x85, 0x01, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08
    .byte 0x28, 0x0C, 0x00, 0x00, 0x01, 0x4A, 0x88, 0x18, 0x30, 0x63, 0x0C, 0xE0, 0x00, 0xE8, 0xFF, 0xFF
    .byte 0x0B, 0x20, 0x80, 0x46, 0x30, 0x1C, 0x66, 0x30, 0x00, 0x21, 0x47, 0x5E, 0x01, 0x3F, 0x00, 0x2F
    .byte 0x01, 0xDC, 0x00, 0x22, 0x90, 0x46
_08059DDE:
    adds r0, r6, #0x0
    adds r0, #0x60
    mov r1, r8
    strb r1, [r0, #0x00]
    adds r0, #0x02
    strh r7, [r0, #0x00]
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    thumb_func_start nullsub_30
nullsub_30: @ 08059DF8
    bx lr
    .byte 0x00, 0x00
    thumb_func_start nullsub_31
nullsub_31: @ 08059DFC
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_8059E00
sub_8059E00:
    push {r4, lr}
    adds r2, r0, #0x0
    ldr r4, [r2, #0x64]
    ldr r0, [r2, #0x60]
    cmp r0, #0x00
    beq _08059E32
    ldrh r0, [r2, #0x34]
    ldr r3, _08059E38 @ =0x0000FFFD
    ands r3, r0
    strh r3, [r2, #0x34]
    ldr r1, _08059E3C @ =0x080E645C
    lsls r0, r4, #0x06
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x04
    str r0, [r2, #0x08]
    subs r0, r4, #0x1
    str r0, [r2, #0x64]
    cmp r0, #0x00
    bge _08059E32
    ldr r0, _08059E40 @ =0x0000FFFE
    ands r0, r3
    strh r0, [r2, #0x34]
_08059E32:
    pop {r4}
    pop {r0}
    bx r0
_08059E38: .4byte 0x0000FFFD
_08059E3C: .4byte 0x080E645C
_08059E40: .4byte 0x0000FFFE
    thumb_func_start sub_8059E44
sub_8059E44:
    adds r2, r0, #0x0
    adds r3, r1, #0x0
    ldrh r0, [r3, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _08059E7A
    adds r0, r3, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    beq _08059E7A
    ldr r0, [r2, #0x60]
    cmp r0, #0x00
    bne _08059E7A
    movs r0, #0x01
    str r0, [r2, #0x60]
    movs r0, #0x20
    str r0, [r2, #0x64]
    ldr r1, _08059E7C @ =0xFFFFFF00
    adds r0, r2, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
_08059E7A:
    bx lr
_08059E7C: .4byte 0xFFFFFF00
    thumb_func_start sub_8059E80
sub_8059E80:
    ldr r1, _08059E90 @ =0x08059E01
    str r1, [r0, #0x5C]
    ldr r1, _08059E94 @ =0x08059E45
    str r1, [r0, #0x18]
    movs r1, #0x00
    str r1, [r0, #0x60]
    str r1, [r0, #0x64]
    bx lr
_08059E90: .4byte sub_8059E00
_08059E94: .4byte sub_8059E44
    thumb_func_start sub_8059E98
sub_8059E98:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    ldr r0, _08059EF4 @ =0x00001008
    movs r4, #0x00
    strh r0, [r5, #0x10]
    movs r0, #0x08
    movs r1, #0x20
    strb r0, [r5, #0x0C]
    strb r0, [r5, #0x0D]
    strb r1, [r5, #0x0E]
    ldr r0, _08059EF8 @ =0x08059FAD
    str r0, [r5, #0x18]
    ldr r0, _08059EFC @ =0x08059F05
    str r0, [r5, #0x5C]
    ldr r0, _08059F00 @ =0x080F0FE8
    str r0, [r5, #0x4C]
    movs r0, #0x10
    str r0, [r5, #0x60]
    bl main_getRandom
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    movs r1, #0xFC
    lsls r1, r1, #0x08
    ands r0, r1
    str r0, [r5, #0x64]
    str r4, [r5, #0x6C]
    movs r0, #0x80
    lsls r0, r0, #0x0C
    str r0, [r5, #0x68]
    movs r1, #0x80
    lsls r1, r1, #0x01
    adds r0, r5, #0x0
    adds r0, #0x56
    strh r1, [r0, #0x00]
    adds r0, #0x02
    strh r1, [r0, #0x00]
    ldrh r0, [r5, #0x34]
    movs r1, #0x01
    orrs r0, r1
    movs r1, #0x02
    orrs r0, r1
    strh r0, [r5, #0x34]
    pop {r4, r5}
    pop {r0}
    bx r0
_08059EF4: .4byte 0x00001008
_08059EF8: .4byte sub_8059FAC
_08059EFC: .4byte sub_8059F04
_08059F00: .4byte 0x080F0FE8
    thumb_func_start sub_8059F04
sub_8059F04:
    adds r2, r0, #0x0
    ldr r0, [r2, #0x60]
    cmp r0, #0xF0
    beq _08059F58
    cmp r0, #0xF0
    bgt _08059F1A
    cmp r0, #0x10
    beq _08059F24
    cmp r0, #0x11
    beq _08059F28
    b _08059FA4
_08059F1A:
    cmp r0, #0xF2
    beq _08059F94
    cmp r0, #0xF2
    blt _08059F72
    b _08059FA4
_08059F24:
    movs r0, #0x11
    str r0, [r2, #0x60]
_08059F28:
    ldr r3, [r2, #0x64]
    ldr r1, _08059F54 @ =0x080E645C
    lsls r0, r3, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _08059F36
    adds r0, #0x3F
_08059F36:
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x16
    lsls r0, r0, #0x02
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    ldr r1, [r2, #0x68]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    movs r1, #0x80
    lsls r1, r1, #0x03
    adds r0, r3, r1
    str r0, [r2, #0x64]
    b _08059FA4
_08059F54: .4byte 0x080E645C
_08059F58:
    movs r0, #0xF1
    str r0, [r2, #0x60]
    ldrh r1, [r2, #0x34]
    ldr r0, _08059F88 @ =0x0000FFFD
    ands r0, r1
    strh r0, [r2, #0x34]
    ldr r1, _08059F8C @ =0xFFFFFF00
    adds r0, r2, #0x0
    adds r0, #0x58
    strh r1, [r0, #0x00]
    movs r0, #0xC0
    lsls r0, r0, #0x0A
    str r0, [r2, #0x30]
_08059F72:
    ldr r0, [r2, #0x08]
    ldr r1, [r2, #0x30]
    adds r0, r0, r1
    str r0, [r2, #0x08]
    cmp r0, #0x00
    blt _08059F94
    ldr r3, _08059F90 @ =0xFFFFC000
    adds r0, r1, r3
    str r0, [r2, #0x30]
    b _08059FA4
    .byte 0x00, 0x00
_08059F88: .4byte 0x0000FFFD
_08059F8C: .4byte 0xFFFFFF00
_08059F90: .4byte 0xFFFFC000
_08059F94:
    movs r0, #0xF3
    str r0, [r2, #0x60]
    movs r0, #0x00
    str r0, [r2, #0x18]
    ldrh r1, [r2, #0x34]
    ldr r0, _08059FA8 @ =0x0000FFFE
    ands r0, r1
    strh r0, [r2, #0x34]
_08059FA4:
    bx lr
    .byte 0x00, 0x00
_08059FA8: .4byte 0x0000FFFE
    thumb_func_start sub_8059FAC
sub_8059FAC:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    adds r3, r1, #0x0
    ldr r2, _08059FE4 @ =0x03002E20
    ldrh r0, [r3, #0x10]
    movs r1, #0xF0
    lsls r1, r1, #0x08
    ands r0, r1
    movs r1, #0x80
    lsls r1, r1, #0x06
    cmp r0, r1
    bne _0805A00C
    adds r0, r3, #0x0
    adds r0, #0x66
    movs r1, #0x00
    ldsh r0, [r0, r1]
    cmp r0, #0x00
    bne _0805A00C
    adds r0, r3, #0x0
    adds r0, #0x6A
    movs r1, #0x00
    ldsh r5, [r0, r1]
    cmp r5, #0x00
    beq _08059FE8
    movs r0, #0xF0
    str r0, [r4, #0x60]
    b _0805A00C
    .byte 0x00, 0x00
_08059FE4: .4byte 0x03002E20
_08059FE8:
    ldr r0, _0805A014 @ =0x00000C12
    adds r2, r2, r0
    ldrh r1, [r2, #0x00]
    movs r0, #0x01
    orrs r0, r1
    strh r0, [r2, #0x00]
    ldrh r1, [r4, #0x34]
    ldr r0, _0805A018 @ =0x0000FFFE
    ands r0, r1
    ldr r1, _0805A01C @ =0x0000FFFD
    ands r0, r1
    strh r0, [r4, #0x34]
    adds r0, r3, #0x0
    bl sub_8048C2C
    movs r0, #0xF3
    str r0, [r4, #0x60]
    str r5, [r4, #0x18]
_0805A00C:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805A014: .4byte 0x00000C12
_0805A018: .4byte 0x0000FFFE
_0805A01C: .4byte 0x0000FFFD
    .byte 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x28, 0x05, 0xDC, 0x41, 0x01, 0x01, 0x48, 0x0C, 0x18, 0x05, 0xE0
    .byte 0x2E, 0x0F, 0x07, 0x08, 0x0A, 0x38, 0x40, 0x01, 0x08, 0x49, 0x44, 0x18, 0x00, 0x20, 0xD4, 0xF7
    .byte 0xF7, 0xFA, 0x01, 0x1C, 0x4A, 0x31, 0x20, 0x1C, 0x0B, 0x22, 0x07, 0xF0, 0x81, 0xF9, 0x01, 0x20
    .byte 0xD4, 0xF7, 0x0A, 0xFB, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x0E, 0x11, 0x07, 0x08
    .byte 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x28, 0x05, 0xDC, 0x41, 0x01, 0x01, 0x48, 0x0C, 0x18, 0x05, 0xE0
    .byte 0x4C, 0x10, 0x07, 0x08, 0x0A, 0x38, 0x40, 0x01, 0x08, 0x49, 0x44, 0x18, 0x00, 0x20, 0xD4, 0xF7
    .byte 0xD7, 0xFA, 0x01, 0x1C, 0x40, 0x31, 0x20, 0x1C, 0x05, 0x22, 0x07, 0xF0, 0x61, 0xF9, 0x01, 0x20
    .byte 0xD4, 0xF7, 0xEA, 0xFA, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x2C, 0x12, 0x07, 0x08
    .byte 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68, 0x00, 0x20, 0xD4, 0xF7
    .byte 0xBF, 0xFA, 0x01, 0x1C, 0x34, 0x31, 0x20, 0x1C, 0x02, 0x22, 0x07, 0xF0, 0x49, 0xF9, 0x01, 0x20
    .byte 0xD4, 0xF7, 0xD2, 0xFA, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x04, 0x17, 0x0F, 0x08
    .byte 0x10, 0xB5, 0x84, 0x6E, 0x64, 0x01, 0x08, 0x48, 0x24, 0x18, 0x00, 0x20, 0xD4, 0xF7, 0xA8, 0xFA
    .byte 0x01, 0x1C, 0x20, 0x31, 0x20, 0x1C, 0x06, 0x22, 0x07, 0xF0, 0x32, 0xF9, 0x01, 0x20, 0xD4, 0xF7
    .byte 0xBB, 0xFA, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x04, 0x13, 0x07, 0x08, 0x10, 0xB5, 0x84, 0x6E
    .byte 0x64, 0x01, 0x08, 0x48, 0x24, 0x18, 0x00, 0x20, 0xD4, 0xF7, 0x92, 0xFA, 0x01, 0x1C, 0x2C, 0x31
    .byte 0x20, 0x1C, 0x04, 0x22, 0x07, 0xF0, 0x1C, 0xF9, 0x01, 0x20, 0xD4, 0xF7, 0xA5, 0xFA, 0x10, 0xBC
    .byte 0x01, 0xBC, 0x00, 0x47, 0x10, 0x13, 0x07, 0x08, 0x10, 0xB5, 0x84, 0x6E, 0x64, 0x01, 0x08, 0x48
    .byte 0x24, 0x18, 0x00, 0x20, 0xD4, 0xF7, 0x7C, 0xFA, 0x01, 0x1C, 0x40, 0x31, 0x20, 0x1C, 0x08, 0x22
    .byte 0x07, 0xF0, 0x06, 0xF9, 0x01, 0x20, 0xD4, 0xF7, 0x8F, 0xFA, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47
    .byte 0xBC, 0x14, 0x07, 0x08, 0x10, 0xB5, 0x84, 0x6E, 0x64, 0x01, 0x0A, 0x48, 0x24, 0x18, 0x00, 0x20
    .byte 0xD4, 0xF7, 0x66, 0xFA, 0x01, 0x1C, 0x20, 0x1C, 0x0A, 0x22, 0x07, 0xF0, 0xF1, 0xF8, 0x00, 0x20
    .byte 0xD4, 0xF7, 0x5E, 0xFA, 0x00, 0x21, 0x01, 0x80, 0x01, 0x20, 0xD4, 0xF7, 0x75, 0xFA, 0x10, 0xBC
    .byte 0x01, 0xBC, 0x00, 0x47, 0x9C, 0x15, 0x07, 0x08, 0x10, 0xB5, 0x84, 0x6E, 0x64, 0x01, 0x08, 0x48
    .byte 0x24, 0x18, 0x00, 0x20, 0xD4, 0xF7, 0x4C, 0xFA, 0x01, 0x1C, 0x32, 0x31, 0x20, 0x1C, 0x05, 0x22
    .byte 0x07, 0xF0, 0xD6, 0xF8, 0x01, 0x20, 0xD4, 0xF7, 0x5F, 0xFA, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47
    .byte 0xDC, 0x16, 0x07, 0x08, 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68
    .byte 0x00, 0x20, 0xD4, 0xF7, 0x35, 0xFA, 0x01, 0x1C, 0x3C, 0x31, 0x20, 0x1C, 0x02, 0x22, 0x07, 0xF0
    .byte 0xBF, 0xF8, 0x01, 0x20, 0xD4, 0xF7, 0x48, 0xFA, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0x1C, 0x1A, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68
    .byte 0x00, 0x20, 0xD4, 0xF7, 0x1D, 0xFA, 0x01, 0x1C, 0x78, 0x31, 0x20, 0x1C, 0x02, 0x22, 0x07, 0xF0
    .byte 0xA7, 0xF8, 0x01, 0x20, 0xD4, 0xF7, 0x30, 0xFA, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0x2C, 0x1B, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68
    .byte 0x00, 0x20, 0xD4, 0xF7, 0x05, 0xFA, 0x01, 0x1C, 0xE2, 0x31, 0x20, 0x1C, 0x05, 0x22, 0x07, 0xF0
    .byte 0x8F, 0xF8, 0x01, 0x20, 0xD4, 0xF7, 0x18, 0xFA, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0x88, 0x1B, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68
    .byte 0x00, 0x20, 0xD4, 0xF7, 0xED, 0xF9, 0x01, 0x1C, 0xC2, 0x31, 0x20, 0x1C, 0x0F, 0x22, 0x07, 0xF0
    .byte 0x77, 0xF8, 0x01, 0x20, 0xD4, 0xF7, 0x00, 0xFA, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0x1C, 0x1C, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68
    .byte 0x01, 0x20, 0xD4, 0xF7, 0xD5, 0xF9, 0x01, 0x1C, 0x50, 0x31, 0x20, 0x1C, 0x06, 0x22, 0x07, 0xF0
    .byte 0x5F, 0xF8, 0x01, 0x20, 0xD4, 0xF7, 0xE8, 0xF9, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0xB0, 0x1C, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68
    .byte 0x01, 0x20, 0xD4, 0xF7, 0xBD, 0xF9, 0x01, 0x1C, 0x10, 0x31, 0x20, 0x1C, 0x06, 0x22, 0x07, 0xF0
    .byte 0x47, 0xF8, 0x01, 0x20, 0xD4, 0xF7, 0xD0, 0xF9, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0x08, 0x1E, 0x0F, 0x08
    thumb_func_start sub_805A2D4
sub_805A2D4:
    push {lr}
    ldr r1, _0805A2F0 @ =0x080F1B9C
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
    ldr r1, _0805A2F4 @ =0x080F1C30
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805A2F0: .4byte 0x080F1B9C
_0805A2F4: .4byte 0x080F1C30
    thumb_func_start sub_805A2F8
sub_805A2F8:
    push {lr}
    ldr r1, _0805A308 @ =0x080F1CE0
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
    pop {r0}
    bx r0
_0805A308: .4byte 0x080F1CE0
    thumb_func_start sub_805A30C
sub_805A30C:
    push {lr}
    ldr r1, _0805A31C @ =0x080F1E34
    movs r0, #0x00
    movs r2, #0x00
    bl sub_8030224
    pop {r0}
    bx r0
_0805A31C: .4byte 0x080F1E34
    .byte 0x30, 0xB5, 0x84, 0x6E, 0x0F, 0x48, 0xA4, 0x00, 0x20, 0x18, 0x05, 0x68, 0x00, 0x20, 0xD4, 0xF7
    .byte 0x7F, 0xF9, 0x01, 0x1C, 0xE0, 0x31, 0x28, 0x1C, 0x08, 0x22, 0x07, 0xF0, 0x07, 0xF8, 0x0A, 0x48
    .byte 0x24, 0x18, 0x24, 0x68, 0x00, 0x20, 0xD4, 0xF7, 0x73, 0xF9, 0x01, 0x1C, 0xC0, 0x31, 0x20, 0x1C
    .byte 0x08, 0x22, 0x06, 0xF0, 0xFB, 0xFF, 0x01, 0x20, 0xD4, 0xF7, 0x86, 0xF9, 0x30, 0xBC, 0x01, 0xBC
    .byte 0x00, 0x47, 0x00, 0x00, 0x44, 0x1F, 0x0F, 0x08, 0x60, 0x1F, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E
    .byte 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68, 0x00, 0x20, 0xD4, 0xF7, 0x59, 0xF9, 0x01, 0x1C
    .byte 0x18, 0x31, 0x20, 0x1C, 0x03, 0x22, 0x06, 0xF0, 0xE3, 0xFF, 0x01, 0x20, 0xD4, 0xF7, 0x6C, 0xF9
    .byte 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0xA4, 0x20, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E
    .byte 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68, 0x00, 0x20, 0xD4, 0xF7, 0x41, 0xF9, 0x01, 0x1C
    .byte 0x4A, 0x31, 0x20, 0x1C, 0x09, 0x22, 0x06, 0xF0, 0xCB, 0xFF, 0x01, 0x20, 0xD4, 0xF7, 0x54, 0xF9
    .byte 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x1C, 0x21, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E
    .byte 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68, 0x00, 0x20, 0xD4, 0xF7, 0x29, 0xF9, 0x01, 0x1C
    .byte 0xFA, 0x31, 0x20, 0x1C, 0x03, 0x22, 0x06, 0xF0, 0xB3, 0xFF, 0x01, 0x20, 0xD4, 0xF7, 0x3C, 0xF9
    .byte 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0xC4, 0x21, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E
    .byte 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68, 0x00, 0x20, 0xD4, 0xF7, 0x11, 0xF9, 0x01, 0x1C
    .byte 0x2C, 0x31, 0x20, 0x1C, 0x04, 0x22, 0x06, 0xF0, 0x9B, 0xFF, 0x01, 0x20, 0xD4, 0xF7, 0x24, 0xF9
    .byte 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x20, 0x22, 0x0F, 0x08, 0x30, 0xB5, 0x80, 0x6E
    .byte 0x0F, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68, 0x25, 0x1C, 0x0A, 0x35, 0x00, 0x20, 0xD4, 0xF7
    .byte 0xF7, 0xF8, 0x01, 0x1C, 0x20, 0x31, 0x28, 0x1C, 0x03, 0x22, 0x06, 0xF0, 0x81, 0xFF, 0x12, 0x34
    .byte 0x00, 0x20, 0xD4, 0xF7, 0xED, 0xF8, 0x01, 0x1C, 0x26, 0x31, 0x20, 0x1C, 0x03, 0x22, 0x06, 0xF0
    .byte 0x77, 0xFF, 0x01, 0x20, 0xD4, 0xF7, 0x00, 0xF9, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0x20, 0x22, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68
    .byte 0x00, 0x20, 0xD4, 0xF7, 0xD5, 0xF8, 0x01, 0x1C, 0x30, 0x31, 0x20, 0x1C, 0x05, 0x22, 0x06, 0xF0
    .byte 0x5F, 0xFF, 0x01, 0x20, 0xD4, 0xF7, 0xE8, 0xF8, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0xE8, 0x22, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68
    .byte 0x00, 0x20, 0xD4, 0xF7, 0xBD, 0xF8, 0x01, 0x1C, 0x14, 0x31, 0x20, 0x1C, 0x04, 0x22, 0x06, 0xF0
    .byte 0x47, 0xFF, 0x01, 0x20, 0xD4, 0xF7, 0xD0, 0xF8, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0xD0, 0x23, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68
    .byte 0x00, 0x20, 0xD4, 0xF7, 0xA5, 0xF8, 0x01, 0x1C, 0x14, 0x31, 0x20, 0x1C, 0x05, 0x22, 0x06, 0xF0
    .byte 0x2F, 0xFF, 0x01, 0x20, 0xD4, 0xF7, 0xB8, 0xF8, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0xE0, 0x24, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E, 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68
    .byte 0x00, 0x20, 0xD4, 0xF7, 0x8D, 0xF8, 0x01, 0x1C, 0x3A, 0x31, 0x20, 0x1C, 0x03, 0x22, 0x06, 0xF0
    .byte 0x17, 0xFF, 0x01, 0x20, 0xD4, 0xF7, 0xA0, 0xF8, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0x54, 0x25, 0x0F, 0x08, 0x10, 0xB5, 0x84, 0x6E, 0x64, 0x01, 0x08, 0x48, 0x24, 0x18, 0x00, 0x20
    .byte 0xD4, 0xF7, 0x76, 0xF8, 0x01, 0x1C, 0xE2, 0x31, 0x20, 0x1C, 0x04, 0x22, 0x06, 0xF0, 0x00, 0xFF
    .byte 0x01, 0x20, 0xD4, 0xF7, 0x89, 0xF8, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0xC4, 0x18, 0x07, 0x08
    .byte 0x10, 0xB5, 0x84, 0x6E, 0x64, 0x01, 0x08, 0x48, 0x24, 0x18, 0x00, 0x20, 0xD4, 0xF7, 0x60, 0xF8
    .byte 0x01, 0x1C, 0xF8, 0x31, 0x20, 0x1C, 0x04, 0x22, 0x06, 0xF0, 0xEA, 0xFE, 0x01, 0x20, 0xD4, 0xF7
    .byte 0x73, 0xF8, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0xCE, 0x18, 0x07, 0x08, 0x10, 0xB5, 0x80, 0x6E
    .byte 0x09, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68, 0x00, 0x20, 0xD4, 0xF7, 0x49, 0xF8, 0x01, 0x1C
    .byte 0xE2, 0x31, 0x20, 0x1C, 0x05, 0x22, 0x06, 0xF0, 0xD3, 0xFE, 0x01, 0x20, 0xD4, 0xF7, 0x5C, 0xF8
    .byte 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x94, 0x27, 0x0F, 0x08, 0x10, 0xB5, 0x80, 0x6E
    .byte 0x0A, 0x49, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68, 0x00, 0x20, 0xD4, 0xF7, 0x31, 0xF8, 0x01, 0x1C
    .byte 0x93, 0x20, 0x40, 0x00, 0x09, 0x18, 0x20, 0x1C, 0x0B, 0x22, 0x06, 0xF0, 0xB9, 0xFE, 0x01, 0x20
    .byte 0xD4, 0xF7, 0x42, 0xF8, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x7C, 0x28, 0x0F, 0x08
    .byte 0x10, 0xB5, 0x04, 0x1C, 0x0B, 0x29, 0x43, 0xD8, 0x88, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68
    .byte 0x87, 0x46, 0x00, 0x00, 0x08, 0xA6, 0x05, 0x08, 0x38, 0xA6, 0x05, 0x08, 0x38, 0xA6, 0x05, 0x08
    .byte 0x38, 0xA6, 0x05, 0x08, 0x48, 0xA6, 0x05, 0x08, 0x48, 0xA6, 0x05, 0x08, 0x48, 0xA6, 0x05, 0x08
    .byte 0x58, 0xA6, 0x05, 0x08, 0x58, 0xA6, 0x05, 0x08, 0x58, 0xA6, 0x05, 0x08, 0x68, 0xA6, 0x05, 0x08
    .byte 0x68, 0xA6, 0x05, 0x08, 0x68, 0xA6, 0x05, 0x08, 0x01, 0x48, 0x02, 0x49, 0x16, 0xE0, 0x00, 0x00
    .byte 0x89, 0xA6, 0x05, 0x08, 0x80, 0x29, 0x0F, 0x08, 0x01, 0x48, 0x02, 0x49, 0x0E, 0xE0, 0x00, 0x00
    .byte 0x89, 0xA6, 0x05, 0x08, 0xB8, 0x29, 0x0F, 0x08, 0x01, 0x48, 0x02, 0x49, 0x06, 0xE0, 0x00, 0x00
    .byte 0x89, 0xA6, 0x05, 0x08, 0xF0, 0x29, 0x0F, 0x08, 0x03, 0x48, 0x04, 0x49, 0x00, 0x22, 0xD5, 0xF7
    .byte 0xD9, 0xFD, 0x44, 0x65, 0x05, 0xE0, 0x00, 0x00, 0x89, 0xA6, 0x05, 0x08, 0x28, 0x2A, 0x0F, 0x08
    .byte 0x00, 0x20, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47
    thumb_func_start sub_805A688
sub_805A688:
    ldr r2, [r0, #0x54]
    movs r1, #0x80
    lsls r1, r1, #0x08
    strh r1, [r0, #0x10]
    ldr r1, [r2, #0x00]
    str r1, [r0, #0x00]
    ldr r1, [r2, #0x04]
    str r1, [r0, #0x04]
    movs r1, #0x05
    str r1, [r0, #0x08]
    ldrh r1, [r0, #0x34]
    movs r2, #0x01
    orrs r1, r2
    movs r2, #0x02
    orrs r1, r2
    strh r1, [r0, #0x34]
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_805A6AC
sub_805A6AC:
    push {r4, r5, r6, r7, lr}
    adds r2, r0, #0x0
    ldr r0, _0805A6D4 @ =0x03002E20
    adds r7, r0, #0x0
    adds r7, #0x24
    ldr r1, _0805A6D8 @ =0x00000848
    adds r3, r0, r1
    subs r1, #0x10
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    ldrh r0, [r0, #0x34]
    movs r1, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _0805A6DC
    ldrh r1, [r2, #0x34]
    movs r0, #0x01
    orrs r0, r1
    b _0805A6E2
    .byte 0x00, 0x00
_0805A6D4: .4byte 0x03002E20
_0805A6D8: .4byte 0x00000848
_0805A6DC:
    ldrh r1, [r2, #0x34]
    ldr r0, _0805A6F8 @ =0x0000FFFE
    ands r0, r1
_0805A6E2:
    strh r0, [r2, #0x34]
    movs r1, #0xE0
    lsls r1, r1, #0x02
    adds r0, r3, r1
    ldr r0, [r0, #0x00]
    cmp r0, #0x01
    ble _0805A700
    ldr r6, _0805A6FC @ =0x080F2A70
    movs r5, #0x01
    b _0805A704
    .byte 0x00, 0x00
_0805A6F8: .4byte 0x0000FFFE
_0805A6FC: .4byte 0x080F2A70
_0805A700:
    ldr r6, _0805A728 @ =0x080F2AA8
    movs r5, #0x00
_0805A704:
    movs r2, #0x00
    ldr r0, _0805A72C @ =0x00000C58
    adds r4, r7, r0
    ldr r0, [r4, #0x00]
    cmp r0, #0x00
    bne _0805A738
    ldr r0, _0805A728 @ =0x080F2AA8
    cmp r6, r0
    beq _0805A73A
    ldr r0, _0805A730 @ =0x0805A7ED
    ldr r1, _0805A734 @ =0x080F2A70
    bl sub_8030224
    adds r2, r0, #0x0
    cmp r2, #0x00
    beq _0805A74C
    str r2, [r4, #0x00]
    b _0805A73A
_0805A728: .4byte 0x080F2AA8
_0805A72C: .4byte 0x00000C58
_0805A730: .4byte sub_805A7EC
_0805A734: .4byte 0x080F2A70
_0805A738:
    adds r2, r0, #0x0
_0805A73A:
    cmp r2, #0x00
    beq _0805A74C
    ldr r0, _0805A754 @ =0x00000C5C
    adds r1, r7, r0
    ldrb r0, [r1, #0x00]
    cmp r0, r5
    bne _0805A74C
    str r6, [r2, #0x5C]
    strb r5, [r1, #0x00]
_0805A74C:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805A754: .4byte 0x00000C5C
    .byte 0x10, 0xB5, 0x04, 0x1C, 0x0A, 0x48, 0x0B, 0x49, 0x40, 0x18, 0x00, 0x68, 0x1C, 0x22, 0x81, 0x5E
    .byte 0x21, 0x84, 0x1E, 0x22, 0x81, 0x5E, 0x61, 0x84, 0x24, 0x22, 0x81, 0x5E, 0x01, 0x31, 0xA1, 0x84
    .byte 0xE3, 0xF7, 0x4E, 0xF9, 0x58, 0x34, 0x20, 0x80, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0x20, 0x2E, 0x00, 0x03, 0x38, 0x08, 0x00, 0x00, 0x82, 0x8E, 0x01, 0x21, 0x11, 0x43, 0x81, 0x86
    .byte 0x70, 0x47, 0x00, 0x00, 0x82, 0x8E, 0x02, 0x49, 0x11, 0x40, 0x81, 0x86, 0x70, 0x47, 0x00, 0x00
    .byte 0xFE, 0xFF, 0x00, 0x00, 0x02, 0x48, 0x03, 0x49, 0x40, 0x18, 0x00, 0x21, 0x01, 0x60, 0x70, 0x47
    .byte 0x20, 0x2E, 0x00, 0x03, 0x7C, 0x0C, 0x00, 0x00
    thumb_func_start sub_805A7C0
sub_805A7C0:
    push {lr}
    ldr r0, _0805A7E4 @ =0x03002E20
    movs r1, #0xE8
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_804F7AC
    adds r2, r0, #0x0
    cmp r2, #0x00
    beq _0805A7DE
    adds r0, #0x4C
    movs r1, #0x00
    strh r1, [r0, #0x00]
    ldr r0, _0805A7E8 @ =0x0805A6AD
    str r0, [r2, #0x14]
_0805A7DE:
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805A7E4: .4byte 0x03002E20
_0805A7E8: .4byte sub_805A6AC
    thumb_func_start sub_805A7EC
sub_805A7EC:
    push {r4, r5, r6, lr}
    ldr r3, _0805A81C @ =0x03002E20
    ldr r2, _0805A820 @ =0x00000838
    adds r1, r3, r2
    ldr r4, [r1, #0x00]
    movs r5, #0x00
    strh r5, [r0, #0x10]
    ldrh r1, [r0, #0x34]
    movs r2, #0x01
    movs r6, #0x00
    orrs r1, r2
    strh r1, [r0, #0x34]
    ldr r1, [r4, #0x00]
    str r1, [r0, #0x00]
    ldr r1, [r4, #0x04]
    str r1, [r0, #0x04]
    str r5, [r0, #0x08]
    movs r0, #0xC8
    lsls r0, r0, #0x04
    adds r3, r3, r0
    strb r6, [r3, #0x00]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0805A81C: .4byte 0x03002E20
_0805A820: .4byte 0x00000838
    thumb_func_start sub_805A824
sub_805A824:
    push {r4, r5, lr}
    mov r12, r0
    ldr r0, [r0, #0x70]
    lsls r2, r0, #0x10
    lsrs r2, r2, #0x19
    lsls r0, r0, #0x17
    lsrs r4, r0, #0x1B
    ldr r5, _0805A868 @ =0x080F2AC0
    lsls r1, r4, #0x01
    adds r1, r1, r4
    adds r0, r1, r5
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x01
    movs r3, #0xCB
    lsls r3, r3, #0x01
    add r3, r12
    strh r0, [r3, #0x00]
    adds r0, r5, #0x1
    adds r1, r1, r0
    ldrb r0, [r1, #0x00]
    lsls r0, r0, #0x01
    movs r1, #0xCC
    lsls r1, r1, #0x01
    add r1, r12
    strh r0, [r1, #0x00]
    subs r2, #0x01
    lsls r2, r2, #0x18
    lsrs r3, r2, #0x18
    cmp r3, #0x00
    beq _0805A86C
    mov r2, r12
    adds r2, #0x71
    lsls r3, r3, #0x01
    b _0805A89A
_0805A868: .4byte 0x080F2AC0
_0805A86C:
    adds r0, r4, #0x1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    mov r3, r12
    adds r3, #0x70
    movs r1, #0x1F
    ands r1, r4
    lsls r1, r1, #0x04
    ldrh r2, [r3, #0x00]
    ldr r0, _0805A8A8 @ =0xFFFFFE0F
    ands r0, r2
    orrs r0, r1
    strh r0, [r3, #0x00]
    lsls r0, r4, #0x01
    adds r0, r0, r4
    adds r1, r5, #0x2
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0805A8AC
    mov r2, r12
    adds r2, #0x71
    lsls r3, r0, #0x01
_0805A89A:
    ldrb r1, [r2, #0x00]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r3
    strb r0, [r2, #0x00]
    b _0805A8B4
    .byte 0x00, 0x00
_0805A8A8: .4byte 0xFFFFFE0F
_0805A8AC:
    mov r0, r12
    movs r1, #0x01
    bl sub_803D950
_0805A8B4:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805A8BC
sub_805A8BC:
    adds r3, r0, #0x0
    ldr r0, [r3, #0x70]
    lsls r0, r0, #0x1C
    lsrs r0, r0, #0x1C
    cmp r0, #0x01
    beq _0805A900
    cmp r0, #0x01
    blt _0805A8D4
    cmp r0, #0x06
    bgt _0805A8D4
    cmp r0, #0x05
    bge _0805A900
_0805A8D4:
    adds r2, r3, #0x0
    adds r2, #0x70
    ldrb r1, [r2, #0x00]
    movs r0, #0x10
    negs r0, r0
    ands r0, r1
    movs r1, #0x01
    orrs r0, r1
    strb r0, [r2, #0x00]
    ldrh r1, [r2, #0x00]
    ldr r0, _0805A904 @ =0xFFFFFE0F
    ands r0, r1
    strh r0, [r2, #0x00]
    ldr r0, _0805A908 @ =0x080F2AC0
    adds r3, #0x71
    ldrb r1, [r0, #0x02]
    lsls r1, r1, #0x01
    ldrb r2, [r3, #0x00]
    movs r0, #0x01
    ands r0, r2
    orrs r0, r1
    strb r0, [r3, #0x00]
_0805A900:
    bx lr
    .byte 0x00, 0x00
_0805A904: .4byte 0xFFFFFE0F
_0805A908: .4byte 0x080F2AC0
    thumb_func_start sub_805A90C
sub_805A90C:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r7, r0, #0x0
    lsls r1, r1, #0x18
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    mov r8, r2
    movs r0, #0x6E
    adds r0, r0, r7
    mov r12, r0
    ldr r0, [r0, #0x00]
    lsls r2, r0, #0x10
    lsrs r5, r2, #0x19
    lsls r0, r0, #0x17
    lsrs r4, r0, #0x1B
    ldr r3, _0805A96C @ =0x080F2BF4
    adds r0, r7, #0x0
    adds r0, #0x4C
    ldrb r2, [r0, #0x00]
    movs r0, #0x07
    ands r0, r2
    lsls r0, r0, #0x02
    adds r0, r0, r3
    ldr r6, [r0, #0x00]
    movs r2, #0xC1
    lsls r2, r2, #0x18
    adds r1, r1, r2
    lsrs r1, r1, #0x18
    cmp r1, #0x01
    bhi _0805A950
    ldr r0, _0805A970 @ =0x000001FF
    cmp r8, r0
    bls _0805A978
_0805A950:
    mov r0, r12
    ldrh r1, [r0, #0x00]
    ldr r0, _0805A974 @ =0xFFFFFE0F
    ands r0, r1
    mov r1, r12
    strh r0, [r1, #0x00]
    ldrb r1, [r6, #0x01]
    lsls r1, r1, #0x01
    mov r0, r12
    ldrb r2, [r0, #0x01]
    movs r0, #0x01
    ands r0, r2
    orrs r0, r1
    b _0805A98E
_0805A96C: .4byte 0x080F2BF4
_0805A970: .4byte 0x000001FF
_0805A974: .4byte 0xFFFFFE0F
_0805A978:
    subs r0, r5, #0x1
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    cmp r5, #0x00
    beq _0805A994
    lsls r2, r5, #0x01
    mov r0, r12
    ldrb r1, [r0, #0x01]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r2
_0805A98E:
    mov r1, r12
    strb r0, [r1, #0x01]
    b _0805AA04
_0805A994:
    adds r0, r4, #0x1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    lsls r0, r4, #0x02
    adds r0, r0, r6
    ldrb r3, [r0, #0x01]
    ldrb r1, [r0, #0x00]
    movs r2, #0x00
    ldsb r2, [r0, r2]
    movs r0, #0x01
    negs r0, r0
    adds r5, r7, #0x0
    adds r5, #0x6C
    cmp r2, r0
    bne _0805A9CA
_0805A9B2:
    adds r0, r4, r3
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    lsls r0, r4, #0x02
    adds r0, r0, r6
    ldrb r3, [r0, #0x01]
    ldrb r1, [r0, #0x00]
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, r2
    beq _0805A9B2
_0805A9CA:
    strb r1, [r5, #0x00]
    lsls r0, r3, #0x18
    asrs r5, r0, #0x18
    cmp r5, #0x00
    beq _0805A9FC
    adds r2, r7, #0x0
    adds r2, #0x6E
    movs r0, #0x1F
    ands r4, r0
    lsls r3, r4, #0x04
    ldrh r1, [r2, #0x00]
    ldr r0, _0805A9F8 @ =0xFFFFFE0F
    ands r0, r1
    orrs r0, r3
    strh r0, [r2, #0x00]
    lsls r3, r5, #0x01
    ldrb r1, [r2, #0x01]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r3
    strb r0, [r2, #0x01]
    b _0805AA04
    .byte 0x00, 0x00
_0805A9F8: .4byte 0xFFFFFE0F
_0805A9FC:
    adds r0, r7, #0x0
    movs r1, #0x00
    bl sub_803D950
_0805AA04:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805AA10
sub_805AA10:
    mov r12, r0
    mov r3, r12
    adds r3, #0x6E
    ldrb r1, [r3, #0x00]
    movs r0, #0x0F
    ands r0, r1
    cmp r0, #0x02
    beq _0805AA62
    movs r0, #0x10
    negs r0, r0
    ands r0, r1
    movs r1, #0x02
    orrs r0, r1
    strb r0, [r3, #0x00]
    ldr r2, _0805AA64 @ =0x080F2BF4
    mov r0, r12
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r0, #0x07
    ands r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r2, [r0, #0x00]
    ldrh r1, [r3, #0x00]
    ldr r0, _0805AA68 @ =0xFFFFFE0F
    ands r0, r1
    strh r0, [r3, #0x00]
    ldrb r1, [r2, #0x01]
    lsls r1, r1, #0x01
    ldrb r2, [r3, #0x01]
    movs r0, #0x01
    ands r0, r2
    orrs r0, r1
    strb r0, [r3, #0x01]
    mov r2, r12
    adds r2, #0x6D
    ldrb r1, [r2, #0x00]
    movs r0, #0x02
    negs r0, r0
    ands r0, r1
    strb r0, [r2, #0x00]
_0805AA62:
    bx lr
_0805AA64: .4byte 0x080F2BF4
_0805AA68: .4byte 0xFFFFFE0F
    thumb_func_start sub_805AA6C
sub_805AA6C:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    adds r6, r1, #0x0
    movs r5, #0x08
    cmp r6, #0x00
    beq _0805AA7A
    movs r5, #0x09
_0805AA7A:
    adds r0, r4, #0x0
    bl sub_803CA78
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    ldrh r1, [r4, #0x24]
    cmp r0, #0x00
    beq _0805AA8E
    cmp r0, #0x7F
    bne _0805AAEA
_0805AA8E:
    ldr r0, _0805AAD4 @ =0x000001FF
    cmp r1, r0
    bhi _0805AAEA
    adds r3, r4, #0x0
    adds r3, #0x6E
    ldrb r1, [r3, #0x00]
    movs r0, #0x0F
    ands r0, r1
    cmp r0, #0x00
    bne _0805AAEA
    movs r0, #0x0F
    ands r5, r0
    movs r0, #0x10
    negs r0, r0
    ands r0, r1
    orrs r0, r5
    strb r0, [r3, #0x00]
    ldr r0, _0805AAD8 @ =0x080F2C14
    ldrb r1, [r0, #0x01]
    lsls r1, r1, #0x01
    ldrb r2, [r3, #0x01]
    movs r0, #0x01
    ands r0, r2
    orrs r0, r1
    strb r0, [r3, #0x01]
    cmp r6, #0x00
    beq _0805AADC
    adds r0, r4, #0x0
    adds r0, #0x6D
    ldrb r1, [r0, #0x00]
    movs r2, #0x01
    orrs r1, r2
    strb r1, [r0, #0x00]
    b _0805AAEA
    .byte 0x00, 0x00
_0805AAD4: .4byte 0x000001FF
_0805AAD8: .4byte 0x080F2C14
_0805AADC:
    adds r2, r4, #0x0
    adds r2, #0x6D
    ldrb r1, [r2, #0x00]
    movs r0, #0x02
    negs r0, r0
    ands r0, r1
    strb r0, [r2, #0x00]
_0805AAEA:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    thumb_func_start sub_805AAF0
sub_805AAF0:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    lsls r1, r1, #0x18
    lsrs r6, r1, #0x18
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    adds r3, r5, #0x0
    adds r3, #0x6E
    ldr r0, [r3, #0x00]
    lsls r1, r0, #0x10
    lsrs r1, r1, #0x19
    lsls r0, r0, #0x17
    lsrs r4, r0, #0x1B
    cmp r6, #0x00
    beq _0805AB12
    cmp r6, #0x7F
    bne _0805AB18
_0805AB12:
    ldr r0, _0805AB20 @ =0x000001FF
    cmp r2, r0
    bls _0805AB24
_0805AB18:
    adds r0, r5, #0x0
    bl sub_805AC24
    b _0805ABAA
_0805AB20: .4byte 0x000001FF
_0805AB24:
    movs r6, #0x01
    subs r0, r1, #0x1
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #0x00
    beq _0805AB3C
    lsls r2, r1, #0x01
    ldrb r1, [r3, #0x01]
    adds r0, r6, #0x0
    ands r0, r1
    orrs r0, r2
    b _0805ABA8
_0805AB3C:
    adds r0, r4, #0x1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    ldr r0, _0805AB7C @ =0x080F2C14
    lsls r1, r4, #0x01
    adds r2, r1, r0
    ldrb r2, [r2, #0x00]
    adds r0, #0x01
    adds r1, r1, r0
    ldrb r0, [r1, #0x00]
    adds r1, r5, #0x0
    adds r1, #0x6C
    strb r2, [r1, #0x00]
    lsls r0, r0, #0x18
    asrs r5, r0, #0x18
    cmp r5, #0x00
    beq _0805AB84
    movs r0, #0x1F
    ands r4, r0
    lsls r2, r4, #0x04
    ldrh r1, [r3, #0x00]
    ldr r0, _0805AB80 @ =0xFFFFFE0F
    ands r0, r1
    orrs r0, r2
    strh r0, [r3, #0x00]
    lsls r2, r5, #0x01
    ldrb r1, [r3, #0x01]
    adds r0, r6, #0x0
    ands r0, r1
    orrs r0, r2
    b _0805ABA8
    .byte 0x00, 0x00
_0805AB7C: .4byte 0x080F2C14
_0805AB80: .4byte 0xFFFFFE0F
_0805AB84:
    ldrb r1, [r3, #0x00]
    movs r0, #0x10
    negs r0, r0
    ands r0, r1
    movs r1, #0x0A
    orrs r0, r1
    strb r0, [r3, #0x00]
    ldrh r1, [r3, #0x00]
    ldr r0, _0805ABB0 @ =0xFFFFFE0F
    ands r0, r1
    strh r0, [r3, #0x00]
    ldr r0, _0805ABB4 @ =0x080F2C22
    ldrb r1, [r0, #0x01]
    lsls r1, r1, #0x01
    ldrb r2, [r3, #0x01]
    adds r0, r6, #0x0
    ands r0, r2
    orrs r0, r1
_0805ABA8:
    strb r0, [r3, #0x01]
_0805ABAA:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0805ABB0: .4byte 0xFFFFFE0F
_0805ABB4: .4byte 0x080F2C22
    thumb_func_start sub_805ABB8
sub_805ABB8:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    adds r3, r5, #0x0
    adds r3, #0x6E
    ldr r1, [r3, #0x00]
    lsls r0, r1, #0x10
    lsrs r0, r0, #0x19
    lsls r1, r1, #0x17
    lsrs r2, r1, #0x1B
    subs r0, #0x01
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x00
    beq _0805ABD8
    lsls r2, r0, #0x01
    b _0805AC00
_0805ABD8:
    adds r0, r2, #0x1
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    ldr r0, _0805AC0C @ =0x080F2C14
    lsls r1, r2, #0x01
    adds r0, #0x01
    adds r1, r1, r0
    movs r4, #0x00
    ldsb r4, [r1, r4]
    cmp r4, #0x00
    beq _0805AC14
    movs r0, #0x1F
    ands r2, r0
    lsls r2, r2, #0x04
    ldrh r1, [r3, #0x00]
    ldr r0, _0805AC10 @ =0xFFFFFE0F
    ands r0, r1
    orrs r0, r2
    strh r0, [r3, #0x00]
    lsls r2, r4, #0x01
_0805AC00:
    ldrb r1, [r3, #0x01]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r2
    strb r0, [r3, #0x01]
    b _0805AC1C
_0805AC0C: .4byte 0x080F2C14
_0805AC10: .4byte 0xFFFFFE0F
_0805AC14:
    adds r0, r5, #0x0
    movs r1, #0x00
    bl sub_803D950
_0805AC1C:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805AC24
sub_805AC24:
    adds r0, #0x6E
    ldrb r2, [r0, #0x00]
    movs r1, #0x10
    negs r1, r1
    ands r1, r2
    movs r2, #0x0A
    orrs r1, r2
    strb r1, [r0, #0x00]
    ldrh r2, [r0, #0x00]
    ldr r1, _0805AC50 @ =0xFFFFFE0F
    ands r1, r2
    strh r1, [r0, #0x00]
    ldr r1, _0805AC54 @ =0x080F2C22
    ldrb r2, [r1, #0x01]
    lsls r2, r2, #0x01
    ldrb r3, [r0, #0x01]
    movs r1, #0x01
    ands r1, r3
    orrs r1, r2
    strb r1, [r0, #0x01]
    bx lr
    .byte 0x00, 0x00
_0805AC50: .4byte 0xFFFFFE0F
_0805AC54: .4byte 0x080F2C22
    thumb_func_start sub_805AC58
sub_805AC58:
    push {r4, r5, lr}
    mov r12, r0
    adds r0, #0x72
    ldr r0, [r0, #0x00]
    lsls r1, r0, #0x10
    lsrs r3, r1, #0x19
    lsls r0, r0, #0x17
    lsrs r4, r0, #0x1B
    movs r0, #0xCA
    lsls r0, r0, #0x01
    add r0, r12
    ldrh r2, [r0, #0x00]
    ldr r1, _0805AC84 @ =0x080F2C38
    lsls r0, r4, #0x01
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    adds r5, r1, #0x0
    cmp r0, #0x01
    bne _0805AC88
    movs r0, #0x80
    lsls r0, r0, #0x06
    b _0805AC8C
_0805AC84: .4byte 0x080F2C38
_0805AC88:
    movs r0, #0x80
    lsls r0, r0, #0x07
_0805AC8C:
    adds r1, r2, #0x0
    orrs r1, r0
    movs r0, #0xCA
    lsls r0, r0, #0x01
    add r0, r12
    strh r1, [r0, #0x00]
    subs r0, r3, #0x1
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    cmp r3, #0x00
    beq _0805ACB4
    mov r2, r12
    adds r2, #0x72
    lsls r3, r3, #0x01
    ldrb r1, [r2, #0x01]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r3
    strb r0, [r2, #0x01]
    b _0805ACF4
_0805ACB4:
    mov r3, r12
    adds r3, #0x72
    adds r0, r4, #0x1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    movs r1, #0x1F
    ands r1, r4
    lsls r1, r1, #0x04
    ldrh r2, [r3, #0x00]
    ldr r0, _0805ACE8 @ =0xFFFFFE0F
    ands r0, r2
    orrs r0, r1
    strh r0, [r3, #0x00]
    lsls r0, r4, #0x01
    adds r1, r5, #0x1
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0805ACEC
    lsls r2, r0, #0x01
    ldrb r1, [r3, #0x01]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r2
    strb r0, [r3, #0x01]
    b _0805ACF4
_0805ACE8: .4byte 0xFFFFFE0F
_0805ACEC:
    mov r0, r12
    movs r1, #0x02
    bl sub_803D950
_0805ACF4:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805ACFC
sub_805ACFC:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r3, _0805AD58 @ =0x03002E20
    movs r0, #0x72
    adds r0, r0, r4
    mov r12, r0
    ldrb r1, [r0, #0x00]
    movs r0, #0x10
    negs r0, r0
    ands r0, r1
    movs r1, #0x03
    orrs r0, r1
    mov r1, r12
    strb r0, [r1, #0x00]
    ldr r0, _0805AD5C @ =0x080F2C38
    ldrb r1, [r0, #0x01]
    lsls r1, r1, #0x01
    mov r0, r12
    ldrb r2, [r0, #0x01]
    movs r0, #0x01
    ands r0, r2
    orrs r0, r1
    mov r1, r12
    strb r0, [r1, #0x01]
    ldrh r1, [r1, #0x00]
    ldr r0, _0805AD60 @ =0xFFFFFE0F
    ands r0, r1
    mov r1, r12
    strh r0, [r1, #0x00]
    ldr r0, _0805AD64 @ =0x00000838
    adds r3, r3, r0
    ldr r0, [r3, #0x00]
    cmp r4, r0
    bne _0805AD50
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0805AD50
    adds r0, r4, #0x0
    bl sub_805C354
_0805AD50:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805AD58: .4byte 0x03002E20
_0805AD5C: .4byte 0x080F2C38
_0805AD60: .4byte 0xFFFFFE0F
_0805AD64: .4byte 0x00000838
    thumb_func_start sub_805AD68
sub_805AD68:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    ldr r3, _0805AE04 @ =0x03002E20
    adds r5, r3, #0x0
    adds r5, #0x24
    movs r0, #0x72
    adds r0, r0, r4
    mov r12, r0
    ldrb r1, [r0, #0x00]
    movs r0, #0x10
    negs r0, r0
    ands r0, r1
    movs r1, #0x0C
    orrs r0, r1
    mov r1, r12
    strb r0, [r1, #0x00]
    ldr r0, _0805AE08 @ =0x080F2C48
    ldrb r1, [r0, #0x01]
    lsls r1, r1, #0x01
    mov r0, r12
    ldrb r2, [r0, #0x01]
    movs r0, #0x01
    ands r0, r2
    orrs r0, r1
    mov r1, r12
    strb r0, [r1, #0x01]
    ldrh r1, [r1, #0x00]
    ldr r0, _0805AE0C @ =0xFFFFFE0F
    ands r0, r1
    mov r1, r12
    strh r0, [r1, #0x00]
    ldr r0, _0805AE10 @ =0x00000838
    adds r3, r3, r0
    ldr r0, [r3, #0x00]
    cmp r4, r0
    bne _0805ADE6
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0805ADE6
    ldr r2, _0805AE14 @ =0x08102414
    ldr r0, _0805AE18 @ =0x08102498
    movs r1, #0xA1
    lsls r1, r1, #0x03
    adds r0, r0, r1
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r0, [r0, #0x00]
    bl m4aMPlayStop
    movs r0, #0xCD
    lsls r0, r0, #0x01
    adds r2, r4, r0
    ldrb r1, [r2, #0x00]
    movs r0, #0xFC
    ands r0, r1
    movs r1, #0xDF
    ands r0, r1
    strb r0, [r2, #0x00]
_0805ADE6:
    ldr r1, _0805AE1C @ =0x00000814
    adds r0, r5, r1
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0805ADFC
    movs r0, #0xB6
    bl m4aSongNumStart
_0805ADFC:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805AE04: .4byte 0x03002E20
_0805AE08: .4byte 0x080F2C48
_0805AE0C: .4byte 0xFFFFFE0F
_0805AE10: .4byte 0x00000838
_0805AE14: .4byte 0x08102414
_0805AE18: .4byte 0x08102498
_0805AE1C: .4byte 0x00000814
    thumb_func_start sub_805AE20
sub_805AE20:
    push {r4, r5, r6, r7, lr}
    adds r4, r0, #0x0
    ldr r6, _0805AE64 @ =0x03002E20
    movs r0, #0x72
    adds r0, r0, r4
    mov r12, r0
    ldr r0, [r0, #0x00]
    lsls r1, r0, #0x10
    lsrs r1, r1, #0x19
    lsls r0, r0, #0x17
    lsrs r5, r0, #0x1B
    movs r7, #0xCA
    lsls r7, r7, #0x01
    adds r3, r4, r7
    ldrh r2, [r3, #0x00]
    movs r7, #0x80
    lsls r7, r7, #0x04
    adds r0, r7, #0x0
    orrs r0, r2
    strh r0, [r3, #0x00]
    subs r1, #0x01
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    cmp r1, #0x00
    beq _0805AE68
    lsls r2, r1, #0x01
    mov r0, r12
    ldrb r1, [r0, #0x01]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r2
    mov r1, r12
    strb r0, [r1, #0x01]
    b _0805AEE6
_0805AE64: .4byte 0x03002E20
_0805AE68:
    adds r0, r5, #0x1
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    movs r1, #0x1F
    ands r1, r5
    lsls r1, r1, #0x04
    mov r7, r12
    ldrh r2, [r7, #0x00]
    ldr r0, _0805AE9C @ =0xFFFFFE0F
    ands r0, r2
    orrs r0, r1
    strh r0, [r7, #0x00]
    ldr r0, _0805AEA0 @ =0x080F2C48
    lsls r1, r5, #0x01
    adds r0, #0x01
    adds r1, r1, r0
    ldrb r0, [r1, #0x00]
    cmp r0, #0x00
    beq _0805AEA4
    lsls r2, r0, #0x01
    ldrb r1, [r7, #0x01]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r2
    strb r0, [r7, #0x01]
    b _0805AEE6
_0805AE9C: .4byte 0xFFFFFE0F
_0805AEA0: .4byte 0x080F2C48
_0805AEA4:
    adds r0, r4, #0x0
    movs r1, #0x02
    bl sub_803D950
    ldr r1, _0805AEEC @ =0x00000838
    adds r0, r6, r1
    ldr r0, [r0, #0x00]
    cmp r4, r0
    bne _0805AEC6
    ldr r0, [r4, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0805AEC6
    adds r0, r4, #0x0
    bl sub_805C388
_0805AEC6:
    movs r7, #0xCA
    lsls r7, r7, #0x01
    adds r2, r4, r7
    ldrh r1, [r2, #0x00]
    ldr r0, _0805AEF0 @ =0x0000F7FF
    ands r0, r1
    strh r0, [r2, #0x00]
    adds r2, r4, #0x0
    adds r2, #0xD8
    ldrb r1, [r2, #0x00]
    movs r0, #0x04
    negs r0, r0
    ands r0, r1
    movs r1, #0x02
    orrs r0, r1
    strb r0, [r2, #0x00]
_0805AEE6:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0805AEEC: .4byte 0x00000838
_0805AEF0: .4byte 0x0000F7FF
    thumb_func_start sub_805AEF4
sub_805AEF4:
    adds r0, #0x72
    ldrb r2, [r0, #0x00]
    movs r1, #0x10
    negs r1, r1
    ands r1, r2
    movs r2, #0x0B
    orrs r1, r2
    strb r1, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_805AF08
sub_805AF08:
    push {lr}
    adds r2, r0, #0x0
    adds r0, #0xB4
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0805AF22
    adds r0, r2, #0x0
    movs r1, #0x02
    bl sub_803D950
_0805AF22:
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805AF28
sub_805AF28:
    adds r0, #0x72
    ldrb r2, [r0, #0x00]
    movs r1, #0x10
    negs r1, r1
    ands r1, r2
    movs r2, #0x0D
    orrs r1, r2
    strb r1, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_805AF3C
sub_805AF3C:
    push {lr}
    adds r3, r0, #0x0
    ldr r2, _0805AF78 @ =0x03002E20
    movs r0, #0x72
    adds r0, r0, r3
    mov r12, r0
    ldrb r1, [r0, #0x00]
    movs r0, #0x10
    negs r0, r0
    ands r0, r1
    movs r1, #0x0E
    orrs r0, r1
    mov r1, r12
    strb r0, [r1, #0x00]
    ldr r0, _0805AF7C @ =0x00000838
    adds r2, r2, r0
    ldr r0, [r2, #0x00]
    cmp r3, r0
    bne _0805AF72
    ldr r0, [r3, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0805AF72
    adds r0, r3, #0x0
    bl sub_805C5C8
_0805AF72:
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805AF78: .4byte 0x03002E20
_0805AF7C: .4byte 0x00000838
    thumb_func_start sub_805AF80
sub_805AF80:
    push {lr}
    adds r2, r0, #0x0
    adds r0, #0xB4
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    beq _0805AF9A
    adds r0, r2, #0x0
    movs r1, #0x02
    bl sub_803D950
_0805AF9A:
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start nullsub_12
nullsub_12: @ 0805AFA0
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_805AFA4
sub_805AFA4:
    push {r4, lr}
    adds r4, r0, #0x0
    movs r0, #0x6E
    adds r0, r0, r4
    mov r12, r0
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x10
    lsrs r0, r0, #0x19
    lsls r1, r1, #0x17
    lsrs r3, r1, #0x1B
    subs r0, #0x01
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x00
    bne _0805AFEA
    adds r0, r3, #0x1
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    movs r1, #0x1F
    ands r1, r3
    lsls r1, r1, #0x04
    mov r0, r12
    ldrh r2, [r0, #0x00]
    ldr r0, _0805AFFC @ =0xFFFFFE0F
    ands r0, r2
    orrs r0, r1
    mov r1, r12
    strh r0, [r1, #0x00]
    ldr r0, _0805B000 @ =0x080F2C50
    lsls r1, r3, #0x01
    adds r0, #0x01
    adds r1, r1, r0
    ldrb r0, [r1, #0x00]
    cmp r0, #0x00
    beq _0805B004
_0805AFEA:
    lsls r2, r0, #0x01
    mov r0, r12
    ldrb r1, [r0, #0x01]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r2
    mov r1, r12
    strb r0, [r1, #0x01]
    b _0805B018
_0805AFFC: .4byte 0xFFFFFE0F
_0805B000: .4byte 0x080F2C50
_0805B004:
    adds r0, r4, #0x0
    movs r1, #0x00
    bl sub_803D950
    adds r0, r4, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    movs r2, #0x08
    eors r1, r2
    strb r1, [r0, #0x00]
_0805B018:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805B020
sub_805B020:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r3, _0805B06C @ =0x03002E20
    movs r0, #0x6E
    adds r0, r0, r4
    mov r12, r0
    ldrb r0, [r0, #0x00]
    movs r1, #0x0F
    orrs r0, r1
    mov r1, r12
    strb r0, [r1, #0x00]
    ldr r0, _0805B070 @ =0x080F2C50
    ldrb r1, [r0, #0x01]
    lsls r1, r1, #0x01
    mov r0, r12
    ldrb r2, [r0, #0x01]
    movs r0, #0x01
    ands r0, r2
    orrs r0, r1
    mov r1, r12
    strb r0, [r1, #0x01]
    ldrh r1, [r1, #0x00]
    ldr r0, _0805B074 @ =0xFFFFFE0F
    ands r0, r1
    mov r1, r12
    strh r0, [r1, #0x00]
    ldr r0, _0805B078 @ =0x00000838
    adds r3, r3, r0
    ldr r0, [r3, #0x00]
    cmp r4, r0
    bne _0805B064
    adds r0, r4, #0x0
    bl sub_805C050
_0805B064:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805B06C: .4byte 0x03002E20
_0805B070: .4byte 0x080F2C50
_0805B074: .4byte 0xFFFFFE0F
_0805B078: .4byte 0x00000838
    thumb_func_start sub_805B07C
sub_805B07C:
    push {r4, r5, lr}
    mov r12, r0
    ldr r0, [r0, #0x70]
    lsls r2, r0, #0x10
    lsrs r2, r2, #0x19
    lsls r0, r0, #0x17
    lsrs r4, r0, #0x1B
    ldr r5, _0805B0C0 @ =0x080F2C54
    lsls r1, r4, #0x01
    adds r1, r1, r4
    adds r0, r1, r5
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x01
    movs r3, #0xCB
    lsls r3, r3, #0x01
    add r3, r12
    strh r0, [r3, #0x00]
    adds r0, r5, #0x1
    adds r1, r1, r0
    ldrb r0, [r1, #0x00]
    lsls r0, r0, #0x01
    movs r1, #0xCC
    lsls r1, r1, #0x01
    add r1, r12
    strh r0, [r1, #0x00]
    subs r2, #0x01
    lsls r2, r2, #0x18
    lsrs r3, r2, #0x18
    cmp r3, #0x00
    beq _0805B0C4
    mov r2, r12
    adds r2, #0x71
    lsls r3, r3, #0x01
    b _0805B0F2
_0805B0C0: .4byte 0x080F2C54
_0805B0C4:
    adds r0, r4, #0x1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    mov r3, r12
    adds r3, #0x70
    movs r1, #0x1F
    ands r1, r4
    lsls r1, r1, #0x04
    ldrh r2, [r3, #0x00]
    ldr r0, _0805B100 @ =0xFFFFFE0F
    ands r0, r2
    orrs r0, r1
    strh r0, [r3, #0x00]
    lsls r0, r4, #0x01
    adds r0, r0, r4
    adds r1, r5, #0x2
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0805B104
    mov r2, r12
    adds r2, #0x71
    lsls r3, r0, #0x01
_0805B0F2:
    ldrb r1, [r2, #0x00]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r3
    strb r0, [r2, #0x00]
    b _0805B10C
    .byte 0x00, 0x00
_0805B100: .4byte 0xFFFFFE0F
_0805B104:
    mov r0, r12
    movs r1, #0x01
    bl sub_803D950
_0805B10C:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805B114
sub_805B114:
    adds r3, r0, #0x0
    ldr r0, [r3, #0x70]
    lsls r0, r0, #0x1C
    lsrs r0, r0, #0x1C
    cmp r0, #0x01
    beq _0805B158
    cmp r0, #0x01
    blt _0805B12C
    cmp r0, #0x06
    bgt _0805B12C
    cmp r0, #0x04
    bge _0805B158
_0805B12C:
    adds r2, r3, #0x0
    adds r2, #0x70
    ldrb r1, [r2, #0x00]
    movs r0, #0x10
    negs r0, r0
    ands r0, r1
    movs r1, #0x04
    orrs r0, r1
    strb r0, [r2, #0x00]
    ldrh r1, [r2, #0x00]
    ldr r0, _0805B15C @ =0xFFFFFE0F
    ands r0, r1
    strh r0, [r2, #0x00]
    ldr r0, _0805B160 @ =0x080F2C54
    adds r3, #0x71
    ldrb r1, [r0, #0x02]
    lsls r1, r1, #0x01
    ldrb r2, [r3, #0x00]
    movs r0, #0x01
    ands r0, r2
    orrs r0, r1
    strb r0, [r3, #0x00]
_0805B158:
    bx lr
    .byte 0x00, 0x00
_0805B15C: .4byte 0xFFFFFE0F
_0805B160: .4byte 0x080F2C54
    thumb_func_start sub_805B164
sub_805B164:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    ldr r0, [r5, #0x70]
    lsls r2, r0, #0x10
    lsrs r2, r2, #0x19
    lsls r0, r0, #0x17
    lsrs r4, r0, #0x1B
    ldr r3, _0805B1A4 @ =0x080F2C86
    lsls r1, r4, #0x01
    adds r1, r1, r4
    adds r0, r1, r3
    ldrb r0, [r0, #0x00]
    movs r6, #0xCB
    lsls r6, r6, #0x01
    strh r0, [r6, r5]
    adds r3, #0x01
    adds r1, r1, r3
    ldrb r0, [r1, #0x00]
    lsls r0, r0, #0x07
    movs r3, #0xCC
    lsls r3, r3, #0x01
    adds r1, r5, r3
    strh r0, [r1, #0x00]
    subs r2, #0x01
    lsls r2, r2, #0x18
    lsrs r3, r2, #0x18
    cmp r3, #0x00
    beq _0805B1A8
    adds r2, r5, #0x0
    adds r2, #0x71
    lsls r3, r3, #0x01
    b _0805B1D6
_0805B1A4: .4byte 0x080F2C86
_0805B1A8:
    adds r0, r4, #0x1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    adds r3, r5, #0x0
    adds r3, #0x70
    movs r1, #0x1F
    ands r1, r4
    lsls r1, r1, #0x04
    ldrh r2, [r3, #0x00]
    ldr r0, _0805B1E4 @ =0xFFFFFE0F
    ands r0, r2
    orrs r0, r1
    strh r0, [r3, #0x00]
    ldr r1, _0805B1E8 @ =0x080F2C80
    lsls r0, r4, #0x01
    adds r0, r0, r4
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0805B1EC
    adds r2, r5, #0x0
    adds r2, #0x71
    lsls r3, r0, #0x01
_0805B1D6:
    ldrb r1, [r2, #0x00]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r3
    strb r0, [r2, #0x00]
    b _0805B1F4
    .byte 0x00, 0x00
_0805B1E4: .4byte 0xFFFFFE0F
_0805B1E8: .4byte 0x080F2C80
_0805B1EC:
    adds r0, r5, #0x0
    movs r1, #0x06
    bl sub_803D214
_0805B1F4:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805B1FC
sub_805B1FC:
    push {r4, r5, lr}
    mov r12, r0
    ldr r0, [r0, #0x70]
    lsls r2, r0, #0x10
    lsrs r2, r2, #0x19
    lsls r0, r0, #0x17
    lsrs r4, r0, #0x1B
    ldr r5, _0805B248 @ =0x080F2C86
    lsls r1, r4, #0x01
    adds r1, r1, r4
    adds r0, r1, r5
    ldrb r0, [r0, #0x00]
    movs r3, #0xCB
    lsls r3, r3, #0x01
    add r3, r12
    strh r0, [r3, #0x00]
    adds r0, r5, #0x1
    adds r1, r1, r0
    ldrb r0, [r1, #0x00]
    lsls r0, r0, #0x07
    movs r1, #0xCC
    lsls r1, r1, #0x01
    add r1, r12
    strh r0, [r1, #0x00]
    mov r1, r12
    movs r3, #0x22
    ldsh r0, [r1, r3]
    subs r0, #0x10
    strh r0, [r1, #0x22]
    subs r2, #0x01
    lsls r2, r2, #0x18
    lsrs r3, r2, #0x18
    cmp r3, #0x00
    beq _0805B24C
    mov r2, r12
    adds r2, #0x71
    lsls r3, r3, #0x01
    b _0805B27A
_0805B248: .4byte 0x080F2C86
_0805B24C:
    adds r0, r4, #0x1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    mov r3, r12
    adds r3, #0x70
    movs r1, #0x1F
    ands r1, r4
    lsls r1, r1, #0x04
    ldrh r2, [r3, #0x00]
    ldr r0, _0805B288 @ =0xFFFFFE0F
    ands r0, r2
    orrs r0, r1
    strh r0, [r3, #0x00]
    lsls r0, r4, #0x01
    adds r0, r0, r4
    adds r1, r5, #0x2
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0805B28C
    mov r2, r12
    adds r2, #0x71
    lsls r3, r0, #0x01
_0805B27A:
    ldrb r1, [r2, #0x00]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r3
    strb r0, [r2, #0x00]
    b _0805B294
    .byte 0x00, 0x00
_0805B288: .4byte 0xFFFFFE0F
_0805B28C:
    mov r0, r12
    movs r1, #0x01
    bl sub_803D950
_0805B294:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805B29C
sub_805B29C:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    ldr r0, [r5, #0x70]
    lsls r2, r0, #0x10
    lsrs r2, r2, #0x19
    lsls r0, r0, #0x17
    lsrs r4, r0, #0x1B
    ldr r3, _0805B2E0 @ =0x080F2C8C
    lsls r1, r4, #0x01
    adds r1, r1, r4
    adds r0, r1, r3
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x01
    movs r6, #0xCB
    lsls r6, r6, #0x01
    strh r0, [r6, r5]
    adds r3, #0x01
    adds r1, r1, r3
    ldrb r0, [r1, #0x00]
    lsls r0, r0, #0x01
    movs r3, #0xCC
    lsls r3, r3, #0x01
    adds r1, r5, r3
    strh r0, [r1, #0x00]
    subs r2, #0x01
    lsls r2, r2, #0x18
    lsrs r3, r2, #0x18
    cmp r3, #0x00
    beq _0805B2E4
    adds r2, r5, #0x0
    adds r2, #0x71
    lsls r3, r3, #0x01
    b _0805B33E
    .byte 0x00, 0x00
_0805B2E0: .4byte 0x080F2C8C
_0805B2E4:
    adds r2, r5, #0x0
    adds r2, #0x70
    ldrh r1, [r2, #0x00]
    movs r0, #0xF8
    lsls r0, r0, #0x01
    ands r0, r1
    adds r6, r2, #0x0
    cmp r0, #0x00
    bne _0805B312
    ldr r0, _0805B34C @ =0x03002E20
    ldr r1, _0805B350 @ =0x00000838
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    cmp r5, r0
    bne _0805B312
    ldr r0, [r5, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0805B312
    movs r0, #0x85
    bl m4aSongNumStart
_0805B312:
    adds r0, r4, #0x1
    lsls r0, r0, #0x18
    lsrs r4, r0, #0x18
    movs r1, #0x1F
    ands r1, r4
    lsls r1, r1, #0x04
    ldrh r2, [r6, #0x00]
    ldr r0, _0805B354 @ =0xFFFFFE0F
    ands r0, r2
    orrs r0, r1
    strh r0, [r6, #0x00]
    ldr r1, _0805B358 @ =0x080F2C8C
    lsls r0, r4, #0x01
    adds r0, r0, r4
    adds r1, #0x02
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0805B35C
    adds r2, r5, #0x0
    adds r2, #0x71
    lsls r3, r0, #0x01
_0805B33E:
    ldrb r1, [r2, #0x00]
    movs r0, #0x01
    ands r0, r1
    orrs r0, r3
    strb r0, [r2, #0x00]
    b _0805B364
    .byte 0x00, 0x00
_0805B34C: .4byte 0x03002E20
_0805B350: .4byte 0x00000838
_0805B354: .4byte 0xFFFFFE0F
_0805B358: .4byte 0x080F2C8C
_0805B35C:
    adds r0, r5, #0x0
    movs r1, #0x01
    bl sub_803D950
_0805B364:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805B36C
sub_805B36C:
    adds r3, r0, #0x0
    adds r3, #0x70
    ldrb r2, [r3, #0x00]
    movs r1, #0x10
    negs r1, r1
    ands r1, r2
    movs r2, #0x05
    orrs r1, r2
    strb r1, [r3, #0x00]
    ldrh r2, [r3, #0x00]
    ldr r1, _0805B39C @ =0xFFFFFE0F
    ands r1, r2
    strh r1, [r3, #0x00]
    ldr r1, _0805B3A0 @ =0x080F2C80
    adds r0, #0x71
    ldrb r2, [r1, #0x02]
    lsls r2, r2, #0x01
    ldrb r3, [r0, #0x00]
    movs r1, #0x01
    ands r1, r3
    orrs r1, r2
    strb r1, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
_0805B39C: .4byte 0xFFFFFE0F
_0805B3A0: .4byte 0x080F2C80
    thumb_func_start sub_805B3A4
sub_805B3A4:
    adds r3, r0, #0x0
    adds r3, #0x70
    ldrb r2, [r3, #0x00]
    movs r1, #0x10
    negs r1, r1
    ands r1, r2
    movs r2, #0x06
    orrs r1, r2
    strb r1, [r3, #0x00]
    ldrh r2, [r3, #0x00]
    ldr r1, _0805B3D4 @ =0xFFFFFE0F
    ands r1, r2
    strh r1, [r3, #0x00]
    ldr r1, _0805B3D8 @ =0x080F2C86
    adds r0, #0x71
    ldrb r2, [r1, #0x02]
    lsls r2, r2, #0x01
    ldrb r3, [r0, #0x00]
    movs r1, #0x01
    ands r1, r3
    orrs r1, r2
    strb r1, [r0, #0x00]
    bx lr
    .byte 0x00, 0x00
_0805B3D4: .4byte 0xFFFFFE0F
_0805B3D8: .4byte 0x080F2C86
    thumb_func_start sub_805B3DC
sub_805B3DC:
    adds r3, r0, #0x0
    ldr r0, [r3, #0x70]
    lsls r0, r0, #0x1C
    lsrs r0, r0, #0x1C
    cmp r0, #0x05
    bgt _0805B3F2
    cmp r0, #0x04
    bge _0805B422
    cmp r0, #0x01
    beq _0805B422
    b _0805B3F6
_0805B3F2:
    cmp r0, #0x07
    beq _0805B422
_0805B3F6:
    adds r2, r3, #0x0
    adds r2, #0x70
    ldrb r1, [r2, #0x00]
    movs r0, #0x10
    negs r0, r0
    ands r0, r1
    movs r1, #0x07
    orrs r0, r1
    strb r0, [r2, #0x00]
    ldrh r1, [r2, #0x00]
    ldr r0, _0805B424 @ =0xFFFFFE0F
    ands r0, r1
    strh r0, [r2, #0x00]
    ldr r0, _0805B428 @ =0x080F2C8C
    adds r3, #0x71
    ldrb r1, [r0, #0x02]
    lsls r1, r1, #0x01
    ldrb r2, [r3, #0x00]
    movs r0, #0x01
    ands r0, r2
    orrs r0, r1
    strb r0, [r3, #0x00]
_0805B422:
    bx lr
_0805B424: .4byte 0xFFFFFE0F
_0805B428: .4byte 0x080F2C8C
    thumb_func_start sub_805B42C
sub_805B42C:
    movs r2, #0x00
    str r2, [r0, #0x00]
    str r2, [r0, #0x04]
    str r2, [r0, #0x08]
    str r2, [r0, #0x0C]
    strb r2, [r0, #0x10]
    strh r2, [r0, #0x14]
    strh r2, [r0, #0x16]
    movs r1, #0x80
    lsls r1, r1, #0x01
    str r1, [r0, #0x1C]
    str r1, [r0, #0x20]
    strh r1, [r0, #0x24]
    str r2, [r0, #0x18]
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_805B44C
sub_805B44C:
    push {lr}
    adds r1, r0, #0x0
    ldr r0, [r1, #0x0C]
    cmp r0, #0x00
    ble _0805B45E
    subs r0, #0x01
    str r0, [r1, #0x0C]
    movs r0, #0x01
    b _0805B488
_0805B45E:
    ldr r2, [r1, #0x08]
    ldr r3, [r2, #0x00]
    cmp r3, #0x00
    bne _0805B46C
    ldr r0, [r2, #0x04]
    cmp r0, #0x00
    beq _0805B47A
_0805B46C:
    str r3, [r1, #0x04]
    ldr r0, [r2, #0x04]
    str r0, [r1, #0x0C]
    adds r2, #0x08
    str r2, [r1, #0x08]
    movs r0, #0x01
    b _0805B488
_0805B47A:
    ldr r0, _0805B48C @ =0x03002E20
    movs r2, #0xEA
    lsls r2, r2, #0x03
    adds r0, r0, r2
    bl sub_805B520
    movs r0, #0x00
_0805B488:
    pop {r1}
    bx r1
_0805B48C: .4byte 0x03002E20
    thumb_func_start sub_805B490
sub_805B490:
    push {lr}
    adds r1, r0, #0x0
    ldr r0, _0805B4A4 @ =0x03002E20
    movs r2, #0xEA
    lsls r2, r2, #0x03
    adds r0, r0, r2
    bl sub_805B520
    pop {r0}
    bx r0
_0805B4A4: .4byte 0x03002E20
    thumb_func_start sub_805B4A8
sub_805B4A8:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    adds r6, r1, #0x0
    movs r4, #0x00
_0805B4B0:
    adds r0, r6, #0x0
    movs r1, #0x01
    movs r2, #0x3C
    bl frmheap_calloc
    adds r2, r5, r4
    movs r1, #0x00
    strb r1, [r2, #0x00]
    lsls r2, r4, #0x02
    adds r1, r5, #0x0
    adds r1, #0x20
    adds r1, r1, r2
    str r0, [r1, #0x00]
    adds r4, #0x01
    cmp r4, #0x1F
    ble _0805B4B0
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805B4D8
sub_805B4D8:
    push {r4, lr}
    adds r4, r0, #0x0
    movs r3, #0x00
    ldrb r1, [r4, #0x00]
    movs r0, #0x01
    ands r0, r1
    cmp r0, #0x00
    beq _0805B4FC
    movs r2, #0x01
_0805B4EA:
    adds r3, #0x01
    cmp r3, #0x1E
    bgt _0805B4FC
    adds r0, r4, r3
    ldrb r1, [r0, #0x00]
    adds r0, r2, #0x0
    ands r0, r1
    cmp r0, #0x00
    bne _0805B4EA
_0805B4FC:
    adds r2, r4, r3
    ldrb r1, [r2, #0x00]
    movs r0, #0x01
    orrs r0, r1
    strb r0, [r2, #0x00]
    lsls r1, r3, #0x02
    adds r0, r4, #0x0
    adds r0, #0x20
    adds r0, r0, r1
    ldr r4, [r0, #0x00]
    adds r0, r4, #0x0
    bl sub_805B42C
    adds r0, r4, #0x0
    pop {r4}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_805B520
sub_805B520:
    push {r4, lr}
    adds r3, r0, #0x0
    adds r4, r1, #0x0
    movs r2, #0x00
    ldr r0, [r3, #0x20]
    cmp r0, r4
    bne _0805B532
    strb r2, [r3, #0x00]
    b _0805B54C
_0805B532:
    adds r2, #0x01
    cmp r2, #0x1F
    bgt _0805B54C
    lsls r0, r2, #0x02
    adds r1, r3, #0x0
    adds r1, #0x20
    adds r1, r1, r0
    ldr r0, [r1, #0x00]
    cmp r0, r4
    bne _0805B532
    adds r1, r3, r2
    movs r0, #0x00
    strb r0, [r1, #0x00]
_0805B54C:
    pop {r4}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805B554
sub_805B554:
    push {r4, r5, r6, lr}
    mov r6, r8
    push {r6}
    adds r5, r0, #0x0
    adds r6, r1, #0x0
    adds r4, r2, #0x0
    mov r8, r3
    lsls r5, r5, #0x10
    lsrs r5, r5, #0x10
    lsls r6, r6, #0x10
    lsrs r6, r6, #0x10
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    ldr r0, _0805B5A8 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    adds r2, r0, #0x0
    strh r4, [r2, #0x24]
    ldr r0, _0805B5AC @ =0x0805B44D
    str r0, [r2, #0x00]
    strh r5, [r2, #0x14]
    strh r6, [r2, #0x16]
    ldr r0, _0805B5B0 @ =0x080F2CBC
    mov r1, r8
    cmp r1, #0x00
    beq _0805B590
    ldr r0, _0805B5B4 @ =0x080F2CEC
_0805B590:
    str r0, [r2, #0x08]
    ldrb r1, [r2, #0x10]
    movs r0, #0x01
    orrs r0, r1
    strb r0, [r2, #0x10]
    adds r0, r2, #0x0
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805B5A8: .4byte 0x03002E20
_0805B5AC: .4byte sub_805B44C
_0805B5B0: .4byte 0x080F2CBC
_0805B5B4: .4byte 0x080F2CEC
    thumb_func_start sub_805B5B8
sub_805B5B8:
    push {r4, r5, r6, lr}
    mov r6, r8
    push {r6}
    adds r5, r0, #0x0
    adds r6, r1, #0x0
    adds r4, r2, #0x0
    mov r8, r3
    lsls r5, r5, #0x10
    lsrs r5, r5, #0x10
    lsls r6, r6, #0x10
    lsrs r6, r6, #0x10
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    ldr r0, _0805B60C @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    adds r2, r0, #0x0
    strh r4, [r2, #0x24]
    ldr r0, _0805B610 @ =0x0805B44D
    str r0, [r2, #0x00]
    strh r5, [r2, #0x14]
    strh r6, [r2, #0x16]
    ldr r0, _0805B614 @ =0x080F2D1C
    mov r1, r8
    cmp r1, #0x00
    beq _0805B5F4
    ldr r0, _0805B618 @ =0x080F2D4C
_0805B5F4:
    str r0, [r2, #0x08]
    ldrb r1, [r2, #0x10]
    movs r0, #0x01
    orrs r0, r1
    strb r0, [r2, #0x10]
    adds r0, r2, #0x0
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805B60C: .4byte 0x03002E20
_0805B610: .4byte sub_805B44C
_0805B614: .4byte 0x080F2D1C
_0805B618: .4byte 0x080F2D4C
    thumb_func_start sub_805B61C
sub_805B61C:
    push {r4, r5, r6, lr}
    mov r6, r8
    push {r6}
    adds r5, r0, #0x0
    adds r6, r1, #0x0
    adds r4, r2, #0x0
    mov r8, r3
    lsls r5, r5, #0x10
    lsrs r5, r5, #0x10
    lsls r6, r6, #0x10
    lsrs r6, r6, #0x10
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    ldr r0, _0805B670 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    adds r2, r0, #0x0
    strh r4, [r2, #0x24]
    ldr r0, _0805B674 @ =0x0805B44D
    str r0, [r2, #0x00]
    strh r5, [r2, #0x14]
    strh r6, [r2, #0x16]
    ldr r0, _0805B678 @ =0x080F2D7C
    mov r1, r8
    cmp r1, #0x00
    beq _0805B658
    ldr r0, _0805B67C @ =0x080F2DAC
_0805B658:
    str r0, [r2, #0x08]
    ldrb r1, [r2, #0x10]
    movs r0, #0x01
    orrs r0, r1
    strb r0, [r2, #0x10]
    adds r0, r2, #0x0
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805B670: .4byte 0x03002E20
_0805B674: .4byte sub_805B44C
_0805B678: .4byte 0x080F2D7C
_0805B67C: .4byte 0x080F2DAC
    thumb_func_start sub_805B680
sub_805B680:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r4, r2, #0x0
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    mov r8, r0
    lsls r1, r1, #0x10
    lsrs r6, r1, #0x10
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    lsls r3, r3, #0x18
    lsrs r7, r3, #0x18
    ldr r0, _0805B724 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    adds r5, r0, #0x0
    strh r4, [r5, #0x24]
    cmp r7, #0x00
    bne _0805B6E0
    ldr r2, _0805B728 @ =0x08102414
    ldr r0, _0805B72C @ =0x08102498
    movs r1, #0xCA
    lsls r1, r1, #0x02
    adds r3, r0, r1
    ldrh r1, [r3, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    ldrh r0, [r1, #0x04]
    cmp r0, #0x00
    beq _0805B6DA
    movs r2, #0x00
    ldr r1, [r1, #0x00]
    ldr r0, [r3, #0x00]
    cmp r1, r0
    bne _0805B6D6
    movs r2, #0x01
_0805B6D6:
    cmp r2, #0x00
    beq _0805B6E0
_0805B6DA:
    movs r0, #0x65
    bl m4aSongNumStart
_0805B6E0:
    ldr r0, _0805B730 @ =0x0805B7D1
    str r0, [r5, #0x00]
    movs r2, #0x00
    mov r0, r8
    strh r0, [r5, #0x14]
    strh r6, [r5, #0x16]
    lsls r0, r6, #0x10
    str r0, [r5, #0x2C]
    ldr r0, _0805B734 @ =0x080F2F2C
    lsls r1, r7, #0x02
    adds r0, r1, r0
    ldr r0, [r0, #0x00]
    str r0, [r5, #0x30]
    ldr r0, _0805B738 @ =0x080F2F50
    adds r0, r1, r0
    ldr r0, [r0, #0x00]
    str r0, [r5, #0x34]
    ldr r0, _0805B73C @ =0x080F2F04
    adds r1, r1, r0
    ldr r0, [r1, #0x00]
    str r0, [r5, #0x08]
    ldrb r1, [r5, #0x10]
    movs r0, #0x01
    orrs r0, r1
    strb r0, [r5, #0x10]
    adds r0, r5, #0x0
    adds r0, #0x3A
    strb r2, [r0, #0x00]
    adds r0, r5, #0x0
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
_0805B724: .4byte 0x03002E20
_0805B728: .4byte 0x08102414
_0805B72C: .4byte 0x08102498
_0805B730: .4byte sub_805B7D0
_0805B734: .4byte 0x080F2F2C
_0805B738: .4byte 0x080F2F50
_0805B73C: .4byte 0x080F2F04
    thumb_func_start sub_805B740
sub_805B740:
    push {r4, r5, r6, r7, lr}
    adds r4, r2, #0x0
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    lsls r1, r1, #0x10
    lsrs r6, r1, #0x10
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    ldr r0, _0805B7BC @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    adds r5, r0, #0x0
    strh r4, [r5, #0x24]
    ldr r2, _0805B7C0 @ =0x08102414
    ldr r0, _0805B7C4 @ =0x08102498
    movs r1, #0xCA
    lsls r1, r1, #0x02
    adds r3, r0, r1
    ldrh r1, [r3, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    ldrh r0, [r1, #0x04]
    cmp r0, #0x00
    beq _0805B78C
    movs r2, #0x00
    ldr r1, [r1, #0x00]
    ldr r0, [r3, #0x00]
    cmp r1, r0
    bne _0805B788
    movs r2, #0x01
_0805B788:
    cmp r2, #0x00
    beq _0805B792
_0805B78C:
    movs r0, #0x65
    bl m4aSongNumStart
_0805B792:
    ldr r0, _0805B7C8 @ =0x0805B989
    str r0, [r5, #0x00]
    movs r1, #0x00
    movs r0, #0x00
    strh r7, [r5, #0x14]
    strh r6, [r5, #0x16]
    str r0, [r5, #0x34]
    adds r0, r5, #0x0
    adds r0, #0x38
    strb r1, [r0, #0x00]
    ldr r0, _0805B7CC @ =0x080F2EB4
    str r0, [r5, #0x08]
    ldrb r1, [r5, #0x10]
    movs r0, #0xFE
    ands r0, r1
    strb r0, [r5, #0x10]
    adds r0, r5, #0x0
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805B7BC: .4byte 0x03002E20
_0805B7C0: .4byte 0x08102414
_0805B7C4: .4byte 0x08102498
_0805B7C8: .4byte sub_805B988
_0805B7CC: .4byte 0x080F2EB4
    thumb_func_start sub_805B7D0
sub_805B7D0:
    push {r4, r5, r6, r7, lr}
    adds r7, r0, #0x0
    ldr r0, _0805B8A0 @ =0x03002E20
    ldr r1, _0805B8A4 @ =0x00000838
    adds r0, r0, r1
    ldr r1, [r0, #0x00]
    movs r2, #0x24
    ldsh r0, [r1, r2]
    str r0, [r7, #0x1C]
    movs r2, #0x24
    ldsh r0, [r1, r2]
    str r0, [r7, #0x20]
    ldr r1, [r7, #0x30]
    ldrh r0, [r7, #0x14]
    adds r0, r0, r1
    strh r0, [r7, #0x14]
    ldr r0, [r7, #0x2C]
    ldr r2, [r7, #0x34]
    subs r0, r0, r2
    str r0, [r7, #0x2C]
    movs r1, #0x88
    lsls r1, r1, #0x10
    cmp r0, r1
    ble _0805B884
    negs r0, r2
    str r0, [r7, #0x34]
    adds r1, r7, #0x0
    adds r1, #0x3A
    ldrb r0, [r1, #0x00]
    adds r0, #0x01
    strb r0, [r1, #0x00]
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    adds r4, r1, #0x0
    cmp r0, #0x03
    bhi _0805B884
    ldr r2, _0805B8A8 @ =0x08102414
    ldr r0, _0805B8AC @ =0x08102498
    movs r1, #0xCC
    lsls r1, r1, #0x02
    adds r3, r0, r1
    ldrh r1, [r3, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    ldrh r0, [r1, #0x04]
    cmp r0, #0x00
    beq _0805B844
    movs r2, #0x00
    ldr r1, [r1, #0x00]
    ldr r0, [r3, #0x00]
    cmp r1, r0
    bne _0805B840
    movs r2, #0x01
_0805B840:
    cmp r2, #0x00
    beq _0805B884
_0805B844:
    ldr r1, _0805B8B0 @ =0x080F2F74
    ldrb r0, [r4, #0x00]
    subs r0, #0x01
    lsls r0, r0, #0x01
    adds r0, r0, r1
    ldrh r6, [r0, #0x00]
    movs r0, #0x66
    bl m4aSongNumStart
    ldr r5, _0805B8A8 @ =0x08102414
    ldr r4, _0805B8AC @ =0x08102498
    movs r2, #0xCC
    lsls r2, r2, #0x02
    adds r4, r4, r2
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    bl m4aMPlayImmInit
    ldrh r1, [r4, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r5
    ldr r0, [r0, #0x00]
    movs r1, #0x01
    adds r2, r6, #0x0
    bl m4aMPlayVolumeControl
_0805B884:
    movs r1, #0x2E
    ldsh r0, [r7, r1]
    strh r0, [r7, #0x16]
    ldr r0, [r7, #0x34]
    ldr r2, _0805B8B4 @ =0xFFFF8000
    adds r0, r0, r2
    str r0, [r7, #0x34]
    adds r0, r7, #0x0
    bl sub_805B44C
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805B8A0: .4byte 0x03002E20
_0805B8A4: .4byte 0x00000838
_0805B8A8: .4byte 0x08102414
_0805B8AC: .4byte 0x08102498
_0805B8B0: .4byte 0x080F2F74
_0805B8B4: .4byte 0xFFFF8000
    .byte 0x00, 0xB5, 0x00, 0x04, 0x00, 0x14, 0x09, 0x04, 0x09, 0x14, 0x12, 0x04, 0x12, 0x14, 0x00, 0x23
    .byte 0xFF, 0xF7, 0xDA, 0xFE, 0x02, 0xBC, 0x08, 0x47
    thumb_func_start sub_805B8D0
sub_805B8D0:
    push {r4, lr}
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    lsls r1, r1, #0x10
    asrs r1, r1, #0x10
    lsls r2, r2, #0x10
    asrs r2, r2, #0x10
    movs r4, #0x04
    cmp r3, #0x00
    bne _0805B8E6
    movs r4, #0x03
_0805B8E6:
    adds r3, r4, #0x0
    bl sub_805B680
    pop {r4}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_805B8F4
sub_805B8F4:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    adds r5, r1, #0x0
    adds r6, r3, #0x0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    lsls r5, r5, #0x10
    lsrs r5, r5, #0x10
    lsls r6, r6, #0x18
    lsrs r6, r6, #0x18
    ldr r0, _0805B934 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    ldr r1, _0805B938 @ =0x0805B9C5
    str r1, [r0, #0x00]
    movs r2, #0x00
    strh r4, [r0, #0x14]
    strh r5, [r0, #0x16]
    adds r1, r0, #0x0
    adds r1, #0x38
    strb r2, [r1, #0x00]
    adds r1, #0x01
    strb r6, [r1, #0x00]
    ldr r1, _0805B93C @ =0x080F2EE4
    str r1, [r0, #0x08]
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805B934: .4byte 0x03002E20
_0805B938: .4byte sub_805B9C4
_0805B93C: .4byte 0x080F2EE4
    thumb_func_start sub_805B940
sub_805B940:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    adds r5, r1, #0x0
    adds r6, r3, #0x0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    lsls r5, r5, #0x10
    lsrs r5, r5, #0x10
    lsls r6, r6, #0x18
    lsrs r6, r6, #0x18
    ldr r0, _0805B980 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    ldr r1, _0805B984 @ =0x0805BA05
    str r1, [r0, #0x00]
    movs r2, #0x00
    movs r1, #0x00
    strh r4, [r0, #0x14]
    strh r5, [r0, #0x16]
    str r1, [r0, #0x28]
    adds r1, r0, #0x0
    adds r1, #0x38
    strb r2, [r1, #0x00]
    adds r1, #0x01
    strb r6, [r1, #0x00]
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805B980: .4byte 0x03002E20
_0805B984: .4byte sub_805BA04
    thumb_func_start sub_805B988
sub_805B988:
    push {r4, r5, lr}
    adds r3, r0, #0x0
    adds r5, r3, #0x0
    adds r5, #0x38
    ldrb r0, [r5, #0x00]
    adds r4, r0, #0x0
    cmp r4, #0x03
    bne _0805B9A0
    ldrb r1, [r3, #0x10]
    movs r0, #0x01
    orrs r0, r1
    strb r0, [r3, #0x10]
_0805B9A0:
    ldr r1, [r3, #0x34]
    asrs r2, r1, #0x10
    ldrh r0, [r3, #0x16]
    subs r0, r0, r2
    strh r0, [r3, #0x16]
    movs r0, #0x80
    lsls r0, r0, #0x08
    adds r1, r1, r0
    str r1, [r3, #0x34]
    adds r0, r4, #0x1
    strb r0, [r5, #0x00]
    adds r0, r3, #0x0
    bl sub_805B44C
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805B9C4
sub_805B9C4:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    adds r5, r4, #0x0
    adds r5, #0x38
    ldrb r1, [r5, #0x00]
    adds r6, r1, #0x0
    adds r0, #0x39
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x01
    cmp r1, r0
    bge _0805B9F6
    movs r0, #0x01
    ands r1, r0
    cmp r1, #0x00
    bne _0805B9F2
    movs r1, #0x14
    ldsh r0, [r4, r1]
    movs r2, #0x16
    ldsh r1, [r4, r2]
    movs r3, #0x24
    ldsh r2, [r4, r3]
    bl sub_805B740
_0805B9F2:
    adds r0, r6, #0x1
    strb r0, [r5, #0x00]
_0805B9F6:
    adds r0, r4, #0x0
    bl sub_805B44C
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805BA04
sub_805BA04:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    adds r0, #0x38
    ldrb r5, [r0, #0x00]
    adds r0, #0x01
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x02
    adds r0, #0x08
    cmp r5, r0
    bge _0805BA4A
    cmp r5, #0x07
    bls _0805BA40
    movs r0, #0x03
    ands r0, r5
    cmp r0, #0x00
    bne _0805BA40
    subs r3, r5, #0x4
    asrs r3, r3, #0x02
    subs r3, #0x01
    movs r0, #0x03
    ands r3, r0
    adds r3, #0x01
    movs r1, #0x14
    ldsh r0, [r4, r1]
    movs r2, #0x16
    ldsh r1, [r4, r2]
    movs r6, #0x24
    ldsh r2, [r4, r6]
    bl sub_805B680
_0805BA40:
    adds r1, r5, #0x1
    adds r0, r4, #0x0
    adds r0, #0x38
    strb r1, [r0, #0x00]
    b _0805BA50
_0805BA4A:
    adds r0, r4, #0x0
    bl sub_805B490
_0805BA50:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805BA58
sub_805BA58:
    push {r4, r5, r6, r7, lr}
    add sp, #-0x00C
    adds r5, r0, #0x0
    movs r4, #0x00
    ldr r7, _0805BA94 @ =0x03002E20
    movs r6, #0x00
_0805BA64:
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r7, r1
    bl sub_805B4D8
    lsls r2, r4, #0x02
    mov r3, sp
    adds r1, r3, r2
    str r0, [r1, #0x00]
    str r5, [r0, #0x28]
    ldr r0, [r1, #0x00]
    adds r1, r4, #0x1
    adds r0, #0x2E
    strb r1, [r0, #0x00]
    adds r3, r1, #0x0
    cmp r4, #0x01
    beq _0805BA98
    cmp r4, #0x01
    bgt _0805BA9E
    cmp r4, #0x00
    bne _0805BA9E
    ldr r1, [sp, #0x000]
    movs r0, #0x20
    b _0805BAA6
_0805BA94: .4byte 0x03002E20
_0805BA98:
    ldr r0, [sp, #0x004]
    strh r6, [r0, #0x2C]
    b _0805BAA8
_0805BA9E:
    mov r1, sp
    adds r0, r1, r2
    ldr r1, [r0, #0x00]
    movs r0, #0x40
_0805BAA6:
    strh r0, [r1, #0x2C]
_0805BAA8:
    mov r1, sp
    adds r0, r1, r2
    ldr r1, [r0, #0x00]
    ldr r0, _0805BAC8 @ =0x0805BAD1
    str r0, [r1, #0x00]
    ldr r0, _0805BACC @ =0x0807B534
    str r0, [r1, #0x04]
    adds r4, r3, #0x0
    cmp r4, #0x02
    ble _0805BA64
    ldr r0, [sp, #0x000]
    add sp, #0x00C
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805BAC8: .4byte sub_805BAD0
_0805BACC: .4byte 0x0807B534
    thumb_func_start sub_805BAD0
sub_805BAD0:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x004
    adds r6, r0, #0x0
    ldr r2, _0805BB10 @ =0x03002E20
    ldr r1, _0805BB14 @ =0x00000848
    adds r0, r2, r1
    ldr r3, [r6, #0x28]
    mov r8, r3
    ldr r1, _0805BB18 @ =0x0000017D
    add r1, r8
    ldrb r1, [r1, #0x00]
    str r1, [sp, #0x000]
    movs r3, #0x14
    ldsh r1, [r0, r3]
    mov r0, r8
    adds r0, #0x56
    ldrh r0, [r0, #0x00]
    subs r4, r1, r0
    adds r0, r6, #0x0
    adds r0, #0x2E
    ldrb r0, [r0, #0x00]
    cmp r0, #0x02
    bne _0805BB1C
    movs r0, #0xC0
    lsls r0, r0, #0x05
    adds r4, r4, r0
    b _0805BB28
    .byte 0x00, 0x00
_0805BB10: .4byte 0x03002E20
_0805BB14: .4byte 0x00000848
_0805BB18: .4byte 0x0000017D
_0805BB1C:
    cmp r0, #0x02
    bgt _0805BB24
    cmp r0, #0x01
    beq _0805BB28
_0805BB24:
    ldr r1, _0805BBFC @ =0xFFFFE800
    adds r4, r4, r1
_0805BB28:
    ldr r2, _0805BC00 @ =0x0000FFFF
    mov r9, r2
    ands r4, r2
    ldr r3, _0805BC04 @ =0x080E645C
    lsls r0, r4, #0x10
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0805BB3A
    adds r0, #0x3F
_0805BB3A:
    asrs r0, r0, #0x06
    ldr r1, _0805BC08 @ =0x000003FF
    adds r2, r1, #0x0
    ands r0, r2
    lsls r0, r0, #0x02
    adds r0, r0, r3
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r7, r0, #0x03
    movs r1, #0x2C
    ldsh r0, [r6, r1]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x10
    cmp r0, #0x00
    bge _0805BB5C
    adds r0, #0x3F
_0805BB5C:
    asrs r0, r0, #0x06
    ands r0, r2
    lsls r0, r0, #0x02
    adds r0, r0, r3
    ldr r1, [r0, #0x00]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r5, r0, #0x01
    ldrh r0, [r6, #0x2C]
    adds r0, #0x02
    strh r0, [r6, #0x2C]
    adds r0, r6, #0x0
    adds r0, #0x2E
    ldrb r1, [r0, #0x00]
    mov r10, r0
    cmp r1, #0x01
    bne _0805BB82
    ldr r2, _0805BC0C @ =0xFFFA0000
    adds r5, r5, r2
_0805BB82:
    mov r3, r8
    movs r0, #0x24
    ldsh r1, [r3, r0]
    movs r0, #0x80
    lsls r0, r0, #0x09
    bl __divsi3
    adds r1, r0, #0x0
    adds r0, r7, #0x0
    muls r0, r1
    cmp r0, #0x00
    bge _0805BB9E
    ldr r2, _0805BC10 @ =0x00FFFFFF
    adds r0, r0, r2
_0805BB9E:
    asrs r7, r0, #0x18
    adds r0, r5, #0x0
    muls r0, r1
    cmp r0, #0x00
    bge _0805BBAC
    ldr r3, _0805BC10 @ =0x00FFFFFF
    adds r0, r0, r3
_0805BBAC:
    asrs r5, r0, #0x18
    mov r1, r8
    movs r2, #0x20
    ldsh r0, [r1, r2]
    adds r0, r0, r7
    strh r0, [r6, #0x14]
    movs r3, #0x22
    ldsh r0, [r1, r3]
    adds r0, r0, r5
    strh r0, [r6, #0x16]
    movs r2, #0x24
    ldsh r0, [r1, r2]
    str r0, [r6, #0x1C]
    movs r3, #0x24
    ldsh r0, [r1, r3]
    str r0, [r6, #0x20]
    ldr r0, _0805BC14 @ =0x000087FF
    cmp r4, r0
    bgt _0805BC40
    movs r0, #0xF0
    lsls r0, r0, #0x07
    cmp r4, r0
    bge _0805BCB8
    ldr r0, _0805BC18 @ =0x000037FF
    cmp r4, r0
    bgt _0805BC20
    movs r0, #0xA0
    lsls r0, r0, #0x06
    cmp r4, r0
    bge _0805BCA4
    ldr r0, _0805BC1C @ =0x000017FF
    cmp r4, r0
    bgt _0805BC9C
    movs r0, #0x80
    lsls r0, r0, #0x04
    cmp r4, r0
    bge _0805BC94
    cmp r4, #0x00
    blt _0805BCBC
    b _0805BC86
_0805BBFC: .4byte 0xFFFFE800
_0805BC00: .4byte 0x0000FFFF
_0805BC04: .4byte 0x080E645C
_0805BC08: .4byte 0x000003FF
_0805BC0C: .4byte 0xFFFA0000
_0805BC10: .4byte 0x00FFFFFF
_0805BC14: .4byte 0x000087FF
_0805BC18: .4byte 0x000037FF
_0805BC1C: .4byte 0x000017FF
_0805BC20:
    ldr r0, _0805BC30 @ =0x000057FF
    cmp r4, r0
    bgt _0805BC34
    movs r0, #0x90
    lsls r0, r0, #0x07
    cmp r4, r0
    bge _0805BCAC
    b _0805BCBC
_0805BC30: .4byte 0x000057FF
_0805BC34:
    ldr r0, _0805BC3C @ =0x000067FF
    cmp r4, r0
    ble _0805BCB0
    b _0805BCB4
_0805BC3C: .4byte 0x000067FF
_0805BC40:
    ldr r0, _0805BC60 @ =0x0000C7FF
    cmp r4, r0
    bgt _0805BC68
    movs r0, #0xB8
    lsls r0, r0, #0x08
    cmp r4, r0
    bge _0805BCBC
    ldr r0, _0805BC64 @ =0x0000A7FF
    cmp r4, r0
    bgt _0805BCAC
    movs r0, #0x98
    lsls r0, r0, #0x08
    cmp r4, r0
    bge _0805BCB0
    b _0805BCB4
    .byte 0x00, 0x00
_0805BC60: .4byte 0x0000C7FF
_0805BC64: .4byte 0x0000A7FF
_0805BC68:
    ldr r0, _0805BC78 @ =0x0000E7FF
    cmp r4, r0
    bgt _0805BC7C
    movs r0, #0xD8
    lsls r0, r0, #0x08
    cmp r4, r0
    bge _0805BC9C
    b _0805BCA4
_0805BC78: .4byte 0x0000E7FF
_0805BC7C:
    ldr r0, _0805BC8C @ =0x0000F7FF
    cmp r4, r0
    ble _0805BC94
    cmp r4, r9
    bgt _0805BCBC
_0805BC86:
    ldr r0, _0805BC90 @ =0x0000FFFC
    b _0805BCBE
    .byte 0x00, 0x00
_0805BC8C: .4byte 0x0000F7FF
_0805BC90: .4byte 0x0000FFFC
_0805BC94:
    ldr r0, _0805BC98 @ =0x0000FFFD
    b _0805BCBE
_0805BC98: .4byte 0x0000FFFD
_0805BC9C:
    ldr r0, _0805BCA0 @ =0x0000FFFE
    b _0805BCBE
_0805BCA0: .4byte 0x0000FFFE
_0805BCA4:
    ldr r0, _0805BCA8 @ =0x0000FFFF
    b _0805BCBE
_0805BCA8: .4byte 0x0000FFFF
_0805BCAC:
    movs r0, #0x01
    b _0805BCBE
_0805BCB0:
    movs r0, #0x02
    b _0805BCBE
_0805BCB4:
    movs r0, #0x03
    b _0805BCBE
_0805BCB8:
    movs r0, #0x04
    b _0805BCBE
_0805BCBC:
    movs r0, #0x00
_0805BCBE:
    mov r2, r8
    movs r3, #0x24
    ldsh r1, [r2, r3]
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    adds r0, r0, r1
    strh r0, [r6, #0x24]
    movs r0, #0xC9
    lsls r0, r0, #0x01
    add r0, r8
    ldrb r1, [r0, #0x00]
    movs r0, #0x10
    ands r0, r1
    cmp r0, #0x00
    beq _0805BD00
    movs r0, #0x14
    ldsh r1, [r6, r0]
    movs r0, #0x10
    negs r0, r0
    cmp r1, r0
    blt _0805BD00
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    bgt _0805BD00
    movs r1, #0x16
    ldsh r0, [r6, r1]
    cmp r0, #0xB0
    bgt _0805BD00
    ldrb r1, [r6, #0x10]
    movs r0, #0x01
    orrs r0, r1
    b _0805BD06
_0805BD00:
    ldrb r1, [r6, #0x10]
    movs r0, #0xFE
    ands r0, r1
_0805BD06:
    strb r0, [r6, #0x10]
    ldr r3, [sp, #0x000]
    mov r2, r10
    ldrb r2, [r2, #0x00]
    cmp r3, r2
    bge _0805BD20
    ldr r3, _0805BD30 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r3, r1
    adds r1, r6, #0x0
    bl sub_805B520
_0805BD20:
    add sp, #0x004
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0805BD30: .4byte 0x03002E20
    thumb_func_start sub_805BD34
sub_805BD34:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    adds r6, r1, #0x0
    adds r4, r2, #0x0
    lsls r5, r5, #0x10
    lsrs r5, r5, #0x10
    lsls r6, r6, #0x10
    lsrs r6, r6, #0x10
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    ldr r0, _0805BD70 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    strh r4, [r0, #0x24]
    ldr r1, _0805BD74 @ =0x0805B44D
    str r1, [r0, #0x00]
    strh r5, [r0, #0x14]
    strh r6, [r0, #0x16]
    ldr r1, _0805BD78 @ =0x080F2F7C
    str r1, [r0, #0x08]
    ldrb r2, [r0, #0x10]
    movs r1, #0x01
    orrs r1, r2
    strb r1, [r0, #0x10]
    pop {r4, r5, r6}
    pop {r1}
    bx r1
_0805BD70: .4byte 0x03002E20
_0805BD74: .4byte sub_805B44C
_0805BD78: .4byte 0x080F2F7C
    thumb_func_start sub_805BD7C
sub_805BD7C:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    adds r6, r1, #0x0
    adds r4, r2, #0x0
    lsls r5, r5, #0x10
    lsrs r5, r5, #0x10
    lsls r6, r6, #0x10
    lsrs r6, r6, #0x10
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    ldr r0, _0805BDB8 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    strh r4, [r0, #0x24]
    ldr r1, _0805BDBC @ =0x0805B44D
    str r1, [r0, #0x00]
    strh r5, [r0, #0x14]
    strh r6, [r0, #0x16]
    ldr r1, _0805BDC0 @ =0x080F2FE4
    str r1, [r0, #0x08]
    ldrb r2, [r0, #0x10]
    movs r1, #0x01
    orrs r1, r2
    strb r1, [r0, #0x10]
    pop {r4, r5, r6}
    pop {r1}
    bx r1
_0805BDB8: .4byte 0x03002E20
_0805BDBC: .4byte sub_805B44C
_0805BDC0: .4byte 0x080F2FE4
    thumb_func_start sub_805BDC4
sub_805BDC4:
    push {r4, r5, r6, lr}
    add sp, #-0x004
    adds r6, r0, #0x0
    adds r3, r1, #0x0
    adds r4, r2, #0x0
    lsls r6, r6, #0x10
    lsrs r6, r6, #0x10
    lsls r3, r3, #0x10
    lsrs r3, r3, #0x10
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    ldr r5, _0805BE20 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r5, r1
    str r3, [sp, #0x000]
    bl sub_805B4D8
    strh r4, [r0, #0x24]
    ldr r1, _0805BE24 @ =0x0805B44D
    str r1, [r0, #0x00]
    strh r6, [r0, #0x14]
    ldr r3, [sp, #0x000]
    strh r3, [r0, #0x16]
    ldr r3, _0805BE28 @ =0x00000838
    adds r5, r5, r3
    ldr r2, [r5, #0x00]
    movs r3, #0x24
    ldsh r1, [r2, r3]
    asrs r1, r1, #0x01
    str r1, [r0, #0x1C]
    movs r3, #0x24
    ldsh r1, [r2, r3]
    asrs r1, r1, #0x01
    str r1, [r0, #0x20]
    ldr r1, _0805BE2C @ =0x080F3014
    str r1, [r0, #0x08]
    ldrb r2, [r0, #0x10]
    movs r1, #0x01
    orrs r1, r2
    strb r1, [r0, #0x10]
    add sp, #0x004
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805BE20: .4byte 0x03002E20
_0805BE24: .4byte sub_805B44C
_0805BE28: .4byte 0x00000838
_0805BE2C: .4byte 0x080F3014
    .byte 0x70, 0xB5, 0x05, 0x1C, 0x0E, 0x1C, 0x14, 0x1C, 0x2D, 0x04, 0x2D, 0x0C, 0x36, 0x04, 0x36, 0x0C
    .byte 0x24, 0x04, 0x24, 0x0C, 0x09, 0x48, 0xEA, 0x21, 0xC9, 0x00, 0x40, 0x18, 0xFF, 0xF7, 0x44, 0xFB
    .byte 0x84, 0x84, 0x07, 0x49, 0x01, 0x60, 0x85, 0x82, 0xC6, 0x82, 0x06, 0x49, 0x81, 0x60, 0x02, 0x7C
    .byte 0x01, 0x21, 0x11, 0x43, 0x01, 0x74, 0x70, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x20, 0x2E, 0x00, 0x03
    .byte 0x4D, 0xB4, 0x05, 0x08, 0x34, 0x30, 0x0F, 0x08
    thumb_func_start sub_805BE78
sub_805BE78:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    add sp, #-0x00C
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    lsls r1, r1, #0x10
    lsrs r6, r1, #0x10
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    mov r9, r2
    movs r5, #0x0F
    mov r4, sp
    movs r0, #0x80
    lsls r0, r0, #0x01
    mov r8, r0
_0805BE9A:
    ldr r0, _0805BF08 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    str r0, [r4, #0x00]
    mov r1, r9
    strh r1, [r0, #0x24]
    ldr r1, [r4, #0x00]
    ldr r0, _0805BF0C @ =0x0805BF79
    str r0, [r1, #0x00]
    strh r7, [r1, #0x14]
    ldr r0, [r4, #0x00]
    strh r6, [r0, #0x16]
    ldr r1, [r4, #0x00]
    lsls r0, r7, #0x10
    str r0, [r1, #0x28]
    ldr r1, [r4, #0x00]
    lsls r0, r6, #0x10
    str r0, [r1, #0x2C]
    bl main_getRandom
    ldr r2, [r4, #0x00]
    adds r1, r5, #0x0
    ands r1, r0
    lsls r1, r1, #0x04
    add r1, r8
    str r1, [r2, #0x1C]
    bl main_getRandom
    ldr r2, [r4, #0x00]
    adds r1, r5, #0x0
    ands r1, r0
    lsls r1, r1, #0x04
    add r1, r8
    str r1, [r2, #0x20]
    add r0, sp, #0x004
    cmp r4, r0
    beq _0805BF14
    cmp r4, r0
    ble _0805BF22
    add r0, sp, #0x008
    cmp r4, r0
    bne _0805BF22
    bl main_getRandom
    ldr r2, [sp, #0x008]
    adds r1, r5, #0x0
    ands r1, r0
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x0B
    ldr r1, _0805BF10 @ =0xFFFF4000
    b _0805BF36
_0805BF08: .4byte 0x03002E20
_0805BF0C: .4byte sub_805BF78
_0805BF10: .4byte 0xFFFF4000
_0805BF14:
    bl main_getRandom
    ldr r2, [sp, #0x004]
    movs r1, #0x07
    ands r1, r0
    negs r1, r1
    b _0805BF2C
_0805BF22:
    bl main_getRandom
    ldr r2, [r4, #0x00]
    movs r1, #0x07
    ands r1, r0
_0805BF2C:
    lsls r0, r1, #0x02
    adds r0, r0, r1
    lsls r0, r0, #0x0B
    movs r1, #0xC0
    lsls r1, r1, #0x06
_0805BF36:
    adds r0, r0, r1
    str r0, [r2, #0x30]
    bl main_getRandom
    ldr r2, [r4, #0x00]
    adds r1, r5, #0x0
    ands r1, r0
    lsls r1, r1, #0x0D
    ldr r0, _0805BF70 @ =0xFFFD0000
    adds r1, r1, r0
    str r1, [r2, #0x34]
    ldm r4!, {r1}
    ldr r0, _0805BF74 @ =0x0807C754
    str r0, [r1, #0x04]
    ldrb r2, [r1, #0x10]
    movs r0, #0x01
    orrs r0, r2
    strb r0, [r1, #0x10]
    add r0, sp, #0x008
    cmp r4, r0
    ble _0805BE9A
    ldr r0, [sp, #0x000]
    add sp, #0x00C
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
_0805BF70: .4byte 0xFFFD0000
_0805BF74: .4byte 0x0807C754
    thumb_func_start sub_805BF78
sub_805BF78:
    push {r4, r5, lr}
    adds r3, r0, #0x0
    ldr r4, _0805BFD8 @ =0x03002E20
    ldr r1, _0805BFDC @ =0x00000848
    adds r0, r4, r1
    ldrh r2, [r0, #0x14]
    ldr r1, _0805BFE0 @ =0x00000BC8
    adds r0, r4, r1
    ldr r5, [r0, #0x00]
    ldr r0, [r3, #0x28]
    ldr r1, [r3, #0x30]
    adds r0, r0, r1
    str r0, [r3, #0x28]
    asrs r1, r0, #0x10
    lsls r2, r2, #0x10
    asrs r0, r2, #0x10
    cmp r0, #0x00
    bge _0805BF9E
    adds r0, #0x7F
_0805BF9E:
    asrs r0, r0, #0x07
    subs r0, r1, r0
    movs r1, #0xFF
    ands r0, r1
    strh r0, [r3, #0x14]
    ldr r2, [r3, #0x2C]
    ldr r1, [r3, #0x34]
    adds r2, r2, r1
    str r2, [r3, #0x2C]
    asrs r0, r2, #0x10
    adds r0, r0, r5
    strh r0, [r3, #0x16]
    movs r0, #0xE0
    lsls r0, r0, #0x05
    adds r1, r1, r0
    str r1, [r3, #0x34]
    ldr r0, _0805BFE4 @ =0x003FFFFF
    cmp r2, r0
    ble _0805BFD0
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r4, r1
    adds r1, r3, #0x0
    bl sub_805B520
_0805BFD0:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805BFD8: .4byte 0x03002E20
_0805BFDC: .4byte 0x00000848
_0805BFE0: .4byte 0x00000BC8
_0805BFE4: .4byte 0x003FFFFF
    thumb_func_start sub_805BFE8
sub_805BFE8:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r0, _0805C010 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    str r4, [r0, #0x28]
    ldr r1, _0805C014 @ =0x0805C01D
    str r1, [r0, #0x00]
    ldr r1, _0805C018 @ =0x080F3044
    str r1, [r0, #0x08]
    ldrb r2, [r0, #0x10]
    movs r1, #0x01
    orrs r1, r2
    strb r1, [r0, #0x10]
    pop {r4}
    pop {r1}
    bx r1
_0805C010: .4byte 0x03002E20
_0805C014: .4byte sub_805C01C
_0805C018: .4byte 0x080F3044
    thumb_func_start sub_805C01C
sub_805C01C:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    ldr r5, [r4, #0x28]
    bl sub_805B44C
    cmp r0, #0x00
    beq _0805C04A
    movs r1, #0x24
    ldsh r0, [r5, r1]
    subs r0, #0x01
    strh r0, [r4, #0x24]
    movs r1, #0x20
    ldsh r0, [r5, r1]
    strh r0, [r4, #0x14]
    movs r1, #0x22
    ldsh r0, [r5, r1]
    strh r0, [r4, #0x16]
    movs r1, #0x24
    ldsh r0, [r5, r1]
    str r0, [r4, #0x1C]
    movs r1, #0x24
    ldsh r0, [r5, r1]
    str r0, [r4, #0x20]
_0805C04A:
    pop {r4, r5}
    pop {r0}
    bx r0
    thumb_func_start sub_805C050
sub_805C050:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r0, _0805C078 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    str r4, [r0, #0x28]
    ldr r1, _0805C07C @ =0x0805C085
    str r1, [r0, #0x00]
    ldr r1, _0805C080 @ =0x080F30B4
    str r1, [r0, #0x08]
    ldrb r2, [r0, #0x10]
    movs r1, #0x01
    orrs r1, r2
    strb r1, [r0, #0x10]
    pop {r4}
    pop {r1}
    bx r1
_0805C078: .4byte 0x03002E20
_0805C07C: .4byte sub_805C084
_0805C080: .4byte 0x080F30B4
    thumb_func_start sub_805C084
sub_805C084:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    ldr r5, [r4, #0x28]
    bl sub_805B44C
    cmp r0, #0x00
    beq _0805C0B2
    movs r1, #0x24
    ldsh r0, [r5, r1]
    subs r0, #0x01
    strh r0, [r4, #0x24]
    movs r1, #0x20
    ldsh r0, [r5, r1]
    strh r0, [r4, #0x14]
    movs r1, #0x22
    ldsh r0, [r5, r1]
    strh r0, [r4, #0x16]
    movs r1, #0x24
    ldsh r0, [r5, r1]
    str r0, [r4, #0x1C]
    movs r1, #0x24
    ldsh r0, [r5, r1]
    str r0, [r4, #0x20]
_0805C0B2:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x10, 0xB5, 0x04, 0x1C, 0x11, 0x48, 0xEA, 0x21, 0xC9, 0x00, 0x40, 0x18, 0xFF, 0xF7, 0x08, 0xFA
    .byte 0x84, 0x62, 0x02, 0x1C, 0x2C, 0x32, 0x00, 0x21, 0x11, 0x70, 0x0D, 0x49, 0x01, 0x60, 0x61, 0x6C
    .byte 0x41, 0x60, 0x20, 0x22, 0xA1, 0x5E, 0x81, 0x82, 0x22, 0x22, 0xA1, 0x5E, 0x0A, 0x39, 0xC1, 0x82
    .byte 0x24, 0x22, 0xA1, 0x5E, 0xC1, 0x61, 0x24, 0x22, 0xA1, 0x5E, 0x89, 0x00, 0x01, 0x62, 0x02, 0x7C
    .byte 0x01, 0x21, 0x11, 0x43, 0x01, 0x74, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x20, 0x2E, 0x00, 0x03
    .byte 0x0D, 0xC1, 0x05, 0x08
    thumb_func_start sub_805C10C
sub_805C10C:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r6, r0, #0x0
    ldr r4, [r6, #0x28]
    movs r0, #0x2C
    adds r0, r0, r6
    mov r8, r0
    ldrb r7, [r0, #0x00]
    adds r5, r7, #0x0
    ldr r0, [r4, #0x44]
    str r0, [r6, #0x04]
    movs r1, #0x24
    ldsh r0, [r4, r1]
    adds r0, #0x01
    strh r0, [r6, #0x24]
    movs r0, #0x20
    ldsh r2, [r4, r0]
    ldr r3, _0805C194 @ =0x080F30FC
    lsls r1, r5, #0x01
    adds r1, r1, r5
    adds r0, r1, r3
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    adds r2, r2, r0
    strh r2, [r6, #0x14]
    movs r0, #0x22
    ldsh r2, [r4, r0]
    adds r0, r3, #0x1
    adds r0, r1, r0
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    adds r2, r2, r0
    strh r2, [r6, #0x16]
    adds r3, #0x02
    adds r1, r1, r3
    movs r0, #0x00
    ldsb r0, [r1, r0]
    lsls r0, r0, #0x07
    str r0, [r6, #0x18]
    movs r1, #0x24
    ldsh r0, [r4, r1]
    str r0, [r6, #0x1C]
    movs r1, #0x24
    ldsh r0, [r4, r1]
    lsls r0, r0, #0x02
    str r0, [r6, #0x20]
    adds r0, r5, #0x1
    lsls r0, r0, #0x18
    lsrs r7, r0, #0x18
    cmp r5, #0x0E
    bls _0805C186
    ldr r0, _0805C198 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    adds r1, r6, #0x0
    bl sub_805B520
_0805C186:
    mov r0, r8
    strb r7, [r0, #0x00]
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0805C194: .4byte 0x080F30FC
_0805C198: .4byte 0x03002E20
    thumb_func_start sub_805C19C
sub_805C19C:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    adds r7, r0, #0x0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    mov r8, r1
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    mov r9, r2
    ldr r4, _0805C260 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r4, r1
    bl sub_805B4D8
    adds r5, r0, #0x0
    adds r6, r7, #0x0
    ldr r2, _0805C264 @ =0x00000838
    adds r4, r4, r2
    ldr r0, [r4, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0805C204
    ldr r2, _0805C268 @ =0x08102414
    ldr r0, _0805C26C @ =0x08102498
    movs r1, #0xB7
    lsls r1, r1, #0x03
    adds r3, r0, r1
    ldrh r1, [r3, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r1, [r0, #0x00]
    ldrh r0, [r1, #0x04]
    cmp r0, #0x00
    beq _0805C1FE
    movs r2, #0x00
    ldr r1, [r1, #0x00]
    ldr r0, [r3, #0x00]
    cmp r1, r0
    bne _0805C1FA
    movs r2, #0x01
_0805C1FA:
    cmp r2, #0x00
    beq _0805C204
_0805C1FE:
    movs r0, #0xB7
    bl m4aSongNumStart
_0805C204:
    str r7, [r5, #0x28]
    ldr r0, _0805C270 @ =0x0805C279
    str r0, [r5, #0x00]
    ldr r0, _0805C274 @ =0x080F312C
    str r0, [r5, #0x08]
    movs r2, #0x24
    ldsh r0, [r6, r2]
    subs r0, #0x01
    strh r0, [r5, #0x24]
    adds r0, r5, #0x0
    adds r0, #0x2C
    mov r1, r8
    strb r1, [r0, #0x00]
    adds r0, #0x01
    mov r2, r9
    strb r2, [r0, #0x00]
    movs r0, #0x20
    ldsh r4, [r6, r0]
    mov r1, r8
    lsls r0, r1, #0x18
    asrs r0, r0, #0x10
    movs r2, #0x24
    ldsh r1, [r6, r2]
    bl Div
    adds r4, r4, r0
    strh r4, [r5, #0x14]
    movs r0, #0x22
    ldsh r4, [r6, r0]
    mov r1, r9
    lsls r0, r1, #0x18
    asrs r0, r0, #0x10
    movs r2, #0x24
    ldsh r1, [r6, r2]
    bl Div
    adds r4, r4, r0
    strh r4, [r5, #0x16]
    adds r0, r5, #0x0
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805C260: .4byte 0x03002E20
_0805C264: .4byte 0x00000838
_0805C268: .4byte 0x08102414
_0805C26C: .4byte 0x08102498
_0805C270: .4byte sub_805C278
_0805C274: .4byte 0x080F312C
    thumb_func_start sub_805C278
sub_805C278:
    push {r4, r5, r6, r7, lr}
    adds r5, r0, #0x0
    ldr r7, [r5, #0x28]
    bl sub_805B44C
    cmp r0, #0x00
    beq _0805C2DC
    movs r1, #0x24
    ldsh r0, [r7, r1]
    subs r0, #0x01
    strh r0, [r5, #0x24]
    movs r2, #0x20
    ldsh r4, [r7, r2]
    adds r0, r5, #0x0
    adds r0, #0x2C
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    lsls r0, r0, #0x08
    movs r2, #0x24
    ldsh r1, [r7, r2]
    bl Div
    adds r4, r4, r0
    strh r4, [r5, #0x14]
    movs r0, #0x22
    ldsh r4, [r7, r0]
    adds r6, r5, #0x0
    adds r6, #0x2D
    movs r0, #0x00
    ldsb r0, [r6, r0]
    lsls r0, r0, #0x08
    movs r2, #0x24
    ldsh r1, [r7, r2]
    bl Div
    adds r4, r4, r0
    strh r4, [r5, #0x16]
    ldrb r0, [r6, #0x00]
    subs r0, #0x01
    strb r0, [r6, #0x00]
    adds r0, r7, #0x0
    bl sub_803D818
    cmp r0, #0x00
    bne _0805C2DC
    ldrb r0, [r5, #0x10]
    movs r1, #0x01
    orrs r0, r1
    strb r0, [r5, #0x10]
_0805C2DC:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805C2E4
sub_805C2E4:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r4, r0, #0x0
    ldr r0, [r4, #0x28]
    mov r8, r0
    adds r0, r4, #0x0
    bl sub_805B44C
    cmp r0, #0x00
    beq _0805C344
    adds r6, r4, #0x0
    adds r6, #0x2E
    ldrb r0, [r6, #0x00]
    cmp r0, #0x00
    beq _0805C308
    subs r0, #0x01
    b _0805C342
_0805C308:
    ldr r0, _0805C350 @ =0x03002E20
    ldr r5, [r0, #0x10]
    movs r1, #0x1F
    adds r0, r5, #0x0
    ands r0, r1
    subs r0, #0x10
    lsls r0, r0, #0x18
    lsrs r7, r0, #0x18
    movs r0, #0x07
    ands r0, r5
    lsls r4, r0, #0x01
    movs r0, #0xF0
    orrs r4, r0
    mov r0, r8
    bl sub_803D818
    cmp r0, #0x00
    bne _0805C33A
    lsls r1, r7, #0x18
    asrs r1, r1, #0x18
    lsls r2, r4, #0x18
    asrs r2, r2, #0x18
    mov r0, r8
    bl sub_805C19C
_0805C33A:
    movs r0, #0x03
    ands r5, r0
    lsls r0, r5, #0x02
    adds r0, #0x04
_0805C342:
    strb r0, [r6, #0x00]
_0805C344:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805C350: .4byte 0x03002E20
    thumb_func_start sub_805C354
sub_805C354:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r0, _0805C37C @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    str r4, [r0, #0x28]
    ldr r1, _0805C380 @ =0x0805C2E5
    str r1, [r0, #0x00]
    ldr r1, _0805C384 @ =0x080F3144
    str r1, [r0, #0x08]
    adds r2, r0, #0x0
    adds r2, #0x2E
    movs r1, #0x00
    strb r1, [r2, #0x00]
    pop {r4}
    pop {r1}
    bx r1
_0805C37C: .4byte 0x03002E20
_0805C380: .4byte sub_805C2E4
_0805C384: .4byte 0x080F3144
    thumb_func_start sub_805C388
sub_805C388:
    push {r4, r5, r6, r7, lr}
    adds r7, r0, #0x0
    ldr r4, _0805C3F4 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r4, r1
    bl sub_805B4D8
    adds r5, r0, #0x0
    adds r6, r7, #0x0
    ldr r0, _0805C3F8 @ =0x00000838
    adds r4, r4, r0
    ldr r0, [r4, #0x00]
    ldr r0, [r0, #0x48]
    movs r1, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0805C3CE
    ldr r2, _0805C3FC @ =0x08102414
    ldr r0, _0805C400 @ =0x08102498
    movs r1, #0xB5
    lsls r1, r1, #0x03
    adds r0, r0, r1
    ldrh r1, [r0, #0x04]
    lsls r0, r1, #0x01
    adds r0, r0, r1
    lsls r0, r0, #0x02
    adds r0, r0, r2
    ldr r0, [r0, #0x00]
    ldrh r0, [r0, #0x04]
    cmp r0, #0x00
    bne _0805C3CE
    movs r0, #0xB5
    bl m4aSongNumStart
_0805C3CE:
    str r7, [r5, #0x28]
    ldr r0, _0805C404 @ =0x0805C40D
    str r0, [r5, #0x00]
    ldr r0, _0805C408 @ =0x080F3158
    str r0, [r5, #0x08]
    movs r1, #0x24
    ldsh r0, [r6, r1]
    subs r0, #0x01
    strh r0, [r5, #0x24]
    movs r1, #0x20
    ldsh r0, [r6, r1]
    strh r0, [r5, #0x14]
    movs r1, #0x22
    ldsh r0, [r6, r1]
    strh r0, [r5, #0x16]
    adds r0, r5, #0x0
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
_0805C3F4: .4byte 0x03002E20
_0805C3F8: .4byte 0x00000838
_0805C3FC: .4byte 0x08102414
_0805C400: .4byte 0x08102498
_0805C404: .4byte sub_805C40C
_0805C408: .4byte 0x080F3158
    thumb_func_start sub_805C40C
sub_805C40C:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    ldr r5, [r4, #0x28]
    bl sub_805B44C
    cmp r0, #0x00
    beq _0805C442
    movs r1, #0x24
    ldsh r0, [r5, r1]
    subs r0, #0x01
    strh r0, [r4, #0x24]
    movs r1, #0x20
    ldsh r0, [r5, r1]
    strh r0, [r4, #0x14]
    movs r1, #0x22
    ldsh r0, [r5, r1]
    subs r0, #0x10
    strh r0, [r4, #0x16]
    adds r0, r5, #0x0
    bl sub_803D818
    cmp r0, #0x00
    bne _0805C442
    ldrb r1, [r4, #0x10]
    movs r0, #0x01
    orrs r0, r1
    strb r0, [r4, #0x10]
_0805C442:
    pop {r4, r5}
    pop {r0}
    bx r0
    thumb_func_start sub_805C448
sub_805C448:
    push {r4, r5, r6, lr}
    mov r6, r9
    mov r5, r8
    push {r5, r6}
    mov r9, r0
    adds r4, r1, #0x0
    adds r5, r2, #0x0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    lsls r5, r5, #0x18
    lsrs r5, r5, #0x18
    ldr r0, _0805C4CC @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    adds r6, r0, #0x0
    mov r2, r9
    str r2, [r6, #0x28]
    ldr r0, _0805C4D0 @ =0x0805C4D9
    str r0, [r6, #0x00]
    ldr r0, _0805C4D4 @ =0x080F3180
    str r0, [r6, #0x08]
    movs r1, #0x24
    ldsh r0, [r2, r1]
    subs r0, #0x01
    strh r0, [r6, #0x24]
    adds r0, r6, #0x0
    adds r0, #0x2C
    strb r4, [r0, #0x00]
    adds r0, #0x01
    strb r5, [r0, #0x00]
    movs r0, #0x20
    ldsh r2, [r2, r0]
    mov r8, r2
    lsls r4, r4, #0x18
    asrs r4, r4, #0x10
    mov r2, r9
    movs r0, #0x24
    ldsh r1, [r2, r0]
    adds r0, r4, #0x0
    bl Div
    add r8, r0
    mov r1, r8
    strh r1, [r6, #0x14]
    mov r2, r9
    movs r0, #0x22
    ldsh r4, [r2, r0]
    lsls r5, r5, #0x18
    asrs r5, r5, #0x10
    movs r0, #0x24
    ldsh r1, [r2, r0]
    adds r0, r5, #0x0
    bl Div
    adds r4, r4, r0
    strh r4, [r6, #0x16]
    adds r0, r6, #0x0
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6}
    pop {r1}
    bx r1
_0805C4CC: .4byte 0x03002E20
_0805C4D0: .4byte sub_805C4D8
_0805C4D4: .4byte 0x080F3180
    thumb_func_start sub_805C4D8
sub_805C4D8:
    push {r4, r5, r6, r7, lr}
    adds r5, r0, #0x0
    ldr r7, [r5, #0x28]
    bl sub_805B44C
    cmp r0, #0x00
    beq _0805C548
    movs r1, #0x24
    ldsh r0, [r7, r1]
    subs r0, #0x01
    strh r0, [r5, #0x24]
    movs r2, #0x20
    ldsh r4, [r7, r2]
    adds r0, r5, #0x0
    adds r0, #0x2C
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    lsls r0, r0, #0x08
    movs r2, #0x24
    ldsh r1, [r7, r2]
    bl Div
    adds r4, r4, r0
    strh r4, [r5, #0x14]
    movs r0, #0x22
    ldsh r4, [r7, r0]
    adds r6, r5, #0x0
    adds r6, #0x2D
    movs r0, #0x00
    ldsb r0, [r6, r0]
    lsls r0, r0, #0x08
    movs r2, #0x24
    ldsh r1, [r7, r2]
    bl Div
    adds r4, r4, r0
    strh r4, [r5, #0x16]
    ldr r2, _0805C550 @ =0x080F31A0
    ldr r1, [r5, #0x0C]
    movs r0, #0x08
    subs r0, r0, r1
    adds r0, r0, r2
    ldrb r0, [r0, #0x00]
    ldrb r1, [r6, #0x00]
    adds r0, r0, r1
    strb r0, [r6, #0x00]
    adds r0, r7, #0x0
    bl sub_803D818
    cmp r0, #0x00
    bne _0805C548
    ldrb r0, [r5, #0x10]
    movs r1, #0x01
    orrs r0, r1
    strb r0, [r5, #0x10]
_0805C548:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805C550: .4byte 0x080F31A0
    thumb_func_start sub_805C554
sub_805C554:
    push {r4, r5, r6, r7, lr}
    adds r6, r0, #0x0
    ldr r7, [r6, #0x28]
    bl sub_805B44C
    cmp r0, #0x00
    beq _0805C5BC
    adds r5, r6, #0x0
    adds r5, #0x2E
    ldrb r0, [r5, #0x00]
    cmp r0, #0x00
    beq _0805C572
    subs r0, #0x01
    strb r0, [r5, #0x00]
    b _0805C5A0
_0805C572:
    ldr r0, _0805C5C4 @ =0x03002E20
    ldr r4, [r0, #0x10]
    movs r0, #0x1F
    adds r1, r4, #0x0
    ands r1, r0
    subs r1, #0x10
    movs r2, #0x07
    ands r2, r4
    lsls r2, r2, #0x19
    lsls r1, r1, #0x18
    asrs r1, r1, #0x18
    movs r0, #0xFC
    lsls r0, r0, #0x18
    adds r2, r2, r0
    asrs r2, r2, #0x18
    adds r0, r7, #0x0
    bl sub_805C448
    movs r0, #0x03
    ands r4, r0
    lsls r4, r4, #0x02
    adds r4, #0x04
    strb r4, [r5, #0x00]
_0805C5A0:
    adds r0, r7, #0x0
    adds r0, #0x72
    ldrb r1, [r0, #0x00]
    movs r0, #0x0F
    ands r0, r1
    cmp r0, #0x0E
    beq _0805C5BC
    ldr r0, _0805C5C4 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    adds r1, r6, #0x0
    bl sub_805B520
_0805C5BC:
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805C5C4: .4byte 0x03002E20
    thumb_func_start sub_805C5C8
sub_805C5C8:
    push {r4, lr}
    adds r4, r0, #0x0
    ldr r0, _0805C5F0 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    str r4, [r0, #0x28]
    ldr r1, _0805C5F4 @ =0x0805C555
    str r1, [r0, #0x00]
    ldr r1, _0805C5F8 @ =0x080F3190
    str r1, [r0, #0x08]
    adds r2, r0, #0x0
    adds r2, #0x2E
    movs r1, #0x00
    strb r1, [r2, #0x00]
    pop {r4}
    pop {r1}
    bx r1
_0805C5F0: .4byte 0x03002E20
_0805C5F4: .4byte sub_805C554
_0805C5F8: .4byte 0x080F3190
    thumb_func_start sub_805C5FC
sub_805C5FC:
    push {r4, r5, r6, lr}
    adds r4, r0, #0x0
    adds r5, r1, #0x0
    adds r6, r2, #0x0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    lsls r5, r5, #0x10
    lsrs r5, r5, #0x10
    lsls r6, r6, #0x10
    lsrs r6, r6, #0x10
    ldr r0, _0805C648 @ =0x03002E20
    movs r1, #0xEA
    lsls r1, r1, #0x03
    adds r0, r0, r1
    bl sub_805B4D8
    movs r3, #0x00
    strh r6, [r0, #0x24]
    ldr r1, _0805C64C @ =0x0805C655
    str r1, [r0, #0x00]
    lsls r4, r4, #0x10
    asrs r4, r4, #0x10
    adds r4, #0x08
    strh r4, [r0, #0x14]
    lsls r5, r5, #0x10
    asrs r5, r5, #0x10
    subs r5, #0x20
    strh r5, [r0, #0x16]
    ldr r1, _0805C650 @ =0x080F31B0
    str r1, [r0, #0x08]
    ldrb r2, [r0, #0x10]
    movs r1, #0x01
    orrs r1, r2
    strb r1, [r0, #0x10]
    str r3, [r0, #0x28]
    pop {r4, r5, r6}
    pop {r1}
    bx r1
_0805C648: .4byte 0x03002E20
_0805C64C: .4byte sub_805C654
_0805C650: .4byte 0x080F31B0
    thumb_func_start sub_805C654
sub_805C654:
    push {r4, r5, lr}
    adds r4, r0, #0x0
    ldr r5, [r4, #0x28]
    ldr r0, _0805C67C @ =0x080F31C0
    adds r0, r5, r0
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    ldrh r1, [r4, #0x16]
    adds r0, r0, r1
    strh r0, [r4, #0x16]
    adds r0, r4, #0x0
    bl sub_805B44C
    adds r5, #0x01
    str r5, [r4, #0x28]
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805C67C: .4byte 0x080F31C0
    thumb_func_start sub_805C680
sub_805C680:
    push {r4, lr}
    adds r4, r0, #0x0
    lsls r1, r1, #0x18
    movs r2, #0xFF
    lsrs r1, r1, #0x18
    movs r3, #0x00
    cmp r1, #0x09
    bhi _0805C69A
    ldr r0, _0805C6E8 @ =0x02032B50
    adds r0, #0x0E
    adds r0, r1, r0
    ldrb r2, [r0, #0x00]
    movs r3, #0x01
_0805C69A:
    cmp r3, #0x00
    bne _0805C6C0
    adds r0, r1, #0x0
    subs r0, #0x0A
    lsls r0, r0, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #0x01
    bhi _0805C6B4
    ldr r0, _0805C6E8 @ =0x02032B50
    adds r0, #0x18
    adds r0, r1, r0
    ldrb r2, [r0, #0x00]
    movs r3, #0x01
_0805C6B4:
    cmp r3, #0x00
    bne _0805C6C0
    cmp r1, #0x02
    bne _0805C6C0
    ldr r0, _0805C6E8 @ =0x02032B50
    ldrb r2, [r0, #0x1A]
_0805C6C0:
    movs r0, #0x08
    ldr r1, _0805C6EC @ =0x03005C90
    strh r0, [r1, #0x00]
    lsls r0, r2, #0x18
    asrs r1, r0, #0x18
    cmp r1, #0x00
    blt _0805C6F4
    ldr r0, _0805C6F0 @ =0x030023DC
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    bne _0805C6F4
    lsls r0, r1, #0x10
    lsrs r0, r0, #0x10
    movs r1, #0x08
    adds r2, r4, #0x0
    movs r3, #0x20
    bl ReadFlash
    movs r0, #0x00
    b _0805C6F6
_0805C6E8: .4byte 0x02032B50
_0805C6EC: .4byte 0x03005C90
_0805C6F0: .4byte 0x030023DC
_0805C6F4:
    movs r0, #0x01
_0805C6F6:
    pop {r4}
    pop {r1}
    bx r1
    .byte 0xF0, 0xB5, 0x47, 0x46, 0x80, 0xB4, 0x0E, 0x4D, 0xBF, 0x20, 0x00, 0x01, 0x2C, 0x18, 0x21, 0x88
    .byte 0x80, 0x27, 0x3F, 0x02, 0x38, 0x1C, 0x08, 0x40, 0x00, 0x04, 0x06, 0x0C, 0x09, 0x48, 0x00, 0x78
    .byte 0x01, 0x28, 0x05, 0xD1, 0x00, 0x20, 0x00, 0x21, 0x2A, 0x1C, 0x07, 0x4B, 0x04, 0xF0, 0xCA, 0xFF
    .byte 0x07, 0x20, 0x28, 0x81, 0x00, 0x2E, 0x09, 0xD0, 0x21, 0x88, 0x38, 0x1C, 0x08, 0x43, 0x08, 0xE0
    .byte 0x80, 0x2B, 0x03, 0x02, 0xDC, 0x23, 0x00, 0x03, 0xF4, 0x0B, 0x00, 0x00, 0x21, 0x88, 0x1D, 0x48
    .byte 0x08, 0x40, 0x20, 0x80, 0x29, 0x1C, 0xBF, 0x24, 0x24, 0x01, 0x00, 0x23, 0x00, 0x22, 0x1A, 0x48
    .byte 0x40, 0x19, 0x80, 0x46, 0x08, 0x78, 0x18, 0x18, 0x00, 0x04, 0x03, 0x0C, 0x01, 0x31, 0x50, 0x1C
    .byte 0x00, 0x04, 0x02, 0x0C, 0xA2, 0x42, 0xF5, 0xDB, 0x14, 0x49, 0x08, 0x1C, 0x43, 0x40, 0x40, 0x46
    .byte 0x01, 0x88, 0x59, 0x40, 0x48, 0x42, 0x08, 0x43, 0x00, 0x28, 0x49, 0xDA, 0xBF, 0x21, 0x09, 0x01
    .byte 0x6C, 0x18, 0x21, 0x88, 0x80, 0x27, 0x3F, 0x02, 0x38, 0x1C, 0x08, 0x40, 0x00, 0x04, 0x06, 0x0C
    .byte 0x0B, 0x48, 0x00, 0x78, 0x01, 0x28, 0x05, 0xD1, 0x01, 0x20, 0x00, 0x21, 0x2A, 0x1C, 0x09, 0x4B
    .byte 0x04, 0xF0, 0x88, 0xFF, 0x07, 0x20, 0x28, 0x81, 0x00, 0x2E, 0x0D, 0xD0, 0x21, 0x88, 0x38, 0x1C
    .byte 0x08, 0x43, 0x0C, 0xE0, 0xFF, 0x7F, 0x00, 0x00, 0xF2, 0x0B, 0x00, 0x00, 0xB4, 0x2C, 0x00, 0x00
    .byte 0xDC, 0x23, 0x00, 0x03, 0xF4, 0x0B, 0x00, 0x00, 0x21, 0x88, 0x0F, 0x48, 0x08, 0x40, 0x20, 0x80
    .byte 0x2A, 0x1C, 0xBF, 0x24, 0x24, 0x01, 0x00, 0x23, 0x00, 0x21, 0x10, 0x78, 0x18, 0x18, 0x00, 0x04
    .byte 0x03, 0x0C, 0x01, 0x32, 0x48, 0x1C, 0x00, 0x04, 0x01, 0x0C, 0xA1, 0x42, 0xF5, 0xDB, 0x07, 0x49
    .byte 0x08, 0x1C, 0x43, 0x40, 0x40, 0x46, 0x01, 0x88, 0x59, 0x40, 0x48, 0x42, 0x08, 0x43, 0x00, 0x28
    .byte 0x06, 0xDA, 0x01, 0x20, 0x05, 0xE0, 0x00, 0x00, 0xFF, 0x7F, 0x00, 0x00, 0xB4, 0x2C, 0x00, 0x00
    .byte 0x00, 0x20, 0x08, 0xBC, 0x98, 0x46, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x30, 0xB5, 0x00, 0x06
    .byte 0x17, 0x4C, 0x80, 0x21, 0x89, 0x04, 0x40, 0x18, 0x01, 0x0E, 0x16, 0x48, 0x00, 0x78, 0x01, 0x28
    .byte 0x06, 0xD1, 0x08, 0x1C, 0x00, 0x21, 0x22, 0x1C, 0x80, 0x23, 0x5B, 0x01, 0x04, 0xF0, 0x3A, 0xFF
    .byte 0x09, 0x20, 0x60, 0x82, 0x23, 0x1C, 0x00, 0x22, 0x00, 0x21, 0x0F, 0x48, 0x25, 0x18, 0x18, 0x78
    .byte 0x10, 0x18, 0x00, 0x04, 0x02, 0x0C, 0x01, 0x33, 0x48, 0x1C, 0x00, 0x04, 0x01, 0x0C, 0x02, 0x29
    .byte 0xF5, 0xDB, 0x0A, 0x49, 0x08, 0x1C, 0x42, 0x40, 0x29, 0x88, 0x51, 0x40, 0x48, 0x42, 0x08, 0x43
    .byte 0x00, 0x28, 0x0D, 0xDB, 0x60, 0x89, 0x00, 0x28, 0x0A, 0xD0, 0x00, 0x20, 0x09, 0xE0, 0x00, 0x00
    .byte 0x00, 0x34, 0x02, 0x02, 0xDC, 0x23, 0x00, 0x03, 0xFE, 0x0F, 0x00, 0x00, 0xB4, 0x2C, 0x00, 0x00
    .byte 0x01, 0x20, 0x30, 0xBC, 0x02, 0xBC, 0x08, 0x47
    thumb_func_start save_805C8A4
save_805C8A4:
    push {r4, r5, r6, lr}
    ldr r5, _0805C8E8 @ =0x02032B80
    ldr r6, _0805C8EC @ =0x08000E6D
    ldr r0, _0805C8F0 @ =0x030023DC
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    bne _0805C8F4
    bl sub_805DA18
    cmp r0, #0x00
    bne _0805C8DA
    bl sub_805E42C
    bl sub_805D30C
    bl sub_805DCF4
    bl sub_805DD08
    bl sub_805DD40
    bl sub_805DD74
    bl sub_805DD88
    bl sub_805DA68
_0805C8DA:
    bl sub_805E58C
    cmp r0, #0x00
    bne _0805C948
    bl sub_805E5E8
    b _0805C948
_0805C8E8: .4byte 0x02032B80
_0805C8EC: .4byte title_main
_0805C8F0: .4byte 0x030023DC
_0805C8F4:
    bl sub_805DDBC
    bl sub_805E42C
    bl sub_805D30C
    bl sub_805DCF4
    bl sub_805DD08
    bl sub_805DD40
    bl sub_805DD74
    bl sub_805DD88
    adds r3, r5, #0x0
    movs r4, #0xBF
    lsls r4, r4, #0x04
    movs r1, #0x00
    movs r2, #0x00
_0805C91E:
    ldrb r0, [r3, #0x00]
    adds r0, r1, r0
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    adds r3, #0x01
    adds r0, r2, #0x1
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    cmp r2, r4
    blt _0805C91E
    ldr r2, _0805C968 @ =0x00002CB4
    adds r0, r2, #0x0
    eors r1, r0
    ldr r2, _0805C96C @ =0x00000BF2
    adds r0, r5, r2
    strh r1, [r0, #0x00]
    bl sub_805E5E8
    movs r0, #0x01
    bl sub_80152F8
_0805C948:
    ldr r0, _0805C970 @ =0x04000130
    ldrh r0, [r0, #0x00]
    movs r1, #0x00
    cmp r0, #0xF5
    bne _0805C954
    movs r1, #0x01
_0805C954:
    cmp r1, #0x00
    beq _0805C994
    ldr r0, _0805C974 @ =0x030023DC
    ldrb r0, [r0, #0x00]
    cmp r0, #0x00
    beq _0805C978
    movs r0, #0x01
    bl sub_80152B0
    b _0805C97E
_0805C968: .4byte 0x00002CB4
_0805C96C: .4byte 0x00000BF2
_0805C970: .4byte 0x04000130
_0805C974: .4byte 0x030023DC
_0805C978:
    movs r0, #0x01
    bl sub_80152F8
_0805C97E:
    adds r0, r6, #0x0
    bl sub_8015330
    ldr r0, _0805C99C @ =0x080149AD
    ldr r2, _0805C9A0 @ =0x03002E20
    str r0, [r2, #0x00]
    ldrb r0, [r2, #0x08]
    adds r0, #0x01
    movs r1, #0x07
    ands r0, r1
    strb r0, [r2, #0x08]
_0805C994:
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805C99C: .4byte sub_80149AC
_0805C9A0: .4byte 0x03002E20
    thumb_func_start sub_805C9A4
sub_805C9A4:
    push {r4, r5, r6, r7, lr}
    ldr r7, _0805CA98 @ =0x02032B80
    movs r4, #0x01
    bl m4aSoundVSyncOff
    ldr r0, _0805CA9C @ =0x04000200
    ldrh r0, [r0, #0x00]
    adds r6, r0, #0x0
    movs r1, #0x80
    lsls r1, r1, #0x09
    movs r0, #0x00
    bl irq_updateMask
    ldr r1, _0805CAA0 @ =0x040000B0
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CAA4 @ =0x0000C5FF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CAA8 @ =0x00007FFF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r0, [r1, #0x0A]
    ldr r0, [r1, #0x08]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r0, #0x00
    bge _0805C9E4
_0805C9DC:
    ldr r0, [r1, #0x08]
    ands r0, r2
    cmp r0, #0x00
    bne _0805C9DC
_0805C9E4:
    ldr r1, _0805CAAC @ =0x040000BC
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CAA4 @ =0x0000C5FF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CAA8 @ =0x00007FFF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r0, [r1, #0x0A]
    ldr r0, [r1, #0x08]
    movs r2, #0x80
    lsls r2, r2, #0x18
    ldr r5, _0805CAB0 @ =0x02029400
    cmp r0, #0x00
    bge _0805CA0C
_0805CA04:
    ldr r0, [r1, #0x08]
    ands r0, r2
    cmp r0, #0x00
    bne _0805CA04
_0805CA0C:
    ldr r1, _0805CAB4 @ =0x040000C8
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CAA4 @ =0x0000C5FF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CAA8 @ =0x00007FFF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r0, [r1, #0x0A]
    ldr r0, [r1, #0x08]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r0, #0x00
    bge _0805CA32
_0805CA2A:
    ldr r0, [r1, #0x08]
    ands r0, r2
    cmp r0, #0x00
    bne _0805CA2A
_0805CA32:
    ldr r1, _0805CAB8 @ =0x040000D4
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CAA4 @ =0x0000C5FF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CAA8 @ =0x00007FFF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r0, [r1, #0x0A]
    ldr r0, [r1, #0x08]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r0, #0x00
    bge _0805CA58
_0805CA50:
    ldr r0, [r1, #0x08]
    ands r0, r2
    cmp r0, #0x00
    bne _0805CA50
_0805CA58:
    adds r1, r5, #0x0
    ldr r2, _0805CABC @ =0x000005FA
    adds r0, r7, #0x0
    bl CpuSet
    movs r0, #0x10
    adds r1, r7, #0x0
    bl sub_805EB04
    cmp r0, #0x00
    bne _0805CA70
    movs r4, #0x00
_0805CA70:
    movs r0, #0x11
    adds r1, r5, #0x0
    bl sub_805EB04
    cmp r0, #0x00
    bne _0805CA7E
    movs r4, #0x00
_0805CA7E:
    bl main_waitVBlankFlag
    movs r0, #0x02
    adds r1, r6, #0x0
    bl irq_updateMask
    bl m4aSoundVSyncOn
    adds r0, r4, #0x0
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805CA98: .4byte 0x02032B80
_0805CA9C: .4byte 0x04000200
_0805CAA0: .4byte 0x040000B0
_0805CAA4: .4byte 0x0000C5FF
_0805CAA8: .4byte 0x00007FFF
_0805CAAC: .4byte 0x040000BC
_0805CAB0: .4byte 0x02029400
_0805CAB4: .4byte 0x040000C8
_0805CAB8: .4byte 0x040000D4
_0805CABC: .4byte 0x000005FA
    thumb_func_start sub_805CAC0
sub_805CAC0:
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    ldr r5, _0805CC24 @ =0x02020400
    movs r7, #0x01
    ldr r4, _0805CC28 @ =0x0000FFFF
    adds r6, r5, #0x0
    adds r6, #0x08
    lsrs r0, r0, #0x18
    movs r1, #0x00
    cmp r0, #0x09
    bhi _0805CADC
    adds r4, r0, #0x0
    adds r4, #0x20
    movs r1, #0x01
_0805CADC:
    cmp r1, #0x00
    bne _0805CAFA
    subs r0, #0x0A
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    cmp r0, #0x01
    bhi _0805CAF0
    adds r4, r0, #0x0
    adds r4, #0x40
    movs r1, #0x01
_0805CAF0:
    cmp r1, #0x00
    bne _0805CAFA
    cmp r0, #0x02
    bne _0805CAFA
    movs r4, #0x80
_0805CAFA:
    lsls r4, r4, #0x10
    lsrs r0, r4, #0x10
    bl sub_805E8B4
    strh r0, [r5, #0x04]
    movs r0, #0x09
    strh r0, [r6, #0x0A]
    adds r1, r5, #0x0
    movs r2, #0x00
    movs r3, #0x00
_0805CB0E:
    ldrb r0, [r1, #0x00]
    adds r0, r2, r0
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    adds r1, #0x01
    adds r0, r3, #0x1
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    cmp r3, #0x1E
    blt _0805CB0E
    ldr r1, _0805CC2C @ =0x00002CB4
    adds r0, r1, #0x0
    eors r2, r0
    strh r2, [r6, #0x1E]
    adds r1, r5, #0x0
    movs r2, #0x00
    movs r3, #0x00
_0805CB30:
    ldrb r0, [r1, #0x00]
    adds r0, r2, r0
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    adds r1, #0x01
    adds r0, r3, #0x1
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    cmp r3, #0x02
    blt _0805CB30
    ldr r1, _0805CC2C @ =0x00002CB4
    adds r0, r1, #0x0
    eors r2, r0
    ldr r1, _0805CC30 @ =0x00000FFE
    adds r0, r5, r1
    strh r2, [r0, #0x00]
    bl m4aSoundVSyncOff
    ldr r0, _0805CC34 @ =0x04000200
    ldrh r0, [r0, #0x00]
    adds r6, r0, #0x0
    movs r1, #0x80
    lsls r1, r1, #0x09
    movs r0, #0x00
    bl irq_updateMask
    ldr r1, _0805CC38 @ =0x040000B0
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CC3C @ =0x0000C5FF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CC40 @ =0x00007FFF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r0, [r1, #0x0A]
    ldr r0, [r1, #0x08]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r0, #0x00
    bge _0805CB8A
_0805CB82:
    ldr r0, [r1, #0x08]
    ands r0, r2
    cmp r0, #0x00
    bne _0805CB82
_0805CB8A:
    ldr r1, _0805CC44 @ =0x040000BC
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CC3C @ =0x0000C5FF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CC40 @ =0x00007FFF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r0, [r1, #0x0A]
    ldr r0, [r1, #0x08]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r0, #0x00
    bge _0805CBB0
_0805CBA8:
    ldr r0, [r1, #0x08]
    ands r0, r2
    cmp r0, #0x00
    bne _0805CBA8
_0805CBB0:
    ldr r1, _0805CC48 @ =0x040000C8
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CC3C @ =0x0000C5FF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CC40 @ =0x00007FFF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r0, [r1, #0x0A]
    ldr r0, [r1, #0x08]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r0, #0x00
    bge _0805CBD6
_0805CBCE:
    ldr r0, [r1, #0x08]
    ands r0, r2
    cmp r0, #0x00
    bne _0805CBCE
_0805CBD6:
    ldr r1, _0805CC4C @ =0x040000D4
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CC3C @ =0x0000C5FF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805CC40 @ =0x00007FFF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r0, [r1, #0x0A]
    ldr r0, [r1, #0x08]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r0, #0x00
    bge _0805CBFC
_0805CBF4:
    ldr r0, [r1, #0x08]
    ands r0, r2
    cmp r0, #0x00
    bne _0805CBF4
_0805CBFC:
    lsrs r0, r4, #0x10
    adds r1, r5, #0x0
    bl sub_805EB04
    cmp r0, #0x00
    bne _0805CC0A
    movs r7, #0x00
_0805CC0A:
    bl main_waitVBlankFlag
    movs r0, #0x02
    adds r1, r6, #0x0
    bl irq_updateMask
    bl m4aSoundVSyncOn
    adds r0, r7, #0x0
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805CC24: .4byte 0x02020400
_0805CC28: .4byte 0x0000FFFF
_0805CC2C: .4byte 0x00002CB4
_0805CC30: .4byte 0x00000FFE
_0805CC34: .4byte 0x04000200
_0805CC38: .4byte 0x040000B0
_0805CC3C: .4byte 0x0000C5FF
_0805CC40: .4byte 0x00007FFF
_0805CC44: .4byte 0x040000BC
_0805CC48: .4byte 0x040000C8
_0805CC4C: .4byte 0x040000D4
    .byte 0xF0, 0xB5, 0x13, 0x4E, 0x13, 0x4F, 0x3D, 0x1C, 0x24, 0x35, 0x13, 0x49, 0x70, 0x18, 0x00, 0x78
    .byte 0x00, 0x28, 0x6E, 0xD0, 0x11, 0x4A, 0xB0, 0x18, 0x01, 0x78, 0x80, 0x22, 0x12, 0x01, 0xB8, 0x18
    .byte 0x01, 0x70, 0x0F, 0x49, 0x70, 0x18, 0x00, 0x78, 0x0E, 0x4A, 0xB1, 0x18, 0x80, 0x00, 0x09, 0x78
    .byte 0x40, 0x18, 0x01, 0x30, 0xA5, 0xF7, 0xD4, 0xFF, 0xAD, 0x21, 0xC9, 0x00, 0x70, 0x18, 0x01, 0x78
    .byte 0x28, 0x1C, 0x01, 0x22, 0xEE, 0xF7, 0xE0, 0xF8, 0x00, 0x24, 0x07, 0x4A, 0xB8, 0x18, 0x24, 0xE0
    .byte 0x80, 0x2B, 0x03, 0x02, 0x20, 0x2E, 0x00, 0x03, 0x64, 0x05, 0x00, 0x00, 0x65, 0x05, 0x00, 0x00
    .byte 0x66, 0x05, 0x00, 0x00, 0x67, 0x05, 0x00, 0x00, 0x15, 0x08, 0x00, 0x00, 0xA0, 0x00, 0x22, 0x4A
    .byte 0xA9, 0x18, 0x09, 0x18, 0x0A, 0x68, 0xFE, 0x21, 0xC9, 0x00, 0x68, 0x18, 0x00, 0x78, 0x84, 0x42
    .byte 0x08, 0xDB, 0x10, 0x1C, 0x4C, 0x30, 0x00, 0x78, 0x07, 0x21, 0x01, 0x40, 0x28, 0x1C, 0x00, 0x22
    .byte 0xEE, 0xF7, 0xBA, 0xF8, 0x01, 0x34, 0x19, 0x4A, 0xA8, 0x18, 0x00, 0x78, 0x84, 0x42, 0xE5, 0xDB
    .byte 0x00, 0x24, 0xA1, 0x00, 0x14, 0x4A, 0xA8, 0x18, 0x40, 0x18, 0x02, 0x68, 0xAD, 0x21, 0xC9, 0x00
    .byte 0x70, 0x18, 0x00, 0x19, 0x01, 0x78, 0x10, 0x1C, 0x4C, 0x30, 0x01, 0x70, 0xAE, 0x21, 0xC9, 0x00
    .byte 0x70, 0x18, 0x00, 0x19, 0x01, 0x78, 0x10, 0x1C, 0xC4, 0x30, 0x01, 0x70, 0xAF, 0x21, 0xC9, 0x00
    .byte 0x70, 0x18, 0x00, 0x19, 0x00, 0x78, 0x40, 0x00, 0x11, 0x1C, 0xBA, 0x31, 0x08, 0x80, 0x09, 0x88
    .byte 0x49, 0x08, 0x09, 0x06, 0x09, 0x0E, 0x28, 0x1C, 0xEE, 0xF7, 0xD6, 0xF8, 0x01, 0x34, 0x07, 0x2C
    .byte 0xD7, 0xDD, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0xF4, 0x07, 0x00, 0x00, 0xF1, 0x07, 0x00, 0x00
    thumb_func_start sub_805CD50
sub_805CD50:
    push {r4, r5, r6, r7, lr}
    ldr r7, _0805CE18 @ =0x02032B80
    ldr r5, _0805CE1C @ =0x03002E20
    bl sub_8002C24
    adds r4, r0, #0x0
    movs r0, #0x03
    ands r4, r0
    movs r1, #0x80
    lsls r1, r1, #0x04
    adds r0, r5, r1
    ldrb r1, [r0, #0x00]
    ldr r2, _0805CE20 @ =0x00000565
    adds r0, r7, r2
    strb r1, [r0, #0x00]
    bl sub_8002C24
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x1A
    ldr r3, _0805CE24 @ =0x00000566
    adds r1, r7, r3
    strb r0, [r1, #0x00]
    ldr r1, _0805CE28 @ =0x00000567
    adds r0, r7, r1
    strb r4, [r0, #0x00]
    ldr r2, _0805CE2C @ =0x00000838
    adds r0, r5, r2
    ldr r6, [r0, #0x00]
    lsls r4, r4, #0x02
    adds r4, r4, r7
    adds r0, r6, #0x0
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r0, r0, #0x01
    adds r3, #0x1C
    adds r1, r4, r3
    strb r0, [r1, #0x00]
    adds r0, r6, #0x0
    bl sub_803DAC4
    movs r2, #0xB0
    lsls r2, r2, #0x03
    adds r1, r4, r2
    strh r0, [r1, #0x00]
    movs r3, #0xBC
    lsls r3, r3, #0x01
    adds r0, r6, r3
    ldrh r0, [r0, #0x00]
    ldr r1, _0805CE30 @ =0x00000583
    adds r4, r4, r1
    strb r0, [r4, #0x00]
    movs r3, #0x00
    movs r0, #0xAD
    lsls r0, r0, #0x03
    adds r2, r7, r0
    ldr r1, _0805CE34 @ =0x00000818
    adds r5, r5, r1
    movs r0, #0x07
    mov r12, r0
    movs r1, #0xAF
    lsls r1, r1, #0x03
    adds r4, r7, r1
_0805CDCC:
    ldm r5!, {r6}
    adds r0, r6, #0x0
    adds r0, #0x4C
    ldrb r1, [r0, #0x00]
    mov r0, r12
    ands r0, r1
    strb r0, [r2, #0x00]
    adds r0, r6, #0x0
    adds r0, #0xC4
    ldrb r0, [r0, #0x00]
    strb r0, [r2, #0x08]
    adds r1, r4, r3
    adds r0, r6, #0x0
    adds r0, #0xBA
    ldrh r0, [r0, #0x00]
    lsrs r0, r0, #0x01
    strb r0, [r1, #0x00]
    adds r2, #0x01
    adds r3, #0x01
    cmp r3, #0x07
    ble _0805CDCC
    ldr r2, _0805CE38 @ =0x00000564
    adds r1, r7, r2
    movs r0, #0x01
    strb r0, [r1, #0x00]
    movs r3, #0xBF
    lsls r3, r3, #0x04
    adds r2, r7, r3
    ldrh r1, [r2, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x07
    adds r0, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805CE18: .4byte 0x02032B80
_0805CE1C: .4byte 0x03002E20
_0805CE20: .4byte 0x00000565
_0805CE24: .4byte 0x00000566
_0805CE28: .4byte 0x00000567
_0805CE2C: .4byte 0x00000838
_0805CE30: .4byte 0x00000583
_0805CE34: .4byte 0x00000818
_0805CE38: .4byte 0x00000564
    thumb_func_start sub_805CE3C
sub_805CE3C:
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    lsrs r6, r0, #0x18
    cmp r6, #0x1C
    bne _0805CE88
    bl sub_805DCC8
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    cmp r0, #0x00
    blt _0805CECE
    ldr r4, _0805CE80 @ =0x02032B30
    lsls r5, r0, #0x18
    lsrs r1, r5, #0x18
    adds r0, r4, #0x0
    bl sub_805C680
    cmp r0, #0x00
    bne _0805CECE
    ldrh r0, [r4, #0x02]
    cmp r0, #0x00
    beq _0805CECE
    ldrb r1, [r4, #0x00]
    movs r0, #0x20
    ands r0, r1
    movs r1, #0x01
    cmp r0, #0x00
    beq _0805CE76
    movs r1, #0x00
_0805CE76:
    cmp r1, #0x00
    beq _0805CECE
    asrs r0, r5, #0x18
    b _0805CED2
    .byte 0x00, 0x00
_0805CE80: .4byte 0x02032B30
_0805CE84:
    asrs r0, r2, #0x18
    b _0805CED2
_0805CE88:
    movs r7, #0x00
    ldr r4, _0805CED8 @ =0x02032B30
    movs r5, #0x00
_0805CE8E:
    lsrs r1, r5, #0x18
    adds r0, r4, #0x0
    bl sub_805C680
    adds r2, r5, #0x0
    cmp r0, #0x00
    bne _0805CEC2
    ldrh r0, [r4, #0x02]
    cmp r0, #0x00
    beq _0805CEC2
    ldrb r1, [r4, #0x00]
    movs r0, #0x20
    ands r0, r1
    cmp r0, #0x00
    bne _0805CEC2
    movs r0, #0x01
    negs r0, r0
    movs r1, #0x01
    cmp r6, r0
    beq _0805CEBE
    ldrb r0, [r4, #0x09]
    cmp r0, r6
    beq _0805CEBE
    movs r1, #0x00
_0805CEBE:
    cmp r1, #0x00
    bne _0805CE84
_0805CEC2:
    movs r0, #0x80
    lsls r0, r0, #0x11
    adds r5, r5, r0
    adds r7, #0x01
    cmp r7, #0x09
    ble _0805CE8E
_0805CECE:
    movs r0, #0x01
    negs r0, r0
_0805CED2:
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
_0805CED8: .4byte 0x02032B30
    .byte 0x70, 0xB5, 0x0C, 0x48, 0x40, 0x7C, 0xFF, 0xF7, 0xAB, 0xFF, 0x00, 0x06, 0x02, 0x0E, 0x00, 0x16
    .byte 0x01, 0x21, 0x49, 0x42, 0x88, 0x42, 0x1E, 0xD1, 0x00, 0x25, 0x07, 0x4E, 0x2C, 0x06, 0x21, 0x0E
    .byte 0x30, 0x1C, 0xFF, 0xF7, 0xBF, 0xFB, 0x00, 0x28, 0x02, 0xD1, 0x70, 0x88, 0x00, 0x28, 0x05, 0xD1
    .byte 0x20, 0x0E, 0x08, 0xE0, 0x00, 0x04, 0x02, 0x02, 0x30, 0x2B, 0x03, 0x02, 0x01, 0x35, 0x09, 0x2D
    .byte 0xEC, 0xDD, 0x01, 0x20, 0x40, 0x42, 0x00, 0x06, 0x02, 0x0E, 0x00, 0x16, 0x01, 0x21, 0x49, 0x42
    .byte 0x88, 0x42, 0x00, 0xD1, 0x00, 0x22, 0x08, 0x48, 0x40, 0x89, 0x00, 0x28, 0x08, 0xD0, 0x07, 0x48
    .byte 0xBF, 0x21, 0x09, 0x01, 0x40, 0x18, 0x01, 0x21, 0x91, 0x40, 0x02, 0x88, 0x11, 0x43, 0x01, 0x80
    .byte 0x70, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x00, 0x04, 0x02, 0x02, 0x80, 0x2B, 0x03, 0x02
    .byte 0x70, 0xB5, 0x0A, 0x25, 0x06, 0x4E, 0x2C, 0x06, 0x21, 0x0E, 0x30, 0x1C, 0xFF, 0xF7, 0x8A, 0xFB
    .byte 0x00, 0x28, 0x02, 0xD1, 0x70, 0x88, 0x00, 0x28, 0x04, 0xD1, 0x20, 0x0E, 0x07, 0xE0, 0x00, 0x00
    .byte 0x30, 0x2B, 0x03, 0x02, 0x01, 0x35, 0x0B, 0x2D, 0xED, 0xDD, 0x01, 0x20, 0x40, 0x42, 0x00, 0x06
    .byte 0x02, 0x0E, 0x00, 0x16, 0x01, 0x21, 0x49, 0x42, 0x88, 0x42, 0x00, 0xD1, 0x0A, 0x22, 0x08, 0x48
    .byte 0x40, 0x89, 0x00, 0x28, 0x08, 0xD0, 0x07, 0x48, 0xBF, 0x21, 0x09, 0x01, 0x40, 0x18, 0x01, 0x21
    .byte 0x91, 0x40, 0x02, 0x88, 0x11, 0x43, 0x01, 0x80, 0x70, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
    .byte 0x00, 0x04, 0x02, 0x02, 0x80, 0x2B, 0x03, 0x02
    thumb_func_start sub_805CFC4
sub_805CFC4:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    add sp, #-0x020
    ldr r0, _0805D014 @ =0x03002E20
    ldr r1, _0805D018 @ =0x00000801
    adds r0, r0, r1
    ldrb r5, [r0, #0x00]
    ldr r0, _0805D01C @ =0x02020400
    adds r0, #0x08
    ldrb r4, [r0, #0x09]
    ldrh r7, [r0, #0x02]
    adds r0, r5, #0x0
    bl sub_805CE3C
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    mov r8, r0
    lsls r1, r0, #0x18
    asrs r0, r1, #0x18
    movs r6, #0x01
    negs r6, r6
    cmp r0, r6
    beq _0805D056
    movs r0, #0x00
    mov r9, r0
    cmp r7, #0x00
    beq _0805D03C
    cmp r4, r5
    bne _0805D03C
    lsrs r1, r1, #0x18
    mov r0, sp
    bl sub_805C680
    cmp r0, #0x00
    beq _0805D024
    adds r0, r6, #0x0
    b _0805D02A
    .byte 0x00, 0x00
_0805D014: .4byte 0x03002E20
_0805D018: .4byte 0x00000801
_0805D01C: .4byte 0x02020400
_0805D020:
    lsrs r0, r5, #0x18
    b _0805D080
_0805D024:
    mov r0, sp
    movs r1, #0x02
    ldsh r0, [r0, r1]
_0805D02A:
    lsls r0, r0, #0x10
    asrs r0, r0, #0x10
    cmp r0, r7
    bge _0805D036
    movs r0, #0x01
    mov r9, r0
_0805D036:
    mov r1, r9
    cmp r1, #0x00
    beq _0805D056
_0805D03C:
    ldr r6, _0805D0C0 @ =0x02020400
    mov r4, r8
    adds r4, #0x20
    adds r0, r4, #0x0
    adds r1, r6, #0x0
    bl sub_805EF10
    cmp r0, #0x00
    bne _0805D056
    adds r0, r4, #0x0
    adds r1, r6, #0x0
    bl sub_805EF88
_0805D056:
    adds r7, r5, #0x0
    movs r4, #0x0A
    ldr r6, _0805D0C4 @ =0x02032B30
_0805D05C:
    lsls r5, r4, #0x18
    lsrs r1, r5, #0x18
    adds r0, r6, #0x0
    bl sub_805C680
    cmp r0, #0x00
    bne _0805D076
    ldrh r0, [r6, #0x02]
    cmp r0, #0x00
    beq _0805D076
    ldrb r0, [r6, #0x09]
    cmp r0, r7
    beq _0805D020
_0805D076:
    adds r4, #0x01
    cmp r4, #0x0B
    ble _0805D05C
    movs r0, #0x01
    negs r0, r0
_0805D080:
    lsls r2, r0, #0x18
    asrs r1, r2, #0x18
    movs r0, #0x01
    negs r0, r0
    cmp r1, r0
    beq _0805D0B2
    ldr r0, _0805D0C0 @ =0x02020400
    movs r1, #0x80
    lsls r1, r1, #0x05
    adds r5, r0, r1
    lsrs r0, r2, #0x08
    movs r1, #0x80
    lsls r1, r1, #0x0E
    adds r0, r0, r1
    lsrs r4, r0, #0x10
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl sub_805EF10
    cmp r0, #0x00
    bne _0805D0B2
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl sub_805EF88
_0805D0B2:
    add sp, #0x020
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0805D0C0: .4byte 0x02020400
_0805D0C4: .4byte 0x02032B30
    .byte 0x30, 0xB5, 0x88, 0xB0, 0x00, 0x06, 0xA0, 0x21, 0x09, 0x05, 0x44, 0x18, 0x21, 0x0E, 0x68, 0x46
    .byte 0xFF, 0xF7, 0xD2, 0xFA, 0x00, 0x28, 0x07, 0xD1, 0x68, 0x46, 0x40, 0x88, 0x00, 0x21, 0x00, 0x28
    .byte 0x00, 0xD1, 0x01, 0x21, 0x00, 0x29, 0x02, 0xD0, 0x01, 0x20, 0x40, 0x42, 0x00, 0xE0, 0x20, 0x0E
    .byte 0x00, 0x06, 0x0B, 0x49, 0x80, 0x22, 0x52, 0x01, 0x8D, 0x18, 0x00, 0x0A, 0x80, 0x21, 0x89, 0x03
    .byte 0x40, 0x18, 0x04, 0x0C, 0x20, 0x1C, 0x29, 0x1C, 0x01, 0xF0, 0xFE, 0xFE, 0x00, 0x28, 0x03, 0xD1
    .byte 0x20, 0x1C, 0x29, 0x1C, 0x01, 0xF0, 0x34, 0xFF, 0x08, 0xB0, 0x30, 0xBC, 0x02, 0xBC, 0x08, 0x47
    .byte 0x00, 0x04, 0x02, 0x02
    thumb_func_start sub_805D12C
sub_805D12C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x028
    ldr r7, _0805D1D0 @ =0x02032B80
    movs r0, #0x01
    str r0, [sp, #0x020]
    movs r1, #0xBF
    lsls r1, r1, #0x04
    adds r0, r7, r1
    ldrh r1, [r0, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x08
    ands r0, r1
    cmp r0, #0x00
    bne _0805D152
    b _0805D2F4
_0805D152:
    ldr r0, _0805D1D4 @ =0x08102414
    ldr r0, [r0, #0x00]
    ldrh r0, [r0, #0x04]
    str r0, [sp, #0x024]
    movs r0, #0x1E
    ldr r2, [sp, #0x024]
    cmp r2, #0x00
    beq _0805D16C
    ldr r0, _0805D1D8 @ =0x030066E0
    movs r1, #0x03
    bl m4aMPlayFadeOutTemporarily
    movs r0, #0x40
_0805D16C:
    cmp r0, #0x00
    beq _0805D17C
    adds r4, r0, #0x0
_0805D172:
    bl main_frameProc
    subs r4, #0x01
    cmp r4, #0x00
    bne _0805D172
_0805D17C:
    movs r1, #0xBF
    lsls r1, r1, #0x04
    adds r0, r7, r1
    ldrh r0, [r0, #0x00]
    ldr r1, _0805D1DC @ =0xFFFF3FFF
    ands r0, r1
    cmp r0, #0x00
    bne _0805D18E
    b _0805D29E
_0805D18E:
    movs r6, #0x00
    movs r2, #0xBF
    lsls r2, r2, #0x04
    adds r2, r2, r7
    mov r8, r2
    movs r0, #0x01
    mov r9, r0
    movs r1, #0x01
    negs r1, r1
    mov r10, r1
_0805D1A2:
    mov r2, r8
    ldrh r0, [r2, #0x00]
    asrs r0, r6
    mov r1, r9
    ands r0, r1
    cmp r0, #0x00
    beq _0805D298
    movs r5, #0x00
    lsls r4, r6, #0x18
    cmp r6, #0x09
    bgt _0805D20C
    cmp r6, #0x0B
    beq _0805D206
    lsrs r1, r4, #0x18
    mov r0, sp
    bl sub_805C680
    cmp r0, #0x00
    beq _0805D1E0
    movs r0, #0x01
    negs r0, r0
    b _0805D1E4
    .byte 0x00, 0x00
_0805D1D0: .4byte 0x02032B80
_0805D1D4: .4byte 0x08102414
_0805D1D8: .4byte 0x030066E0
_0805D1DC: .4byte 0xFFFF3FFF
_0805D1E0:
    mov r0, sp
    ldrb r0, [r0, #0x09]
_0805D1E4:
    lsls r1, r0, #0x18
    asrs r0, r1, #0x18
    cmp r0, r10
    ble _0805D20C
    lsrs r0, r1, #0x18
    bl track_getTrackIndex
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    lsls r1, r0, #0x02
    adds r1, r1, r0
    lsls r1, r1, #0x02
    movs r2, #0xB2
    lsls r2, r2, #0x03
    adds r1, r1, r2
    adds r5, r7, r1
    b _0805D20C
_0805D206:
    movs r0, #0xE4
    lsls r0, r0, #0x03
    adds r5, r7, r0
_0805D20C:
    lsrs r4, r4, #0x18
    adds r0, r4, #0x0
    bl sub_805CAC0
    cmp r0, #0x00
    beq _0805D278
    cmp r5, #0x00
    beq _0805D224
    ldrb r1, [r5, #0x0B]
    movs r0, #0xFE
    ands r0, r1
    strb r0, [r5, #0x0B]
_0805D224:
    cmp r6, #0x09
    bgt _0805D26A
    cmp r6, #0x0B
    beq _0805D264
    mov r0, sp
    adds r1, r4, #0x0
    bl sub_805C680
    cmp r0, #0x00
    beq _0805D23E
    movs r0, #0x01
    negs r0, r0
    b _0805D242
_0805D23E:
    mov r0, sp
    ldrb r0, [r0, #0x09]
_0805D242:
    lsls r1, r0, #0x18
    asrs r0, r1, #0x18
    cmp r0, r10
    ble _0805D26A
    lsrs r0, r1, #0x18
    bl track_getTrackIndex
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    lsls r1, r0, #0x02
    adds r1, r1, r0
    lsls r1, r1, #0x02
    movs r2, #0xB2
    lsls r2, r2, #0x03
    adds r1, r1, r2
    adds r5, r7, r1
    b _0805D26A
_0805D264:
    movs r0, #0xE4
    lsls r0, r0, #0x03
    adds r5, r7, r0
_0805D26A:
    cmp r5, #0x00
    beq _0805D27C
    ldrb r1, [r5, #0x0B]
    movs r0, #0xFE
    ands r0, r1
    strb r0, [r5, #0x0B]
    b _0805D27C
_0805D278:
    movs r1, #0x00
    str r1, [sp, #0x020]
_0805D27C:
    mov r1, r9
    lsls r1, r6
    mov r2, r8
    ldrh r0, [r2, #0x00]
    bics r0, r1
    strh r0, [r2, #0x00]
    ldr r0, _0805D2CC @ =0x00000BE8
    adds r2, r7, r0
    adds r0, r6, #0x2
    mov r1, r9
    lsls r1, r0
    ldr r0, [r2, #0x00]
    bics r0, r1
    str r0, [r2, #0x00]
_0805D298:
    adds r6, #0x01
    cmp r6, #0x0C
    ble _0805D1A2
_0805D29E:
    movs r1, #0xBF
    lsls r1, r1, #0x04
    adds r4, r7, r1
    ldrh r1, [r4, #0x00]
    movs r0, #0x80
    lsls r0, r0, #0x07
    ands r0, r1
    cmp r0, #0x00
    beq _0805D2BE
    bl sub_805C9A4
    str r0, [sp, #0x020]
    ldrh r1, [r4, #0x00]
    ldr r0, _0805D2D0 @ =0x0000BFFF
    ands r0, r1
    strh r0, [r4, #0x00]
_0805D2BE:
    ldr r2, [sp, #0x020]
    cmp r2, #0x00
    beq _0805D2D4
    movs r0, #0xC4
    bl m4aSongNumStart
    b _0805D2DA
_0805D2CC: .4byte 0x00000BE8
_0805D2D0: .4byte 0x0000BFFF
_0805D2D4:
    movs r0, #0x91
    bl m4aSongNumStart
_0805D2DA:
    ldr r0, [sp, #0x024]
    cmp r0, #0x00
    beq _0805D2F4
    movs r4, #0x1D
_0805D2E2:
    bl main_frameProc
    subs r4, #0x01
    cmp r4, #0x00
    bge _0805D2E2
    ldr r0, _0805D308 @ =0x030066E0
    movs r1, #0x04
    bl m4aMPlayFadeIn
_0805D2F4:
    ldr r0, [sp, #0x020]
    add sp, #0x028
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805D308: .4byte 0x030066E0
    thumb_func_start sub_805D30C
sub_805D30C:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x054
    mov r0, sp
    bl sub_805DF40
    add r0, sp, #0x010
    movs r1, #0x00
    strh r1, [r0, #0x00]
    ldr r2, _0805D420 @ =0x010005FA
    ldr r1, _0805D424 @ =0x02032B80
    bl CpuSet
    mov r0, sp
    bl sub_805DF70
    movs r1, #0x00
    ldr r2, _0805D424 @ =0x02032B80
    adds r2, #0x46
    ldr r7, _0805D424 @ =0x02032B80
    adds r7, #0x55
    ldr r0, _0805D424 @ =0x02032B80
    adds r0, #0x28
    mov r8, r0
    ldr r3, _0805D424 @ =0x02032B80
    adds r3, #0x37
    mov r9, r3
    movs r6, #0x08
_0805D34A:
    movs r3, #0x00
    lsls r0, r1, #0x01
    adds r5, r1, #0x1
    adds r4, r0, r1
_0805D352:
    adds r1, r3, r4
    adds r0, r2, r1
    strb r6, [r0, #0x00]
    adds r1, r7, r1
    strb r6, [r1, #0x00]
    adds r0, r3, #0x1
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    cmp r3, #0x02
    bls _0805D352
    lsls r0, r5, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #0x04
    bls _0805D34A
    movs r1, #0x00
    mov r10, r8
    movs r4, #0xFF
    mov r8, r4
    mov r6, r9
_0805D378:
    movs r3, #0x00
    lsls r0, r1, #0x01
    adds r5, r1, #0x1
    adds r4, r0, r1
_0805D380:
    adds r1, r3, r4
    mov r7, r10
    adds r2, r7, r1
    ldrb r0, [r2, #0x00]
    mov r7, r8
    orrs r0, r7
    strb r0, [r2, #0x00]
    adds r1, r6, r1
    ldrb r0, [r1, #0x00]
    mov r2, r8
    orrs r0, r2
    strb r0, [r1, #0x00]
    adds r0, r3, #0x1
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    cmp r3, #0x02
    bls _0805D380
    lsls r0, r5, #0x18
    lsrs r1, r0, #0x18
    cmp r1, #0x04
    bls _0805D378
    movs r3, #0x00
    str r3, [sp, #0x034]
_0805D3AE:
    movs r4, #0x00
    mov r9, r4
    ldr r5, [sp, #0x034]
    lsls r5, r5, #0x02
    str r5, [sp, #0x048]
_0805D3B8:
    ldr r0, [sp, #0x048]
    add r0, r9
    bl track_getMKSCTrack
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    ldr r1, _0805D428 @ =0x080E7FEC
    lsls r0, r3, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    ldr r2, [r0, #0x20]
    cmp r2, #0x00
    beq _0805D4AC
    mov r8, r2
    ldr r7, [sp, #0x034]
    lsls r5, r7, #0x07
    adds r1, r5, #0x0
    adds r1, #0x64
    ldr r0, _0805D424 @ =0x02032B80
    adds r1, r0, r1
    mov r2, r9
    lsls r4, r2, #0x05
    adds r1, r1, r4
    mov r7, r8
    ldrb r2, [r7, #0x00]
    movs r0, #0x10
    orrs r0, r2
    strb r0, [r1, #0x14]
    ldrh r0, [r7, #0x02]
    strh r0, [r1, #0x16]
    adds r0, r3, #0x0
    bl sub_805CE3C
    lsls r0, r0, #0x18
    lsrs r7, r0, #0x18
    ldr r3, _0805D42C @ =0x0000FFFF
    movs r0, #0x00
    mov r10, r0
    lsls r1, r7, #0x18
    adds r6, r5, #0x0
    cmp r1, #0x00
    blt _0805D43A
    lsrs r1, r1, #0x18
    add r0, sp, #0x014
    bl sub_805C680
    cmp r0, #0x00
    beq _0805D430
    movs r0, #0x01
    negs r0, r0
    b _0805D436
    .byte 0x00, 0x00
_0805D420: .4byte 0x010005FA
_0805D424: .4byte 0x02032B80
_0805D428: .4byte 0x080E7FEC
_0805D42C: .4byte 0x0000FFFF
_0805D430:
    add r0, sp, #0x014
    movs r1, #0x02
    ldsh r0, [r0, r1]
_0805D436:
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
_0805D43A:
    movs r5, #0x00
    adds r0, r6, #0x0
    adds r0, #0x64
    ldr r2, _0805D474 @ =0x02032B80
    adds r0, r2, r0
    adds r0, r0, r4
    str r0, [sp, #0x038]
    lsls r6, r7, #0x18
_0805D44A:
    lsls r0, r5, #0x02
    ldr r7, [sp, #0x038]
    adds r4, r7, r0
    mov r1, r10
    adds r0, r5, r1
    lsls r0, r0, #0x02
    add r0, r8
    ldrh r0, [r0, #0x06]
    cmp r3, r0
    bls _0805D478
    subs r1, r5, r1
    lsls r1, r1, #0x02
    add r1, r8
    ldrb r2, [r1, #0x04]
    movs r0, #0x10
    orrs r0, r2
    strb r0, [r4, #0x00]
    ldrh r0, [r1, #0x06]
    strh r0, [r4, #0x02]
    b _0805D4A2
    .byte 0x00, 0x00
_0805D474: .4byte 0x02032B80
_0805D478:
    add r0, sp, #0x014
    lsrs r1, r6, #0x18
    str r3, [sp, #0x04C]
    bl sub_805C680
    ldr r3, [sp, #0x04C]
    cmp r0, #0x00
    beq _0805D48E
    movs r0, #0x01
    negs r0, r0
    b _0805D492
_0805D48E:
    add r0, sp, #0x014
    ldrb r0, [r0, #0x00]
_0805D492:
    strb r0, [r4, #0x00]
    strh r3, [r4, #0x02]
    mov r0, r10
    adds r0, #0x01
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    mov r10, r0
    ldr r3, _0805D594 @ =0x0000FFFF
_0805D4A2:
    adds r0, r5, #0x1
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    cmp r5, #0x04
    bls _0805D44A
_0805D4AC:
    mov r0, r9
    adds r0, #0x01
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    mov r9, r0
    cmp r0, #0x03
    bhi _0805D4BC
    b _0805D3B8
_0805D4BC:
    ldr r0, [sp, #0x034]
    adds r0, #0x01
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    str r0, [sp, #0x034]
    cmp r0, #0x04
    bhi _0805D4CC
    b _0805D3AE
_0805D4CC:
    movs r2, #0x00
    str r2, [sp, #0x034]
_0805D4D0:
    movs r3, #0x00
    mov r9, r3
    ldr r4, [sp, #0x034]
    lsls r4, r4, #0x02
    str r4, [sp, #0x048]
    ldr r5, [sp, #0x034]
    lsls r6, r5, #0x07
    adds r5, #0x01
    str r5, [sp, #0x044]
    movs r7, #0xB9
    lsls r7, r7, #0x02
    adds r0, r6, r7
    ldr r1, _0805D598 @ =0x02032B80
    adds r0, r1, r0
    str r0, [sp, #0x03C]
    str r0, [sp, #0x040]
_0805D4F0:
    ldr r0, [sp, #0x048]
    add r0, r9
    bl track_getRetroTrack
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    ldr r1, _0805D59C @ =0x080E7FEC
    lsls r0, r2, #0x02
    adds r0, r0, r1
    ldr r0, [r0, #0x00]
    ldr r0, [r0, #0x20]
    cmp r0, #0x00
    bne _0805D5A4
    mov r2, r9
    lsls r4, r2, #0x05
    ldr r3, [sp, #0x03C]
    adds r2, r3, r4
    ldr r1, [sp, #0x034]
    adds r1, #0x03
    mov r0, r9
    adds r0, #0x0B
    muls r0, r1
    movs r1, #0x07
    ands r0, r1
    movs r5, #0x10
    orrs r0, r5
    strb r0, [r2, #0x14]
    movs r0, #0x0B
    ldr r7, [sp, #0x034]
    adds r1, r7, #0x0
    muls r1, r0
    movs r0, #0xC0
    lsls r0, r0, #0x06
    adds r1, r1, r0
    mov r3, r9
    lsls r0, r3, #0x01
    add r0, r9
    adds r1, r1, r0
    strh r1, [r2, #0x16]
    movs r5, #0x00
    movs r7, #0x01
    add r7, r9
    mov r8, r7
    adds r3, #0x07
    ldr r0, [sp, #0x034]
    lsls r2, r0, #0x01
    mov r7, r9
    lsls r1, r7, #0x02
    ldr r0, [sp, #0x040]
    adds r6, r0, r4
    ldr r0, [sp, #0x034]
    adds r0, #0x05
    muls r3, r0
    ldr r4, [sp, #0x034]
    adds r2, r2, r4
    add r1, r9
    ldr r7, _0805D5A0 @ =0xFFFF8000
    adds r0, r7, #0x0
    adds r1, r1, r0
    adds r2, r2, r1
_0805D568:
    lsls r0, r5, #0x02
    adds r4, r6, r0
    movs r0, #0x0D
    muls r0, r5
    adds r0, r3, r0
    movs r1, #0x07
    ands r0, r1
    movs r1, #0x10
    orrs r0, r1
    strb r0, [r4, #0x00]
    lsls r0, r5, #0x05
    adds r0, r0, r5
    lsls r0, r0, #0x02
    adds r0, r0, r5
    adds r0, r2, r0
    strh r0, [r4, #0x02]
    adds r0, r5, #0x1
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    cmp r5, #0x04
    bls _0805D568
    b _0805D664
_0805D594: .4byte 0x0000FFFF
_0805D598: .4byte 0x02032B80
_0805D59C: .4byte 0x080E7FEC
_0805D5A0: .4byte 0xFFFF8000
_0805D5A4:
    adds r6, r0, #0x0
    mov r3, r9
    lsls r4, r3, #0x05
    ldr r5, [sp, #0x03C]
    adds r1, r5, r4
    ldrb r0, [r6, #0x00]
    movs r7, #0x10
    orrs r0, r7
    strb r0, [r1, #0x14]
    ldrh r0, [r6, #0x02]
    strh r0, [r1, #0x16]
    adds r0, r2, #0x0
    bl sub_805CE3C
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    str r0, [sp, #0x050]
    ldr r2, _0805D5E8 @ =0x0000FFFF
    movs r3, #0x00
    lsls r1, r0, #0x18
    cmp r1, #0x00
    blt _0805D5F6
    lsrs r1, r1, #0x18
    add r0, sp, #0x014
    str r3, [sp, #0x04C]
    bl sub_805C680
    ldr r3, [sp, #0x04C]
    cmp r0, #0x00
    beq _0805D5EC
    movs r0, #0x01
    negs r0, r0
    b _0805D5F2
    .byte 0x00, 0x00
_0805D5E8: .4byte 0x0000FFFF
_0805D5EC:
    add r0, sp, #0x014
    movs r1, #0x02
    ldsh r0, [r0, r1]
_0805D5F2:
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
_0805D5F6:
    movs r5, #0x00
    movs r7, #0x01
    add r7, r9
    mov r8, r7
    ldr r0, [sp, #0x040]
    adds r0, r0, r4
    mov r10, r0
    ldr r1, [sp, #0x050]
    lsls r1, r1, #0x18
    mov r9, r1
_0805D60A:
    lsls r1, r5, #0x02
    mov r7, r10
    adds r4, r7, r1
    adds r0, r5, r3
    lsls r0, r0, #0x02
    adds r0, r0, r6
    ldrh r0, [r0, #0x06]
    cmp r2, r0
    bls _0805D62C
    adds r0, r1, r6
    ldrb r1, [r0, #0x04]
    movs r7, #0x10
    orrs r1, r7
    strb r1, [r4, #0x00]
    ldrh r0, [r0, #0x06]
    strh r0, [r4, #0x02]
    b _0805D65A
_0805D62C:
    add r0, sp, #0x014
    mov r2, r9
    lsrs r1, r2, #0x18
    str r3, [sp, #0x04C]
    bl sub_805C680
    ldr r7, [sp, #0x050]
    lsls r1, r7, #0x18
    ldr r3, [sp, #0x04C]
    cmp r0, #0x00
    beq _0805D648
    movs r0, #0x01
    negs r0, r0
    b _0805D64C
_0805D648:
    add r0, sp, #0x014
    ldrb r0, [r0, #0x00]
_0805D64C:
    strb r0, [r4, #0x00]
    asrs r0, r1, #0x18
    strh r0, [r4, #0x02]
    adds r0, r3, #0x1
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    ldr r2, _0805D718 @ =0x0000FFFF
_0805D65A:
    adds r0, r5, #0x1
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    cmp r5, #0x04
    bls _0805D60A
_0805D664:
    mov r1, r8
    lsls r0, r1, #0x18
    lsrs r0, r0, #0x18
    mov r9, r0
    cmp r0, #0x03
    bhi _0805D672
    b _0805D4F0
_0805D672:
    ldr r2, [sp, #0x044]
    lsls r0, r2, #0x18
    lsrs r0, r0, #0x18
    str r0, [sp, #0x034]
    cmp r0, #0x04
    bhi _0805D680
    b _0805D4D0
_0805D680:
    movs r1, #0x00
    ldr r3, _0805D71C @ =0x02032B80
    movs r4, #0xAE
    lsls r4, r4, #0x03
    adds r0, r3, r4
    movs r4, #0x07
_0805D68C:
    strb r1, [r0, #0x00]
    strb r1, [r0, #0x08]
    adds r0, #0x01
    subs r4, #0x01
    cmp r4, #0x00
    bge _0805D68C
    movs r1, #0x00
    ldr r5, _0805D71C @ =0x02032B80
    movs r7, #0xB0
    lsls r7, r7, #0x03
    adds r0, r5, r7
    movs r4, #0x03
_0805D6A4:
    strb r1, [r0, #0x02]
    strh r1, [r0, #0x00]
    strb r1, [r0, #0x03]
    adds r0, #0x04
    subs r4, #0x01
    cmp r4, #0x00
    bge _0805D6A4
    movs r4, #0x04
    movs r2, #0x00
    ldr r1, _0805D71C @ =0x02032B80
    ldr r3, _0805D720 @ =0x00000564
    adds r0, r1, r3
    strb r2, [r0, #0x00]
    ldr r5, _0805D724 @ =0x00000BEC
    adds r3, r1, r5
    ldrh r1, [r3, #0x00]
    movs r7, #0x80
    lsls r7, r7, #0x08
    adds r0, r7, #0x0
    orrs r0, r1
    ldr r5, _0805D728 @ =0x00007FFF
    adds r1, r5, #0x0
    orrs r0, r1
    strh r0, [r3, #0x00]
    ldr r7, _0805D71C @ =0x02032B80
    ldr r1, _0805D72C @ =0x00000BEE
    adds r0, r7, r1
    strh r2, [r0, #0x00]
    movs r0, #0x07
    strh r0, [r7, #0x08]
    movs r3, #0xBF
    lsls r3, r3, #0x04
    adds r0, r7, r3
    strh r2, [r0, #0x00]
    ldr r5, _0805D730 @ =0x00000BE8
    adds r0, r7, r5
    str r2, [r0, #0x00]
    bl sub_805E474
    ldr r1, _0805D734 @ =0x00000B9A
    adds r0, r7, r1
    strb r4, [r0, #0x00]
    ldr r2, _0805D738 @ =0x00000B9B
    adds r1, r7, r2
    movs r0, #0x03
    strb r0, [r1, #0x00]
    ldr r3, _0805D73C @ =0x00000B9C
    adds r0, r7, r3
    strb r4, [r0, #0x00]
    add sp, #0x054
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805D718: .4byte 0x0000FFFF
_0805D71C: .4byte 0x02032B80
_0805D720: .4byte 0x00000564
_0805D724: .4byte 0x00000BEC
_0805D728: .4byte 0x00007FFF
_0805D72C: .4byte 0x00000BEE
_0805D730: .4byte 0x00000BE8
_0805D734: .4byte 0x00000B9A
_0805D738: .4byte 0x00000B9B
_0805D73C: .4byte 0x00000B9C
    thumb_func_start sub_805D740
sub_805D740:
    push {r4, r5, r6, lr}
    add sp, #-0x010
    ldr r5, _0805D7E8 @ =0x02032B80
    mov r0, sp
    bl sub_805DF40
    bl sub_805F0F8
    bl sub_805D30C
    mov r0, sp
    bl sub_805DF70
    adds r1, r5, #0x0
    adds r2, r5, #0x0
    adds r2, #0x1C
    ldr r0, _0805D7EC @ =0x00000AD4
    adds r4, r5, r0
    movs r3, #0x00
    movs r0, #0x04
_0805D768:
    strb r3, [r2, #0x00]
    adds r2, #0x01
    subs r0, #0x01
    cmp r0, #0x00
    bge _0805D768
    movs r0, #0x00
    strb r0, [r4, #0x00]
    ldr r0, _0805D7F0 @ =0x00000AE5
    adds r1, r1, r0
    movs r0, #0x00
    strb r0, [r1, #0x00]
    ldr r2, _0805D7E8 @ =0x02032B80
    ldr r0, _0805D7F4 @ =0x00000AE6
    adds r1, r2, r0
    movs r0, #0x2F
    strb r0, [r1, #0x00]
    adds r6, r2, #0x0
    movs r2, #0x00
    movs r4, #0x00
_0805D78E:
    lsls r0, r2, #0x02
    adds r0, r0, r2
    lsls r0, r0, #0x02
    movs r1, #0xB2
    lsls r1, r1, #0x03
    adds r0, r0, r1
    adds r1, r6, r0
    movs r3, #0x00
    adds r0, r2, #0x1
_0805D7A0:
    strb r4, [r1, #0x00]
    adds r1, #0x01
    adds r3, #0x01
    cmp r3, #0x13
    bls _0805D7A0
    adds r2, r0, #0x0
    cmp r2, #0x17
    ble _0805D78E
    adds r1, r5, #0x0
    movs r4, #0xBF
    lsls r4, r4, #0x04
    movs r2, #0x00
    movs r3, #0x00
_0805D7BA:
    ldrb r0, [r1, #0x00]
    adds r0, r2, r0
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    adds r1, #0x01
    adds r0, r3, #0x1
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    cmp r3, r4
    blt _0805D7BA
    ldr r1, _0805D7F8 @ =0x00002CB4
    adds r0, r1, #0x0
    eors r2, r0
    ldr r1, _0805D7FC @ =0x00000BF2
    adds r0, r5, r1
    strh r2, [r0, #0x00]
    bl sub_805E5E8
    add sp, #0x010
    pop {r4, r5, r6}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805D7E8: .4byte 0x02032B80
_0805D7EC: .4byte 0x00000AD4
_0805D7F0: .4byte 0x00000AE5
_0805D7F4: .4byte 0x00000AE6
_0805D7F8: .4byte 0x00002CB4
_0805D7FC: .4byte 0x00000BF2
    .byte 0x70, 0xB5, 0x05, 0x1C, 0x15, 0x4E, 0x68, 0x00, 0x40, 0x19, 0xC0, 0x00, 0xBA, 0x21, 0x09, 0x01
    .byte 0x40, 0x18, 0x81, 0x19, 0x0B, 0x1C, 0x08, 0x33, 0x00, 0x24, 0x04, 0x22, 0x08, 0x78, 0x20, 0x18
    .byte 0x00, 0x04, 0x04, 0x0C, 0x01, 0x31, 0x01, 0x3A, 0x00, 0x2A, 0xF7, 0xDA, 0x69, 0x00, 0x0F, 0x22
    .byte 0x18, 0x78, 0x20, 0x18, 0x00, 0x04, 0x04, 0x0C, 0x01, 0x33, 0x01, 0x3A, 0x00, 0x2A, 0xF7, 0xDA
    .byte 0x00, 0x22, 0x48, 0x19, 0xC0, 0x00, 0x30, 0x18, 0x05, 0x49, 0x40, 0x18, 0x00, 0x88, 0x84, 0x42
    .byte 0x00, 0xD1, 0x01, 0x22, 0x10, 0x1C, 0x70, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x80, 0x2B, 0x03, 0x02
    .byte 0xA6, 0x0B, 0x00, 0x00
    thumb_func_start sub_805D864
sub_805D864:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r6, r1, #0x18
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    mov r8, r2
    adds r0, r5, #0x0
    bl sub_8032BC8
    ldr r7, _0805D8A0 @ =0x02032B80
    cmp r0, #0x00
    beq _0805D8A4
    adds r0, r5, #0x0
    bl track_getCup
    adds r4, r0, #0x0
    adds r0, r5, #0x0
    bl track_getCupIndex
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x11
    movs r1, #0xB9
    lsls r1, r1, #0x02
    adds r4, r4, r1
    b _0805D8B8
    .byte 0x00, 0x00
_0805D8A0: .4byte 0x02032B80
_0805D8A4:
    adds r0, r5, #0x0
    bl track_getCup
    adds r4, r0, #0x0
    adds r0, r5, #0x0
    bl track_getCupIndex
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x11
    adds r4, #0x64
_0805D8B8:
    adds r4, r4, r7
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x13
    adds r4, r4, r0
    lsls r0, r6, #0x02
    adds r0, r4, r0
    ldrh r0, [r0, #0x02]
    cmp r0, r8
    bcs _0805D8CE
    movs r0, #0x00
    b _0805D8D0
_0805D8CE:
    movs r0, #0x01
_0805D8D0:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_805D8DC
sub_805D8DC:
    push {r4, r5, r6, r7, lr}
    lsls r0, r0, #0x18
    lsrs r5, r0, #0x18
    lsls r1, r1, #0x10
    lsrs r7, r1, #0x10
    adds r0, r5, #0x0
    bl sub_8032BC8
    ldr r6, _0805D90C @ =0x02032B80
    cmp r0, #0x00
    beq _0805D910
    adds r0, r5, #0x0
    bl track_getCup
    adds r4, r0, #0x0
    adds r0, r5, #0x0
    bl track_getCupIndex
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x11
    movs r1, #0xB9
    lsls r1, r1, #0x02
    adds r4, r4, r1
    b _0805D924
_0805D90C: .4byte 0x02032B80
_0805D910:
    adds r0, r5, #0x0
    bl track_getCup
    adds r4, r0, #0x0
    adds r0, r5, #0x0
    bl track_getCupIndex
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x11
    adds r4, #0x64
_0805D924:
    adds r4, r4, r6
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x13
    adds r4, r4, r0
    adds r4, #0x14
    ldrh r0, [r4, #0x02]
    cmp r0, r7
    bcs _0805D938
    movs r0, #0x00
    b _0805D93A
_0805D938:
    movs r0, #0x01
_0805D93A:
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x10, 0xB5, 0x03, 0x1C, 0x00, 0x24, 0x94, 0x42, 0x0A, 0xDA, 0x18, 0x78, 0x08, 0x70, 0x00, 0x06
    .byte 0x01, 0x33, 0x01, 0x31, 0x00, 0x28, 0x00, 0xD0, 0x01, 0x24, 0x01, 0x3A, 0x00, 0x2A, 0xF4, 0xD1
    .byte 0x20, 0x1C, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x30, 0xB5, 0x04, 0x1C, 0x0B, 0x1C, 0x01, 0x3A
    .byte 0x01, 0x20, 0x40, 0x42, 0x82, 0x42, 0x0B, 0xD0, 0x05, 0x1C, 0x21, 0x78, 0x18, 0x78, 0x01, 0x33
    .byte 0x01, 0x34, 0x81, 0x42, 0x01, 0xD0, 0x00, 0x20, 0x03, 0xE0, 0x01, 0x3A, 0xAA, 0x42, 0xF4, 0xD1
    .byte 0x01, 0x20, 0x30, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x01, 0x49, 0x08, 0x70, 0x70, 0x47, 0x00, 0x00
    .byte 0x8C, 0xEC, 0x03, 0x02, 0x01, 0x48, 0x00, 0x78, 0x70, 0x47, 0x00, 0x00, 0x8C, 0xEC, 0x03, 0x02
    thumb_func_start save_getSavePointer_805D9B0
save_getSavePointer_805D9B0:
    ldr r0, _0805D9B4 @ =0x02032B80
    bx lr
_0805D9B4: .4byte 0x02032B80
    thumb_func_start sub_805D9B8
sub_805D9B8:
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x0C
    ldr r1, _0805D9C4 @ =0x02020400
    adds r0, r0, r1
    bx lr
    .byte 0x00, 0x00
_0805D9C4: .4byte 0x02020400
    thumb_func_start sub_805D9C8
sub_805D9C8:
    push {r4, lr}
    ldr r4, _0805DA0C @ =0x030023DC
    movs r0, #0x00
    strb r0, [r4, #0x00]
    bl m4aSoundVSyncOff
    bl IdentifyFlash
    lsls r0, r0, #0x10
    cmp r0, #0x00
    bne _0805D9F2
    ldr r1, _0805DA10 @ =0x03004F80
    adds r1, #0x10
    movs r0, #0x01
    bl SetFlashTimerIntr
    lsls r0, r0, #0x10
    cmp r0, #0x00
    bne _0805D9F2
    movs r0, #0x01
    strb r0, [r4, #0x00]
_0805D9F2:
    bl m4aSoundVSyncOn
    ldr r2, _0805DA0C @ =0x030023DC
    ldrb r0, [r2, #0x00]
    cmp r0, #0x00
    bne _0805DA00
    strb r0, [r2, #0x00]
_0805DA00:
    ldr r1, _0805DA14 @ =0x02032B50
    ldrb r0, [r2, #0x00]
    strb r0, [r1, #0x00]
    pop {r4}
    pop {r0}
    bx r0
_0805DA0C: .4byte 0x030023DC
_0805DA10: .4byte 0x03004F80
_0805DA14: .4byte 0x02032B50
    thumb_func_start sub_805DA18
sub_805DA18:
    push {r4, lr}
    ldr r4, _0805DA64 @ =0x02032B80
    movs r0, #0x10
    adds r1, r4, #0x0
    bl sub_805EF10
    adds r2, r0, #0x0
    cmp r2, #0x00
    bne _0805DA50
    movs r0, #0x11
    adds r1, r4, #0x0
    bl sub_805EF10
    adds r2, r0, #0x0
    cmp r2, #0x00
    bne _0805DA50
    movs r0, #0x10
    adds r1, r4, #0x0
    bl sub_805EF88
    adds r2, r0, #0x0
    cmp r2, #0x00
    bne _0805DA50
    movs r0, #0x11
    adds r1, r4, #0x0
    bl sub_805EF88
    adds r2, r0, #0x0
_0805DA50:
    movs r0, #0xBF
    lsls r0, r0, #0x04
    adds r1, r4, r0
    movs r0, #0x00
    strh r0, [r1, #0x00]
    adds r0, r2, #0x0
    pop {r4}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805DA64: .4byte 0x02032B80
    thumb_func_start sub_805DA68
sub_805DA68:
    push {r4, r5, lr}
    ldr r4, _0805DAB0 @ =0x02032B80
    adds r2, r4, #0x0
    movs r5, #0xBF
    lsls r5, r5, #0x04
    movs r3, #0x00
    movs r1, #0x00
_0805DA76:
    ldrb r0, [r2, #0x00]
    adds r0, r3, r0
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    adds r2, #0x01
    adds r0, r1, #0x1
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    cmp r1, r5
    blt _0805DA76
    ldr r1, _0805DAB4 @ =0x00002CB4
    adds r0, r1, #0x0
    eors r3, r0
    ldr r1, _0805DAB8 @ =0x00000BF2
    adds r0, r4, r1
    strh r3, [r0, #0x00]
    movs r3, #0xBF
    lsls r3, r3, #0x04
    adds r2, r4, r3
    ldrh r1, [r2, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x07
    adds r0, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805DAB0: .4byte 0x02032B80
_0805DAB4: .4byte 0x00002CB4
_0805DAB8: .4byte 0x00000BF2
    thumb_func_start sub_805DABC
sub_805DABC:
    ldr r1, _0805DADC @ =0x02032B80
    ldr r0, _0805DAE0 @ =0x00000564
    adds r2, r1, r0
    movs r0, #0x00
    strb r0, [r2, #0x00]
    movs r3, #0xBF
    lsls r3, r3, #0x04
    adds r1, r1, r3
    ldrh r2, [r1, #0x00]
    movs r3, #0x80
    lsls r3, r3, #0x07
    adds r0, r3, #0x0
    orrs r0, r2
    strh r0, [r1, #0x00]
    bx lr
    .byte 0x00, 0x00
_0805DADC: .4byte 0x02032B80
_0805DAE0: .4byte 0x00000564
    .byte 0x00, 0xB5, 0x02, 0x1C, 0x08, 0x1C, 0x12, 0x06, 0x12, 0x0E, 0x11, 0x1C, 0xFE, 0xF7, 0xC6, 0xFD
    .byte 0x00, 0x28, 0x01, 0xD1, 0x01, 0x20, 0x00, 0xE0, 0x00, 0x20, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00
    .byte 0x30, 0xB5, 0x0D, 0x1C, 0x00, 0x06, 0x00, 0x0A, 0x80, 0x21, 0x89, 0x03, 0x40, 0x18, 0x04, 0x0C
    .byte 0x20, 0x1C, 0x29, 0x1C, 0x01, 0xF0, 0xFA, 0xF9, 0x00, 0x28, 0x03, 0xD1, 0x20, 0x1C, 0x29, 0x1C
    .byte 0x01, 0xF0, 0x30, 0xFA, 0x30, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00
    thumb_func_start sub_805DB30
sub_805DB30:
    push {r4, r5, lr}
    lsls r0, r0, #0x18
    lsls r1, r1, #0x0C
    ldr r2, _0805DB60 @ =0x02020400
    adds r5, r1, r2
    lsrs r0, r0, #0x08
    movs r1, #0x80
    lsls r1, r1, #0x0E
    adds r0, r0, r1
    lsrs r4, r0, #0x10
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl sub_805EF10
    cmp r0, #0x00
    bne _0805DB58
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl sub_805EF88
_0805DB58:
    pop {r4, r5}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805DB60: .4byte 0x02020400
    thumb_func_start sub_805DB64
sub_805DB64:
    lsls r0, r0, #0x18
    lsrs r2, r0, #0x18
    ldr r0, _0805DB84 @ =0x02020400
    ldrh r0, [r0, #0x0A]
    cmp r0, #0x00
    beq _0805DB82
    ldr r0, _0805DB88 @ =0x02032B80
    movs r1, #0xBF
    lsls r1, r1, #0x04
    adds r0, r0, r1
    movs r1, #0x01
    lsls r1, r2
    ldrh r2, [r0, #0x00]
    orrs r1, r2
    strh r1, [r0, #0x00]
_0805DB82:
    bx lr
_0805DB84: .4byte 0x02020400
_0805DB88: .4byte 0x02032B80
    .byte 0x10, 0xB5, 0x88, 0xB0, 0x00, 0x06, 0xA0, 0x21, 0x09, 0x05, 0x44, 0x18, 0x21, 0x0E, 0x68, 0x46
    .byte 0xFE, 0xF7, 0x70, 0xFD, 0x00, 0x28, 0x07, 0xD1, 0x68, 0x46, 0x40, 0x88, 0x00, 0x21, 0x00, 0x28
    .byte 0x00, 0xD1, 0x01, 0x21, 0x00, 0x29, 0x02, 0xD0, 0x01, 0x20, 0x40, 0x42, 0x00, 0xE0, 0x20, 0x0E
    .byte 0x00, 0x06, 0x02, 0x0E, 0x08, 0x48, 0x40, 0x89, 0x00, 0x28, 0x08, 0xD0, 0x07, 0x48, 0xBF, 0x21
    .byte 0x09, 0x01, 0x40, 0x18, 0x01, 0x21, 0x91, 0x40, 0x02, 0x88, 0x11, 0x43, 0x01, 0x80, 0x08, 0xB0
    .byte 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x00, 0x04, 0x02, 0x02, 0x80, 0x2B, 0x03, 0x02
    .byte 0xF0, 0xB5, 0x00, 0x06, 0x07, 0x0E, 0x0A, 0x25, 0x07, 0x4E, 0x2C, 0x06, 0x21, 0x0E, 0x30, 0x1C
    .byte 0xFE, 0xF7, 0x40, 0xFD, 0x00, 0x28, 0x09, 0xD1, 0x70, 0x88, 0x00, 0x28, 0x06, 0xD0, 0x70, 0x7A
    .byte 0xB8, 0x42, 0x03, 0xD1, 0x20, 0x16, 0x06, 0xE0, 0x30, 0x2B, 0x03, 0x02, 0x01, 0x35, 0x0B, 0x2D
    .byte 0xEB, 0xDD, 0x01, 0x20, 0x40, 0x42, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47
    thumb_func_start sub_805DC28
sub_805DC28:
    push {r4, lr}
    add sp, #-0x020
    lsls r0, r0, #0x18
    movs r1, #0xA0
    lsls r1, r1, #0x14
    adds r4, r0, r1
    lsrs r1, r4, #0x18
    mov r0, sp
    bl sub_805C680
    cmp r0, #0x00
    bne _0805DC50
    mov r0, sp
    ldrh r0, [r0, #0x02]
    movs r1, #0x00
    cmp r0, #0x00
    bne _0805DC4C
    movs r1, #0x01
_0805DC4C:
    cmp r1, #0x00
    beq _0805DC56
_0805DC50:
    movs r0, #0x01
    negs r0, r0
    b _0805DC58
_0805DC56:
    asrs r0, r4, #0x18
_0805DC58:
    add sp, #0x020
    pop {r4}
    pop {r1}
    bx r1
    thumb_func_start sub_805DC60
sub_805DC60:
    push {r4, r5, r6, lr}
    movs r5, #0x00
    ldr r6, _0805DC80 @ =0x02032B30
_0805DC66:
    lsls r4, r5, #0x18
    lsrs r1, r4, #0x18
    adds r0, r6, #0x0
    bl sub_805C680
    cmp r0, #0x00
    bne _0805DC7A
    ldrh r0, [r6, #0x02]
    cmp r0, #0x00
    bne _0805DC84
_0805DC7A:
    asrs r0, r4, #0x18
    b _0805DC8E
    .byte 0x00, 0x00
_0805DC80: .4byte 0x02032B30
_0805DC84:
    adds r5, #0x01
    cmp r5, #0x09
    ble _0805DC66
    movs r0, #0x01
    negs r0, r0
_0805DC8E:
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    thumb_func_start sub_805DC94
sub_805DC94:
    push {r4, r5, r6, lr}
    movs r5, #0x0A
    ldr r6, _0805DCB4 @ =0x02032B30
_0805DC9A:
    lsls r4, r5, #0x18
    lsrs r1, r4, #0x18
    adds r0, r6, #0x0
    bl sub_805C680
    cmp r0, #0x00
    bne _0805DCAE
    ldrh r0, [r6, #0x02]
    cmp r0, #0x00
    bne _0805DCB8
_0805DCAE:
    asrs r0, r4, #0x18
    b _0805DCC2
    .byte 0x00, 0x00
_0805DCB4: .4byte 0x02032B30
_0805DCB8:
    adds r5, #0x01
    cmp r5, #0x0B
    ble _0805DC9A
    movs r0, #0x01
    negs r0, r0
_0805DCC2:
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    thumb_func_start sub_805DCC8
sub_805DCC8:
    movs r0, #0x0C
    bx lr
    .byte 0x00, 0x06, 0x00, 0x0E, 0x06, 0x4A, 0x07, 0x4B, 0x00, 0x21, 0x59, 0x80, 0xBF, 0x21, 0x09, 0x01
    .byte 0x52, 0x18, 0x01, 0x21, 0x81, 0x40, 0x10, 0x88, 0x01, 0x43, 0x11, 0x80, 0x70, 0x47, 0x00, 0x00
    .byte 0x80, 0x2B, 0x03, 0x02, 0x00, 0x04, 0x02, 0x02
    thumb_func_start sub_805DCF4
sub_805DCF4:
    ldr r0, _0805DD00 @ =0x02032B80
    ldr r1, _0805DD04 @ =0x00000AE8
    adds r0, r0, r1
    movs r1, #0x00
    strh r1, [r0, #0x00]
    bx lr
_0805DD00: .4byte 0x02032B80
_0805DD04: .4byte 0x00000AE8
    thumb_func_start sub_805DD08
sub_805DD08:
    push {r4, lr}
    ldr r1, _0805DD34 @ =0x02032B80
    adds r2, r1, #0x0
    adds r2, #0x1C
    ldr r0, _0805DD38 @ =0x00000AD4
    adds r4, r1, r0
    movs r3, #0x00
    movs r0, #0x04
_0805DD18:
    strb r3, [r2, #0x00]
    adds r2, #0x01
    subs r0, #0x01
    cmp r0, #0x00
    bge _0805DD18
    movs r0, #0x00
    strb r0, [r4, #0x00]
    ldr r0, _0805DD3C @ =0x00000AE5
    adds r1, r1, r0
    movs r0, #0x00
    strb r0, [r1, #0x00]
    pop {r4}
    pop {r0}
    bx r0
_0805DD34: .4byte 0x02032B80
_0805DD38: .4byte 0x00000AD4
_0805DD3C: .4byte 0x00000AE5
    thumb_func_start sub_805DD40
sub_805DD40:
    ldr r0, _0805DD54 @ =0x02032B80
    adds r0, #0x0C
    movs r2, #0x00
    movs r1, #0x0F
_0805DD48:
    strb r2, [r0, #0x00]
    adds r0, #0x01
    subs r1, #0x01
    cmp r1, #0x00
    bge _0805DD48
    bx lr
_0805DD54: .4byte 0x02032B80
    .byte 0x05, 0x48, 0x02, 0x1C, 0x0C, 0x32, 0x00, 0x21, 0x10, 0x78, 0x40, 0x18, 0x10, 0x70, 0x01, 0x32
    .byte 0x01, 0x31, 0x0F, 0x29, 0xF8, 0xDD, 0x70, 0x47, 0x80, 0x2B, 0x03, 0x02
    thumb_func_start sub_805DD74
sub_805DD74:
    ldr r0, _0805DD80 @ =0x02032B80
    ldr r1, _0805DD84 @ =0x00000AE6
    adds r0, r0, r1
    movs r1, #0x2F
    strb r1, [r0, #0x00]
    bx lr
_0805DD80: .4byte 0x02032B80
_0805DD84: .4byte 0x00000AE6
    thumb_func_start sub_805DD88
sub_805DD88:
    push {r4, r5, r6, lr}
    ldr r6, _0805DDB8 @ =0x02032B80
    movs r3, #0x00
    movs r5, #0xB2
    lsls r5, r5, #0x03
    movs r4, #0x00
_0805DD94:
    lsls r0, r3, #0x02
    adds r0, r0, r3
    lsls r0, r0, #0x02
    adds r0, r0, r5
    adds r1, r6, r0
    movs r2, #0x00
    adds r0, r3, #0x1
_0805DDA2:
    strb r4, [r1, #0x00]
    adds r1, #0x01
    adds r2, #0x01
    cmp r2, #0x13
    bls _0805DDA2
    adds r3, r0, #0x0
    cmp r3, #0x17
    ble _0805DD94
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0805DDB8: .4byte 0x02032B80
    thumb_func_start sub_805DDBC
sub_805DDBC:
    push {r4, r5, r6, lr}
    movs r2, #0x00
    ldr r6, _0805DDE4 @ =0x02020400
    movs r5, #0x00
    ldr r3, _0805DDE8 @ =0x02033770
    movs r4, #0x01
_0805DDC8:
    lsls r0, r2, #0x18
    lsrs r0, r0, #0x18
    strh r5, [r6, #0x02]
    adds r1, r4, #0x0
    lsls r1, r0
    ldrh r0, [r3, #0x00]
    orrs r1, r0
    strh r1, [r3, #0x00]
    adds r2, #0x01
    cmp r2, #0x0C
    ble _0805DDC8
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0805DDE4: .4byte 0x02020400
_0805DDE8: .4byte 0x02033770
    thumb_func_start sub_805DDEC
sub_805DDEC:
    push {r4, lr}
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    ldr r4, _0805DE1C @ =0x02032B80
    lsls r3, r0, #0x01
    adds r3, r3, r0
    adds r1, r1, r3
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    movs r0, #0x80
    lsls r0, r0, #0x09
    lsls r0, r1
    lsrs r3, r0, #0x10
    cmp r2, #0x00
    beq _0805DE24
    ldr r0, _0805DE20 @ =0x00000BEC
    adds r2, r4, r0
    ldrh r1, [r2, #0x00]
    adds r0, r3, #0x0
    orrs r0, r1
    strh r0, [r2, #0x00]
    b _0805DE2E
_0805DE1C: .4byte 0x02032B80
_0805DE20: .4byte 0x00000BEC
_0805DE24:
    ldr r0, _0805DE34 @ =0x00000BEC
    adds r1, r4, r0
    ldrh r0, [r1, #0x00]
    bics r0, r3
    strh r0, [r1, #0x00]
_0805DE2E:
    pop {r4}
    pop {r0}
    bx r0
_0805DE34: .4byte 0x00000BEC
    thumb_func_start sub_805DE38
sub_805DE38:
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    ldr r3, _0805DE60 @ =0x02032B80
    lsls r2, r0, #0x01
    adds r2, r2, r0
    adds r1, r1, r2
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    movs r0, #0x80
    lsls r0, r0, #0x09
    lsls r0, r1
    lsrs r0, r0, #0x10
    ldr r1, _0805DE64 @ =0x00000BEC
    adds r3, r3, r1
    ldrh r1, [r3, #0x00]
    ands r0, r1
    bx lr
    .byte 0x00, 0x00
_0805DE60: .4byte 0x02032B80
_0805DE64: .4byte 0x00000BEC
    thumb_func_start sub_805DE68
sub_805DE68:
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    ldr r1, _0805DE80 @ =0x02032B80
    movs r2, #0x00
    adds r1, #0x28
    adds r1, r0, r1
_0805DE74:
    movs r0, #0x00
    ldsb r0, [r1, r0]
    cmp r0, #0x00
    beq _0805DE84
    movs r0, #0x01
    b _0805DE8E
_0805DE80: .4byte 0x02032B80
_0805DE84:
    adds r1, #0x03
    adds r2, #0x01
    cmp r2, #0x03
    ble _0805DE74
    movs r0, #0x00
_0805DE8E:
    bx lr
    thumb_func_start sub_805DE90
sub_805DE90:
    push {lr}
    add sp, #-0x020
    adds r1, r0, #0x0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    mov r0, sp
    bl sub_805C680
    cmp r0, #0x00
    bne _0805DEAE
    mov r0, sp
    ldrb r0, [r0, #0x00]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    b _0805DEB2
_0805DEAE:
    movs r0, #0x01
    negs r0, r0
_0805DEB2:
    add sp, #0x020
    pop {r1}
    bx r1
    thumb_func_start sub_805DEB8
sub_805DEB8:
    push {lr}
    add sp, #-0x020
    adds r1, r0, #0x0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    mov r0, sp
    bl sub_805C680
    cmp r0, #0x00
    bne _0805DED4
    mov r0, sp
    movs r1, #0x02
    ldsh r0, [r0, r1]
    b _0805DED8
_0805DED4:
    movs r0, #0x01
    negs r0, r0
_0805DED8:
    add sp, #0x020
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_805DEE0
sub_805DEE0:
    push {r4, r5, lr}
    add sp, #-0x020
    adds r2, r0, #0x0
    adds r4, r1, #0x0
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    movs r5, #0x00
    mov r0, sp
    adds r1, r2, #0x0
    bl sub_805C680
    cmp r0, #0x00
    bne _0805DF0E
    add r1, sp, #0x004
    movs r2, #0x04
_0805DEFE:
    ldrb r0, [r1, #0x00]
    strb r0, [r4, #0x00]
    adds r1, #0x01
    adds r4, #0x01
    subs r2, #0x01
    cmp r2, #0x00
    bge _0805DEFE
    movs r5, #0x01
_0805DF0E:
    adds r0, r5, #0x0
    add sp, #0x020
    pop {r4, r5}
    pop {r1}
    bx r1
    thumb_func_start sub_805DF18
sub_805DF18:
    push {lr}
    add sp, #-0x020
    adds r1, r0, #0x0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    mov r0, sp
    bl sub_805C680
    cmp r0, #0x00
    bne _0805DF36
    mov r0, sp
    ldrb r0, [r0, #0x09]
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    b _0805DF3A
_0805DF36:
    movs r0, #0x01
    negs r0, r0
_0805DF3A:
    add sp, #0x020
    pop {r1}
    bx r1
    thumb_func_start sub_805DF40
sub_805DF40:
    push {r4, lr}
    adds r1, r0, #0x0
    ldr r0, _0805DF6C @ =0x02032B80
    adds r3, r0, #0x0
    adds r3, #0x0C
    movs r4, #0x00
    movs r2, #0x0F
_0805DF4E:
    ldrb r0, [r3, #0x00]
    strb r0, [r1, #0x00]
    lsls r0, r0, #0x18
    adds r3, #0x01
    adds r1, #0x01
    cmp r0, #0x00
    beq _0805DF5E
    movs r4, #0x01
_0805DF5E:
    subs r2, #0x01
    cmp r2, #0x00
    bge _0805DF4E
    adds r0, r4, #0x0
    pop {r4}
    pop {r1}
    bx r1
_0805DF6C: .4byte 0x02032B80
    thumb_func_start sub_805DF70
sub_805DF70:
    adds r1, r0, #0x0
    ldr r0, _0805DF8C @ =0x02032B80
    adds r3, r0, #0x0
    adds r3, #0x0C
    movs r2, #0x0F
_0805DF7A:
    ldrb r0, [r1, #0x00]
    strb r0, [r3, #0x00]
    adds r1, #0x01
    adds r3, #0x01
    subs r2, #0x01
    cmp r2, #0x00
    bge _0805DF7A
    bx lr
    .byte 0x00, 0x00
_0805DF8C: .4byte 0x02032B80
    thumb_func_start sub_805DF90
sub_805DF90:
    push {r4, lr}
    adds r1, r0, #0x0
    ldr r0, _0805DFBC @ =0x02032B80
    adds r3, r0, #0x0
    adds r3, #0x1C
    movs r4, #0x00
    movs r2, #0x04
_0805DF9E:
    ldrb r0, [r3, #0x00]
    strb r0, [r1, #0x00]
    lsls r0, r0, #0x18
    adds r3, #0x01
    adds r1, #0x01
    cmp r0, #0x00
    beq _0805DFAE
    movs r4, #0x01
_0805DFAE:
    subs r2, #0x01
    cmp r2, #0x00
    bge _0805DF9E
    adds r0, r4, #0x0
    pop {r4}
    pop {r1}
    bx r1
_0805DFBC: .4byte 0x02032B80
    .byte 0x01, 0x1C, 0x06, 0x48, 0x03, 0x1C, 0x1C, 0x33, 0x04, 0x22, 0x08, 0x78, 0x18, 0x70, 0x01, 0x31
    .byte 0x01, 0x33, 0x01, 0x3A, 0x00, 0x2A, 0xF8, 0xDA, 0x70, 0x47, 0x00, 0x00, 0x80, 0x2B, 0x03, 0x02
    .byte 0x02, 0x1C, 0x04, 0x48, 0x04, 0x4B, 0xC1, 0x18, 0x08, 0x78, 0x00, 0x28, 0x06, 0xD1, 0x00, 0x20
    .byte 0x0D, 0xE0, 0x00, 0x00, 0x80, 0x2B, 0x03, 0x02, 0xD4, 0x0A, 0x00, 0x00, 0x10, 0x23, 0x08, 0x78
    .byte 0x10, 0x70, 0x01, 0x31, 0x01, 0x32, 0x01, 0x3B, 0x00, 0x2B, 0xF8, 0xDA, 0x01, 0x20, 0x70, 0x47
    .byte 0x01, 0x1C, 0x06, 0x48, 0x06, 0x4A, 0x83, 0x18, 0x10, 0x22, 0x08, 0x78, 0x18, 0x70, 0x01, 0x31
    .byte 0x01, 0x33, 0x01, 0x3A, 0x00, 0x2A, 0xF8, 0xDA, 0x70, 0x47, 0x00, 0x00, 0x80, 0x2B, 0x03, 0x02
    .byte 0xD4, 0x0A, 0x00, 0x00, 0x10, 0xB5, 0x01, 0x1C, 0x09, 0x48, 0x03, 0x1C, 0x21, 0x33, 0x00, 0x24
    .byte 0x04, 0x22, 0x18, 0x78, 0x08, 0x70, 0x00, 0x06, 0x01, 0x33, 0x01, 0x31, 0x00, 0x28, 0x00, 0xD0
    .byte 0x01, 0x24, 0x01, 0x3A, 0x00, 0x2A, 0xF4, 0xDA, 0x20, 0x1C, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47
    .byte 0x80, 0x2B, 0x03, 0x02, 0x01, 0x1C, 0x06, 0x48, 0x03, 0x1C, 0x21, 0x33, 0x04, 0x22, 0x08, 0x78
    .byte 0x18, 0x70, 0x01, 0x31, 0x01, 0x33, 0x01, 0x3A, 0x00, 0x2A, 0xF8, 0xDA, 0x70, 0x47, 0x00, 0x00
    .byte 0x80, 0x2B, 0x03, 0x02, 0x10, 0xB5, 0x0A, 0x49, 0x0A, 0x4A, 0x89, 0x18, 0x02, 0x1C, 0x00, 0x24
    .byte 0x7F, 0x23, 0x08, 0x78, 0x10, 0x70, 0x00, 0x06, 0x01, 0x31, 0x01, 0x32, 0x00, 0x28, 0x00, 0xD0
    .byte 0x01, 0x24, 0x01, 0x3B, 0x00, 0x2B, 0xF4, 0xDA, 0x20, 0x1C, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47
    .byte 0x80, 0x2B, 0x03, 0x02, 0xF5, 0x0A, 0x00, 0x00, 0x06, 0x49, 0x02, 0x1C, 0x06, 0x48, 0x09, 0x18
    .byte 0x7F, 0x23, 0x10, 0x78, 0x08, 0x70, 0x01, 0x32, 0x01, 0x31, 0x01, 0x3B, 0x00, 0x2B, 0xF8, 0xDA
    .byte 0x70, 0x47, 0x00, 0x00, 0x80, 0x2B, 0x03, 0x02, 0xF5, 0x0A, 0x00, 0x00, 0x10, 0xB5, 0x0A, 0x49
    .byte 0x0A, 0x4A, 0x89, 0x18, 0x02, 0x1C, 0x00, 0x24, 0x07, 0x23, 0x08, 0x78, 0x10, 0x70, 0x00, 0x06
    .byte 0x01, 0x31, 0x01, 0x32, 0x00, 0x28, 0x00, 0xD0, 0x01, 0x24, 0x01, 0x3B, 0x00, 0x2B, 0xF4, 0xDA
    .byte 0x20, 0x1C, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x80, 0x2B, 0x03, 0x02, 0x75, 0x0B, 0x00, 0x00
    .byte 0x06, 0x49, 0x02, 0x1C, 0x06, 0x48, 0x09, 0x18, 0x07, 0x23, 0x10, 0x78, 0x08, 0x70, 0x01, 0x32
    .byte 0x01, 0x31, 0x01, 0x3B, 0x00, 0x2B, 0xF8, 0xDA, 0x70, 0x47, 0x00, 0x00, 0x80, 0x2B, 0x03, 0x02
    .byte 0x75, 0x0B, 0x00, 0x00, 0x05, 0x49, 0x06, 0x4A, 0x89, 0x18, 0x09, 0x78, 0x01, 0x70, 0x00, 0x20
    .byte 0x09, 0x06, 0x09, 0x0E, 0x2E, 0x29, 0x00, 0xD8, 0x01, 0x20, 0x70, 0x47, 0x80, 0x2B, 0x03, 0x02
    .byte 0xE6, 0x0A, 0x00, 0x00, 0x02, 0x49, 0x03, 0x4A, 0x89, 0x18, 0x00, 0x78, 0x08, 0x70, 0x70, 0x47
    .byte 0x80, 0x2B, 0x03, 0x02, 0xE6, 0x0A, 0x00, 0x00, 0x10, 0xB5, 0x0A, 0x49, 0x0A, 0x4A, 0x89, 0x18
    .byte 0x02, 0x1C, 0x00, 0x24, 0x0B, 0x23, 0x08, 0x78, 0x10, 0x70, 0x00, 0x06, 0x01, 0x31, 0x01, 0x32
    .byte 0x00, 0x28, 0x00, 0xD0, 0x01, 0x24, 0x01, 0x3B, 0x00, 0x2B, 0xF4, 0xDA, 0x20, 0x1C, 0x10, 0xBC
    .byte 0x02, 0xBC, 0x08, 0x47, 0x80, 0x2B, 0x03, 0x02, 0x8D, 0x0B, 0x00, 0x00, 0x06, 0x49, 0x02, 0x1C
    .byte 0x06, 0x48, 0x09, 0x18, 0x0B, 0x23, 0x10, 0x78, 0x08, 0x70, 0x01, 0x32, 0x01, 0x31, 0x01, 0x3B
    .byte 0x00, 0x2B, 0xF8, 0xDA, 0x70, 0x47, 0x00, 0x00, 0x80, 0x2B, 0x03, 0x02, 0x8D, 0x0B, 0x00, 0x00
    .byte 0x10, 0xB5, 0x0A, 0x49, 0x0A, 0x4A, 0x89, 0x18, 0x02, 0x1C, 0x00, 0x24, 0x0F, 0x23, 0x08, 0x78
    .byte 0x10, 0x70, 0x00, 0x06, 0x01, 0x31, 0x01, 0x32, 0x00, 0x28, 0x00, 0xD0, 0x01, 0x24, 0x01, 0x3B
    .byte 0x00, 0x2B, 0xF4, 0xDA, 0x20, 0x1C, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x80, 0x2B, 0x03, 0x02
    .byte 0x7D, 0x0B, 0x00, 0x00, 0x06, 0x49, 0x02, 0x1C, 0x06, 0x48, 0x09, 0x18, 0x0F, 0x23, 0x10, 0x78
    .byte 0x08, 0x70, 0x01, 0x32, 0x01, 0x31, 0x01, 0x3B, 0x00, 0x2B, 0xF8, 0xDA, 0x70, 0x47, 0x00, 0x00
    .byte 0x80, 0x2B, 0x03, 0x02, 0x7D, 0x0B, 0x00, 0x00, 0x10, 0xB5, 0x0D, 0x4B, 0x4A, 0x00, 0x52, 0x18
    .byte 0xD2, 0x00, 0xBA, 0x21, 0x09, 0x01, 0x52, 0x18, 0xD2, 0x18, 0x01, 0x1C, 0x00, 0x24, 0x04, 0x23
    .byte 0x10, 0x78, 0x08, 0x70, 0x00, 0x06, 0x01, 0x32, 0x01, 0x31, 0x00, 0x28, 0x00, 0xD0, 0x01, 0x24
    .byte 0x01, 0x3B, 0x00, 0x2B, 0xF4, 0xDA, 0x20, 0x1C, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00
    .byte 0x80, 0x2B, 0x03, 0x02, 0x08, 0x4B, 0x4A, 0x00, 0x52, 0x18, 0xD2, 0x00, 0xBA, 0x21, 0x09, 0x01
    .byte 0x52, 0x18, 0x01, 0x1C, 0xD2, 0x18, 0x04, 0x23, 0x08, 0x78, 0x10, 0x70, 0x01, 0x31, 0x01, 0x32
    .byte 0x01, 0x3B, 0x00, 0x2B, 0xF8, 0xDA, 0x70, 0x47, 0x80, 0x2B, 0x03, 0x02, 0x10, 0xB5, 0x0C, 0x4B
    .byte 0x4A, 0x00, 0x52, 0x18, 0xD2, 0x00, 0xD2, 0x18, 0x0A, 0x49, 0x52, 0x18, 0x01, 0x1C, 0x00, 0x24
    .byte 0x0F, 0x23, 0x10, 0x78, 0x08, 0x70, 0x00, 0x06, 0x01, 0x32, 0x01, 0x31, 0x00, 0x28, 0x00, 0xD0
    .byte 0x01, 0x24, 0x01, 0x3B, 0x00, 0x2B, 0xF4, 0xDA, 0x20, 0x1C, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47
    .byte 0x80, 0x2B, 0x03, 0x02, 0xA8, 0x0B, 0x00, 0x00, 0x08, 0x4B, 0x4A, 0x00, 0x52, 0x18, 0xD2, 0x00
    .byte 0xD2, 0x18, 0x01, 0x1C, 0x06, 0x48, 0x12, 0x18, 0x0F, 0x23, 0x08, 0x78, 0x10, 0x70, 0x01, 0x31
    .byte 0x01, 0x32, 0x01, 0x3B, 0x00, 0x2B, 0xF8, 0xDA, 0x70, 0x47, 0x00, 0x00, 0x80, 0x2B, 0x03, 0x02
    .byte 0xA8, 0x0B, 0x00, 0x00, 0xF0, 0xB5, 0x05, 0x1C, 0x09, 0x06, 0x0A, 0x0E, 0xBF, 0x20, 0x00, 0x01
    .byte 0x2C, 0x18, 0x21, 0x88, 0x80, 0x27, 0x3F, 0x02, 0x38, 0x1C, 0x08, 0x40, 0x00, 0x04, 0x06, 0x0C
    .byte 0x08, 0x48, 0x00, 0x78, 0x01, 0x28, 0x05, 0xD1, 0x07, 0x4B, 0x10, 0x1C, 0x00, 0x21, 0x2A, 0x1C
    .byte 0x03, 0xF0, 0xD6, 0xF9, 0x07, 0x20, 0x28, 0x81, 0x00, 0x2E, 0x07, 0xD0, 0x21, 0x88, 0x38, 0x1C
    .byte 0x08, 0x43, 0x06, 0xE0, 0xDC, 0x23, 0x00, 0x03, 0xF4, 0x0B, 0x00, 0x00, 0x21, 0x88, 0x03, 0x48
    .byte 0x08, 0x40, 0x20, 0x80, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0xFF, 0x7F, 0x00, 0x00
    .byte 0x00, 0xB5, 0x02, 0x1C, 0x09, 0x06, 0x09, 0x0E, 0x05, 0x48, 0x00, 0x78, 0x01, 0x28, 0x05, 0xD1
    .byte 0x80, 0x23, 0x5B, 0x01, 0x08, 0x1C, 0x00, 0x21, 0x03, 0xF0, 0xB2, 0xF9, 0x01, 0xBC, 0x00, 0x47
    .byte 0xDC, 0x23, 0x00, 0x03
    thumb_func_start sub_805E364
sub_805E364:
    push {lr}
    adds r2, r0, #0x0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    ldr r0, _0805E384 @ =0x030023DC
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    bne _0805E37E
    ldr r3, _0805E388 @ =0x0000B408
    adds r0, r1, #0x0
    movs r1, #0x00
    bl ReadFlash
_0805E37E:
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805E384: .4byte 0x030023DC
_0805E388: .4byte 0x0000B408
    thumb_func_start sub_805E38C
sub_805E38C:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    lsls r1, r1, #0x18
    lsrs r4, r1, #0x18
    ldr r0, _0805E3B8 @ =0x030023DC
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    bne _0805E3C0
    ldr r0, _0805E3BC @ =0x03006A84
    ldr r2, [r0, #0x00]
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl _call_via_r2
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl VerifyFlashSector
    cmp r0, #0x00
    bne _0805E3C0
    movs r0, #0x01
    b _0805E3C2
_0805E3B8: .4byte 0x030023DC
_0805E3BC: .4byte 0x03006A84
_0805E3C0:
    movs r0, #0x00
_0805E3C2:
    pop {r4, r5}
    pop {r1}
    bx r1
    .byte 0x30, 0xB5, 0x05, 0x1C, 0x09, 0x06, 0x0C, 0x0E, 0x08, 0x48, 0x00, 0x78, 0x01, 0x28, 0x11, 0xD1
    .byte 0x07, 0x48, 0x02, 0x68, 0x20, 0x1C, 0x29, 0x1C, 0x03, 0xF0, 0x4C, 0xFD, 0x20, 0x1C, 0x29, 0x1C
    .byte 0x03, 0xF0, 0xCA, 0xF9, 0x00, 0x28, 0x05, 0xD1, 0x01, 0x20, 0x04, 0xE0, 0xDC, 0x23, 0x00, 0x03
    .byte 0x84, 0x6A, 0x00, 0x03, 0x00, 0x20, 0x30, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0xB5, 0x88, 0xB0
    .byte 0x01, 0x1C, 0x09, 0x06, 0x09, 0x0E, 0x68, 0x46, 0xFE, 0xF7, 0x36, 0xF9, 0x00, 0x28, 0x05, 0xD1
    .byte 0x68, 0x46, 0x40, 0x88, 0x00, 0x28, 0x01, 0xD0, 0x00, 0x20, 0x00, 0xE0, 0x01, 0x20, 0x08, 0xB0
    .byte 0x02, 0xBC, 0x08, 0x47
    thumb_func_start sub_805E42C
sub_805E42C:
    push {r4, r5, lr}
    add sp, #-0x01C
    ldr r4, _0805E46C @ =0x02032B80
    mov r0, sp
    bl sub_805DF40
    add r5, sp, #0x014
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    movs r2, #0x04
    bl CpuSet
    add r0, sp, #0x010
    movs r1, #0x00
    strh r1, [r0, #0x00]
    ldr r2, _0805E470 @ =0x010005FA
    adds r1, r4, #0x0
    bl CpuSet
    adds r0, r5, #0x0
    adds r1, r4, #0x0
    movs r2, #0x04
    bl CpuSet
    mov r0, sp
    bl sub_805DF70
    add sp, #0x01C
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
_0805E46C: .4byte 0x02032B80
_0805E470: .4byte 0x010005FA
    thumb_func_start sub_805E474
sub_805E474:
    push {r4, r5, r6, lr}
    mov r6, r8
    push {r6}
    add sp, #-0x008
    ldr r5, _0805E4D0 @ =0x02032B80
    ldr r0, _0805E4D4 @ =0x00000AF5
    adds r1, r5, r0
    adds r0, #0x80
    adds r6, r5, r0
    adds r0, #0x08
    adds r0, r0, r5
    mov r8, r0
    ldr r0, _0805E4D8 @ =0x00000B8D
    adds r5, r5, r0
    mov r0, sp
    movs r4, #0x00
    strh r4, [r0, #0x00]
    ldr r2, _0805E4DC @ =0x01000040
    bl CpuSet
    mov r0, sp
    adds r0, #0x02
    strh r4, [r0, #0x00]
    ldr r2, _0805E4E0 @ =0x01000004
    adds r1, r6, #0x0
    bl CpuSet
    add r0, sp, #0x004
    strh r4, [r0, #0x00]
    ldr r2, _0805E4E4 @ =0x01000008
    mov r1, r8
    bl CpuSet
    mov r0, sp
    adds r0, #0x06
    strh r4, [r0, #0x00]
    ldr r2, _0805E4E8 @ =0x01000006
    adds r1, r5, #0x0
    bl CpuSet
    add sp, #0x008
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0805E4D0: .4byte 0x02032B80
_0805E4D4: .4byte 0x00000AF5
_0805E4D8: .4byte 0x00000B8D
_0805E4DC: .4byte 0x01000040
_0805E4E0: .4byte 0x01000004
_0805E4E4: .4byte 0x01000008
_0805E4E8: .4byte 0x01000006
    .byte 0x70, 0xB5, 0x05, 0x1C, 0x13, 0x4E, 0x68, 0x00, 0x40, 0x19, 0xC0, 0x00, 0xBA, 0x21, 0x09, 0x01
    .byte 0x40, 0x18, 0x81, 0x19, 0x0B, 0x1C, 0x08, 0x33, 0x00, 0x24, 0x04, 0x22, 0x08, 0x78, 0x20, 0x18
    .byte 0x00, 0x04, 0x04, 0x0C, 0x01, 0x31, 0x01, 0x3A, 0x00, 0x2A, 0xF7, 0xDA, 0x69, 0x00, 0x0F, 0x22
    .byte 0x18, 0x78, 0x20, 0x18, 0x00, 0x04, 0x04, 0x0C, 0x01, 0x33, 0x01, 0x3A, 0x00, 0x2A, 0xF7, 0xDA
    .byte 0x48, 0x19, 0xC0, 0x00, 0x30, 0x18, 0x04, 0x49, 0x40, 0x18, 0x04, 0x80, 0x70, 0xBC, 0x01, 0xBC
    .byte 0x00, 0x47, 0x00, 0x00, 0x80, 0x2B, 0x03, 0x02, 0xA6, 0x0B, 0x00, 0x00, 0x10, 0xB5, 0x4A, 0x00
    .byte 0x52, 0x18, 0xD2, 0x00, 0xBA, 0x21, 0x09, 0x01, 0x52, 0x18, 0x81, 0x18, 0x0C, 0x1C, 0x08, 0x34
    .byte 0x00, 0x23, 0x04, 0x22, 0x08, 0x78, 0x18, 0x18, 0x00, 0x04, 0x03, 0x0C, 0x01, 0x31, 0x01, 0x3A
    .byte 0x00, 0x2A, 0xF7, 0xDA, 0x0F, 0x22, 0x20, 0x78, 0x18, 0x18, 0x00, 0x04, 0x03, 0x0C, 0x01, 0x34
    .byte 0x01, 0x3A, 0x00, 0x2A, 0xF7, 0xDA, 0x18, 0x1C, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00
    thumb_func_start sub_805E58C
sub_805E58C:
    push {r4, r5, lr}
    ldr r4, _0805E5D0 @ =0x02033780
    adds r0, r4, #0x0
    movs r1, #0x0E
    bl sub_805E364
    adds r3, r4, #0x0
    ldr r5, _0805E5D4 @ =0x0000B404
    movs r2, #0x00
    movs r1, #0x00
_0805E5A0:
    ldrb r0, [r3, #0x00]
    adds r0, r2, r0
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    adds r3, #0x01
    adds r0, r1, #0x1
    lsls r0, r0, #0x10
    lsrs r1, r0, #0x10
    cmp r1, r5
    blt _0805E5A0
    ldr r1, _0805E5D8 @ =0x00002CB4
    adds r0, r1, #0x0
    eors r2, r0
    ldr r1, _0805E5DC @ =0x0000B406
    adds r0, r4, r1
    ldrh r1, [r0, #0x00]
    eors r1, r2
    negs r0, r1
    orrs r0, r1
    cmp r0, #0x00
    blt _0805E5E0
    movs r0, #0x01
    b _0805E5E2
    .byte 0x00, 0x00
_0805E5D0: .4byte 0x02033780
_0805E5D4: .4byte 0x0000B404
_0805E5D8: .4byte 0x00002CB4
_0805E5DC: .4byte 0x0000B406
_0805E5E0:
    movs r0, #0x00
_0805E5E2:
    pop {r4, r5}
    pop {r1}
    bx r1
    thumb_func_start sub_805E5E8
sub_805E5E8:
    ldr r1, _0805E5FC @ =0x02033780
    movs r0, #0x00
    ldr r3, _0805E600 @ =0x0000B407
    movs r2, #0x00
_0805E5F0:
    strb r2, [r1, #0x00]
    adds r1, #0x01
    adds r0, #0x01
    cmp r0, r3
    bls _0805E5F0
    bx lr
_0805E5FC: .4byte 0x02033780
_0805E600: .4byte 0x0000B407
    .byte 0x82, 0x1D, 0x04, 0x23, 0x10, 0x78, 0x08, 0x70, 0x01, 0x32, 0x01, 0x31, 0x01, 0x3B, 0x00, 0x2B
    .byte 0xF8, 0xDA, 0x70, 0x47, 0x82, 0x1D, 0x04, 0x23, 0x08, 0x78, 0x10, 0x70, 0x01, 0x31, 0x01, 0x32
    .byte 0x01, 0x3B, 0x00, 0x2B, 0xF8, 0xDA, 0x70, 0x47, 0x02, 0x1C, 0x0F, 0x32, 0x0F, 0x23, 0x10, 0x78
    .byte 0x08, 0x70, 0x01, 0x32, 0x01, 0x31, 0x01, 0x3B, 0x00, 0x2B, 0xF8, 0xDA, 0x70, 0x47, 0x00, 0x00
    .byte 0x02, 0x1C, 0x0F, 0x32, 0x0F, 0x23, 0x08, 0x78, 0x10, 0x70, 0x01, 0x31, 0x01, 0x32, 0x01, 0x3B
    .byte 0x00, 0x2B, 0xF8, 0xDA, 0x70, 0x47, 0x00, 0x00, 0x30, 0xB5, 0x0E, 0x4C, 0x20, 0x1C, 0x0E, 0x21
    .byte 0xFF, 0xF7, 0x7E, 0xFE, 0x23, 0x1C, 0x0C, 0x4D, 0x00, 0x22, 0x00, 0x21, 0x18, 0x78, 0x10, 0x18
    .byte 0x00, 0x04, 0x02, 0x0C, 0x01, 0x33, 0x48, 0x1C, 0x00, 0x04, 0x01, 0x0C, 0xA9, 0x42, 0xF5, 0xDB
    .byte 0x06, 0x49, 0x08, 0x1C, 0x42, 0x40, 0x06, 0x49, 0x60, 0x18, 0x00, 0x88, 0x90, 0x42, 0x09, 0xD0
    .byte 0x01, 0x20, 0x08, 0xE0, 0x80, 0x37, 0x03, 0x02, 0x04, 0xB4, 0x00, 0x00, 0xB4, 0x2C, 0x00, 0x00
    .byte 0x06, 0xB4, 0x00, 0x00, 0x00, 0x20, 0x30, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x30, 0xB5, 0x0E, 0x4C
    .byte 0x23, 0x1C, 0x0E, 0x4D, 0x00, 0x21, 0x00, 0x22, 0x18, 0x78, 0x08, 0x18, 0x00, 0x04, 0x01, 0x0C
    .byte 0x01, 0x33, 0x50, 0x1C, 0x00, 0x04, 0x02, 0x0C, 0xAA, 0x42, 0xF5, 0xDB, 0x08, 0x4A, 0x10, 0x1C
    .byte 0x41, 0x40, 0x08, 0x4A, 0xA0, 0x18, 0x01, 0x80, 0x20, 0x1C, 0x0E, 0x21, 0xFF, 0xF7, 0x54, 0xFE
    .byte 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x80, 0x37, 0x03, 0x02, 0x04, 0xB4, 0x00, 0x00
    .byte 0xB4, 0x2C, 0x00, 0x00, 0x06, 0xB4, 0x00, 0x00
    thumb_func_start sub_805E6FC
sub_805E6FC:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x004
    adds r6, r0, #0x0
    lsls r1, r1, #0x18
    lsrs r7, r1, #0x18
    movs r0, #0x02
    mov r10, r0
    bl m4aSoundVSyncOff
    ldr r0, _0805E7C8 @ =0x04000200
    ldrh r0, [r0, #0x00]
    str r0, [sp, #0x000]
    movs r1, #0x80
    lsls r1, r1, #0x09
    movs r0, #0x00
    bl irq_updateMask
    ldr r1, _0805E7CC @ =0x040000B0
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805E7D0 @ =0x0000C5FF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805E7D4 @ =0x00007FFF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r0, [r1, #0x0A]
    ldr r0, [r1, #0x08]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r0, #0x00
    bge _0805E74C
_0805E744:
    ldr r0, [r1, #0x08]
    ands r0, r2
    cmp r0, #0x00
    bne _0805E744
_0805E74C:
    ldr r1, _0805E7D8 @ =0x040000BC
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805E7D0 @ =0x0000C5FF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805E7D4 @ =0x00007FFF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r0, [r1, #0x0A]
    ldr r0, [r1, #0x08]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r0, #0x00
    bge _0805E772
_0805E76A:
    ldr r0, [r1, #0x08]
    ands r0, r2
    cmp r0, #0x00
    bne _0805E76A
_0805E772:
    ldr r1, _0805E7DC @ =0x040000C8
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805E7D0 @ =0x0000C5FF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805E7D4 @ =0x00007FFF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r0, [r1, #0x0A]
    ldr r0, [r1, #0x08]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r0, #0x00
    bge _0805E798
_0805E790:
    ldr r0, [r1, #0x08]
    ands r0, r2
    cmp r0, #0x00
    bne _0805E790
_0805E798:
    ldr r1, _0805E7E0 @ =0x040000D4
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805E7D0 @ =0x0000C5FF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r2, [r1, #0x0A]
    ldr r0, _0805E7D4 @ =0x00007FFF
    ands r0, r2
    strh r0, [r1, #0x0A]
    ldrh r0, [r1, #0x0A]
    ldr r0, [r1, #0x08]
    movs r2, #0x80
    lsls r2, r2, #0x18
    cmp r0, #0x00
    bge _0805E7BE
_0805E7B6:
    ldr r0, [r1, #0x08]
    ands r0, r2
    cmp r0, #0x00
    bne _0805E7B6
_0805E7BE:
    ldr r1, _0805E7E4 @ =0x04000204
    mov r9, r1
    ldr r4, _0805E7E8 @ =0x09FE2FFE
    mov r8, r4
    b _0805E7FA
_0805E7C8: .4byte 0x04000200
_0805E7CC: .4byte 0x040000B0
_0805E7D0: .4byte 0x0000C5FF
_0805E7D4: .4byte 0x00007FFF
_0805E7D8: .4byte 0x040000BC
_0805E7DC: .4byte 0x040000C8
_0805E7E0: .4byte 0x040000D4
_0805E7E4: .4byte 0x04000204
_0805E7E8: .4byte 0x09FE2FFE
_0805E7EC:
    mov r0, r10
    subs r0, #0x01
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    mov r10, r0
    cmp r0, #0xFF
    beq _0805E88A
_0805E7FA:
    ldr r0, _0805E80C @ =0x02032B50
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    beq _0805E810
    cmp r0, #0x02
    beq _0805E830
_0805E806:
    movs r4, #0x00
    b _0805E7EC
    .byte 0x00, 0x00
_0805E80C: .4byte 0x02032B50
_0805E810:
    ldr r0, _0805E82C @ =0x03006A84
    ldr r2, [r0, #0x00]
    adds r0, r7, #0x0
    adds r1, r6, #0x0
    bl _call_via_r2
    adds r0, r7, #0x0
    adds r1, r6, #0x0
    bl VerifyFlashSector
    movs r4, #0x01
    cmp r0, #0x00
    beq _0805E88A
    b _0805E806
_0805E82C: .4byte 0x03006A84
_0805E830:
    adds r3, r6, #0x0
    lsls r0, r7, #0x0C
    movs r1, #0x86
    lsls r1, r1, #0x14
    adds r2, r0, r1
    movs r4, #0x80
    lsls r4, r4, #0x03
    adds r1, r4, #0x0
    mov r4, r9
    strh r1, [r4, #0x00]
    movs r1, #0x20
    mov r4, r8
    strh r1, [r4, #0x00]
    adds r4, r0, #0x0
    movs r1, #0x80
    lsls r1, r1, #0x04
_0805E850:
    ldrh r0, [r3, #0x00]
    strh r0, [r2, #0x00]
    adds r3, #0x02
    adds r2, #0x02
    subs r1, #0x01
    cmp r1, #0x00
    bne _0805E850
    mov r0, r8
    strh r1, [r0, #0x00]
    ldr r1, _0805E8AC @ =0x00004494
    adds r0, r1, #0x0
    mov r1, r9
    strh r0, [r1, #0x00]
    adds r3, r6, #0x0
    movs r0, #0x86
    lsls r0, r0, #0x14
    adds r2, r4, r0
    movs r4, #0x00
    ldr r5, _0805E8B0 @ =0x000007FF
_0805E876:
    ldrh r1, [r2, #0x00]
    ldrh r0, [r3, #0x00]
    adds r3, #0x02
    adds r2, #0x02
    cmp r1, r0
    bne _0805E806
    adds r4, #0x01
    cmp r4, r5
    ble _0805E876
    movs r4, #0x01
_0805E88A:
    bl main_waitVBlankFlag
    movs r0, #0x02
    ldr r1, [sp, #0x000]
    bl irq_updateMask
    bl m4aSoundVSyncOn
    adds r0, r4, #0x0
    add sp, #0x004
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
_0805E8AC: .4byte 0x00004494
_0805E8B0: .4byte 0x000007FF
    thumb_func_start sub_805E8B4
sub_805E8B4:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    mov r9, r0
    movs r0, #0x00
    mov r8, r0
    movs r4, #0x00
    ldr r7, _0805E8E8 @ =0x02029400
    mov r12, r7
    ldr r1, _0805E8EC @ =0x07FF0000
    mov r10, r1
_0805E8D2:
    lsls r0, r4, #0x18
    lsrs r1, r0, #0x18
    ldr r0, _0805E8F0 @ =0x02032B50
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    beq _0805E8F4
    cmp r0, #0x02
    beq _0805E906
    adds r6, r4, #0x1
    b _0805E926
    .byte 0x00, 0x00
_0805E8E8: .4byte 0x02029400
_0805E8EC: .4byte 0x07FF0000
_0805E8F0: .4byte 0x02032B50
_0805E8F4:
    adds r0, r1, #0x0
    movs r1, #0x00
    mov r2, r12
    movs r3, #0x80
    lsls r3, r3, #0x05
    bl ReadFlash
    adds r6, r4, #0x1
    b _0805E926
_0805E906:
    adds r3, r7, #0x0
    lsls r0, r1, #0x0C
    movs r2, #0x86
    lsls r2, r2, #0x14
    adds r1, r0, r2
    movs r2, #0x00
    movs r5, #0x80
    lsls r5, r5, #0x04
    adds r6, r4, #0x1
_0805E918:
    ldrh r0, [r1, #0x00]
    strh r0, [r3, #0x00]
    adds r1, #0x02
    adds r3, #0x02
    adds r2, #0x01
    cmp r2, r5
    bcc _0805E918
_0805E926:
    ldrh r5, [r7, #0x00]
    adds r1, r7, #0x2
    movs r2, #0x00
    movs r3, #0x00
    subs r0, r1, #0x2
    mov r12, r0
    mov r0, r10
    lsrs r4, r0, #0x10
_0805E936:
    ldrh r0, [r1, #0x00]
    adds r0, r2, r0
    lsls r0, r0, #0x10
    lsrs r2, r0, #0x10
    adds r1, #0x02
    adds r3, #0x01
    cmp r3, r4
    bcc _0805E936
    ldr r1, _0805E97C @ =0x00002CB4
    adds r0, r1, #0x0
    eors r2, r0
    movs r0, #0x00
    cmp r5, r2
    bne _0805E954
    movs r0, #0x01
_0805E954:
    cmp r0, #0x00
    beq _0805E966
    ldrh r1, [r7, #0x04]
    ldrh r0, [r7, #0x06]
    cmp r0, r9
    bne _0805E966
    cmp r1, r8
    bls _0805E966
    mov r8, r1
_0805E966:
    adds r4, r6, #0x0
    cmp r4, #0x0F
    ble _0805E8D2
    mov r0, r8
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
_0805E97C: .4byte 0x00002CB4
    thumb_func_start sub_805E980
sub_805E980:
    push {r4, lr}
    lsls r1, r1, #0x10
    ldr r2, _0805E9B4 @ =0xFFFE0000
    adds r1, r1, r2
    adds r2, r0, #0x2
    movs r3, #0x00
    movs r4, #0x00
    lsrs r1, r1, #0x11
    cmp r3, r1
    bcs _0805E9A4
_0805E994:
    ldrh r0, [r2, #0x00]
    adds r0, r3, r0
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    adds r2, #0x02
    adds r4, #0x01
    cmp r4, r1
    bcc _0805E994
_0805E9A4:
    ldr r1, _0805E9B8 @ =0x00002CB4
    adds r0, r1, #0x0
    eors r3, r0
    adds r0, r3, #0x0
    pop {r4}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805E9B4: .4byte 0xFFFE0000
_0805E9B8: .4byte 0x00002CB4
    thumb_func_start sub_805E9BC
sub_805E9BC:
    push {r4, r5, lr}
    lsls r1, r1, #0x10
    ldrh r5, [r0, #0x00]
    ldr r2, _0805E9F0 @ =0xFFFE0000
    adds r1, r1, r2
    adds r2, r0, #0x2
    movs r3, #0x00
    movs r4, #0x00
    lsrs r1, r1, #0x11
    cmp r3, r1
    bcs _0805E9E2
_0805E9D2:
    ldrh r0, [r2, #0x00]
    adds r0, r3, r0
    lsls r0, r0, #0x10
    lsrs r3, r0, #0x10
    adds r2, #0x02
    adds r4, #0x01
    cmp r4, r1
    bcc _0805E9D2
_0805E9E2:
    ldr r1, _0805E9F4 @ =0x00002CB4
    adds r0, r1, #0x0
    eors r3, r0
    cmp r5, r3
    beq _0805E9F8
    movs r0, #0x00
    b _0805E9FA
_0805E9F0: .4byte 0xFFFE0000
_0805E9F4: .4byte 0x00002CB4
_0805E9F8:
    movs r0, #0x01
_0805E9FA:
    pop {r4, r5}
    pop {r1}
    bx r1
    thumb_func_start sub_805EA00
sub_805EA00:
    push {r4, r5, lr}
    adds r5, r0, #0x0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    lsls r2, r2, #0x10
    lsrs r2, r2, #0x10
    lsls r4, r3, #0x10
    lsrs r3, r4, #0x10
    ldr r0, _0805EA20 @ =0x02032B50
    ldrb r0, [r0, #0x00]
    cmp r0, #0x01
    beq _0805EA24
    cmp r0, #0x02
    beq _0805EA30
    b _0805EA54
    .byte 0x00, 0x00
_0805EA20: .4byte 0x02032B50
_0805EA24:
    adds r0, r1, #0x0
    adds r1, r2, #0x0
    adds r2, r5, #0x0
    bl ReadFlash
    b _0805EA54
_0805EA30:
    adds r3, r5, #0x0
    lsls r1, r1, #0x0C
    movs r5, #0x86
    lsls r5, r5, #0x14
    adds r0, r2, r5
    adds r1, r1, r0
    movs r2, #0x00
    lsrs r0, r4, #0x11
    cmp r2, r0
    bcs _0805EA54
    adds r4, r0, #0x0
_0805EA46:
    ldrh r0, [r1, #0x00]
    strh r0, [r3, #0x00]
    adds r1, #0x02
    adds r3, #0x02
    adds r2, #0x01
    cmp r2, r4
    bcc _0805EA46
_0805EA54:
    pop {r4, r5}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805EA5C
sub_805EA5C:
    push {r4, r5, r6, lr}
    ldr r0, _0805EAFC @ =0x02032B50
    mov r12, r0
    movs r1, #0x00
    mov r3, r12
    adds r3, #0x0C
    movs r2, #0x01
    negs r2, r2
_0805EA6C:
    lsls r0, r1, #0x18
    lsrs r0, r0, #0x18
    adds r0, r3, r0
    strb r2, [r0, #0x00]
    adds r1, #0x01
    cmp r1, #0x01
    ble _0805EA6C
    movs r1, #0x00
    mov r4, r12
    adds r4, #0x18
    mov r5, r12
    adds r5, #0x1A
    mov r6, r12
    adds r6, #0x1B
    mov r2, r12
    adds r2, #0x0E
    movs r3, #0x01
    negs r3, r3
_0805EA90:
    lsls r0, r1, #0x18
    lsrs r0, r0, #0x18
    adds r0, r2, r0
    strb r3, [r0, #0x00]
    adds r1, #0x01
    cmp r1, #0x09
    ble _0805EA90
    movs r1, #0x00
    adds r2, r4, #0x0
    movs r3, #0x01
    negs r3, r3
_0805EAA6:
    lsls r0, r1, #0x18
    lsrs r0, r0, #0x18
    adds r0, r2, r0
    strb r3, [r0, #0x00]
    adds r1, #0x01
    cmp r1, #0x01
    ble _0805EAA6
    movs r1, #0x00
    adds r2, r5, #0x0
    movs r3, #0x01
    negs r3, r3
_0805EABC:
    lsls r0, r1, #0x18
    lsrs r0, r0, #0x18
    adds r0, r2, r0
    strb r3, [r0, #0x00]
    adds r1, #0x01
    cmp r1, #0x00
    ble _0805EABC
    movs r1, #0x00
    adds r2, r6, #0x0
    movs r3, #0x01
    negs r3, r3
_0805EAD2:
    lsls r0, r1, #0x18
    lsrs r0, r0, #0x18
    adds r0, r2, r0
    strb r3, [r0, #0x00]
    adds r1, #0x01
    cmp r1, #0x00
    ble _0805EAD2
    ldr r1, _0805EB00 @ =0x0000FFFF
    movs r3, #0x00
    movs r2, #0x00
    mov r4, r12
    strh r1, [r4, #0x04]
    movs r0, #0x10
    strb r0, [r4, #0x1C]
    strh r1, [r4, #0x06]
    strb r0, [r4, #0x1D]
    strh r2, [r4, #0x08]
    strb r3, [r4, #0x1E]
    pop {r4, r5, r6}
    pop {r0}
    bx r0
_0805EAFC: .4byte 0x02032B50
_0805EB00: .4byte 0x0000FFFF
    thumb_func_start sub_805EB04
sub_805EB04:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x00C
    adds r7, r1, #0x0
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    mov r8, r0
    ldr r5, _0805EB50 @ =0x02032B50
    adds r0, r5, #0x0
    mov r1, r8
    bl sub_805F04C
    lsls r0, r0, #0x10
    lsrs r0, r0, #0x10
    str r0, [sp, #0x004]
    movs r0, #0x02
    mov r9, r0
    mov r1, r8
    strh r1, [r7, #0x06]
    ldrh r0, [r7, #0x04]
    adds r0, #0x01
    strh r0, [r7, #0x04]
    adds r0, r5, #0x0
    mov r1, r8
    bl sub_805EC3C
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    str r0, [sp, #0x000]
    movs r0, #0x0F
    mov r3, r8
    ands r3, r0
    movs r0, #0x01
    mov r10, r0
    b _0805EB78
_0805EB50: .4byte 0x02032B50
_0805EB54:
    mov r1, r10
    lsls r1, r4
    ldrh r0, [r5, #0x06]
    bics r0, r1
    strh r0, [r5, #0x06]
    ldrh r0, [r5, #0x08]
    orrs r1, r0
    strh r1, [r5, #0x08]
    ldrb r0, [r5, #0x1E]
    adds r0, #0x01
    strb r0, [r5, #0x1E]
    mov r0, r9
    subs r0, #0x01
    lsls r0, r0, #0x18
    lsrs r0, r0, #0x18
    mov r9, r0
    cmp r0, #0xFF
    beq _0805EC28
_0805EB78:
    adds r0, r5, #0x0
    str r3, [sp, #0x008]
    bl sub_805EE6C
    adds r4, r0, #0x0
    lsls r4, r4, #0x18
    lsrs r4, r4, #0x18
    ldrh r0, [r5, #0x20]
    adds r0, #0x01
    strh r0, [r7, #0x02]
    adds r0, r7, #0x0
    ldr r1, [sp, #0x004]
    bl sub_805E980
    strh r0, [r7, #0x00]
    lsls r6, r4, #0x18
    lsrs r4, r6, #0x18
    adds r0, r7, #0x0
    adds r1, r4, #0x0
    bl sub_805E6FC
    mov r12, r0
    ldr r3, [sp, #0x008]
    cmp r0, #0x00
    beq _0805EB54
    ldr r1, [sp, #0x000]
    lsls r0, r1, #0x18
    cmp r0, #0x00
    blt _0805EBBE
    lsrs r0, r0, #0x18
    mov r1, r10
    lsls r1, r0
    ldrh r0, [r5, #0x04]
    orrs r1, r0
    strh r1, [r5, #0x04]
_0805EBBE:
    mov r1, r10
    lsls r1, r4
    mvns r1, r1
    ldrh r2, [r5, #0x04]
    adds r0, r1, #0x0
    ands r0, r2
    strh r0, [r5, #0x04]
    ldrh r0, [r5, #0x06]
    ands r1, r0
    strh r1, [r5, #0x06]
    ldr r1, _0805EBEC @ =0x0000FFF0
    adds r0, r1, #0x0
    mov r1, r8
    ands r1, r0
    cmp r1, #0x40
    beq _0805EC0E
    cmp r1, #0x40
    bgt _0805EBF0
    cmp r1, #0x10
    beq _0805EBFE
    cmp r1, #0x20
    beq _0805EC06
    b _0805EC28
_0805EBEC: .4byte 0x0000FFF0
_0805EBF0:
    cmp r1, #0x80
    beq _0805EC16
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r1, r0
    beq _0805EC1E
    b _0805EC28
_0805EBFE:
    asrs r1, r6, #0x18
    adds r0, r5, #0x0
    adds r0, #0x0C
    b _0805EC24
_0805EC06:
    asrs r1, r6, #0x18
    adds r0, r5, #0x0
    adds r0, #0x0E
    b _0805EC24
_0805EC0E:
    asrs r1, r6, #0x18
    adds r0, r5, #0x0
    adds r0, #0x18
    b _0805EC24
_0805EC16:
    asrs r1, r6, #0x18
    adds r0, r5, #0x0
    adds r0, #0x1A
    b _0805EC24
_0805EC1E:
    asrs r1, r6, #0x18
    adds r0, r5, #0x0
    adds r0, #0x1B
_0805EC24:
    adds r0, r0, r3
    strb r1, [r0, #0x00]
_0805EC28:
    mov r0, r12
    add sp, #0x00C
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
    thumb_func_start sub_805EC3C
sub_805EC3C:
    adds r3, r0, #0x0
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    ldr r2, _0805EC58 @ =0x0000FFF0
    ands r2, r1
    cmp r2, #0x40
    beq _0805EC7E
    cmp r2, #0x40
    bgt _0805EC5C
    cmp r2, #0x10
    beq _0805EC6A
    cmp r2, #0x20
    beq _0805EC74
    b _0805ECA0
_0805EC58: .4byte 0x0000FFF0
_0805EC5C:
    cmp r2, #0x80
    beq _0805EC88
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r2, r0
    beq _0805EC92
    b _0805ECA0
_0805EC6A:
    movs r0, #0x0F
    ands r1, r0
    adds r0, r3, #0x0
    adds r0, #0x0C
    b _0805EC9A
_0805EC74:
    movs r0, #0x0F
    ands r1, r0
    adds r0, r3, #0x0
    adds r0, #0x0E
    b _0805EC9A
_0805EC7E:
    movs r0, #0x0F
    ands r1, r0
    adds r0, r3, #0x0
    adds r0, #0x18
    b _0805EC9A
_0805EC88:
    movs r0, #0x0F
    ands r1, r0
    adds r0, r3, #0x0
    adds r0, #0x1A
    b _0805EC9A
_0805EC92:
    movs r0, #0x0F
    ands r1, r0
    adds r0, r3, #0x0
    adds r0, #0x1B
_0805EC9A:
    adds r0, r0, r1
    ldrb r0, [r0, #0x00]
    b _0805ECA2
_0805ECA0:
    movs r0, #0xFF
_0805ECA2:
    lsls r0, r0, #0x18
    asrs r0, r0, #0x18
    bx lr
    thumb_func_start sub_805ECA8
sub_805ECA8:
    push {r4, lr}
    adds r4, r0, #0x0
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    lsls r2, r2, #0x18
    lsrs r2, r2, #0x18
    ldr r3, _0805ECCC @ =0x0000FFF0
    ands r3, r1
    cmp r3, #0x40
    beq _0805ECF2
    cmp r3, #0x40
    bgt _0805ECD0
    cmp r3, #0x10
    beq _0805ECDE
    cmp r3, #0x20
    beq _0805ECE8
    b _0805ED12
    .byte 0x00, 0x00
_0805ECCC: .4byte 0x0000FFF0
_0805ECD0:
    cmp r3, #0x80
    beq _0805ECFC
    movs r0, #0x80
    lsls r0, r0, #0x01
    cmp r3, r0
    beq _0805ED06
    b _0805ED12
_0805ECDE:
    movs r0, #0x0F
    ands r1, r0
    adds r0, r4, #0x0
    adds r0, #0x0C
    b _0805ED0E
_0805ECE8:
    movs r0, #0x0F
    ands r1, r0
    adds r0, r4, #0x0
    adds r0, #0x0E
    b _0805ED0E
_0805ECF2:
    movs r0, #0x0F
    ands r1, r0
    adds r0, r4, #0x0
    adds r0, #0x18
    b _0805ED0E
_0805ECFC:
    movs r0, #0x0F
    ands r1, r0
    adds r0, r4, #0x0
    adds r0, #0x1A
    b _0805ED0E
_0805ED06:
    movs r0, #0x0F
    ands r1, r0
    adds r0, r4, #0x0
    adds r0, #0x1B
_0805ED0E:
    adds r0, r0, r1
    strb r2, [r0, #0x00]
_0805ED12:
    pop {r4}
    pop {r0}
    bx r0
    thumb_func_start sub_805ED18
sub_805ED18:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    adds r4, r0, #0x0
    adds r6, r1, #0x0
    lsls r2, r2, #0x10
    lsrs r5, r2, #0x10
    lsls r3, r3, #0x18
    lsrs r7, r3, #0x18
    movs r0, #0x00
    mov r8, r0
    ldr r0, _0805ED44 @ =0x0000FFF0
    ands r0, r5
    cmp r0, #0x40
    beq _0805ED54
    cmp r0, #0x40
    bgt _0805ED48
    cmp r0, #0x10
    beq _0805ED4E
    cmp r0, #0x20
    beq _0805ED54
    b _0805ED58
_0805ED44: .4byte 0x0000FFF0
_0805ED48:
    cmp r0, #0x80
    beq _0805ED54
    b _0805ED58
_0805ED4E:
    movs r0, #0x07
    strh r0, [r6, #0x08]
    b _0805ED58
_0805ED54:
    movs r0, #0x09
    strh r0, [r6, #0x12]
_0805ED58:
    ldr r0, _0805ED70 @ =0x0000FFF0
    ands r0, r5
    cmp r0, #0x40
    beq _0805ED78
    cmp r0, #0x40
    bgt _0805ED74
    cmp r0, #0x10
    beq _0805ED78
    cmp r0, #0x20
    beq _0805ED78
    b _0805EDB4
    .byte 0x00, 0x00
_0805ED70: .4byte 0x0000FFF0
_0805ED74:
    cmp r0, #0x80
    bne _0805EDB4
_0805ED78:
    ldr r0, _0805ED90 @ =0x0000FFF0
    ands r0, r5
    cmp r0, #0x40
    beq _0805EDA4
    cmp r0, #0x40
    bgt _0805ED94
    cmp r0, #0x10
    beq _0805ED9A
    cmp r0, #0x20
    beq _0805EDA4
    b _0805EDAA
    .byte 0x00, 0x00
_0805ED90: .4byte 0x0000FFF0
_0805ED94:
    cmp r0, #0x80
    beq _0805EDA4
    b _0805EDAA
_0805ED9A:
    ldr r1, _0805EDA0 @ =0x00000BF4
    b _0805EDAC
    .byte 0x00, 0x00
_0805EDA0: .4byte 0x00000BF4
_0805EDA4:
    movs r1, #0x80
    lsls r1, r1, #0x05
    b _0805EDAC
_0805EDAA:
    movs r1, #0x00
_0805EDAC:
    adds r0, r6, #0x0
    bl sub_805E9BC
    b _0805EDB6
_0805EDB4:
    movs r0, #0x00
_0805EDB6:
    cmp r0, #0x00
    beq _0805EE40
    movs r6, #0xFF
    cmp r5, #0x00
    beq _0805EE32
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl sub_805EC3C
    lsls r0, r0, #0x18
    lsrs r6, r0, #0x18
    lsls r2, r6, #0x18
    asrs r1, r2, #0x18
    movs r0, #0x01
    negs r0, r0
    cmp r1, r0
    bne _0805EDDE
    movs r0, #0x01
    mov r8, r0
    b _0805EDF2
_0805EDDE:
    lsrs r0, r2, #0x18
    bl sub_805F1CC
    cmp r0, #0x00
    beq _0805EDEC
    movs r0, #0x01
    mov r8, r0
_0805EDEC:
    mov r0, r8
    cmp r0, #0x00
    beq _0805EE3C
_0805EDF2:
    lsls r2, r7, #0x18
    asrs r2, r2, #0x18
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl sub_805ECA8
    ldrb r3, [r4, #0x1C]
    subs r0, r3, #0x1
    strb r0, [r4, #0x1C]
    movs r5, #0x01
    adds r1, r5, #0x0
    lsls r1, r7
    mvns r1, r1
    ldrh r0, [r4, #0x04]
    adds r2, r1, #0x0
    ands r2, r0
    strh r2, [r4, #0x04]
    ldrb r0, [r4, #0x1D]
    subs r0, #0x01
    strb r0, [r4, #0x1D]
    ldrh r0, [r4, #0x06]
    ands r1, r0
    strh r1, [r4, #0x06]
    lsls r1, r6, #0x18
    cmp r1, #0x00
    blt _0805EE32
    strb r3, [r4, #0x1C]
    lsrs r1, r1, #0x18
    adds r0, r5, #0x0
    lsls r0, r1
    orrs r0, r2
    strh r0, [r4, #0x04]
_0805EE32:
    mov r0, r8
    cmp r0, #0x00
    beq _0805EE3C
    adds r0, r6, #0x0
    b _0805EE42
_0805EE3C:
    adds r0, r7, #0x0
    b _0805EE42
_0805EE40:
    movs r0, #0xFF
_0805EE42:
    lsls r2, r0, #0x18
    asrs r1, r2, #0x18
    movs r0, #0x01
    negs r0, r0
    cmp r1, r0
    beq _0805EE60
    ldrb r0, [r4, #0x1D]
    subs r0, #0x01
    strb r0, [r4, #0x1D]
    lsrs r0, r2, #0x18
    movs r1, #0x01
    lsls r1, r0
    ldrh r0, [r4, #0x06]
    bics r0, r1
    strh r0, [r4, #0x06]
_0805EE60:
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
    .byte 0x00, 0x00
    thumb_func_start sub_805EE6C
sub_805EE6C:
    push {r4, r5, r6, lr}
    adds r5, r0, #0x0
    movs r3, #0xFF
    movs r0, #0x00
    strh r0, [r5, #0x20]
    ldrh r0, [r5, #0x06]
    cmp r0, #0x00
    beq _0805EE98
    movs r4, #0x00
    adds r2, r0, #0x0
    movs r6, #0x01
_0805EE82:
    lsls r0, r4, #0x18
    lsrs r1, r0, #0x18
    adds r0, r6, #0x0
    lsls r0, r1
    ands r0, r2
    cmp r0, #0x00
    beq _0805EE92
    adds r3, r1, #0x0
_0805EE92:
    adds r4, #0x01
    cmp r4, #0x0F
    ble _0805EE82
_0805EE98:
    lsls r0, r3, #0x18
    asrs r0, r0, #0x18
    movs r1, #0x01
    negs r1, r1
    cmp r0, r1
    bne _0805EEEA
    ldrh r0, [r5, #0x04]
    cmp r0, #0x00
    beq _0805EEBC
    movs r4, #0x0F
_0805EEAC:
    adds r0, r5, #0x0
    bl sub_805F200
    lsls r0, r0, #0x18
    lsrs r3, r0, #0x18
    subs r4, #0x01
    cmp r4, #0x00
    bge _0805EEAC
_0805EEBC:
    lsls r0, r3, #0x18
    asrs r0, r0, #0x18
    movs r1, #0x01
    negs r1, r1
    cmp r0, r1
    bne _0805EEEA
    ldrh r0, [r5, #0x08]
    cmp r0, #0x00
    beq _0805EEEA
    movs r4, #0x00
    adds r2, r0, #0x0
    movs r5, #0x01
_0805EED4:
    lsls r0, r4, #0x18
    lsrs r1, r0, #0x18
    adds r0, r5, #0x0
    lsls r0, r1
    ands r0, r2
    cmp r0, #0x00
    beq _0805EEE4
    adds r3, r1, #0x0
_0805EEE4:
    adds r4, #0x01
    cmp r4, #0x0F
    ble _0805EED4
_0805EEEA:
    lsls r0, r3, #0x18
    asrs r0, r0, #0x18
    pop {r4, r5, r6}
    pop {r1}
    bx r1
    thumb_func_start save_805EEF4
save_805EEF4:
    push {r4, lr}
    ldr r4, _0805EF0C @ =0x02032B50
    bl sub_805D9C8
    bl sub_805EA5C
    adds r0, r4, #0x0
    bl sub_805EFD8
    pop {r4}
    pop {r0}
    bx r0
_0805EF0C: .4byte 0x02032B50
    thumb_func_start sub_805EF10
sub_805EF10:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    mov r8, r1
    lsls r0, r0, #0x10
    lsrs r7, r0, #0x10
    ldr r5, _0805EF84 @ =0x02032B50
    adds r0, r5, #0x0
    adds r1, r7, #0x0
    bl sub_805EC3C
    lsls r6, r0, #0x18
    asrs r0, r6, #0x18
    mvns r0, r0
    lsrs r4, r0, #0x1F
    cmp r4, #0x00
    beq _0805EF78
    adds r0, r5, #0x0
    adds r1, r7, #0x0
    bl sub_805F04C
    adds r4, r0, #0x0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    lsrs r6, r6, #0x18
    mov r0, r8
    adds r1, r6, #0x0
    movs r2, #0x00
    adds r3, r4, #0x0
    bl sub_805EA00
    mov r0, r8
    adds r1, r4, #0x0
    bl sub_805E9BC
    adds r4, r0, #0x0
    cmp r4, #0x00
    bne _0805EF78
    movs r2, #0x01
    negs r2, r2
    adds r0, r5, #0x0
    adds r1, r7, #0x0
    bl sub_805ECA8
    movs r0, #0x01
    lsls r0, r6
    ldrh r1, [r5, #0x06]
    orrs r0, r1
    strh r0, [r5, #0x06]
    ldrb r0, [r5, #0x1D]
    adds r0, #0x01
    strb r0, [r5, #0x1D]
_0805EF78:
    adds r0, r4, #0x0
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
_0805EF84: .4byte 0x02032B50
    thumb_func_start sub_805EF88
sub_805EF88:
    push {r4, r5, r6, r7, lr}
    adds r6, r1, #0x0
    lsls r0, r0, #0x10
    lsrs r4, r0, #0x10
    ldr r7, _0805EFCC @ =0x02032B50
    adds r0, r7, #0x0
    adds r1, r4, #0x0
    bl sub_805F088
    lsls r5, r0, #0x18
    cmp r5, #0x00
    blt _0805EFD0
    adds r0, r7, #0x0
    adds r1, r4, #0x0
    bl sub_805F04C
    adds r4, r0, #0x0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    lsrs r1, r5, #0x18
    adds r0, r6, #0x0
    movs r2, #0x00
    adds r3, r4, #0x0
    bl sub_805EA00
    adds r0, r6, #0x0
    adds r1, r4, #0x0
    bl sub_805E9BC
    negs r1, r0
    orrs r1, r0
    lsrs r0, r1, #0x1F
    b _0805EFD2
    .byte 0x00, 0x00
_0805EFCC: .4byte 0x02032B50
_0805EFD0:
    movs r0, #0x00
_0805EFD2:
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    thumb_func_start sub_805EFD8
sub_805EFD8:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    mov r9, r0
    movs r0, #0x00
    mov r8, r0
    ldr r6, _0805F048 @ =0x02029400
_0805EFE8:
    bl main_frameProc
    mov r1, r8
    lsls r0, r1, #0x18
    lsrs r7, r0, #0x18
    adds r0, r6, #0x0
    adds r1, r7, #0x0
    movs r2, #0x00
    movs r3, #0x80
    lsls r3, r3, #0x05
    bl sub_805EA00
    ldrh r5, [r6, #0x06]
    mov r0, r9
    adds r1, r5, #0x0
    bl sub_805F04C
    adds r4, r0, #0x0
    lsls r4, r4, #0x10
    lsrs r4, r4, #0x10
    adds r0, r6, #0x0
    adds r1, r5, #0x0
    bl sub_805F198
    adds r0, r6, #0x0
    adds r1, r4, #0x0
    bl sub_805E9BC
    cmp r0, #0x00
    bne _0805F026
    movs r5, #0x00
_0805F026:
    mov r0, r9
    adds r1, r6, #0x0
    adds r2, r5, #0x0
    adds r3, r7, #0x0
    bl sub_805ED18
    movs r0, #0x01
    add r8, r0
    mov r1, r8
    cmp r1, #0x0F
    ble _0805EFE8
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0805F048: .4byte 0x02029400
    thumb_func_start sub_805F04C
sub_805F04C:
    lsls r1, r1, #0x10
    ldr r0, _0805F068 @ =0xFFF00000
    ands r0, r1
    lsrs r0, r0, #0x10
    cmp r0, #0x40
    beq _0805F07C
    cmp r0, #0x40
    bgt _0805F06C
    cmp r0, #0x10
    beq _0805F072
    cmp r0, #0x20
    beq _0805F07C
    b _0805F082
    .byte 0x00, 0x00
_0805F068: .4byte 0xFFF00000
_0805F06C:
    cmp r0, #0x80
    beq _0805F07C
    b _0805F082
_0805F072:
    ldr r0, _0805F078 @ =0x00000BF4
    b _0805F084
    .byte 0x00, 0x00
_0805F078: .4byte 0x00000BF4
_0805F07C:
    movs r0, #0x80
    lsls r0, r0, #0x05
    b _0805F084
_0805F082:
    movs r0, #0x00
_0805F084:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_805F088
sub_805F088:
    push {r4, r5, r6, r7, lr}
    mov r7, r10
    mov r6, r9
    mov r5, r8
    push {r5, r6, r7}
    add sp, #-0x008
    adds r7, r0, #0x0
    lsls r1, r1, #0x10
    lsrs r1, r1, #0x10
    mov r10, r1
    movs r0, #0x00
    mov r8, r0
    movs r1, #0xFF
    mov r9, r1
    movs r6, #0x00
_0805F0A6:
    lsls r0, r6, #0x18
    lsrs r5, r0, #0x18
    ldrh r1, [r7, #0x04]
    movs r0, #0x01
    lsls r0, r5
    ands r1, r0
    cmp r1, #0x00
    beq _0805F0DC
    mov r4, sp
    mov r0, sp
    adds r1, r5, #0x0
    movs r2, #0x00
    movs r3, #0x08
    bl sub_805EA00
    ldrh r0, [r4, #0x06]
    cmp r0, r10
    bne _0805F0DC
    ldrh r0, [r4, #0x04]
    cmp r0, r8
    bls _0805F0DC
    mov r8, r0
    mov r9, r5
    mov r0, r8
    strh r0, [r7, #0x22]
    ldrh r0, [r4, #0x02]
    strh r0, [r7, #0x20]
_0805F0DC:
    adds r6, #0x01
    cmp r6, #0x0F
    ble _0805F0A6
    mov r1, r9
    lsls r0, r1, #0x18
    asrs r0, r0, #0x18
    add sp, #0x008
    pop {r3, r4, r5}
    mov r8, r3
    mov r9, r4
    mov r10, r5
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    thumb_func_start sub_805F0F8
sub_805F0F8:
    push {r4, r5, r6, r7, lr}
    mov r7, r8
    push {r7}
    add sp, #-0x004
    movs r6, #0x00
    ldr r4, _0805F158 @ =0x02029400
    movs r0, #0x80
    lsls r0, r0, #0x05
    mov r8, r0
_0805F10A:
    movs r7, #0x00
    lsls r0, r6, #0x18
    lsrs r5, r0, #0x18
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    movs r2, #0x00
    mov r3, r8
    bl sub_805EA00
    adds r0, r4, #0x0
    mov r1, r8
    bl sub_805E9BC
    cmp r0, #0x00
    beq _0805F12A
    ldrh r7, [r4, #0x02]
_0805F12A:
    ldr r0, _0805F15C @ =0x0000FFFF
    str r0, [sp, #0x000]
    mov r0, sp
    adds r1, r4, #0x0
    ldr r2, _0805F160 @ =0x01000400
    bl CpuFastSet
    strh r7, [r4, #0x02]
    adds r0, r4, #0x0
    adds r1, r5, #0x0
    bl sub_805E6FC
    adds r6, #0x01
    cmp r6, #0x0F
    ble _0805F10A
    bl sub_805EA5C
    add sp, #0x004
    pop {r3}
    mov r8, r3
    pop {r4, r5, r6, r7}
    pop {r0}
    bx r0
_0805F158: .4byte 0x02029400
_0805F15C: .4byte 0x0000FFFF
_0805F160: .4byte 0x01000400
    thumb_func_start sub_805F164
sub_805F164:
    push {r4, lr}
    add sp, #-0x004
    movs r0, #0x00
    str r0, [sp, #0x000]
    ldr r1, _0805F190 @ =0x02029400
    ldr r2, _0805F194 @ =0x01000400
    mov r0, sp
    bl CpuFastSet
    movs r4, #0x00
_0805F178:
    lsls r1, r4, #0x18
    lsrs r1, r1, #0x18
    ldr r0, _0805F190 @ =0x02029400
    bl sub_805E6FC
    adds r4, #0x01
    cmp r4, #0x0F
    ble _0805F178
    add sp, #0x004
    pop {r4}
    pop {r0}
    bx r0
_0805F190: .4byte 0x02029400
_0805F194: .4byte 0x01000400
    thumb_func_start sub_805F198
sub_805F198:
    adds r2, r0, #0x0
    lsls r1, r1, #0x10
    ldr r0, _0805F1B4 @ =0xFFF00000
    ands r0, r1
    lsrs r0, r0, #0x10
    cmp r0, #0x40
    beq _0805F1C4
    cmp r0, #0x40
    bgt _0805F1B8
    cmp r0, #0x10
    beq _0805F1BE
    cmp r0, #0x20
    beq _0805F1C4
    b _0805F1C8
_0805F1B4: .4byte 0xFFF00000
_0805F1B8:
    cmp r0, #0x80
    beq _0805F1C4
    b _0805F1C8
_0805F1BE:
    movs r0, #0x07
    strh r0, [r2, #0x08]
    b _0805F1C8
_0805F1C4:
    movs r0, #0x09
    strh r0, [r2, #0x12]
_0805F1C8:
    bx lr
    .byte 0x00, 0x00
    thumb_func_start sub_805F1CC
sub_805F1CC:
    push {r4, lr}
    add sp, #-0x008
    adds r1, r0, #0x0
    lsls r1, r1, #0x18
    lsrs r1, r1, #0x18
    mov r4, sp
    mov r0, sp
    movs r2, #0x00
    movs r3, #0x08
    bl sub_805EA00
    ldr r1, _0805F1FC @ =0x02029400
    movs r2, #0x00
    ldrh r0, [r4, #0x04]
    ldrh r1, [r1, #0x04]
    cmp r0, r1
    bcs _0805F1F0
    movs r2, #0x01
_0805F1F0:
    adds r0, r2, #0x0
    add sp, #0x008
    pop {r4}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805F1FC: .4byte 0x02029400
    thumb_func_start sub_805F200
sub_805F200:
    push {r4, r5, r6, r7, lr}
    mov r7, r9
    mov r6, r8
    push {r6, r7}
    add sp, #-0x008
    adds r6, r0, #0x0
    ldr r7, _0805F25C @ =0x0000FFFF
    movs r0, #0xFF
    mov r8, r0
    movs r5, #0x00
    mov r9, sp
_0805F216:
    lsls r0, r5, #0x18
    lsrs r4, r0, #0x18
    ldrh r1, [r6, #0x04]
    movs r0, #0x01
    lsls r0, r4
    ands r1, r0
    cmp r1, #0x00
    beq _0805F240
    mov r0, sp
    adds r1, r4, #0x0
    movs r2, #0x00
    movs r3, #0x08
    bl sub_805EA00
    mov r1, r9
    ldrh r0, [r1, #0x02]
    cmp r0, r7
    bcs _0805F240
    adds r7, r0, #0x0
    mov r8, r4
    strh r7, [r6, #0x20]
_0805F240:
    adds r5, #0x01
    cmp r5, #0x0F
    ble _0805F216
    mov r1, r8
    lsls r0, r1, #0x18
    asrs r0, r0, #0x18
    add sp, #0x008
    pop {r3, r4}
    mov r8, r3
    mov r9, r4
    pop {r4, r5, r6, r7}
    pop {r1}
    bx r1
    .byte 0x00, 0x00
_0805F25C: .4byte 0x0000FFFF
