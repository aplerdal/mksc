.include "asm/macros.inc"

.syntax unified
.text
thumb_func_start sub_8001B30
sub_8001B30:
ldr r1, _08001B48 @ =0x03002C60
adds r3, r1, #0x0
movs r2, #0x00
adds r0, r1, #0x0
adds r0, #0x12
_08001B3A:
strh r2, [r0, #0x00]
subs r0, #0x02
cmp r0, r3
bge _08001B3A
movs r0, #0x01
strh r0, [r1, #0x0A]
bx lr
_08001B48: .4byte 0x03002C60
thumb_func_start sub_8001B4C
sub_8001B4C:
ldr r0, _08001B5C @ =0x03002C60
movs r2, #0x00
strh r2, [r0, #0x06]
strh r2, [r0, #0x08]
movs r1, #0x01
strh r1, [r0, #0x0A]
strh r2, [r0, #0x0C]
bx lr
_08001B5C: .4byte 0x03002C60
thumb_func_start sub_8001B60
sub_8001B60:
push {r4, r5, r6, r7, lr}
mov r7, r9
mov r6, r8
push {r6, r7}
adds r2, r0, #0x0
ldr r7, _08001B7C @ =0x03000010
movs r1, #0x01
ldr r0, _08001B80 @ =0x03002C80
ldrb r3, [r0, #0x01]
cmp r3, #0x01
bgt _08001B84
movs r3, #0x00
b _08001B94
.byte 0x00, 0x00
_08001B7C: .4byte 0x03000010
_08001B80: .4byte 0x03002C80
_08001B84:
subs r3, #0x01
cmp r3, #0x00
beq _08001B94
ldr r4, _08001C04 @ =0x00000D84
adds r0, r2, r4
ldr r0, [r0, #0x00]
cmp r0, #0x00
beq _08001B96
_08001B94:
movs r1, #0x00
_08001B96:
movs r0, #0x17
ldsb r0, [r7, r0]
cmp r3, r0
beq _08001BA0
movs r1, #0x01
_08001BA0:
ldr r0, _08001C08 @ =0x03000028
mov r9, r0
cmp r1, #0x00
bne _08001BAE
ldr r0, [r0, #0x00]
cmp r0, #0x00
bne _08001BF6
_08001BAE:
movs r1, #0x00
adds r6, r7, #0x4
movs r4, #0x0D
adds r4, r4, r7
mov r12, r4
movs r0, #0x12
adds r0, r0, r7
mov r8, r0
movs r5, #0x00
adds r2, r7, #0x0
adds r2, #0x09
movs r4, #0x04
_08001BC6:
adds r0, r7, r1
strb r5, [r0, #0x00]
adds r0, r2, r1
strb r4, [r0, #0x00]
adds r1, #0x01
cmp r1, #0x03
ble _08001BC6
movs r1, #0x00
movs r2, #0x00
mov r5, r12
mov r4, r8
_08001BDC:
adds r0, r6, r1
strb r2, [r0, #0x00]
adds r0, r5, r1
strb r2, [r0, #0x00]
adds r0, r4, r1
strb r2, [r0, #0x00]
adds r1, #0x01
cmp r1, #0x04
ble _08001BDC
strb r3, [r7, #0x17]
movs r0, #0x01
mov r1, r9
str r0, [r1, #0x00]
_08001BF6:
pop {r3, r4}
mov r8, r3
mov r9, r4
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_08001C04: .4byte 0x00000D84
_08001C08: .4byte 0x03000028
thumb_func_start sub_8001C0C
sub_8001C0C:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
adds r4, r0, #0x0
ldr r1, _08001C94 @ =0x000007D7
adds r0, r4, r1
ldrb r5, [r0, #0x00]
adds r1, #0x03
adds r0, r4, r1
ldrh r0, [r0, #0x00]
mov r8, r0
adds r1, #0x02
adds r0, r4, r1
ldrb r0, [r0, #0x00]
mov r9, r0
adds r1, #0x01
adds r0, r4, r1
ldrb r0, [r0, #0x00]
mov r10, r0
movs r2, #0x00
cmp r2, r5
bge _08001C58
movs r7, #0x07
ldr r0, _08001C98 @ =0x000007F4
adds r3, r4, r0
ldr r6, _08001C9C @ =0x0300002C
_08001C44:
ldm r3!, {r0}
adds r0, #0x4C
ldrb r1, [r0, #0x00]
adds r0, r7, #0x0
ands r0, r1
adds r1, r2, r6
strb r0, [r1, #0x00]
adds r2, #0x01
cmp r2, r5
blt _08001C44
_08001C58:
bl main_frameProc
adds r0, r4, #0x0
bl sub_8048C74
bl main_frameProc
ldr r1, _08001C94 @ =0x000007D7
adds r0, r4, r1
strb r5, [r0, #0x00]
adds r1, #0x03
adds r0, r4, r1
mov r1, r8
strh r1, [r0, #0x00]
ldr r1, _08001CA0 @ =0x000007DC
adds r0, r4, r1
mov r1, r9
strb r1, [r0, #0x00]
ldr r1, _08001CA4 @ =0x000007DD
adds r0, r4, r1
mov r1, r10
strb r1, [r0, #0x00]
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_08001C94: .4byte 0x000007D7
_08001C98: .4byte 0x000007F4
_08001C9C: .4byte 0x0300002C
_08001CA0: .4byte 0x000007DC
_08001CA4: .4byte 0x000007DD
thumb_func_start sub_8001CA8
sub_8001CA8:
push {r4, r5, r6, r7, lr}
mov r7, r8
push {r7}
add sp, #-0x020
adds r5, r0, #0x0
ldr r1, _08001D2C @ =0x000007D7
adds r0, r5, r1
ldrb r7, [r0, #0x00]
ldr r2, _08001D30 @ =0x000007DA
adds r0, r5, r2
ldrh r6, [r0, #0x00]
adds r1, #0x05
adds r0, r5, r1
ldrb r0, [r0, #0x00]
mov r8, r0
cmp r7, #0x00
beq _08001CE8
movs r2, #0x07
mov r12, r2
mov r3, sp
ldr r0, _08001D34 @ =0x000007F4
adds r2, r5, r0
adds r4, r7, #0x0
_08001CD6:
ldm r2!, {r0}
adds r0, #0x4C
ldrb r1, [r0, #0x00]
mov r0, r12
ands r0, r1
stm r3!, {r0}
subs r4, #0x01
cmp r4, #0x00
bne _08001CD6
_08001CE8:
adds r0, r5, #0x0
bl sub_8048C74
ldr r1, _08001D2C @ =0x000007D7
adds r0, r5, r1
strb r7, [r0, #0x00]
movs r2, #0x81
negs r2, r2
adds r0, r2, #0x0
ands r6, r0
adds r1, #0x03
adds r0, r5, r1
strh r6, [r0, #0x00]
ldr r2, _08001D38 @ =0x000007DC
adds r0, r5, r2
mov r1, r8
strb r1, [r0, #0x00]
ldr r4, _08001D3C @ =0x03000008
ldr r0, [r4, #0x00]
adds r0, #0x01
str r0, [r4, #0x00]
movs r2, #0xAF
lsls r2, r2, #0x03
adds r0, r5, r2
ldr r0, [r0, #0x00]
ldr r0, [r0, #0x0C]
bl sub_8032BC8
cmp r0, #0x00
beq _08001D40
ldr r0, [r4, #0x00]
bl track_getRetroTrack
b _08001D46
_08001D2C: .4byte 0x000007D7
_08001D30: .4byte 0x000007DA
_08001D34: .4byte 0x000007F4
_08001D38: .4byte 0x000007DC
_08001D3C: .4byte 0x03000008
_08001D40:
ldr r0, [r4, #0x00]
bl track_getMKSCTrack
_08001D46:
ldr r2, _08001D70 @ =0x000007DD
adds r1, r5, r2
strb r0, [r1, #0x00]
cmp r7, #0x00
beq _08001D64
mov r6, sp
adds r4, r7, #0x0
_08001D54:
ldm r6!, {r1}
adds r0, r5, #0x0
movs r2, #0x01
bl sub_804AE58
subs r4, #0x01
cmp r4, #0x00
bne _08001D54
_08001D64:
add sp, #0x020
pop {r3}
mov r8, r3
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_08001D70: .4byte 0x000007DD
thumb_func_start sub_8001D74
sub_8001D74:
push {r4, lr}
adds r4, r0, #0x0
bl sub_8001C0C
ldr r0, _08001DCC @ =0x000007DA
adds r2, r4, r0
ldrh r1, [r2, #0x00]
movs r0, #0x80
lsls r0, r0, #0x02
ands r0, r1
cmp r0, #0x00
beq _08001DA0
movs r0, #0x80
lsls r0, r0, #0x07
ands r0, r1
lsls r0, r0, #0x10
lsrs r0, r0, #0x10
movs r3, #0x82
lsls r3, r3, #0x08
adds r1, r3, #0x0
orrs r0, r1
strh r0, [r2, #0x00]
_08001DA0:
ldr r1, _08001DCC @ =0x000007DA
adds r0, r4, r1
ldrh r1, [r0, #0x00]
movs r0, #0x10
ands r0, r1
cmp r0, #0x00
beq _08001DB2
ldr r0, _08001DD0 @ =0x00008110
strh r0, [r2, #0x00]
_08001DB2:
ldr r0, _08001DD4 @ =0x0300002C
ldrb r1, [r0, #0x00]
adds r0, r4, #0x0
movs r2, #0x01
bl sub_804AE58
ldr r1, _08001DD8 @ =0x0203EBE4
movs r0, #0x00
strh r0, [r1, #0x00]
pop {r4}
pop {r0}
bx r0
.byte 0x00, 0x00
_08001DCC: .4byte 0x000007DA
_08001DD0: .4byte 0x00008110
_08001DD4: .4byte 0x0300002C
_08001DD8: .4byte 0x0203EBE4
thumb_func_start sub_8001DDC
sub_8001DDC:
push {r4, lr}
ldr r0, _08001DF8 @ =0x0203EBE8
ldr r4, [r0, #0x00]
ldr r1, _08001DFC @ =0x000011F8
adds r0, r4, r1
ldr r0, [r0, #0x00]
cmp r0, #0x01
beq _08001E2C
cmp r0, #0x01
bgt _08001E00
cmp r0, #0x00
beq _08001E0A
b _08001E92
.byte 0x00, 0x00
_08001DF8: .4byte 0x0203EBE8
_08001DFC: .4byte 0x000011F8
_08001E00:
cmp r0, #0x02
beq _08001E50
cmp r0, #0x03
beq _08001E74
b _08001E92
_08001E0A:
ldr r3, _08001E24 @ =0x000011F4
adds r2, r4, r3
ldr r0, [r2, #0x00]
asrs r0, r0, #0x02
adds r3, #0x0C
adds r1, r4, r3
ldrh r3, [r1, #0x00]
strh r0, [r1, #0x00]
ldr r0, [r2, #0x00]
negs r0, r0
asrs r0, r0, #0x02
ldr r2, _08001E28 @ =0x00001202
b _08001E8C
_08001E24: .4byte 0x000011F4
_08001E28: .4byte 0x00001202
_08001E2C:
ldr r3, _08001E48 @ =0x000011F4
adds r2, r4, r3
ldr r0, [r2, #0x00]
asrs r0, r0, #0x02
adds r3, #0x12
adds r1, r4, r3
ldrh r3, [r1, #0x00]
strh r0, [r1, #0x00]
ldr r0, [r2, #0x00]
negs r0, r0
asrs r0, r0, #0x02
ldr r2, _08001E4C @ =0x00001208
b _08001E8C
.byte 0x00, 0x00
_08001E48: .4byte 0x000011F4
_08001E4C: .4byte 0x00001208
_08001E50:
ldr r3, _08001E6C @ =0x000011F4
adds r2, r4, r3
ldr r0, [r2, #0x00]
asrs r0, r0, #0x02
adds r3, #0x18
adds r1, r4, r3
ldrh r3, [r1, #0x00]
strh r0, [r1, #0x00]
ldr r0, [r2, #0x00]
negs r0, r0
asrs r0, r0, #0x02
ldr r2, _08001E70 @ =0x0000120E
b _08001E8C
.byte 0x00, 0x00
_08001E6C: .4byte 0x000011F4
_08001E70: .4byte 0x0000120E
_08001E74:
ldr r3, _08001FA8 @ =0x000011F4
adds r2, r4, r3
ldr r0, [r2, #0x00]
asrs r0, r0, #0x02
adds r3, #0x1E
adds r1, r4, r3
ldrh r3, [r1, #0x00]
strh r0, [r1, #0x00]
ldr r0, [r2, #0x00]
negs r0, r0
asrs r0, r0, #0x02
ldr r2, _08001FAC @ =0x00001214
_08001E8C:
adds r1, r4, r2
ldrh r2, [r1, #0x00]
strh r0, [r1, #0x00]
_08001E92:
movs r2, #0x80
lsls r2, r2, #0x13
ldrh r1, [r2, #0x00]
movs r0, #0xC0
lsls r0, r0, #0x07
ands r0, r1
strh r0, [r2, #0x00]
ldr r3, _08001FB0 @ =0x000011FC
adds r0, r4, r3
ldrh r1, [r0, #0x00]
ldr r0, _08001FB4 @ =0x00009FFF
ands r0, r1
ldrh r1, [r2, #0x00]
orrs r0, r1
strh r0, [r2, #0x00]
ldr r1, _08001FB8 @ =0x04000008
ldr r2, _08001FBC @ =0x000011FE
adds r0, r4, r2
ldrh r0, [r0, #0x00]
strh r0, [r1, #0x00]
adds r1, #0x08
adds r3, #0x04
adds r0, r4, r3
ldrh r0, [r0, #0x00]
strh r0, [r1, #0x00]
adds r1, #0x02
adds r2, #0x04
adds r0, r4, r2
ldrh r0, [r0, #0x00]
strh r0, [r1, #0x00]
subs r1, #0x08
adds r3, #0x04
adds r0, r4, r3
ldrh r0, [r0, #0x00]
strh r0, [r1, #0x00]
adds r1, #0x0A
adds r2, #0x04
adds r0, r4, r2
ldrh r0, [r0, #0x00]
strh r0, [r1, #0x00]
adds r1, #0x02
adds r3, #0x04
adds r0, r4, r3
ldrh r0, [r0, #0x00]
strh r0, [r1, #0x00]
subs r1, #0x0A
adds r2, #0x04
adds r0, r4, r2
ldrh r0, [r0, #0x00]
strh r0, [r1, #0x00]
adds r1, #0x0C
adds r3, #0x04
adds r0, r4, r3
ldrh r0, [r0, #0x00]
strh r0, [r1, #0x00]
adds r1, #0x02
adds r2, #0x04
adds r0, r4, r2
ldrh r0, [r0, #0x00]
strh r0, [r1, #0x00]
subs r1, #0x0C
adds r3, #0x04
adds r0, r4, r3
ldrh r0, [r0, #0x00]
strh r0, [r1, #0x00]
adds r1, #0x0E
adds r2, #0x04
adds r0, r4, r2
ldrh r0, [r0, #0x00]
strh r0, [r1, #0x00]
adds r1, #0x02
adds r3, #0x04
adds r0, r4, r3
ldrh r0, [r0, #0x00]
strh r0, [r1, #0x00]
adds r1, #0x32
adds r2, #0x04
adds r0, r4, r2
ldrh r0, [r0, #0x00]
strh r0, [r1, #0x00]
adds r1, #0x02
adds r3, #0x04
adds r0, r4, r3
ldrh r0, [r0, #0x00]
strh r0, [r1, #0x00]
adds r1, #0x02
adds r2, #0x04
adds r0, r4, r2
ldrh r0, [r0, #0x00]
strh r0, [r1, #0x00]
subs r1, #0x34
adds r3, #0x04
adds r0, r4, r3
ldrh r0, [r0, #0x00]
strh r0, [r1, #0x00]
adds r1, #0x02
adds r2, #0x04
adds r0, r4, r2
ldrh r0, [r0, #0x00]
strh r0, [r1, #0x00]
adds r1, #0x02
adds r3, #0x04
adds r0, r4, r3
ldrh r0, [r0, #0x00]
strh r0, [r1, #0x00]
adds r1, #0x02
adds r2, #0x04
adds r0, r4, r2
ldrh r0, [r0, #0x00]
strh r0, [r1, #0x00]
adds r1, #0x02
adds r3, #0x04
adds r0, r4, r3
ldrh r0, [r0, #0x00]
strh r0, [r1, #0x00]
adds r1, #0x02
adds r2, #0x04
adds r0, r4, r2
ldrh r0, [r0, #0x00]
strh r0, [r1, #0x00]
adds r1, #0x02
adds r3, #0x04
adds r0, r4, r3
ldrh r0, [r0, #0x00]
strh r0, [r1, #0x00]
adds r1, #0x02
adds r2, #0x04
adds r0, r4, r2
ldrh r0, [r0, #0x00]
strh r0, [r1, #0x00]
adds r1, #0x1E
adds r3, #0x04
adds r0, r4, r3
ldrh r0, [r0, #0x00]
strh r0, [r1, #0x00]
pop {r4}
pop {r0}
bx r0
.byte 0x00, 0x00
_08001FA8: .4byte 0x000011F4
_08001FAC: .4byte 0x00001214
_08001FB0: .4byte 0x000011FC
_08001FB4: .4byte 0x00009FFF
_08001FB8: .4byte 0x04000008
_08001FBC: .4byte 0x000011FE
thumb_func_start sub_8001FC0
sub_8001FC0:
push {r4, r5, r6, r7, lr}
mov r7, r9
mov r6, r8
push {r6, r7}
mov r9, r0
movs r4, #0x00
movs r1, #0x00
ldr r2, _080020B8 @ =0x000010A4
add r2, r9
_08001FD2:
lsls r0, r4, #0x01
adds r7, r4, #0x1
adds r0, r0, r4
lsls r0, r0, #0x02
adds r0, r0, r2
movs r6, #0x02
_08001FDE:
str r1, [r0, #0x00]
str r1, [r0, #0x3C]
adds r0, #0x04
subs r6, #0x01
cmp r6, #0x00
bge _08001FDE
adds r4, r7, #0x0
cmp r4, #0x04
ble _08001FD2
mov r1, r9
ldr r0, [r1, #0x08]
cmp r0, #0x00
bne _080020CC
movs r6, #0x00
ldr r4, _080020BC @ =0x0000111C
add r4, r9
_08001FFE:
lsls r0, r6, #0x18
lsrs r0, r0, #0x18
bl sub_805DE68
stm r4!, {r0}
adds r6, #0x01
cmp r6, #0x02
ble _08001FFE
ldr r1, _080020C0 @ =0x00001128
add r1, r9
movs r0, #0x01
str r0, [r1, #0x00]
movs r6, #0x00
ldr r4, _080020C0 @ =0x00001128
add r4, r9
_0800201C:
lsls r0, r6, #0x18
lsrs r0, r0, #0x18
bl sub_805DE68
cmp r0, #0x00
bne _0800202A
str r0, [r4, #0x00]
_0800202A:
adds r6, #0x01
cmp r6, #0x02
ble _0800201C
mov r2, r9
ldr r0, [r2, #0x10]
cmp r0, #0x00
blt _0800208A
cmp r0, #0x01
ble _08002040
cmp r0, #0x05
bne _0800208A
_08002040:
movs r6, #0x00
ldr r4, _080020C4 @ =0x000010D4
add r4, r9
_08002046:
lsls r0, r6, #0x18
lsrs r0, r0, #0x18
bl sub_805DE68
stm r4!, {r0}
adds r6, #0x01
cmp r6, #0x02
ble _08002046
movs r4, #0x00
movs r0, #0x87
lsls r0, r0, #0x05
add r0, r9
mov r8, r0
_08002060:
movs r6, #0x00
lsls r0, r4, #0x01
adds r7, r4, #0x1
lsls r5, r4, #0x18
adds r0, r0, r4
lsls r4, r0, #0x02
_0800206C:
lsls r1, r6, #0x18
lsrs r1, r1, #0x18
lsrs r0, r5, #0x18
bl sub_805DE38
mov r2, r8
adds r1, r2, r4
str r0, [r1, #0x00]
adds r4, #0x04
adds r6, #0x01
cmp r6, #0x02
ble _0800206C
adds r4, r7, #0x0
cmp r4, #0x04
ble _08002060
_0800208A:
movs r6, #0x00
_0800208C:
lsls r0, r6, #0x18
lsrs r0, r0, #0x18
bl sub_805DE68
cmp r0, #0x00
beq _080020AE
lsls r0, r6, #0x02
movs r1, #0x01
movs r4, #0x04
add r0, r9
ldr r2, _080020C8 @ =0x00001110
adds r0, r0, r2
_080020A4:
str r1, [r0, #0x00]
subs r0, #0x0C
subs r4, #0x01
cmp r4, #0x00
bge _080020A4
_080020AE:
adds r6, #0x01
cmp r6, #0x02
ble _0800208C
b _08002178
.byte 0x00, 0x00
_080020B8: .4byte 0x000010A4
_080020BC: .4byte 0x0000111C
_080020C0: .4byte 0x00001128
_080020C4: .4byte 0x000010D4
_080020C8: .4byte 0x00001110
_080020CC:
movs r6, #0x00
ldr r4, _080021B8 @ =0x0000111C
add r4, r9
_080020D2:
adds r0, r6, #0x0
bl sub_8013FA0
stm r4!, {r0}
adds r6, #0x01
cmp r6, #0x02
ble _080020D2
ldr r1, _080021BC @ =0x00001128
add r1, r9
movs r0, #0x01
str r0, [r1, #0x00]
movs r6, #0x00
ldr r4, _080021BC @ =0x00001128
add r4, r9
_080020EE:
adds r0, r6, #0x0
bl sub_8013FA0
cmp r0, #0x00
bne _080020FA
str r0, [r4, #0x00]
_080020FA:
adds r6, #0x01
cmp r6, #0x02
ble _080020EE
mov r1, r9
ldr r0, [r1, #0x10]
cmp r0, #0x00
beq _0800210C
cmp r0, #0x02
bne _08002150
_0800210C:
movs r6, #0x00
ldr r4, _080021C0 @ =0x000010D4
add r4, r9
_08002112:
adds r0, r6, #0x0
bl sub_8013FA0
stm r4!, {r0}
adds r6, #0x01
cmp r6, #0x02
ble _08002112
movs r4, #0x00
movs r2, #0x87
lsls r2, r2, #0x05
add r2, r9
mov r8, r2
_0800212A:
movs r6, #0x00
lsls r0, r4, #0x01
adds r7, r4, #0x1
adds r0, r0, r4
lsls r5, r0, #0x02
_08002134:
adds r0, r4, #0x0
adds r1, r6, #0x0
bl sub_8013FF0
mov r2, r8
adds r1, r2, r5
str r0, [r1, #0x00]
adds r5, #0x04
adds r6, #0x01
cmp r6, #0x02
ble _08002134
adds r4, r7, #0x0
cmp r4, #0x04
ble _0800212A
_08002150:
movs r6, #0x00
_08002152:
adds r0, r6, #0x0
bl sub_8013FA0
cmp r0, #0x00
beq _08002172
lsls r0, r6, #0x02
movs r1, #0x01
movs r4, #0x04
add r0, r9
ldr r2, _080021C4 @ =0x00001110
adds r0, r0, r2
_08002168:
str r1, [r0, #0x00]
subs r0, #0x0C
subs r4, #0x01
cmp r4, #0x00
bge _08002168
_08002172:
adds r6, #0x01
cmp r6, #0x02
ble _08002152
_08002178:
ldr r1, _080021C8 @ =0x0000112C
add r1, r9
movs r0, #0x00
str r0, [r1, #0x00]
movs r4, #0x00
movs r5, #0x87
lsls r5, r5, #0x05
add r5, r9
movs r3, #0x01
_0800218A:
lsls r0, r4, #0x01
adds r7, r4, #0x1
adds r0, r0, r4
lsls r0, r0, #0x02
adds r2, r0, r5
movs r6, #0x02
_08002196:
ldr r0, [r2, #0x00]
cmp r0, #0x00
bne _0800219E
str r3, [r1, #0x00]
_0800219E:
adds r2, #0x04
subs r6, #0x01
cmp r6, #0x00
bge _08002196
adds r4, r7, #0x0
cmp r4, #0x04
ble _0800218A
pop {r3, r4}
mov r8, r3
mov r9, r4
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_080021B8: .4byte 0x0000111C
_080021BC: .4byte 0x00001128
_080021C0: .4byte 0x000010D4
_080021C4: .4byte 0x00001110
_080021C8: .4byte 0x0000112C
thumb_func_start spm_main
spm_main: @ 080021CC
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x020
movs r7, #0x00
ldr r4, _08002214 @ =0x03002E20
ldr r0, _08002218 @ =0x00000704
adds r4, r4, r0
ldr r1, _0800221C @ =0x0202A400
movs r2, #0x80
lsls r2, r2, #0x08
adds r0, r4, #0x0
bl frmheap_init
ldr r5, _08002220 @ =0x0203EBE8
ldr r2, _08002224 @ =0x00001230
adds r0, r4, #0x0
movs r1, #0x01
bl frmheap_calloc
adds r6, r0, #0x0
str r6, [r5, #0x00]
bl oam_init
ldr r2, _08002228 @ =0x03002C80
ldr r1, _0800222C @ =0x00001088
adds r0, r6, r1
ldrb r1, [r2, #0x01]
str r1, [r0, #0x00]
cmp r1, #0x01
bgt _08002230
str r7, [r6, #0x08]
str r7, [r6, #0x0C]
b _0800223A
_08002214: .4byte 0x03002E20
_08002218: .4byte 0x00000704
_0800221C: .4byte 0x0202A400
_08002220: .4byte 0x0203EBE8
_08002224: .4byte 0x00001230
_08002228: .4byte 0x03002C80
_0800222C: .4byte 0x00001088
_08002230:
subs r0, r1, #0x1
str r0, [r6, #0x08]
movs r0, #0x00
ldsb r0, [r2, r0]
str r0, [r6, #0x0C]
_0800223A:
ldr r2, _080023D0 @ =0x0000109C
adds r0, r6, r2
movs r1, #0x00
str r1, [r0, #0x00]
movs r3, #0x85
lsls r3, r3, #0x05
adds r0, r6, r3
str r1, [r0, #0x00]
movs r0, #0x24
adds r0, r0, r6
mov r9, r0
add r5, sp, #0x010
mov r1, r9
movs r2, #0x01
negs r2, r2
adds r0, r6, #0x0
adds r0, #0x30
_0800225C:
str r2, [r0, #0x00]
subs r0, #0x04
cmp r0, r1
bge _0800225C
movs r0, #0x01
negs r0, r0
str r0, [r6, #0x04]
str r0, [r6, #0x10]
str r0, [r6, #0x14]
str r0, [r6, #0x18]
str r0, [r6, #0x1C]
str r0, [r6, #0x20]
ldr r2, _080023D4 @ =0x00000D84
adds r1, r6, r2
movs r0, #0x01
str r0, [r1, #0x00]
movs r4, #0x00
str r4, [r6, #0x00]
str r4, [r6, #0x50]
ldr r3, _080023D8 @ =0x000011E4
adds r0, r6, r3
str r4, [r0, #0x00]
movs r2, #0x80
lsls r2, r2, #0x13
ldrh r1, [r2, #0x00]
ldr r0, _080023DC @ =0x00009FFF
ands r0, r1
strh r0, [r2, #0x00]
ldr r0, _080023E0 @ =0x04000040
movs r2, #0xF0
strh r2, [r0, #0x00]
adds r0, #0x04
movs r1, #0xA0
strh r1, [r0, #0x00]
subs r0, #0x02
strh r2, [r0, #0x00]
adds r0, #0x04
strh r1, [r0, #0x00]
adds r0, #0x02
ldr r2, _080023E4 @ =0x00003F3F
adds r1, r2, #0x0
strh r1, [r0, #0x00]
adds r0, #0x02
strh r1, [r0, #0x00]
bl main_frameProc
strh r4, [r5, #0x00]
ldr r1, _080023E8 @ =0x02020400
ldr r2, _080023EC @ =0x01000800
adds r0, r5, #0x0
bl CpuSet
ldr r0, [r6, #0x08]
cmp r0, #0x00
beq _080022CC
b _0800243E
_080022CC:
movs r1, #0x00
movs r5, #0x13
ldr r3, _080023F0 @ =0x0000117C
adds r0, r6, r3
_080022D4:
str r1, [r0, #0x00]
subs r0, #0x04
subs r5, #0x01
cmp r5, #0x00
bge _080022D4
ldr r0, _080023F4 @ =0x000011BC
adds r1, r6, r0
movs r0, #0x00
strb r0, [r1, #0x00]
movs r5, #0x00
_080022E8:
adds r0, r5, #0x0
bl track_getMKSCTrack
lsls r0, r0, #0x18
lsrs r0, r0, #0x18
bl sub_805CE3C
lsls r0, r0, #0x18
asrs r4, r0, #0x18
movs r0, #0x01
negs r0, r0
cmp r4, r0
beq _0800233C
lsls r1, r5, #0x02
ldr r2, _080023F8 @ =0x00001130
adds r0, r6, r2
adds r0, r0, r1
movs r1, #0x01
str r1, [r0, #0x00]
lsls r4, r4, #0x18
lsrs r4, r4, #0x18
adds r0, r4, #0x0
bl sub_805DE90
movs r3, #0x8C
lsls r3, r3, #0x05
adds r1, r6, r3
adds r1, r1, r5
strb r0, [r1, #0x00]
adds r0, r4, #0x0
bl sub_805DEB8
lsls r2, r5, #0x01
ldr r3, _080023FC @ =0x00001194
adds r1, r6, r3
adds r1, r1, r2
strh r0, [r1, #0x00]
ldr r0, _080023F4 @ =0x000011BC
adds r1, r6, r0
ldrb r0, [r1, #0x00]
adds r0, #0x01
strb r0, [r1, #0x00]
_0800233C:
adds r5, #0x01
cmp r5, #0x13
ble _080022E8
movs r1, #0x00
movs r5, #0x01
ldr r2, _08002400 @ =0x000011C4
adds r0, r6, r2
_0800234A:
str r1, [r0, #0x00]
subs r0, #0x04
subs r5, #0x01
cmp r5, #0x00
bge _0800234A
ldr r3, _08002404 @ =0x000011E2
adds r1, r6, r3
movs r0, #0x00
strb r0, [r1, #0x00]
movs r5, #0x00
_0800235E:
lsls r0, r5, #0x18
lsrs r0, r0, #0x18
bl sub_805DC28
lsls r0, r0, #0x18
asrs r4, r0, #0x18
movs r0, #0x01
negs r0, r0
adds r7, r5, #0x1
cmp r4, r0
beq _08002438
lsls r1, r5, #0x02
movs r2, #0x8E
lsls r2, r2, #0x05
adds r0, r6, r2
adds r0, r0, r1
movs r1, #0x01
str r1, [r0, #0x00]
lsls r4, r4, #0x18
lsrs r4, r4, #0x18
adds r0, r4, #0x0
bl sub_805DE90
ldr r3, _08002408 @ =0x000011CA
adds r1, r6, r3
adds r1, r1, r5
strb r0, [r1, #0x00]
adds r0, r4, #0x0
bl sub_805DEB8
lsls r2, r5, #0x01
ldr r3, _0800240C @ =0x000011CC
adds r1, r6, r3
adds r1, r1, r2
strh r0, [r1, #0x00]
adds r0, r4, #0x0
bl sub_805DF18
ldr r2, _08002410 @ =0x000011D0
adds r1, r6, r2
adds r1, r1, r5
strb r0, [r1, #0x00]
lsls r1, r5, #0x03
ldr r3, _08002414 @ =0x000011D2
adds r1, r1, r3
adds r1, r6, r1
adds r0, r4, #0x0
bl sub_805DEE0
ldr r0, _08002404 @ =0x000011E2
adds r1, r6, r0
ldrb r0, [r1, #0x00]
adds r0, #0x01
strb r0, [r1, #0x00]
movs r4, #0x00
b _0800241A
.byte 0x00, 0x00
_080023D0: .4byte 0x0000109C
_080023D4: .4byte 0x00000D84
_080023D8: .4byte 0x000011E4
_080023DC: .4byte 0x00009FFF
_080023E0: .4byte 0x04000040
_080023E4: .4byte 0x00003F3F
_080023E8: .4byte 0x02020400
_080023EC: .4byte 0x01000800
_080023F0: .4byte 0x0000117C
_080023F4: .4byte 0x000011BC
_080023F8: .4byte 0x00001130
_080023FC: .4byte 0x00001194
_08002400: .4byte 0x000011C4
_08002404: .4byte 0x000011E2
_08002408: .4byte 0x000011CA
_0800240C: .4byte 0x000011CC
_08002410: .4byte 0x000011D0
_08002414: .4byte 0x000011D2
_08002418:
adds r4, #0x01
_0800241A:
cmp r4, #0x13
bgt _08002430
adds r0, r4, #0x0
bl track_getMKSCTrack
ldr r2, _08002490 @ =0x000011D0
adds r1, r6, r2
adds r1, r1, r5
ldrb r1, [r1, #0x00]
cmp r0, r1
bne _08002418
_08002430:
ldr r3, _08002494 @ =0x000011C8
adds r0, r6, r3
adds r0, r0, r5
strb r4, [r0, #0x00]
_08002438:
adds r5, r7, #0x0
cmp r5, #0x01
ble _0800235E
_0800243E:
bl main_frameProc
ldr r4, _08002498 @ =0x08001DDD
ldr r5, _0800249C @ =0x03002E20
movs r0, #0x01
movs r1, #0x02
negs r1, r1
bl irq_updateMask
str r4, [r5, #0x0C]
movs r0, #0x02
ldr r1, _080024A0 @ =0x00010001
bl irq_updateMask
movs r1, #0x03
negs r1, r1
movs r0, #0x01
bl irq_updateMask
ldr r1, _080024A4 @ =0x0802D5F1
movs r0, #0x01
bl irq_setHandler
ldr r1, _080024A8 @ =0x0800C681
movs r0, #0x4F
bl vcount_register
movs r0, #0x24
adds r0, r0, r5
mov r8, r0
ldr r0, _080024AC @ =0x0203EBE4
ldrh r0, [r0, #0x00]
cmp r0, #0x66
bne _08002484
b _080025CC
_08002484:
cmp r0, #0x66
bgt _080024B0
cmp r0, #0x65
beq _080024BE
b _080026EE
.byte 0x00, 0x00
_08002490: .4byte 0x000011D0
_08002494: .4byte 0x000011C8
_08002498: .4byte sub_8001DDC
_0800249C: .4byte 0x03002E20
_080024A0: .4byte 0x00010001
_080024A4: .4byte main_dummyIrqHandler
_080024A8: .4byte sub_800C680
_080024AC: .4byte 0x0203EBE4
_080024B0:
cmp r0, #0x67
bne _080024B6
b _080026AC
_080024B6:
cmp r0, #0x69
bne _080024BC
b _080026C0
_080024BC:
b _080026EE
_080024BE:
ldr r0, [r6, #0x08]
str r0, [r6, #0x04]
ldr r1, _080024E4 @ =0x000007FE
adds r0, r5, r1
ldrh r2, [r0, #0x00]
movs r1, #0xF0
lsls r1, r1, #0x04
ands r1, r2
movs r0, #0x80
lsls r0, r0, #0x02
cmp r1, r0
beq _0800250A
cmp r1, r0
bgt _080024E8
movs r0, #0x80
lsls r0, r0, #0x01
cmp r1, r0
beq _080024FA
b _08002516
_080024E4: .4byte 0x000007FE
_080024E8:
movs r0, #0x80
lsls r0, r0, #0x03
cmp r1, r0
beq _0800250E
movs r0, #0x80
lsls r0, r0, #0x04
cmp r1, r0
beq _08002512
b _08002516
_080024FA:
movs r0, #0x10
ands r0, r2
lsls r0, r0, #0x10
lsrs r0, r0, #0x10
cmp r0, #0x00
beq _08002514
movs r0, #0x05
b _08002514
_0800250A:
movs r0, #0x01
b _08002514
_0800250E:
movs r0, #0x02
b _08002514
_08002512:
movs r0, #0x03
_08002514:
str r0, [r6, #0x10]
_08002516:
ldr r0, _08002538 @ =0x000007DA
add r0, r8
ldrh r0, [r0, #0x00]
movs r1, #0xF0
lsls r1, r1, #0x04
ands r1, r0
movs r0, #0x80
lsls r0, r0, #0x02
cmp r1, r0
beq _08002562
cmp r1, r0
bgt _0800253C
movs r0, #0x80
lsls r0, r0, #0x01
cmp r1, r0
beq _08002544
b _08002566
_08002538: .4byte 0x000007DA
_0800253C:
movs r0, #0x80
lsls r0, r0, #0x03
cmp r1, r0
bne _08002566
_08002544:
ldr r0, _08002558 @ =0x000007DC
add r0, r8
ldrb r0, [r0, #0x00]
cmp r0, #0x01
beq _08002564
cmp r0, #0x01
bgt _0800255C
cmp r0, #0x00
beq _08002564
b _08002566
_08002558: .4byte 0x000007DC
_0800255C:
cmp r0, #0x02
bne _08002566
b _08002564
_08002562:
movs r0, #0x00
_08002564:
str r0, [r6, #0x14]
_08002566:
ldr r4, _080025A4 @ =0x0300002C
ldr r0, [r6, #0x0C]
adds r0, r0, r4
ldrb r0, [r0, #0x00]
bl sub_800EDB0
str r0, [r6, #0x18]
movs r5, #0x00
adds r7, r4, #0x0
mov r4, r9
_0800257A:
adds r0, r5, r7
ldrb r0, [r0, #0x00]
bl sub_800EDB0
stm r4!, {r0}
adds r5, #0x01
cmp r5, #0x03
ble _0800257A
ldr r0, _080025A8 @ =0x000007DD
add r0, r8
ldrb r0, [r0, #0x00]
bl track_isRetroTrack
adds r1, r0, #0x0
cmp r1, #0x00
beq _080025B0
ldr r2, _080025AC @ =0x000011E4
adds r1, r6, r2
movs r0, #0x01
str r0, [r1, #0x00]
b _080025B6
_080025A4: .4byte 0x0300002C
_080025A8: .4byte 0x000007DD
_080025AC: .4byte 0x000011E4
_080025B0:
ldr r3, _080025C4 @ =0x000011E4
adds r0, r6, r3
str r1, [r0, #0x00]
_080025B6:
ldr r1, _080025C8 @ =0x00000D84
adds r0, r6, r1
movs r1, #0x01
str r1, [r0, #0x00]
movs r0, #0x02
b _080026DC
.byte 0x00, 0x00
_080025C4: .4byte 0x000011E4
_080025C8: .4byte 0x00000D84
_080025CC:
ldr r0, [r6, #0x08]
str r0, [r6, #0x04]
ldr r2, _080025F4 @ =0x000007FE
adds r0, r5, r2
ldrh r2, [r0, #0x00]
movs r1, #0xF0
lsls r1, r1, #0x04
ands r1, r2
movs r0, #0x80
lsls r0, r0, #0x02
cmp r1, r0
beq _0800261A
cmp r1, r0
bgt _080025F8
movs r0, #0x80
lsls r0, r0, #0x01
cmp r1, r0
beq _0800260A
b _08002626
.byte 0x00, 0x00
_080025F4: .4byte 0x000007FE
_080025F8:
movs r0, #0x80
lsls r0, r0, #0x03
cmp r1, r0
beq _0800261E
movs r0, #0x80
lsls r0, r0, #0x04
cmp r1, r0
beq _08002622
b _08002626
_0800260A:
movs r0, #0x10
ands r0, r2
lsls r0, r0, #0x10
lsrs r0, r0, #0x10
cmp r0, #0x00
beq _08002624
movs r0, #0x05
b _08002624
_0800261A:
movs r0, #0x01
b _08002624
_0800261E:
movs r0, #0x02
b _08002624
_08002622:
movs r0, #0x03
_08002624:
str r0, [r6, #0x10]
_08002626:
ldr r0, _08002648 @ =0x000007DA
add r0, r8
ldrh r0, [r0, #0x00]
movs r1, #0xF0
lsls r1, r1, #0x04
ands r1, r0
movs r0, #0x80
lsls r0, r0, #0x02
cmp r1, r0
beq _08002672
cmp r1, r0
bgt _0800264C
movs r0, #0x80
lsls r0, r0, #0x01
cmp r1, r0
beq _08002654
b _08002676
_08002648: .4byte 0x000007DA
_0800264C:
movs r0, #0x80
lsls r0, r0, #0x03
cmp r1, r0
bne _08002676
_08002654:
ldr r0, _08002668 @ =0x000007DC
add r0, r8
ldrb r0, [r0, #0x00]
cmp r0, #0x01
beq _08002674
cmp r0, #0x01
bgt _0800266C
cmp r0, #0x00
beq _08002674
b _08002676
_08002668: .4byte 0x000007DC
_0800266C:
cmp r0, #0x02
bne _08002676
b _08002674
_08002672:
movs r0, #0x00
_08002674:
str r0, [r6, #0x14]
_08002676:
ldr r4, _080026A4 @ =0x0300002C
ldr r0, [r6, #0x0C]
adds r0, r0, r4
ldrb r0, [r0, #0x00]
bl sub_800EDB0
str r0, [r6, #0x18]
movs r5, #0x00
adds r7, r4, #0x0
mov r4, r9
_0800268A:
adds r0, r5, r7
ldrb r0, [r0, #0x00]
bl sub_800EDB0
stm r4!, {r0}
adds r5, #0x01
cmp r5, #0x03
ble _0800268A
ldr r3, _080026A8 @ =0x00000D84
adds r1, r6, r3
movs r0, #0x01
str r0, [r1, #0x00]
b _080026DC
_080026A4: .4byte 0x0300002C
_080026A8: .4byte 0x00000D84
_080026AC:
ldr r0, [r6, #0x08]
str r0, [r6, #0x04]
ldr r0, _080026BC @ =0x00000D84
adds r1, r6, r0
movs r0, #0x01
str r0, [r1, #0x00]
movs r0, #0x00
b _080026F6
_080026BC: .4byte 0x00000D84
_080026C0:
ldr r0, [r6, #0x08]
str r0, [r6, #0x04]
movs r1, #0x01
str r1, [r6, #0x10]
movs r0, #0x00
str r0, [r6, #0x14]
movs r0, #0x10
str r0, [r6, #0x40]
str r0, [r6, #0x3C]
str r0, [r6, #0x38]
ldr r2, _080026E4 @ =0x00000D84
adds r0, r6, r2
str r1, [r0, #0x00]
movs r0, #0x03
_080026DC:
str r0, [r6, #0x00]
movs r4, #0x01
b _080026FA
.byte 0x00, 0x00
_080026E4: .4byte 0x00000D84
_080026E8:
movs r0, #0x05
str r0, [r6, #0x00]
b _08002810
_080026EE:
ldr r3, _0800274C @ =0x00000D84
adds r1, r6, r3
movs r0, #0x00
str r0, [r1, #0x00]
_080026F6:
str r0, [r6, #0x00]
movs r4, #0x00
_080026FA:
ldr r1, _08002750 @ =0x0203EBE4
movs r0, #0x00
strh r0, [r1, #0x00]
adds r0, r6, #0x0
bl sub_8001B60
movs r0, #0x02
bl m4aSongNumStart
ldr r1, _0800274C @ =0x00000D84
adds r0, r6, r1
ldr r0, [r0, #0x00]
cmp r0, #0x00
beq _08002738
ldr r0, _08002754 @ =0x03002C80
ldrb r1, [r0, #0x01]
cmp r1, #0x01
bgt _08002720
movs r1, #0x01
_08002720:
ldr r0, _08002758 @ =0x03002E20
ldr r2, _0800275C @ =0x000007FB
adds r0, r0, r2
ldrb r0, [r0, #0x00]
cmp r0, r1
beq _08002738
ldr r3, _08002760 @ =0x0000109C
adds r0, r6, r3
movs r1, #0x01
str r1, [r0, #0x00]
movs r0, #0x05
str r0, [r6, #0x00]
_08002738:
movs r7, #0x00
_0800273A:
ldr r0, [r6, #0x00]
cmp r0, #0x05
bhi _080027FC
lsls r0, r0, #0x02
ldr r1, _08002764 @ =0x08002768
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
.byte 0x00, 0x00
_0800274C: .4byte 0x00000D84
_08002750: .4byte 0x0203EBE4
_08002754: .4byte 0x03002C80
_08002758: .4byte 0x03002E20
_0800275C: .4byte 0x000007FB
_08002760: .4byte 0x0000109C
_08002764: .4byte 0x08002768
.byte 0x80, 0x27, 0x00, 0x08, 0xA4, 0x27, 0x00, 0x08, 0xC4, 0x27, 0x00, 0x08, 0xD4, 0x27, 0x00, 0x08
.byte 0xFC, 0x27, 0x00, 0x08, 0x00, 0x28, 0x00, 0x08, 0x30, 0x1C, 0x21, 0x1C, 0x02, 0xF0, 0x6C, 0xF8
.byte 0x00, 0x28, 0x33, 0xD0, 0x30, 0x69, 0x01, 0x28, 0x04, 0xD1, 0x70, 0x69, 0x01, 0x28, 0x01, 0xD1
.byte 0x03, 0x20, 0x00, 0xE0, 0x01, 0x20, 0x30, 0x60, 0x00, 0x24, 0x2D, 0xE0, 0x30, 0x1C, 0x21, 0x1C
.byte 0x01, 0x22, 0x04, 0xF0, 0xC5, 0xFC, 0x00, 0x28, 0x17, 0xD0, 0x02, 0x20, 0x30, 0x60, 0x00, 0x24
.byte 0x01, 0x49, 0x70, 0x18, 0x04, 0x60, 0x1F, 0xE0, 0xE4, 0x11, 0x00, 0x00, 0x30, 0x1C, 0x21, 0x1C
.byte 0x08, 0xF0, 0xE4, 0xFB, 0x00, 0x28, 0x0E, 0xD1, 0x01, 0x20, 0x06, 0xE0, 0x30, 0x1C, 0x0A, 0xF0
.byte 0xBB, 0xFF, 0x01, 0x1C, 0x00, 0x29, 0x03, 0xD0, 0x00, 0x20, 0x30, 0x60, 0x01, 0x24, 0x0B, 0xE0
.byte 0x03, 0x4A, 0xB0, 0x18, 0x01, 0x60, 0x04, 0x20, 0x30, 0x60, 0x00, 0x24, 0x01, 0x27, 0x03, 0xE0
.byte 0xE4, 0x11, 0x00, 0x00
_080027FC:
movs r0, #0x00
str r0, [r6, #0x00]
ldr r3, _080028FC @ =0x0000109C
adds r0, r6, r3
ldr r0, [r0, #0x00]
cmp r0, #0x00
beq _0800280C
b _080026E8
_0800280C:
cmp r7, #0x00
beq _0800273A
_08002810:
ldr r4, _08002900 @ =0x08102414
ldr r0, _08002904 @ =0x08102498
ldrh r1, [r0, #0x14]
lsls r0, r1, #0x01
adds r0, r0, r1
lsls r0, r0, #0x02
adds r0, r0, r4
ldr r0, [r0, #0x00]
ldrh r0, [r0, #0x04]
cmp r0, #0x00
beq _0800282A
bl main_frameProc
_0800282A:
ldr r0, _08002908 @ =0x0000000B
lsls r0, r0, #0x18
lsrs r0, r0, #0x18
cmp r0, #0x00
beq _0800284A
adds r5, r4, #0x0
adds r4, r0, #0x0
_08002838:
ldr r0, [r5, #0x00]
ldr r1, _08002904 @ =0x08102498
ldr r1, [r1, #0x08]
bl MPlayStart
adds r5, #0x0C
subs r4, #0x01
cmp r4, #0x00
bne _08002838
_0800284A:
bl main_frameProc
movs r5, #0x00
ldr r4, _0800290C @ =0x03002E20
movs r0, #0x01
movs r1, #0x02
negs r1, r1
bl irq_updateMask
str r5, [r4, #0x0C]
movs r0, #0x02
ldr r1, _08002910 @ =0x00010001
bl irq_updateMask
movs r1, #0x03
negs r1, r1
movs r0, #0x01
bl irq_updateMask
ldr r1, _08002914 @ =0x0802D5F1
movs r0, #0x01
bl irq_setHandler
movs r1, #0x05
negs r1, r1
movs r0, #0x01
bl irq_updateMask
bl main_frameProc
ldr r0, [r6, #0x00]
str r0, [sp, #0x014]
ldr r7, [r6, #0x08]
ldr r1, [r6, #0x10]
mov r8, r1
ldr r4, [r6, #0x14]
ldr r2, [r6, #0x18]
str r2, [sp, #0x018]
mov r2, r9
mov r1, sp
movs r5, #0x03
_0800289C:
ldm r2!, {r0}
stm r1!, {r0}
subs r5, #0x01
cmp r5, #0x00
bge _0800289C
ldr r3, [r6, #0x1C]
mov r10, r3
ldr r0, [r6, #0x20]
mov r9, r0
ldr r1, _08002918 @ =0x000011E4
adds r0, r6, r1
ldr r0, [r0, #0x00]
str r0, [sp, #0x01C]
ldr r5, _0800290C @ =0x03002E20
adds r6, r5, #0x0
adds r6, #0x24
adds r0, r6, #0x0
bl sub_8048C74
ldr r1, _0800291C @ =0x0300000C
movs r0, #0x03
strb r0, [r1, #0x00]
movs r0, #0x00
bl sub_8015268
movs r0, #0x00
bl sub_801528C
movs r0, #0x00
bl sub_80152F8
movs r0, #0x00
bl sub_80152D4
bl main_frameProc
ldr r2, [sp, #0x014]
cmp r2, #0x04
beq _080028EC
b _08002B18
_080028EC:
cmp r7, #0x01
beq _08002938
cmp r7, #0x01
bgt _08002920
cmp r7, #0x00
beq _0800292A
b _08002962
.byte 0x00, 0x00
_080028FC: .4byte 0x0000109C
_08002900: .4byte 0x08102414
_08002904: .4byte 0x08102498
_08002908: .4byte 0x0000000B
_0800290C: .4byte 0x03002E20
_08002910: .4byte 0x00010001
_08002914: .4byte main_dummyIrqHandler
_08002918: .4byte 0x000011E4
_0800291C: .4byte 0x0300000C
_08002920:
cmp r7, #0x02
beq _08002948
cmp r7, #0x03
beq _08002958
b _08002962
_0800292A:
ldr r3, _08002934 @ =0x000007FB
adds r1, r5, r3
movs r0, #0x01
strb r0, [r1, #0x00]
b _08002962
_08002934: .4byte 0x000007FB
_08002938:
ldr r0, _08002944 @ =0x000007FB
adds r1, r5, r0
movs r0, #0x02
strb r0, [r1, #0x00]
b _08002962
.byte 0x00, 0x00
_08002944: .4byte 0x000007FB
_08002948:
ldr r2, _08002954 @ =0x000007FB
adds r1, r5, r2
movs r0, #0x03
strb r0, [r1, #0x00]
b _08002962
.byte 0x00, 0x00
_08002954: .4byte 0x000007FB
_08002958:
ldr r3, _08002974 @ =0x000007FB
adds r0, r5, r3
mov r1, sp
ldrb r1, [r1, #0x14]
strb r1, [r0, #0x00]
_08002962:
mov r2, r8
cmp r2, #0x05
bhi _080029EE
lsls r0, r2, #0x02
ldr r1, _08002978 @ =0x0800297C
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
.byte 0x00, 0x00
_08002974: .4byte 0x000007FB
_08002978: .4byte 0x0800297C
.byte 0x94, 0x29, 0x00, 0x08, 0xA4, 0x29, 0x00, 0x08, 0xB4, 0x29, 0x00, 0x08, 0xC4, 0x29, 0x00, 0x08
.byte 0xD4, 0x29, 0x00, 0x08, 0xE4, 0x29, 0x00, 0x08, 0x02, 0x4B, 0xF1, 0x18, 0xC0, 0x20, 0x40, 0x00
.byte 0x26, 0xE0, 0x00, 0x00, 0xDA, 0x07, 0x00, 0x00, 0x02, 0x48, 0x31, 0x18, 0x80, 0x20, 0x80, 0x00
.byte 0x1E, 0xE0, 0x00, 0x00, 0xDA, 0x07, 0x00, 0x00, 0x02, 0x4A, 0xB1, 0x18, 0x80, 0x20, 0xC0, 0x00
.byte 0x16, 0xE0, 0x00, 0x00, 0xDA, 0x07, 0x00, 0x00, 0x02, 0x4B, 0xF1, 0x18, 0x80, 0x20, 0x00, 0x01
.byte 0x0E, 0xE0, 0x00, 0x00, 0xDA, 0x07, 0x00, 0x00, 0x02, 0x48, 0x31, 0x18, 0xC2, 0x20, 0x00, 0x02
.byte 0x06, 0xE0, 0x00, 0x00, 0xDA, 0x07, 0x00, 0x00, 0x06, 0x4A, 0xB1, 0x18, 0x88, 0x20, 0x40, 0x00
.byte 0x08, 0x80
_080029EE:
mov r3, r8
cmp r3, #0x02
beq _08002A0A
cmp r3, #0x02
bgt _08002A04
cmp r3, #0x00
beq _08002A0A
b _08002A3A
.byte 0x00, 0x00, 0xDA, 0x07, 0x00, 0x00
_08002A04:
mov r0, r8
cmp r0, #0x05
bne _08002A3A
_08002A0A:
cmp r4, #0x01
beq _08002A28
cmp r4, #0x01
bgt _08002A18
cmp r4, #0x00
beq _08002A1E
b _08002A3A
_08002A18:
cmp r4, #0x02
beq _08002A34
b _08002A3A
_08002A1E:
ldr r1, _08002A24 @ =0x000007DC
adds r0, r6, r1
b _08002A38
_08002A24: .4byte 0x000007DC
_08002A28:
ldr r2, _08002A30 @ =0x000007DC
adds r0, r6, r2
b _08002A38
.byte 0x00, 0x00
_08002A30: .4byte 0x000007DC
_08002A34:
ldr r3, _08002A50 @ =0x000007DC
adds r0, r6, r3
_08002A38:
strb r4, [r0, #0x00]
_08002A3A:
cmp r7, #0x00
bne _08002A54
ldr r0, [sp, #0x018]
bl spm_menuCharIdxToCharId
adds r1, r0, #0x0
adds r0, r6, #0x0
movs r2, #0x01
bl sub_804AE58
b _08002A72
_08002A50: .4byte 0x000007DC
_08002A54:
cmp r7, #0x00
blt _08002A72
mov r4, sp
adds r5, r7, #0x1
_08002A5C:
ldm r4!, {r0}
bl spm_menuCharIdxToCharId
adds r1, r0, #0x0
adds r0, r6, #0x0
movs r2, #0x01
bl sub_804AE58
subs r5, #0x01
cmp r5, #0x00
bne _08002A5C
_08002A72:
mov r0, r8
cmp r0, #0x03
beq _08002A82
cmp r0, #0x03
bgt _08002AD0
cmp r0, #0x00
beq _08002AA0
b _08002AD0
_08002A82:
mov r0, r9
bl track_getBattleTrack
ldr r2, _08002A98 @ =0x000007DD
adds r1, r6, r2
strb r0, [r1, #0x00]
ldr r0, _08002A9C @ =0x03000008
mov r3, r9
str r3, [r0, #0x00]
b _08002AFE
.byte 0x00, 0x00
_08002A98: .4byte 0x000007DD
_08002A9C: .4byte 0x03000008
_08002AA0:
ldr r0, [sp, #0x01C]
cmp r0, #0x00
bne _08002AB2
mov r1, r10
lsls r4, r1, #0x02
adds r0, r4, #0x0
bl track_getMKSCTrack
b _08002ABC
_08002AB2:
mov r3, r10
lsls r4, r3, #0x02
adds r0, r4, #0x0
bl track_getRetroTrack
_08002ABC:
ldr r2, _08002AC8 @ =0x000007DD
adds r1, r6, r2
strb r0, [r1, #0x00]
ldr r0, _08002ACC @ =0x03000008
str r4, [r0, #0x00]
b _08002AFE
_08002AC8: .4byte 0x000007DD
_08002ACC: .4byte 0x03000008
_08002AD0:
ldr r3, [sp, #0x01C]
cmp r3, #0x00
bne _08002AE4
mov r0, r10
lsls r4, r0, #0x02
mov r1, r9
adds r0, r4, r1
bl track_getMKSCTrack
b _08002AF0
_08002AE4:
mov r3, r10
lsls r4, r3, #0x02
mov r1, r9
adds r0, r4, r1
bl track_getRetroTrack
_08002AF0:
ldr r2, _08002B24 @ =0x000007DD
adds r1, r6, r2
strb r0, [r1, #0x00]
mov r3, r9
adds r1, r4, r3
ldr r0, _08002B28 @ =0x03000008
str r1, [r0, #0x00]
_08002AFE:
ldr r1, _08002B2C @ =0x000007DA
adds r0, r6, r1
ldrh r1, [r0, #0x00]
movs r0, #0x80
lsls r0, r0, #0x02
ands r0, r1
cmp r0, #0x00
beq _08002B12
bl sub_805CFC4
_08002B12:
ldr r2, [sp, #0x014]
cmp r2, #0x04
beq _08002B34
_08002B18:
ldr r3, [sp, #0x014]
cmp r3, #0x05
beq _08002B3C
ldr r0, _08002B30 @ =0x08000E6D
b _08002B3E
.byte 0x00, 0x00
_08002B24: .4byte 0x000007DD
_08002B28: .4byte 0x03000008
_08002B2C: .4byte 0x000007DA
_08002B30: .4byte title_main
_08002B34:
ldr r0, _08002B38 @ =0x0805167D
b _08002B3E
_08002B38: .4byte race_main
_08002B3C:
ldr r0, _08002B60 @ =0x08016B99
_08002B3E:
ldr r2, _08002B64 @ =0x03002E20
str r0, [r2, #0x00]
ldrb r0, [r2, #0x08]
adds r0, #0x01
movs r1, #0x07
ands r0, r1
strb r0, [r2, #0x08]
movs r0, #0x01
add sp, #0x020
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r1}
bx r1
.byte 0x00, 0x00
_08002B60: .4byte error_main
_08002B64: .4byte 0x03002E20
thumb_func_start sub_8002B68
sub_8002B68:
push {r4, r5, r6, r7, lr}
adds r5, r0, #0x0
bl sub_8001C0C
ldr r1, _08002B90 @ =0x000007DA
adds r0, r5, r1
ldrh r1, [r0, #0x00]
movs r0, #0x80
lsls r0, r0, #0x02
ands r0, r1
cmp r0, #0x00
beq _08002B98
ldr r0, _08002B94 @ =0x0300002C
ldrb r1, [r0, #0x00]
adds r0, r5, #0x0
movs r2, #0x01
bl sub_804AE58
b _08002BBC
.byte 0x00, 0x00
_08002B90: .4byte 0x000007DA
_08002B94: .4byte 0x0300002C
_08002B98:
movs r4, #0x00
ldr r1, _08002BC8 @ =0x000007D7
adds r0, r5, r1
ldrb r0, [r0, #0x00]
cmp r4, r0
bge _08002BBC
ldr r7, _08002BCC @ =0x0300002C
adds r6, r5, r1
_08002BA8:
adds r0, r4, r7
ldrb r1, [r0, #0x00]
adds r0, r5, #0x0
movs r2, #0x01
bl sub_804AE58
adds r4, #0x01
ldrb r0, [r6, #0x00]
cmp r4, r0
blt _08002BA8
_08002BBC:
ldr r1, _08002BD0 @ =0x0203EBE4
movs r0, #0x00
strh r0, [r1, #0x00]
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_08002BC8: .4byte 0x000007D7
_08002BCC: .4byte 0x0300002C
_08002BD0: .4byte 0x0203EBE4
thumb_func_start sub_8002BD4
sub_8002BD4:
push {lr}
bl sub_8001C0C
ldr r1, _08002BE4 @ =0x0203EBE4
movs r0, #0x65
strh r0, [r1, #0x00]
pop {r0}
bx r0
_08002BE4: .4byte 0x0203EBE4
thumb_func_start sub_8002BE8
sub_8002BE8:
push {lr}
bl sub_8001C0C
ldr r1, _08002BF8 @ =0x0203EBE4
movs r0, #0x66
strh r0, [r1, #0x00]
pop {r0}
bx r0
_08002BF8: .4byte 0x0203EBE4
thumb_func_start sub_8002BFC
sub_8002BFC:
push {lr}
bl sub_8001C0C
ldr r1, _08002C0C @ =0x0203EBE4
movs r0, #0x67
strh r0, [r1, #0x00]
pop {r0}
bx r0
_08002C0C: .4byte 0x0203EBE4
thumb_func_start sub_8002C10
sub_8002C10:
push {lr}
bl sub_8001C0C
ldr r1, _08002C20 @ =0x0203EBE4
movs r0, #0x69
strh r0, [r1, #0x00]
pop {r0}
bx r0
_08002C20: .4byte 0x0203EBE4
thumb_func_start sub_8002C24
sub_8002C24:
ldr r0, _08002C2C @ =0x03000008
ldr r0, [r0, #0x00]
bx lr
.byte 0x00, 0x00
_08002C2C: .4byte 0x03000008
thumb_func_start sub_8002C30
sub_8002C30:
ldr r1, _08002C38 @ =0x03000008
str r0, [r1, #0x00]
bx lr
.byte 0x00, 0x00
_08002C38: .4byte 0x03000008
thumb_func_start sub_8002C3C
sub_8002C3C:
ldr r0, _08002C44 @ =0x0300000C
ldrb r0, [r0, #0x00]
bx lr
.byte 0x00, 0x00
_08002C44: .4byte 0x0300000C
.byte 0x01, 0x49, 0x08, 0x70, 0x70, 0x47, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x03
thumb_func_start sub_8002C54
sub_8002C54:
ldr r1, _08002C64 @ =0x0300000C
ldrb r0, [r1, #0x00]
cmp r0, #0x00
beq _08002C60
subs r0, #0x01
strb r0, [r1, #0x00]
_08002C60:
bx lr
.byte 0x00, 0x00
_08002C64: .4byte 0x0300000C
.byte 0x01, 0x49, 0x08, 0x60, 0x70, 0x47, 0x00, 0x00, 0xE8, 0xEB, 0x03, 0x02
thumb_func_start sub_8002C74
sub_8002C74:
ldr r0, _08002C84 @ =0x03000010
movs r1, #0x17
ldsb r1, [r0, r1]
adds r1, r1, r0
movs r0, #0x00
ldsb r0, [r1, r0]
bx lr
.byte 0x00, 0x00
_08002C84: .4byte 0x03000010
thumb_func_start sub_8002C88
sub_8002C88:
ldr r2, _08002C9C @ =0x03000010
ldr r0, [r0, #0x10]
cmp r0, #0x05
bhi _08002CDA
lsls r0, r0, #0x02
ldr r1, _08002CA0 @ =0x08002CA4
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
.byte 0x00, 0x00
_08002C9C: .4byte 0x03000010
_08002CA0: .4byte 0x08002CA4
.byte 0xBC, 0x2C, 0x00, 0x08, 0xC8, 0x2C, 0x00, 0x08, 0xC2, 0x2C, 0x00, 0x08, 0xCE, 0x2C, 0x00, 0x08
.byte 0xDA, 0x2C, 0x00, 0x08, 0xD4, 0x2C, 0x00, 0x08, 0x04, 0x20, 0x10, 0x56, 0x0C, 0xE0, 0x05, 0x20
.byte 0x10, 0x56, 0x09, 0xE0, 0x06, 0x20, 0x10, 0x56, 0x06, 0xE0, 0x07, 0x20, 0x10, 0x56, 0x03, 0xE0
.byte 0x08, 0x20, 0x10, 0x56, 0x00, 0xE0
_08002CDA:
movs r0, #0x00
bx lr
.byte 0x00, 0x00
thumb_func_start sub_8002CE0
sub_8002CE0:
ldr r0, _08002CEC @ =0x03000010
adds r0, #0x09
adds r1, r1, r0
movs r0, #0x00
ldsb r0, [r1, r0]
bx lr
_08002CEC: .4byte 0x03000010
thumb_func_start spm_getSavedCup
spm_getSavedCup:
ldr r2, _08002D04 @ =0x03000010
ldr r0, [r0, #0x10]
cmp r0, #0x05
bhi _08002D42
lsls r0, r0, #0x02
ldr r1, _08002D08 @ =0x08002D0C
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
.byte 0x00, 0x00
_08002D04: .4byte 0x03000010
_08002D08: .4byte 0x08002D0C
.byte 0x24, 0x2D, 0x00, 0x08, 0x30, 0x2D, 0x00, 0x08, 0x2A, 0x2D, 0x00, 0x08, 0x36, 0x2D, 0x00, 0x08
.byte 0x42, 0x2D, 0x00, 0x08, 0x3C, 0x2D, 0x00, 0x08, 0x0D, 0x20, 0x10, 0x56, 0x0C, 0xE0, 0x0E, 0x20
.byte 0x10, 0x56, 0x09, 0xE0, 0x0F, 0x20, 0x10, 0x56, 0x06, 0xE0, 0x10, 0x20, 0x10, 0x56, 0x03, 0xE0
.byte 0x11, 0x20, 0x10, 0x56, 0x00, 0xE0
_08002D42:
movs r0, #0x00
bx lr
.byte 0x00, 0x00
thumb_func_start spm_getSavedTrack
spm_getSavedTrack:
ldr r2, _08002D5C @ =0x03000010
ldr r0, [r0, #0x10]
cmp r0, #0x05
bhi _08002D9A
lsls r0, r0, #0x02
ldr r1, _08002D60 @ =0x08002D64
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
.byte 0x00, 0x00
_08002D5C: .4byte 0x03000010
_08002D60: .4byte 0x08002D64
.byte 0x7C, 0x2D, 0x00, 0x08, 0x88, 0x2D, 0x00, 0x08, 0x82, 0x2D, 0x00, 0x08, 0x8E, 0x2D, 0x00, 0x08
.byte 0x9A, 0x2D, 0x00, 0x08, 0x94, 0x2D, 0x00, 0x08, 0x12, 0x20, 0x10, 0x56, 0x0C, 0xE0, 0x13, 0x20
.byte 0x10, 0x56, 0x09, 0xE0, 0x14, 0x20, 0x10, 0x56, 0x06, 0xE0, 0x15, 0x20, 0x10, 0x56, 0x03, 0xE0
.byte 0x16, 0x20, 0x10, 0x56, 0x00, 0xE0
_08002D9A:
movs r0, #0x00
bx lr
.byte 0x00, 0x00
thumb_func_start sub_8002DA0
sub_8002DA0:
ldr r2, _08002DAC @ =0x03000010
movs r0, #0x17
ldsb r0, [r2, r0]
adds r0, r0, r2
strb r1, [r0, #0x00]
bx lr
_08002DAC: .4byte 0x03000010
thumb_func_start sub_8002DB0
sub_8002DB0:
adds r2, r1, #0x0
ldr r3, _08002DC4 @ =0x03000010
ldr r0, [r0, #0x10]
cmp r0, #0x05
bhi _08002DF6
lsls r0, r0, #0x02
ldr r1, _08002DC8 @ =0x08002DCC
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
_08002DC4: .4byte 0x03000010
_08002DC8: .4byte 0x08002DCC
.byte 0xE4, 0x2D, 0x00, 0x08, 0xEC, 0x2D, 0x00, 0x08, 0xE8, 0x2D, 0x00, 0x08, 0xF0, 0x2D, 0x00, 0x08
.byte 0xF6, 0x2D, 0x00, 0x08, 0xF4, 0x2D, 0x00, 0x08, 0x1A, 0x71, 0x06, 0xE0, 0x5A, 0x71, 0x04, 0xE0
.byte 0x9A, 0x71, 0x02, 0xE0, 0xDA, 0x71, 0x00, 0xE0, 0x1A, 0x72
_08002DF6:
bx lr
thumb_func_start sub_8002DF8
sub_8002DF8:
ldr r0, _08002E04 @ =0x03000010
adds r0, #0x09
adds r1, r1, r0
strb r2, [r1, #0x00]
bx lr
.byte 0x00, 0x00
_08002E04: .4byte 0x03000010
thumb_func_start sub_8002E08
sub_8002E08:
adds r2, r1, #0x0
ldr r3, _08002E1C @ =0x03000010
ldr r0, [r0, #0x10]
cmp r0, #0x05
bhi _08002E4E
lsls r0, r0, #0x02
ldr r1, _08002E20 @ =0x08002E24
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
_08002E1C: .4byte 0x03000010
_08002E20: .4byte 0x08002E24
.byte 0x3C, 0x2E, 0x00, 0x08, 0x44, 0x2E, 0x00, 0x08, 0x40, 0x2E, 0x00, 0x08, 0x48, 0x2E, 0x00, 0x08
.byte 0x4E, 0x2E, 0x00, 0x08, 0x4C, 0x2E, 0x00, 0x08, 0x5A, 0x73, 0x06, 0xE0, 0x9A, 0x73, 0x04, 0xE0
.byte 0xDA, 0x73, 0x02, 0xE0, 0x1A, 0x74, 0x00, 0xE0, 0x5A, 0x74
_08002E4E:
bx lr
thumb_func_start sub_8002E50
sub_8002E50:
adds r2, r1, #0x0
ldr r3, _08002E64 @ =0x03000010
ldr r0, [r0, #0x10]
cmp r0, #0x05
bhi _08002E96
lsls r0, r0, #0x02
ldr r1, _08002E68 @ =0x08002E6C
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
_08002E64: .4byte 0x03000010
_08002E68: .4byte 0x08002E6C
.byte 0x84, 0x2E, 0x00, 0x08, 0x8C, 0x2E, 0x00, 0x08, 0x88, 0x2E, 0x00, 0x08, 0x90, 0x2E, 0x00, 0x08
.byte 0x96, 0x2E, 0x00, 0x08, 0x94, 0x2E, 0x00, 0x08, 0x9A, 0x74, 0x06, 0xE0, 0xDA, 0x74, 0x04, 0xE0
.byte 0x1A, 0x75, 0x02, 0xE0, 0x5A, 0x75, 0x00, 0xE0, 0x9A, 0x75
_08002E96:
bx lr
.byte 0x01, 0x49, 0x03, 0x20, 0x08, 0x70, 0x70, 0x47, 0x0C, 0x00, 0x00, 0x03
thumb_func_start sub_8002EA4
sub_8002EA4:
push {r4, r5, r6, r7, lr}
adds r6, r0, #0x0
ldr r4, _08003038 @ =0x080B7680
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0x60
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
movs r0, #0x01
bl pltt_setDirtyFlag
adds r0, r6, #0x0
bl sub_80038B8
bl main_frameProc
ldr r0, [r6, #0x0C]
movs r7, #0x01
negs r7, r7
cmp r0, r7
beq _08002F2A
ldr r0, _0800303C @ =0x080B7E00
ldr r4, _08003040 @ =0x02012800
adds r1, r4, #0x0
bl LZ77UnCompWram
ldr r5, _08003044 @ =0x080D8E9C
ldr r0, [r6, #0x0C]
lsls r0, r0, #0x03
adds r0, r0, r5
ldr r0, [r0, #0x00]
movs r2, #0x80
lsls r2, r2, #0x01
adds r1, r4, r2
bl LZ77UnCompWram
ldr r0, _08003048 @ =0x080B7E40
movs r1, #0xC0
lsls r1, r1, #0x02
adds r4, r4, r1
adds r1, r4, #0x0
bl LZ77UnCompWram
ldr r0, [r6, #0x0C]
lsls r0, r0, #0x01
adds r0, #0x01
lsls r0, r0, #0x02
adds r0, r0, r5
ldr r4, [r0, #0x00]
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0x40
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
movs r0, #0x01
bl pltt_setDirtyFlag
bl main_frameProc
_08002F2A:
ldr r0, [r6, #0x08]
cmp r0, r7
beq _08002F82
ldr r0, _0800304C @ =0x080B7564
ldr r4, _08003050 @ =0x02013400
adds r1, r4, #0x0
bl LZ77UnCompWram
ldr r5, _08003054 @ =0x080D8EBC
ldr r0, [r6, #0x08]
lsls r0, r0, #0x03
adds r0, r0, r5
ldr r0, [r0, #0x00]
adds r1, r4, #0x0
adds r1, #0x80
bl LZ77UnCompWram
ldr r0, _08003058 @ =0x080B7594
movs r2, #0xC0
lsls r2, r2, #0x01
adds r4, r4, r2
adds r1, r4, #0x0
bl LZ77UnCompWram
ldr r0, [r6, #0x08]
lsls r0, r0, #0x01
adds r0, #0x01
lsls r0, r0, #0x02
adds r0, r0, r5
ldr r4, [r0, #0x00]
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0x80
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
movs r0, #0x01
bl pltt_setDirtyFlag
bl main_frameProc
_08002F82:
ldr r0, [r6, #0x10]
cmp r0, r7
beq _08002FDA
ldr r0, _0800304C @ =0x080B7564
ldr r4, _0800305C @ =0x02013600
adds r1, r4, #0x0
bl LZ77UnCompWram
ldr r5, _08003060 @ =0x080D8EDC
ldr r0, [r6, #0x10]
lsls r0, r0, #0x03
adds r0, r0, r5
ldr r0, [r0, #0x00]
adds r1, r4, #0x0
adds r1, #0x80
bl LZ77UnCompWram
ldr r0, _08003058 @ =0x080B7594
movs r1, #0xC0
lsls r1, r1, #0x01
adds r4, r4, r1
adds r1, r4, #0x0
bl LZ77UnCompWram
ldr r0, [r6, #0x10]
lsls r0, r0, #0x01
adds r0, #0x01
lsls r0, r0, #0x02
adds r0, r0, r5
ldr r4, [r0, #0x00]
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0xA0
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
movs r0, #0x01
bl pltt_setDirtyFlag
bl main_frameProc
_08002FDA:
ldr r0, [r6, #0x14]
cmp r0, r7
beq _080030BE
ldr r0, [r6, #0x10]
cmp r0, #0x01
bne _0800306C
ldr r0, _0800304C @ =0x080B7564
ldr r4, _08003064 @ =0x02013800
adds r1, r4, #0x0
bl LZ77UnCompWram
ldr r5, _08003068 @ =0x080D8F24
ldr r0, [r6, #0x14]
lsls r0, r0, #0x03
adds r0, r0, r5
ldr r0, [r0, #0x00]
adds r1, r4, #0x0
adds r1, #0x80
bl LZ77UnCompWram
ldr r0, _08003058 @ =0x080B7594
movs r2, #0xC0
lsls r2, r2, #0x01
adds r4, r4, r2
adds r1, r4, #0x0
bl LZ77UnCompWram
ldr r0, [r6, #0x14]
lsls r0, r0, #0x01
adds r0, #0x01
lsls r0, r0, #0x02
adds r0, r0, r5
ldr r4, [r0, #0x00]
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0xC0
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
movs r0, #0x01
bl pltt_setDirtyFlag
b _080030BA
.byte 0x00, 0x00
_08003038: .4byte 0x080B7680
_0800303C: .4byte 0x080B7E00
_08003040: .4byte 0x02012800
_08003044: .4byte 0x080D8E9C
_08003048: .4byte 0x080B7E40
_0800304C: .4byte 0x080B7564
_08003050: .4byte 0x02013400
_08003054: .4byte 0x080D8EBC
_08003058: .4byte 0x080B7594
_0800305C: .4byte 0x02013600
_08003060: .4byte 0x080D8EDC
_08003064: .4byte 0x02013800
_08003068: .4byte 0x080D8F24
_0800306C:
ldr r0, _08003140 @ =0x080B7564
ldr r4, _08003144 @ =0x02013800
adds r1, r4, #0x0
bl LZ77UnCompWram
ldr r5, _08003148 @ =0x080D8F0C
ldr r0, [r6, #0x14]
lsls r0, r0, #0x03
adds r0, r0, r5
ldr r0, [r0, #0x00]
adds r1, r4, #0x0
adds r1, #0x80
bl LZ77UnCompWram
ldr r0, _0800314C @ =0x080B7594
movs r1, #0xC0
lsls r1, r1, #0x01
adds r4, r4, r1
adds r1, r4, #0x0
bl LZ77UnCompWram
ldr r0, [r6, #0x14]
lsls r0, r0, #0x01
adds r0, #0x01
lsls r0, r0, #0x02
adds r0, r0, r5
ldr r4, [r0, #0x00]
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0xC0
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
movs r0, #0x01
bl pltt_setDirtyFlag
_080030BA:
bl main_frameProc
_080030BE:
ldr r1, [r6, #0x18]
movs r0, #0x01
negs r0, r0
cmp r1, r0
beq _08003106
movs r4, #0x03
cmp r1, #0x02
beq _080030D6
movs r4, #0x02
cmp r1, #0x03
beq _080030D6
adds r4, r1, #0x0
_080030D6:
bl dmaq_getVBlankDmaQueue
lsls r1, r4, #0x07
ldr r2, _08003150 @ =0x08063834
adds r1, r1, r2
ldr r2, _08003154 @ =0x02013000
ldr r3, _08003158 @ =0x80000040
bl dmaq_enqueue
ldr r4, _0800315C @ =0x080627D4
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0x60
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
movs r0, #0x01
bl pltt_setDirtyFlag
bl main_frameProc
_08003106:
ldr r0, _08003160 @ =0x080B8534
ldr r4, _08003164 @ =0x02013A00
adds r1, r4, #0x0
bl LZ77UnCompWram
bl main_frameProc
ldr r0, _08003168 @ =0x080B83A4
ldr r2, _0800316C @ =0xFFFFF200
adds r1, r4, r2
bl LZ77UnCompWram
bl main_frameProc
bl dmaq_getVBlankDmaQueue
ldr r1, _08003170 @ =0xFFFFEE00
adds r4, r4, r1
ldr r2, _08003174 @ =0x06012400
ldr r3, _08003178 @ =0x80000C00
adds r1, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_08003140: .4byte 0x080B7564
_08003144: .4byte 0x02013800
_08003148: .4byte 0x080D8F0C
_0800314C: .4byte 0x080B7594
_08003150: .4byte 0x08063834
_08003154: .4byte 0x02013000
_08003158: .4byte 0x80000040
_0800315C: .4byte 0x080627D4
_08003160: .4byte 0x080B8534
_08003164: .4byte 0x02013A00
_08003168: .4byte 0x080B83A4
_0800316C: .4byte 0xFFFFF200
_08003170: .4byte 0xFFFFEE00
_08003174: .4byte 0x06012400
_08003178: .4byte 0x80000C00
thumb_func_start spm_loadOtherGfx
spm_loadOtherGfx:
push {r4, r5, r6, r7, lr}
mov r7, r9
mov r6, r8
push {r6, r7}
add sp, #-0x01C
adds r6, r0, #0x0
movs r7, #0x00
movs r0, #0x00
mov r8, r0
movs r1, #0x85
lsls r1, r1, #0x05
adds r0, r6, r1
ldr r0, [r0, #0x00]
cmp r0, #0x00
bne _080031A0
adds r0, r6, #0x0
bl sub_80036E4
_080031A0:
ldr r1, [r6, #0x0C]
movs r0, #0x01
negs r0, r0
cmp r1, r0
beq _08003220
ldr r0, [r6, #0x34]
cmp r0, #0x01
bne _08003204
ldr r0, _08003210 @ =0x080B7E00
ldr r4, _08003214 @ =0x02012800
adds r1, r4, #0x0
bl LZ77UnCompWram
ldr r5, _08003218 @ =0x080D8E9C
ldr r0, [r6, #0x0C]
lsls r0, r0, #0x03
adds r0, r0, r5
ldr r0, [r0, #0x00]
movs r2, #0x80
lsls r2, r2, #0x01
adds r1, r4, r2
bl LZ77UnCompWram
ldr r0, _0800321C @ =0x080B7E40
movs r1, #0xC0
lsls r1, r1, #0x02
adds r4, r4, r1
adds r1, r4, #0x0
bl LZ77UnCompWram
movs r2, #0x01
mov r8, r2
ldr r0, [r6, #0x0C]
lsls r0, r0, #0x01
adds r0, #0x01
lsls r0, r0, #0x02
adds r0, r0, r5
ldr r4, [r0, #0x00]
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0x40
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
movs r0, #0x01
bl pltt_setDirtyFlag
_08003204:
ldr r0, [r6, #0x34]
cmp r0, #0x1F
bgt _0800322A
adds r0, #0x01
b _08003228
.byte 0x00, 0x00
_08003210: .4byte 0x080B7E00
_08003214: .4byte 0x02012800
_08003218: .4byte 0x080D8E9C
_0800321C: .4byte 0x080B7E40
_08003220:
ldr r0, [r6, #0x34]
cmp r0, #0x00
ble _0800322A
subs r0, #0x01
_08003228:
str r0, [r6, #0x34]
_0800322A:
ldr r2, [r6, #0x34]
cmp r2, #0x00
beq _0800325E
movs r0, #0x88
lsls r0, r0, #0x01
movs r1, #0x0A
str r1, [sp, #0x000]
movs r1, #0x20
movs r3, #0x20
bl sub_800E930
lsls r0, r0, #0x10
lsrs r0, r0, #0x10
movs r1, #0x90
lsls r1, r1, #0x10
orrs r0, r1
str r0, [sp, #0x008]
ldr r0, _080032CC @ =0x080C8634
movs r1, #0x00
str r1, [sp, #0x000]
str r1, [sp, #0x004]
add r1, sp, #0x008
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
_0800325E:
ldr r1, [r6, #0x04]
movs r0, #0x01
negs r0, r0
cmp r1, r0
beq _080032E0
ldr r0, [r6, #0x38]
cmp r0, #0x01
bne _080032C0
ldr r0, _080032D0 @ =0x080B7564
ldr r4, _080032D4 @ =0x02013400
adds r1, r4, #0x0
bl LZ77UnCompWram
ldr r5, _080032D8 @ =0x080D8EBC
ldr r0, [r6, #0x08]
lsls r0, r0, #0x03
adds r0, r0, r5
ldr r0, [r0, #0x00]
adds r1, r4, #0x0
adds r1, #0x80
bl LZ77UnCompWram
ldr r0, _080032DC @ =0x080B7594
movs r1, #0xC0
lsls r1, r1, #0x01
adds r4, r4, r1
adds r1, r4, #0x0
bl LZ77UnCompWram
movs r2, #0x01
mov r8, r2
ldr r0, [r6, #0x08]
lsls r0, r0, #0x01
adds r0, #0x01
lsls r0, r0, #0x02
adds r0, r0, r5
ldr r4, [r0, #0x00]
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0x80
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
movs r0, #0x01
bl pltt_setDirtyFlag
_080032C0:
ldr r0, [r6, #0x38]
cmp r0, #0x0F
bgt _080032EA
adds r0, #0x01
b _080032E8
.byte 0x00, 0x00
_080032CC: .4byte 0x080C8634
_080032D0: .4byte 0x080B7564
_080032D4: .4byte 0x02013400
_080032D8: .4byte 0x080D8EBC
_080032DC: .4byte 0x080B7594
_080032E0:
ldr r0, [r6, #0x38]
cmp r0, #0x00
ble _080032EA
subs r0, #0x01
_080032E8:
str r0, [r6, #0x38]
_080032EA:
ldr r0, [r6, #0x38]
cmp r0, #0x00
beq _0800334A
ldr r1, _080033C8 @ =0x080E645C
lsls r0, r0, #0x1A
asrs r0, r0, #0x10
cmp r0, #0x00
bge _080032FC
adds r0, #0x3F
_080032FC:
lsls r0, r0, #0x10
lsrs r0, r0, #0x16
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r0, [r0, #0x00]
ldr r3, _080033CC @ =0x080D8E88
lsls r1, r7, #0x02
adds r1, r1, r3
lsls r0, r0, #0x05
asrs r0, r0, #0x0F
subs r0, #0x20
ldrh r1, [r1, #0x00]
adds r0, r0, r1
lsls r0, r0, #0x10
lsrs r0, r0, #0x10
ldr r2, _080033D0 @ =0xFFFF0000
ldr r1, [sp, #0x00C]
ands r1, r2
orrs r1, r0
str r1, [sp, #0x00C]
lsls r0, r7, #0x01
adds r0, #0x01
lsls r0, r0, #0x01
adds r0, r0, r3
ldrh r0, [r0, #0x00]
lsls r0, r0, #0x10
ldr r2, _080033D4 @ =0x0000FFFF
ands r1, r2
orrs r1, r0
str r1, [sp, #0x00C]
ldr r0, _080033D8 @ =0x080C8644
add r1, sp, #0x00C
movs r2, #0x00
str r2, [sp, #0x000]
str r2, [sp, #0x004]
movs r3, #0x00
bl oam_renderCellData
adds r7, #0x01
_0800334A:
ldr r0, _080033DC @ =0x080C864C
mov r9, r0
ldr r1, [r6, #0x10]
movs r0, #0x01
negs r0, r0
cmp r1, r0
beq _080033F4
ldr r0, [r6, #0x3C]
cmp r0, #0x01
bne _080033B0
ldr r0, _080033E0 @ =0x080B7564
ldr r4, _080033E4 @ =0x02013600
adds r1, r4, #0x0
bl LZ77UnCompWram
ldr r5, _080033E8 @ =0x080D8EDC
ldr r0, [r6, #0x10]
lsls r0, r0, #0x03
adds r0, r0, r5
ldr r0, [r0, #0x00]
adds r1, r4, #0x0
adds r1, #0x80
bl LZ77UnCompWram
ldr r0, _080033EC @ =0x080B7594
movs r1, #0xC0
lsls r1, r1, #0x01
adds r4, r4, r1
adds r1, r4, #0x0
bl LZ77UnCompWram
movs r2, #0x01
mov r8, r2
ldr r0, [r6, #0x10]
lsls r0, r0, #0x01
adds r0, #0x01
lsls r0, r0, #0x02
adds r0, r0, r5
ldr r4, [r0, #0x00]
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0xA0
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
movs r0, #0x01
bl pltt_setDirtyFlag
_080033B0:
ldr r0, [r6, #0x3C]
cmp r0, #0x0F
bgt _080033FE
adds r0, #0x01
str r0, [r6, #0x3C]
ldr r0, [r6, #0x00]
cmp r0, #0x00
bne _080033FE
ldr r0, _080033F0 @ =0x080D8E80
mov r9, r0
b _080033FE
.byte 0x00, 0x00
_080033C8: .4byte 0x080E645C
_080033CC: .4byte 0x080D8E88
_080033D0: .4byte 0xFFFF0000
_080033D4: .4byte 0x0000FFFF
_080033D8: .4byte 0x080C8644
_080033DC: .4byte 0x080C864C
_080033E0: .4byte 0x080B7564
_080033E4: .4byte 0x02013600
_080033E8: .4byte 0x080D8EDC
_080033EC: .4byte 0x080B7594
_080033F0: .4byte 0x080D8E80
_080033F4:
ldr r0, [r6, #0x3C]
cmp r0, #0x00
ble _080033FE
subs r0, #0x01
str r0, [r6, #0x3C]
_080033FE:
ldr r0, [r6, #0x3C]
cmp r0, #0x00
beq _08003460
ldr r1, _080034D0 @ =0x080E645C
lsls r0, r0, #0x1A
asrs r0, r0, #0x10
cmp r0, #0x00
bge _08003410
adds r0, #0x3F
_08003410:
lsls r0, r0, #0x10
lsrs r0, r0, #0x16
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r0, [r0, #0x00]
ldr r3, _080034D4 @ =0x080D8E88
lsls r1, r7, #0x02
adds r1, r1, r3
lsls r0, r0, #0x05
asrs r0, r0, #0x0F
subs r0, #0x20
ldrh r1, [r1, #0x00]
adds r0, r0, r1
lsls r0, r0, #0x10
lsrs r0, r0, #0x10
ldr r2, _080034D8 @ =0xFFFF0000
ldr r1, [sp, #0x010]
ands r1, r2
orrs r1, r0
str r1, [sp, #0x010]
lsls r0, r7, #0x01
adds r0, #0x01
lsls r0, r0, #0x01
adds r0, r0, r3
ldrh r0, [r0, #0x00]
lsls r0, r0, #0x10
ldr r2, _080034DC @ =0x0000FFFF
ands r1, r2
orrs r1, r0
str r1, [sp, #0x010]
add r1, sp, #0x010
movs r0, #0x00
str r0, [sp, #0x000]
str r0, [sp, #0x004]
mov r0, r9
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
adds r7, #0x01
_08003460:
ldr r1, _080034E0 @ =0x080C8654
mov r9, r1
ldr r1, [r6, #0x14]
movs r0, #0x01
negs r0, r0
cmp r1, r0
bne _08003470
b _08003570
_08003470:
ldr r0, [r6, #0x40]
cmp r0, #0x01
bne _08003546
ldr r0, [r6, #0x10]
cmp r0, #0x01
bne _080034F4
ldr r0, _080034E4 @ =0x080B7564
ldr r4, _080034E8 @ =0x02013800
adds r1, r4, #0x0
bl LZ77UnCompWram
ldr r5, _080034EC @ =0x080D8F24
ldr r0, [r6, #0x14]
lsls r0, r0, #0x03
adds r0, r0, r5
ldr r0, [r0, #0x00]
adds r1, r4, #0x0
adds r1, #0x80
bl LZ77UnCompWram
ldr r0, _080034F0 @ =0x080B7594
movs r2, #0xC0
lsls r2, r2, #0x01
adds r4, r4, r2
adds r1, r4, #0x0
bl LZ77UnCompWram
movs r0, #0x01
mov r8, r0
ldr r0, [r6, #0x14]
lsls r0, r0, #0x01
adds r0, #0x01
lsls r0, r0, #0x02
adds r0, r0, r5
ldr r4, [r0, #0x00]
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0xC0
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
movs r0, #0x01
bl pltt_setDirtyFlag
b _08003546
_080034D0: .4byte 0x080E645C
_080034D4: .4byte 0x080D8E88
_080034D8: .4byte 0xFFFF0000
_080034DC: .4byte 0x0000FFFF
_080034E0: .4byte 0x080C8654
_080034E4: .4byte 0x080B7564
_080034E8: .4byte 0x02013800
_080034EC: .4byte 0x080D8F24
_080034F0: .4byte 0x080B7594
_080034F4:
ldr r0, _0800355C @ =0x080B7564
ldr r4, _08003560 @ =0x02013800
adds r1, r4, #0x0
bl LZ77UnCompWram
ldr r5, _08003564 @ =0x080D8F0C
ldr r0, [r6, #0x14]
lsls r0, r0, #0x03
adds r0, r0, r5
ldr r0, [r0, #0x00]
adds r1, r4, #0x0
adds r1, #0x80
bl LZ77UnCompWram
ldr r0, _08003568 @ =0x080B7594
movs r1, #0xC0
lsls r1, r1, #0x01
adds r4, r4, r1
adds r1, r4, #0x0
bl LZ77UnCompWram
movs r2, #0x01
mov r8, r2
ldr r0, [r6, #0x14]
lsls r0, r0, #0x01
adds r0, #0x01
lsls r0, r0, #0x02
adds r0, r0, r5
ldr r4, [r0, #0x00]
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0xC0
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
movs r0, #0x01
bl pltt_setDirtyFlag
_08003546:
ldr r0, [r6, #0x40]
cmp r0, #0x0F
bgt _0800357A
adds r0, #0x01
str r0, [r6, #0x40]
ldr r0, [r6, #0x00]
cmp r0, #0x00
bne _0800357A
ldr r0, _0800356C @ =0x080D8E80
mov r9, r0
b _0800357A
_0800355C: .4byte 0x080B7564
_08003560: .4byte 0x02013800
_08003564: .4byte 0x080D8F0C
_08003568: .4byte 0x080B7594
_0800356C: .4byte 0x080D8E80
_08003570:
ldr r0, [r6, #0x40]
cmp r0, #0x00
ble _0800357A
subs r0, #0x01
str r0, [r6, #0x40]
_0800357A:
ldr r0, [r6, #0x40]
cmp r0, #0x00
beq _080035DC
ldr r1, _08003634 @ =0x080E645C
lsls r0, r0, #0x1A
asrs r0, r0, #0x10
cmp r0, #0x00
bge _0800358C
adds r0, #0x3F
_0800358C:
lsls r0, r0, #0x10
lsrs r0, r0, #0x16
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r0, [r0, #0x00]
ldr r3, _08003638 @ =0x080D8E88
lsls r1, r7, #0x02
adds r1, r1, r3
lsls r0, r0, #0x05
asrs r0, r0, #0x0F
subs r0, #0x20
ldrh r1, [r1, #0x00]
adds r0, r0, r1
lsls r0, r0, #0x10
lsrs r0, r0, #0x10
ldr r2, _0800363C @ =0xFFFF0000
ldr r1, [sp, #0x014]
ands r1, r2
orrs r1, r0
str r1, [sp, #0x014]
lsls r0, r7, #0x01
adds r0, #0x01
lsls r0, r0, #0x01
adds r0, r0, r3
ldrh r0, [r0, #0x00]
lsls r0, r0, #0x10
ldr r2, _08003640 @ =0x0000FFFF
ands r1, r2
orrs r1, r0
str r1, [sp, #0x014]
add r1, sp, #0x014
movs r0, #0x00
str r0, [sp, #0x000]
str r0, [sp, #0x004]
mov r0, r9
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
adds r7, #0x01
_080035DC:
ldr r1, [r6, #0x18]
movs r0, #0x01
negs r0, r0
cmp r1, r0
beq _08003654
ldr r0, [r6, #0x44]
cmp r0, #0x01
bne _0800362A
movs r4, #0x03
cmp r1, #0x02
beq _080035FA
movs r4, #0x02
cmp r1, #0x03
beq _080035FA
adds r4, r1, #0x0
_080035FA:
bl dmaq_getVBlankDmaQueue
lsls r1, r4, #0x07
ldr r2, _08003644 @ =0x08063834
adds r1, r1, r2
ldr r2, _08003648 @ =0x02013000
ldr r3, _0800364C @ =0x80000040
bl dmaq_enqueue
movs r1, #0x01
mov r8, r1
ldr r4, _08003650 @ =0x080627D4
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0x60
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
movs r0, #0x01
bl pltt_setDirtyFlag
_0800362A:
ldr r0, [r6, #0x44]
cmp r0, #0x0F
bgt _0800365E
adds r0, #0x01
b _0800365C
_08003634: .4byte 0x080E645C
_08003638: .4byte 0x080D8E88
_0800363C: .4byte 0xFFFF0000
_08003640: .4byte 0x0000FFFF
_08003644: .4byte 0x08063834
_08003648: .4byte 0x02013000
_0800364C: .4byte 0x80000040
_08003650: .4byte 0x080627D4
_08003654:
ldr r0, [r6, #0x44]
cmp r0, #0x00
ble _0800365E
subs r0, #0x01
_0800365C:
str r0, [r6, #0x44]
_0800365E:
ldr r0, [r6, #0x44]
cmp r0, #0x00
beq _080036BE
ldr r1, _080036D0 @ =0x080E645C
lsls r0, r0, #0x1A
asrs r0, r0, #0x10
cmp r0, #0x00
bge _08003670
adds r0, #0x3F
_08003670:
lsls r0, r0, #0x10
lsrs r0, r0, #0x16
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r0, [r0, #0x00]
ldr r3, _080036D4 @ =0x080D8E88
lsls r1, r7, #0x02
adds r1, r1, r3
lsls r0, r0, #0x05
asrs r0, r0, #0x0F
subs r0, #0x20
ldrh r1, [r1, #0x00]
adds r0, r0, r1
lsls r0, r0, #0x10
lsrs r0, r0, #0x10
ldr r2, _080036D8 @ =0xFFFF0000
ldr r1, [sp, #0x018]
ands r1, r2
orrs r1, r0
str r1, [sp, #0x018]
lsls r0, r7, #0x01
adds r0, #0x01
lsls r0, r0, #0x01
adds r0, r0, r3
ldrh r0, [r0, #0x00]
lsls r0, r0, #0x10
ldr r2, _080036DC @ =0x0000FFFF
ands r1, r2
orrs r1, r0
str r1, [sp, #0x018]
ldr r0, _080036E0 @ =0x080C865C
add r1, sp, #0x018
movs r2, #0x00
str r2, [sp, #0x000]
str r2, [sp, #0x004]
movs r3, #0x00
bl oam_renderCellData
adds r7, #0x01
_080036BE:
str r7, [r6, #0x48]
mov r0, r8
add sp, #0x01C
pop {r3, r4}
mov r8, r3
mov r9, r4
pop {r4, r5, r6, r7}
pop {r1}
bx r1
_080036D0: .4byte 0x080E645C
_080036D4: .4byte 0x080D8E88
_080036D8: .4byte 0xFFFF0000
_080036DC: .4byte 0x0000FFFF
_080036E0: .4byte 0x080C865C
thumb_func_start sub_80036E4
sub_80036E4:
push {r4, r5, lr}
add sp, #-0x008
adds r5, r0, #0x0
ldr r1, _08003708 @ =0x00001094
adds r0, r5, r1
ldr r1, [r0, #0x00]
adds r1, #0x01
str r1, [r0, #0x00]
ldr r2, _0800370C @ =0x0000108C
adds r0, r5, r2
ldr r0, [r0, #0x00]
cmp r0, #0x04
bhi _080037D8
lsls r0, r0, #0x02
ldr r1, _08003710 @ =0x08003714
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
_08003708: .4byte 0x00001094
_0800370C: .4byte 0x0000108C
_08003710: .4byte 0x08003714
.byte 0x28, 0x37, 0x00, 0x08, 0x78, 0x37, 0x00, 0x08, 0xBC, 0x37, 0x00, 0x08, 0xBC, 0x37, 0x00, 0x08
.byte 0xD8, 0x37, 0x00, 0x08, 0x0E, 0x48, 0x41, 0x78, 0x0E, 0x4A, 0xA8, 0x18, 0x00, 0x68, 0x81, 0x42
.byte 0x50, 0xD0, 0x0D, 0x4C, 0x01, 0x20, 0x2A, 0xF0, 0x79, 0xFF, 0x01, 0x1C, 0x40, 0x31, 0x20, 0x1C
.byte 0x09, 0x22, 0x5D, 0xF0, 0x03, 0xFE, 0x01, 0x20, 0x2A, 0xF0, 0x8C, 0xFF, 0x07, 0x48, 0x29, 0x18
.byte 0x08, 0x68, 0x01, 0x30, 0x08, 0x60, 0x06, 0x4A, 0xA9, 0x18, 0x00, 0x20, 0x08, 0x60, 0x39, 0xE0
.byte 0x80, 0x2C, 0x00, 0x03, 0x88, 0x10, 0x00, 0x00, 0x30, 0xAE, 0x0C, 0x08, 0x8C, 0x10, 0x00, 0x00
.byte 0x90, 0x10, 0x00, 0x00, 0x0D, 0x48, 0x2A, 0x18, 0x10, 0x68, 0x01, 0x30, 0x10, 0x60, 0x10, 0x28
.byte 0x21, 0xDC, 0x0B, 0x49, 0x80, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04
.byte 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0x80, 0x01, 0x40, 0x42, 0xC0, 0x13, 0x8E, 0x21
.byte 0x49, 0x00, 0x40, 0x18, 0x03, 0x4A, 0xA9, 0x18, 0x08, 0x80, 0x13, 0xE0, 0x90, 0x10, 0x00, 0x00
.byte 0x5C, 0x64, 0x0E, 0x08, 0x98, 0x10, 0x00, 0x00, 0x13, 0x48, 0x2A, 0x18, 0x10, 0x68, 0x01, 0x30
.byte 0x10, 0x60, 0x3C, 0x28, 0x06, 0xDD, 0x11, 0x49, 0x68, 0x18, 0x01, 0x68, 0x01, 0x31, 0x01, 0x60
.byte 0x00, 0x20, 0x10, 0x60
_080037D8:
ldr r2, _08003810 @ =0x0000108C
adds r0, r5, r2
ldr r0, [r0, #0x00]
subs r0, #0x01
cmp r0, #0x02
bhi _08003832
ldr r4, _08003814 @ =0x080CAE30
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0x40
adds r0, r4, #0x0
movs r2, #0x09
bl CpuSet
ldr r1, _08003818 @ =0x00001094
adds r0, r5, r1
ldr r0, [r0, #0x00]
movs r1, #0x08
ands r0, r1
cmp r0, #0x00
beq _0800381C
adds r4, #0x02
b _0800381E
.byte 0x00, 0x00, 0x90, 0x10, 0x00, 0x00
_08003810: .4byte 0x0000108C
_08003814: .4byte 0x080CAE30
_08003818: .4byte 0x00001094
_0800381C:
adds r4, #0x22
_0800381E:
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0x42
adds r0, r4, #0x0
movs r2, #0x02
bl CpuSet
b _08003846
_08003832:
ldr r4, _080038A0 @ =0x080CAE32
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0x42
adds r0, r4, #0x0
movs r2, #0x02
bl CpuSet
_08003846:
movs r0, #0x01
bl pltt_setDirtyFlag
ldr r2, _080038A4 @ =0x0000108C
adds r0, r5, r2
ldr r0, [r0, #0x00]
cmp r0, #0x02
ble _0800387A
ldr r0, _080038A8 @ =0x03002C80
ldrb r0, [r0, #0x01]
ldr r1, _080038AC @ =0x080D8F34
subs r0, #0x01
cmp r0, #0x00
bge _08003864
movs r0, #0x00
_08003864:
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r0, [r0, #0x00]
ldr r2, _080038B0 @ =0x00001098
adds r1, r5, r2
movs r2, #0x00
str r2, [sp, #0x000]
str r2, [sp, #0x004]
movs r3, #0x00
bl oam_renderCellData
_0800387A:
ldr r1, _080038A4 @ =0x0000108C
adds r0, r5, r1
ldr r0, [r0, #0x00]
cmp r0, #0x00
ble _08003896
ldr r0, _080038B4 @ =0x080C8674
ldr r2, _080038B0 @ =0x00001098
adds r1, r5, r2
movs r2, #0x00
str r2, [sp, #0x000]
str r2, [sp, #0x004]
movs r3, #0x00
bl oam_renderCellData
_08003896:
add sp, #0x008
pop {r4, r5}
pop {r0}
bx r0
.byte 0x00, 0x00
_080038A0: .4byte 0x080CAE32
_080038A4: .4byte 0x0000108C
_080038A8: .4byte 0x03002C80
_080038AC: .4byte 0x080D8F34
_080038B0: .4byte 0x00001098
_080038B4: .4byte 0x080C8674
thumb_func_start sub_80038B8
sub_80038B8:
push {r4, r5, lr}
adds r5, r0, #0x0
ldr r0, _08003914 @ =0x080CC748
ldr r4, _08003918 @ =0x02016C00
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800391C @ =0x06016800
ldr r3, _08003920 @ =0x80000200
adds r1, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
movs r1, #0x85
lsls r1, r1, #0x05
adds r0, r5, r1
movs r1, #0x00
str r1, [r0, #0x00]
ldr r2, _08003924 @ =0x0000108C
adds r0, r5, r2
ldr r0, [r0, #0x00]
cmp r0, #0x00
beq _080038F0
cmp r0, #0x04
ble _0800390E
_080038F0:
ldr r2, _08003928 @ =0x00001094
adds r0, r5, r2
str r1, [r0, #0x00]
subs r2, #0x04
adds r0, r5, r2
str r1, [r0, #0x00]
ldr r0, _0800392C @ =0x00001098
adds r1, r5, r0
movs r0, #0x8E
lsls r0, r0, #0x01
strh r0, [r1, #0x00]
adds r2, #0x0A
adds r1, r5, r2
movs r0, #0x94
strh r0, [r1, #0x00]
_0800390E:
pop {r4, r5}
pop {r0}
bx r0
_08003914: .4byte 0x080CC748
_08003918: .4byte 0x02016C00
_0800391C: .4byte 0x06016800
_08003920: .4byte 0x80000200
_08003924: .4byte 0x0000108C
_08003928: .4byte 0x00001094
_0800392C: .4byte 0x00001098
thumb_func_start sub_8003930
sub_8003930:
movs r1, #0x00
ldr r2, _08003944 @ =0x0000108C
adds r0, r0, r2
ldr r0, [r0, #0x00]
cmp r0, #0x03
ble _0800393E
movs r1, #0x01
_0800393E:
adds r0, r1, #0x0
bx lr
.byte 0x00, 0x00
_08003944: .4byte 0x0000108C
thumb_func_start sub_8003948
sub_8003948:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x018
mov r9, r0
ldr r0, _08003B6C @ =0x000011F0
add r0, r9
mov r10, r0
ldr r0, [r0, #0x00]
ldr r1, _08003B70 @ =0xFFFFFF00
adds r0, r0, r1
mov r2, r10
str r0, [r2, #0x00]
lsls r0, r0, #0x10
asrs r0, r0, #0x10
cmp r0, #0x00
bge _08003970
adds r0, #0x3F
_08003970:
asrs r0, r0, #0x06
movs r6, #0x80
lsls r6, r6, #0x01
mov r8, r6
subs r0, r6, r0
ldr r3, _08003B74 @ =0x000003FF
ands r0, r3
lsls r0, r0, #0x02
ldr r1, _08003B78 @ =0x080E645C
adds r0, r0, r1
ldr r0, [r0, #0x00]
movs r5, #0xD5
muls r0, r5
cmp r0, #0x00
bge _08003992
ldr r2, _08003B7C @ =0x00007FFF
adds r0, r0, r2
_08003992:
asrs r0, r0, #0x0F
ldr r4, _08003B80 @ =0x0000121C
add r4, r9
ldrh r1, [r4, #0x00]
strh r0, [r4, #0x00]
mov r6, r10
movs r1, #0x00
ldsh r0, [r6, r1]
cmp r0, #0x00
bge _080039A8
adds r0, #0x3F
_080039A8:
asrs r0, r0, #0x06
ands r0, r3
lsls r0, r0, #0x02
ldr r2, _08003B78 @ =0x080E645C
adds r0, r0, r2
ldr r0, [r0, #0x00]
muls r0, r5
cmp r0, #0x00
bge _080039BE
ldr r6, _08003B7C @ =0x00007FFF
adds r0, r0, r6
_080039BE:
asrs r0, r0, #0x0F
ldr r2, _08003B84 @ =0x0000121E
add r2, r9
ldrh r1, [r2, #0x00]
strh r0, [r2, #0x00]
mov r1, r10
movs r6, #0x00
ldsh r0, [r1, r6]
cmp r0, #0x00
bge _080039D4
adds r0, #0x3F
_080039D4:
asrs r0, r0, #0x06
ands r0, r3
lsls r0, r0, #0x02
ldr r1, _08003B78 @ =0x080E645C
adds r0, r0, r1
ldr r1, [r0, #0x00]
lsls r0, r1, #0x03
adds r0, r0, r1
lsls r0, r0, #0x03
subs r0, r0, r1
lsls r1, r0, #0x02
subs r0, r0, r1
cmp r0, #0x00
bge _080039F4
ldr r6, _08003B7C @ =0x00007FFF
adds r0, r0, r6
_080039F4:
asrs r0, r0, #0x0F
movs r7, #0x91
lsls r7, r7, #0x05
add r7, r9
ldrh r1, [r7, #0x00]
strh r0, [r7, #0x00]
mov r1, r10
movs r6, #0x00
ldsh r0, [r1, r6]
cmp r0, #0x00
bge _08003A0C
adds r0, #0x3F
_08003A0C:
asrs r0, r0, #0x06
mov r1, r8
subs r0, r1, r0
ands r0, r3
lsls r0, r0, #0x02
ldr r6, _08003B78 @ =0x080E645C
adds r0, r0, r6
ldr r0, [r0, #0x00]
muls r0, r5
cmp r0, #0x00
bge _08003A26
ldr r1, _08003B7C @ =0x00007FFF
adds r0, r0, r1
_08003A26:
asrs r0, r0, #0x0F
ldr r3, _08003B88 @ =0x00001222
add r3, r9
ldrh r1, [r3, #0x00]
strh r0, [r3, #0x00]
ldrh r0, [r4, #0x00]
lsls r0, r0, #0x10
asrs r0, r0, #0x10
ldr r6, _08003B8C @ =0x000011E8
add r6, r9
mov r8, r6
ldr r5, [r6, #0x00]
adds r1, r0, #0x0
muls r1, r5
ldrh r0, [r2, #0x00]
lsls r0, r0, #0x10
asrs r0, r0, #0x10
ldr r6, _08003B90 @ =0x000011EC
add r6, r9
ldr r4, [r6, #0x00]
muls r0, r4
adds r1, r1, r0
movs r2, #0xC0
lsls r2, r2, #0x07
subs r2, r2, r1
ldrh r0, [r7, #0x00]
lsls r0, r0, #0x10
asrs r0, r0, #0x10
adds r1, r0, #0x0
muls r1, r5
ldrh r0, [r3, #0x00]
lsls r0, r0, #0x10
asrs r0, r0, #0x10
muls r0, r4
adds r1, r1, r0
movs r0, #0xE0
lsls r0, r0, #0x07
subs r0, r0, r1
ldr r1, _08003B94 @ =0x00001224
add r1, r9
ldrh r3, [r1, #0x00]
strh r2, [r1, #0x00]
ldr r3, _08003B98 @ =0x0FFF0000
ands r2, r3
asrs r2, r2, #0x10
ldr r1, _08003B9C @ =0x00001226
add r1, r9
ldrh r4, [r1, #0x00]
strh r2, [r1, #0x00]
ldr r1, _08003BA0 @ =0x00001228
add r1, r9
ldrh r2, [r1, #0x00]
strh r0, [r1, #0x00]
ands r0, r3
asrs r0, r0, #0x10
ldr r1, _08003BA4 @ =0x0000122A
add r1, r9
ldrh r2, [r1, #0x00]
strh r0, [r1, #0x00]
ldrh r1, [r6, #0x00]
lsls r1, r1, #0x10
mov r2, r8
ldrh r0, [r2, #0x00]
orrs r0, r1
str r0, [sp, #0x008]
ldr r0, _08003BA8 @ =0x080C860C
mov r6, r10
ldr r1, [r6, #0x00]
str r1, [sp, #0x000]
movs r1, #0x00
str r1, [sp, #0x004]
add r1, sp, #0x008
movs r2, #0xD5
movs r3, #0xD5
bl oam_renderCellData
movs r0, #0x00
mov r10, r0
mov r1, sp
adds r1, #0x0C
str r1, [sp, #0x014]
ldr r2, _08003B6C @ =0x000011F0
add r2, r9
str r2, [sp, #0x010]
_08003ACE:
mov r6, r10
lsls r0, r6, #0x0D
ldr r1, [sp, #0x010]
ldr r1, [r1, #0x00]
mov r8, r1
add r0, r8
lsls r0, r0, #0x10
asrs r4, r0, #0x10
adds r0, r4, #0x0
cmp r4, #0x00
bge _08003AE6
adds r0, #0x3F
_08003AE6:
asrs r5, r0, #0x06
movs r0, #0x80
lsls r0, r0, #0x01
subs r0, r0, r5
ldr r6, _08003B74 @ =0x000003FF
ands r0, r6
lsls r0, r0, #0x02
ldr r2, _08003B78 @ =0x080E645C
adds r0, r0, r2
ldr r2, [r0, #0x00]
ldr r0, _08003B8C @ =0x000011E8
add r0, r9
ldr r1, [r0, #0x00]
movs r7, #0x26
adds r0, r2, #0x0
muls r0, r7
asrs r0, r0, #0x0F
adds r1, r1, r0
lsls r1, r1, #0x10
lsrs r1, r1, #0x10
ldr r0, _08003BAC @ =0xFFFF0000
ldr r3, [sp, #0x00C]
ands r3, r0
orrs r3, r1
str r3, [sp, #0x00C]
adds r0, r5, #0x0
ands r0, r6
lsls r0, r0, #0x02
ldr r6, _08003B78 @ =0x080E645C
adds r0, r0, r6
ldr r2, [r0, #0x00]
ldr r0, _08003B90 @ =0x000011EC
add r0, r9
ldr r1, [r0, #0x00]
adds r0, r2, #0x0
muls r0, r7
asrs r0, r0, #0x0F
adds r1, r1, r0
lsls r1, r1, #0x10
ldr r0, _08003BB0 @ =0x0000FFFF
ands r3, r0
orrs r3, r1
str r3, [sp, #0x00C]
mov r1, r8
negs r0, r1
str r0, [sp, #0x000]
movs r0, #0x00
str r0, [sp, #0x004]
ldr r0, _08003BB4 @ =0x080C8614
ldr r1, [sp, #0x014]
movs r2, #0xD5
movs r3, #0xD5
bl oam_renderCellData
movs r2, #0x01
add r10, r2
mov r6, r10
cmp r6, #0x07
ble _08003ACE
add sp, #0x018
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_08003B6C: .4byte 0x000011F0
_08003B70: .4byte 0xFFFFFF00
_08003B74: .4byte 0x000003FF
_08003B78: .4byte 0x080E645C
_08003B7C: .4byte 0x00007FFF
_08003B80: .4byte 0x0000121C
_08003B84: .4byte 0x0000121E
_08003B88: .4byte 0x00001222
_08003B8C: .4byte 0x000011E8
_08003B90: .4byte 0x000011EC
_08003B94: .4byte 0x00001224
_08003B98: .4byte 0x0FFF0000
_08003B9C: .4byte 0x00001226
_08003BA0: .4byte 0x00001228
_08003BA4: .4byte 0x0000122A
_08003BA8: .4byte 0x080C860C
_08003BAC: .4byte 0xFFFF0000
_08003BB0: .4byte 0x0000FFFF
_08003BB4: .4byte 0x080C8614
thumb_func_start sub_8003BB8
sub_8003BB8:
push {r4, lr}
add sp, #-0x004
adds r4, r0, #0x0
movs r0, #0x0E
ldsb r0, [r4, r0]
cmp r0, #0x14
bls _08003BC8
b _08003FC8
_08003BC8:
lsls r0, r0, #0x02
ldr r1, _08003BD4 @ =0x08003BD8
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
.byte 0x00, 0x00
_08003BD4: .4byte 0x08003BD8
.byte 0xC8, 0x3F, 0x00, 0x08, 0x2C, 0x3C, 0x00, 0x08, 0x4A, 0x3C, 0x00, 0x08, 0x98, 0x3C, 0x00, 0x08
.byte 0xE4, 0x3C, 0x00, 0x08, 0x08, 0x3D, 0x00, 0x08, 0x6E, 0x3D, 0x00, 0x08, 0x8C, 0x3D, 0x00, 0x08
.byte 0xDC, 0x3D, 0x00, 0x08, 0xF4, 0x3D, 0x00, 0x08, 0x18, 0x3E, 0x00, 0x08, 0x50, 0x3E, 0x00, 0x08
.byte 0x6E, 0x3E, 0x00, 0x08, 0x9E, 0x3E, 0x00, 0x08, 0xBA, 0x3E, 0x00, 0x08, 0xC6, 0x3E, 0x00, 0x08
.byte 0x20, 0x3F, 0x00, 0x08, 0x46, 0x3F, 0x00, 0x08, 0x4E, 0x3F, 0x00, 0x08, 0x6A, 0x3F, 0x00, 0x08
.byte 0xC8, 0x3F, 0x00, 0x08, 0x20, 0x8A, 0x01, 0x30, 0x20, 0x82, 0x00, 0x04, 0x00, 0x14, 0xA2, 0x7D
.byte 0x51, 0x00, 0x89, 0x18, 0x88, 0x42, 0x00, 0xDC, 0xC2, 0xE1, 0x00, 0x20, 0x20, 0x82, 0x02, 0x20
.byte 0xBD, 0xE1, 0x20, 0x8A, 0x01, 0x30, 0x20, 0x82, 0x00, 0x04, 0x00, 0x14, 0x0C, 0x28, 0x1B, 0xDC
.byte 0x10, 0x21, 0x60, 0x5E, 0x80, 0x03, 0x0C, 0x21, 0x5E, 0xF0, 0x26, 0xF9, 0x09, 0x49, 0x00, 0x04
.byte 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18
.byte 0x01, 0x68, 0xA0, 0x7D, 0xC0, 0x00, 0xF8, 0x38, 0x48, 0x43, 0xC0, 0x13, 0x80, 0x22, 0x52, 0x00
.byte 0x92, 0xE1, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x20, 0x20, 0x82, 0x03, 0x20, 0x96, 0xE1
.byte 0x20, 0x8A, 0x01, 0x30, 0x20, 0x82, 0x00, 0x04, 0x00, 0x14, 0x08, 0x28, 0x1A, 0xDC, 0x10, 0x23
.byte 0xE0, 0x5E, 0x0A, 0x4B, 0x00, 0x07, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11
.byte 0x80, 0x22, 0x52, 0x00, 0x10, 0x1A, 0x06, 0x49, 0x08, 0x40, 0x80, 0x00, 0xC0, 0x18, 0x01, 0x68
.byte 0x80, 0x20, 0x00, 0x02, 0x40, 0x1A, 0xC0, 0x01, 0x40, 0x14, 0x3F, 0xE0, 0x5C, 0x64, 0x0E, 0x08
.byte 0xFF, 0x03, 0x00, 0x00, 0x00, 0x20, 0x20, 0x82, 0x04, 0x20, 0x70, 0xE1, 0x22, 0x8A, 0x01, 0x32
.byte 0x22, 0x82, 0x12, 0x04, 0x12, 0x14, 0xA1, 0x7D, 0xC9, 0x43, 0xE0, 0x7D, 0x09, 0x18, 0x48, 0x00
.byte 0x40, 0x18, 0x82, 0x42, 0x00, 0xDC, 0x63, 0xE1, 0x00, 0x20, 0x20, 0x82, 0x05, 0x20, 0x5E, 0xE1
.byte 0x20, 0x8A, 0x01, 0x30, 0x20, 0x82, 0x00, 0x04, 0x00, 0x14, 0x10, 0x28, 0x24, 0xDC, 0xA0, 0x7D
.byte 0xC0, 0x00, 0x08, 0x30, 0x12, 0x22, 0xA1, 0x5E, 0x10, 0x23, 0xE2, 0x5E, 0x05, 0x23, 0x00, 0x93
.byte 0x10, 0x23, 0x0A, 0xF0, 0x01, 0xFE, 0xA0, 0x80, 0x10, 0x21, 0x60, 0x5E, 0x09, 0x49, 0x80, 0x06
.byte 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18
.byte 0x00, 0x68, 0xC0, 0x01, 0x40, 0x42, 0xC0, 0x13, 0xC0, 0x22, 0x52, 0x00, 0x80, 0x18, 0x20, 0x81
.byte 0x36, 0xE1, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x20, 0x20, 0x82, 0x80, 0x20, 0x40, 0x00
.byte 0x20, 0x81, 0x0D, 0x20, 0x2B, 0xE1, 0x20, 0x8A, 0x01, 0x30, 0x20, 0x82, 0x00, 0x04, 0x00, 0x14
.byte 0xA2, 0x7D, 0x51, 0x00, 0x89, 0x18, 0x88, 0x42, 0x00, 0xDC, 0x21, 0xE1, 0x00, 0x20, 0x20, 0x82
.byte 0x07, 0x20, 0x1C, 0xE1, 0x20, 0x8A, 0x01, 0x30, 0x20, 0x82, 0x00, 0x04, 0x00, 0x14, 0x0C, 0x28
.byte 0x1C, 0xDC, 0x10, 0x23, 0xE0, 0x5E, 0x80, 0x03, 0x0C, 0x21, 0x5E, 0xF0, 0x85, 0xF8, 0x0A, 0x49
.byte 0x00, 0x04, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00
.byte 0x40, 0x18, 0x01, 0x68, 0xA0, 0x7D, 0xC0, 0x00, 0xC0, 0x38, 0x48, 0x43, 0xC0, 0x13, 0x80, 0x21
.byte 0x49, 0x00, 0x40, 0x18, 0xA0, 0x80, 0xFB, 0xE0, 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x20, 0x20, 0x82
.byte 0x08, 0x20, 0xF4, 0xE0, 0x20, 0x8A, 0x01, 0x30, 0x20, 0x82, 0x00, 0x04, 0x00, 0x14, 0x08, 0x28
.byte 0x00, 0xDC, 0xED, 0xE0, 0x00, 0x20, 0x20, 0x82, 0x09, 0x20, 0xE8, 0xE0, 0x22, 0x8A, 0x01, 0x32
.byte 0x22, 0x82, 0x12, 0x04, 0x12, 0x14, 0xA1, 0x7D, 0xC9, 0x43, 0xE3, 0x7D, 0xC9, 0x18, 0x48, 0x00
.byte 0x40, 0x18, 0x82, 0x42, 0x00, 0xDC, 0xDB, 0xE0, 0x00, 0x20, 0x20, 0x82, 0x0A, 0x20, 0xD6, 0xE0
.byte 0x20, 0x8A, 0x01, 0x30, 0x20, 0x82, 0x00, 0x04, 0x00, 0x14, 0x10, 0x28, 0x0D, 0xDC, 0xA0, 0x7D
.byte 0xC0, 0x00, 0x40, 0x30, 0x12, 0x22, 0xA1, 0x5E, 0x10, 0x23, 0xE2, 0x5E, 0x05, 0x23, 0x00, 0x93
.byte 0x10, 0x23, 0x0A, 0xF0, 0x79, 0xFD, 0xA0, 0x80, 0xC2, 0xE0, 0x00, 0x20, 0x20, 0x82, 0x80, 0x20
.byte 0x40, 0x00, 0x20, 0x81, 0x0D, 0x20, 0xBA, 0xE0, 0x20, 0x8A, 0x01, 0x30, 0x20, 0x82, 0x00, 0x04
.byte 0x00, 0x14, 0xA2, 0x7D, 0x51, 0x00, 0x89, 0x18, 0x88, 0x42, 0x00, 0xDC, 0xB0, 0xE0, 0x00, 0x20
.byte 0x20, 0x82, 0x0C, 0x20, 0xAB, 0xE0, 0x20, 0x8A, 0x01, 0x30, 0x20, 0x82, 0x00, 0x04, 0x00, 0x14
.byte 0x40, 0x28, 0x0C, 0xDC, 0x28, 0x20, 0x40, 0x42, 0x14, 0x22, 0xA1, 0x5E, 0x10, 0x23, 0xE2, 0x5E
.byte 0x09, 0x23, 0x00, 0x93, 0x40, 0x23, 0x0A, 0xF0, 0x4F, 0xFD, 0xE0, 0x80, 0x98, 0xE0, 0x00, 0x20
.byte 0x20, 0x82, 0x0D, 0x20, 0x93, 0xE0, 0x21, 0x8A, 0x01, 0x31, 0x21, 0x82, 0x09, 0x04, 0x09, 0x14
.byte 0xA0, 0x7D, 0x80, 0x00, 0x81, 0x42, 0x00, 0xDC, 0x8A, 0xE0, 0x00, 0x20, 0x20, 0x82, 0x0E, 0x20
.byte 0x85, 0xE0, 0x00, 0x20, 0x20, 0x82, 0xE0, 0x88, 0xA0, 0x82, 0x0F, 0x20, 0x7F, 0xE0, 0x20, 0x8A
.byte 0x01, 0x30, 0x20, 0x82, 0x00, 0x04, 0x00, 0x14, 0x08, 0x28, 0x21, 0xDC, 0x10, 0x21, 0x60, 0x5E
.byte 0x0D, 0x4A, 0x40, 0x07, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x81, 0x11, 0x80, 0x20
.byte 0x40, 0x00, 0x40, 0x1A, 0x09, 0x49, 0x08, 0x40, 0x80, 0x00, 0x80, 0x18, 0x01, 0x68, 0x80, 0x20
.byte 0x00, 0x02, 0x40, 0x1A, 0x80, 0x00, 0x40, 0x42, 0xC1, 0x0F, 0x40, 0x18, 0x00, 0x14, 0xA2, 0x8A
.byte 0x80, 0x18, 0xE0, 0x80, 0x5C, 0xE0, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x03, 0x00, 0x00
.byte 0x00, 0x20, 0x20, 0x82, 0x10, 0x20, 0x52, 0xE0, 0x21, 0x8A, 0x01, 0x31, 0x21, 0x82, 0x09, 0x04
.byte 0x09, 0x14, 0xA0, 0x7D, 0xC0, 0x43, 0xE3, 0x7D, 0xC0, 0x18, 0x80, 0x00, 0x96, 0x22, 0x52, 0x00
.byte 0x80, 0x18, 0x81, 0x42, 0x44, 0xDD, 0x00, 0x20, 0x20, 0x82, 0x0D, 0x20, 0x3F, 0xE0, 0x00, 0x20
.byte 0x20, 0x82, 0x12, 0x20, 0x3B, 0xE0, 0x20, 0x8A, 0x01, 0x30, 0x20, 0x82, 0x00, 0x04, 0x00, 0x14
.byte 0xA2, 0x7D, 0x51, 0x00, 0x89, 0x18, 0x88, 0x42, 0x32, 0xDD, 0x00, 0x20, 0x20, 0x82, 0x13, 0x20
.byte 0x2D, 0xE0, 0x20, 0x8A, 0x01, 0x30, 0x20, 0x82, 0x00, 0x04, 0x00, 0x14, 0x20, 0x28, 0x23, 0xDC
.byte 0x10, 0x23, 0xE0, 0x5E, 0x0E, 0x4A, 0x40, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30
.byte 0x81, 0x11, 0x80, 0x20, 0x40, 0x00, 0x40, 0x1A, 0x0A, 0x49, 0x08, 0x40, 0x80, 0x00, 0x80, 0x18
.byte 0x02, 0x68, 0x04, 0x21, 0x60, 0x5E, 0x1E, 0x21, 0x49, 0x42, 0x09, 0x1A, 0x80, 0x20, 0x00, 0x02
.byte 0x80, 0x1A, 0x48, 0x43, 0xC0, 0x13, 0xA2, 0x88, 0x80, 0x18, 0xA0, 0x80, 0x08, 0xE0, 0x00, 0x00
.byte 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x20, 0x20, 0x82, 0x14, 0x20, 0xA0, 0x73
_08003FC8:
add sp, #0x004
pop {r4}
pop {r0}
bx r0
thumb_func_start sub_8003FD0
sub_8003FD0:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x008
str r0, [sp, #0x000]
str r1, [sp, #0x004]
adds r4, r2, #0x0
mov r10, r3
ldr r6, [r3, #0x00]
ldrh r5, [r6, #0x00]
movs r0, #0x00
mov r12, r0
cmp r12, r5
bge _0800408C
_08003FF0:
mov r1, r12
lsls r0, r1, #0x02
add r0, r10
ldr r0, [r0, #0x04]
str r0, [r4, #0x00]
movs r0, #0x80
lsls r0, r0, #0x01
strh r0, [r4, #0x04]
subs r0, r5, r1
subs r1, r0, #0x1
ldrh r2, [r6, #0x00]
adds r3, r6, #0x2
adds r7, r0, #0x0
cmp r2, r1
bgt _08004010
subs r1, r2, #0x1
_08004010:
movs r0, #0x18
adds r0, r0, r4
mov r8, r0
movs r0, #0x01
add r0, r12
mov r9, r0
cmp r1, #0x00
ble _0800402A
adds r0, r1, #0x0
_08004022:
adds r3, #0x06
subs r0, #0x01
cmp r0, #0x00
bne _08004022
_0800402A:
movs r0, #0x00
ldsb r0, [r3, r0]
ldr r1, [sp, #0x004]
adds r0, r1, r0
strh r0, [r4, #0x06]
movs r0, #0x80
lsls r0, r0, #0x01
strh r0, [r4, #0x0A]
adds r1, r0, #0x0
strh r1, [r4, #0x08]
movs r0, #0x00
strh r0, [r4, #0x0C]
movs r0, #0x01
strb r0, [r4, #0x0E]
movs r1, #0x00
strh r1, [r4, #0x10]
adds r1, r6, #0x0
subs r0, r7, #0x1
ldrh r2, [r1, #0x00]
adds r1, #0x02
cmp r2, r0
bgt _08004058
subs r0, r2, #0x1
_08004058:
cmp r0, #0x00
ble _08004064
_0800405C:
adds r1, #0x06
subs r0, #0x01
cmp r0, #0x00
bne _0800405C
_08004064:
ldrh r0, [r1, #0x02]
ldr r2, _0800409C @ =0x000001FF
adds r1, r2, #0x0
ands r1, r0
adds r0, r1, #0x0
cmp r0, #0xFF
bls _08004078
adds r0, r1, #0x0
eors r0, r2
negs r0, r0
_08004078:
ldr r1, [sp, #0x000]
adds r0, r1, r0
strh r0, [r4, #0x12]
mov r0, r12
strb r0, [r4, #0x16]
strb r5, [r4, #0x17]
mov r4, r8
mov r12, r9
cmp r12, r5
blt _08003FF0
_0800408C:
add sp, #0x008
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_0800409C: .4byte 0x000001FF
thumb_func_start sub_80040A0
sub_80040A0:
push {r4, r5, r6, r7, lr}
add sp, #-0x010
adds r4, r0, #0x0
adds r7, r4, #0x0
adds r7, #0x54
bl sub_802DC88
cmp r0, #0x00
beq _080040D4
bl sub_802DCB4
cmp r0, #0x00
beq _080040D4
ldr r0, [r4, #0x4C]
movs r1, #0x2F
ands r0, r1
cmp r0, #0x0F
bgt _080040D4
ldr r0, _08004178 @ =0x080C863C
ldr r1, _0800417C @ =0x080D9128
movs r2, #0x00
str r2, [sp, #0x000]
str r2, [sp, #0x004]
movs r3, #0x00
bl oam_renderCellData
_080040D4:
ldr r1, [r7, #0x00]
lsls r0, r1, #0x01
adds r0, r0, r1
lsls r0, r0, #0x03
adds r0, #0x18
adds r4, r7, r0
ldr r5, [r4, #0x00]
cmp r5, #0x00
beq _0800411A
movs r1, #0x08
ldsh r0, [r4, r1]
cmp r0, #0x00
beq _0800411A
movs r1, #0x0A
ldsh r0, [r4, r1]
cmp r0, #0x00
beq _0800411A
ldrh r1, [r4, #0x06]
lsls r1, r1, #0x10
ldrh r0, [r4, #0x04]
orrs r0, r1
str r0, [sp, #0x008]
movs r0, #0x08
ldsh r2, [r4, r0]
movs r1, #0x0A
ldsh r3, [r4, r1]
movs r1, #0x0C
ldsh r0, [r4, r1]
str r0, [sp, #0x000]
movs r0, #0x00
str r0, [sp, #0x004]
adds r0, r5, #0x0
add r1, sp, #0x008
bl oam_renderCellData
_0800411A:
movs r6, #0x00
ldr r0, [r7, #0x14]
cmp r6, r0
bge _08004170
adds r4, r7, #0x0
adds r4, #0x18
_08004126:
ldr r0, [r7, #0x00]
cmp r6, r0
beq _08004166
ldr r5, [r4, #0x00]
cmp r5, #0x00
beq _08004166
movs r1, #0x08
ldsh r0, [r4, r1]
cmp r0, #0x00
beq _08004166
movs r1, #0x0A
ldsh r0, [r4, r1]
cmp r0, #0x00
beq _08004166
ldrh r1, [r4, #0x06]
lsls r1, r1, #0x10
ldrh r0, [r4, #0x04]
orrs r0, r1
str r0, [sp, #0x00C]
movs r0, #0x08
ldsh r2, [r4, r0]
movs r1, #0x0A
ldsh r3, [r4, r1]
movs r1, #0x0C
ldsh r0, [r4, r1]
str r0, [sp, #0x000]
movs r0, #0x00
str r0, [sp, #0x004]
adds r0, r5, #0x0
add r1, sp, #0x00C
bl oam_renderCellData
_08004166:
adds r4, #0x18
adds r6, #0x01
ldr r0, [r7, #0x14]
cmp r6, r0
blt _08004126
_08004170:
add sp, #0x010
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_08004178: .4byte 0x080C863C
_0800417C: .4byte 0x080D9128
thumb_func_start sub_8004180
sub_8004180:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x004
adds r6, r0, #0x0
adds r6, #0x54
ldr r1, [r0, #0x08]
cmp r1, #0x01
beq _080041B4
cmp r1, #0x01
bgt _080041A0
cmp r1, #0x00
beq _080041AA
b _080041DC
_080041A0:
cmp r1, #0x02
beq _080041C4
cmp r1, #0x03
beq _080041D0
b _080041DC
_080041AA:
str r1, [r6, #0x0C]
ldr r0, _080041B0 @ =0x080D8F94
b _080041D6
_080041B0: .4byte 0x080D8F94
_080041B4:
movs r0, #0x00
str r0, [r6, #0x0C]
ldr r0, _080041C0 @ =0x080D8FA8
str r0, [r6, #0x10]
str r1, [r6, #0x14]
b _080041DC
_080041C0: .4byte 0x080D8FA8
_080041C4:
movs r0, #0x00
str r0, [r6, #0x0C]
ldr r0, _080041CC @ =0x080D8FBC
b _080041D6
_080041CC: .4byte 0x080D8FBC
_080041D0:
movs r0, #0x00
str r0, [r6, #0x0C]
ldr r0, _080042B4 @ =0x080D8FD0
_080041D6:
str r0, [r6, #0x10]
movs r0, #0x01
str r0, [r6, #0x14]
_080041DC:
movs r7, #0x00
ldr r0, [r6, #0x14]
movs r1, #0x84
adds r1, r1, r6
mov r10, r1
adds r2, r6, #0x0
adds r2, #0x18
str r2, [sp, #0x000]
cmp r7, r0
bge _08004252
movs r0, #0x80
lsls r0, r0, #0x01
mov r9, r0
movs r1, #0x00
mov r8, r1
_080041FA:
ldr r0, [r6, #0x10]
add r0, r8
ldr r5, [r0, #0x04]
lsls r1, r7, #0x0B
ldr r0, _080042B8 @ =0x02014000
adds r4, r1, r0
mov r2, r9
adds r1, r4, r2
adds r0, r5, #0x0
bl LZ77UnCompWram
ldr r0, _080042BC @ =0x080B69EC
adds r1, r4, #0x0
bl LZ77UnCompWram
movs r0, #0xE0
lsls r0, r0, #0x03
adds r1, r4, r0
ldr r0, _080042C0 @ =0x080B6A5C
bl LZ77UnCompWram
ldr r0, [r6, #0x10]
add r0, r8
ldr r5, [r0, #0x08]
movs r0, #0x01
bl pltt_getBuffer
lsls r1, r7, #0x05
add r1, r9
adds r4, r0, r1
adds r0, r5, #0x0
adds r1, r4, #0x0
movs r2, #0x08
bl CpuFastSet
movs r0, #0x01
bl pltt_setDirtyFlag
movs r1, #0x14
add r8, r1
adds r7, #0x01
ldr r0, [r6, #0x14]
cmp r7, r0
blt _080041FA
_08004252:
movs r0, #0x01
mov r2, r10
str r0, [r2, #0x00]
movs r7, #0x00
ldr r0, [r6, #0x14]
cmp r7, r0
bge _08004292
movs r5, #0x00
movs r4, #0x80
lsls r4, r4, #0x01
adds r2, r6, #0x0
adds r2, #0x18
movs r3, #0x00
_0800426C:
ldr r1, [r6, #0x10]
adds r1, r3, r1
ldr r0, [r1, #0x00]
str r0, [r2, #0x00]
ldrh r0, [r1, #0x0C]
strh r0, [r2, #0x04]
ldr r0, [r6, #0x10]
adds r0, r3, r0
ldrh r0, [r0, #0x0E]
strh r0, [r2, #0x06]
strh r4, [r2, #0x0A]
strh r4, [r2, #0x08]
strh r5, [r2, #0x0C]
adds r2, #0x18
adds r3, #0x14
adds r7, #0x01
ldr r0, [r6, #0x14]
cmp r7, r0
blt _0800426C
_08004292:
movs r1, #0x00
str r1, [r6, #0x00]
movs r0, #0xC0
ldr r2, [sp, #0x000]
strh r0, [r2, #0x0A]
strh r0, [r2, #0x08]
str r1, [r6, #0x04]
movs r0, #0x04
str r0, [r6, #0x08]
add sp, #0x004
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_080042B4: .4byte 0x080D8FD0
_080042B8: .4byte 0x02014000
_080042BC: .4byte 0x080B69EC
_080042C0: .4byte 0x080B6A5C
thumb_func_start sub_80042C4
sub_80042C4:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x004
mov r10, r0
mov r6, r10
adds r6, #0x54
mov r1, r10
ldr r0, [r1, #0x08]
cmp r0, #0x01
beq _08004310
cmp r0, #0x01
bgt _080042E8
cmp r0, #0x00
beq _08004300
b _0800431C
_080042E8:
cmp r0, #0x03
bgt _0800431C
ldr r0, _080042F8 @ =0x080D8F7C
str r0, [r6, #0x0C]
ldr r0, _080042FC @ =0x080D905C
str r0, [r6, #0x10]
movs r0, #0x02
b _0800431A
_080042F8: .4byte 0x080D8F7C
_080042FC: .4byte 0x080D905C
_08004300:
ldr r0, _08004308 @ =0x080D8F64
str r0, [r6, #0x0C]
ldr r0, _0800430C @ =0x080D8FE4
b _08004316
_08004308: .4byte 0x080D8F64
_0800430C: .4byte 0x080D8FE4
_08004310:
ldr r0, _08004408 @ =0x080D8F64
str r0, [r6, #0x0C]
ldr r0, _0800440C @ =0x080D9020
_08004316:
str r0, [r6, #0x10]
movs r0, #0x03
_0800431A:
str r0, [r6, #0x14]
_0800431C:
movs r7, #0x00
ldr r0, [r6, #0x14]
adds r1, r6, #0x0
adds r1, #0x84
str r1, [sp, #0x000]
cmp r7, r0
bge _0800438C
movs r0, #0x80
lsls r0, r0, #0x01
mov r9, r0
movs r1, #0x00
mov r8, r1
_08004334:
ldr r0, [r6, #0x10]
add r0, r8
ldr r5, [r0, #0x04]
lsls r1, r7, #0x0B
ldr r0, _08004410 @ =0x02014000
adds r4, r1, r0
mov r0, r9
adds r1, r4, r0
adds r0, r5, #0x0
bl LZ77UnCompWram
ldr r0, _08004414 @ =0x080B69EC
adds r1, r4, #0x0
bl LZ77UnCompWram
movs r0, #0xE0
lsls r0, r0, #0x03
adds r1, r4, r0
ldr r0, _08004418 @ =0x080B6A5C
bl LZ77UnCompWram
ldr r0, [r6, #0x10]
add r0, r8
ldr r5, [r0, #0x08]
movs r0, #0x01
bl pltt_getBuffer
lsls r1, r7, #0x05
add r1, r9
adds r4, r0, r1
adds r0, r5, #0x0
adds r1, r4, #0x0
movs r2, #0x08
bl CpuFastSet
movs r0, #0x01
bl pltt_setDirtyFlag
movs r1, #0x14
add r8, r1
adds r7, #0x01
ldr r0, [r6, #0x14]
cmp r7, r0
blt _08004334
_0800438C:
movs r0, #0x01
ldr r1, [sp, #0x000]
str r0, [r1, #0x00]
movs r7, #0x00
ldr r0, [r6, #0x14]
cmp r7, r0
bge _080043CE
movs r5, #0x00
movs r4, #0x80
lsls r4, r4, #0x01
adds r2, r6, #0x0
adds r2, #0x18
movs r3, #0x00
_080043A6:
ldr r1, [r6, #0x10]
adds r1, r3, r1
ldr r0, [r1, #0x00]
str r0, [r2, #0x00]
ldrh r0, [r1, #0x0C]
adds r0, #0xF0
strh r0, [r2, #0x04]
ldr r0, [r6, #0x10]
adds r0, r3, r0
ldrh r0, [r0, #0x0E]
strh r0, [r2, #0x06]
strh r4, [r2, #0x0A]
strh r4, [r2, #0x08]
strh r5, [r2, #0x0C]
adds r2, #0x18
adds r3, #0x14
adds r7, #0x01
ldr r0, [r6, #0x14]
cmp r7, r0
blt _080043A6
_080043CE:
mov r0, r10
bl sub_8002C74
str r0, [r6, #0x00]
movs r0, #0x01
negs r0, r0
mov r1, r10
str r0, [r1, #0x10]
ldr r1, [r6, #0x00]
lsls r0, r1, #0x01
adds r0, r0, r1
lsls r0, r0, #0x03
adds r0, r0, r6
adds r0, #0x18
movs r2, #0x00
movs r1, #0xC0
strh r1, [r0, #0x0A]
strh r1, [r0, #0x08]
str r2, [r6, #0x04]
movs r0, #0x04
str r0, [r6, #0x08]
add sp, #0x004
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_08004408: .4byte 0x080D8F64
_0800440C: .4byte 0x080D9020
_08004410: .4byte 0x02014000
_08004414: .4byte 0x080B69EC
_08004418: .4byte 0x080B6A5C
thumb_func_start sub_800441C
sub_800441C:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x004
mov r10, r0
mov r6, r10
adds r6, #0x54
mov r1, r10
ldr r0, [r1, #0x10]
cmp r0, #0x05
bhi _08004484
lsls r0, r0, #0x02
ldr r1, _08004440 @ =0x08004444
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
_08004440: .4byte 0x08004444
.byte 0x5C, 0x44, 0x00, 0x08, 0x78, 0x44, 0x00, 0x08, 0x5C, 0x44, 0x00, 0x08, 0x70, 0x44, 0x00, 0x08
.byte 0x84, 0x44, 0x00, 0x08, 0x5C, 0x44, 0x00, 0x08, 0x02, 0x48, 0xF0, 0x60, 0x02, 0x48, 0x30, 0x61
.byte 0x03, 0x20, 0x0C, 0xE0, 0x64, 0x8F, 0x0D, 0x08, 0x94, 0x90, 0x0D, 0x08, 0x00, 0x20, 0xF0, 0x60
.byte 0x30, 0x61, 0x04, 0xE0, 0x3D, 0x48, 0xF0, 0x60, 0x3D, 0x48, 0x30, 0x61, 0x02, 0x20, 0x70, 0x61
_08004484:
movs r7, #0x00
ldr r0, [r6, #0x14]
adds r1, r6, #0x0
adds r1, #0x84
str r1, [sp, #0x000]
cmp r7, r0
bge _080044F4
movs r0, #0x80
lsls r0, r0, #0x01
mov r9, r0
movs r1, #0x00
mov r8, r1
_0800449C:
ldr r0, [r6, #0x10]
add r0, r8
ldr r5, [r0, #0x04]
lsls r1, r7, #0x0B
ldr r0, _08004578 @ =0x02014000
adds r4, r1, r0
mov r0, r9
adds r1, r4, r0
adds r0, r5, #0x0
bl LZ77UnCompWram
ldr r0, _0800457C @ =0x080B69EC
adds r1, r4, #0x0
bl LZ77UnCompWram
movs r0, #0xE0
lsls r0, r0, #0x03
adds r1, r4, r0
ldr r0, _08004580 @ =0x080B6A5C
bl LZ77UnCompWram
ldr r0, [r6, #0x10]
add r0, r8
ldr r5, [r0, #0x08]
movs r0, #0x01
bl pltt_getBuffer
lsls r1, r7, #0x05
add r1, r9
adds r4, r0, r1
adds r0, r5, #0x0
adds r1, r4, #0x0
movs r2, #0x08
bl CpuFastSet
movs r0, #0x01
bl pltt_setDirtyFlag
movs r1, #0x14
add r8, r1
adds r7, #0x01
ldr r0, [r6, #0x14]
cmp r7, r0
blt _0800449C
_080044F4:
movs r0, #0x01
ldr r1, [sp, #0x000]
str r0, [r1, #0x00]
movs r7, #0x00
ldr r0, [r6, #0x14]
cmp r7, r0
bge _08004536
movs r5, #0x00
movs r4, #0x80
lsls r4, r4, #0x01
adds r2, r6, #0x0
adds r2, #0x18
movs r3, #0x00
_0800450E:
ldr r1, [r6, #0x10]
adds r1, r3, r1
ldr r0, [r1, #0x00]
str r0, [r2, #0x00]
ldrh r0, [r1, #0x0C]
adds r0, #0xF0
strh r0, [r2, #0x04]
ldr r0, [r6, #0x10]
adds r0, r3, r0
ldrh r0, [r0, #0x0E]
strh r0, [r2, #0x06]
strh r4, [r2, #0x0A]
strh r4, [r2, #0x08]
strh r5, [r2, #0x0C]
adds r2, #0x18
adds r3, #0x14
adds r7, #0x01
ldr r0, [r6, #0x14]
cmp r7, r0
blt _0800450E
_08004536:
mov r0, r10
bl sub_8002C88
str r0, [r6, #0x00]
movs r0, #0x01
negs r0, r0
mov r1, r10
str r0, [r1, #0x14]
ldr r1, [r6, #0x00]
lsls r0, r1, #0x01
adds r0, r0, r1
lsls r0, r0, #0x03
adds r0, r0, r6
adds r0, #0x18
movs r2, #0x00
movs r1, #0xC0
strh r1, [r0, #0x0A]
strh r1, [r0, #0x08]
str r2, [r6, #0x04]
movs r0, #0x04
str r0, [r6, #0x08]
add sp, #0x004
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x7C, 0x8F, 0x0D, 0x08, 0xD0, 0x90, 0x0D, 0x08
_08004578: .4byte 0x02014000
_0800457C: .4byte 0x080B69EC
_08004580: .4byte 0x080B6A5C
thumb_func_start sub_8004584
sub_8004584:
push {r4, r5, r6, r7, lr}
mov r7, r8
push {r7}
adds r7, r0, #0x0
mov r8, r1
movs r5, #0xC0
lsls r5, r5, #0x13
movs r4, #0x07
_08004594:
bl dmaq_getVBlankDmaQueue
ldr r1, _08004798 @ =0x0203EBEC
adds r2, r5, #0x0
ldr r3, _0800479C @ =0x81000C00
bl dmaq_enqueue
bl main_frameProc
movs r0, #0xC0
lsls r0, r0, #0x05
adds r5, r5, r0
subs r4, #0x01
cmp r4, #0x00
bge _08004594
adds r0, r7, #0x0
bl sub_8002EA4
bl main_frameProc
ldr r4, _080047A0 @ =0x080AE03C
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0xA0
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
ldr r4, _080047A4 @ =0x0807CD48
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0xE0
adds r0, r4, #0x0
movs r2, #0x10
bl CpuFastSet
ldr r4, _080047A8 @ =0x080AF2C0
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r0, r4, #0x0
movs r2, #0x10
bl CpuFastSet
ldr r4, _080047AC @ =0x080AF300
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0x60
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
movs r0, #0x01
bl pltt_setDirtyFlag
bl main_frameProc
ldr r0, _080047B0 @ =0x0807D1E8
ldr r4, _080047B4 @ =0x02008400
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _080047B8 @ =0x06008000
ldr r3, _080047BC @ =0x80000600
adds r1, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _080047C0 @ =0x080AE180
movs r2, #0x80
lsls r2, r2, #0x07
adds r1, r4, r2
bl LZ77UnCompWram
bl main_frameProc
ldr r0, _080047C4 @ =0x080AE7C8
movs r1, #0xC0
lsls r1, r1, #0x07
adds r4, r4, r1
adds r1, r4, #0x0
bl LZ77UnCompWram
bl main_frameProc
movs r5, #0x00
ldr r6, _080047C8 @ =0x0600C000
_08004656:
lsls r4, r5, #0x0D
ldr r0, _080047CC @ =0x0200C400
adds r4, r4, r0
bl dmaq_getVBlankDmaQueue
adds r1, r4, #0x0
adds r2, r6, #0x0
ldr r3, _080047D0 @ =0x80001000
bl dmaq_enqueue
bl main_frameProc
movs r2, #0x80
lsls r2, r2, #0x06
adds r6, r6, r2
adds r5, #0x01
cmp r5, #0x01
ble _08004656
ldr r0, _080047D4 @ =0x080AF320
ldr r4, _080047D8 @ =0x02010400
adds r1, r4, #0x0
bl LZ77UnCompWram
bl main_frameProc
ldr r0, _080047DC @ =0x080C2FA8
movs r2, #0x80
lsls r2, r2, #0x05
adds r1, r4, r2
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _080047E0 @ =0x06010000
ldr r3, _080047E4 @ =0x80001200
adds r1, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _080047E8 @ =0x080AF778
movs r1, #0xD8
lsls r1, r1, #0x07
adds r4, r4, r1
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _080047EC @ =0x06016C00
ldr r3, _080047F0 @ =0x80000200
adds r1, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
bl main_frameProc
ldr r4, _080047F4 @ =0x080AEE04
movs r0, #0x00
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
adds r4, r0, #0x0
movs r0, #0x00
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
ldr r2, _080047F8 @ =0x06002000
ldr r3, _080047FC @ =0x80000400
adds r0, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r4, _08004800 @ =0x0807DA94
movs r0, #0x00
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
bl main_frameProc
ldr r4, _08004804 @ =0x0807DB98
movs r0, #0x01
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
movs r0, #0x03
bl map_setBufferDirty
bl main_frameProc
ldr r2, _08004808 @ =0x000011FE
adds r1, r7, r2
ldrh r0, [r1, #0x00]
movs r2, #0x00
movs r0, #0x0B
strh r0, [r1, #0x00]
ldr r0, _0800480C @ =0x00001204
adds r1, r7, r0
ldrh r0, [r1, #0x00]
ldr r0, _08004810 @ =0x0000020B
strh r0, [r1, #0x00]
ldr r0, _08004814 @ =0x0000120A
adds r1, r7, r0
ldrh r0, [r1, #0x00]
ldr r0, _08004818 @ =0x0000448E
strh r0, [r1, #0x00]
ldr r0, _0800481C @ =0x000011FC
adds r1, r7, r0
ldrh r0, [r1, #0x00]
ldr r0, _08004820 @ =0x00001741
strh r0, [r1, #0x00]
ldr r0, _08004824 @ =0x000011E8
adds r1, r7, r0
movs r0, #0xB4
lsls r0, r0, #0x01
str r0, [r1, #0x00]
ldr r0, _08004828 @ =0x000011EC
adds r1, r7, r0
movs r0, #0x50
str r0, [r1, #0x00]
ldr r1, _0800482C @ =0x000011F0
adds r0, r7, r1
str r2, [r0, #0x00]
adds r1, #0x08
adds r0, r7, r1
str r2, [r0, #0x00]
mov r2, r8
cmp r2, #0x00
bne _0800478C
ldr r1, _08004830 @ =0x00000D84
adds r0, r7, r1
ldr r0, [r0, #0x00]
cmp r0, #0x00
beq _08004838
_0800478C:
ldr r2, _08004834 @ =0x00001216
adds r0, r7, r2
ldrh r1, [r0, #0x00]
movs r1, #0xFF
b _08004840
.byte 0x00, 0x00
_08004798: .4byte 0x0203EBEC
_0800479C: .4byte 0x81000C00
_080047A0: .4byte 0x080AE03C
_080047A4: .4byte 0x0807CD48
_080047A8: .4byte 0x080AF2C0
_080047AC: .4byte 0x080AF300
_080047B0: .4byte 0x0807D1E8
_080047B4: .4byte 0x02008400
_080047B8: .4byte 0x06008000
_080047BC: .4byte 0x80000600
_080047C0: .4byte 0x080AE180
_080047C4: .4byte 0x080AE7C8
_080047C8: .4byte 0x0600C000
_080047CC: .4byte 0x0200C400
_080047D0: .4byte 0x80001000
_080047D4: .4byte 0x080AF320
_080047D8: .4byte 0x02010400
_080047DC: .4byte 0x080C2FA8
_080047E0: .4byte 0x06010000
_080047E4: .4byte 0x80001200
_080047E8: .4byte 0x080AF778
_080047EC: .4byte 0x06016C00
_080047F0: .4byte 0x80000200
_080047F4: .4byte 0x080AEE04
_080047F8: .4byte 0x06002000
_080047FC: .4byte 0x80000400
_08004800: .4byte 0x0807DA94
_08004804: .4byte 0x0807DB98
_08004808: .4byte 0x000011FE
_0800480C: .4byte 0x00001204
_08004810: .4byte 0x0000020B
_08004814: .4byte 0x0000120A
_08004818: .4byte 0x0000448E
_0800481C: .4byte 0x000011FC
_08004820: .4byte 0x00001741
_08004824: .4byte 0x000011E8
_08004828: .4byte 0x000011EC
_0800482C: .4byte 0x000011F0
_08004830: .4byte 0x00000D84
_08004834: .4byte 0x00001216
_08004838:
ldr r1, _08004858 @ =0x00001216
adds r0, r7, r1
ldrh r1, [r0, #0x00]
movs r1, #0xBF
_08004840:
strh r1, [r0, #0x00]
ldr r2, _0800485C @ =0x0000121A
adds r0, r7, r2
ldrh r1, [r0, #0x00]
movs r1, #0x10
strh r1, [r0, #0x00]
pop {r3}
mov r8, r3
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_08004858: .4byte 0x00001216
_0800485C: .4byte 0x0000121A
thumb_func_start sub_8004860
sub_8004860:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x030
mov r8, r0
adds r4, r1, #0x0
mov r7, r8
adds r7, #0x54
movs r0, #0x00
mov r10, r0
movs r1, #0x00
str r1, [sp, #0x01C]
movs r2, #0x00
str r2, [sp, #0x020]
mov r3, r8
str r0, [r3, #0x54]
str r0, [r7, #0x04]
str r0, [r7, #0x08]
str r0, [r7, #0x0C]
str r0, [r7, #0x10]
str r0, [r7, #0x14]
str r0, [r7, #0x78]
str r0, [r7, #0x7C]
mov r0, r8
adds r0, #0xD4
mov r6, r10
str r6, [r0, #0x00]
adds r0, #0x04
str r6, [r0, #0x00]
movs r1, #0xC0
lsls r1, r1, #0x13
movs r0, #0x00
bl map_setBufferDestination
ldr r1, _080048D4 @ =0x06001000
movs r0, #0x01
bl map_setBufferDestination
mov r0, r8
adds r1, r4, #0x0
bl sub_8004584
cmp r4, #0x00
beq _080048D8
movs r0, #0x01
str r0, [r7, #0x78]
str r0, [r7, #0x7C]
mov r1, r8
ldr r0, [r1, #0x10]
movs r2, #0x0A
mov r10, r2
cmp r0, #0x03
bne _080048F4
movs r3, #0x04
mov r10, r3
b _080048F4
_080048D4: .4byte 0x06001000
_080048D8:
mov r4, r10
str r4, [r7, #0x78]
str r4, [r7, #0x7C]
ldr r0, _08004974 @ =0x00000D84
add r0, r8
ldr r1, [r0, #0x00]
negs r0, r1
orrs r0, r1
asrs r0, r0, #0x1F
mov r10, r0
movs r0, #0x04
mov r6, r10
ands r6, r0
mov r10, r6
_080048F4:
ldr r2, _08004978 @ =0x00000D88
add r2, r8
ldr r3, _0800497C @ =0x080D90F8
movs r0, #0x80
movs r1, #0x18
bl sub_8003FD0
adds r0, r7, #0x0
adds r0, #0x84
str r0, [sp, #0x02C]
mov r1, sp
adds r1, #0x10
str r1, [sp, #0x028]
non_word_aligned_thumb_func_start sub_800490E
sub_800490E:
bl oam_update
bl main_frameProc
ldr r1, _08004980 @ =0x000011F4
add r1, r8
ldr r0, [r1, #0x00]
adds r0, #0x01
str r0, [r1, #0x00]
mov r2, r8
ldr r0, [r2, #0x4C]
adds r0, #0x01
str r0, [r2, #0x4C]
movs r0, #0x00
ldr r3, [sp, #0x02C]
str r0, [r3, #0x00]
ldr r0, _08004984 @ =0x03004F48
ldrh r1, [r0, #0x00]
add r0, sp, #0x008
strh r1, [r0, #0x00]
ldr r0, _08004988 @ =0x03004EA0
ldrh r0, [r0, #0x00]
ldr r4, [sp, #0x028]
strh r0, [r4, #0x00]
ldr r0, [r2, #0x08]
mov r5, r10
subs r5, #0x02
cmp r0, #0x00
ble _08004962
movs r3, #0x00
adds r2, r4, #0x0
adds r2, #0x02
mov r1, sp
adds r1, #0x0A
adds r4, r0, #0x0
_08004954:
strh r3, [r2, #0x00]
strh r3, [r1, #0x00]
adds r2, #0x02
adds r1, #0x02
subs r4, #0x01
cmp r4, #0x00
bne _08004954
_08004962:
mov r0, r8
ldr r6, [r0, #0x50]
cmp r5, #0x0E
bhi _08004A2A
lsls r0, r5, #0x02
ldr r1, _0800498C @ =0x08004990
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
_08004974: .4byte 0x00000D84
_08004978: .4byte 0x00000D88
_0800497C: .4byte 0x080D90F8
_08004980: .4byte 0x000011F4
_08004984: .4byte 0x03004F48
_08004988: .4byte 0x03004EA0
_0800498C: .4byte 0x08004990
.byte 0xCC, 0x49, 0x00, 0x08, 0xCC, 0x49, 0x00, 0x08, 0x2A, 0x4A, 0x00, 0x08, 0xCC, 0x49, 0x00, 0x08
.byte 0xCC, 0x49, 0x00, 0x08, 0x2A, 0x4A, 0x00, 0x08, 0xCC, 0x49, 0x00, 0x08, 0x2A, 0x4A, 0x00, 0x08
.byte 0x2A, 0x4A, 0x00, 0x08, 0xCC, 0x49, 0x00, 0x08, 0xCC, 0x49, 0x00, 0x08, 0x2A, 0x4A, 0x00, 0x08
.byte 0xCC, 0x49, 0x00, 0x08, 0xCC, 0x49, 0x00, 0x08, 0xCC, 0x49, 0x00, 0x08, 0x00, 0x24, 0x41, 0x46
.byte 0x8B, 0x68, 0x0E, 0x6D, 0x9C, 0x42, 0x28, 0xDC, 0xFD, 0x6F, 0x0A, 0x9A, 0x01, 0x21, 0x00, 0x2D
.byte 0x00, 0xD0, 0x02, 0x21, 0x10, 0x88, 0x01, 0x40, 0x00, 0x29, 0x1A, 0xD0, 0x52, 0x46, 0x06, 0x2A
.byte 0x01, 0xDD, 0x0F, 0x2A, 0x02, 0xD1, 0x07, 0x23, 0x08, 0x93, 0x0D, 0xE0, 0x54, 0x46, 0x0C, 0x2C
.byte 0x08, 0xDC, 0x41, 0x46, 0x08, 0x69, 0x64, 0x22, 0x08, 0x92, 0x03, 0x28, 0x04, 0xD0, 0x0D, 0x23
.byte 0x08, 0x93, 0x01, 0xE0, 0x64, 0x24, 0x08, 0x94, 0x12, 0x20, 0x82, 0x46, 0x00, 0x21, 0x07, 0x91
.byte 0x03, 0xE0, 0x02, 0x32, 0x01, 0x34, 0x9C, 0x42, 0xD8, 0xDD
_08004A2A:
cmp r6, #0x00
beq _08004A52
movs r1, #0x00
str r1, [r7, #0x78]
str r1, [r7, #0x7C]
adds r2, r7, #0x0
adds r2, #0x80
movs r0, #0x01
str r0, [r2, #0x00]
mov r2, r8
str r1, [r2, #0x50]
ldr r0, [r2, #0x10]
movs r3, #0x0D
str r3, [sp, #0x020]
cmp r0, #0x03
bne _08004A4E
movs r4, #0x07
str r4, [sp, #0x020]
_08004A4E:
movs r6, #0x13
mov r10, r6
_08004A52:
mov r0, r10
cmp r0, #0x17
bls _08004A5C
bl _08005420
_08004A5C:
lsls r0, r0, #0x02
ldr r1, _08004A68 @ =0x08004A6C
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
.byte 0x00, 0x00
_08004A68: .4byte 0x08004A6C
.byte 0xCC, 0x4A, 0x00, 0x08, 0x1A, 0x4B, 0x00, 0x08, 0xE8, 0x4C, 0x00, 0x08, 0x6C, 0x50, 0x00, 0x08
.byte 0xDA, 0x4A, 0x00, 0x08, 0x1A, 0x4B, 0x00, 0x08, 0x50, 0x4D, 0x00, 0x08, 0xFE, 0x4D, 0x00, 0x08
.byte 0x72, 0x50, 0x00, 0x08, 0xF0, 0x51, 0x00, 0x08, 0xE8, 0x4A, 0x00, 0x08, 0x1A, 0x4B, 0x00, 0x08
.byte 0x50, 0x4D, 0x00, 0x08, 0xFE, 0x4D, 0x00, 0x08, 0x72, 0x50, 0x00, 0x08, 0xF0, 0x51, 0x00, 0x08
.byte 0x5A, 0x52, 0x00, 0x08, 0x5A, 0x52, 0x00, 0x08, 0xF8, 0x52, 0x00, 0x08, 0xFE, 0x52, 0x00, 0x08
.byte 0x90, 0x53, 0x00, 0x08, 0xBC, 0x53, 0x00, 0x08, 0xD8, 0x53, 0x00, 0x08, 0x06, 0x54, 0x00, 0x08
.byte 0x40, 0x46, 0xFF, 0xF7, 0x57, 0xFB, 0x01, 0x21, 0x8A, 0x44, 0x00, 0xF0, 0xA3, 0xFC, 0x40, 0x46
.byte 0xFF, 0xF7, 0xF2, 0xFB, 0x01, 0x22, 0x92, 0x44, 0x00, 0xF0, 0x9C, 0xFC, 0x40, 0x46, 0xFF, 0xF7
.byte 0x97, 0xFC, 0x43, 0x46, 0x18, 0x69, 0x03, 0x28, 0x0D, 0xD0, 0x03, 0x28, 0x04, 0xDC, 0x00, 0x28
.byte 0x01, 0xDA, 0x00, 0xF0, 0x8F, 0xFC, 0x03, 0xE0, 0x05, 0x28, 0x01, 0xD0, 0x00, 0xF0, 0x8A, 0xFC
.byte 0x0B, 0x24, 0x00, 0xF0, 0x86, 0xFC, 0x10, 0x26, 0xB2, 0x46, 0x00, 0xF0, 0x83, 0xFC, 0x39, 0x68
.byte 0x48, 0x00, 0x40, 0x18, 0xC0, 0x00, 0x18, 0x30, 0x3A, 0x18, 0x78, 0x68, 0x01, 0x30, 0x1F, 0x21
.byte 0x08, 0x40, 0x78, 0x60, 0x14, 0x4B, 0xC0, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30
.byte 0x81, 0x11, 0x80, 0x20, 0x40, 0x00, 0x40, 0x1A, 0x10, 0x49, 0x08, 0x40, 0x80, 0x00, 0xC0, 0x18
.byte 0x00, 0x68, 0x80, 0x21, 0x09, 0x02, 0x09, 0x1A, 0x88, 0x00, 0x40, 0x18, 0x80, 0x00, 0xC0, 0x13
.byte 0xC0, 0x30, 0x00, 0x21, 0x00, 0x23, 0x50, 0x81, 0x10, 0x81, 0x07, 0x98, 0x01, 0x30, 0x07, 0x90
.byte 0x10, 0x28, 0x00, 0xDD, 0x9E, 0xE0, 0x51, 0x46, 0x05, 0x29, 0x35, 0xD0, 0x05, 0x29, 0x07, 0xDC
.byte 0x01, 0x29, 0x09, 0xD0, 0x74, 0xE0, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x03, 0x00, 0x00
.byte 0x52, 0x46, 0x0B, 0x2A, 0x51, 0xD0, 0x6B, 0xE0, 0xB8, 0x6F, 0x00, 0x28, 0x04, 0xD1, 0x05, 0x48
.byte 0x40, 0x44, 0x00, 0x68, 0x00, 0x28, 0x09, 0xD0, 0x03, 0x48, 0x40, 0x44, 0x01, 0x88, 0xFF, 0x21
.byte 0x08, 0xE0, 0x00, 0x00, 0x84, 0x0D, 0x00, 0x00, 0x16, 0x12, 0x00, 0x00, 0x08, 0x48, 0x40, 0x44
.byte 0x01, 0x88, 0xBF, 0x21, 0x01, 0x80, 0x07, 0x9B, 0x18, 0x01, 0x40, 0x42, 0x00, 0x28, 0x00, 0xDA
.byte 0x0F, 0x30, 0x00, 0x11, 0x10, 0x30, 0x03, 0x49, 0x41, 0x44, 0x0A, 0x88, 0x08, 0x80, 0x47, 0xE0
.byte 0x16, 0x12, 0x00, 0x00, 0x1A, 0x12, 0x00, 0x00, 0xB8, 0x6F, 0x3B, 0x1C, 0x80, 0x33, 0x00, 0x28
.byte 0x07, 0xD1, 0x18, 0x68, 0x00, 0x28, 0x1D, 0xD1, 0x0B, 0x48, 0x40, 0x44, 0x00, 0x68, 0x00, 0x28
.byte 0x18, 0xD0, 0x0A, 0x49, 0x41, 0x44, 0x08, 0x88, 0xFF, 0x20, 0x08, 0x80, 0x07, 0x9C, 0x20, 0x01
.byte 0x40, 0x42, 0x00, 0x28, 0x00, 0xDA, 0x0F, 0x30, 0x00, 0x11, 0x10, 0x30, 0x04, 0x49, 0x41, 0x44
.byte 0x0A, 0x88, 0x08, 0x80, 0x26, 0xE0, 0x00, 0x00, 0x84, 0x0D, 0x00, 0x00, 0x16, 0x12, 0x00, 0x00
.byte 0x1A, 0x12, 0x00, 0x00, 0x10, 0x26, 0x07, 0x96, 0x1C, 0xE0, 0xB8, 0x6F, 0x00, 0x28, 0x15, 0xD0
.byte 0x08, 0x49, 0x41, 0x44, 0x08, 0x88, 0xFF, 0x20, 0x08, 0x80, 0x07, 0x99, 0x08, 0x01, 0x40, 0x42
.byte 0x00, 0x28, 0x00, 0xDA, 0x0F, 0x30, 0x00, 0x11, 0x10, 0x30, 0x03, 0x49, 0x41, 0x44, 0x0A, 0x88
.byte 0x08, 0x80, 0x05, 0xE0, 0x16, 0x12, 0x00, 0x00, 0x1A, 0x12, 0x00, 0x00, 0x10, 0x22, 0x07, 0x92
.byte 0x3B, 0x1C, 0x80, 0x33, 0x18, 0x68, 0x00, 0x28, 0x00, 0xD0, 0xD3, 0xE3, 0x0A, 0x49, 0x41, 0x44
.byte 0x07, 0x9B, 0x98, 0x00, 0xC0, 0x18, 0x40, 0x01, 0x40, 0x42, 0x00, 0x28, 0x00, 0xDA, 0x0F, 0x30
.byte 0x00, 0x11, 0xB4, 0x24, 0x64, 0x00, 0x00, 0x19, 0x08, 0x60, 0x04, 0x49, 0x41, 0x44, 0x08, 0x68
.byte 0x03, 0x4E, 0x80, 0x19, 0x08, 0x60, 0xBD, 0xE3, 0xE8, 0x11, 0x00, 0x00, 0xF0, 0x11, 0x00, 0x00
.byte 0x00, 0xF8, 0xFF, 0xFF, 0x09, 0x49, 0x41, 0x44, 0x08, 0x88, 0x09, 0x48, 0x08, 0x80, 0x09, 0x49
.byte 0x41, 0x44, 0x08, 0x88, 0x08, 0x48, 0x08, 0x80, 0xBB, 0x67, 0x39, 0x1C, 0x80, 0x31, 0x01, 0x20
.byte 0x08, 0x60, 0x82, 0x44, 0x00, 0x20, 0x07, 0x90, 0xA4, 0xE3, 0x00, 0x00, 0x16, 0x12, 0x00, 0x00
.byte 0x41, 0x02, 0x00, 0x00, 0x18, 0x12, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x39, 0x68, 0x48, 0x00
.byte 0x40, 0x18, 0xC0, 0x00, 0x18, 0x30, 0x3A, 0x18, 0x78, 0x68, 0x01, 0x30, 0x1F, 0x21, 0x08, 0x40
.byte 0x78, 0x60, 0x12, 0x4B, 0xC0, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x81, 0x11
.byte 0x80, 0x20, 0x40, 0x00, 0x40, 0x1A, 0x0E, 0x49, 0x08, 0x40, 0x80, 0x00, 0xC0, 0x18, 0x00, 0x68
.byte 0x80, 0x21, 0x09, 0x02, 0x09, 0x1A, 0x88, 0x00, 0x40, 0x18, 0x80, 0x00, 0xC0, 0x13, 0xC0, 0x30
.byte 0x50, 0x81, 0x10, 0x81, 0x07, 0x99, 0x01, 0x31, 0x07, 0x91, 0x1E, 0x29, 0x00, 0xDC, 0x71, 0xE3
.byte 0x01, 0x22, 0x92, 0x44, 0x00, 0x23, 0x07, 0x93, 0x6C, 0xE3, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08
.byte 0xFF, 0x03, 0x00, 0x00, 0x39, 0x68, 0x48, 0x00, 0x40, 0x18, 0xC0, 0x00, 0x18, 0x30, 0x3A, 0x18
.byte 0x78, 0x68, 0x01, 0x30, 0x1F, 0x21, 0x08, 0x40, 0x78, 0x60, 0x21, 0x4B, 0xC0, 0x06, 0x00, 0x14
.byte 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x81, 0x11, 0x80, 0x20, 0x40, 0x00, 0x40, 0x1A, 0x1D, 0x49
.byte 0x08, 0x40, 0x80, 0x00, 0xC0, 0x18, 0x00, 0x68, 0x80, 0x21, 0x09, 0x02, 0x09, 0x1A, 0x88, 0x00
.byte 0x40, 0x18, 0x80, 0x00, 0xC0, 0x13, 0xC0, 0x30, 0x50, 0x81, 0x10, 0x81, 0x07, 0x9C, 0x01, 0x34
.byte 0x07, 0x94, 0x79, 0x69, 0x88, 0x00, 0x10, 0x30, 0x84, 0x42, 0x25, 0xDC, 0x00, 0x24, 0x8C, 0x42
.byte 0x00, 0xDB, 0x37, 0xE3, 0xA1, 0x46, 0x07, 0x9D, 0x3E, 0x1C, 0x18, 0x36, 0x00, 0x2D, 0x0E, 0xDB
.byte 0x14, 0x2D, 0x0C, 0xDC, 0x38, 0x69, 0x48, 0x44, 0x0C, 0x22, 0x81, 0x5E, 0x08, 0x1C, 0xF0, 0x30
.byte 0x0A, 0x22, 0x00, 0x92, 0x2A, 0x1C, 0x14, 0x23, 0x09, 0xF0, 0xAC, 0xFD, 0xB0, 0x80, 0x14, 0x23
.byte 0x99, 0x44, 0x04, 0x3D, 0x18, 0x36, 0x01, 0x34, 0x78, 0x69, 0x84, 0x42, 0xE6, 0xDB, 0x19, 0xE3
.byte 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x03, 0x00, 0x00, 0x01, 0x24, 0xA2, 0x44, 0x00, 0x26, 0x07, 0x96
.byte 0x10, 0xE3, 0x00, 0x24, 0x78, 0x69, 0x18, 0x4D, 0x84, 0x42, 0x09, 0xDA, 0x80, 0x22, 0x52, 0x00
.byte 0x39, 0x1C, 0x4A, 0x84, 0x0A, 0x84, 0x18, 0x31, 0x01, 0x34, 0x78, 0x69, 0x84, 0x42, 0xF8, 0xDB
.byte 0x39, 0x68, 0x48, 0x00, 0x40, 0x18, 0xC0, 0x00, 0x18, 0x30, 0x3B, 0x18, 0xB8, 0x68, 0x03, 0x28
.byte 0x1E, 0xDC, 0x01, 0x30, 0xB8, 0x60, 0x40, 0x07, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30
.byte 0x80, 0x11, 0x80, 0x22, 0x52, 0x00, 0x10, 0x1A, 0x08, 0x49, 0x08, 0x40, 0x80, 0x00, 0x40, 0x19
.byte 0x01, 0x68, 0x80, 0x20, 0x00, 0x02, 0x40, 0x1A, 0x80, 0x01, 0x40, 0x42, 0xC1, 0x0F, 0x40, 0x18
.byte 0x00, 0x14, 0x80, 0x18, 0x1F, 0xE0, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x03, 0x00, 0x00
.byte 0x78, 0x68, 0x01, 0x30, 0x1F, 0x21, 0x08, 0x40, 0x78, 0x60, 0xC0, 0x06, 0x00, 0x14, 0x00, 0x28
.byte 0x00, 0xDA, 0x3F, 0x30, 0x81, 0x11, 0x80, 0x20, 0x40, 0x00, 0x40, 0x1A, 0x12, 0x49, 0x08, 0x40
.byte 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x80, 0x21, 0x09, 0x02, 0x09, 0x1A, 0x88, 0x00, 0x40, 0x18
.byte 0x80, 0x00, 0xC0, 0x13, 0xC0, 0x30, 0x58, 0x81, 0x18, 0x81, 0x00, 0x20, 0xF8, 0x67, 0x00, 0x24
.byte 0x41, 0x46, 0x88, 0x68, 0x84, 0x42, 0x00, 0xDD, 0xB4, 0xE2, 0x01, 0x25, 0x6D, 0x42, 0x00, 0x23
.byte 0x3A, 0x68, 0x68, 0x46, 0xC0, 0x18, 0x08, 0x30, 0x00, 0x88, 0x20, 0x28, 0x19, 0xD0, 0x20, 0x28
.byte 0x04, 0xDC, 0x10, 0x28, 0x1C, 0xD0, 0x24, 0xE0, 0xFF, 0x03, 0x00, 0x00, 0x40, 0x28, 0x02, 0xD0
.byte 0x80, 0x28, 0x07, 0xD0, 0x1D, 0xE0, 0xF9, 0x68, 0xD0, 0x00, 0x40, 0x18, 0x00, 0x79, 0x00, 0x06
.byte 0x00, 0x16, 0x13, 0xE0, 0xF9, 0x68, 0xD0, 0x00, 0x40, 0x18, 0x40, 0x79, 0x00, 0x06, 0x00, 0x16
.byte 0x0C, 0xE0, 0xF9, 0x68, 0xD0, 0x00, 0x40, 0x18, 0x80, 0x79, 0x00, 0x06, 0x00, 0x16, 0x05, 0xE0
.byte 0xF9, 0x68, 0xD0, 0x00, 0x40, 0x18, 0xC0, 0x79, 0x00, 0x06, 0x00, 0x16, 0xA8, 0x42, 0x00, 0xD0
.byte 0x38, 0x60, 0x38, 0x68, 0x82, 0x42, 0x00, 0xD0, 0x68, 0xE2, 0x0A, 0x9E, 0xF0, 0x18, 0x01, 0x88
.byte 0x09, 0x20, 0x08, 0x40, 0x00, 0x28, 0x4B, 0xD0, 0x50, 0x46, 0x07, 0x28, 0x04, 0xD0, 0x0D, 0x28
.byte 0x26, 0xD0, 0x52, 0x46, 0x01, 0x32, 0x3F, 0xE0, 0x8E, 0x20, 0x5A, 0xF0, 0xEB, 0xFF, 0x39, 0x68
.byte 0x3A, 0x69, 0x88, 0x00, 0x40, 0x18, 0x80, 0x00, 0x80, 0x18, 0x00, 0x7C, 0x00, 0x06, 0x00, 0x16
.byte 0x41, 0x46, 0x08, 0x61, 0x39, 0x68, 0x40, 0x46, 0xFD, 0xF7, 0x1C, 0xFF, 0x42, 0x46, 0x10, 0x69
.byte 0x08, 0x22, 0x03, 0x28, 0x28, 0xD1, 0x00, 0x21, 0x11, 0x23, 0x04, 0x48, 0x40, 0x44, 0x03, 0x70
.byte 0x18, 0x30, 0x01, 0x31, 0x0A, 0x29, 0xFA, 0xD9, 0x1E, 0xE0, 0x00, 0x00, 0x96, 0x0D, 0x00, 0x00
.byte 0x8E, 0x20, 0x5A, 0xF0, 0xC7, 0xFF, 0x39, 0x68, 0x3A, 0x69, 0x88, 0x00, 0x40, 0x18, 0x80, 0x00
.byte 0x80, 0x18, 0x00, 0x7C, 0x00, 0x06, 0x00, 0x16, 0x43, 0x46, 0x58, 0x61, 0x39, 0x68, 0x40, 0x46
.byte 0xFD, 0xF7, 0x00, 0xFF, 0x00, 0x21, 0x0E, 0x22, 0x11, 0x23, 0x04, 0x48, 0x40, 0x44, 0x03, 0x70
.byte 0x18, 0x30, 0x01, 0x31, 0x0A, 0x29, 0xFA, 0xD9, 0x92, 0x46, 0x2B, 0xE0, 0x96, 0x0D, 0x00, 0x00
.byte 0x02, 0x20, 0x08, 0x40, 0x00, 0x28, 0x28, 0xD0, 0x01, 0x20, 0xF8, 0x67, 0x90, 0x20, 0x5A, 0xF0
.byte 0xA1, 0xFF, 0x56, 0x46, 0x07, 0x2E, 0x02, 0xD0, 0x0D, 0x2E, 0x15, 0xD0, 0x1A, 0xE2, 0x40, 0x46
.byte 0x85, 0x60, 0x45, 0x60, 0x00, 0x21, 0x11, 0x22, 0x06, 0x48, 0x40, 0x44, 0x02, 0x70, 0x18, 0x30
.byte 0x01, 0x31, 0x0A, 0x29, 0xFA, 0xD9, 0x39, 0x68, 0x40, 0x46, 0xFD, 0xF7, 0xCB, 0xFE, 0x09, 0x21
.byte 0x21, 0xE1, 0x00, 0x00, 0x96, 0x0D, 0x00, 0x00, 0x39, 0x68, 0x40, 0x46, 0xFD, 0xF7, 0xCA, 0xFE
.byte 0x0F, 0x23, 0x9A, 0x46, 0x00, 0x24, 0x07, 0x94, 0xFC, 0xE1, 0x04, 0x20, 0x08, 0x40, 0x00, 0x28
.byte 0x16, 0xD0, 0x56, 0x46, 0x07, 0x2E, 0x13, 0xD1, 0x39, 0x69, 0x90, 0x00, 0x80, 0x18, 0x80, 0x00
.byte 0x40, 0x18, 0x00, 0x7C, 0x00, 0x06, 0x00, 0x16, 0x00, 0x28, 0x00, 0xD1, 0xEA, 0xE1, 0x03, 0x28
.byte 0x00, 0xD1, 0xE7, 0xE1, 0x8E, 0x20, 0x5A, 0xF0, 0x65, 0xFF, 0x15, 0x20, 0x82, 0x46, 0xE1, 0xE1
.byte 0x02, 0x33, 0x01, 0x34, 0x41, 0x46, 0x88, 0x68, 0x84, 0x42, 0x00, 0xDC, 0x28, 0xE7, 0xD9, 0xE1
.byte 0x42, 0x46, 0x90, 0x68, 0x50, 0x60, 0x07, 0x9B, 0x01, 0x33, 0x07, 0x93, 0x20, 0x2B, 0x00, 0xDD
.byte 0x99, 0xE0, 0x00, 0x24, 0x79, 0x69, 0x8C, 0x42, 0x2D, 0xDA, 0x46, 0x4E, 0xB1, 0x46, 0x60, 0x1C
.byte 0x0B, 0x1A, 0x59, 0x00, 0xC9, 0x18, 0xC9, 0x00, 0x18, 0x31, 0x7E, 0x18, 0x39, 0x68, 0x05, 0x1C
.byte 0x8B, 0x42, 0x1C, 0xD0, 0xA0, 0x00, 0x07, 0x99, 0x08, 0x1A, 0x00, 0x28, 0x17, 0xDB, 0x10, 0x28
.byte 0x15, 0xDC, 0x80, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D
.byte 0x80, 0x00, 0x48, 0x44, 0x02, 0x68, 0x38, 0x69, 0x99, 0x00, 0xC9, 0x18, 0x89, 0x00, 0x09, 0x18
.byte 0x10, 0x01, 0x80, 0x1A, 0x00, 0x01, 0xC0, 0x13, 0x89, 0x89, 0x40, 0x18, 0xB0, 0x80, 0x2C, 0x1C
.byte 0x79, 0x69, 0x8C, 0x42, 0xD3, 0xDB, 0x3C, 0x68, 0x60, 0x00, 0x00, 0x19, 0xC0, 0x00, 0x18, 0x30
.byte 0xC0, 0x19, 0x81, 0x46, 0x07, 0x9A, 0x14, 0x2A, 0x58, 0xDC, 0x90, 0x03, 0x14, 0x21, 0x5C, 0xF0
.byte 0xD9, 0xFE, 0x28, 0x4B, 0x00, 0x04, 0x05, 0x14, 0x28, 0x1C, 0x00, 0x2D, 0x00, 0xDA, 0x3F, 0x30
.byte 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0xC6, 0x18, 0x33, 0x68, 0x9C, 0x46, 0x38, 0x69, 0xA2, 0x00
.byte 0x12, 0x19, 0x92, 0x00, 0x12, 0x18, 0x20, 0x4C, 0x41, 0x46, 0x88, 0x6C, 0x01, 0x38, 0x80, 0x00
.byte 0x00, 0x19, 0x00, 0x23, 0xC1, 0x5E, 0x0C, 0x23, 0xD0, 0x5E, 0x04, 0x38, 0x09, 0x1A, 0x60, 0x46
.byte 0x48, 0x43, 0xC0, 0x13, 0x92, 0x89, 0x80, 0x18, 0x49, 0x46, 0x88, 0x80, 0x33, 0x68, 0x38, 0x68
.byte 0x39, 0x69, 0x82, 0x00, 0x12, 0x18, 0x92, 0x00, 0x52, 0x18, 0x46, 0x46, 0xB0, 0x6C, 0x01, 0x38
.byte 0x40, 0x00, 0x01, 0x30, 0x40, 0x00, 0x00, 0x19, 0x00, 0x21, 0x40, 0x5E, 0x0E, 0x24, 0x11, 0x5F
.byte 0x40, 0x1A, 0x58, 0x43, 0xC0, 0x13, 0xD2, 0x89, 0x80, 0x18, 0x4E, 0x46, 0xF0, 0x80, 0x07, 0x99
.byte 0xC8, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x1A, 0x40, 0x00, 0x40, 0x42, 0x14, 0x21, 0x5C, 0xF0
.byte 0x91, 0xFE, 0x01, 0x1C, 0x64, 0x31, 0xC8, 0x20, 0xC0, 0x01, 0x5C, 0xF0, 0x8B, 0xFE, 0x70, 0x81
.byte 0x30, 0x81, 0x3F, 0xE1, 0x5C, 0x64, 0x0E, 0x08, 0x88, 0x8E, 0x0D, 0x08, 0x00, 0x20, 0x4A, 0x46
.byte 0x50, 0x81, 0x10, 0x81, 0x36, 0xE1, 0x78, 0x69, 0x00, 0x28, 0x07, 0xDD, 0x00, 0x22, 0x39, 0x1C
.byte 0x04, 0x1C, 0x8A, 0x61, 0x18, 0x31, 0x01, 0x3C, 0x00, 0x2C, 0xFA, 0xD1, 0x53, 0x46, 0x08, 0x2B
.byte 0x0B, 0xD0, 0x08, 0x2B, 0x02, 0xDC, 0x03, 0x2B, 0x04, 0xD0, 0x3D, 0xE0, 0x54, 0x46, 0x0E, 0x2C
.byte 0x06, 0xD0, 0x39, 0xE0, 0x04, 0x26, 0xB2, 0x46, 0x36, 0xE0, 0x0A, 0x20, 0x82, 0x46, 0x33, 0xE0
.byte 0x10, 0x21, 0x30, 0xE0, 0x07, 0x9B, 0x01, 0x33, 0x07, 0x93, 0x10, 0x2B, 0x16, 0xDC, 0x98, 0x00
.byte 0xC0, 0x18, 0x00, 0x01, 0x80, 0x24, 0x64, 0x00, 0x02, 0x19, 0x00, 0x24, 0x78, 0x69, 0x84, 0x42
.byte 0x00, 0xDB, 0x07, 0xE1, 0x1B, 0x03, 0x39, 0x1C, 0x20, 0x31, 0x4A, 0x80, 0x0A, 0x80, 0x8B, 0x80
.byte 0x18, 0x31, 0x01, 0x34, 0x78, 0x69, 0x84, 0x42, 0xF7, 0xDB, 0xFB, 0xE0, 0x78, 0x69, 0x00, 0x28
.byte 0x07, 0xDD, 0x00, 0x22, 0x39, 0x1C, 0x04, 0x1C, 0x8A, 0x61, 0x18, 0x31, 0x01, 0x3C, 0x00, 0x2C
.byte 0xFA, 0xD1, 0x56, 0x46, 0x09, 0x2E, 0x02, 0xD0, 0x0F, 0x2E, 0x03, 0xD0, 0x04, 0xE0, 0x11, 0x20
.byte 0x82, 0x46, 0x01, 0xE0, 0x04, 0x21, 0x8A, 0x46, 0x00, 0x22, 0x07, 0x92, 0xE2, 0xE0, 0x07, 0x9B
.byte 0x01, 0x33, 0x07, 0x93, 0x20, 0x2B, 0x43, 0xDC, 0x54, 0x46, 0x10, 0x2C, 0x02, 0xD0, 0x11, 0x2C
.byte 0x12, 0xD0, 0x1E, 0xE0, 0x46, 0x46, 0x30, 0x69, 0x01, 0x28, 0x1A, 0xD1, 0x70, 0x69, 0x01, 0x28
.byte 0x17, 0xD1, 0x04, 0x49, 0x41, 0x44, 0x08, 0x88, 0xFF, 0x20, 0x08, 0x80, 0x07, 0x99, 0xC8, 0x0F
.byte 0x08, 0x18, 0x09, 0xE0, 0x16, 0x12, 0x00, 0x00, 0x10, 0x49, 0x41, 0x44, 0x08, 0x88, 0xBF, 0x20
.byte 0x08, 0x80, 0x07, 0x9A, 0xD0, 0x0F, 0x10, 0x18, 0x40, 0x10, 0x0D, 0x49, 0x41, 0x44, 0x0A, 0x88
.byte 0x08, 0x80, 0x0C, 0x49, 0x41, 0x44, 0x07, 0x9B, 0x58, 0x00, 0xC0, 0x18, 0xC0, 0x01, 0x40, 0x42
.byte 0x00, 0x28, 0x00, 0xDA, 0x1F, 0x30, 0x40, 0x11, 0xC8, 0x30, 0x08, 0x60, 0x06, 0x49, 0x41, 0x44
.byte 0x08, 0x68, 0x06, 0x4C, 0x00, 0x19, 0x08, 0x60, 0xA4, 0xE0, 0x00, 0x00, 0x16, 0x12, 0x00, 0x00
.byte 0x1A, 0x12, 0x00, 0x00, 0xE8, 0x11, 0x00, 0x00, 0xF0, 0x11, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0xFF
.byte 0x56, 0x46, 0x10, 0x2E, 0x00, 0xD0, 0x18, 0xE1, 0x01, 0x20, 0x43, 0xE1, 0x13, 0x20, 0x82, 0x46
.byte 0x90, 0xE0, 0x08, 0x99, 0x07, 0x29, 0x1B, 0xD0, 0x0D, 0x29, 0x20, 0xD0, 0x42, 0x46, 0x10, 0x69
.byte 0x01, 0x28, 0x20, 0xD1, 0x50, 0x69, 0x01, 0x28, 0x1D, 0xD1, 0x07, 0x49, 0x41, 0x44, 0x08, 0x88
.byte 0x00, 0x22, 0xFF, 0x20, 0x08, 0x80, 0x05, 0x49, 0x41, 0x44, 0x08, 0x88, 0x10, 0x20, 0x08, 0x80
.byte 0x43, 0x46, 0x1A, 0x65, 0xE0, 0xE7, 0x00, 0x00, 0x16, 0x12, 0x00, 0x00, 0x1A, 0x12, 0x00, 0x00
.byte 0x44, 0x46, 0xA0, 0x68, 0x60, 0x60, 0x40, 0x46, 0xFE, 0xF7, 0xBE, 0xFF, 0x07, 0xE0, 0x40, 0x46
.byte 0xFF, 0xF7, 0x66, 0xF8, 0x03, 0xE0, 0x01, 0x20, 0x46, 0x46, 0x30, 0x65, 0xCC, 0xE7, 0x00, 0x24
.byte 0x78, 0x69, 0x84, 0x42, 0x0B, 0xDA, 0x00, 0x22, 0x39, 0x1C, 0x38, 0x69, 0x10, 0x18, 0x80, 0x89
.byte 0x88, 0x83, 0x14, 0x32, 0x18, 0x31, 0x01, 0x34, 0x78, 0x69, 0x84, 0x42, 0xF5, 0xDB, 0x04, 0x48
.byte 0x40, 0x44, 0xC8, 0x21, 0x01, 0x60, 0x00, 0x20, 0xF8, 0x67, 0x14, 0x20, 0x82, 0x46, 0x49, 0xE0
.byte 0xE8, 0x11, 0x00, 0x00, 0x06, 0x49, 0x41, 0x44, 0x08, 0x88, 0x06, 0x48, 0x08, 0x80, 0x06, 0x49
.byte 0x41, 0x44, 0x08, 0x88, 0x05, 0x48, 0x08, 0x80, 0x08, 0x99, 0x8A, 0x46, 0x3A, 0xE0, 0x00, 0x00
.byte 0x16, 0x12, 0x00, 0x00, 0x41, 0x02, 0x00, 0x00, 0x18, 0x12, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00
.byte 0x39, 0x68, 0x3A, 0x69, 0x88, 0x00, 0x40, 0x18, 0x80, 0x00, 0x80, 0x18, 0x10, 0x21, 0x41, 0x56
.byte 0x40, 0x46, 0x00, 0xF0, 0xDF, 0xF8, 0x16, 0x22, 0x92, 0x46, 0x23, 0xE0, 0x39, 0x68, 0x3A, 0x69
.byte 0x88, 0x00, 0x40, 0x18, 0x80, 0x00, 0x80, 0x18, 0x10, 0x21, 0x41, 0x56, 0x40, 0x46, 0x00, 0xF0
.byte 0x61, 0xFA, 0x00, 0x28, 0x16, 0xD0, 0x17, 0x23, 0x9A, 0x46, 0x13, 0xE0, 0x8D, 0x20, 0x5A, 0xF0
.byte 0x91, 0xFD, 0x00, 0x20, 0x78, 0x60, 0xB8, 0x60, 0x0C, 0xE0, 0x39, 0x68, 0x3A, 0x69, 0x88, 0x00
.byte 0x40, 0x18, 0x80, 0x00, 0x80, 0x18, 0x10, 0x21, 0x41, 0x56, 0x40, 0x46, 0x00, 0xF0, 0x4A, 0xFC
.byte 0x07, 0x24
non_word_aligned_thumb_func_start sub_800541E
sub_800541E:
mov r10, r4
_08005420:
mov r0, r8
bl sub_80036E4
mov r0, r8
bl sub_80040A0
mov r6, r10
cmp r6, #0x07
bne _0800545E
ldr r0, [r7, #0x00]
ldr r2, [r7, #0x10]
lsls r1, r0, #0x02
adds r1, r1, r0
lsls r1, r1, #0x02
adds r1, r1, r2
movs r0, #0x10
ldsb r0, [r1, r0]
cmp r0, #0x01
blt _0800545E
cmp r0, #0x02
ble _0800544E
cmp r0, #0x05
bne _0800545E
_0800544E:
ldr r0, _0800552C @ =0x080C8758
ldr r1, _08005530 @ =0x080D912C
movs r2, #0x00
str r2, [sp, #0x000]
str r2, [sp, #0x004]
movs r3, #0x00
bl oam_renderCellData
_0800545E:
movs r4, #0x85
lsls r4, r4, #0x05
add r4, r8
movs r0, #0x01
str r0, [r4, #0x00]
mov r0, r8
bl spm_loadOtherGfx
cmp r0, #0x00
beq _08005480
bl dmaq_getVBlankDmaQueue
ldr r1, _08005534 @ =0x02013000
ldr r2, _08005538 @ =0x06012C00
ldr r3, _0800553C @ =0x80000800
bl dmaq_enqueue
_08005480:
movs r0, #0x00
str r0, [r4, #0x00]
ldr r0, _08005540 @ =0x00000D88
add r0, r8
str r0, [sp, #0x024]
movs r5, #0x00
add r1, sp, #0x018
mov r9, r1
_08005490:
adds r5, #0x01
movs r2, #0x0B
subs r0, r2, r5
lsls r4, r0, #0x01
adds r4, r4, r0
lsls r4, r4, #0x03
ldr r3, [sp, #0x024]
adds r4, r3, r4
adds r0, r4, #0x0
bl sub_8003BB8
ldrh r1, [r4, #0x06]
lsls r1, r1, #0x10
ldrh r0, [r4, #0x04]
orrs r0, r1
str r0, [sp, #0x018]
ldr r0, [r4, #0x00]
movs r6, #0x08
ldsh r2, [r4, r6]
movs r1, #0x0A
ldsh r3, [r4, r1]
movs r6, #0x0C
ldsh r1, [r4, r6]
str r1, [sp, #0x000]
movs r6, #0x00
str r6, [sp, #0x004]
mov r1, r9
bl oam_renderCellData
cmp r5, #0x0B
blt _08005490
mov r0, r8
bl sub_8003948
mov r0, r8
bl sub_8003930
cmp r0, #0x00
beq _08005554
ldr r0, _08005544 @ =0x080306FD
ldr r4, _08005548 @ =0x03004F70
str r0, [r4, #0x04]
ldr r0, _0800554C @ =0x08030739
str r0, [r4, #0x00]
str r6, [r4, #0x08]
movs r0, #0x01
strb r0, [r4, #0x0E]
bl trns_start
movs r0, #0x00
bl pltt_getBuffer
strh r6, [r0, #0x00]
movs r0, #0x01
bl pltt_setDirtyFlag
bl main_frameProc
ldrb r1, [r4, #0x0C]
movs r0, #0x02
ands r0, r1
cmp r0, #0x00
beq _0800551E
movs r5, #0x02
_08005510:
bl main_frameProc
ldrb r1, [r4, #0x0C]
adds r0, r5, #0x0
ands r0, r1
cmp r0, #0x00
bne _08005510
_0800551E:
ldr r1, _08005550 @ =0x0000109C
add r1, r8
movs r0, #0x01
str r0, [r1, #0x00]
movs r0, #0x00
b _08005580
.byte 0x00, 0x00
_0800552C: .4byte 0x080C8758
_08005530: .4byte 0x080D912C
_08005534: .4byte 0x02013000
_08005538: .4byte 0x06012C00
_0800553C: .4byte 0x80000800
_08005540: .4byte 0x00000D88
_08005544: .4byte trns_initDefaultOutTransition
_08005548: .4byte 0x03004F70
_0800554C: .4byte trns_applyDefaultOutTransition
_08005550: .4byte 0x0000109C
_08005554:
ldr r1, [sp, #0x02C]
ldr r0, [r1, #0x00]
cmp r0, #0x00
bne _08005560
bl sub_800490E
_08005560:
bl dmaq_getVBlankDmaQueue
ldr r1, _08005574 @ =0x02014000
ldr r2, _08005578 @ =0x06013C00
ldr r3, _0800557C @ =0x80001000
bl dmaq_enqueue
bl sub_800490E
lsls r0, r0, #0x00
_08005574:
ands r0, r0
lsls r1, r0, #0x08
_08005578:
subs r4, #0x00
lsls r1, r0, #0x18
_0800557C:
asrs r0, r0, #0x20
strh r0, [r0, #0x00]
_08005580:
add sp, #0x030
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r1}
bx r1
thumb_func_start sub_8005590
sub_8005590:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x004
mov r9, r0
mov r10, r1
mov r4, r9
adds r4, #0x54
ldr r0, _080055D8 @ =0x000004DC
add r0, r9
movs r1, #0x00
str r1, [r0, #0x00]
movs r1, #0x9C
lsls r1, r1, #0x03
add r1, r9
movs r2, #0x00
str r2, [r1, #0x00]
ldr r2, _080055DC @ =0x000004E4
add r2, r9
movs r0, #0x00
str r0, [r2, #0x00]
movs r3, #0x9D
lsls r3, r3, #0x03
add r3, r9
str r0, [r3, #0x00]
mov r0, r10
cmp r0, #0x02
beq _080055F4
cmp r0, #0x02
bgt _080055E0
cmp r0, #0x01
beq _080055E8
b _0800560A
.byte 0x00, 0x00
_080055D8: .4byte 0x000004DC
_080055DC: .4byte 0x000004E4
_080055E0:
mov r0, r10
cmp r0, #0x05
beq _08005600
b _0800560A
_080055E8:
movs r0, #0x02
str r0, [r1, #0x00]
movs r0, #0x07
str r0, [r2, #0x00]
movs r0, #0x0A
b _08005608
_080055F4:
movs r0, #0x04
str r0, [r1, #0x00]
movs r0, #0x07
str r0, [r2, #0x00]
movs r0, #0x06
b _08005608
_08005600:
movs r0, #0x03
str r0, [r1, #0x00]
movs r0, #0x07
str r0, [r2, #0x00]
_08005608:
str r0, [r3, #0x00]
_0800560A:
movs r0, #0x00
bl pltt_getBuffer
adds r1, r4, #0x0
adds r1, #0x88
movs r2, #0x80
bl CpuFastSet
movs r0, #0x01
bl pltt_getBuffer
movs r2, #0xA2
lsls r2, r2, #0x02
adds r1, r4, r2
movs r2, #0x80
bl CpuFastSet
movs r7, #0x00
_0800562E:
movs r0, #0x00
bl pltt_getBuffer
lsls r1, r7, #0x05
adds r0, r0, r1
cmp r7, #0x0C
beq _08005684
movs r6, #0x1F
adds r5, r0, #0x0
movs r0, #0x0F
mov r8, r0
_08005644:
ldrh r0, [r5, #0x00]
movs r1, #0x1F
ands r1, r0
lsls r0, r0, #0x10
lsrs r3, r0, #0x15
ands r3, r6
lsrs r4, r0, #0x1A
ands r4, r6
lsls r0, r1, #0x01
adds r0, r0, r1
asrs r2, r0, #0x02
ands r2, r6
lsls r0, r3, #0x01
adds r0, r0, r3
asrs r0, r0, #0x02
ands r0, r6
lsls r1, r0, #0x05
orrs r1, r2
lsls r0, r4, #0x01
adds r0, r0, r4
asrs r0, r0, #0x02
ands r0, r6
lsls r0, r0, #0x0A
orrs r1, r0
strh r1, [r5, #0x00]
adds r5, #0x02
movs r1, #0x01
negs r1, r1
add r8, r1
mov r2, r8
cmp r2, #0x00
bge _08005644
_08005684:
adds r7, #0x01
cmp r7, #0x0F
ble _0800562E
movs r7, #0x00
_0800568C:
movs r0, #0x01
bl pltt_getBuffer
lsls r1, r7, #0x05
adds r0, r0, r1
adds r1, r7, #0x1
mov r12, r1
cmp r7, #0x03
beq _080056E6
movs r6, #0x1F
adds r5, r0, #0x0
movs r2, #0x0F
mov r8, r2
_080056A6:
ldrh r0, [r5, #0x00]
movs r1, #0x1F
ands r1, r0
lsls r0, r0, #0x10
lsrs r3, r0, #0x15
ands r3, r6
lsrs r4, r0, #0x1A
ands r4, r6
lsls r0, r1, #0x01
adds r0, r0, r1
asrs r2, r0, #0x02
ands r2, r6
lsls r0, r3, #0x01
adds r0, r0, r3
asrs r0, r0, #0x02
ands r0, r6
lsls r1, r0, #0x05
orrs r1, r2
lsls r0, r4, #0x01
adds r0, r0, r4
asrs r0, r0, #0x02
ands r0, r6
lsls r0, r0, #0x0A
orrs r1, r0
strh r1, [r5, #0x00]
adds r5, #0x02
movs r0, #0x01
negs r0, r0
add r8, r0
mov r1, r8
cmp r1, #0x00
bge _080056A6
_080056E6:
mov r7, r12
cmp r7, #0x0F
ble _0800568C
movs r0, #0x01
bl pltt_setDirtyFlag
ldr r2, _080057D0 @ =0x000011FE
add r2, r9
ldrh r3, [r2, #0x00]
ldr r1, _080057D4 @ =0x0000FFF3
adds r0, r1, #0x0
ands r0, r3
movs r3, #0x04
ldrh r4, [r2, #0x00]
movs r4, #0x00
orrs r0, r3
strh r0, [r2, #0x00]
ldr r2, _080057D8 @ =0x00001204
add r2, r9
ldrh r0, [r2, #0x00]
ands r1, r0
ldrh r0, [r2, #0x00]
orrs r1, r3
strh r1, [r2, #0x00]
ldrh r1, [r2, #0x00]
ldr r0, _080057DC @ =0x0000FFFC
ands r0, r1
ldrh r1, [r2, #0x00]
strh r0, [r2, #0x00]
bl dmaq_getVBlankDmaQueue
ldr r2, _080057E0 @ =0x06008000
mov r8, r2
ldr r2, _080057E4 @ =0x06004000
ldr r3, _080057E8 @ =0x80000200
mov r1, r8
bl dmaq_enqueue
str r4, [sp, #0x000]
movs r0, #0x01
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
ldr r2, _080057EC @ =0x01000140
mov r0, sp
bl CpuFastSet
movs r0, #0x02
bl map_setBufferDirty
bl main_frameProc
ldr r4, _080057F0 @ =0x080AAD30
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
movs r0, #0xFB
lsls r0, r0, #0x01
adds r1, r1, r0
adds r0, r4, #0x0
movs r2, #0x05
bl CpuSet
movs r0, #0x01
bl pltt_setDirtyFlag
ldr r0, _080057F4 @ =0x080A97F8
ldr r5, _080057F8 @ =0x0200C400
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _080057FC @ =0x06005000
ldr r6, _08005800 @ =0x80000C00
adds r1, r5, #0x0
adds r3, r6, #0x0
bl dmaq_enqueue
ldr r0, _08005804 @ =0x080A9E2C
movs r1, #0xC0
lsls r1, r1, #0x05
adds r4, r5, r1
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _08005808 @ =0x06006800
adds r1, r4, #0x0
adds r3, r6, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _0800580C @ =0x080AA56C
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
adds r1, r5, #0x0
mov r2, r8
adds r3, r6, #0x0
bl dmaq_enqueue
mov r2, r10
cmp r2, #0x02
beq _0800584C
cmp r2, #0x02
bgt _08005810
cmp r2, #0x01
beq _08005818
b _08005886
_080057D0: .4byte 0x000011FE
_080057D4: .4byte 0x0000FFF3
_080057D8: .4byte 0x00001204
_080057DC: .4byte 0x0000FFFC
_080057E0: .4byte 0x06008000
_080057E4: .4byte 0x06004000
_080057E8: .4byte 0x80000200
_080057EC: .4byte 0x01000140
_080057F0: .4byte 0x080AAD30
_080057F4: .4byte 0x080A97F8
_080057F8: .4byte 0x0200C400
_080057FC: .4byte 0x06005000
_08005800: .4byte 0x80000C00
_08005804: .4byte 0x080A9E2C
_08005808: .4byte 0x06006800
_0800580C: .4byte 0x080AA56C
_08005810:
mov r0, r10
cmp r0, #0x05
beq _08005830
b _08005886
_08005818:
movs r1, #0x00
cmp r1, #0x00
beq _08005828
ldr r4, _08005824 @ =0x080AF994
movs r0, #0x01
b _08005836
_08005824: .4byte 0x080AF994
_08005828:
ldr r4, _0800582C @ =0x080AFBC0
b _08005832
_0800582C: .4byte 0x080AFBC0
_08005830:
ldr r4, _08005848 @ =0x080AFAA8
_08005832:
movs r0, #0x01
movs r1, #0x00
_08005836:
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
b _08005886
.byte 0x00, 0x00
_08005848: .4byte 0x080AFAA8
_0800584C:
bl dmaq_getVBlankDmaQueue
ldr r1, _0800589C @ =0x080AF914
ldr r2, _080058A0 @ =0x06009200
ldr r3, _080058A4 @ =0x80000040
bl dmaq_enqueue
ldr r4, _080058A8 @ =0x080AFCD4
movs r0, #0x01
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
ldr r4, _080058AC @ =0x080627F4
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
movs r2, #0xC0
lsls r2, r2, #0x01
adds r1, r1, r2
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
_08005886:
movs r0, #0x02
bl map_setBufferDirty
add sp, #0x004
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_0800589C: .4byte 0x080AF914
_080058A0: .4byte 0x06009200
_080058A4: .4byte 0x80000040
_080058A8: .4byte 0x080AFCD4
_080058AC: .4byte 0x080627F4
thumb_func_start sub_80058B0
sub_80058B0:
push {r4, r5, r6, r7, lr}
mov r7, r8
push {r7}
add sp, #-0x00C
adds r6, r0, #0x0
adds r5, r1, #0x0
adds r7, r6, #0x0
adds r7, #0x54
ldr r0, _08005934 @ =0x000004DC
adds r4, r6, r0
ldr r3, [r4, #0x00]
movs r1, #0x80
ldr r2, _08005938 @ =0x03004F48
ldrh r0, [r2, #0x00]
ands r0, r1
cmp r0, #0x00
beq _080058D6
adds r0, r3, #0x1
str r0, [r4, #0x00]
_080058D6:
movs r1, #0x40
ldrh r0, [r2, #0x00]
ands r0, r1
cmp r0, #0x00
beq _080058E6
ldr r0, [r4, #0x00]
subs r0, #0x01
str r0, [r4, #0x00]
_080058E6:
movs r1, #0x9C
lsls r1, r1, #0x03
adds r2, r6, r1
ldr r1, [r4, #0x00]
ldr r0, [r2, #0x00]
cmp r1, r0
blt _080058F8
movs r0, #0x00
str r0, [r4, #0x00]
_080058F8:
ldr r0, [r4, #0x00]
cmp r0, #0x00
bge _08005904
ldr r0, [r2, #0x00]
subs r0, #0x01
str r0, [r4, #0x00]
_08005904:
ldr r0, [r4, #0x00]
cmp r0, r3
beq _08005910
movs r0, #0x8D
bl m4aSongNumStart
_08005910:
movs r0, #0x30
ldr r1, _0800593C @ =0x03004EA0
ldrh r1, [r1, #0x00]
ands r0, r1
cmp r0, #0x00
bne _0800591E
b _08005A30
_0800591E:
movs r0, #0x8E
bl m4aSongNumStart
cmp r5, #0x02
beq _0800598C
cmp r5, #0x02
bgt _08005940
cmp r5, #0x01
beq _08005946
b _08005A42
.byte 0x00, 0x00
_08005934: .4byte 0x000004DC
_08005938: .4byte 0x03004F48
_0800593C: .4byte 0x03004EA0
_08005940:
cmp r5, #0x05
beq _080059E8
b _08005A42
_08005946:
ldr r0, [r4, #0x00]
cmp r0, #0x01
beq _0800596C
cmp r0, #0x01
bgt _08005956
cmp r0, #0x00
beq _0800595C
b _08005A42
_08005956:
cmp r0, #0x02
beq _0800597C
b _08005A42
_0800595C:
ldr r0, _08005968 @ =0x03002C60
ldrh r1, [r0, #0x00]
movs r2, #0x01
eors r1, r2
strh r1, [r0, #0x00]
b _08005A42
_08005968: .4byte 0x03002C60
_0800596C:
ldr r0, _08005978 @ =0x03002C60
ldrh r1, [r0, #0x02]
movs r2, #0x01
eors r1, r2
strh r1, [r0, #0x02]
b _08005A42
_08005978: .4byte 0x03002C60
_0800597C:
ldr r0, _08005988 @ =0x03002C60
ldrh r1, [r0, #0x04]
movs r2, #0x01
eors r1, r2
strh r1, [r0, #0x04]
b _08005A42
_08005988: .4byte 0x03002C60
_0800598C:
ldr r0, [r4, #0x00]
cmp r0, #0x01
beq _080059B8
cmp r0, #0x01
bgt _0800599C
cmp r0, #0x00
beq _080059A6
b _08005A42
_0800599C:
cmp r0, #0x02
beq _080059C8
cmp r0, #0x03
beq _080059D8
b _08005A42
_080059A6:
ldr r0, _080059B4 @ =0x03002C60
ldrh r1, [r0, #0x06]
movs r2, #0x01
eors r1, r2
strh r1, [r0, #0x06]
b _08005A42
.byte 0x00, 0x00
_080059B4: .4byte 0x03002C60
_080059B8:
ldr r0, _080059C4 @ =0x03002C60
ldrh r1, [r0, #0x08]
movs r2, #0x01
eors r1, r2
strh r1, [r0, #0x08]
b _08005A42
_080059C4: .4byte 0x03002C60
_080059C8:
ldr r0, _080059D4 @ =0x03002C60
ldrh r1, [r0, #0x0A]
movs r2, #0x01
eors r1, r2
strh r1, [r0, #0x0A]
b _08005A42
_080059D4: .4byte 0x03002C60
_080059D8:
ldr r0, _080059E4 @ =0x03002C60
ldrh r1, [r0, #0x0C]
movs r2, #0x01
eors r1, r2
strh r1, [r0, #0x0C]
b _08005A42
_080059E4: .4byte 0x03002C60
_080059E8:
ldr r0, [r4, #0x00]
cmp r0, #0x01
beq _08005A10
cmp r0, #0x01
bgt _080059F8
cmp r0, #0x00
beq _080059FE
b _08005A42
_080059F8:
cmp r0, #0x02
beq _08005A20
b _08005A42
_080059FE:
ldr r0, _08005A0C @ =0x03002C60
ldrh r1, [r0, #0x0E]
movs r2, #0x01
eors r1, r2
strh r1, [r0, #0x0E]
b _08005A42
.byte 0x00, 0x00
_08005A0C: .4byte 0x03002C60
_08005A10:
ldr r0, _08005A1C @ =0x03002C60
ldrh r1, [r0, #0x10]
movs r2, #0x01
eors r1, r2
strh r1, [r0, #0x10]
b _08005A42
_08005A1C: .4byte 0x03002C60
_08005A20:
ldr r0, _08005A2C @ =0x03002C60
ldrh r1, [r0, #0x12]
movs r2, #0x01
eors r1, r2
strh r1, [r0, #0x12]
b _08005A42
_08005A2C: .4byte 0x03002C60
_08005A30:
movs r0, #0x0B
ands r1, r0
cmp r1, #0x00
beq _08005A42
movs r0, #0x8F
bl m4aSongNumStart
movs r0, #0x01
b _08005C96
_08005A42:
ldr r1, [r6, #0x4C]
lsls r0, r1, #0x02
adds r0, r0, r1
ldr r1, _08005AB0 @ =0x080E645C
lsls r0, r0, #0x19
asrs r0, r0, #0x10
cmp r0, #0x00
bge _08005A54
adds r0, #0x3F
_08005A54:
lsls r0, r0, #0x10
lsrs r0, r0, #0x16
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r0, [r0, #0x00]
movs r2, #0x92
lsls r2, r2, #0x03
adds r1, r7, r2
ldr r2, [r1, #0x00]
lsls r2, r2, #0x03
lsls r0, r0, #0x01
asrs r0, r0, #0x0F
adds r0, #0x02
adds r2, r2, r0
lsls r2, r2, #0x10
ldr r3, _08005AB4 @ =0x00000494
adds r0, r7, r3
ldr r1, [r0, #0x00]
lsls r1, r1, #0x03
subs r3, #0x0C
adds r0, r7, r3
ldr r0, [r0, #0x00]
lsls r0, r0, #0x04
adds r0, #0x0A
adds r1, r1, r0
lsls r1, r1, #0x10
lsrs r2, r2, #0x10
orrs r2, r1
str r2, [sp, #0x008]
ldr r0, _08005AB8 @ =0x080C87A0
movs r1, #0x00
str r1, [sp, #0x000]
str r1, [sp, #0x004]
add r1, sp, #0x008
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
cmp r5, #0x02
beq _08005B60
cmp r5, #0x02
bgt _08005ABC
cmp r5, #0x01
beq _08005AC4
b _08005C94
.byte 0x00, 0x00
_08005AB0: .4byte 0x080E645C
_08005AB4: .4byte 0x00000494
_08005AB8: .4byte 0x080C87A0
_08005ABC:
cmp r5, #0x05
bne _08005AC2
b _08005C08
_08005AC2:
b _08005C94
_08005AC4:
movs r4, #0x00
ldr r1, _08005AEC @ =0x0000048C
adds r0, r7, r1
ldr r0, [r0, #0x00]
cmp r4, r0
blt _08005AD2
b _08005C94
_08005AD2:
movs r2, #0x92
lsls r2, r2, #0x03
adds r6, r7, r2
ldr r3, _08005AF0 @ =0x03002C60
mov r8, r3
add r5, sp, #0x008
_08005ADE:
cmp r4, #0x01
beq _08005B04
cmp r4, #0x01
bgt _08005AF4
cmp r4, #0x00
beq _08005AFA
b _08005B22
_08005AEC: .4byte 0x0000048C
_08005AF0: .4byte 0x03002C60
_08005AF4:
cmp r4, #0x02
beq _08005B0E
b _08005B22
_08005AFA:
ldr r2, [r6, #0x00]
lsls r2, r2, #0x03
mov r0, r8
ldrh r1, [r0, #0x00]
b _08005B16
_08005B04:
ldr r2, [r6, #0x00]
lsls r2, r2, #0x03
mov r3, r8
ldrh r1, [r3, #0x02]
b _08005B16
_08005B0E:
ldr r2, [r6, #0x00]
lsls r2, r2, #0x03
mov r0, r8
ldrh r1, [r0, #0x04]
_08005B16:
lsls r0, r1, #0x03
adds r0, r0, r1
lsls r0, r0, #0x02
adds r0, #0x48
adds r2, r2, r0
strh r2, [r5, #0x00]
_08005B22:
ldr r1, _08005B54 @ =0x00000494
adds r0, r7, r1
ldr r1, [r0, #0x00]
lsls r1, r1, #0x03
lsls r0, r4, #0x04
adds r0, #0x08
adds r1, r1, r0
movs r0, #0x00
strh r1, [r5, #0x02]
str r0, [sp, #0x000]
str r0, [sp, #0x004]
ldr r0, _08005B58 @ =0x080C8784
add r1, sp, #0x008
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
adds r4, #0x01
ldr r2, _08005B5C @ =0x0000048C
adds r0, r7, r2
ldr r0, [r0, #0x00]
cmp r4, r0
blt _08005ADE
b _08005C94
.byte 0x00, 0x00
_08005B54: .4byte 0x00000494
_08005B58: .4byte 0x080C8784
_08005B5C: .4byte 0x0000048C
_08005B60:
movs r4, #0x00
ldr r3, _08005B88 @ =0x0000048C
adds r0, r7, r3
ldr r0, [r0, #0x00]
cmp r4, r0
blt _08005B6E
b _08005C94
_08005B6E:
movs r0, #0x92
lsls r0, r0, #0x03
adds r6, r7, r0
ldr r1, _08005B8C @ =0x03002C60
mov r8, r1
add r5, sp, #0x008
_08005B7A:
cmp r4, #0x01
beq _08005BA4
cmp r4, #0x01
bgt _08005B90
cmp r4, #0x00
beq _08005B9A
b _08005BCC
_08005B88: .4byte 0x0000048C
_08005B8C: .4byte 0x03002C60
_08005B90:
cmp r4, #0x02
beq _08005BAE
cmp r4, #0x03
beq _08005BB8
b _08005BCC
_08005B9A:
ldr r2, [r6, #0x00]
lsls r2, r2, #0x03
mov r3, r8
ldrh r1, [r3, #0x06]
b _08005BC0
_08005BA4:
ldr r2, [r6, #0x00]
lsls r2, r2, #0x03
mov r0, r8
ldrh r1, [r0, #0x08]
b _08005BC0
_08005BAE:
ldr r2, [r6, #0x00]
lsls r2, r2, #0x03
mov r3, r8
ldrh r1, [r3, #0x0A]
b _08005BC0
_08005BB8:
ldr r2, [r6, #0x00]
lsls r2, r2, #0x03
mov r0, r8
ldrh r1, [r0, #0x0C]
_08005BC0:
lsls r0, r1, #0x03
adds r0, r0, r1
lsls r0, r0, #0x02
adds r0, #0x48
adds r2, r2, r0
strh r2, [r5, #0x00]
_08005BCC:
ldr r1, _08005BFC @ =0x00000494
adds r0, r7, r1
ldr r1, [r0, #0x00]
lsls r1, r1, #0x03
lsls r0, r4, #0x04
adds r0, #0x08
adds r1, r1, r0
movs r0, #0x00
strh r1, [r5, #0x02]
str r0, [sp, #0x000]
str r0, [sp, #0x004]
ldr r0, _08005C00 @ =0x080C8784
add r1, sp, #0x008
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
adds r4, #0x01
ldr r2, _08005C04 @ =0x0000048C
adds r0, r7, r2
ldr r0, [r0, #0x00]
cmp r4, r0
blt _08005B7A
b _08005C94
_08005BFC: .4byte 0x00000494
_08005C00: .4byte 0x080C8784
_08005C04: .4byte 0x0000048C
_08005C08:
movs r4, #0x00
ldr r3, _08005C30 @ =0x0000048C
adds r0, r7, r3
ldr r0, [r0, #0x00]
cmp r4, r0
bge _08005C94
movs r0, #0x92
lsls r0, r0, #0x03
adds r6, r7, r0
ldr r1, _08005C34 @ =0x03002C60
mov r8, r1
add r5, sp, #0x008
_08005C20:
cmp r4, #0x01
beq _08005C48
cmp r4, #0x01
bgt _08005C38
cmp r4, #0x00
beq _08005C3E
b _08005C66
.byte 0x00, 0x00
_08005C30: .4byte 0x0000048C
_08005C34: .4byte 0x03002C60
_08005C38:
cmp r4, #0x02
beq _08005C52
b _08005C66
_08005C3E:
ldr r2, [r6, #0x00]
lsls r2, r2, #0x03
mov r3, r8
ldrh r1, [r3, #0x0E]
b _08005C5A
_08005C48:
ldr r2, [r6, #0x00]
lsls r2, r2, #0x03
mov r0, r8
ldrh r1, [r0, #0x10]
b _08005C5A
_08005C52:
ldr r2, [r6, #0x00]
lsls r2, r2, #0x03
mov r3, r8
ldrh r1, [r3, #0x12]
_08005C5A:
lsls r0, r1, #0x03
adds r0, r0, r1
lsls r0, r0, #0x02
adds r0, #0x48
adds r2, r2, r0
strh r2, [r5, #0x00]
_08005C66:
ldr r1, _08005CA4 @ =0x00000494
adds r0, r7, r1
ldr r1, [r0, #0x00]
lsls r1, r1, #0x03
lsls r0, r4, #0x04
adds r0, #0x08
adds r1, r1, r0
movs r0, #0x00
strh r1, [r5, #0x02]
str r0, [sp, #0x000]
str r0, [sp, #0x004]
ldr r0, _08005CA8 @ =0x080C8784
add r1, sp, #0x008
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
adds r4, #0x01
ldr r2, _08005CAC @ =0x0000048C
adds r0, r7, r2
ldr r0, [r0, #0x00]
cmp r4, r0
blt _08005C20
_08005C94:
movs r0, #0x00
_08005C96:
add sp, #0x00C
pop {r3}
mov r8, r3
pop {r4, r5, r6, r7}
pop {r1}
bx r1
.byte 0x00, 0x00
_08005CA4: .4byte 0x00000494
_08005CA8: .4byte 0x080C8784
_08005CAC: .4byte 0x0000048C
thumb_func_start sub_8005CB0
sub_8005CB0:
push {r4, r5, r6, lr}
add sp, #-0x004
adds r5, r0, #0x0
ldr r0, _08005D78 @ =0x000011FE
adds r2, r5, r0
ldrh r3, [r2, #0x00]
ldr r0, _08005D7C @ =0x0000FFF3
adds r1, r0, #0x0
ands r1, r3
movs r3, #0x08
ldrh r4, [r2, #0x00]
movs r4, #0x00
movs r6, #0x00
orrs r1, r3
strh r1, [r2, #0x00]
ldr r1, _08005D80 @ =0x00001204
adds r2, r5, r1
ldrh r1, [r2, #0x00]
ands r0, r1
orrs r0, r3
ldrh r1, [r2, #0x00]
orrs r0, r4
strh r0, [r2, #0x00]
ldrh r1, [r2, #0x00]
ldr r0, _08005D84 @ =0x0000FFFC
ands r0, r1
movs r1, #0x03
orrs r0, r1
ldrh r1, [r2, #0x00]
orrs r0, r4
strh r0, [r2, #0x00]
adds r4, r5, #0x0
adds r4, #0xDC
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
adds r0, r4, #0x0
movs r2, #0x80
bl CpuFastSet
movs r0, #0xB7
lsls r0, r0, #0x02
adds r5, r5, r0
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r0, r5, #0x0
movs r2, #0x80
bl CpuFastSet
movs r0, #0x01
bl pltt_setDirtyFlag
ldr r0, _08005D88 @ =0x0807D1E8
ldr r4, _08005D8C @ =0x02008400
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _08005D90 @ =0x06008000
ldr r3, _08005D94 @ =0x80000600
adds r1, r4, #0x0
bl dmaq_enqueue
str r6, [sp, #0x000]
ldr r1, _08005D98 @ =0xFFFFC000
adds r4, r4, r1
ldr r2, _08005D9C @ =0x01000010
mov r0, sp
adds r1, r4, #0x0
bl CpuFastSet
bl dmaq_getVBlankDmaQueue
ldr r2, _08005DA0 @ =0x06004000
ldr r3, _08005DA4 @ =0x80000020
adds r1, r4, #0x0
bl dmaq_enqueue
ldr r4, _08005DA8 @ =0x0807DB98
movs r0, #0x01
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
movs r0, #0x02
bl map_setBufferDirty
add sp, #0x004
pop {r4, r5, r6}
pop {r0}
bx r0
.byte 0x00, 0x00
_08005D78: .4byte 0x000011FE
_08005D7C: .4byte 0x0000FFF3
_08005D80: .4byte 0x00001204
_08005D84: .4byte 0x0000FFFC
_08005D88: .4byte 0x0807D1E8
_08005D8C: .4byte 0x02008400
_08005D90: .4byte 0x06008000
_08005D94: .4byte 0x80000600
_08005D98: .4byte 0xFFFFC000
_08005D9C: .4byte 0x01000010
_08005DA0: .4byte 0x06004000
_08005DA4: .4byte 0x80000020
_08005DA8: .4byte 0x0807DB98
thumb_func_start sub_8005DAC
sub_8005DAC:
push {r4, r5, r6, r7, lr}
mov r7, r8
push {r7}
add sp, #-0x00C
adds r6, r0, #0x0
mov r8, r1
movs r5, #0x00
cmp r5, r6
bge _08005DF8
_08005DBE:
adds r5, #0x01
subs r0, r6, r5
lsls r4, r0, #0x01
adds r4, r4, r0
lsls r4, r4, #0x03
add r4, r8
adds r0, r4, #0x0
bl sub_8003BB8
ldrh r1, [r4, #0x06]
lsls r1, r1, #0x10
ldrh r0, [r4, #0x04]
orrs r0, r1
str r0, [sp, #0x008]
ldr r0, [r4, #0x00]
movs r1, #0x08
ldsh r2, [r4, r1]
movs r7, #0x0A
ldsh r3, [r4, r7]
movs r7, #0x0C
ldsh r1, [r4, r7]
str r1, [sp, #0x000]
movs r1, #0x00
str r1, [sp, #0x004]
add r1, sp, #0x008
bl oam_renderCellData
cmp r5, r6
blt _08005DBE
_08005DF8:
add sp, #0x00C
pop {r3}
mov r8, r3
pop {r4, r5, r6, r7}
pop {r0}
bx r0
thumb_func_start sub_8005E04
sub_8005E04:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x008
adds r7, r0, #0x0
adds r5, r1, #0x0
adds r4, r2, #0x0
adds r0, r3, #0x0
ldr r1, [sp, #0x028]
lsls r0, r0, #0x0F
bl __divsi3
ldr r2, _08005EF0 @ =0x080E645C
lsls r0, r0, #0x10
asrs r0, r0, #0x10
cmp r0, #0x00
bge _08005E2C
adds r0, #0x3F
_08005E2C:
asrs r1, r0, #0x06
movs r0, #0x80
lsls r0, r0, #0x01
subs r0, r0, r1
ldr r1, _08005EF4 @ =0x000003FF
ands r0, r1
lsls r0, r0, #0x02
adds r0, r0, r2
ldr r1, [r0, #0x00]
movs r0, #0x80
lsls r0, r0, #0x08
subs r0, r0, r1
lsrs r1, r0, #0x1F
adds r0, r0, r1
asrs r0, r0, #0x01
mov r9, r0
movs r0, #0x1F
mov r10, r0
movs r6, #0x1F
mov r8, r4
mov r12, r5
str r7, [sp, #0x004]
movs r7, #0x0F
str r7, [sp, #0x000]
_08005E5C:
ldr r0, [sp, #0x004]
ldrh r1, [r0, #0x00]
adds r2, r1, #0x0
ands r2, r6
lsrs r4, r1, #0x05
mov r7, r10
ands r4, r7
lsrs r1, r1, #0x0A
mov r0, r10
ands r1, r0
mov r7, r12
ldrh r3, [r7, #0x00]
adds r0, r3, #0x0
ands r0, r6
lsrs r5, r3, #0x05
mov r7, r10
ands r5, r7
lsrs r3, r3, #0x0A
ands r3, r7
subs r0, r0, r2
mov r7, r9
muls r7, r0
adds r0, r7, #0x0
asrs r0, r0, #0x0F
adds r2, r2, r0
lsls r2, r2, #0x10
lsrs r2, r2, #0x10
subs r5, r5, r4
mov r0, r9
muls r0, r5
asrs r0, r0, #0x0F
adds r4, r4, r0
lsls r4, r4, #0x10
lsrs r4, r4, #0x10
subs r3, r3, r1
mov r0, r9
muls r0, r3
asrs r0, r0, #0x0F
adds r1, r1, r0
lsls r1, r1, #0x10
lsrs r1, r1, #0x10
ands r2, r6
ands r4, r6
lsls r4, r4, #0x05
orrs r2, r4
ands r1, r6
lsls r1, r1, #0x0A
orrs r2, r1
mov r0, r8
strh r2, [r0, #0x00]
movs r7, #0x02
add r8, r7
movs r0, #0x02
add r12, r0
ldr r7, [sp, #0x004]
adds r7, #0x02
str r7, [sp, #0x004]
ldr r0, [sp, #0x000]
subs r0, #0x01
str r0, [sp, #0x000]
cmp r0, #0x00
bge _08005E5C
movs r0, #0x01
bl pltt_setDirtyFlag
add sp, #0x008
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_08005EF0: .4byte 0x080E645C
_08005EF4: .4byte 0x000003FF
thumb_func_start renderCharacterSprites
renderCharacterSprites:
push {r4, r5, r6, r7, lr}
add sp, #-0x004
adds r7, r1, #0x0
adds r6, r2, #0x0
cmp r3, #0x00
beq _08005F10
ldr r0, _08005F20 @ =0x03000038
movs r1, #0x01
negs r1, r1
str r1, [r0, #0x00]
ldr r0, _08005F24 @ =0x0300003C
str r1, [r0, #0x00]
_08005F10:
cmp r7, #0x08
beq _08005FAC
cmp r6, #0x3F
ble _08005F28
movs r0, #0x7F
subs r4, r0, r6
b _08005F2A
.byte 0x00, 0x00
_08005F20: .4byte 0x03000038
_08005F24: .4byte 0x0300003C
_08005F28:
adds r4, r6, #0x0
_08005F2A:
adds r0, r7, #0x0
bl spm_menuCharIdxToCharId
adds r5, r0, #0x0
ldr r0, _08005F90 @ =0x080D9344
adds r0, r4, r0
ldrb r1, [r0, #0x00]
lsls r0, r5, #0x01
adds r0, r0, r5
lsls r0, r0, #0x02
subs r0, r0, r5
lsls r0, r0, #0x0D
lsls r1, r1, #0x0B
ldr r2, _08005F94 @ =0x08345800
adds r1, r1, r2
adds r4, r0, r1
ldr r1, _08005F98 @ =0x0300003C
ldr r0, [r1, #0x00]
cmp r0, r6
beq _08005F62
str r6, [r1, #0x00]
bl dmaq_getVBlankDmaQueue
ldr r2, _08005F9C @ =0x02015400
ldr r3, _08005FA0 @ =0x80000400
adds r1, r4, #0x0
bl dmaq_enqueue
_08005F62:
ldr r1, _08005FA4 @ =0x03000038
ldr r0, [r1, #0x00]
cmp r0, r7
beq _0800602C
str r7, [r1, #0x00]
lsls r4, r5, #0x09
ldr r0, _08005FA8 @ =0x08344600
adds r4, r4, r0
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
ldr r2, [sp, #0x018]
lsls r0, r2, #0x05
adds r1, r1, r0
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
movs r0, #0x01
bl pltt_setDirtyFlag
b _0800602C
_08005F90: .4byte 0x080D9344
_08005F94: .4byte 0x08345800
_08005F98: .4byte 0x0300003C
_08005F9C: .4byte 0x02015400
_08005FA0: .4byte 0x80000400
_08005FA4: .4byte 0x03000038
_08005FA8: .4byte 0x08344600
_08005FAC:
cmp r6, #0x3F
ble _08005FB6
movs r0, #0x7F
subs r1, r0, r6
b _08005FB8
_08005FB6:
adds r1, r6, #0x0
_08005FB8:
ldr r0, _0800605C @ =0x080D9344
adds r0, r1, r0
ldrb r1, [r0, #0x00]
ldr r3, _08006060 @ =0x0203EBF0
ldr r2, [r3, #0x00]
lsls r0, r2, #0x01
adds r0, r0, r2
lsls r0, r0, #0x02
subs r0, r0, r2
lsls r0, r0, #0x0D
lsls r1, r1, #0x0B
ldr r4, _08006064 @ =0x08345800
adds r1, r1, r4
adds r4, r0, r1
ldr r1, _08006068 @ =0x0203EBF4
ldr r0, [r1, #0x00]
adds r0, #0x01
str r0, [r1, #0x00]
cmp r0, #0x1E
ble _08005FEC
movs r0, #0x00
str r0, [r1, #0x00]
adds r0, r2, #0x1
movs r1, #0x07
ands r0, r1
str r0, [r3, #0x00]
_08005FEC:
ldr r1, _0800606C @ =0x0300003C
ldr r0, [r1, #0x00]
cmp r0, r6
beq _08006004
str r6, [r1, #0x00]
bl dmaq_getVBlankDmaQueue
ldr r2, _08006070 @ =0x02015400
ldr r3, _08006074 @ =0x80000400
adds r1, r4, #0x0
bl dmaq_enqueue
_08006004:
ldr r1, _08006078 @ =0x03000038
movs r0, #0x01
negs r0, r0
str r0, [r1, #0x00]
movs r0, #0x00
str r0, [sp, #0x000]
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
ldr r2, [sp, #0x018]
lsls r0, r2, #0x05
adds r1, r1, r0
ldr r2, _0800607C @ =0x01000008
mov r0, sp
bl CpuFastSet
movs r0, #0x01
bl pltt_setDirtyFlag
_0800602C:
ldr r4, _08006080 @ =0x03000030
ldr r0, [sp, #0x018]
lsls r5, r0, #0x0C
ldr r3, _08006084 @ =0x080C8944
adds r2, r4, #0x0
movs r1, #0x03
_08006038:
ldrh r0, [r3, #0x00]
strh r0, [r2, #0x00]
adds r3, #0x02
adds r2, #0x02
subs r1, #0x01
cmp r1, #0x00
bge _08006038
movs r0, #0x40
ands r0, r6
cmp r0, #0x00
beq _08006088
ldrh r1, [r4, #0x04]
movs r2, #0x80
lsls r2, r2, #0x05
adds r0, r2, #0x0
orrs r0, r1
b _0800608E
.byte 0x00, 0x00
_0800605C: .4byte 0x080D9344
_08006060: .4byte 0x0203EBF0
_08006064: .4byte 0x08345800
_08006068: .4byte 0x0203EBF4
_0800606C: .4byte 0x0300003C
_08006070: .4byte 0x02015400
_08006074: .4byte 0x80000400
_08006078: .4byte 0x03000038
_0800607C: .4byte 0x01000008
_08006080: .4byte 0x03000030
_08006084: .4byte 0x080C8944
_08006088:
ldrh r1, [r4, #0x04]
ldr r0, _080060A4 @ =0x0000EFFF
ands r0, r1
_0800608E:
strh r0, [r4, #0x04]
ldrh r1, [r4, #0x06]
ldr r0, _080060A8 @ =0x00000FFF
ands r0, r1
orrs r0, r5
strh r0, [r4, #0x06]
adds r0, r4, #0x0
add sp, #0x004
pop {r4, r5, r6, r7}
pop {r1}
bx r1
_080060A4: .4byte 0x0000EFFF
_080060A8: .4byte 0x00000FFF
thumb_func_start sub_80060AC
sub_80060AC:
push {r4, r5, r6, r7, lr}
mov r7, r8
push {r7}
add sp, #-0x00C
mov r8, r0
ldr r7, _080060D4 @ =0x000004EC
add r7, r8
movs r0, #0xDF
lsls r0, r0, #0x03
add r0, r8
ldr r0, [r0, #0x00]
cmp r0, #0x0C
bls _080060C8
b _0800641E
_080060C8:
lsls r0, r0, #0x02
ldr r1, _080060D8 @ =0x080060DC
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
.byte 0x00, 0x00
_080060D4: .4byte 0x000004EC
_080060D8: .4byte 0x080060DC
.byte 0x1E, 0x64, 0x00, 0x08, 0x1E, 0x64, 0x00, 0x08, 0x10, 0x61, 0x00, 0x08, 0x42, 0x61, 0x00, 0x08
.byte 0x8C, 0x61, 0x00, 0x08, 0x9E, 0x61, 0x00, 0x08, 0xB4, 0x61, 0x00, 0x08, 0x10, 0x62, 0x00, 0x08
.byte 0x1A, 0x62, 0x00, 0x08, 0x80, 0x62, 0x00, 0x08, 0xC0, 0x62, 0x00, 0x08, 0x04, 0x63, 0x00, 0x08
.byte 0xA4, 0x63, 0x00, 0x08, 0xF4, 0x20, 0x40, 0x00, 0x39, 0x18, 0x00, 0x22, 0x48, 0x20, 0x08, 0x80
.byte 0xF5, 0x23, 0x5B, 0x00, 0xF9, 0x18, 0x53, 0x20, 0x08, 0x80, 0x84, 0x24, 0xA4, 0x00, 0x38, 0x19
.byte 0x02, 0x60, 0x80, 0x21, 0x89, 0x00, 0x78, 0x18, 0x02, 0x60, 0x83, 0x22, 0x92, 0x00, 0xB9, 0x18
.byte 0x08, 0x68, 0x01, 0x30, 0x6C, 0xE1, 0x84, 0x23, 0x9B, 0x00, 0xF9, 0x18, 0x08, 0x68, 0x01, 0x30
.byte 0x08, 0x60, 0x10, 0x28, 0x14, 0xDC, 0x09, 0x49, 0x80, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA
.byte 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x01, 0x68, 0x80, 0x20, 0x80, 0x00
.byte 0x3C, 0x18, 0x72, 0x20, 0x41, 0x43, 0xC9, 0x13, 0x01, 0x31, 0x3B, 0xE0, 0x5C, 0x64, 0x0E, 0x08
.byte 0x00, 0x20, 0x08, 0x60, 0x83, 0x22, 0x92, 0x00, 0xB9, 0x18, 0x08, 0x68, 0x01, 0x30, 0x47, 0xE1
.byte 0x80, 0x23, 0x9B, 0x00, 0xF9, 0x18, 0xDE, 0x20, 0x08, 0x60, 0x83, 0x24, 0xA4, 0x00, 0x39, 0x19
.byte 0x3D, 0xE1, 0x84, 0x20, 0x80, 0x00, 0x39, 0x18, 0x00, 0x20, 0x08, 0x60, 0x83, 0x22, 0x92, 0x00
.byte 0xB9, 0x18, 0x08, 0x68, 0x01, 0x30, 0x33, 0xE1, 0x84, 0x23, 0x9B, 0x00, 0xF9, 0x18, 0x08, 0x68
.byte 0x01, 0x30, 0x08, 0x60, 0x10, 0x28, 0x1D, 0xDC, 0x0D, 0x49, 0x80, 0x06, 0x00, 0x14, 0x00, 0x28
.byte 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0x80, 0x21
.byte 0x89, 0x00, 0x7C, 0x18, 0xC1, 0x00, 0x09, 0x1A, 0xC9, 0x00, 0x09, 0x18, 0x49, 0x00, 0x49, 0x42
.byte 0xC9, 0x13, 0x78, 0x31, 0xC8, 0x20, 0xC0, 0x01, 0x5B, 0xF0, 0x5C, 0xFE, 0x20, 0x60, 0x10, 0xE1
.byte 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x20, 0x08, 0x60, 0x83, 0x22, 0x92, 0x00, 0xB9, 0x18, 0x08, 0x68
.byte 0x01, 0x30, 0x05, 0xE1, 0x80, 0x23, 0x9B, 0x00, 0xF9, 0x18, 0x00, 0x20, 0x00, 0xE1, 0x16, 0x4A
.byte 0x44, 0x46, 0xA0, 0x69, 0x80, 0x00, 0x81, 0x18, 0x0C, 0x88, 0x02, 0x32, 0x80, 0x18, 0x06, 0x88
.byte 0x20, 0x1C, 0x59, 0xF0, 0x77, 0xFE, 0x11, 0x4D, 0x11, 0x48, 0xE4, 0x00, 0x24, 0x18, 0xA1, 0x88
.byte 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x59, 0xF0, 0x63, 0xFF, 0xA1, 0x88
.byte 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x01, 0x21, 0x32, 0x1C, 0x5A, 0xF0
.byte 0x11, 0xFE, 0x84, 0x20, 0x80, 0x00, 0x39, 0x18, 0x00, 0x20, 0x08, 0x60, 0x83, 0x22, 0x92, 0x00
.byte 0xB9, 0x18, 0x08, 0x68, 0x01, 0x30, 0xD3, 0xE0, 0xFA, 0x92, 0x0D, 0x08, 0x14, 0x24, 0x10, 0x08
.byte 0x98, 0x24, 0x10, 0x08, 0x84, 0x23, 0x9B, 0x00, 0xF9, 0x18, 0x08, 0x68, 0x01, 0x30, 0x08, 0x60
.byte 0x20, 0x28, 0x00, 0xDD, 0xC5, 0xE0, 0x0A, 0x49, 0x40, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA
.byte 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x01, 0x68, 0xD0, 0x20, 0x48, 0x43
.byte 0xC0, 0x13, 0x48, 0x30, 0xF4, 0x24, 0x64, 0x00, 0x39, 0x19, 0x08, 0x80, 0xB1, 0xE0, 0x00, 0x00
.byte 0x5C, 0x64, 0x0E, 0x08, 0x9C, 0x20, 0x59, 0xF0, 0x2D, 0xFE, 0x00, 0x22, 0xF4, 0x20, 0x40, 0x00
.byte 0x39, 0x18, 0x48, 0x20, 0x08, 0x80, 0xF5, 0x23, 0x5B, 0x00, 0xF9, 0x18, 0x53, 0x20, 0x08, 0x80
.byte 0xFC, 0x24, 0x64, 0x00, 0x39, 0x19, 0x07, 0x48, 0x08, 0x60, 0x12, 0x33, 0xF9, 0x18, 0xC0, 0x00
.byte 0x08, 0x60, 0x18, 0x34, 0x38, 0x19, 0x02, 0x60, 0x83, 0x20, 0x80, 0x00, 0x39, 0x18, 0x08, 0x68
.byte 0x01, 0x30, 0x8D, 0xE0, 0x00, 0x80, 0xFF, 0xFF, 0x84, 0x21, 0x89, 0x00, 0x7B, 0x18, 0x18, 0x68
.byte 0x01, 0x30, 0x18, 0x60, 0x11, 0x28, 0x33, 0xDC, 0xF5, 0x22, 0x52, 0x00, 0xBC, 0x18, 0xFE, 0x20
.byte 0x40, 0x00, 0x3A, 0x18, 0x02, 0x21, 0x50, 0x5E, 0x21, 0x88, 0x40, 0x18, 0x00, 0x25, 0x20, 0x80
.byte 0xFC, 0x20, 0x40, 0x00, 0x39, 0x18, 0x10, 0x68, 0x09, 0x68, 0x40, 0x1A, 0x10, 0x60, 0x18, 0x68
.byte 0x01, 0x21, 0x08, 0x40, 0x00, 0x28, 0x6C, 0xD0, 0xF4, 0x21, 0x49, 0x00, 0x7A, 0x18, 0x00, 0x23
.byte 0xE1, 0x5E, 0x53, 0x20, 0x40, 0x1A, 0xC0, 0x10, 0x67, 0x30, 0x00, 0x04, 0x11, 0x88, 0x01, 0x43
.byte 0x02, 0x91, 0x06, 0x48, 0x80, 0x24, 0xA4, 0x00, 0x39, 0x19, 0x0B, 0x68, 0x00, 0x95, 0x01, 0x95
.byte 0x02, 0xA9, 0x1A, 0x1C, 0x29, 0xF0, 0x54, 0xFB, 0x53, 0xE0, 0x00, 0x00, 0x4C, 0x89, 0x0C, 0x08
.byte 0xF5, 0x20, 0x40, 0x00, 0x39, 0x18, 0x00, 0x22, 0x53, 0x20, 0x08, 0x80, 0x1A, 0x60, 0x83, 0x23
.byte 0x9B, 0x00, 0xF9, 0x18, 0x0C, 0x20, 0x08, 0x60, 0x85, 0x24, 0xA4, 0x00, 0x38, 0x19, 0x02, 0x60
.byte 0x9F, 0x20, 0x59, 0xF0, 0xBF, 0xFD, 0x3C, 0xE0, 0x81, 0x20, 0x80, 0x00, 0x3A, 0x18, 0x44, 0x4D
.byte 0x85, 0x21, 0x89, 0x00, 0x7C, 0x18, 0x20, 0x68, 0x41, 0x00, 0x09, 0x18, 0x49, 0x19, 0x08, 0x78
.byte 0xE6, 0x23, 0x58, 0x43, 0x00, 0x12, 0x40, 0x00, 0x10, 0x60, 0x82, 0x20, 0x80, 0x00, 0x3A, 0x18
.byte 0x21, 0x68, 0x48, 0x00, 0x40, 0x18, 0x69, 0x1C, 0x40, 0x18, 0x00, 0x78, 0x58, 0x43, 0x00, 0x12
.byte 0x40, 0x00, 0x10, 0x60, 0x84, 0x21, 0x89, 0x00, 0x7B, 0x18, 0x1A, 0x68, 0x01, 0x32, 0x1A, 0x60
.byte 0x21, 0x68, 0x48, 0x00, 0x40, 0x18, 0x02, 0x35, 0x40, 0x19, 0x00, 0x78, 0x82, 0x42, 0x10, 0xDD
.byte 0x00, 0x20, 0x18, 0x60, 0x21, 0x68, 0x01, 0x31, 0x21, 0x60, 0x48, 0x00, 0x40, 0x18, 0x40, 0x19
.byte 0x01, 0x78, 0x00, 0x29, 0x05, 0xD1, 0x21, 0x60, 0x83, 0x22, 0x92, 0x00, 0xB9, 0x18, 0x01, 0x20
.byte 0x08, 0x60
_0800641E:
movs r3, #0x80
lsls r3, r3, #0x02
adds r0, r7, r3
ldr r0, [r0, #0x00]
cmp r0, #0x00
beq _08006508
ldr r2, _080064C0 @ =0x080D9130
mov r4, r8
ldr r0, [r4, #0x0C]
lsls r0, r0, #0x02
adds r0, r7, r0
ldr r1, [r0, #0x00]
lsls r0, r1, #0x02
adds r0, r0, r1
lsls r0, r0, #0x02
adds r0, r0, r2
movs r3, #0x10
ldsb r3, [r0, r3]
movs r0, #0xF6
lsls r0, r0, #0x01
adds r2, r7, r0
movs r1, #0xF8
lsls r1, r1, #0x01
adds r0, r7, r1
ldr r1, [r2, #0x00]
ldr r0, [r0, #0x00]
adds r1, r1, r0
str r1, [r2, #0x00]
cmp r1, #0x7F
ble _08006464
adds r0, r2, #0x0
_0800645C:
subs r1, #0x7F
cmp r1, #0x7F
bgt _0800645C
str r1, [r0, #0x00]
_08006464:
movs r2, #0xF6
lsls r2, r2, #0x01
adds r0, r7, r2
ldr r1, [r0, #0x00]
cmp r1, #0x00
bge _0800647C
adds r2, r0, #0x0
adds r0, r1, #0x0
_08006474:
adds r0, #0x7F
cmp r0, #0x00
blt _08006474
str r0, [r2, #0x00]
_0800647C:
movs r4, #0x83
lsls r4, r4, #0x02
adds r0, r7, r4
ldr r0, [r0, #0x00]
cmp r0, #0x0C
beq _080064C8
movs r1, #0xF6
lsls r1, r1, #0x01
adds r0, r7, r1
ldr r2, [r0, #0x00]
movs r0, #0x0F
str r0, [sp, #0x000]
mov r0, r8
adds r1, r3, #0x0
movs r3, #0x00
bl renderCharacterSprites
movs r2, #0xF4
lsls r2, r2, #0x01
adds r1, r7, r2
movs r3, #0x80
lsls r3, r3, #0x02
adds r2, r7, r3
ldr r3, [r2, #0x00]
movs r2, #0x00
str r2, [sp, #0x000]
ldr r2, _080064C4 @ =0x080D93A0
str r2, [sp, #0x004]
adds r2, r3, #0x0
bl oam_renderCellData
b _080064FE
.byte 0x84, 0x93, 0x0D, 0x08
_080064C0: .4byte 0x080D9130
_080064C4: .4byte 0x080D93A0
_080064C8:
movs r4, #0xF6
lsls r4, r4, #0x01
adds r0, r7, r4
ldr r2, [r0, #0x00]
movs r0, #0x0F
str r0, [sp, #0x000]
mov r0, r8
adds r1, r3, #0x0
movs r3, #0x00
bl renderCharacterSprites
movs r2, #0xF4
lsls r2, r2, #0x01
adds r1, r7, r2
movs r3, #0x81
lsls r3, r3, #0x02
adds r2, r7, r3
ldr r2, [r2, #0x00]
adds r4, #0x1C
adds r3, r7, r4
ldr r3, [r3, #0x00]
movs r4, #0x00
str r4, [sp, #0x000]
ldr r4, _08006514 @ =0x080D93A0
str r4, [sp, #0x004]
bl oam_renderCellData
_080064FE:
movs r0, #0x92
lsls r0, r0, #0x02
adds r1, r7, r0
movs r0, #0x01
str r0, [r1, #0x00]
_08006508:
add sp, #0x00C
pop {r3}
mov r8, r3
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_08006514: .4byte 0x080D93A0
thumb_func_start sub_8006518
sub_8006518:
push {r4, r5, r6, r7, lr}
mov r7, r8
push {r7}
add sp, #-0x010
adds r4, r0, #0x0
adds r5, r1, #0x0
adds r7, r2, #0x0
mov r8, r3
ldr r0, [r4, #0x0C]
cmp r0, r5
bne _08006556
lsls r0, r7, #0x10
lsls r1, r3, #0x10
lsrs r0, r0, #0x10
orrs r0, r1
str r0, [sp, #0x008]
ldr r1, _080065B4 @ =0x080D93A8
lsls r0, r5, #0x02
adds r0, r0, r1
ldr r0, [r0, #0x00]
movs r1, #0x00
str r1, [sp, #0x000]
str r1, [sp, #0x004]
add r1, sp, #0x008
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
ldr r0, [r4, #0x0C]
cmp r0, r5
beq _080065A8
_08006556:
lsls r6, r5, #0x02
ldr r1, _080065B8 @ =0x000004FC
adds r0, r4, r1
adds r0, r0, r6
ldr r0, [r0, #0x00]
cmp r0, #0x02
ble _080065A8
ldr r4, _080065BC @ =0x080D93C8
lsls r2, r5, #0x01
adds r0, r2, r4
ldrb r0, [r0, #0x00]
lsls r0, r0, #0x18
asrs r0, r0, #0x18
adds r0, r0, r7
lsls r0, r0, #0x10
lsrs r0, r0, #0x10
ldr r3, _080065C0 @ =0xFFFF0000
ldr r1, [sp, #0x00C]
ands r1, r3
orrs r1, r0
str r1, [sp, #0x00C]
adds r2, #0x01
adds r2, r2, r4
movs r0, #0x00
ldsb r0, [r2, r0]
add r0, r8
lsls r0, r0, #0x10
ldr r2, _080065C4 @ =0x0000FFFF
ands r1, r2
orrs r1, r0
str r1, [sp, #0x00C]
ldr r0, _080065C8 @ =0x080D93B8
adds r0, r6, r0
ldr r0, [r0, #0x00]
add r1, sp, #0x00C
movs r2, #0x00
str r2, [sp, #0x000]
str r2, [sp, #0x004]
movs r3, #0x00
bl oam_renderCellData
_080065A8:
add sp, #0x010
pop {r3}
mov r8, r3
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_080065B4: .4byte 0x080D93A8
_080065B8: .4byte 0x000004FC
_080065BC: .4byte 0x080D93C8
_080065C0: .4byte 0xFFFF0000
_080065C4: .4byte 0x0000FFFF
_080065C8: .4byte 0x080D93B8
thumb_func_start sub_80065CC
sub_80065CC:
push {r4, r5, r6, r7, lr}
add sp, #-0x010
adds r7, r0, #0x0
ldr r0, _080065F0 @ =0x000004EC
adds r5, r7, r0
movs r1, #0xE1
lsls r1, r1, #0x03
adds r0, r7, r1
ldr r0, [r0, #0x00]
cmp r0, #0x07
bls _080065E4
b _0800670A
_080065E4:
lsls r0, r0, #0x02
ldr r1, _080065F4 @ =0x080065F8
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
.byte 0x00, 0x00
_080065F0: .4byte 0x000004EC
_080065F4: .4byte 0x080065F8
.byte 0x0A, 0x67, 0x00, 0x08, 0x0A, 0x67, 0x00, 0x08, 0x18, 0x66, 0x00, 0x08, 0x34, 0x66, 0x00, 0x08
.byte 0x84, 0x66, 0x00, 0x08, 0x90, 0x66, 0x00, 0x08, 0xA6, 0x66, 0x00, 0x08, 0x00, 0x67, 0x00, 0x08
.byte 0x86, 0x22, 0x92, 0x00, 0xA8, 0x18, 0x00, 0x21, 0x01, 0x60, 0x08, 0x32, 0xA8, 0x18, 0x01, 0x60
.byte 0x87, 0x20, 0x80, 0x00, 0x29, 0x18, 0x08, 0x68, 0x01, 0x30, 0x69, 0xE0, 0x88, 0x22, 0x92, 0x00
.byte 0xA9, 0x18, 0x08, 0x68, 0x01, 0x30, 0x08, 0x60, 0x10, 0x28, 0x17, 0xDC, 0x0A, 0x49, 0x80, 0x06
.byte 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18
.byte 0x00, 0x68, 0x86, 0x21, 0x89, 0x00, 0x6C, 0x18, 0x41, 0x00, 0x09, 0x18, 0x48, 0x01, 0x09, 0x18
.byte 0xC9, 0x13, 0x01, 0x31, 0x38, 0xE0, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x20, 0x08, 0x60
.byte 0x87, 0x22, 0x92, 0x00, 0xA9, 0x18, 0x08, 0x68, 0x01, 0x30, 0x41, 0xE0, 0x86, 0x20, 0x80, 0x00
.byte 0x29, 0x18, 0x80, 0x20, 0x40, 0x00, 0x3B, 0xE0, 0x88, 0x22, 0x92, 0x00, 0xA9, 0x18, 0x00, 0x20
.byte 0x08, 0x60, 0x87, 0x20, 0x80, 0x00, 0x29, 0x18, 0x08, 0x68, 0x01, 0x30, 0x30, 0xE0, 0x88, 0x22
.byte 0x92, 0x00, 0xA9, 0x18, 0x08, 0x68, 0x01, 0x30, 0x08, 0x60, 0x10, 0x28, 0x1C, 0xDC, 0x0D, 0x49
.byte 0x80, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00
.byte 0x40, 0x18, 0x00, 0x68, 0x86, 0x21, 0x89, 0x00, 0x6C, 0x18, 0x41, 0x00, 0x09, 0x18, 0x48, 0x01
.byte 0x09, 0x18, 0x49, 0x42, 0xC9, 0x13, 0x64, 0x31, 0xC8, 0x20, 0xC0, 0x01, 0x5B, 0xF0, 0xE4, 0xFB
.byte 0x20, 0x60, 0x0E, 0xE0, 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x20, 0x08, 0x60, 0x87, 0x22, 0x92, 0x00
.byte 0xA9, 0x18, 0x08, 0x68, 0x01, 0x30, 0x03, 0xE0, 0x86, 0x20, 0x80, 0x00, 0x29, 0x18, 0x00, 0x20
.byte 0x08, 0x60
_0800670A:
movs r1, #0x86
lsls r1, r1, #0x02
adds r4, r5, r1
ldr r3, [r4, #0x00]
cmp r3, #0x00
beq _08006768
movs r6, #0x00
ldr r0, _08006770 @ =0x00300048
str r0, [sp, #0x008]
ldr r0, _08006774 @ =0x080C888C
str r6, [sp, #0x000]
str r6, [sp, #0x004]
add r1, sp, #0x008
adds r2, r3, #0x0
bl oam_renderCellData
ldr r3, [r4, #0x00]
cmp r3, #0x00
beq _08006768
ldr r0, [r7, #0x0C]
lsls r0, r0, #0x02
adds r0, r5, r0
ldr r4, [r0, #0x00]
cmp r4, #0x04
beq _08006768
ldr r0, _08006778 @ =0x0073003C
str r0, [sp, #0x00C]
ldr r1, _0800677C @ =0x080D9130
lsls r0, r4, #0x02
adds r0, r0, r4
lsls r0, r0, #0x02
adds r0, r0, r1
ldrb r0, [r0, #0x10]
lsls r0, r0, #0x18
asrs r0, r0, #0x18
ldr r1, _08006780 @ =0x080D93F4
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r0, [r0, #0x00]
cmp r0, #0x00
beq _08006768
add r1, sp, #0x00C
str r6, [sp, #0x000]
str r6, [sp, #0x004]
adds r2, r3, #0x0
bl oam_renderCellData
_08006768:
add sp, #0x010
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_08006770: .4byte 0x00300048
_08006774: .4byte 0x080C888C
_08006778: .4byte 0x0073003C
_0800677C: .4byte 0x080D9130
_08006780: .4byte 0x080D93F4
thumb_func_start sub_8006784
sub_8006784:
push {r4, r5, r6, r7, lr}
add sp, #-0x00C
adds r4, r0, #0x0
ldr r0, _080067B0 @ =0x0000056C
adds r4, r4, r0
movs r0, #0x01
bl pltt_getBuffer
adds r6, r0, #0x0
adds r6, #0x08
ldrh r1, [r4, #0x10]
lsls r0, r1, #0x10
asrs r7, r0, #0x12
movs r0, #0x1F
ands r7, r0
movs r0, #0x1F
adds r5, r0, #0x0
ands r5, r1
cmp r5, #0x0F
bgt _080067B4
lsls r0, r5, #0x01
b _080067B8
_080067B0: .4byte 0x0000056C
_080067B4:
subs r0, r0, r5
lsls r0, r0, #0x01
_080067B8:
adds r5, r0, #0x0
mov r1, sp
adds r0, #0x0F
movs r2, #0x1F
ands r0, r2
lsls r0, r0, #0x05
movs r3, #0xF8
lsls r3, r3, #0x07
adds r4, r3, #0x0
orrs r0, r4
strh r0, [r1, #0x00]
mov r3, sp
movs r1, #0x37
subs r1, r1, r5
ands r1, r2
lsls r1, r1, #0x05
adds r0, r1, #0x0
orrs r0, r2
strh r0, [r3, #0x02]
adds r0, r5, #0x0
ands r0, r2
lsls r0, r0, #0x0A
orrs r1, r0
strh r1, [r3, #0x04]
subs r1, r2, r5
ands r1, r2
adds r0, r1, #0x0
orrs r0, r4
strh r0, [r3, #0x06]
mov r2, sp
movs r3, #0xB8
lsls r3, r3, #0x02
adds r0, r3, #0x0
orrs r1, r0
strh r1, [r2, #0x08]
mov r0, sp
ldrh r0, [r0, #0x00]
strh r0, [r6, #0x02]
cmp r7, #0x07
bgt _08006814
mov r0, sp
ldrh r0, [r0, #0x08]
strh r0, [r6, #0x00]
mov r0, sp
ldrh r0, [r0, #0x02]
b _0800683E
_08006814:
cmp r7, #0x0F
bgt _08006824
mov r0, sp
ldrh r0, [r0, #0x02]
strh r0, [r6, #0x00]
mov r0, sp
ldrh r0, [r0, #0x04]
b _0800683E
_08006824:
cmp r7, #0x17
bgt _08006834
mov r0, sp
ldrh r0, [r0, #0x04]
strh r0, [r6, #0x00]
mov r0, sp
ldrh r0, [r0, #0x06]
b _0800683E
_08006834:
mov r0, sp
ldrh r0, [r0, #0x06]
strh r0, [r6, #0x00]
mov r0, sp
ldrh r0, [r0, #0x08]
_0800683E:
strh r0, [r6, #0x04]
movs r0, #0x01
bl pltt_setDirtyFlag
add sp, #0x00C
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
thumb_func_start sub_8006850
sub_8006850:
push {r4, r5, r6, r7, lr}
add sp, #-0x008
adds r5, r0, #0x0
ldr r0, _08006870 @ =0x0000071C
adds r6, r5, r0
ldr r0, [r6, #0x00]
cmp r0, #0x01
beq _08006874
cmp r0, #0x01
bgt _08006866
b _08006A20
_08006866:
cmp r0, #0x02
bne _0800686C
b _08006968
_0800686C:
b _08006A20
.byte 0x00, 0x00
_08006870: .4byte 0x0000071C
_08006874:
movs r2, #0xE5
lsls r2, r2, #0x03
adds r1, r5, r2
movs r0, #0x00
str r0, [r1, #0x00]
movs r0, #0xDB
lsls r0, r0, #0x03
adds r3, r5, r0
ldr r0, [r3, #0x00]
subs r0, #0x03
ldr r1, _08006954 @ =0x080E645C
mov r12, r1
lsls r0, r0, #0x19
asrs r0, r0, #0x10
cmp r0, #0x00
bge _08006896
adds r0, #0x3F
_08006896:
lsls r0, r0, #0x10
lsrs r0, r0, #0x16
lsls r0, r0, #0x02
add r0, r12
ldr r1, [r0, #0x00]
ldr r2, _08006958 @ =0x000006D4
adds r0, r5, r2
lsls r1, r1, #0x02
asrs r1, r1, #0x0F
ldrh r0, [r0, #0x00]
subs r0, r0, r1
adds r2, #0x3C
adds r1, r5, r2
strh r0, [r1, #0x00]
ldr r0, [r3, #0x00]
subs r0, #0x03
lsls r0, r0, #0x19
asrs r0, r0, #0x10
cmp r0, #0x00
bge _080068C0
adds r0, #0x3F
_080068C0:
asrs r0, r0, #0x06
movs r7, #0x80
lsls r7, r7, #0x01
subs r0, r7, r0
ldr r4, _0800695C @ =0x000003FF
ands r0, r4
lsls r0, r0, #0x02
add r0, r12
ldr r0, [r0, #0x00]
ldr r2, _08006960 @ =0x000006D6
adds r1, r5, r2
lsls r0, r0, #0x02
asrs r0, r0, #0x0F
subs r0, #0x10
ldrh r1, [r1, #0x00]
subs r1, r1, r0
adds r2, #0x3C
adds r0, r5, r2
strh r1, [r0, #0x00]
ldr r0, [r3, #0x00]
subs r0, #0x03
lsls r0, r0, #0x19
asrs r0, r0, #0x10
cmp r0, #0x00
bge _080068F4
adds r0, #0x3F
_080068F4:
asrs r0, r0, #0x06
ands r0, r4
lsls r0, r0, #0x02
add r0, r12
ldr r1, [r0, #0x00]
ldr r0, _08006964 @ =0x00000714
adds r2, r5, r0
lsls r0, r1, #0x02
adds r0, r0, r1
lsls r0, r0, #0x01
asrs r0, r0, #0x0F
str r0, [r2, #0x00]
ldr r0, [r3, #0x00]
subs r0, #0x03
lsls r0, r0, #0x19
asrs r0, r0, #0x10
cmp r0, #0x00
bge _0800691A
adds r0, #0x3F
_0800691A:
asrs r0, r0, #0x06
subs r0, r7, r0
ands r0, r4
lsls r0, r0, #0x02
add r0, r12
ldr r1, [r0, #0x00]
movs r2, #0xE3
lsls r2, r2, #0x03
adds r4, r5, r2
lsls r0, r1, #0x02
adds r0, r0, r1
lsls r0, r0, #0x01
asrs r0, r0, #0x0F
str r0, [r4, #0x00]
movs r1, #0x06
bl __divsi3
str r0, [r4, #0x00]
movs r1, #0xE4
lsls r1, r1, #0x03
adds r0, r5, r1
str r7, [r0, #0x00]
movs r0, #0x02
str r0, [r6, #0x00]
movs r0, #0x7B
bl m4aSongNumStart
b _08006A20
.byte 0x00, 0x00
_08006954: .4byte 0x080E645C
_08006958: .4byte 0x000006D4
_0800695C: .4byte 0x000003FF
_08006960: .4byte 0x000006D6
_08006964: .4byte 0x00000714
_08006968:
movs r2, #0xE5
lsls r2, r2, #0x03
adds r1, r5, r2
ldr r0, [r1, #0x00]
adds r0, #0x01
str r0, [r1, #0x00]
cmp r0, #0x10
bgt _08006A1C
movs r0, #0xE2
lsls r0, r0, #0x03
adds r6, r5, r0
ldr r1, _080069E0 @ =0x00000714
adds r3, r5, r1
ldr r1, [r3, #0x00]
ldrh r0, [r6, #0x00]
subs r0, r0, r1
movs r2, #0x00
mov r12, r2
strh r0, [r6, #0x00]
ldr r0, _080069E4 @ =0x00000712
adds r2, r5, r0
movs r1, #0xE3
lsls r1, r1, #0x03
adds r7, r5, r1
ldr r1, [r7, #0x00]
ldrh r0, [r2, #0x00]
subs r0, r0, r1
strh r0, [r2, #0x00]
movs r2, #0xE4
lsls r2, r2, #0x03
adds r4, r5, r2
ldr r2, [r4, #0x00]
ldr r0, [r3, #0x00]
subs r1, r2, #0x4
cmp r0, #0x00
ble _080069B2
adds r1, r2, #0x4
_080069B2:
str r1, [r4, #0x00]
ldr r0, _080069E8 @ =0x00000724
adds r2, r5, r0
ldr r0, [r2, #0x00]
adds r0, #0x01
str r0, [r2, #0x00]
cmp r0, #0x05
bls _080069C6
mov r1, r12
str r1, [r2, #0x00]
_080069C6:
ldr r0, [r7, #0x00]
cmp r0, #0x00
ble _080069F4
ldr r1, _080069EC @ =0x080D9444
ldr r0, [r2, #0x00]
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r0, [r0, #0x00]
ldr r3, [r4, #0x00]
mov r2, r12
str r2, [sp, #0x000]
ldr r1, _080069F0 @ =0x080D943C
b _08006A06
_080069E0: .4byte 0x00000714
_080069E4: .4byte 0x00000712
_080069E8: .4byte 0x00000724
_080069EC: .4byte 0x080D9444
_080069F0: .4byte 0x080D943C
_080069F4:
ldr r1, _08006A14 @ =0x080D9444
ldr r0, [r2, #0x00]
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r0, [r0, #0x00]
ldr r3, [r4, #0x00]
mov r1, r12
str r1, [sp, #0x000]
ldr r1, _08006A18 @ =0x080D9434
_08006A06:
str r1, [sp, #0x004]
adds r1, r6, #0x0
adds r2, r3, #0x0
bl oam_renderCellData
b _08006A20
.byte 0x00, 0x00
_08006A14: .4byte 0x080D9444
_08006A18: .4byte 0x080D9434
_08006A1C:
movs r0, #0x00
str r0, [r6, #0x00]
_08006A20:
add sp, #0x008
pop {r4, r5, r6, r7}
pop {r0}
bx r0
thumb_func_start sub_8006A28
sub_8006A28:
push {r4, r5, r6, r7, lr}
mov r7, r9
mov r6, r8
push {r6, r7}
ldr r1, _08006A5C @ =0x000004EC
adds r1, r1, r0
mov r9, r1
movs r6, #0x00
_08006A38:
lsls r1, r6, #0x01
adds r0, r1, r6
lsls r0, r0, #0x03
adds r0, #0x20
mov r2, r9
adds r5, r2, r0
movs r0, #0x0E
ldsb r0, [r5, r0]
adds r3, r1, #0x0
adds r7, r6, #0x1
cmp r0, #0x0A
bls _08006A52
b _08006C48
_08006A52:
lsls r0, r0, #0x02
ldr r1, _08006A60 @ =0x08006A64
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
_08006A5C: .4byte 0x000004EC
_08006A60: .4byte 0x08006A64
.byte 0x48, 0x6C, 0x00, 0x08, 0x90, 0x6A, 0x00, 0x08, 0xAC, 0x6A, 0x00, 0x08, 0xAC, 0x6A, 0x00, 0x08
.byte 0xE8, 0x6A, 0x00, 0x08, 0xF0, 0x6A, 0x00, 0x08, 0x0C, 0x6B, 0x00, 0x08, 0x84, 0x6B, 0x00, 0x08
.byte 0x9E, 0x6B, 0x00, 0x08, 0xB8, 0x6B, 0x00, 0x08, 0x48, 0x6C, 0x00, 0x08, 0xB0, 0x00, 0x80, 0x19
.byte 0x80, 0x00, 0xF8, 0x30, 0x48, 0x44, 0x00, 0x21, 0x08, 0xF0, 0x6A, 0xF8, 0x92, 0x21, 0x89, 0x00
.byte 0x49, 0x44, 0x01, 0x20, 0x08, 0x60, 0xCC, 0xE0, 0x29, 0x8A, 0x03, 0x20, 0x08, 0x40, 0x00, 0x28
.byte 0x0E, 0xD1, 0x08, 0x04, 0x80, 0x14, 0x07, 0x21, 0x08, 0x40, 0x07, 0x49, 0x80, 0x00, 0x40, 0x18
.byte 0x04, 0x68, 0x29, 0xF0, 0xB5, 0xFC, 0x05, 0x4A, 0x05, 0x4B, 0x21, 0x1C, 0x29, 0xF0, 0x88, 0xFC
.byte 0x28, 0x8A, 0x01, 0x30, 0x28, 0x82, 0xB4, 0xE0, 0x5C, 0x94, 0x0D, 0x08, 0x00, 0x62, 0x01, 0x06
.byte 0x00, 0x01, 0x00, 0x80, 0x00, 0x20, 0x28, 0x82, 0x05, 0x20, 0xA9, 0xE0, 0x28, 0x8A, 0x01, 0x30
.byte 0x00, 0x21, 0x28, 0x82, 0x00, 0x04, 0x00, 0x14, 0x77, 0x1C, 0x06, 0x28, 0x00, 0xDC, 0xA1, 0xE0
.byte 0x29, 0x82, 0x06, 0x20, 0xA8, 0x73, 0x9D, 0xE0, 0x29, 0x8A, 0x03, 0x20, 0x08, 0x40, 0x77, 0x1C
.byte 0x00, 0x28, 0x18, 0xD1, 0x08, 0x04, 0x80, 0x14, 0x07, 0x21, 0x08, 0x40, 0x14, 0x49, 0x15, 0x4C
.byte 0xA0, 0x46, 0xC0, 0x01, 0x44, 0x18, 0x02, 0x26, 0x29, 0xF0, 0x82, 0xFC, 0x21, 0x1C, 0x42, 0x46
.byte 0x11, 0x4B, 0x29, 0xF0, 0x55, 0xFC, 0x80, 0x20, 0x80, 0x44, 0x80, 0x21, 0xC9, 0x00, 0x64, 0x18
.byte 0x01, 0x3E, 0x00, 0x2E, 0xF0, 0xDA, 0x10, 0x22, 0xA9, 0x5E, 0x08, 0x1C, 0x00, 0x29, 0x00, 0xDA
.byte 0xC8, 0x1C, 0x80, 0x10, 0x02, 0x04, 0x10, 0x0C, 0x06, 0x28, 0x73, 0xD8, 0x07, 0x4B, 0x90, 0x13
.byte 0xC0, 0x18, 0x00, 0x68, 0x28, 0x60, 0x28, 0x8A, 0x01, 0x30, 0x28, 0x82, 0x6A, 0xE0, 0x00, 0x00
.byte 0x3C, 0xE7, 0x06, 0x08, 0x00, 0x64, 0x01, 0x06, 0x40, 0x00, 0x00, 0x80, 0x18, 0x94, 0x0D, 0x08
.byte 0xA8, 0x88, 0x68, 0x82, 0xE8, 0x88, 0xA8, 0x82, 0x30, 0x1C, 0x03, 0x21, 0x5B, 0xF0, 0xF4, 0xF9
.byte 0x41, 0x00, 0x09, 0x18, 0x49, 0x00, 0x29, 0x82, 0x50, 0xE0, 0x28, 0x8A, 0x01, 0x38, 0x00, 0x21
.byte 0x28, 0x82, 0x00, 0x04, 0x77, 0x1C, 0x00, 0x28, 0x4C, 0xDC, 0x29, 0x82, 0xA8, 0x7B, 0x01, 0x30
.byte 0xA8, 0x73, 0x47, 0xE0, 0x28, 0x8A, 0x01, 0x30, 0x28, 0x82, 0x00, 0x04, 0x00, 0x14, 0x64, 0x28
.byte 0x3C, 0xDC, 0x28, 0x89, 0x01, 0x38, 0x28, 0x81, 0x68, 0x89, 0x01, 0x38, 0x68, 0x81, 0x0C, 0x24
.byte 0x29, 0x5F, 0x01, 0x20, 0x30, 0x40, 0x00, 0x28, 0x04, 0xD0, 0x01, 0x4A, 0x88, 0x18, 0x04, 0xE0
.byte 0x00, 0xF0, 0xFF, 0xFF, 0x80, 0x24, 0x64, 0x01, 0x08, 0x19, 0xA8, 0x81, 0x12, 0x4A, 0xB0, 0x00
.byte 0x80, 0x18, 0x00, 0x24, 0x01, 0x5F, 0x12, 0x24, 0x28, 0x5F, 0x09, 0x1A, 0x10, 0x24, 0x28, 0x5F
.byte 0x48, 0x43, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11, 0x69, 0x8A, 0x40, 0x18, 0xA8, 0x80
.byte 0x58, 0x1C, 0x40, 0x00, 0x80, 0x18, 0x00, 0x22, 0x81, 0x5E, 0x14, 0x24, 0x28, 0x5F, 0x09, 0x1A
.byte 0x10, 0x22, 0xA8, 0x5E, 0x48, 0x43, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11, 0xAC, 0x8A
.byte 0x00, 0x19, 0xE8, 0x80, 0x05, 0xE0, 0x00, 0x00, 0x0C, 0x92, 0x0D, 0x08, 0xA8, 0x7B, 0x01, 0x30
.byte 0xA8, 0x73, 0x77, 0x1C
_08006C48:
adds r6, r7, #0x0
cmp r6, #0x08
bgt _08006C50
b _08006A38
_08006C50:
pop {r3, r4}
mov r8, r3
mov r9, r4
pop {r4, r5, r6, r7}
pop {r0}
bx r0
thumb_func_start sub_8006C5C
sub_8006C5C:
push {r4, r5, r6, r7, lr}
mov r7, r9
mov r6, r8
push {r6, r7}
add sp, #-0x00C
adds r4, r0, #0x0
ldr r0, _08006D50 @ =0x000004EC
adds r7, r4, r0
ldr r1, [r4, #0x0C]
lsls r2, r1, #0x02
ldr r3, _08006D54 @ =0x000004FC
adds r0, r4, r3
adds r0, r0, r2
ldr r0, [r0, #0x00]
subs r0, #0x02
cmp r0, #0x05
bhi _08006CC8
ldr r5, _08006D58 @ =0x080D9274
adds r0, r7, r2
ldr r0, [r0, #0x00]
lsls r0, r0, #0x03
adds r0, r0, r5
movs r6, #0x00
ldsh r2, [r0, r6]
movs r6, #0x02
ldsh r3, [r0, r6]
adds r0, r4, #0x0
bl sub_8006518
movs r6, #0x00
ldr r0, [r4, #0x08]
cmp r6, r0
bgt _08006CC8
mov r8, r5
adds r5, r7, #0x0
_08006CA2:
ldr r0, [r4, #0x0C]
cmp r6, r0
beq _08006CBE
ldr r0, [r5, #0x00]
lsls r0, r0, #0x03
add r0, r8
movs r1, #0x00
ldsh r2, [r0, r1]
movs r1, #0x02
ldsh r3, [r0, r1]
adds r0, r4, #0x0
adds r1, r6, #0x0
bl sub_8006518
_08006CBE:
adds r5, #0x04
adds r6, #0x01
ldr r0, [r4, #0x08]
cmp r6, r0
ble _08006CA2
_08006CC8:
movs r6, #0x00
add r3, sp, #0x008
mov r8, r3
ldr r0, _08006D5C @ =0xFFE80000
mov r9, r0
_08006CD2:
movs r1, #0x08
subs r1, r1, r6
lsls r0, r1, #0x01
adds r0, r0, r1
lsls r0, r0, #0x03
adds r0, #0x20
adds r4, r7, r0
ldr r5, [r4, #0x00]
cmp r5, #0x00
beq _08006D3A
movs r1, #0x08
ldsh r0, [r4, r1]
cmp r0, #0x00
beq _08006D3A
movs r3, #0x0A
ldsh r0, [r4, r3]
cmp r0, #0x00
beq _08006D3A
ldrh r0, [r4, #0x06]
lsls r0, r0, #0x10
ldrh r1, [r4, #0x04]
orrs r1, r0
str r1, [sp, #0x008]
mov r0, r8
movs r3, #0x00
ldsh r2, [r0, r3]
mov r3, r9
asrs r0, r3, #0x10
cmp r2, r0
blt _08006D3A
asrs r1, r1, #0x10
cmp r1, r0
blt _08006D3A
movs r0, #0x80
lsls r0, r0, #0x01
cmp r2, r0
bgt _08006D3A
cmp r1, #0xC0
bgt _08006D3A
movs r0, #0x08
ldsh r2, [r4, r0]
movs r1, #0x0A
ldsh r3, [r4, r1]
movs r1, #0x0C
ldsh r0, [r4, r1]
str r0, [sp, #0x000]
movs r0, #0x00
str r0, [sp, #0x004]
adds r0, r5, #0x0
add r1, sp, #0x008
bl oam_renderCellData
_08006D3A:
adds r6, #0x01
cmp r6, #0x08
ble _08006CD2
add sp, #0x00C
pop {r3, r4}
mov r8, r3
mov r9, r4
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_08006D50: .4byte 0x000004EC
_08006D54: .4byte 0x000004FC
_08006D58: .4byte 0x080D9274
_08006D5C: .4byte 0xFFE80000
thumb_func_start sub_8006D60
sub_8006D60:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x008
ldr r1, _08006DF8 @ =0x000004EC
adds r1, r1, r0
mov r9, r1
ldr r1, _08006DFC @ =0x080D9130
movs r2, #0x00
mov r10, r2
movs r7, #0x00
ldr r3, _08006E00 @ =0x000005E4
adds r6, r0, r3
adds r2, r1, #0x0
adds r2, #0x0C
subs r3, #0xD8
adds r5, r0, r3
mov r8, r1
movs r3, #0x08
_08006D8A:
mov r1, r8
ldr r0, [r1, #0x00]
str r0, [r5, #0x00]
ldrh r0, [r2, #0x00]
strh r0, [r5, #0x04]
ldrh r0, [r2, #0x02]
strh r0, [r5, #0x06]
strh r7, [r5, #0x0A]
strh r7, [r5, #0x08]
strh r7, [r5, #0x0C]
movs r0, #0x01
strb r0, [r5, #0x0E]
strh r7, [r5, #0x10]
movs r4, #0x04
ldsb r4, [r2, r4]
strb r4, [r6, #0x00]
mov r0, r10
strb r0, [r6, #0x01]
strh r7, [r6, #0x02]
strh r7, [r6, #0x06]
movs r0, #0x01
str r2, [sp, #0x000]
str r3, [sp, #0x004]
bl pltt_getBuffer
adds r1, r4, #0x7
lsls r1, r1, #0x05
adds r0, r0, r1
str r0, [r6, #0x0C]
lsls r4, r4, #0x09
ldr r0, _08006E04 @ =0x02014400
adds r4, r4, r0
str r4, [r6, #0x10]
adds r6, #0x14
ldr r2, [sp, #0x000]
adds r2, #0x14
adds r5, #0x18
movs r1, #0x14
add r8, r1
ldr r3, [sp, #0x004]
subs r3, #0x01
cmp r3, #0x00
bge _08006D8A
mov r1, r9
adds r1, #0x8E
movs r0, #0x02
strb r0, [r1, #0x00]
add sp, #0x008
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_08006DF8: .4byte 0x000004EC
_08006DFC: .4byte 0x080D9130
_08006E00: .4byte 0x000005E4
_08006E04: .4byte 0x02014400
thumb_func_start sub_8006E08
sub_8006E08:
push {r4, r5, r6, r7, lr}
mov r7, r8
push {r7}
adds r7, r0, #0x0
mov r8, r1
cmp r1, #0x00
beq _08006E4A
movs r5, #0xC0
lsls r5, r5, #0x13
movs r4, #0x07
_08006E1C:
bl dmaq_getVBlankDmaQueue
ldr r1, _08007074 @ =0x0203EBF8
adds r2, r5, #0x0
ldr r3, _08007078 @ =0x81000C00
bl dmaq_enqueue
bl main_frameProc
movs r0, #0xC0
lsls r0, r0, #0x05
adds r5, r5, r0
subs r4, #0x01
cmp r4, #0x00
bge _08006E1C
mov r1, r8
cmp r1, #0x00
beq _08006E4A
adds r0, r7, #0x0
bl sub_8002EA4
bl main_frameProc
_08006E4A:
ldr r4, _0800707C @ =0x080AE03C
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0xA0
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
ldr r4, _08007080 @ =0x0807CD48
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0xE0
adds r0, r4, #0x0
movs r2, #0x10
bl CpuFastSet
ldr r4, _08007084 @ =0x080AF2C0
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r0, r4, #0x0
movs r2, #0x10
bl CpuFastSet
movs r0, #0x01
bl pltt_setDirtyFlag
adds r0, r7, #0x0
bl spm_loadOtherGfx
bl main_frameProc
mov r2, r8
cmp r2, #0x00
beq _08006F2C
ldr r0, _08007088 @ =0x0807D1E8
ldr r4, _0800708C @ =0x02008400
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _08007090 @ =0x06008000
ldr r3, _08007094 @ =0x80000600
adds r1, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08007098 @ =0x080AE180
movs r2, #0x80
lsls r2, r2, #0x07
adds r1, r4, r2
bl LZ77UnCompWram
bl main_frameProc
ldr r0, _0800709C @ =0x080AE7C8
movs r1, #0xC0
lsls r1, r1, #0x07
adds r4, r4, r1
adds r1, r4, #0x0
bl LZ77UnCompWram
bl main_frameProc
movs r5, #0x00
ldr r6, _080070A0 @ =0x0600C000
_08006EDC:
lsls r4, r5, #0x0D
ldr r0, _080070A4 @ =0x0200C400
adds r4, r4, r0
bl dmaq_getVBlankDmaQueue
adds r1, r4, #0x0
adds r2, r6, #0x0
ldr r3, _080070A8 @ =0x80001000
bl dmaq_enqueue
bl main_frameProc
movs r2, #0x80
lsls r2, r2, #0x06
adds r6, r6, r2
adds r5, #0x01
cmp r5, #0x01
ble _08006EDC
ldr r0, _080070AC @ =0x080AF320
ldr r4, _080070B0 @ =0x02010400
adds r1, r4, #0x0
bl LZ77UnCompWram
bl main_frameProc
ldr r0, _080070B4 @ =0x080C2FA8
movs r2, #0x80
lsls r2, r2, #0x05
adds r1, r4, r2
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _080070B8 @ =0x06010000
ldr r3, _080070BC @ =0x80001200
adds r1, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
_08006F2C:
ldr r0, _080070C0 @ =0x080AFE60
ldr r4, _080070C4 @ =0x02015C00
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _080070C8 @ =0x06015800
ldr r3, _080070CC @ =0x80000500
adds r1, r4, #0x0
bl dmaq_enqueue
ldr r0, _080070D0 @ =0x080B042C
movs r1, #0xA0
lsls r1, r1, #0x05
adds r5, r4, r1
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _080070D4 @ =0x06016C00
ldr r3, _080070D8 @ =0x80000100
adds r1, r5, #0x0
bl dmaq_enqueue
ldr r0, _080070DC @ =0x080B05BC
movs r2, #0xC0
lsls r2, r2, #0x05
adds r4, r4, r2
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _080070E0 @ =0x06017000
ldr r3, _080070E4 @ =0x80000110
adds r1, r4, #0x0
bl dmaq_enqueue
adds r0, r7, #0x0
bl spm_loadOtherGfx
bl main_frameProc
mov r0, r8
cmp r0, #0x00
beq _08006FF6
ldr r4, _080070E8 @ =0x080AEE04
movs r0, #0x00
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
adds r4, r0, #0x0
movs r0, #0x00
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
ldr r2, _080070EC @ =0x06002000
ldr r3, _080070F0 @ =0x80000400
adds r0, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r4, _080070F4 @ =0x0807DA94
movs r0, #0x00
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
bl main_frameProc
ldr r4, _080070F8 @ =0x0807DB98
movs r0, #0x01
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
movs r0, #0x03
bl map_setBufferDirty
bl main_frameProc
_08006FF6:
ldr r2, _080070FC @ =0x000011FE
adds r1, r7, r2
ldrh r0, [r1, #0x00]
movs r2, #0x00
movs r0, #0x0B
strh r0, [r1, #0x00]
ldr r0, _08007100 @ =0x00001204
adds r1, r7, r0
ldrh r0, [r1, #0x00]
ldr r0, _08007104 @ =0x0000020B
strh r0, [r1, #0x00]
ldr r0, _08007108 @ =0x0000120A
adds r1, r7, r0
ldrh r0, [r1, #0x00]
ldr r0, _0800710C @ =0x0000448E
strh r0, [r1, #0x00]
ldr r0, _08007110 @ =0x000011FC
adds r1, r7, r0
ldrh r0, [r1, #0x00]
ldr r0, _08007114 @ =0x00001741
strh r0, [r1, #0x00]
ldr r1, _08007118 @ =0x000011F8
adds r0, r7, r1
str r2, [r0, #0x00]
mov r0, r8
cmp r0, #0x00
beq _08007058
ldr r0, _0800711C @ =0x00001216
adds r1, r7, r0
ldrh r0, [r1, #0x00]
movs r0, #0xFF
strh r0, [r1, #0x00]
ldr r0, _08007120 @ =0x0000121A
adds r1, r7, r0
ldrh r0, [r1, #0x00]
movs r0, #0x10
strh r0, [r1, #0x00]
ldr r0, _08007124 @ =0x000011E8
adds r1, r7, r0
movs r0, #0xB4
lsls r0, r0, #0x01
str r0, [r1, #0x00]
ldr r0, _08007128 @ =0x000011EC
adds r1, r7, r0
movs r0, #0x50
str r0, [r1, #0x00]
ldr r1, _0800712C @ =0x000011F0
adds r0, r7, r1
str r2, [r0, #0x00]
_08007058:
ldr r1, _08007130 @ =0x00001208
adds r0, r7, r1
ldrh r1, [r0, #0x00]
strh r2, [r0, #0x00]
ldrh r1, [r0, #0x00]
ldr r2, _08007134 @ =0x00001206
adds r0, r7, r2
ldrh r2, [r0, #0x00]
strh r1, [r0, #0x00]
pop {r3}
mov r8, r3
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_08007074: .4byte 0x0203EBF8
_08007078: .4byte 0x81000C00
_0800707C: .4byte 0x080AE03C
_08007080: .4byte 0x0807CD48
_08007084: .4byte 0x080AF2C0
_08007088: .4byte 0x0807D1E8
_0800708C: .4byte 0x02008400
_08007090: .4byte 0x06008000
_08007094: .4byte 0x80000600
_08007098: .4byte 0x080AE180
_0800709C: .4byte 0x080AE7C8
_080070A0: .4byte 0x0600C000
_080070A4: .4byte 0x0200C400
_080070A8: .4byte 0x80001000
_080070AC: .4byte 0x080AF320
_080070B0: .4byte 0x02010400
_080070B4: .4byte 0x080C2FA8
_080070B8: .4byte 0x06010000
_080070BC: .4byte 0x80001200
_080070C0: .4byte 0x080AFE60
_080070C4: .4byte 0x02015C00
_080070C8: .4byte 0x06015800
_080070CC: .4byte 0x80000500
_080070D0: .4byte 0x080B042C
_080070D4: .4byte 0x06016C00
_080070D8: .4byte 0x80000100
_080070DC: .4byte 0x080B05BC
_080070E0: .4byte 0x06017000
_080070E4: .4byte 0x80000110
_080070E8: .4byte 0x080AEE04
_080070EC: .4byte 0x06002000
_080070F0: .4byte 0x80000400
_080070F4: .4byte 0x0807DA94
_080070F8: .4byte 0x0807DB98
_080070FC: .4byte 0x000011FE
_08007100: .4byte 0x00001204
_08007104: .4byte 0x0000020B
_08007108: .4byte 0x0000120A
_0800710C: .4byte 0x0000448E
_08007110: .4byte 0x000011FC
_08007114: .4byte 0x00001741
_08007118: .4byte 0x000011F8
_0800711C: .4byte 0x00001216
_08007120: .4byte 0x0000121A
_08007124: .4byte 0x000011E8
_08007128: .4byte 0x000011EC
_0800712C: .4byte 0x000011F0
_08007130: .4byte 0x00001208
_08007134: .4byte 0x00001206
thumb_func_start sub_8007138
sub_8007138:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x094
adds r7, r0, #0x0
str r1, [sp, #0x06C]
str r2, [sp, #0x070]
ldr r0, _08007354 @ =0x000004EC
adds r0, r0, r7
mov r8, r0
movs r1, #0x00
str r1, [sp, #0x074]
movs r2, #0x00
movs r3, #0x00
str r3, [sp, #0x078]
movs r4, #0xDA
lsls r4, r4, #0x03
adds r0, r7, r4
str r2, [r0, #0x00]
ldr r6, _08007358 @ =0x000006D4
adds r1, r7, r6
movs r0, #0x48
strh r0, [r1, #0x00]
ldr r0, _0800735C @ =0x000006D6
adds r1, r7, r0
movs r0, #0x53
strh r0, [r1, #0x00]
movs r1, #0xDB
lsls r1, r1, #0x03
adds r0, r7, r1
str r2, [r0, #0x00]
ldr r3, _08007360 @ =0x000006DC
adds r1, r7, r3
movs r0, #0x01
negs r0, r0
str r0, [r1, #0x00]
adds r4, #0x10
adds r0, r7, r4
str r2, [r0, #0x00]
adds r6, #0x10
adds r0, r7, r6
str r2, [r0, #0x00]
movs r1, #0xDD
lsls r1, r1, #0x03
adds r0, r7, r1
str r2, [r0, #0x00]
adds r3, #0x10
adds r0, r7, r3
str r2, [r0, #0x00]
adds r4, #0x10
adds r0, r7, r4
str r2, [r0, #0x00]
adds r6, #0x10
adds r0, r7, r6
str r2, [r0, #0x00]
adds r1, #0x10
adds r0, r7, r1
movs r1, #0x02
str r1, [r0, #0x00]
adds r3, #0x10
adds r0, r7, r3
str r2, [r0, #0x00]
adds r4, #0x10
adds r0, r7, r4
str r2, [r0, #0x00]
adds r6, #0x10
adds r0, r7, r6
str r2, [r0, #0x00]
adds r3, #0x0C
adds r0, r7, r3
str r1, [r0, #0x00]
adds r4, #0x0C
adds r0, r7, r4
str r2, [r0, #0x00]
adds r6, #0x0C
adds r0, r7, r6
strh r2, [r0, #0x00]
ldr r1, _08007364 @ =0x00000712
adds r0, r7, r1
strh r2, [r0, #0x00]
adds r3, #0x0C
adds r0, r7, r3
str r2, [r0, #0x00]
adds r4, #0x0C
adds r0, r7, r4
str r2, [r0, #0x00]
adds r6, #0x0C
adds r0, r7, r6
str r2, [r0, #0x00]
movs r0, #0xE4
lsls r0, r0, #0x03
adds r1, r7, r0
movs r0, #0x80
lsls r0, r0, #0x01
str r0, [r1, #0x00]
ldr r1, _08007368 @ =0x00000724
adds r0, r7, r1
str r2, [r0, #0x00]
adds r3, #0x14
adds r0, r7, r3
str r2, [r0, #0x00]
adds r4, #0x14
adds r0, r7, r4
str r2, [r0, #0x00]
adds r6, #0x14
adds r1, r7, r6
movs r0, #0x03
str r0, [r1, #0x00]
ldr r1, _0800736C @ =0x00000734
adds r0, r7, r1
str r2, [r0, #0x00]
movs r1, #0xC0
lsls r1, r1, #0x13
movs r0, #0x00
bl map_setBufferDestination
ldr r1, _08007370 @ =0x06001000
movs r0, #0x01
bl map_setBufferDestination
adds r0, r7, #0x0
ldr r1, [sp, #0x06C]
bl sub_8006E08
adds r0, r7, #0x0
bl spm_loadOtherGfx
movs r0, #0x0F
str r0, [sp, #0x000]
adds r0, r7, #0x0
movs r1, #0x00
movs r2, #0x00
movs r3, #0x01
bl renderCharacterSprites
movs r1, #0x00
ldr r2, _08007374 @ =0x000004FC
adds r2, r7, r2
str r2, [sp, #0x080]
movs r5, #0x03
movs r3, #0xA1
lsls r3, r3, #0x03
adds r0, r7, r3
_0800725A:
str r1, [r0, #0x00]
subs r0, #0x04
subs r5, #0x01
cmp r5, #0x00
bge _0800725A
movs r5, #0x00
mov r4, r8
_08007268:
adds r0, r7, #0x0
adds r1, r5, #0x0
bl sub_8002CE0
stm r4!, {r0}
adds r5, #0x01
cmp r5, #0x03
ble _08007268
movs r0, #0x01
negs r0, r0
str r0, [r7, #0x18]
ldr r2, _08007378 @ =0x080D9130
ldr r0, [r7, #0x0C]
lsls r0, r0, #0x02
add r0, r8
ldr r1, [r0, #0x00]
lsls r0, r1, #0x02
adds r0, r0, r1
lsls r0, r0, #0x02
adds r0, r0, r2
ldrb r0, [r0, #0x10]
lsls r0, r0, #0x18
asrs r0, r0, #0x18
ldr r1, _0800737C @ =0x080D93D0
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r0, [r0, #0x00]
ldr r1, _08007380 @ =0x02014000
bl LZ77UnCompWram
ldr r4, _08007384 @ =0x00000D88
adds r2, r7, r4
ldr r3, _08007388 @ =0x080D9230
movs r0, #0x80
movs r1, #0x18
bl sub_8003FD0
movs r0, #0x00
bl sub_8043830
thumb_func_start sub_80072B8
sub_80072B8:
bl oam_update
bl main_frameProc
ldr r6, _0800738C @ =0x000011F4
adds r1, r7, r6
ldr r0, [r1, #0x00]
adds r0, #0x01
str r0, [r1, #0x00]
ldr r0, [r7, #0x4C]
adds r0, #0x01
str r0, [r7, #0x4C]
bl sub_8043840
movs r1, #0x92
lsls r1, r1, #0x02
add r1, r8
movs r0, #0x00
str r0, [r1, #0x00]
ldr r0, [r7, #0x08]
cmp r0, #0x00
blt _08007300
ldr r3, _08007390 @ =0x03004EA0
add r2, sp, #0x008
ldr r1, _08007394 @ =0x03004F48
adds r5, r0, #0x1
_080072EC:
ldrh r0, [r1, #0x00]
strh r0, [r2, #0x00]
ldrh r0, [r3, #0x00]
strh r0, [r2, #0x08]
adds r3, #0x02
adds r2, #0x02
adds r1, #0x02
subs r5, #0x01
cmp r5, #0x00
bne _080072EC
_08007300:
movs r5, #0x00
ldr r0, _08007398 @ =0x00000D84
adds r4, r7, r0
ldr r2, [sp, #0x080]
_08007308:
ldr r1, [r2, #0x00]
cmp r1, #0x00
blt _080073CC
cmp r1, #0x01
ble _0800731A
cmp r1, #0x0C
bgt _080073CC
cmp r1, #0x08
blt _080073CC
_0800731A:
movs r3, #0x01
ldr r6, [sp, #0x06C]
cmp r6, #0x00
beq _0800732E
ldr r0, [r4, #0x00]
cmp r0, #0x00
bne _0800732E
cmp r1, #0x07
bgt _0800732E
movs r3, #0x02
_0800732E:
ldr r0, [r2, #0x00]
cmp r0, #0x0A
beq _08007338
cmp r0, #0x0C
bne _0800733A
_08007338:
movs r3, #0x02
_0800733A:
add r0, sp, #0x010
lsls r1, r5, #0x01
adds r0, r0, r1
ldrh r0, [r0, #0x00]
ands r3, r0
cmp r3, #0x00
beq _080073CC
ldr r0, [r2, #0x00]
cmp r0, #0x07
bgt _0800739C
movs r0, #0x02
str r0, [sp, #0x078]
b _080073B0
_08007354: .4byte 0x000004EC
_08007358: .4byte 0x000006D4
_0800735C: .4byte 0x000006D6
_08007360: .4byte 0x000006DC
_08007364: .4byte 0x00000712
_08007368: .4byte 0x00000724
_0800736C: .4byte 0x00000734
_08007370: .4byte 0x06001000
_08007374: .4byte 0x000004FC
_08007378: .4byte 0x080D9130
_0800737C: .4byte 0x080D93D0
_08007380: .4byte 0x02014000
_08007384: .4byte 0x00000D88
_08007388: .4byte 0x080D9230
_0800738C: .4byte 0x000011F4
_08007390: .4byte 0x03004EA0
_08007394: .4byte 0x03004F48
_08007398: .4byte 0x00000D84
_0800739C:
cmp r0, #0x09
ble _080073A4
cmp r0, #0x0B
bne _080073AA
_080073A4:
movs r1, #0x64
str r1, [sp, #0x078]
b _080073B0
_080073AA:
movs r2, #0x01
negs r2, r2
str r2, [sp, #0x078]
_080073B0:
movs r2, #0x00
ldr r3, [r7, #0x08]
cmp r3, #0x00
blt _080073C6
movs r3, #0x0D
ldr r1, [sp, #0x080]
_080073BC:
stm r1!, {r3}
adds r2, #0x01
ldr r0, [r7, #0x08]
cmp r2, r0
ble _080073BC
_080073C6:
movs r3, #0x00
str r3, [sp, #0x074]
b _080073D4
_080073CC:
adds r2, #0x04
adds r5, #0x01
cmp r5, #0x00
ble _08007308
_080073D4:
ldr r0, [r7, #0x50]
cmp r0, #0x00
beq _080073F8
movs r0, #0x00
str r0, [r7, #0x50]
movs r4, #0x02
str r4, [sp, #0x078]
movs r2, #0x00
ldr r3, [r7, #0x08]
cmp r2, r3
bgt _080073F8
movs r3, #0x0E
ldr r1, [sp, #0x080]
_080073EE:
stm r1!, {r3}
adds r2, #0x01
ldr r0, [r7, #0x08]
cmp r2, r0
ble _080073EE
_080073F8:
ldr r1, [r7, #0x0C]
lsls r0, r1, #0x02
ldr r6, [sp, #0x080]
adds r0, r6, r0
ldr r0, [r0, #0x00]
adds r2, r1, #0x0
cmp r0, #0x0F
bls _0800740C
bl _080084AE
_0800740C:
lsls r0, r0, #0x02
ldr r1, _08007418 @ =0x0800741C
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
.byte 0x00, 0x00
_08007418: .4byte 0x0800741C
.byte 0x5C, 0x74, 0x00, 0x08, 0x80, 0x74, 0x00, 0x08, 0xD4, 0x75, 0x00, 0x08, 0x7A, 0x78, 0x00, 0x08
.byte 0xE6, 0x7B, 0x00, 0x08, 0x06, 0x7D, 0x00, 0x08, 0x28, 0x7E, 0x00, 0x08, 0xA8, 0x7F, 0x00, 0x08
.byte 0x6C, 0x80, 0x00, 0x08, 0x10, 0x81, 0x00, 0x08, 0x38, 0x81, 0x00, 0x08, 0x94, 0x81, 0x00, 0x08
.byte 0x94, 0x81, 0x00, 0x08, 0x86, 0x83, 0x00, 0x08, 0xA0, 0x83, 0x00, 0x08, 0x84, 0x84, 0x00, 0x08
.byte 0x38, 0x1C, 0xFF, 0xF7, 0x7F, 0xFC, 0x00, 0x25, 0xB8, 0x68, 0x85, 0x42, 0x01, 0xDD, 0x01, 0xF0
.byte 0x20, 0xF8, 0x01, 0x22, 0x20, 0x99, 0x04, 0xC1, 0x01, 0x35, 0xB8, 0x68, 0x85, 0x42, 0xFA, 0xDD
.byte 0x01, 0xF0, 0x17, 0xF8, 0x1D, 0x98, 0x01, 0x30, 0x1D, 0x90, 0x10, 0x28, 0x00, 0xDD, 0x7F, 0xE0
.byte 0x39, 0x49, 0x80, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D
.byte 0x80, 0x00, 0x40, 0x18, 0x04, 0x68, 0x8A, 0x21, 0x41, 0x44, 0x8C, 0x46, 0x88, 0x22, 0x42, 0x44
.byte 0x92, 0x46, 0x1D, 0x9B, 0x9B, 0x00, 0x21, 0x93, 0x80, 0x26, 0x76, 0x00, 0xB1, 0x46, 0x2F, 0x48
.byte 0x42, 0x46, 0x24, 0x32, 0x2E, 0x4B, 0x06, 0x1C, 0x0C, 0x36, 0x08, 0x25, 0x48, 0x46, 0xD0, 0x80
.byte 0x90, 0x80, 0x00, 0x20, 0x31, 0x5E, 0x24, 0x91, 0x00, 0x20, 0x19, 0x5E, 0x24, 0x98, 0x41, 0x1A
.byte 0x24, 0x91, 0x08, 0x1C, 0x60, 0x43, 0xC0, 0x13, 0x19, 0x88, 0x40, 0x18, 0x10, 0x80, 0x02, 0x21
.byte 0x70, 0x5E, 0x24, 0x90, 0x02, 0x21, 0x58, 0x5E, 0x24, 0x99, 0x08, 0x1A, 0x24, 0x90, 0x01, 0x1C
.byte 0x08, 0x1C, 0x60, 0x43, 0xC0, 0x13, 0x59, 0x88, 0x40, 0x18, 0x50, 0x80, 0x18, 0x32, 0x04, 0x33
.byte 0x14, 0x36, 0x01, 0x3D, 0x00, 0x2D, 0xD9, 0xDA, 0xE0, 0x00, 0x00, 0x1B, 0x00, 0x02, 0x40, 0x42
.byte 0xC0, 0x13, 0x80, 0x22, 0x12, 0x01, 0x80, 0x18, 0x63, 0x46, 0x18, 0x80, 0x54, 0x46, 0x20, 0x80
.byte 0x1B, 0x9E, 0x00, 0x2E, 0x10, 0xD0, 0x13, 0x48, 0x39, 0x18, 0x08, 0x88, 0xFF, 0x20, 0x08, 0x80
.byte 0x1D, 0x99, 0x08, 0x01, 0x40, 0x42, 0x00, 0x28, 0x00, 0xDA, 0x0F, 0x30, 0x00, 0x11, 0x10, 0x30
.byte 0x0D, 0x4A, 0xB9, 0x18, 0x0A, 0x88, 0x08, 0x80, 0x0C, 0x4B, 0xF9, 0x18, 0x21, 0x9C, 0x1D, 0x9E
.byte 0xA0, 0x19, 0x40, 0x01, 0x40, 0x42, 0x00, 0x28, 0x00, 0xDA, 0x0F, 0x30, 0x00, 0x11, 0xB4, 0x22
.byte 0x52, 0x00, 0x80, 0x18, 0x00, 0xF0, 0xE3, 0xFE, 0x5C, 0x64, 0x0E, 0x08, 0x30, 0x91, 0x0D, 0x08
.byte 0xE8, 0x91, 0x0D, 0x08, 0x16, 0x12, 0x00, 0x00, 0x1A, 0x12, 0x00, 0x00, 0xE8, 0x11, 0x00, 0x00
.byte 0x0D, 0x4E, 0xB9, 0x19, 0x08, 0x88, 0x0D, 0x48, 0x08, 0x80, 0x0D, 0x48, 0x39, 0x18, 0x08, 0x88
.byte 0x0C, 0x48, 0x08, 0x80, 0x00, 0x21, 0x1D, 0x91, 0x00, 0x25, 0xB8, 0x68, 0x85, 0x42, 0x01, 0xDD
.byte 0x00, 0xF0, 0x7F, 0xFF, 0x02, 0x22, 0x20, 0x99, 0x04, 0xC1, 0x01, 0x35, 0xB8, 0x68, 0x85, 0x42
.byte 0xFA, 0xDD, 0x00, 0xF0, 0x76, 0xFF, 0x00, 0x00, 0x16, 0x12, 0x00, 0x00, 0x41, 0x02, 0x00, 0x00
.byte 0x18, 0x12, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x18, 0x4C, 0x01, 0x20, 0x27, 0xF0, 0x2A, 0xF8
.byte 0x01, 0x1C, 0x60, 0x31, 0x20, 0x1C, 0x08, 0x22, 0x59, 0xF0, 0xB2, 0xFE, 0x01, 0x20, 0x27, 0xF0
.byte 0x3D, 0xF8, 0xB8, 0x68, 0x6A, 0x46, 0x28, 0x32, 0x1F, 0x92, 0x00, 0x28, 0x07, 0xDB, 0x42, 0x46
.byte 0x06, 0xA9, 0x45, 0x1C, 0x01, 0xCA, 0x01, 0xC1, 0x01, 0x3D, 0x00, 0x2D, 0xFA, 0xD1, 0x00, 0x25
.byte 0xBB, 0x68, 0x9D, 0x42, 0x3F, 0xDC, 0x0A, 0x4E, 0x01, 0x24, 0x64, 0x42, 0x41, 0x46, 0x02, 0xAA
.byte 0xA8, 0x00, 0x20, 0x9B, 0x18, 0x18, 0x00, 0x68, 0x02, 0x28, 0x2E, 0xD1, 0x10, 0x88, 0x20, 0x28
.byte 0x1B, 0xD0, 0x20, 0x28, 0x06, 0xDC, 0x10, 0x28, 0x1E, 0xD0, 0x26, 0xE0, 0x40, 0xFE, 0x0A, 0x08
.byte 0x74, 0x92, 0x0D, 0x08, 0x40, 0x28, 0x02, 0xD0, 0x80, 0x28, 0x07, 0xD0, 0x1D, 0xE0, 0x08, 0x68
.byte 0xC0, 0x00, 0x80, 0x19, 0x00, 0x79, 0x00, 0x06, 0x00, 0x16, 0x13, 0xE0, 0x08, 0x68, 0xC0, 0x00
.byte 0x80, 0x19, 0x40, 0x79, 0x00, 0x06, 0x00, 0x16, 0x0C, 0xE0, 0x08, 0x68, 0xC0, 0x00, 0x80, 0x19
.byte 0x80, 0x79, 0x00, 0x06, 0x00, 0x16, 0x05, 0xE0, 0x08, 0x68, 0xC0, 0x00, 0x80, 0x19, 0xC0, 0x79
.byte 0x00, 0x06, 0x00, 0x16, 0xA0, 0x42, 0x00, 0xD0, 0x08, 0x60, 0x04, 0x31, 0x02, 0x32, 0x01, 0x35
.byte 0xBB, 0x68, 0x9D, 0x42, 0xC4, 0xDD, 0x1F, 0x99, 0x00, 0x22, 0x08, 0x1C, 0x20, 0x30, 0x02, 0x60
.byte 0x04, 0x38, 0x88, 0x42, 0xFB, 0xDA, 0x00, 0x2B, 0x10, 0xDB, 0x1F, 0x9C, 0x01, 0x26, 0x42, 0x46
.byte 0x20, 0x99, 0x5D, 0x1C, 0x08, 0x68, 0x02, 0x28, 0x03, 0xDD, 0x10, 0x68, 0x80, 0x00, 0x20, 0x18
.byte 0x06, 0x60, 0x04, 0x32, 0x04, 0x31, 0x01, 0x3D, 0x00, 0x2D, 0xF3, 0xD1, 0x00, 0x20, 0x1F, 0x9C
.byte 0x20, 0x61, 0x00, 0x25, 0x9D, 0x42, 0x30, 0xDC, 0x32, 0x4E, 0xB1, 0x46, 0x44, 0x46, 0x02, 0x26
.byte 0x06, 0xA8, 0xA9, 0x00, 0x40, 0x18, 0x01, 0x68, 0x20, 0x68, 0x81, 0x42, 0x20, 0xD0, 0x8D, 0x20
.byte 0x58, 0xF0, 0x18, 0xFC, 0xF8, 0x68, 0x85, 0x42, 0x1A, 0xD1, 0x21, 0x68, 0x88, 0x00, 0x40, 0x18
.byte 0x80, 0x00, 0x48, 0x44, 0x10, 0x21, 0x41, 0x56, 0x83, 0x20, 0x80, 0x00, 0x40, 0x44, 0x06, 0x60
.byte 0x87, 0x20, 0x80, 0x00, 0x40, 0x44, 0x06, 0x60, 0x23, 0x48, 0x89, 0x00, 0x09, 0x18, 0x08, 0x68
.byte 0x22, 0x49, 0x59, 0xF0, 0x21, 0xFE, 0x92, 0x21, 0x89, 0x00, 0x41, 0x44, 0x01, 0x20, 0x08, 0x60
.byte 0x04, 0x34, 0x01, 0x35, 0xBB, 0x68, 0x9D, 0x42, 0xD2, 0xDD, 0x00, 0x25, 0x9D, 0x42, 0x01, 0xDD
.byte 0x00, 0xF0, 0xB7, 0xFE, 0x00, 0x22, 0x20, 0x9E, 0x04, 0xA8, 0x69, 0x00, 0x40, 0x18, 0x01, 0x88
.byte 0x09, 0x24, 0x0C, 0x40, 0x00, 0x2C, 0x2D, 0xD0, 0x30, 0x68, 0x02, 0x28, 0x01, 0xD0, 0x00, 0xF0
.byte 0xA8, 0xFE, 0x40, 0x46, 0x81, 0x18, 0x0A, 0x68, 0x93, 0x00, 0x1F, 0x9C, 0xE0, 0x18, 0x00, 0x68
.byte 0x00, 0x28, 0x01, 0xD0, 0x00, 0xF0, 0x84, 0xFE, 0x04, 0x2A, 0x00, 0xD1, 0x54, 0xE1, 0x98, 0x18
.byte 0x80, 0x00, 0xF8, 0x30, 0x43, 0x46, 0x1A, 0x18, 0x01, 0x23, 0x53, 0x70, 0x53, 0x80, 0xF8, 0x68
.byte 0xA8, 0x42, 0x00, 0xD0, 0xD3, 0x80, 0xF8, 0x68, 0x85, 0x42, 0x00, 0xD0, 0x3A, 0xE1, 0x04, 0x48
.byte 0x39, 0xE1, 0x00, 0x00, 0x30, 0x91, 0x0D, 0x08, 0xD0, 0x93, 0x0D, 0x08, 0x00, 0x40, 0x01, 0x02
.byte 0xC4, 0x92, 0x0D, 0x08, 0x02, 0x20, 0x82, 0x46, 0x02, 0x20, 0x81, 0x46, 0x08, 0x40, 0x00, 0x28
.byte 0x42, 0xD0, 0x30, 0x68, 0x02, 0x28, 0x03, 0xD0, 0x03, 0x28, 0x31, 0xD0, 0x00, 0xF0, 0x71, 0xFE
.byte 0x00, 0x2D, 0x01, 0xD0, 0x00, 0xF0, 0x6D, 0xFE, 0x1C, 0x99, 0x00, 0x29, 0x01, 0xD1, 0x00, 0xF0
.byte 0x4F, 0xFE, 0x90, 0x20, 0x58, 0xF0, 0x9E, 0xFB, 0x87, 0x20, 0x80, 0x00, 0x40, 0x44, 0x05, 0x21
.byte 0x01, 0x60, 0x83, 0x20, 0x80, 0x00, 0x40, 0x44, 0x01, 0x60, 0x11, 0x21, 0x0B, 0x4A, 0xA8, 0x18
.byte 0x38, 0x18, 0x01, 0x70, 0x18, 0x30, 0x01, 0x35, 0x0F, 0x2D, 0xFA, 0xD9, 0x00, 0x22, 0xB8, 0x68
.byte 0x82, 0x42, 0x01, 0xDD, 0x00, 0xF0, 0xBD, 0xFC, 0x0A, 0x23, 0x20, 0x99, 0x08, 0xC1, 0x01, 0x32
.byte 0xB8, 0x68, 0x82, 0x42, 0xFA, 0xDD, 0x00, 0xF0, 0xB4, 0xFC, 0x00, 0x00, 0x96, 0x0D, 0x00, 0x00
.byte 0x90, 0x20, 0x22, 0x92, 0x58, 0xF0, 0x76, 0xFB, 0x22, 0x9A, 0x41, 0x46, 0x88, 0x18, 0x01, 0x68
.byte 0x04, 0x29, 0x00, 0xD0, 0x40, 0xE1, 0x4A, 0xE1, 0x80, 0x24, 0x64, 0x00, 0x20, 0x1C, 0x08, 0x40
.byte 0x00, 0x28, 0x00, 0xD0, 0x51, 0xE1, 0x04, 0x20, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD0, 0x63, 0xE1
.byte 0x80, 0x24, 0xA4, 0x00, 0x20, 0x1C, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD0, 0x80, 0xE1, 0x04, 0x32
.byte 0x04, 0x36, 0x01, 0x35, 0x9D, 0x42, 0x00, 0xDC, 0x66, 0xE7, 0x00, 0xF0, 0x1A, 0xFE, 0xBB, 0x68
.byte 0x6E, 0x46, 0x28, 0x36, 0x1F, 0x96, 0x00, 0x2B, 0x07, 0xDB, 0x42, 0x46, 0x06, 0xA9, 0x5D, 0x1C
.byte 0x01, 0xCA, 0x01, 0xC1, 0x01, 0x3D, 0x00, 0x2D, 0xFA, 0xD1, 0x00, 0x25, 0x9D, 0x42, 0x3E, 0xDC
.byte 0x09, 0x4E, 0x01, 0x24, 0x64, 0x42, 0x41, 0x46, 0x02, 0xAA, 0xA8, 0x00, 0x20, 0x9B, 0x18, 0x18
.byte 0x00, 0x68, 0x02, 0x28, 0x2D, 0xD1, 0x10, 0x88, 0x20, 0x28, 0x1A, 0xD0, 0x20, 0x28, 0x05, 0xDC
.byte 0x10, 0x28, 0x1D, 0xD0, 0x25, 0xE0, 0x00, 0x00, 0x74, 0x92, 0x0D, 0x08, 0x40, 0x28, 0x02, 0xD0
.byte 0x80, 0x28, 0x07, 0xD0, 0x1D, 0xE0, 0x08, 0x68, 0xC0, 0x00, 0x80, 0x19, 0x00, 0x79, 0x00, 0x06
.byte 0x00, 0x16, 0x13, 0xE0, 0x08, 0x68, 0xC0, 0x00, 0x80, 0x19, 0x40, 0x79, 0x00, 0x06, 0x00, 0x16
.byte 0x0C, 0xE0, 0x08, 0x68, 0xC0, 0x00, 0x80, 0x19, 0x80, 0x79, 0x00, 0x06, 0x00, 0x16, 0x05, 0xE0
.byte 0x08, 0x68, 0xC0, 0x00, 0x80, 0x19, 0xC0, 0x79, 0x00, 0x06, 0x00, 0x16, 0xA0, 0x42, 0x00, 0xD0
.byte 0x08, 0x60, 0x04, 0x31, 0x02, 0x32, 0x01, 0x35, 0xBB, 0x68, 0x9D, 0x42, 0xC5, 0xDD, 0x1F, 0x99
.byte 0x00, 0x22, 0x08, 0x1C, 0x20, 0x30, 0x02, 0x60, 0x04, 0x38, 0x88, 0x42, 0xFB, 0xDA, 0x00, 0x2B
.byte 0x10, 0xDB, 0x1F, 0x9C, 0x01, 0x26, 0x42, 0x46, 0x20, 0x99, 0x5D, 0x1C, 0x08, 0x68, 0x02, 0x28
.byte 0x03, 0xDD, 0x10, 0x68, 0x80, 0x00, 0x20, 0x18, 0x06, 0x60, 0x04, 0x32, 0x04, 0x31, 0x01, 0x3D
.byte 0x00, 0x2D, 0xF3, 0xD1, 0x00, 0x20, 0x1F, 0x9C, 0x20, 0x61, 0x00, 0x25, 0xB8, 0x68, 0x85, 0x42
.byte 0x0E, 0xDC, 0x46, 0x46, 0x06, 0xAC, 0x21, 0x68, 0x30, 0x68, 0x81, 0x42, 0x02, 0xD0, 0x8D, 0x20
.byte 0x58, 0xF0, 0xD8, 0xFA, 0x04, 0x36, 0x04, 0x34, 0x01, 0x35, 0xB8, 0x68, 0x85, 0x42, 0xF2, 0xDD
.byte 0x26, 0xF0, 0x84, 0xF9, 0x00, 0x28, 0x0C, 0xD0, 0xF8, 0x6C, 0x2F, 0x21, 0x08, 0x40, 0x0F, 0x28
.byte 0x07, 0xDC, 0x1D, 0x48, 0x1D, 0x49, 0x00, 0x22, 0x00, 0x92, 0x01, 0x92, 0x00, 0x23, 0x28, 0xF0
.byte 0x3F, 0xF8, 0x00, 0x25, 0xBB, 0x68, 0x9D, 0x42, 0x00, 0xDD, 0xFF, 0xE0, 0x00, 0x22, 0x20, 0x9E
.byte 0x04, 0xA8, 0x69, 0x00, 0x40, 0x18, 0x01, 0x88, 0x09, 0x24, 0x0C, 0x40, 0x00, 0x2C, 0x3E, 0xD0
.byte 0x30, 0x68, 0x02, 0x28, 0x01, 0xD0, 0x00, 0xF0, 0x74, 0xFD, 0x40, 0x46, 0x81, 0x18, 0x0A, 0x68
.byte 0x93, 0x00, 0x1F, 0x9C, 0xE0, 0x18, 0x00, 0x68, 0x00, 0x28, 0x01, 0xD0, 0x00, 0xF0, 0x50, 0xFD
.byte 0x04, 0x2A, 0x21, 0xD0, 0x98, 0x18, 0x80, 0x00, 0xF8, 0x30, 0x43, 0x46, 0x1A, 0x18, 0x01, 0x23
.byte 0x53, 0x70, 0x53, 0x80, 0xF8, 0x68, 0xA8, 0x42, 0x00, 0xD0, 0xD3, 0x80, 0xF8, 0x68, 0x85, 0x42
.byte 0x08, 0xD1, 0x03, 0x48, 0x07, 0xE0, 0x00, 0x00, 0x3C, 0x86, 0x0C, 0x08, 0xE4, 0x91, 0x0D, 0x08
.byte 0xC4, 0x92, 0x0D, 0x08, 0x03, 0x48, 0x09, 0x68, 0x49, 0x00, 0x09, 0x18, 0x08, 0x88, 0x58, 0xF0
.byte 0x81, 0xFA, 0x08, 0xE0, 0xD6, 0x92, 0x0D, 0x08, 0x41, 0x46, 0x8E, 0x31, 0x03, 0x20, 0x08, 0x70
.byte 0x8E, 0x20, 0x58, 0xF0, 0x77, 0xFA, 0x03, 0x20, 0x30, 0x60, 0x00, 0xF0, 0x3A, 0xFD, 0x02, 0x20
.byte 0x82, 0x46, 0x02, 0x20, 0x81, 0x46, 0x08, 0x40, 0x00, 0x28, 0x50, 0xD0, 0x30, 0x68, 0x02, 0x28
.byte 0x03, 0xD0, 0x03, 0x28, 0x2E, 0xD0, 0x00, 0xF0, 0x2C, 0xFD, 0x00, 0x2D, 0x01, 0xD0, 0x00, 0xF0
.byte 0x28, 0xFD, 0x1C, 0x99, 0x00, 0x29, 0x01, 0xD1, 0x00, 0xF0, 0x0A, 0xFD, 0x90, 0x20, 0x58, 0xF0
.byte 0x59, 0xFA, 0x87, 0x20, 0x80, 0x00, 0x40, 0x44, 0x05, 0x21, 0x01, 0x60, 0x83, 0x20, 0x80, 0x00
.byte 0x40, 0x44, 0x01, 0x60, 0x11, 0x21, 0x0A, 0x4A, 0xA8, 0x18, 0x38, 0x18, 0x01, 0x70, 0x18, 0x30
.byte 0x01, 0x35, 0x0F, 0x2D, 0xFA, 0xD9, 0x00, 0x22, 0xB8, 0x68, 0x82, 0x42, 0x00, 0xDD, 0x78, 0xE3
.byte 0x0A, 0x23, 0x20, 0x99, 0x08, 0xC1, 0x01, 0x32, 0xB8, 0x68, 0x82, 0x42, 0xFA, 0xDD, 0x70, 0xE3
.byte 0x96, 0x0D, 0x00, 0x00, 0x90, 0x20, 0x22, 0x92, 0x58, 0xF0, 0x34, 0xFA, 0x22, 0x9A, 0x41, 0x46
.byte 0x88, 0x18, 0x01, 0x68, 0x04, 0x29, 0x0A, 0xD0, 0x88, 0x00, 0x40, 0x18, 0x80, 0x00, 0xF8, 0x30
.byte 0x40, 0x44, 0x01, 0x21, 0x41, 0x70, 0x4A, 0x46, 0x42, 0x80, 0xC4, 0x80, 0x03, 0xE0, 0x40, 0x46
.byte 0x8E, 0x30, 0x53, 0x46, 0x03, 0x70, 0x02, 0x20, 0x30, 0x60, 0x00, 0xF0, 0xE2, 0xFC, 0x80, 0x24
.byte 0x64, 0x00, 0x20, 0x1C, 0x08, 0x40, 0x00, 0x28, 0x12, 0xD0, 0xF8, 0x68, 0x85, 0x42, 0x01, 0xD0
.byte 0x00, 0xF0, 0xD7, 0xFC, 0x83, 0x21, 0x89, 0x00, 0x41, 0x44, 0x08, 0x68, 0x01, 0x28, 0x03, 0xD0
.byte 0x0C, 0x28, 0x01, 0xD0, 0x00, 0xF0, 0xCD, 0xFC, 0x0A, 0x20, 0x08, 0x60, 0x00, 0xF0, 0xC9, 0xFC
.byte 0x04, 0x20, 0x08, 0x40, 0x00, 0x28, 0x1D, 0xD0, 0xF8, 0x68, 0x85, 0x42, 0x01, 0xD0, 0x00, 0xF0
.byte 0xC0, 0xFC, 0x83, 0x20, 0x80, 0x00, 0x40, 0x44, 0x00, 0x68, 0x01, 0x28, 0x01, 0xD0, 0x00, 0xF0
.byte 0xB8, 0xFC, 0x46, 0x46, 0xB0, 0x18, 0x01, 0x68, 0x04, 0x29, 0x01, 0xD1, 0x00, 0xF0, 0xB1, 0xFC
.byte 0x03, 0x48, 0x49, 0x00, 0x09, 0x18, 0x08, 0x88, 0x58, 0xF0, 0xE4, 0xF9, 0x00, 0xF0, 0xA9, 0xFC
.byte 0xE8, 0x92, 0x0D, 0x08, 0x80, 0x24, 0xA4, 0x00, 0x20, 0x1C, 0x08, 0x40, 0x00, 0x28, 0x17, 0xD0
.byte 0xF8, 0x68, 0x85, 0x42, 0x01, 0xD0, 0x00, 0xF0, 0x9C, 0xFC, 0x83, 0x20, 0x80, 0x00, 0x40, 0x44
.byte 0x02, 0x68, 0x01, 0x2A, 0x01, 0xD0, 0x00, 0xF0, 0x94, 0xFC, 0x8C, 0x21, 0x89, 0x00, 0x41, 0x44
.byte 0x08, 0x68, 0x00, 0x28, 0x01, 0xD0, 0x00, 0xF0, 0x8C, 0xFC, 0x0A, 0x60, 0x00, 0xF0, 0x89, 0xFC
.byte 0x04, 0x32, 0x04, 0x36, 0x01, 0x35, 0x9D, 0x42, 0x00, 0xDC, 0x01, 0xE7, 0x00, 0x22, 0x00, 0x2B
.byte 0x09, 0xDB, 0x20, 0x99, 0x5D, 0x1C, 0x08, 0x68, 0x03, 0x28, 0x00, 0xD0, 0x01, 0x32, 0x04, 0x31
.byte 0x01, 0x3D, 0x00, 0x2D, 0xF7, 0xD1, 0x00, 0x2A, 0x01, 0xD0, 0x00, 0xF0, 0x72, 0xFC, 0x00, 0x25
.byte 0x9D, 0x42, 0x06, 0xDC, 0x04, 0x22, 0x20, 0x99, 0x04, 0xC1, 0x01, 0x35, 0xB8, 0x68, 0x85, 0x42
.byte 0xFA, 0xDD, 0x00, 0x26, 0x1D, 0x96, 0x00, 0xF0, 0x64, 0xFC, 0xF8, 0x6C, 0x2F, 0x21, 0x08, 0x40
.byte 0x0F, 0x28, 0x1D, 0xDC, 0x26, 0xF0, 0x4A, 0xF8, 0x00, 0x28, 0x11, 0xD0, 0x26, 0xF0, 0x5C, 0xF8
.byte 0x00, 0x28, 0x0D, 0xD0, 0x04, 0x48, 0x05, 0x49, 0x00, 0x22, 0x00, 0x92, 0x01, 0x92, 0x00, 0x23
.byte 0x27, 0xF0, 0x06, 0xFF, 0x0C, 0xE0, 0x00, 0x00, 0x3C, 0x86, 0x0C, 0x08, 0xE4, 0x91, 0x0D, 0x08
.byte 0x1B, 0x48, 0x1C, 0x49, 0x00, 0x22, 0x00, 0x92, 0x01, 0x92, 0x00, 0x23, 0x27, 0xF0, 0xF8, 0xFE
.byte 0x00, 0x25, 0xB9, 0x68, 0x0B, 0x1C, 0x9D, 0x42, 0x01, 0xDD, 0x00, 0xF0, 0x3A, 0xFC, 0x04, 0xAA
.byte 0x20, 0x9E, 0xAA, 0x46, 0x10, 0x88, 0x09, 0x24, 0x04, 0x40, 0x00, 0x2C, 0x24, 0xD0, 0x00, 0x22
.byte 0x8A, 0x42, 0x0C, 0xDC, 0x02, 0x24, 0x43, 0x46, 0x01, 0xCB, 0x81, 0x00, 0x09, 0x18, 0x89, 0x00
.byte 0x41, 0x44, 0xFE, 0x31, 0x0C, 0x80, 0x01, 0x32, 0xB8, 0x68, 0x82, 0x42, 0xF4, 0xDD, 0x8F, 0x20
.byte 0x58, 0xF0, 0x58, 0xF9, 0x00, 0x22, 0xB8, 0x68, 0x82, 0x42, 0x00, 0xDD, 0x5B, 0xE2, 0x05, 0x23
.byte 0x20, 0x99, 0x08, 0xC1, 0x01, 0x32, 0xB8, 0x68, 0x82, 0x42, 0xFA, 0xDD, 0x53, 0xE2, 0x00, 0x00
.byte 0x58, 0x8A, 0x0C, 0x08, 0xE4, 0x91, 0x0D, 0x08, 0x68, 0x00, 0x10, 0x18, 0x01, 0x88, 0x02, 0x20
.byte 0x81, 0x46, 0x08, 0x40, 0x00, 0x28, 0x28, 0xD0, 0x90, 0x20, 0x58, 0xF0, 0x3B, 0xF9, 0x40, 0x46
.byte 0x50, 0x44, 0x01, 0x68, 0x04, 0x29, 0x0A, 0xD0, 0x88, 0x00, 0x40, 0x18, 0x80, 0x00, 0xF8, 0x30
.byte 0x40, 0x44, 0x01, 0x21, 0x41, 0x70, 0x49, 0x46, 0x41, 0x80, 0xC4, 0x80, 0x03, 0xE0, 0x40, 0x46
.byte 0x8E, 0x30, 0x02, 0x22, 0x02, 0x70, 0x02, 0x20, 0x30, 0x60, 0x00, 0x22, 0xB8, 0x68, 0x82, 0x42
.byte 0x00, 0xDD, 0x56, 0xE2, 0x03, 0x23, 0x20, 0x99, 0x95, 0x42, 0x00, 0xD0, 0x0B, 0x60, 0x04, 0x31
.byte 0x01, 0x32, 0xB8, 0x68, 0x82, 0x42, 0xF7, 0xDD, 0x4B, 0xE2, 0x04, 0x36, 0x04, 0x24, 0xA2, 0x44
.byte 0x01, 0x35, 0x19, 0x1C, 0x9D, 0x42, 0x9D, 0xDD, 0xD3, 0xE3, 0x00, 0x26, 0xB1, 0x46, 0xBB, 0x68
.byte 0x06, 0xAE, 0x13, 0xA8, 0x82, 0x46, 0x00, 0x20, 0x52, 0x46, 0x31, 0x1C, 0x07, 0x25, 0x01, 0xC1
.byte 0x01, 0xC2, 0x01, 0x3D, 0x00, 0x2D, 0xFA, 0xDA, 0x00, 0x2B, 0x17, 0xDB, 0x34, 0x1C, 0x01, 0x21
.byte 0x8C, 0x46, 0x42, 0x46, 0x5D, 0x1C, 0x11, 0x68, 0x04, 0x29, 0x0B, 0xD0, 0x88, 0x00, 0x40, 0x18
.byte 0x80, 0x00, 0x2C, 0x4B, 0xC0, 0x18, 0x00, 0x7C, 0x00, 0x06, 0x00, 0x16, 0x80, 0x00, 0x20, 0x18
.byte 0x61, 0x46, 0x01, 0x60, 0x04, 0x32, 0x01, 0x3D, 0x00, 0x2D, 0xEC, 0xD1, 0x00, 0x25, 0x31, 0x1C
.byte 0x4A, 0x46, 0x90, 0x00, 0x53, 0x46, 0xC2, 0x18, 0x08, 0x68, 0x00, 0x28, 0x02, 0xD1, 0x20, 0xC2
.byte 0x01, 0x24, 0xA1, 0x44, 0x04, 0x31, 0x01, 0x35, 0x07, 0x2D, 0xF5, 0xDD, 0x56, 0x46, 0x0F, 0x25
.byte 0x3B, 0xF0, 0x60, 0xFD, 0x00, 0x04, 0x00, 0x14, 0x49, 0x46, 0x5A, 0xF0, 0xF9, 0xF8, 0x04, 0x1C
.byte 0x3B, 0xF0, 0x58, 0xFD, 0x00, 0x04, 0x00, 0x14, 0x49, 0x46, 0x5A, 0xF0, 0xF1, 0xF8, 0xA4, 0x00
.byte 0x34, 0x19, 0x22, 0x68, 0x80, 0x00, 0x30, 0x18, 0x01, 0x68, 0x21, 0x60, 0x02, 0x60, 0x01, 0x3D
.byte 0x00, 0x2D, 0xE5, 0xDA, 0x00, 0x25, 0xB8, 0x68, 0x85, 0x42, 0x29, 0xDC, 0x0E, 0x4E, 0xB1, 0x46
.byte 0xF2, 0x20, 0x40, 0x00, 0x40, 0x44, 0x84, 0x46, 0xE2, 0x22, 0x52, 0x00, 0x42, 0x44, 0x43, 0x46
.byte 0x00, 0x24, 0x18, 0x68, 0x21, 0x1C, 0x04, 0x28, 0x10, 0xD1, 0x56, 0x46, 0x70, 0x18, 0x00, 0x68
.byte 0x48, 0x44, 0x00, 0x78, 0x80, 0x21, 0x49, 0x01, 0x08, 0x43, 0x10, 0x60, 0x01, 0x20, 0x61, 0x46
.byte 0x08, 0x60, 0x04, 0xE0, 0x30, 0x91, 0x0D, 0x08, 0xBC, 0x92, 0x0D, 0x08, 0x10, 0x60, 0x00, 0x20
.byte 0x10, 0x61, 0x04, 0x32, 0x04, 0x33, 0x04, 0x34, 0x01, 0x35, 0xB8, 0x68, 0x85, 0x42, 0xE0, 0xDD
.byte 0x00, 0x22, 0xB8, 0x68, 0x82, 0x42, 0x06, 0xDC, 0x06, 0x23, 0x20, 0x99, 0x08, 0xC1, 0x01, 0x32
.byte 0xB8, 0x68, 0x82, 0x42, 0xFA, 0xDD, 0x00, 0x22, 0x1D, 0x92, 0x42, 0xE3, 0x00, 0x25, 0xBB, 0x68
.byte 0x9D, 0x42, 0x17, 0xDC, 0xE2, 0x20, 0x40, 0x00, 0x40, 0x44, 0x00, 0x68, 0x80, 0x21, 0x49, 0x01
.byte 0x08, 0x40, 0x00, 0x28, 0x0C, 0xD1, 0x1A, 0x1C, 0x0C, 0x1C, 0xE2, 0x21, 0x49, 0x00, 0x41, 0x44
.byte 0x04, 0x31, 0x01, 0x35, 0x95, 0x42, 0x05, 0xDC, 0x08, 0x68, 0x20, 0x40, 0x00, 0x28, 0xF7, 0xD0
.byte 0x9D, 0x42, 0x0B, 0xDD, 0x00, 0x22, 0x9A, 0x42, 0x00, 0xDD, 0x92, 0xE1, 0x07, 0x23, 0x20, 0x99
.byte 0x08, 0xC1, 0x01, 0x32, 0xB8, 0x68, 0x82, 0x42, 0xFA, 0xDD, 0x8A, 0xE1, 0x1D, 0x98, 0x04, 0x1C
.byte 0x01, 0x34, 0x1D, 0x94, 0x02, 0x28, 0x00, 0xDC, 0x13, 0xE3, 0x00, 0x26, 0x1D, 0x96, 0x00, 0x25
.byte 0x9D, 0x42, 0x00, 0xDD, 0x0D, 0xE3, 0x44, 0x46, 0x18, 0x20, 0x81, 0x46, 0xE2, 0x20, 0x40, 0x00
.byte 0x40, 0x44, 0x83, 0x19, 0x18, 0x68, 0x80, 0x21, 0x49, 0x01, 0x08, 0x40, 0x00, 0x28, 0x73, 0xD0
.byte 0xEA, 0x20, 0x40, 0x00, 0x40, 0x44, 0x80, 0x19, 0x01, 0x68, 0x0A, 0x1C, 0x01, 0x31, 0x01, 0x60
.byte 0x4A, 0x45, 0x3D, 0xDA, 0x1A, 0x68, 0x04, 0x48, 0x02, 0x40, 0x01, 0x20, 0x28, 0x40, 0x00, 0x28
.byte 0x06, 0xD0, 0x02, 0x48, 0x05, 0xE0, 0x00, 0x00, 0xFF, 0xEF, 0xFF, 0xFF, 0x85, 0x94, 0x0D, 0x08
.byte 0x13, 0x48, 0x10, 0x18, 0x02, 0x78, 0x22, 0x60, 0xE2, 0x20, 0x40, 0x00, 0x40, 0x44, 0x80, 0x19
.byte 0x80, 0x21, 0x49, 0x01, 0x0A, 0x43, 0x02, 0x60, 0x8D, 0x20, 0x58, 0xF0, 0x13, 0xF8, 0xF8, 0x68
.byte 0x85, 0x42, 0x49, 0xD1, 0x0B, 0x4A, 0x21, 0x68, 0x88, 0x00, 0x40, 0x18, 0x80, 0x00, 0x80, 0x18
.byte 0x00, 0x7C, 0x00, 0x06, 0x00, 0x16, 0x08, 0x49, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0x07, 0x49
.byte 0x59, 0xF0, 0x22, 0xFA, 0x92, 0x21, 0x89, 0x00, 0x41, 0x44, 0x01, 0x20, 0x08, 0x60, 0x33, 0xE0
.byte 0x7C, 0x94, 0x0D, 0x08, 0x30, 0x91, 0x0D, 0x08, 0xD0, 0x93, 0x0D, 0x08, 0x00, 0x40, 0x01, 0x02
.byte 0x19, 0x68, 0x07, 0x48, 0x01, 0x40, 0x19, 0x60, 0x21, 0x60, 0xF8, 0x68, 0x85, 0x42, 0x0B, 0xD1
.byte 0x04, 0x48, 0x49, 0x00, 0x09, 0x18, 0x08, 0x88, 0x57, 0xF0, 0xE4, 0xFF, 0x0A, 0xE0, 0x00, 0x00
.byte 0xFF, 0xEF, 0xFF, 0xFF, 0xC4, 0x92, 0x0D, 0x08, 0x09, 0x48, 0x49, 0x00, 0x09, 0x18, 0x08, 0x88
.byte 0x57, 0xF0, 0xD8, 0xFF, 0x20, 0x68, 0x81, 0x00, 0x09, 0x18, 0x89, 0x00, 0xF8, 0x31, 0x41, 0x44
.byte 0x01, 0x22, 0x4A, 0x70, 0x4A, 0x80, 0xF8, 0x68, 0xA8, 0x42, 0x03, 0xD0, 0xCA, 0x80, 0x03, 0xE0
.byte 0xD6, 0x92, 0x0D, 0x08, 0x02, 0x20, 0xC8, 0x80, 0x04, 0x34, 0x08, 0x21, 0x89, 0x44, 0x04, 0x36
.byte 0x01, 0x35, 0xB8, 0x68, 0x85, 0x42, 0x00, 0xDC, 0x78, 0xE7, 0x82, 0xE2, 0x1D, 0x9B, 0x01, 0x33
.byte 0x1D, 0x93, 0x3C, 0x2B, 0x1F, 0xDD, 0xF2, 0x20, 0x40, 0x00, 0x40, 0x44, 0x00, 0x68, 0x00, 0x28
.byte 0x19, 0xD0, 0xF8, 0x21, 0x49, 0x00, 0x41, 0x44, 0x00, 0x20, 0x08, 0x60, 0xFA, 0x21, 0x49, 0x00
.byte 0x41, 0x44, 0xF6, 0x20, 0x40, 0x00, 0x40, 0x44, 0x00, 0x68, 0x08, 0x60, 0x00, 0x22, 0xB8, 0x68
.byte 0x82, 0x42, 0x00, 0xDD, 0x8F, 0xE0, 0x08, 0x23, 0x20, 0x99, 0x08, 0xC1, 0x01, 0x32, 0xB8, 0x68
.byte 0x82, 0x42, 0xFA, 0xDD, 0x87, 0xE0, 0x1D, 0x4B, 0x90, 0x00, 0x40, 0x44, 0x01, 0x68, 0x88, 0x00
.byte 0x40, 0x18, 0x80, 0x00, 0xC0, 0x18, 0x00, 0x7C, 0x00, 0x06, 0x00, 0x16, 0xB8, 0x61, 0x00, 0x25
.byte 0xB8, 0x68, 0x85, 0x42, 0x10, 0xDC, 0x1C, 0x1C, 0x43, 0x46, 0x3A, 0x1C, 0x24, 0x32, 0x02, 0xCB
.byte 0x88, 0x00, 0x40, 0x18, 0x80, 0x00, 0x00, 0x19, 0x00, 0x7C, 0x00, 0x06, 0x00, 0x16, 0x01, 0xC2
.byte 0x01, 0x35, 0xB8, 0x68, 0x85, 0x42, 0xF2, 0xDD, 0xF8, 0x21, 0x49, 0x00, 0x41, 0x44, 0x00, 0x20
.byte 0x08, 0x60, 0xFA, 0x21, 0x49, 0x00, 0x41, 0x44, 0xF6, 0x20, 0x40, 0x00, 0x40, 0x44, 0x00, 0x68
.byte 0x08, 0x60, 0x00, 0x22, 0xB8, 0x68, 0x82, 0x42, 0x00, 0xDD, 0x2A, 0xE2, 0x08, 0x23, 0x20, 0x99
.byte 0x08, 0xC1, 0x01, 0x32, 0xB8, 0x68, 0x82, 0x42, 0xFA, 0xDD, 0x22, 0xE2, 0x30, 0x91, 0x0D, 0x08
.byte 0x26, 0x49, 0x1D, 0x9E, 0x70, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04
.byte 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x02, 0x68, 0xF6, 0x23, 0x5B, 0x00, 0x43, 0x44, 0xFA, 0x20
.byte 0x40, 0x00, 0x40, 0x44, 0x01, 0x68, 0x9E, 0x20, 0x40, 0x42, 0x40, 0x1A, 0x50, 0x43, 0xC0, 0x13
.byte 0x09, 0x18, 0x19, 0x60, 0x1D, 0x98, 0x01, 0x30, 0x1D, 0x90, 0x20, 0x28, 0x00, 0xDC, 0x00, 0xE2
.byte 0x00, 0x25, 0x42, 0x46, 0x8E, 0x32, 0x11, 0x21, 0x15, 0x4B, 0xF8, 0x18, 0x01, 0x70, 0x18, 0x30
.byte 0x01, 0x35, 0x0F, 0x2D, 0xFA, 0xD9, 0x07, 0x21, 0x08, 0x25, 0x40, 0x46, 0xEE, 0x30, 0x01, 0x70
.byte 0x18, 0x38, 0x01, 0x3D, 0x00, 0x2D, 0xFA, 0xDA, 0x04, 0x20, 0x10, 0x70, 0x87, 0x21, 0x89, 0x00
.byte 0x41, 0x44, 0x05, 0x20, 0x08, 0x60, 0x83, 0x21, 0x89, 0x00, 0x41, 0x44, 0x08, 0x20, 0x08, 0x60
.byte 0x00, 0x22, 0xB8, 0x68, 0x82, 0x42, 0x06, 0xDC, 0x09, 0x23, 0x20, 0x99, 0x08, 0xC1, 0x01, 0x32
.byte 0xB8, 0x68, 0x82, 0x42, 0xFA, 0xDD, 0x00, 0x24, 0x1D, 0x94, 0xD2, 0xE1, 0x5C, 0x64, 0x0E, 0x08
.byte 0x96, 0x0D, 0x00, 0x00, 0x1D, 0x9E, 0x01, 0x36, 0x1D, 0x96, 0x1E, 0x2E, 0x00, 0xDC, 0xC8, 0xE1
.byte 0x00, 0x22, 0xB8, 0x68, 0x82, 0x42, 0x06, 0xDC, 0x0B, 0x23, 0x20, 0x99, 0x08, 0xC1, 0x01, 0x32
.byte 0xB8, 0x68, 0x82, 0x42, 0xFA, 0xDD, 0x00, 0x20, 0x1D, 0x90, 0xBA, 0xE1, 0x1D, 0x99, 0x01, 0x31
.byte 0x1D, 0x91, 0x10, 0x29, 0x11, 0xDC, 0x88, 0x00, 0x40, 0x18, 0x00, 0x01, 0x80, 0x22, 0x52, 0x00
.byte 0x80, 0x18, 0x0A, 0x03, 0x41, 0x46, 0x28, 0x31, 0x08, 0x25, 0x48, 0x80, 0x08, 0x80, 0x8A, 0x80
.byte 0x18, 0x31, 0x01, 0x3D, 0x00, 0x2D, 0xF8, 0xDA, 0xA3, 0xE1, 0xBB, 0x68, 0x41, 0x46, 0x20, 0x31
.byte 0x00, 0x22, 0x40, 0x46, 0xE0, 0x30, 0x02, 0x60, 0x18, 0x38, 0x88, 0x42, 0xFB, 0xDA, 0x00, 0x22
.byte 0x9A, 0x42, 0x06, 0xDC, 0x0C, 0x23, 0x20, 0x99, 0x08, 0xC1, 0x01, 0x32, 0xB8, 0x68, 0x82, 0x42
.byte 0xFA, 0xDD
non_word_aligned_thumb_func_start sub_800818E
sub_800818E:
movs r3, #0x00
str r3, [sp, #0x074]
b _080084AE
.byte 0x1D, 0x9C, 0x01, 0x34, 0x1D, 0x94, 0x20, 0x2C, 0x00, 0xDD, 0xDF, 0xE0, 0x90, 0x00, 0x20, 0x9E
.byte 0x30, 0x18, 0x00, 0x68, 0x0B, 0x28, 0x03, 0xD0, 0x0C, 0x28, 0x00, 0xD1, 0xAA, 0xE0, 0xB6, 0xE0
.byte 0x39, 0x69, 0x01, 0x20, 0x40, 0x42, 0x81, 0x42, 0x04, 0xD0, 0x38, 0x1C, 0xFA, 0xF7, 0x96, 0xFD
.byte 0x05, 0x1C, 0x00, 0xE0, 0x00, 0x25, 0x1D, 0x98, 0x08, 0x28, 0x56, 0xD1, 0x0D, 0x4A, 0xB9, 0x18
.byte 0x08, 0x88, 0x00, 0x20, 0x08, 0x80, 0x0A, 0x88, 0x0B, 0x4B, 0xF8, 0x18, 0x01, 0x88, 0x02, 0x80
.byte 0x38, 0x69, 0x03, 0x28, 0x14, 0xD0, 0x09, 0x49, 0xA8, 0x00, 0x40, 0x18, 0x04, 0x68, 0x00, 0x20
.byte 0x00, 0x21, 0x00, 0x22, 0x26, 0xF0, 0x5A, 0xFA, 0x01, 0x1C, 0x20, 0x1C, 0x59, 0xF0, 0xB0, 0xF8
.byte 0x11, 0xE0, 0x00, 0x00, 0x18, 0x12, 0x00, 0x00, 0x16, 0x12, 0x00, 0x00, 0x1C, 0x93, 0x0D, 0x08
.byte 0x11, 0x48, 0x04, 0x69, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x26, 0xF0, 0x47, 0xFA, 0x01, 0x1C
.byte 0x20, 0x1C, 0x59, 0xF0, 0x9D, 0xF8, 0x01, 0x20, 0x26, 0xF0, 0x66, 0xFA, 0x39, 0x69, 0x03, 0x29
.byte 0x1C, 0xD0, 0x02, 0x20, 0x01, 0x29, 0x00, 0xD0, 0x78, 0x69, 0x80, 0x00, 0x07, 0x4C, 0x39, 0x19
.byte 0x09, 0x18, 0x08, 0x68, 0x00, 0x28, 0x18, 0xD0, 0x28, 0xF0, 0xF2, 0xF8, 0x04, 0x49, 0x05, 0x4A
.byte 0x05, 0x4B, 0x28, 0xF0, 0xC5, 0xF8, 0x10, 0xE0, 0x1C, 0x93, 0x0D, 0x08, 0x1C, 0x11, 0x00, 0x00
.byte 0x94, 0xD6, 0x07, 0x08, 0x60, 0x86, 0x00, 0x06, 0x00, 0x01, 0x00, 0x80, 0x28, 0xF0, 0xE0, 0xF8
.byte 0x11, 0x49, 0x12, 0x4A, 0x12, 0x4B, 0x28, 0xF0, 0xB3, 0xF8, 0x1D, 0x9E, 0x07, 0x2E, 0x4E, 0xDD
.byte 0x10, 0x48, 0x3B, 0x18, 0x10, 0x4A, 0xB9, 0x18, 0x08, 0x68, 0x01, 0x30, 0x08, 0x60, 0x07, 0x28
.byte 0x0A, 0xDD, 0x00, 0x22, 0x0A, 0x60, 0xE6, 0x24, 0xE4, 0x00, 0x39, 0x19, 0x08, 0x68, 0x01, 0x30
.byte 0x08, 0x60, 0x06, 0x28, 0x00, 0xDD, 0x0A, 0x60, 0x38, 0x69, 0x03, 0x28, 0x10, 0xD0, 0x07, 0x49
.byte 0xA8, 0x00, 0x40, 0x18, 0x01, 0x68, 0x0D, 0xE0, 0x94, 0xD8, 0x07, 0x08, 0x60, 0x86, 0x00, 0x06
.byte 0x00, 0x01, 0x00, 0x80, 0xEC, 0x04, 0x00, 0x00, 0x2C, 0x07, 0x00, 0x00, 0x30, 0x93, 0x0D, 0x08
.byte 0x0B, 0x48, 0xC1, 0x68, 0x91, 0x26, 0xB6, 0x00, 0x98, 0x19, 0x04, 0x68, 0x64, 0x01, 0x0C, 0x19
.byte 0x00, 0x20, 0x26, 0xF0, 0xA3, 0xF9, 0x01, 0x1C, 0x90, 0x20, 0x40, 0x00, 0x09, 0x18, 0x20, 0x1C
.byte 0x08, 0x22, 0x59, 0xF0, 0x29, 0xF8, 0x01, 0x20, 0x26, 0xF0, 0xB4, 0xF9, 0x0F, 0xE0, 0x00, 0x00
.byte 0x30, 0x93, 0x0D, 0x08, 0x10, 0x4A, 0xB9, 0x18, 0x08, 0x88, 0xFF, 0x20, 0x08, 0x80, 0x1D, 0x9B
.byte 0xD8, 0x0F, 0x18, 0x18, 0x40, 0x10, 0x0D, 0x4C, 0x39, 0x19, 0x0A, 0x88, 0x08, 0x80, 0x0C, 0x4E
.byte 0xB9, 0x19, 0x1D, 0x9A, 0x50, 0x00, 0x80, 0x18, 0xC0, 0x01, 0x40, 0x42, 0x00, 0x28, 0x00, 0xDA
.byte 0x1F, 0x30, 0x40, 0x11, 0xC8, 0x30
non_word_aligned_thumb_func_start sub_800833A
sub_800833A:
str r0, [r1, #0x00]
ldr r3, _08008358 @ =0x000011F0
adds r1, r7, r3
ldr r0, [r1, #0x00]
ldr r4, _0800835C @ =0xFFFFF800
adds r0, r0, r4
str r0, [r1, #0x00]
b _080084AE
.byte 0x00, 0x00, 0x16, 0x12, 0x00, 0x00, 0x1A, 0x12, 0x00, 0x00, 0xE8, 0x11, 0x00, 0x00
_08008358: .4byte 0x000011F0
_0800835C: .4byte 0xFFFFF800
.byte 0x00, 0x25, 0x44, 0x46, 0x04, 0xCC, 0x38, 0x1C, 0x29, 0x1C, 0xFA, 0xF7, 0x45, 0xFD, 0x01, 0x35
.byte 0x03, 0x2D, 0xF7, 0xDD, 0xF8, 0x68, 0x80, 0x00, 0x20, 0x9E, 0x30, 0x18, 0x00, 0x68, 0x0B, 0x28
.byte 0x36, 0xD1, 0x01, 0x20, 0x34, 0xE1, 0x00, 0x25, 0xB8, 0x68, 0x85, 0x42, 0x00, 0xDD, 0x8E, 0xE0
.byte 0x0E, 0x22, 0x20, 0x99, 0x04, 0xC1, 0x01, 0x35, 0xB8, 0x68, 0x85, 0x42, 0xFA, 0xDD, 0x86, 0xE0
.byte 0x00, 0x25, 0x44, 0x46, 0x04, 0xCC, 0x38, 0x1C, 0x29, 0x1C, 0xFA, 0xF7, 0x25, 0xFD, 0x01, 0x35
.byte 0x03, 0x2D, 0xF7, 0xDD, 0x01, 0x20, 0x40, 0x42, 0x1E, 0x99, 0x81, 0x42, 0x0C, 0xD0, 0x02, 0x29
.byte 0x1C, 0xD1, 0x38, 0x1C, 0xFE, 0xF7, 0xCC, 0xFC, 0x00, 0x25, 0x8A, 0x22, 0x42, 0x44, 0x94, 0x46
.byte 0x88, 0x23, 0x43, 0x44, 0x9A, 0x46, 0x23, 0xE0, 0x06, 0x4C, 0x39, 0x19, 0x08, 0x88, 0xFF, 0x20
.byte 0x08, 0x80, 0x05, 0x4E, 0xB9, 0x19, 0x08, 0x88, 0x10, 0x20, 0x08, 0x80, 0x01, 0x20, 0x38, 0x65
_080083F0:
movs r0, #0x00
b _080085F0
.byte 0x16, 0x12, 0x00, 0x00, 0x1A, 0x12, 0x00, 0x00, 0x06, 0x48, 0x39, 0x18, 0x08, 0x88, 0xFF, 0x20
.byte 0x08, 0x80, 0x05, 0x4A, 0xB9, 0x18, 0x08, 0x88, 0x10, 0x20, 0x08, 0x80, 0x01, 0x20, 0x38, 0x65
.byte 0xEC, 0xE0, 0x00, 0x00, 0x16, 0x12, 0x00, 0x00, 0x1A, 0x12, 0x00, 0x00, 0x69, 0x00, 0x49, 0x19
.byte 0xC9, 0x00, 0x20, 0x31, 0x41, 0x44, 0x80, 0x23, 0x5B, 0x00, 0x4B, 0x81, 0x0B, 0x81, 0x10, 0x4A
.byte 0xA8, 0x00, 0x40, 0x19, 0x80, 0x00, 0x80, 0x18, 0x82, 0x89, 0x8A, 0x80, 0xC0, 0x89, 0xC8, 0x80
.byte 0x01, 0x35, 0x08, 0x2D, 0xEA, 0xDD, 0x64, 0x46, 0x23, 0x80, 0x56, 0x46, 0x33, 0x80, 0x09, 0x49
.byte 0x78, 0x18, 0xC8, 0x21, 0x01, 0x60, 0x00, 0x25, 0xB8, 0x68, 0x85, 0x42, 0x25, 0xDC, 0x0F, 0x22
.byte 0x20, 0x99, 0x04, 0xC1, 0x01, 0x35, 0xB8, 0x68, 0x85, 0x42, 0xFA, 0xDD, 0x1D, 0xE0, 0x00, 0x00
.byte 0x30, 0x91, 0x0D, 0x08, 0xE8, 0x11, 0x00, 0x00
thumb_func_start sub_800847C
sub_800847C:
movs r0, #0x91
bl m4aSongNumStart
b _080084AE
.byte 0x41, 0x4A, 0xB9, 0x18, 0x08, 0x88, 0x41, 0x48, 0x08, 0x80, 0x41, 0x4B, 0xF9, 0x18, 0x08, 0x88
.byte 0x40, 0x48, 0x08, 0x80, 0x00, 0x25, 0xB8, 0x68, 0x85, 0x42, 0x06, 0xDC, 0x20, 0x99, 0x1E, 0x9C
.byte 0x10, 0xC1, 0x01, 0x35, 0xB8, 0x68, 0x85, 0x42, 0xF9, 0xDD
_080084AE:
ldr r6, _0800859C @ =0x00000D88
adds r1, r7, r6
movs r0, #0x10
bl sub_8005DAC
adds r0, r7, #0x0
bl sub_80036E4
adds r0, r7, #0x0
bl sub_8006A28
adds r0, r7, #0x0
bl sub_8006C5C
movs r0, #0x85
lsls r0, r0, #0x05
adds r4, r7, r0
movs r6, #0x01
str r6, [r4, #0x00]
adds r0, r7, #0x0
bl spm_loadOtherGfx
cmp r0, #0x00
beq _080084EC
bl dmaq_getVBlankDmaQueue
ldr r1, _080085A0 @ =0x02013000
ldr r2, _080085A4 @ =0x06012C00
ldr r3, _080085A8 @ =0x80000800
bl dmaq_enqueue
_080084EC:
movs r5, #0x00
str r5, [r4, #0x00]
adds r0, r7, #0x0
bl sub_8003948
ldr r0, [r7, #0x0C]
lsls r0, r0, #0x02
ldr r1, [sp, #0x080]
adds r0, r1, r0
ldr r0, [r0, #0x00]
subs r0, #0x02
cmp r0, #0x02
bhi _08008520
movs r0, #0x01
bl pltt_getBuffer
adds r2, r0, #0x0
adds r2, #0x60
ldr r0, _080085AC @ =0x080AFE00
adds r1, r0, #0x0
adds r1, #0x20
ldr r3, [r7, #0x4C]
movs r4, #0x20
str r4, [sp, #0x000]
bl sub_8005E04
_08008520:
adds r0, r7, #0x0
bl sub_80065CC
adds r0, r7, #0x0
bl sub_80060AC
adds r0, r7, #0x0
bl sub_8006850
adds r0, r7, #0x0
bl sub_8006784
adds r0, r7, #0x0
bl sub_8003930
cmp r0, #0x00
beq _080085C0
ldr r0, _080085B0 @ =0x080306FD
ldr r4, _080085B4 @ =0x03004F70
str r0, [r4, #0x04]
ldr r0, _080085B8 @ =0x08030739
str r0, [r4, #0x00]
str r5, [r4, #0x08]
strb r6, [r4, #0x0E]
bl trns_start
movs r0, #0x00
bl pltt_getBuffer
strh r5, [r0, #0x00]
movs r0, #0x01
bl pltt_setDirtyFlag
bl main_frameProc
ldrb r1, [r4, #0x0C]
movs r0, #0x02
ands r0, r1
cmp r0, #0x00
beq _08008580
movs r5, #0x02
_08008572:
bl main_frameProc
ldrb r1, [r4, #0x0C]
adds r0, r5, #0x0
ands r0, r1
cmp r0, #0x00
bne _08008572
_08008580:
ldr r2, _080085BC @ =0x0000109C
adds r1, r7, r2
movs r0, #0x01
str r0, [r1, #0x00]
b _080083F0
.byte 0x00, 0x00, 0x16, 0x12, 0x00, 0x00, 0x41, 0x02, 0x00, 0x00, 0x18, 0x12, 0x00, 0x00, 0x08, 0x10
.byte 0x00, 0x00
_0800859C: .4byte 0x00000D88
_080085A0: .4byte 0x02013000
_080085A4: .4byte 0x06012C00
_080085A8: .4byte 0x80000800
_080085AC: .4byte 0x080AFE00
_080085B0: .4byte trns_initDefaultOutTransition
_080085B4: .4byte 0x03004F70
_080085B8: .4byte trns_applyDefaultOutTransition
_080085BC: .4byte 0x0000109C
_080085C0:
movs r0, #0x92
lsls r0, r0, #0x02
add r0, r8
ldr r0, [r0, #0x00]
cmp r0, #0x00
bne _080085D0
bl sub_80072B8
_080085D0:
bl dmaq_getVBlankDmaQueue
ldr r1, _080085E4 @ =0x02014000
ldr r2, _080085E8 @ =0x06013C00
ldr r3, _080085EC @ =0x80000E00
bl dmaq_enqueue
bl sub_80072B8
lsls r0, r0, #0x00
_080085E4:
ands r0, r0
lsls r1, r0, #0x08
_080085E8:
subs r4, #0x00
lsls r1, r0, #0x18
_080085EC:
lsrs r0, r0, #0x18
strh r0, [r0, #0x00]
_080085F0:
add sp, #0x094
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r1}
bx r1
thumb_func_start sub_8008600
sub_8008600:
ldr r1, _08008608 @ =0x080D9344
adds r0, r0, r1
ldrb r0, [r0, #0x00]
bx lr
_08008608: .4byte 0x080D9344
thumb_func_start sub_800860C
sub_800860C:
push {r4, r5, r6, r7, lr}
mov r7, r9
mov r6, r8
push {r6, r7}
adds r7, r0, #0x0
adds r6, r1, #0x0
ldr r0, [r7, #0x10]
cmp r0, #0x03
bne _08008620
b _08008722
_08008620:
movs r1, #0x02
cmp r0, #0x01
beq _08008628
ldr r1, [r7, #0x14]
_08008628:
ldr r2, _08008640 @ =0x000011E4
adds r0, r7, r2
ldr r0, [r0, #0x00]
cmp r0, #0x00
bne _08008648
lsls r0, r1, #0x02
lsls r1, r6, #0x01
adds r1, r1, r6
lsls r1, r1, #0x02
adds r1, r0, r1
ldr r3, _08008644 @ =0x000010A4
b _08008656
_08008640: .4byte 0x000011E4
_08008644: .4byte 0x000010A4
_08008648:
lsls r0, r1, #0x02
lsls r1, r6, #0x01
adds r1, r1, r6
lsls r1, r1, #0x02
adds r1, r0, r1
movs r3, #0x87
lsls r3, r3, #0x05
_08008656:
adds r2, r7, r3
adds r2, r2, r1
ldr r2, [r2, #0x00]
mov r8, r2
mov r9, r0
ldr r1, _0800868C @ =0x000011E4
adds r0, r7, r1
ldr r0, [r0, #0x00]
cmp r0, #0x00
bne _08008694
lsls r5, r6, #0x05
ldr r4, _08008690 @ =0x080B75C0
adds r4, r5, r4
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
movs r2, #0x80
lsls r2, r2, #0x01
adds r0, r5, r2
adds r1, r1, r0
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
b _080086B2
.byte 0x00, 0x00
_0800868C: .4byte 0x000011E4
_08008690: .4byte 0x080B75C0
_08008694:
lsls r5, r6, #0x05
ldr r4, _08008730 @ =0x080BB5A0
adds r4, r5, r4
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
movs r3, #0x80
lsls r3, r3, #0x01
adds r0, r5, r3
adds r1, r1, r0
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
_080086B2:
mov r0, r8
cmp r0, #0x00
beq _080086FA
movs r0, #0x01
bl pltt_getBuffer
adds r0, r5, r0
movs r3, #0x1F
movs r1, #0x80
lsls r1, r1, #0x01
adds r5, r0, r1
movs r4, #0x0F
_080086CA:
ldrh r0, [r5, #0x00]
asrs r1, r0, #0x05
asrs r2, r0, #0x0A
ands r0, r3
asrs r0, r0, #0x01
ands r1, r3
asrs r1, r1, #0x01
ands r2, r3
asrs r2, r2, #0x01
ands r0, r3
ands r1, r3
lsls r1, r1, #0x05
orrs r0, r1
ands r2, r3
lsls r2, r2, #0x0A
orrs r0, r2
strh r0, [r5, #0x00]
adds r5, #0x02
subs r4, #0x01
cmp r4, #0x00
bge _080086CA
movs r0, #0x01
bl pltt_setDirtyFlag
_080086FA:
cmp r6, #0x04
bne _08008722
ldr r2, _08008734 @ =0x0000111C
adds r0, r7, r2
add r0, r9
ldr r0, [r0, #0x00]
cmp r0, #0x00
beq _08008722
ldr r4, _08008738 @ =0x080B1398
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
movs r3, #0xC0
lsls r3, r3, #0x01
adds r1, r1, r3
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
_08008722:
pop {r3, r4}
mov r8, r3
mov r9, r4
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_08008730: .4byte 0x080BB5A0
_08008734: .4byte 0x0000111C
_08008738: .4byte 0x080B1398
thumb_func_start sub_800873C
sub_800873C:
push {r4, r5, r6, r7, lr}
adds r3, r0, #0x0
adds r2, r1, #0x0
ldr r0, [r3, #0x10]
movs r1, #0x02
cmp r0, #0x01
beq _0800874C
ldr r1, [r3, #0x14]
_0800874C:
ldr r4, _0800878C @ =0x000011E4
adds r0, r3, r4
ldr r0, [r0, #0x00]
cmp r0, #0x00
bne _080087D4
lsls r0, r2, #0x01
adds r0, r0, r2
adds r0, r0, r1
lsls r0, r0, #0x02
ldr r4, _08008790 @ =0x000010A4
adds r1, r3, r4
adds r1, r1, r0
ldr r0, [r1, #0x00]
cmp r0, #0x00
beq _0800879C
lsls r6, r2, #0x02
lsls r0, r2, #0x03
adds r0, r0, r6
lsls r5, r0, #0x08
ldr r6, _08008794 @ =0x02025400
movs r4, #0x03
_08008776:
adds r1, r5, r6
ldr r0, _08008798 @ =0x080A28C8
bl LZ77UnCompWram
movs r0, #0xC0
lsls r0, r0, #0x02
adds r5, r5, r0
subs r4, #0x01
cmp r4, #0x00
bge _08008776
b _08008842
_0800878C: .4byte 0x000011E4
_08008790: .4byte 0x000010A4
_08008794: .4byte 0x02025400
_08008798: .4byte 0x080A28C8
_0800879C:
movs r4, #0x00
lsls r6, r2, #0x02
ldr r7, _080087CC @ =0x080E7FEC
lsls r0, r2, #0x03
adds r0, r0, r6
lsls r5, r0, #0x08
_080087A8:
adds r0, r6, r4
bl track_getMKSCTrack
lsls r0, r0, #0x02
adds r0, r0, r7
ldr r0, [r0, #0x00]
ldr r0, [r0, #0x30]
ldr r1, _080087D0 @ =0x02025400
adds r1, r5, r1
bl LZ77UnCompWram
movs r0, #0xC0
lsls r0, r0, #0x02
adds r5, r5, r0
adds r4, #0x01
cmp r4, #0x03
ble _080087A8
b _08008842
_080087CC: .4byte 0x080E7FEC
_080087D0: .4byte 0x02025400
_080087D4:
lsls r0, r2, #0x01
adds r0, r0, r2
adds r0, r0, r1
lsls r0, r0, #0x02
movs r4, #0x87
lsls r4, r4, #0x05
adds r1, r3, r4
adds r1, r1, r0
ldr r0, [r1, #0x00]
cmp r0, #0x00
beq _08008814
lsls r6, r2, #0x02
lsls r0, r2, #0x03
adds r0, r0, r6
lsls r5, r0, #0x08
ldr r6, _0800880C @ =0x02025400
movs r4, #0x03
_080087F6:
adds r1, r5, r6
ldr r0, _08008810 @ =0x080A4A68
bl LZ77UnCompWram
movs r0, #0xC0
lsls r0, r0, #0x02
adds r5, r5, r0
subs r4, #0x01
cmp r4, #0x00
bge _080087F6
b _08008842
_0800880C: .4byte 0x02025400
_08008810: .4byte 0x080A4A68
_08008814:
movs r4, #0x00
lsls r6, r2, #0x02
ldr r7, _08008848 @ =0x080E7FEC
lsls r0, r2, #0x03
adds r0, r0, r6
lsls r5, r0, #0x08
_08008820:
adds r0, r6, r4
bl track_getRetroTrack
lsls r0, r0, #0x02
adds r0, r0, r7
ldr r0, [r0, #0x00]
ldr r0, [r0, #0x30]
ldr r1, _0800884C @ =0x02025400
adds r1, r5, r1
bl LZ77UnCompWram
movs r0, #0xC0
lsls r0, r0, #0x02
adds r5, r5, r0
adds r4, #0x01
cmp r4, #0x03
ble _08008820
_08008842:
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_08008848: .4byte 0x080E7FEC
_0800884C: .4byte 0x02025400
thumb_func_start sub_8008850
sub_8008850:
push {r4, r5, r6, r7, lr}
add sp, #-0x004
adds r5, r0, #0x0
movs r0, #0x00
str r0, [sp, #0x000]
movs r1, #0x00
movs r2, #0x02
bl map_getBufferPtr2d
adds r1, r0, #0x0
ldr r2, _08008898 @ =0x01000080
mov r0, sp
bl CpuFastSet
ldr r1, _0800889C @ =0x000011E4
adds r0, r5, r1
ldr r0, [r0, #0x00]
cmp r0, #0x00
beq _0800887C
ldr r0, [r5, #0x10]
cmp r0, #0x03
bne _080088A8
_0800887C:
ldr r4, _080088A0 @ =0x0809A8CC
movs r0, #0x00
movs r1, #0x12
movs r2, #0x02
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
ldr r0, _080088A4 @ =0x00000C6C
adds r0, r0, r5
mov r12, r0
b _080088E6
_08008898: .4byte 0x01000080
_0800889C: .4byte 0x000011E4
_080088A0: .4byte 0x0809A8CC
_080088A4: .4byte 0x00000C6C
_080088A8:
movs r0, #0x00
movs r1, #0x13
movs r2, #0x02
bl map_getBufferPtr2d
adds r7, r0, #0x0
movs r2, #0x00
ldr r1, _08008914 @ =0x00000C6C
adds r1, r1, r5
mov r12, r1
movs r0, #0x80
lsls r0, r0, #0x05
adds r6, r0, #0x0
_080088C2:
lsls r1, r2, #0x06
lsls r0, r2, #0x03
adds r4, r2, #0x1
adds r2, r0, #0x0
adds r2, #0x20
adds r1, r7, r1
movs r3, #0x07
_080088D0:
adds r0, r2, #0x0
orrs r0, r6
strh r0, [r1, #0x00]
adds r2, #0x01
adds r1, #0x02
subs r3, #0x01
cmp r3, #0x00
bge _080088D0
adds r2, r4, #0x0
cmp r2, #0x07
ble _080088C2
_080088E6:
ldr r1, _08008918 @ =0x000011FE
adds r2, r5, r1
ldrh r1, [r2, #0x00]
ldr r0, _0800891C @ =0x0000FF7F
ands r0, r1
ldrh r1, [r2, #0x00]
strh r0, [r2, #0x00]
ldr r1, _08008920 @ =0x000011E4
adds r0, r5, r1
ldr r0, [r0, #0x00]
cmp r0, #0x00
beq _08008904
ldr r0, [r5, #0x10]
cmp r0, #0x03
bne _08008924
_08008904:
ldrh r0, [r2, #0x00]
movs r1, #0x80
orrs r0, r1
ldrh r1, [r2, #0x00]
movs r1, #0x00
orrs r0, r1
b _08008928
.byte 0x00, 0x00
_08008914: .4byte 0x00000C6C
_08008918: .4byte 0x000011FE
_0800891C: .4byte 0x0000FF7F
_08008920: .4byte 0x000011E4
_08008924:
ldrh r0, [r2, #0x00]
ldrh r1, [r2, #0x00]
_08008928:
strh r0, [r2, #0x00]
movs r0, #0x01
mov r1, r12
str r0, [r1, #0x00]
add sp, #0x004
pop {r4, r5, r6, r7}
pop {r0}
bx r0
thumb_func_start sub_8008938
sub_8008938:
push {r4, r5, r6, r7, lr}
adds r6, r0, #0x0
ldr r0, _08008974 @ =0x0203EC00
ldr r2, [r0, #0x00]
movs r1, #0x01
ldr r0, _08008978 @ =0x0203EBFC
ldr r0, [r0, #0x00]
cmp r0, #0x01
beq _080089F0
cmp r0, #0x01
bgt _08008950
b _08008B3E
_08008950:
cmp r0, #0x02
beq _08008956
b _08008B3E
_08008956:
ldr r1, _0800897C @ =0x000011E4
adds r0, r6, r1
ldr r0, [r0, #0x00]
ldr r1, [r6, #0x10]
cmp r0, #0x00
beq _08008966
cmp r1, #0x03
bne _080089A8
_08008966:
cmp r1, #0x03
beq _08008984
ldr r4, _08008980 @ =0x080E7FEC
adds r0, r2, #0x0
bl track_getMKSCTrack
b _0800898E
_08008974: .4byte 0x0203EC00
_08008978: .4byte 0x0203EBFC
_0800897C: .4byte 0x000011E4
_08008980: .4byte 0x080E7FEC
_08008984:
ldr r4, _080089A0 @ =0x080E7FEC
ands r2, r1
adds r0, r2, #0x0
bl track_getBattleTrack
_0800898E:
lsls r0, r0, #0x02
adds r0, r0, r4
ldr r2, [r0, #0x00]
ldr r0, [r2, #0x24]
ldr r1, _080089A4 @ =0x02004400
bl LZ77UnCompWram
b _080089D0
.byte 0x00, 0x00
_080089A0: .4byte 0x080E7FEC
_080089A4: .4byte 0x02004400
_080089A8:
ldr r4, _080089DC @ =0x080E7FEC
adds r0, r2, #0x0
bl track_getRetroTrack
lsls r0, r0, #0x02
adds r0, r0, r4
ldr r2, [r0, #0x00]
ldr r1, [r2, #0x00]
lsls r1, r1, #0x02
ldr r0, _080089E0 @ =courseData_bin
adds r1, r1, r0
ldr r1, [r1, #0x00]
adds r0, r1, r0
ldr r2, _080089E4 @ =0x082580C4
adds r1, r1, r2
ldr r1, [r1, #0x00]
adds r0, r0, r1
ldr r1, _080089E8 @ =0x02004400
bl LZ77UnCompWram
_080089D0:
ldr r1, _080089EC @ =0x0203EBFC
movs r0, #0x01
str r0, [r1, #0x00]
movs r1, #0x00
b _08008B3E
.byte 0x00, 0x00
_080089DC: .4byte 0x080E7FEC
_080089E0: .4byte courseData_bin
_080089E4: .4byte 0x082580C4
_080089E8: .4byte 0x02004400
_080089EC: .4byte 0x0203EBFC
_080089F0:
ldr r3, _08008A40 @ =0x000011E4
adds r0, r6, r3
ldr r0, [r0, #0x00]
ldr r1, [r6, #0x10]
cmp r0, #0x00
beq _08008A02
adds r3, r1, #0x0
cmp r3, #0x03
bne _08008A74
_08008A02:
adds r0, r2, #0x0
cmp r2, #0x00
bge _08008A0A
adds r0, r2, #0x3
_08008A0A:
asrs r5, r0, #0x02
adds r0, r1, #0x0
movs r7, #0x02
cmp r0, #0x01
beq _08008A16
ldr r7, [r6, #0x14]
_08008A16:
cmp r0, #0x03
beq _08008A4C
ldr r4, _08008A44 @ =0x080E7FEC
adds r0, r2, #0x0
bl track_getMKSCTrack
lsls r0, r0, #0x02
adds r0, r0, r4
ldr r2, [r0, #0x00]
lsls r0, r5, #0x01
adds r0, r0, r5
adds r0, r0, r7
lsls r0, r0, #0x02
ldr r3, _08008A48 @ =0x000010A4
adds r1, r6, r3
adds r1, r1, r0
ldr r0, [r1, #0x00]
cmp r0, #0x00
beq _08008A5C
ldr r4, [r2, #0x2C]
b _08008A5E
_08008A40: .4byte 0x000011E4
_08008A44: .4byte 0x080E7FEC
_08008A48: .4byte 0x000010A4
_08008A4C:
ldr r4, _08008A70 @ =0x080E7FEC
ands r2, r1
adds r0, r2, #0x0
bl track_getBattleTrack
lsls r0, r0, #0x02
adds r0, r0, r4
ldr r2, [r0, #0x00]
_08008A5C:
ldr r4, [r2, #0x28]
_08008A5E:
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
b _08008AEE
.byte 0x00, 0x00
_08008A70: .4byte 0x080E7FEC
_08008A74:
adds r0, r2, #0x0
cmp r0, #0x00
bge _08008A7C
adds r0, #0x03
_08008A7C:
asrs r5, r0, #0x02
movs r7, #0x02
cmp r3, #0x01
beq _08008A86
ldr r7, [r6, #0x14]
_08008A86:
ldr r4, _08008B14 @ =0x08066EAC
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0x20
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
lsls r0, r5, #0x01
adds r0, r0, r5
adds r0, r0, r7
lsls r0, r0, #0x02
movs r2, #0x87
lsls r2, r2, #0x05
adds r1, r6, r2
adds r1, r1, r0
ldr r0, [r1, #0x00]
cmp r0, #0x00
beq _08008AEE
movs r0, #0x00
bl pltt_getBuffer
movs r4, #0x1F
adds r3, r0, #0x0
adds r3, #0x20
movs r5, #0x0F
_08008ABE:
ldrh r0, [r3, #0x00]
asrs r1, r0, #0x05
asrs r2, r0, #0x0A
ands r0, r4
asrs r0, r0, #0x01
ands r1, r4
asrs r1, r1, #0x01
ands r2, r4
asrs r2, r2, #0x01
ands r0, r4
ands r1, r4
lsls r1, r1, #0x05
orrs r0, r1
ands r2, r4
lsls r2, r2, #0x0A
orrs r0, r2
strh r0, [r3, #0x00]
adds r3, #0x02
subs r5, #0x01
cmp r5, #0x00
bge _08008ABE
movs r0, #0x01
bl pltt_setDirtyFlag
_08008AEE:
movs r0, #0x01
bl pltt_setDirtyFlag
ldr r3, _08008B18 @ =0x000011E4
adds r0, r6, r3
ldr r0, [r0, #0x00]
cmp r0, #0x00
beq _08008B04
ldr r0, [r6, #0x10]
cmp r0, #0x03
bne _08008B28
_08008B04:
bl dmaq_getVBlankDmaQueue
ldr r1, _08008B1C @ =0x02004400
ldr r2, _08008B20 @ =0x06004000
ldr r3, _08008B24 @ =0x80000A20
bl dmaq_enqueue
b _08008B36
_08008B14: .4byte 0x08066EAC
_08008B18: .4byte 0x000011E4
_08008B1C: .4byte 0x02004400
_08008B20: .4byte 0x06004000
_08008B24: .4byte 0x80000A20
_08008B28:
bl dmaq_getVBlankDmaQueue
ldr r1, _08008B48 @ =0x02004400
ldr r2, _08008B4C @ =0x06004400
ldr r3, _08008B50 @ =0x80000400
bl dmaq_enqueue
_08008B36:
ldr r1, _08008B54 @ =0x0203EBFC
movs r0, #0x00
str r0, [r1, #0x00]
movs r1, #0x01
_08008B3E:
adds r0, r1, #0x0
pop {r4, r5, r6, r7}
pop {r1}
bx r1
.byte 0x00, 0x00
_08008B48: .4byte 0x02004400
_08008B4C: .4byte 0x06004400
_08008B50: .4byte 0x80000400
_08008B54: .4byte 0x0203EBFC
thumb_func_start spm_loadCupGfx
spm_loadCupGfx:
push {r4, lr}
ldr r0, [r0, #0x10]
cmp r0, #0x03
bne _08008B62
b _08008CB8
_08008B62:
cmp r1, #0x04
bls _08008B68
b _08008CF4
_08008B68:
lsls r0, r1, #0x02
ldr r1, _08008B74 @ =0x08008B78
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
.byte 0x00, 0x00
_08008B74: .4byte 0x08008B78
.byte 0x8C, 0x8B, 0x00, 0x08, 0xC4, 0x8B, 0x00, 0x08, 0xFC, 0x8B, 0x00, 0x08, 0x34, 0x8C, 0x00, 0x08
.byte 0x6C, 0x8C, 0x00, 0x08, 0x0A, 0x4C, 0x00, 0x20, 0x25, 0xF0, 0x4E, 0xFD, 0x01, 0x1C, 0xA0, 0x31
.byte 0x20, 0x1C, 0x08, 0x22, 0x58, 0xF0, 0xD6, 0xFB, 0x06, 0x4C, 0x01, 0x20, 0x25, 0xF0, 0x44, 0xFD
.byte 0x01, 0x1C, 0x0E, 0x31, 0x20, 0x1C, 0x09, 0x22, 0x58, 0xF0, 0xCE, 0xFB, 0x02, 0x4C, 0x6E, 0xE0
.byte 0x7C, 0xE0, 0x0A, 0x08, 0x1C, 0xE1, 0x0A, 0x08, 0xB4, 0xDC, 0x07, 0x08, 0x0A, 0x4C, 0x00, 0x20
.byte 0x25, 0xF0, 0x32, 0xFD, 0x01, 0x1C, 0xA0, 0x31, 0x20, 0x1C, 0x08, 0x22, 0x58, 0xF0, 0xBA, 0xFB
.byte 0x06, 0x4C, 0x01, 0x20, 0x25, 0xF0, 0x28, 0xFD, 0x01, 0x1C, 0x0E, 0x31, 0x20, 0x1C, 0x09, 0x22
.byte 0x58, 0xF0, 0xB2, 0xFB, 0x02, 0x4C, 0x52, 0xE0, 0x9C, 0xE0, 0x0A, 0x08, 0x30, 0xE1, 0x0A, 0x08
.byte 0xC8, 0xDD, 0x07, 0x08, 0x0A, 0x4C, 0x00, 0x20, 0x25, 0xF0, 0x16, 0xFD, 0x01, 0x1C, 0xA0, 0x31
.byte 0x20, 0x1C, 0x08, 0x22, 0x58, 0xF0, 0x9E, 0xFB, 0x06, 0x4C, 0x01, 0x20, 0x25, 0xF0, 0x0C, 0xFD
.byte 0x01, 0x1C, 0x0E, 0x31, 0x20, 0x1C, 0x09, 0x22, 0x58, 0xF0, 0x96, 0xFB, 0x02, 0x4C, 0x36, 0xE0
.byte 0xBC, 0xE0, 0x0A, 0x08, 0x44, 0xE1, 0x0A, 0x08, 0xDC, 0xDE, 0x07, 0x08, 0x0A, 0x4C, 0x00, 0x20
.byte 0x25, 0xF0, 0xFA, 0xFC, 0x01, 0x1C, 0xA0, 0x31, 0x20, 0x1C, 0x08, 0x22, 0x58, 0xF0, 0x82, 0xFB
.byte 0x06, 0x4C, 0x01, 0x20, 0x25, 0xF0, 0xF0, 0xFC, 0x01, 0x1C, 0x0E, 0x31, 0x20, 0x1C, 0x09, 0x22
.byte 0x58, 0xF0, 0x7A, 0xFB, 0x02, 0x4C, 0x1A, 0xE0, 0xDC, 0xE0, 0x0A, 0x08, 0x58, 0xE1, 0x0A, 0x08
.byte 0xF8, 0xDF, 0x07, 0x08, 0x0F, 0x4C, 0x00, 0x20, 0x25, 0xF0, 0xDE, 0xFC, 0x01, 0x1C, 0xA0, 0x31
.byte 0x20, 0x1C, 0x08, 0x22, 0x58, 0xF0, 0x66, 0xFB, 0x0B, 0x4C, 0x01, 0x20, 0x25, 0xF0, 0xD4, 0xFC
.byte 0x01, 0x1C, 0x0E, 0x31, 0x20, 0x1C, 0x09, 0x22, 0x58, 0xF0, 0x5E, 0xFB, 0x07, 0x4C, 0x01, 0x20
.byte 0x00, 0x21, 0x00, 0x22, 0x25, 0xF0, 0x08, 0xFD, 0x01, 0x1C, 0x20, 0x1C, 0x58, 0xF0, 0x5E, 0xFB
.byte 0x24, 0xE0, 0x00, 0x00, 0xFC, 0xE0, 0x0A, 0x08, 0x6C, 0xE1, 0x0A, 0x08, 0x0C, 0xE1, 0x07, 0x08
_08008CB8:
ldr r4, _08008D08 @ =0x080AE0DC
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0xA0
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
ldr r4, _08008D0C @ =0x080AE158
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0x0E
adds r0, r4, #0x0
movs r2, #0x09
bl CpuSet
ldr r4, _08008D10 @ =0x0807E10C
movs r0, #0x01
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
_08008CF4:
movs r0, #0x01
bl pltt_setDirtyFlag
movs r0, #0x02
bl map_setBufferDirty
pop {r4}
pop {r0}
bx r0
.byte 0x00, 0x00
_08008D08: .4byte 0x080AE0DC
_08008D0C: .4byte 0x080AE158
_08008D10: .4byte 0x0807E10C
thumb_func_start sub_8008D14
sub_8008D14:
push {r4, lr}
adds r3, r0, #0x0
movs r0, #0xE7
lsls r0, r0, #0x03
adds r2, r3, r0
adds r0, #0xBC
adds r1, r3, r0
ldr r0, [r1, #0x00]
adds r0, #0x01
str r0, [r1, #0x00]
cmp r0, #0x07
ble _08008D42
movs r4, #0x00
str r4, [r1, #0x00]
movs r0, #0xFF
lsls r0, r0, #0x03
adds r1, r3, r0
ldr r0, [r1, #0x00]
adds r0, #0x01
str r0, [r1, #0x00]
cmp r0, #0x06
ble _08008D42
str r4, [r1, #0x00]
_08008D42:
ldr r0, [r3, #0x10]
cmp r0, #0x03
beq _08008DD8
ldr r0, [r2, #0x00]
cmp r0, #0x04
bhi _08008DFA
lsls r0, r0, #0x02
ldr r1, _08008D58 @ =0x08008D5C
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
_08008D58: .4byte 0x08008D5C
.byte 0x70, 0x8D, 0x00, 0x08, 0x80, 0x8D, 0x00, 0x08, 0x90, 0x8D, 0x00, 0x08, 0xA0, 0x8D, 0x00, 0x08
.byte 0xB0, 0x8D, 0x00, 0x08, 0x10, 0x1C, 0xC0, 0x30, 0x04, 0x68, 0x64, 0x01, 0x00, 0x48, 0x1E, 0xE0
.byte 0x88, 0xCD, 0x07, 0x08, 0x10, 0x1C, 0xC0, 0x30, 0x04, 0x68, 0x64, 0x01, 0x00, 0x48, 0x16, 0xE0
.byte 0x68, 0xCE, 0x07, 0x08, 0x10, 0x1C, 0xC0, 0x30, 0x04, 0x68, 0x64, 0x01, 0x00, 0x48, 0x0E, 0xE0
.byte 0x48, 0xCF, 0x07, 0x08, 0x10, 0x1C, 0xC0, 0x30, 0x04, 0x68, 0x64, 0x01, 0x00, 0x48, 0x06, 0xE0
.byte 0x28, 0xD0, 0x07, 0x08, 0x10, 0x1C, 0xC0, 0x30, 0x04, 0x68, 0x64, 0x01, 0x06, 0x48, 0x24, 0x18
.byte 0x00, 0x20, 0x25, 0xF0, 0x37, 0xFC, 0x01, 0x1C, 0x90, 0x20, 0x40, 0x00, 0x09, 0x18, 0x20, 0x1C
.byte 0x08, 0x22, 0x58, 0xF0, 0xBD, 0xFA, 0x12, 0xE0, 0x08, 0xD1, 0x07, 0x08
_08008DD8:
adds r0, r2, #0x0
adds r0, #0xC0
ldr r4, [r0, #0x00]
lsls r4, r4, #0x05
ldr r0, _08008E08 @ =0x0807D028
adds r4, r4, r0
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
movs r0, #0x90
lsls r0, r0, #0x01
adds r1, r1, r0
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
_08008DFA:
movs r0, #0x01
bl pltt_setDirtyFlag
pop {r4}
pop {r0}
bx r0
.byte 0x00, 0x00
_08008E08: .4byte 0x0807D028
thumb_func_start sub_8008E0C
sub_8008E0C:
push {r4, r5, r6, r7, lr}
mov r7, r9
mov r6, r8
push {r6, r7}
add sp, #-0x008
adds r6, r1, #0x0
cmp r1, #0x00
bge _08008E1E
adds r6, r1, #0x3
_08008E1E:
asrs r6, r6, #0x02
movs r4, #0x03
ands r4, r1
ldr r1, _08008EDC @ =0x000011E4
adds r0, r0, r1
ldr r0, [r0, #0x00]
cmp r0, #0x00
bne _08008EE0
bl save_getSavePointer_805D9B0
lsls r4, r4, #0x05
lsls r6, r6, #0x07
adds r0, r6, r0
adds r0, r4, r0
adds r0, #0x64
ldrb r7, [r0, #0x00]
bl save_getSavePointer_805D9B0
adds r0, r6, r0
adds r0, r4, r0
adds r0, #0x64
ldrh r5, [r0, #0x02]
movs r0, #0x00
movs r1, #0x05
movs r2, #0x0B
bl map_getBufferPtr2d
adds r1, r0, #0x0
movs r0, #0xD0
lsls r0, r0, #0x01
mov r9, r0
str r0, [sp, #0x000]
movs r0, #0x0F
mov r8, r0
str r0, [sp, #0x004]
adds r0, r7, #0x0
movs r2, #0xA0
lsls r2, r2, #0x01
movs r3, #0x0C
bl sub_800E728
movs r0, #0x00
movs r1, #0x08
movs r2, #0x0B
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r5, #0x0
movs r2, #0xB0
lsls r2, r2, #0x01
movs r3, #0x0F
bl sub_800C6D4
bl save_getSavePointer_805D9B0
adds r0, r6, r0
adds r0, r4, r0
adds r0, #0x78
ldrb r7, [r0, #0x00]
bl save_getSavePointer_805D9B0
adds r6, r6, r0
adds r4, r4, r6
adds r4, #0x78
ldrh r5, [r4, #0x02]
movs r0, #0x00
movs r1, #0x05
movs r2, #0x0E
bl map_getBufferPtr2d
adds r1, r0, #0x0
mov r0, r9
str r0, [sp, #0x000]
mov r0, r8
str r0, [sp, #0x004]
adds r0, r7, #0x0
movs r2, #0xA0
lsls r2, r2, #0x01
movs r3, #0x0C
bl sub_800E728
adds r4, r5, #0x0
movs r0, #0x00
movs r1, #0x08
movs r2, #0x0E
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
movs r2, #0xB0
lsls r2, r2, #0x01
movs r3, #0x0F
bl sub_800C6D4
b _08008F94
_08008EDC: .4byte 0x000011E4
_08008EE0:
bl save_getSavePointer_805D9B0
lsls r4, r4, #0x05
lsls r6, r6, #0x07
adds r0, r6, r0
adds r0, r4, r0
movs r5, #0xB9
lsls r5, r5, #0x02
adds r0, r0, r5
ldrb r7, [r0, #0x00]
bl save_getSavePointer_805D9B0
adds r0, r6, r0
adds r0, r4, r0
adds r0, r0, r5
ldrh r5, [r0, #0x02]
movs r0, #0x00
movs r1, #0x05
movs r2, #0x0B
bl map_getBufferPtr2d
adds r1, r0, #0x0
movs r0, #0xD0
lsls r0, r0, #0x01
mov r9, r0
str r0, [sp, #0x000]
movs r0, #0x0F
mov r8, r0
str r0, [sp, #0x004]
adds r0, r7, #0x0
movs r2, #0xA0
lsls r2, r2, #0x01
movs r3, #0x0C
bl sub_800E728
movs r0, #0x00
movs r1, #0x08
movs r2, #0x0B
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r5, #0x0
movs r2, #0xB0
lsls r2, r2, #0x01
movs r3, #0x0F
bl sub_800C6D4
bl save_getSavePointer_805D9B0
adds r0, r6, r0
adds r0, r4, r0
movs r5, #0xBE
lsls r5, r5, #0x02
adds r0, r0, r5
ldrb r7, [r0, #0x00]
bl save_getSavePointer_805D9B0
adds r6, r6, r0
adds r4, r4, r6
adds r4, r4, r5
ldrh r5, [r4, #0x02]
movs r0, #0x00
movs r1, #0x05
movs r2, #0x0E
bl map_getBufferPtr2d
adds r1, r0, #0x0
mov r0, r9
str r0, [sp, #0x000]
mov r0, r8
str r0, [sp, #0x004]
adds r0, r7, #0x0
movs r2, #0xA0
lsls r2, r2, #0x01
movs r3, #0x0C
bl sub_800E728
adds r4, r5, #0x0
movs r0, #0x00
movs r1, #0x08
movs r2, #0x0E
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
movs r2, #0xB0
lsls r2, r2, #0x01
movs r3, #0x0F
bl sub_800C6D4
_08008F94:
add sp, #0x008
pop {r3, r4}
mov r8, r3
mov r9, r4
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
thumb_func_start sub_8008FA4
sub_8008FA4:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x018
mov r9, r1
movs r1, #0xE7
lsls r1, r1, #0x03
adds r1, r1, r0
mov r8, r1
movs r0, #0x10
subs r0, r0, r2
str r0, [sp, #0x00C]
cmp r2, #0x01
bgt _08008FC6
movs r0, #0x0E
_08008FC6:
str r0, [sp, #0x008]
cmp r2, #0x03
ble _08008FD2
movs r0, #0x10
subs r0, r0, r2
b _08008FD4
_08008FD2:
movs r0, #0x0C
_08008FD4:
str r0, [sp, #0x004]
movs r0, #0x0A
str r0, [sp, #0x000]
movs r6, #0x00
mov r0, r9
lsls r0, r0, #0x01
mov r10, r0
add r7, sp, #0x010
mov r1, r9
lsls r1, r1, #0x02
str r1, [sp, #0x014]
ldr r5, _0800910C @ =0x0000053C
add r5, r8
_08008FEE:
lsls r0, r6, #0x06
ldr r1, _08009110 @ =0x080B119C
adds r0, r0, r1
adds r1, r5, #0x0
movs r2, #0x0C
bl CpuSet
adds r5, #0x18
adds r6, #0x01
cmp r6, #0x07
ble _08008FEE
mov r1, r8
ldr r0, [r1, #0x0C]
cmp r0, #0x00
beq _0800904A
movs r6, #0x00
mov r0, r10
add r0, r9
lsls r0, r0, #0x04
ldr r2, _0800910C @ =0x0000053C
add r2, r8
ldr r4, _08009114 @ =0x00000FFF
ldr r1, _08009118 @ =0xFFFFB000
adds r5, r1, #0x0
mov r1, r10
adds r1, #0x01
adds r3, r0, r2
lsls r0, r1, #0x01
adds r0, r0, r1
lsls r0, r0, #0x03
adds r2, r0, r2
_0800902C:
ldrh r1, [r3, #0x00]
adds r0, r4, #0x0
ands r0, r1
orrs r0, r5
strh r0, [r3, #0x00]
ldrh r1, [r2, #0x00]
adds r0, r4, #0x0
ands r0, r1
orrs r0, r5
strh r0, [r2, #0x00]
adds r3, #0x02
adds r2, #0x02
adds r6, #0x01
cmp r6, #0x0B
ble _0800902C
_0800904A:
movs r6, #0x00
adds r5, r7, #0x0
_0800904E:
movs r0, #0x00
strh r0, [r5, #0x00]
adds r2, r6, #0x0
adds r2, #0x0A
movs r0, #0x00
movs r1, #0x11
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r5, #0x0
ldr r2, _0800911C @ =0x0100000C
bl CpuSet
adds r6, #0x01
cmp r6, #0x07
ble _0800904E
movs r6, #0x00
mov r5, sp
ldr r7, _08009120 @ =0x00000554
add r7, r8
ldr r4, _0800910C @ =0x0000053C
add r4, r8
_0800907A:
cmp r6, r9
beq _080090A8
ldr r2, [r5, #0x00]
movs r0, #0x00
movs r1, #0x11
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
movs r2, #0x0C
bl CpuSet
ldr r2, [r5, #0x00]
adds r2, #0x01
movs r0, #0x00
movs r1, #0x11
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r7, #0x0
movs r2, #0x0C
bl CpuSet
_080090A8:
adds r5, #0x04
adds r7, #0x30
adds r4, #0x30
adds r6, #0x01
cmp r6, #0x03
ble _0800907A
mov r4, r10
add r4, r9
lsls r4, r4, #0x04
ldr r1, _0800910C @ =0x0000053C
adds r5, r4, r1
add r5, r8
ldr r6, [sp, #0x014]
add r6, sp
ldr r2, [r6, #0x00]
movs r0, #0x00
movs r1, #0x11
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r5, #0x0
movs r2, #0x0C
bl CpuSet
ldr r0, _08009120 @ =0x00000554
adds r4, r4, r0
add r4, r8
ldr r2, [r6, #0x00]
adds r2, #0x01
movs r0, #0x00
movs r1, #0x11
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
movs r2, #0x0C
bl CpuSet
movs r0, #0x01
bl map_setBufferDirty
add sp, #0x018
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_0800910C: .4byte 0x0000053C
_08009110: .4byte 0x080B119C
_08009114: .4byte 0x00000FFF
_08009118: .4byte 0xFFFFB000
_0800911C: .4byte 0x0100000C
_08009120: .4byte 0x00000554
thumb_func_start sub_8009124
sub_8009124:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x010
mov r10, r0
adds r2, r1, #0x0
movs r4, #0xE7
lsls r4, r4, #0x03
add r4, r10
ldr r0, _08009170 @ =0x000007E4
add r0, r10
ldr r0, [r0, #0x00]
cmp r0, #0x00
beq _0800914E
movs r1, #0xFD
lsls r1, r1, #0x03
add r1, r10
movs r0, #0x00
str r0, [r1, #0x00]
_0800914E:
movs r0, #0xFD
lsls r0, r0, #0x03
add r0, r10
ldr r0, [r0, #0x00]
movs r7, #0xFE
lsls r7, r7, #0x03
add r7, r10
ldr r6, _08009174 @ =0x000007F2
add r6, r10
cmp r0, #0x0A
bls _08009166
b _08009520
_08009166:
lsls r0, r0, #0x02
ldr r1, _08009178 @ =0x0800917C
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
_08009170: .4byte 0x000007E4
_08009174: .4byte 0x000007F2
_08009178: .4byte 0x0800917C
.byte 0xA8, 0x91, 0x00, 0x08, 0xCC, 0x91, 0x00, 0x08, 0x1E, 0x92, 0x00, 0x08, 0xD8, 0x93, 0x00, 0x08
.byte 0x26, 0x94, 0x00, 0x08, 0x2E, 0x94, 0x00, 0x08, 0x3E, 0x94, 0x00, 0x08, 0x20, 0x95, 0x00, 0x08
.byte 0x8E, 0x94, 0x00, 0x08, 0x9E, 0x94, 0x00, 0x08, 0xEE, 0x94, 0x00, 0x08, 0x22, 0x1C, 0xAC, 0x32
.byte 0x10, 0x68, 0x27, 0x1C, 0xB8, 0x37, 0x26, 0x1C, 0xBA, 0x36, 0x00, 0x28, 0x00, 0xD1, 0xB1, 0xE1
.byte 0x00, 0x21, 0x11, 0x60, 0x20, 0x1C, 0xB4, 0x30, 0x01, 0x60, 0x21, 0x1C, 0xB0, 0x31, 0xF8, 0xE0
.byte 0x21, 0x1C, 0xB4, 0x31, 0x08, 0x68, 0x01, 0x30, 0x08, 0x60, 0x10, 0x28, 0x1A, 0xDC, 0x0C, 0x49
.byte 0x80, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00
.byte 0x40, 0x18, 0x03, 0x68, 0x21, 0x1C, 0xB8, 0x31, 0x00, 0x20, 0x0A, 0x5E, 0xA0, 0x20, 0x80, 0x1A
.byte 0x58, 0x43, 0xC0, 0x13, 0x0A, 0x88, 0x80, 0x18, 0x08, 0x80, 0x0F, 0x1C, 0x88, 0xE1, 0x00, 0x00
.byte 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x20, 0x08, 0x60, 0x21, 0x1C, 0xB0, 0x31, 0x08, 0x68, 0x01, 0x30
.byte 0x7B, 0xE1, 0x00, 0x2A, 0x0A, 0xD0, 0x04, 0x48, 0x21, 0x18, 0x08, 0x68, 0x00, 0x28, 0x05, 0xD1
.byte 0x01, 0x20, 0x08, 0x60, 0x2C, 0xE0, 0x00, 0x00, 0x2C, 0x05, 0x00, 0x00, 0xA5, 0x22, 0xD2, 0x00
.byte 0xA1, 0x18, 0x00, 0x20, 0x08, 0x60, 0x51, 0x46, 0x08, 0x69, 0x05, 0x28, 0x20, 0xD8, 0x80, 0x00
.byte 0x01, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x58, 0x92, 0x00, 0x08, 0x70, 0x92, 0x00, 0x08
.byte 0x74, 0x92, 0x00, 0x08, 0x74, 0x92, 0x00, 0x08, 0x84, 0x92, 0x00, 0x08, 0x8C, 0x92, 0x00, 0x08
.byte 0x74, 0x92, 0x00, 0x08, 0x00, 0x20, 0x0A, 0xE0, 0x50, 0x46, 0xF9, 0xF7, 0x3B, 0xFD, 0x21, 0x68
.byte 0x81, 0x42, 0x01, 0xD0, 0x00, 0x20, 0x02, 0xE0, 0x50, 0x46, 0xF9, 0xF7, 0x5F, 0xFD, 0x60, 0x60
.byte 0x22, 0x68, 0x92, 0x00, 0x61, 0x68, 0x52, 0x18, 0x1A, 0x4B, 0x02, 0x20, 0x18, 0x60, 0x1A, 0x48
.byte 0x02, 0x60, 0x50, 0x46, 0x00, 0x22, 0xFF, 0xF7, 0x7F, 0xFE, 0x18, 0x48, 0x50, 0x44, 0x00, 0x68
.byte 0x00, 0x28, 0x03, 0xD0, 0x52, 0x46, 0x10, 0x69, 0x03, 0x28, 0x53, 0xD1, 0x51, 0x46, 0x08, 0x69
.byte 0x03, 0x28, 0x2B, 0xD0, 0x00, 0x25, 0x22, 0x1C, 0xB0, 0x32, 0x03, 0x92, 0x27, 0x1C, 0xB8, 0x37
.byte 0x26, 0x1C, 0xBA, 0x36, 0x0E, 0x48, 0x80, 0x46, 0x27, 0xF0, 0xAE, 0xF8, 0x22, 0x68, 0x92, 0x00
.byte 0x52, 0x19, 0x51, 0x00, 0x89, 0x18, 0x09, 0x02, 0x0A, 0x4A, 0x89, 0x18, 0x42, 0x46, 0x0A, 0x4B
.byte 0x27, 0xF0, 0x7A, 0xF8, 0x80, 0x21, 0xC9, 0x00, 0x88, 0x44, 0x01, 0x35, 0x03, 0x2D, 0xEB, 0xDD
.byte 0x4E, 0xE0, 0x00, 0x00, 0xFC, 0xEB, 0x03, 0x02, 0x00, 0xEC, 0x03, 0x02, 0xE4, 0x11, 0x00, 0x00
.byte 0x00, 0x58, 0x00, 0x06, 0x00, 0x54, 0x02, 0x02, 0x80, 0x01, 0x00, 0x80, 0x22, 0x1C, 0xB0, 0x32
.byte 0x03, 0x92, 0x27, 0x1C, 0xB8, 0x37, 0x26, 0x1C, 0xBA, 0x36, 0x0B, 0x48, 0x81, 0x46, 0x00, 0x21
.byte 0x88, 0x46, 0x03, 0x25, 0x27, 0xF0, 0x80, 0xF8, 0x08, 0x49, 0x41, 0x44, 0x4A, 0x46, 0x08, 0x4B
.byte 0x27, 0xF0, 0x52, 0xF8, 0x80, 0x22, 0xD2, 0x00, 0x91, 0x44, 0xC0, 0x20, 0x80, 0x00, 0x80, 0x44
.byte 0x01, 0x3D, 0x00, 0x2D, 0xEE, 0xDA, 0x23, 0xE0, 0x00, 0x58, 0x00, 0x06, 0x00, 0x54, 0x02, 0x02
.byte 0x80, 0x01, 0x00, 0x80, 0x00, 0x25, 0x21, 0x1C, 0xB0, 0x31, 0x03, 0x91, 0x27, 0x1C, 0xB8, 0x37
.byte 0x26, 0x1C, 0xBA, 0x36, 0x15, 0x4A, 0x90, 0x46, 0x27, 0xF0, 0x5E, 0xF8, 0x22, 0x68, 0x92, 0x00
.byte 0x52, 0x19, 0x51, 0x00, 0x89, 0x18, 0x09, 0x02, 0x11, 0x4A, 0x89, 0x18, 0x42, 0x46, 0x11, 0x4B
.byte 0x27, 0xF0, 0x2A, 0xF8, 0x80, 0x20, 0xC0, 0x00, 0x80, 0x44, 0x01, 0x35, 0x03, 0x2D, 0xEB, 0xDD
.byte 0x0D, 0x49, 0x20, 0x68, 0x80, 0x00, 0x40, 0x18, 0x04, 0x68, 0x01, 0x20, 0x25, 0xF0, 0x42, 0xF9
.byte 0x01, 0x1C, 0xF0, 0x22, 0x52, 0x00, 0x89, 0x18, 0x20, 0x1C, 0x05, 0x22, 0x57, 0xF0, 0xCA, 0xFF
.byte 0x03, 0x99, 0x08, 0x68, 0x01, 0x30, 0x08, 0x60, 0xAC, 0xE0, 0x00, 0x00, 0x00, 0x58, 0x00, 0x06
.byte 0x00, 0x54, 0x02, 0x02, 0x80, 0x01, 0x00, 0x80, 0xA0, 0x94, 0x0D, 0x08, 0x21, 0x1C, 0xB4, 0x31
.byte 0x08, 0x68, 0x01, 0x30, 0x08, 0x60, 0x10, 0x28, 0x18, 0xDC, 0x0B, 0x49, 0x80, 0x06, 0x00, 0x14
.byte 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x01, 0x68
.byte 0x88, 0x00, 0x40, 0x18, 0x40, 0x01, 0x40, 0x42, 0xC0, 0x13, 0xA0, 0x30, 0x21, 0x1C, 0xB8, 0x31
.byte 0x08, 0x80, 0x0F, 0x1C, 0x84, 0xE0, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x20, 0x08, 0x60
.byte 0x21, 0x1C, 0xB0, 0x31, 0x08, 0x68, 0x01, 0x30, 0x77, 0xE0, 0x21, 0x1C, 0xB0, 0x31, 0x00, 0x20
.byte 0x73, 0xE0, 0x21, 0x1C, 0xB4, 0x31, 0x00, 0x20, 0x08, 0x60, 0x04, 0x39, 0x08, 0x68, 0x01, 0x30
.byte 0x6B, 0xE0, 0x21, 0x1C, 0xB4, 0x31, 0x08, 0x68, 0x01, 0x30, 0x08, 0x60, 0x10, 0x28, 0x19, 0xDC
.byte 0x0B, 0x49, 0x80, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D
.byte 0x80, 0x00, 0x40, 0x18, 0x03, 0x68, 0x21, 0x1C, 0xB8, 0x31, 0x00, 0x20, 0x0A, 0x5E, 0xA0, 0x20
.byte 0x80, 0x1A, 0x58, 0x43, 0xC0, 0x13, 0x0A, 0x88, 0x80, 0x18, 0x08, 0x80, 0x0F, 0x1C, 0x4F, 0xE0
.byte 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x20, 0x08, 0x60, 0x21, 0x1C, 0xB0, 0x31, 0x08, 0x68, 0x01, 0x30
.byte 0x43, 0xE0, 0x21, 0x1C, 0xB4, 0x31, 0x00, 0x20, 0x08, 0x60, 0x04, 0x39, 0x08, 0x68, 0x01, 0x30
.byte 0x3B, 0xE0, 0x21, 0x1C, 0xB4, 0x31, 0x08, 0x68, 0x01, 0x30, 0x08, 0x60, 0x10, 0x28, 0x19, 0xDC
.byte 0x0B, 0x49, 0x80, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D
.byte 0x80, 0x00, 0x40, 0x18, 0x03, 0x68, 0x21, 0x1C, 0xB8, 0x31, 0x00, 0x20, 0x0A, 0x5E, 0xA0, 0x20
.byte 0x80, 0x1A, 0x58, 0x43, 0xC0, 0x13, 0x0A, 0x88, 0x80, 0x18, 0x08, 0x80, 0x0F, 0x1C, 0x1F, 0xE0
.byte 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x20, 0x08, 0x60, 0x21, 0x1C, 0xB0, 0x31, 0x08, 0x68, 0x01, 0x30
.byte 0x13, 0xE0, 0x25, 0x1C, 0xB4, 0x35, 0x29, 0x68, 0x04, 0x29, 0x06, 0xDC, 0x50, 0x46, 0xFF, 0xF7
.byte 0x1F, 0xF9, 0x28, 0x68, 0x01, 0x30, 0x28, 0x60, 0x08, 0xE0, 0x50, 0x46, 0xFF, 0xF7, 0xA2, 0xF9
.byte 0x00, 0x20, 0x28, 0x60, 0x21, 0x1C, 0xB0, 0x31, 0x02, 0x20, 0x08, 0x60, 0x27, 0x1C, 0xB8, 0x37
.byte 0x26, 0x1C, 0xBA, 0x36
_08009520:
ldrh r0, [r7, #0x00]
adds r0, #0xC0
lsls r0, r0, #0x10
lsrs r0, r0, #0x10
ldr r2, _08009580 @ =0xFFFF0000
ldr r1, [sp, #0x008]
ands r1, r2
orrs r1, r0
str r1, [sp, #0x008]
ldrh r0, [r6, #0x00]
adds r0, #0x50
lsls r0, r0, #0x10
ldr r2, _08009584 @ =0x0000FFFF
ands r1, r2
orrs r1, r0
str r1, [sp, #0x008]
ldr r0, _08009588 @ =0x080C8DAC
movs r3, #0x80
lsls r3, r3, #0x01
movs r1, #0x00
str r1, [sp, #0x000]
str r1, [sp, #0x004]
add r1, sp, #0x008
adds r2, r3, #0x0
bl oam_renderCellData
ldrh r0, [r7, #0x00]
negs r0, r0
movs r1, #0x90
lsls r1, r1, #0x05
add r1, r10
ldrh r2, [r1, #0x00]
strh r0, [r1, #0x00]
ldrh r0, [r6, #0x00]
negs r0, r0
ldr r1, _0800958C @ =0x00001202
add r1, r10
ldrh r2, [r1, #0x00]
strh r0, [r1, #0x00]
add sp, #0x010
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_08009580: .4byte 0xFFFF0000
_08009584: .4byte 0x0000FFFF
_08009588: .4byte 0x080C8DAC
_0800958C: .4byte 0x00001202
thumb_func_start sub_8009590
sub_8009590:
push {r4, r5, lr}
add sp, #-0x008
adds r4, r0, #0x0
movs r0, #0xE7
lsls r0, r0, #0x03
adds r5, r4, r0
ldr r0, [r4, #0x10]
cmp r0, #0x00
beq _080095A4
b _08009746
_080095A4:
ldr r1, _080095C0 @ =0x000011E4
adds r0, r4, r1
ldr r0, [r0, #0x00]
cmp r0, #0x00
bne _080095C4
bl save_getSavePointer_805D9B0
ldr r2, [r5, #0x00]
lsls r1, r2, #0x01
adds r1, r1, r2
ldr r2, [r4, #0x14]
adds r2, r2, r1
adds r0, #0x46
b _080095D4
_080095C0: .4byte 0x000011E4
_080095C4:
bl save_getSavePointer_805D9B0
ldr r2, [r5, #0x00]
lsls r1, r2, #0x01
adds r1, r1, r2
ldr r2, [r4, #0x14]
adds r2, r2, r1
adds r0, #0x55
_080095D4:
adds r0, r0, r2
ldrb r2, [r0, #0x00]
adds r0, r5, #0x0
adds r0, #0xF8
str r2, [r0, #0x00]
adds r4, r0, #0x0
cmp r2, #0x07
bls _080095E6
b _08009746
_080095E6:
movs r2, #0x80
lsls r2, r2, #0x01
adds r0, r5, r2
ldr r0, [r0, #0x00]
adds r1, r5, #0x0
adds r1, #0xFC
cmp r0, #0x05
bls _080095F8
b _0800972E
_080095F8:
lsls r0, r0, #0x02
ldr r1, _08009604 @ =0x08009608
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
.byte 0x00, 0x00
_08009604: .4byte 0x08009608
.byte 0x20, 0x96, 0x00, 0x08, 0x60, 0x96, 0x00, 0x08, 0xA8, 0x96, 0x00, 0x08, 0xB2, 0x96, 0x00, 0x08
.byte 0xC4, 0x96, 0x00, 0x08, 0x26, 0x97, 0x00, 0x08, 0x26, 0xF0, 0x08, 0xFF, 0x21, 0x68, 0xC9, 0x01
.byte 0x84, 0x23, 0x5B, 0x00, 0xC9, 0x18, 0x69, 0x18, 0x09, 0x4A, 0x0A, 0x4B, 0x26, 0xF0, 0xD6, 0xFE
.byte 0x2A, 0x1C, 0xFC, 0x32, 0x00, 0x21, 0x11, 0x60, 0x82, 0x23, 0x5B, 0x00, 0xE8, 0x18, 0x01, 0x60
.byte 0x80, 0x20, 0x40, 0x00, 0x29, 0x18, 0x08, 0x68, 0x01, 0x30, 0x08, 0x60, 0x11, 0x1C, 0x6A, 0xE0
.byte 0x00, 0x48, 0x01, 0x06, 0x40, 0x00, 0x00, 0x80, 0x82, 0x22, 0x52, 0x00, 0xA9, 0x18, 0x08, 0x68
.byte 0x01, 0x30, 0x08, 0x60, 0x10, 0x28, 0x15, 0xDC, 0x09, 0x49, 0x80, 0x06, 0x00, 0x14, 0x00, 0x28
.byte 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0x2C, 0x1C
.byte 0xFC, 0x34, 0x41, 0x00, 0x09, 0x18, 0x48, 0x01, 0x09, 0x18, 0xC9, 0x13, 0x01, 0x31, 0x31, 0xE0
.byte 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x20, 0x08, 0x60, 0x80, 0x23, 0x5B, 0x00, 0xE9, 0x18, 0x38, 0xE0
.byte 0x29, 0x1C, 0xFC, 0x31, 0x80, 0x20, 0x40, 0x00, 0x3C, 0xE0, 0x82, 0x20, 0x40, 0x00, 0x29, 0x18
.byte 0x00, 0x20, 0x08, 0x60, 0x80, 0x22, 0x52, 0x00, 0xA9, 0x18, 0x2A, 0xE0, 0x82, 0x23, 0x5B, 0x00
.byte 0xE9, 0x18, 0x08, 0x68, 0x01, 0x30, 0x08, 0x60, 0x10, 0x28, 0x1D, 0xDC, 0x0D, 0x49, 0x80, 0x06
.byte 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18
.byte 0x00, 0x68, 0x2C, 0x1C, 0xFC, 0x34, 0x41, 0x00, 0x09, 0x18, 0x48, 0x01, 0x09, 0x18, 0x49, 0x42
.byte 0xC9, 0x13, 0x64, 0x31, 0xC8, 0x20, 0xC0, 0x01, 0x58, 0xF0, 0xD6, 0xFB, 0x20, 0x60, 0x21, 0x1C
.byte 0x11, 0xE0, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x20, 0x08, 0x60, 0x80, 0x20, 0x40, 0x00
.byte 0x29, 0x18, 0x08, 0x68, 0x01, 0x30, 0x08, 0x60, 0x29, 0x1C, 0xFC, 0x31, 0x03, 0xE0, 0x29, 0x1C
.byte 0xFC, 0x31, 0x00, 0x20, 0x08, 0x60
_0800972E:
ldr r3, [r1, #0x00]
cmp r3, #0x00
beq _08009746
ldr r0, _08009750 @ =0x080C8FE4
adds r1, r5, #0x0
adds r1, #0xF4
movs r2, #0x00
str r2, [sp, #0x000]
str r2, [sp, #0x004]
adds r2, r3, #0x0
bl oam_renderCellData
_08009746:
add sp, #0x008
pop {r4, r5}
pop {r0}
bx r0
.byte 0x00, 0x00
_08009750: .4byte 0x080C8FE4
thumb_func_start sub_8009754
sub_8009754:
push {r4, r5, r6, r7, lr}
mov r7, r9
mov r6, r8
push {r6, r7}
add sp, #-0x008
adds r4, r0, #0x0
movs r0, #0xE7
lsls r0, r0, #0x03
adds r5, r4, r0
ldr r0, [r4, #0x10]
cmp r0, #0x00
beq _0800976E
b _0800997A
_0800976E:
ldr r1, _0800978C @ =0x000011E4
adds r0, r4, r1
ldr r0, [r0, #0x00]
cmp r0, #0x00
bne _08009790
bl save_getSavePointer_805D9B0
ldr r2, [r5, #0x00]
lsls r1, r2, #0x01
adds r1, r1, r2
ldr r2, [r4, #0x14]
adds r2, r2, r1
adds r0, #0x28
b _080097A0
.byte 0x00, 0x00
_0800978C: .4byte 0x000011E4
_08009790:
bl save_getSavePointer_805D9B0
ldr r2, [r5, #0x00]
lsls r1, r2, #0x01
adds r1, r1, r2
ldr r2, [r4, #0x14]
adds r2, r2, r1
adds r0, #0x37
_080097A0:
adds r0, r0, r2
movs r1, #0x00
ldsb r1, [r0, r1]
cmp r1, #0x00
beq _080097C6
cmp r1, #0x00
bgt _080097B8
movs r0, #0x01
negs r0, r0
cmp r1, r0
beq _080097C6
b _080097C0
_080097B8:
cmp r1, #0x01
beq _080097C6
cmp r1, #0x02
beq _080097C6
_080097C0:
adds r7, r5, #0x0
adds r7, #0xD8
b _080097CE
_080097C6:
adds r0, r5, #0x0
adds r0, #0xD8
str r1, [r0, #0x00]
adds r7, r0, #0x0
_080097CE:
ldr r0, [r7, #0x00]
cmp r0, #0x00
bge _080097D6
b _0800997A
_080097D6:
adds r0, r5, #0x0
adds r0, #0xEC
ldr r2, [r0, #0x00]
adds r3, r0, #0x0
adds r1, r5, #0x0
adds r1, #0xE8
cmp r2, #0x05
bls _080097E8
b _080098E0
_080097E8:
lsls r0, r2, #0x02
ldr r1, _080097F4 @ =0x080097F8
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
.byte 0x00, 0x00
_080097F4: .4byte 0x080097F8
.byte 0x10, 0x98, 0x00, 0x08, 0x28, 0x98, 0x00, 0x08, 0x64, 0x98, 0x00, 0x08, 0x6E, 0x98, 0x00, 0x08
.byte 0x80, 0x98, 0x00, 0x08, 0xD8, 0x98, 0x00, 0x08, 0x2A, 0x1C, 0xE8, 0x32, 0x00, 0x21, 0x11, 0x60
.byte 0x28, 0x1C, 0xF0, 0x30, 0x01, 0x60, 0x18, 0x68, 0x01, 0x30, 0x18, 0x60, 0x11, 0x1C, 0x5B, 0xE0
.byte 0x29, 0x1C, 0xF0, 0x31, 0x08, 0x68, 0x01, 0x30, 0x08, 0x60, 0x10, 0x28, 0x48, 0xDC, 0x0A, 0x49
.byte 0x80, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00
.byte 0x40, 0x18, 0x00, 0x68, 0x2C, 0x1C, 0xE8, 0x34, 0x41, 0x00, 0x09, 0x18, 0x48, 0x01, 0x09, 0x18
.byte 0xC9, 0x13, 0x01, 0x31, 0x2B, 0xE0, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0x29, 0x1C, 0xE8, 0x31
.byte 0x80, 0x20, 0x40, 0x00, 0x37, 0xE0, 0x29, 0x1C, 0xF0, 0x31, 0x00, 0x20, 0x08, 0x60, 0x18, 0x68
.byte 0x01, 0x30, 0x18, 0x60, 0x08, 0x39, 0x2F, 0xE0, 0x29, 0x1C, 0xF0, 0x31, 0x08, 0x68, 0x01, 0x30
.byte 0x08, 0x60, 0x10, 0x28, 0x1C, 0xDC, 0x0D, 0x49, 0x80, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA
.byte 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0x2C, 0x1C, 0xE8, 0x34
.byte 0x41, 0x00, 0x09, 0x18, 0x48, 0x01, 0x09, 0x18, 0x49, 0x42, 0xC9, 0x13, 0x64, 0x31, 0xC8, 0x20
.byte 0xC0, 0x01, 0x58, 0xF0, 0xF9, 0xFA, 0x20, 0x60, 0x21, 0x1C, 0x0D, 0xE0, 0x5C, 0x64, 0x0E, 0x08
.byte 0x00, 0x20, 0x08, 0x60, 0x18, 0x68, 0x01, 0x30, 0x18, 0x60, 0x29, 0x1C, 0xE8, 0x31, 0x03, 0xE0
.byte 0x29, 0x1C, 0xE8, 0x31, 0x00, 0x20, 0x08, 0x60
_080098E0:
ldr r3, [r1, #0x00]
cmp r3, #0x00
beq _080098F8
ldr r0, _08009988 @ =0x080C8F60
adds r1, r5, #0x0
adds r1, #0xD4
movs r2, #0x00
str r2, [sp, #0x000]
str r2, [sp, #0x004]
adds r2, r3, #0x0
bl oam_renderCellData
_080098F8:
mov r8, r7
movs r0, #0xDC
adds r0, r0, r5
mov r9, r0
mov r1, r8
ldr r2, [r1, #0x00]
ldr r0, [r0, #0x00]
adds r6, r5, #0x0
adds r6, #0xE4
cmp r2, r0
beq _0800993E
ldr r1, _0800998C @ =0x080D961C
lsls r0, r2, #0x02
adds r0, r0, r1
ldr r4, [r0, #0x00]
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
movs r0, #0xE0
lsls r0, r0, #0x01
adds r1, r1, r0
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
movs r0, #0x01
bl pltt_setDirtyFlag
mov r1, r8
ldr r0, [r1, #0x00]
mov r1, r9
str r0, [r1, #0x00]
movs r0, #0x0A
str r0, [r6, #0x00]
_0800993E:
ldr r0, [r6, #0x00]
adds r0, #0x01
str r0, [r6, #0x00]
cmp r0, #0x06
ble _0800997A
ldr r1, _08009990 @ =0x080DBE28
ldr r0, [r7, #0x00]
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r3, [r0, #0x00]
movs r0, #0x00
str r0, [r6, #0x00]
adds r2, r5, #0x0
adds r2, #0xE0
ldr r0, [r2, #0x00]
adds r0, #0x01
movs r1, #0x0F
ands r0, r1
str r0, [r2, #0x00]
lsls r0, r0, #0x02
adds r0, r0, r3
ldr r0, [r0, #0x00]
ldr r1, _08009994 @ =0x02015E00
bl LZ77UnCompWram
movs r0, #0xA7
lsls r0, r0, #0x03
adds r1, r5, r0
movs r0, #0x01
str r0, [r1, #0x00]
_0800997A:
add sp, #0x008
pop {r3, r4}
mov r8, r3
mov r9, r4
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_08009988: .4byte 0x080C8F60
_0800998C: .4byte 0x080D961C
_08009990: .4byte 0x080DBE28
_08009994: .4byte 0x02015E00
thumb_func_start sub_8009998
sub_8009998:
push {r4, r5, r6, r7, lr}
mov r7, r8
push {r7}
add sp, #-0x008
mov r8, r0
movs r7, #0xE7
lsls r7, r7, #0x03
add r7, r8
ldr r0, _080099C0 @ =0x00000C58
add r0, r8
ldr r0, [r0, #0x00]
cmp r0, #0x09
bls _080099B4
b _08009C3A
_080099B4:
lsls r0, r0, #0x02
ldr r1, _080099C4 @ =0x080099C8
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
.byte 0x00, 0x00
_080099C0: .4byte 0x00000C58
_080099C4: .4byte 0x080099C8
.byte 0x3A, 0x9C, 0x00, 0x08, 0xF0, 0x99, 0x00, 0x08, 0x58, 0x9A, 0x00, 0x08, 0x30, 0x9C, 0x00, 0x08
.byte 0x94, 0x9A, 0x00, 0x08, 0xF8, 0x9A, 0x00, 0x08, 0x3A, 0x9B, 0x00, 0x08, 0x70, 0x9B, 0x00, 0x08
.byte 0xE0, 0x9B, 0x00, 0x08, 0x30, 0x9C, 0x00, 0x08, 0x15, 0x4A, 0x41, 0x46, 0x88, 0x69, 0x80, 0x00
.byte 0x81, 0x18, 0x0C, 0x88, 0x02, 0x32, 0x80, 0x18, 0x06, 0x88, 0x20, 0x1C, 0x56, 0xF0, 0x8C, 0xFA
.byte 0x10, 0x4D, 0x11, 0x48, 0xE4, 0x00, 0x24, 0x18, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00
.byte 0x40, 0x19, 0x00, 0x68, 0x56, 0xF0, 0x78, 0xFB, 0xA1, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00
.byte 0x40, 0x19, 0x00, 0x68, 0x01, 0x21, 0x32, 0x1C, 0x57, 0xF0, 0x26, 0xFA, 0xA4, 0x22, 0xD2, 0x00
.byte 0xB9, 0x18, 0x08, 0x68, 0x01, 0x30, 0x08, 0x60, 0x04, 0x4B, 0xF9, 0x18, 0xF7, 0xE0, 0x00, 0x00
.byte 0xFC, 0x95, 0x0D, 0x08, 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08, 0x24, 0x05, 0x00, 0x00
.byte 0x0A, 0x48, 0x39, 0x18, 0x08, 0x68, 0x01, 0x30, 0x08, 0x60, 0x20, 0x28, 0x10, 0xDC, 0x41, 0x00
.byte 0x09, 0x18, 0x08, 0x01, 0x40, 0x1A, 0xC0, 0x00, 0x40, 0x42, 0x00, 0x28, 0x00, 0xDA, 0x1F, 0x30
.byte 0x40, 0x11, 0x8C, 0x21, 0x49, 0x00, 0x40, 0x18, 0xC0, 0xE0, 0x00, 0x00, 0x24, 0x05, 0x00, 0x00
.byte 0xA4, 0x20, 0xC0, 0x00, 0x39, 0x18, 0x08, 0x68, 0x01, 0x30, 0xD1, 0xE0, 0x14, 0x4A, 0x43, 0x46
.byte 0x98, 0x69, 0x80, 0x00, 0x81, 0x18, 0x0C, 0x88, 0x02, 0x32, 0x80, 0x18, 0x06, 0x88, 0x20, 0x1C
.byte 0x56, 0xF0, 0x3A, 0xFA, 0x0F, 0x4D, 0x10, 0x48, 0xE4, 0x00, 0x24, 0x18, 0xA1, 0x88, 0x48, 0x00
.byte 0x40, 0x18, 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x56, 0xF0, 0x26, 0xFB, 0xA1, 0x88, 0x48, 0x00
.byte 0x40, 0x18, 0x80, 0x00, 0x40, 0x19, 0x00, 0x68, 0x01, 0x21, 0x32, 0x1C, 0x57, 0xF0, 0xD4, 0xF9
.byte 0xA4, 0x20, 0xC0, 0x00, 0x39, 0x18, 0x08, 0x68, 0x01, 0x30, 0x08, 0x60, 0x03, 0x4A, 0xA5, 0xE0
.byte 0xFC, 0x95, 0x0D, 0x08, 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08, 0x24, 0x05, 0x00, 0x00
.byte 0x0A, 0x4B, 0xFA, 0x18, 0x10, 0x68, 0x41, 0x1C, 0x11, 0x60, 0x10, 0x29, 0x10, 0xDC, 0x48, 0x00
.byte 0x40, 0x18, 0xC0, 0x00, 0x40, 0x18, 0xC0, 0x00, 0x40, 0x42, 0x00, 0x28, 0x00, 0xDA, 0x0F, 0x30
.byte 0x00, 0x11, 0x8C, 0x21, 0x49, 0x00, 0x40, 0x18, 0x70, 0xE0, 0x00, 0x00, 0x24, 0x05, 0x00, 0x00
.byte 0xA4, 0x21, 0xC9, 0x00, 0x78, 0x18, 0x01, 0x68, 0x01, 0x31, 0x01, 0x60, 0x00, 0x20, 0x10, 0x60
.byte 0x7F, 0xE0, 0x9C, 0x20, 0x56, 0xF0, 0xF0, 0xF9, 0x00, 0x22, 0xA3, 0x23, 0xDB, 0x00, 0xF9, 0x18
.byte 0x07, 0x48, 0x08, 0x60, 0x04, 0x33, 0xF9, 0x18, 0x00, 0x01, 0x08, 0x60, 0xA4, 0x20, 0xC0, 0x00
.byte 0x39, 0x18, 0x08, 0x68, 0x01, 0x30, 0x08, 0x60, 0x02, 0x49, 0x78, 0x18, 0x02, 0x60, 0x68, 0xE0
.byte 0x00, 0x80, 0xFF, 0xFF, 0x24, 0x05, 0x00, 0x00, 0x11, 0x4A, 0xBB, 0x18, 0x18, 0x68, 0x41, 0x1C
.byte 0x19, 0x60, 0x20, 0x29, 0x22, 0xDC, 0xC8, 0x00, 0x40, 0x1A, 0xC0, 0x00, 0x40, 0x42, 0x00, 0x28
.byte 0x00, 0xDA, 0x1F, 0x30, 0x40, 0x11, 0x50, 0x30, 0x0A, 0x4B, 0xF9, 0x18, 0x08, 0x80, 0x0A, 0x48
.byte 0x39, 0x18, 0x08, 0x33, 0xFA, 0x18, 0x02, 0x23, 0xD0, 0x5E, 0x0B, 0x88, 0xC0, 0x18, 0x08, 0x80
.byte 0xA3, 0x20, 0xC0, 0x00, 0x39, 0x18, 0x10, 0x68, 0x09, 0x68, 0x40, 0x1A, 0x10, 0x60, 0x40, 0xE0
.byte 0x24, 0x05, 0x00, 0x00, 0x14, 0x05, 0x00, 0x00, 0x16, 0x05, 0x00, 0x00, 0x05, 0x4A, 0xB9, 0x18
.byte 0x00, 0x22, 0x68, 0x20, 0x08, 0x80, 0x1A, 0x60, 0xA4, 0x23, 0xDB, 0x00, 0xF9, 0x18, 0x08, 0x68
.byte 0x01, 0x30, 0x2D, 0xE0, 0x16, 0x05, 0x00, 0x00, 0x0C, 0x48, 0x3A, 0x18, 0x10, 0x68, 0x41, 0x1C
.byte 0x11, 0x60, 0x10, 0x29, 0x18, 0xDC, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x40, 0x18, 0xC0, 0x00
.byte 0x40, 0x42, 0x00, 0x28, 0x00, 0xDA, 0x0F, 0x30, 0x00, 0x11, 0x18, 0x30, 0x04, 0x4A, 0xB9, 0x18
.byte 0x08, 0x80, 0x04, 0x4B, 0xF9, 0x18, 0x68, 0x20, 0x08, 0x80, 0x12, 0xE0, 0x24, 0x05, 0x00, 0x00
.byte 0x14, 0x05, 0x00, 0x00, 0x16, 0x05, 0x00, 0x00, 0x00, 0x20, 0x10, 0x60, 0xA4, 0x20, 0xC0, 0x00
.byte 0x39, 0x18, 0x08, 0x68, 0x01, 0x30, 0x03, 0xE0, 0xA4, 0x22, 0xD2, 0x00, 0xB9, 0x18, 0x00, 0x20
.byte 0x08, 0x60
_08009C3A:
movs r3, #0xA4
lsls r3, r3, #0x03
adds r0, r7, r3
ldr r0, [r0, #0x00]
cmp r0, #0x00
beq _08009C74
mov r0, r8
ldr r1, [r0, #0x18]
movs r0, #0x07
str r0, [sp, #0x000]
mov r0, r8
movs r2, #0x20
movs r3, #0x00
bl renderCharacterSprites
ldr r2, _08009C80 @ =0x00000514
adds r1, r7, r2
movs r2, #0x00
str r2, [sp, #0x000]
str r2, [sp, #0x004]
movs r2, #0xDE
movs r3, #0xDE
bl oam_renderCellData
movs r3, #0xA7
lsls r3, r3, #0x03
adds r1, r7, r3
movs r0, #0x01
str r0, [r1, #0x00]
_08009C74:
add sp, #0x008
pop {r3}
mov r8, r3
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_08009C80: .4byte 0x00000514
thumb_func_start sub_8009C84
sub_8009C84:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x010
mov r10, r0
movs r7, #0xE7
lsls r7, r7, #0x03
add r7, r10
ldr r0, [r0, #0x10]
cmp r0, #0x01
beq _08009CA0
b _08009F60
_08009CA0:
ldr r0, _08009CB8 @ =0x00000C44
add r0, r10
ldr r0, [r0, #0x00]
cmp r0, #0x06
bls _08009CAC
b _08009E70
_08009CAC:
lsls r0, r0, #0x02
ldr r1, _08009CBC @ =0x08009CC0
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
.byte 0x00, 0x00
_08009CB8: .4byte 0x00000C44
_08009CBC: .4byte 0x08009CC0
.byte 0x70, 0x9E, 0x00, 0x08, 0xDC, 0x9C, 0x00, 0x08, 0xFC, 0x9C, 0x00, 0x08, 0x50, 0x9D, 0x00, 0x08
.byte 0x70, 0x9D, 0x00, 0x08, 0x00, 0x9E, 0x00, 0x08, 0x60, 0x9E, 0x00, 0x08, 0xA1, 0x21, 0xC9, 0x00
.byte 0x78, 0x18, 0x00, 0x22, 0x02, 0x60, 0x04, 0x4B, 0xF9, 0x18, 0x02, 0x20, 0x08, 0x60, 0xA2, 0x21
.byte 0xC9, 0x00, 0x78, 0x18, 0x02, 0x60, 0xBB, 0xE0, 0x0C, 0x05, 0x00, 0x00, 0xA2, 0x23, 0xDB, 0x00
.byte 0xFA, 0x18, 0x10, 0x68, 0x01, 0x30, 0x10, 0x60, 0x10, 0x28, 0x17, 0xDC, 0x0A, 0x49, 0x80, 0x06
.byte 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18
.byte 0x00, 0x68, 0xA1, 0x21, 0xC9, 0x00, 0x7C, 0x18, 0x41, 0x00, 0x09, 0x18, 0x48, 0x01, 0x09, 0x18
.byte 0xC9, 0x13, 0x01, 0x31, 0x81, 0xE0, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0x03, 0x4B, 0xF8, 0x18
.byte 0x03, 0x21, 0x01, 0x60, 0x00, 0x20, 0x10, 0x60, 0x92, 0xE0, 0x00, 0x00, 0x0C, 0x05, 0x00, 0x00
.byte 0xA1, 0x20, 0xC0, 0x00, 0x39, 0x18, 0x80, 0x20, 0x40, 0x00, 0x08, 0x60, 0x03, 0x4A, 0xB9, 0x18
.byte 0x00, 0x20, 0x08, 0x60, 0xA6, 0x23, 0xDB, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x0C, 0x05, 0x00, 0x00
.byte 0xA2, 0x21, 0xC9, 0x00, 0x78, 0x18, 0x00, 0x25, 0x05, 0x60, 0x1E, 0x4A, 0xB9, 0x18, 0x05, 0x20
.byte 0x08, 0x60, 0x02, 0xA8, 0x05, 0x80, 0x00, 0x20, 0x05, 0x21, 0x0B, 0x22, 0x24, 0xF0, 0x90, 0xFC
.byte 0x01, 0x1C, 0x19, 0x4E, 0x02, 0xA8, 0x32, 0x1C, 0x57, 0xF0, 0xDA, 0xFA, 0x6C, 0x46, 0x0A, 0x34
.byte 0x25, 0x80, 0x00, 0x20, 0x05, 0x21, 0x0C, 0x22, 0x24, 0xF0, 0x82, 0xFC, 0x01, 0x1C, 0x20, 0x1C
.byte 0x32, 0x1C, 0x57, 0xF0, 0xCD, 0xFA, 0x03, 0xAC, 0x25, 0x80, 0x00, 0x20, 0x05, 0x21, 0x0E, 0x22
.byte 0x24, 0xF0, 0x76, 0xFC, 0x01, 0x1C, 0x20, 0x1C, 0x32, 0x1C, 0x57, 0xF0, 0xC1, 0xFA, 0x6C, 0x46
.byte 0x0E, 0x34, 0x25, 0x80, 0x00, 0x20, 0x05, 0x21, 0x0F, 0x22, 0x24, 0xF0, 0x69, 0xFC, 0x01, 0x1C
.byte 0x20, 0x1C, 0x32, 0x1C, 0x57, 0xF0, 0xB4, 0xFA, 0x04, 0x4B, 0xF9, 0x18, 0x01, 0x20, 0x08, 0x60
.byte 0x3E, 0xE0, 0x00, 0x00, 0x0C, 0x05, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x01, 0x34, 0x05, 0x00, 0x00
.byte 0xA2, 0x20, 0xC0, 0x00, 0x39, 0x18, 0x08, 0x68, 0x01, 0x30, 0x08, 0x60, 0x10, 0x28, 0x1D, 0xDC
.byte 0x0D, 0x49, 0x80, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D
.byte 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0xA1, 0x21, 0xC9, 0x00, 0x7C, 0x18, 0x41, 0x00, 0x09, 0x18
.byte 0x48, 0x01, 0x09, 0x18, 0x49, 0x42, 0xC9, 0x13, 0x64, 0x31, 0xC8, 0x20, 0xC0, 0x01, 0x58, 0xF0
.byte 0x37, 0xF8, 0x20, 0x60, 0x14, 0xE0, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x20, 0x08, 0x60
.byte 0x02, 0x4A, 0xB9, 0x18, 0x06, 0x20, 0x08, 0x60, 0x0A, 0xE0, 0x00, 0x00, 0x0C, 0x05, 0x00, 0x00
.byte 0xA1, 0x23, 0xDB, 0x00, 0xF8, 0x18, 0x00, 0x21, 0x01, 0x60, 0x41, 0x4A, 0xB8, 0x18, 0x01, 0x60
_08009E70:
movs r3, #0xA1
lsls r3, r3, #0x03
adds r3, r3, r7
mov r8, r3
ldr r3, [r3, #0x00]
cmp r3, #0x00
beq _08009F60
ldr r0, _08009F74 @ =0x080C8F68
ldr r1, _08009F78 @ =0x080D95E8
movs r4, #0x00
str r4, [sp, #0x000]
str r4, [sp, #0x004]
adds r2, r3, #0x0
bl oam_renderCellData
ldr r0, _08009F7C @ =0x080C8F7C
ldr r1, _08009F80 @ =0x080D95EC
mov r2, r8
ldr r3, [r2, #0x00]
str r4, [sp, #0x000]
str r4, [sp, #0x004]
adds r2, r3, #0x0
bl oam_renderCellData
ldr r0, _08009F84 @ =0x000011E4
add r0, r10
ldr r4, [r0, #0x00]
cmp r4, #0x00
bne _08009F60
ldr r0, [r7, #0x00]
lsls r0, r0, #0x02
ldr r1, [r7, #0x04]
adds r6, r0, r1
bl save_getSavePointer_805D9B0
lsls r3, r6, #0x02
mov r9, r3
adds r1, r3, r6
lsls r1, r1, #0x02
movs r2, #0xB2
lsls r2, r2, #0x03
adds r1, r1, r2
adds r0, r0, r1
ldrb r1, [r0, #0x0B]
movs r0, #0x01
ands r0, r1
ldr r5, _08009F88 @ =0x080B2230
cmp r0, #0x00
beq _08009ED4
ldr r5, _08009F8C @ =0x080B2250
_08009ED4:
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
movs r3, #0xF5
lsls r3, r3, #0x01
adds r1, r1, r3
adds r0, r5, #0x0
bl LZ77UnCompWram
movs r0, #0x01
bl pltt_setDirtyFlag
ldr r0, _08009F90 @ =0x00001130
add r0, r10
add r0, r9
ldr r0, [r0, #0x00]
cmp r0, #0x00
beq _08009F0C
ldr r0, _08009F94 @ =0x080C8FB4
ldr r1, _08009F98 @ =0x080D95F0
mov r2, r8
ldr r3, [r2, #0x00]
str r4, [sp, #0x000]
str r4, [sp, #0x004]
adds r2, r3, #0x0
bl oam_renderCellData
_08009F0C:
movs r4, #0x00
movs r5, #0x00
_08009F10:
lsls r0, r4, #0x02
movs r1, #0x8E
lsls r1, r1, #0x05
add r1, r10
adds r1, r1, r0
ldr r0, [r1, #0x00]
cmp r0, #0x00
beq _08009F42
ldr r0, _08009F9C @ =0x000011C8
add r0, r10
adds r0, r0, r4
ldrb r0, [r0, #0x00]
cmp r0, r6
bne _08009F42
movs r3, #0xA1
lsls r3, r3, #0x03
adds r0, r7, r3
ldr r3, [r0, #0x00]
str r5, [sp, #0x000]
str r5, [sp, #0x004]
ldr r0, _08009FA0 @ =0x080C8FBC
ldr r1, _08009FA4 @ =0x080D95F4
adds r2, r3, #0x0
bl oam_renderCellData
_08009F42:
adds r4, #0x01
cmp r4, #0x01
ble _08009F10
ldr r0, _08009FA8 @ =0x080C8FC4
ldr r1, _08009F98 @ =0x080D95F0
movs r3, #0xA1
lsls r3, r3, #0x03
adds r2, r7, r3
ldr r3, [r2, #0x00]
movs r2, #0x00
str r2, [sp, #0x000]
str r2, [sp, #0x004]
adds r2, r3, #0x0
bl oam_renderCellData
_08009F60:
add sp, #0x010
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x0C, 0x05, 0x00, 0x00
_08009F74: .4byte 0x080C8F68
_08009F78: .4byte 0x080D95E8
_08009F7C: .4byte 0x080C8F7C
_08009F80: .4byte 0x080D95EC
_08009F84: .4byte 0x000011E4
_08009F88: .4byte 0x080B2230
_08009F8C: .4byte 0x080B2250
_08009F90: .4byte 0x00001130
_08009F94: .4byte 0x080C8FB4
_08009F98: .4byte 0x080D95F0
_08009F9C: .4byte 0x000011C8
_08009FA0: .4byte 0x080C8FBC
_08009FA4: .4byte 0x080D95F4
_08009FA8: .4byte 0x080C8FC4
thumb_func_start sub_8009FAC
sub_8009FAC:
push {r4, r5, r6, lr}
add sp, #-0x008
adds r6, r0, #0x0
movs r0, #0xE7
lsls r0, r0, #0x03
adds r5, r6, r0
ldr r1, _08009FD0 @ =0x00000804
adds r0, r6, r1
ldr r0, [r0, #0x00]
cmp r0, #0x05
bls _08009FC4
b _0800A102
_08009FC4:
lsls r0, r0, #0x02
ldr r1, _08009FD4 @ =0x08009FD8
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
.byte 0x00, 0x00
_08009FD0: .4byte 0x00000804
_08009FD4: .4byte 0x08009FD8
.byte 0xF0, 0x9F, 0x00, 0x08, 0x3E, 0xA0, 0x00, 0x08, 0x86, 0xA0, 0x00, 0x08, 0x90, 0xA0, 0x00, 0x08
.byte 0xA0, 0xA0, 0x00, 0x08, 0xFA, 0xA0, 0x00, 0x08, 0x30, 0x69, 0x01, 0x28, 0x02, 0xD0, 0x70, 0x69
.byte 0x81, 0x00, 0x00, 0xE0, 0x08, 0x21, 0x09, 0x4A, 0xB0, 0x18, 0x40, 0x18, 0x00, 0x68, 0x00, 0x28
.byte 0x0E, 0xD0, 0x28, 0x68, 0x04, 0x28, 0x0B, 0xD1, 0x28, 0x1C, 0xC8, 0x30, 0x00, 0x21, 0x01, 0x60
.byte 0x08, 0x30, 0x01, 0x60, 0x29, 0x1C, 0xCC, 0x31, 0x05, 0x20, 0x6D, 0xE0, 0x1C, 0x11, 0x00, 0x00
.byte 0x28, 0x1C, 0xC8, 0x30, 0x00, 0x21, 0x01, 0x60, 0x08, 0x30, 0x01, 0x60, 0x29, 0x1C, 0xCC, 0x31
.byte 0x08, 0x68, 0x01, 0x30, 0x60, 0xE0, 0x29, 0x1C, 0xD0, 0x31, 0x08, 0x68, 0x01, 0x30, 0x08, 0x60
.byte 0x10, 0x28, 0x15, 0xDC, 0x09, 0x49, 0x80, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30
.byte 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0x2C, 0x1C, 0xC8, 0x34, 0x41, 0x00
.byte 0x09, 0x18, 0x48, 0x01, 0x09, 0x18, 0xC9, 0x13, 0x01, 0x31, 0x30, 0xE0, 0x5C, 0x64, 0x0E, 0x08
.byte 0x00, 0x20, 0x08, 0x60, 0x29, 0x1C, 0xCC, 0x31, 0x08, 0x68, 0x01, 0x30, 0x3C, 0xE0, 0x29, 0x1C
.byte 0xC8, 0x31, 0x80, 0x20, 0x40, 0x00, 0x37, 0xE0, 0x29, 0x1C, 0xD0, 0x31, 0x00, 0x20, 0x08, 0x60
.byte 0x04, 0x39, 0x08, 0x68, 0x01, 0x30, 0x2F, 0xE0, 0x2A, 0x1C, 0xD0, 0x32, 0x10, 0x68, 0x01, 0x30
.byte 0x10, 0x60, 0x10, 0x28, 0x1C, 0xDC, 0x0D, 0x49, 0x80, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA
.byte 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0x2C, 0x1C, 0xC8, 0x34
.byte 0x41, 0x00, 0x09, 0x18, 0x48, 0x01, 0x09, 0x18, 0x49, 0x42, 0xC9, 0x13, 0x64, 0x31, 0xC8, 0x20
.byte 0xC0, 0x01, 0x57, 0xF0, 0xE9, 0xFE, 0x20, 0x60, 0x0F, 0xE0, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08
.byte 0x29, 0x1C, 0xC8, 0x31, 0x00, 0x20, 0x08, 0x60, 0x10, 0x60, 0x04, 0x31, 0x08, 0x68, 0x01, 0x30
.byte 0x02, 0xE0, 0x29, 0x1C, 0xC8, 0x31, 0x00, 0x20, 0x08, 0x60
_0800A102:
ldr r0, [r6, #0x10]
cmp r0, #0x03
beq _0800A178
adds r4, r5, #0x0
adds r4, #0xC8
ldr r0, [r4, #0x00]
cmp r0, #0x00
beq _0800A140
ldr r1, _0800A164 @ =0x080D9628
ldr r0, [r5, #0x00]
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r0, [r0, #0x00]
ldr r1, _0800A168 @ =0x02015C00
bl LZ77UnCompWram
movs r0, #0xA7
lsls r0, r0, #0x03
adds r1, r5, r0
movs r0, #0x01
str r0, [r1, #0x00]
ldr r0, _0800A16C @ =0x080C8D9C
adds r1, r5, #0x0
adds r1, #0xC4
ldr r3, [r4, #0x00]
movs r2, #0x00
str r2, [sp, #0x000]
str r2, [sp, #0x004]
adds r2, r3, #0x0
bl oam_renderCellData
_0800A140:
ldr r1, _0800A170 @ =0x000011E4
adds r0, r6, r1
ldr r0, [r0, #0x00]
cmp r0, #0x00
beq _0800A192
ldr r3, [r4, #0x00]
cmp r3, #0x00
beq _0800A192
ldr r0, _0800A174 @ =0x080C8FD4
adds r1, r5, #0x0
adds r1, #0xC4
movs r2, #0x00
str r2, [sp, #0x000]
str r2, [sp, #0x004]
adds r2, r3, #0x0
bl oam_renderCellData
b _0800A192
_0800A164: .4byte 0x080D9628
_0800A168: .4byte 0x02015C00
_0800A16C: .4byte 0x080C8D9C
_0800A170: .4byte 0x000011E4
_0800A174: .4byte 0x080C8FD4
_0800A178:
adds r0, r5, #0x0
adds r0, #0xC8
ldr r3, [r0, #0x00]
cmp r3, #0x00
beq _0800A192
ldr r0, _0800A19C @ =0x080C8F90
ldr r1, _0800A1A0 @ =0x080D95F8
movs r2, #0x00
str r2, [sp, #0x000]
str r2, [sp, #0x004]
adds r2, r3, #0x0
bl oam_renderCellData
_0800A192:
add sp, #0x008
pop {r4, r5, r6}
pop {r0}
bx r0
.byte 0x00, 0x00
_0800A19C: .4byte 0x080C8F90
_0800A1A0: .4byte 0x080D95F8
thumb_func_start sub_800A1A4
sub_800A1A4:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x018
mov r10, r0
movs r7, #0xE7
lsls r7, r7, #0x03
add r7, r10
movs r0, #0x00
mov r8, r0
b _0800A55A
_0800A1BE:
mov r1, r8
lsls r0, r1, #0x01
add r0, r8
lsls r0, r0, #0x03
adds r0, #0x1C
adds r6, r7, r0
movs r2, #0x00
mov r9, r2
movs r0, #0x0E
ldsb r0, [r6, r0]
cmp r0, #0x09
bls _0800A1D8
b _0800A46C
_0800A1D8:
lsls r0, r0, #0x02
ldr r1, _0800A1E4 @ =0x0800A1E8
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
.byte 0x00, 0x00
_0800A1E4: .4byte 0x0800A1E8
.byte 0x6C, 0xA4, 0x00, 0x08, 0x10, 0xA2, 0x00, 0x08, 0x6C, 0xA2, 0x00, 0x08, 0xF0, 0xA2, 0x00, 0x08
.byte 0x6C, 0xA4, 0x00, 0x08, 0x38, 0xA3, 0x00, 0x08, 0x44, 0xA3, 0x00, 0x08, 0xBC, 0xA3, 0x00, 0x08
.byte 0xD0, 0xA3, 0x00, 0x08, 0x40, 0xA4, 0x00, 0x08, 0x38, 0x68, 0x80, 0x45, 0x02, 0xD0, 0x88, 0x20
.byte 0x40, 0x00, 0x20, 0xE0, 0xB8, 0x69, 0x01, 0x30, 0x1F, 0x21, 0x08, 0x40, 0xB8, 0x61, 0x0F, 0x4A
.byte 0xC0, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x81, 0x11, 0x80, 0x20, 0x40, 0x00
.byte 0x40, 0x1A, 0x0B, 0x49, 0x08, 0x40, 0x80, 0x00, 0x80, 0x18, 0x00, 0x68, 0x80, 0x21, 0x09, 0x02
.byte 0x09, 0x1A, 0xC8, 0x00, 0x40, 0x18, 0x00, 0x01, 0x40, 0x42, 0xC1, 0x0F, 0x40, 0x18, 0x00, 0x14
.byte 0xB9, 0x23, 0x5B, 0x00, 0xC0, 0x18, 0x70, 0x81, 0x30, 0x81, 0x03, 0xE1, 0x5C, 0x64, 0x0E, 0x08
.byte 0xFF, 0x03, 0x00, 0x00, 0x51, 0x46, 0x08, 0x69, 0x03, 0x28, 0x2D, 0xD0, 0x42, 0x46, 0x14, 0x04
.byte 0x79, 0x69, 0x20, 0x1C, 0x57, 0xF0, 0x18, 0xFE, 0x11, 0x4A, 0x00, 0x04, 0x00, 0x14, 0x00, 0x28
.byte 0x00, 0xDA, 0x3F, 0x30, 0x81, 0x11, 0x80, 0x20, 0x40, 0x00, 0x40, 0x1A, 0x0D, 0x4D, 0x28, 0x40
.byte 0x80, 0x00, 0x80, 0x18, 0x00, 0x68, 0x00, 0x0B, 0x70, 0x82, 0x79, 0x69, 0x20, 0x1C, 0x05, 0x92
.byte 0x57, 0xF0, 0x02, 0xFE, 0x00, 0x04, 0x00, 0x14, 0x05, 0x9A, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30
.byte 0x80, 0x11, 0x28, 0x40, 0x80, 0x00, 0x80, 0x18, 0x00, 0x68, 0x00, 0x0B, 0x07, 0xE0, 0x00, 0x00
.byte 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x20, 0x70, 0x82, 0x05, 0x48, 0xB0, 0x82
.byte 0x00, 0x21, 0x80, 0x20, 0x40, 0x00, 0x70, 0x81, 0x30, 0x81, 0x31, 0x82, 0xB0, 0x7B, 0x01, 0x30
.byte 0xBF, 0xE0, 0x00, 0x00, 0xF8, 0xFF, 0x00, 0x00, 0x30, 0x8A, 0x01, 0x30, 0x30, 0x82, 0x00, 0x04
.byte 0x00, 0x14, 0x64, 0x28, 0x19, 0xDC, 0x0C, 0x23, 0xF1, 0x5E, 0x01, 0x20, 0x42, 0x46, 0x10, 0x40
.byte 0x00, 0x28, 0x05, 0xD0, 0x01, 0x4B, 0xC8, 0x18, 0x05, 0xE0, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF
.byte 0x80, 0x22, 0x52, 0x01, 0x88, 0x18, 0xB0, 0x81, 0x70, 0x8A, 0xB3, 0x88, 0xC0, 0x18, 0xB0, 0x80
.byte 0xB0, 0x8A, 0xF1, 0x88, 0x40, 0x18, 0xF0, 0x80, 0x9C, 0xE0, 0xB0, 0x7B, 0x01, 0x30, 0x98, 0xE0
.byte 0x42, 0x46, 0x90, 0x00, 0x30, 0x82, 0xB0, 0x7B, 0x01, 0x30, 0x92, 0xE0, 0x38, 0x68, 0x80, 0x45
.byte 0x02, 0xD0, 0x88, 0x20, 0x40, 0x00, 0x20, 0xE0, 0xB8, 0x69, 0x01, 0x30, 0x1F, 0x21, 0x08, 0x40
.byte 0xB8, 0x61, 0x13, 0x4A, 0xC0, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x81, 0x11
.byte 0x80, 0x20, 0x40, 0x00, 0x40, 0x1A, 0x0F, 0x49, 0x08, 0x40, 0x80, 0x00, 0x80, 0x18, 0x00, 0x68
.byte 0x80, 0x21, 0x09, 0x02, 0x09, 0x1A, 0xC8, 0x00, 0x40, 0x18, 0x00, 0x01, 0x40, 0x42, 0xC1, 0x0F
.byte 0x40, 0x18, 0x00, 0x14, 0xB9, 0x23, 0x5B, 0x00, 0xC0, 0x18, 0x70, 0x81, 0x30, 0x81, 0x31, 0x8A
.byte 0x10, 0x22, 0xB0, 0x5E, 0x00, 0x28, 0x07, 0xDD, 0x48, 0x1E, 0x30, 0x82, 0x62, 0xE0, 0x00, 0x00
.byte 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x03, 0x00, 0x00, 0xB0, 0x7B, 0x01, 0x30, 0x00, 0x21, 0xB0, 0x73
.byte 0x31, 0x82, 0x57, 0xE0, 0x30, 0x8A, 0x01, 0x30, 0x30, 0x82, 0x00, 0x04, 0x00, 0x14, 0x08, 0x28
.byte 0x41, 0xDD, 0xB0, 0x7B, 0x01, 0x30, 0x4C, 0xE0, 0x40, 0x21, 0x89, 0x46, 0x0A, 0x48, 0x50, 0x44
.byte 0x00, 0x68, 0x00, 0x28, 0x14, 0xD1, 0x42, 0x46, 0x54, 0x01, 0x08, 0x4D, 0x65, 0x19, 0x01, 0x20
.byte 0x24, 0xF0, 0x22, 0xF9, 0x01, 0x1C, 0x80, 0x23, 0x5B, 0x00, 0xE4, 0x18, 0x09, 0x19, 0x28, 0x1C
.byte 0x08, 0x22, 0x56, 0xF0, 0xA7, 0xFF, 0x13, 0xE0, 0xE4, 0x11, 0x00, 0x00, 0xC0, 0x75, 0x0B, 0x08
.byte 0x40, 0x46, 0x44, 0x01, 0x0B, 0x4D, 0x65, 0x19, 0x01, 0x20, 0x24, 0xF0, 0x0D, 0xF9, 0x01, 0x1C
.byte 0x80, 0x22, 0x52, 0x00, 0xA4, 0x18, 0x09, 0x19, 0x28, 0x1C, 0x08, 0x22, 0x56, 0xF0, 0x92, 0xFF
.byte 0x50, 0x46, 0x41, 0x46, 0xFE, 0xF7, 0xEE, 0xF8, 0x01, 0x20, 0x24, 0xF0, 0x19, 0xF9, 0xB0, 0x7B
.byte 0x01, 0x30, 0x16, 0xE0, 0xA0, 0xB5, 0x0B, 0x08, 0x30, 0x8A, 0x01, 0x30, 0x30, 0x82, 0x00, 0x04
.byte 0x00, 0x14, 0x10, 0x28, 0x0C, 0xDC, 0x10, 0x23, 0xF2, 0x5E, 0x0C, 0x20, 0x00, 0x90, 0x00, 0x20
.byte 0x80, 0x21, 0x10, 0x23, 0x04, 0xF0, 0x68, 0xFA, 0x81, 0x46, 0x00, 0x02, 0x81, 0x46, 0x01, 0xE0
.byte 0x01, 0x20, 0xB0, 0x73
_0800A46C:
mov r1, r9
cmp r1, #0x00
beq _0800A556
ldr r0, _0800A4AC @ =0x0000FFFF
ands r0, r1
asrs r0, r0, #0x08
cmp r0, #0x3F
bgt _0800A4B8
ldr r3, _0800A4B0 @ =0x080E645C
lsls r0, r0, #0x18
asrs r0, r0, #0x10
cmp r0, #0x00
bge _0800A488
adds r0, #0x3F
_0800A488:
asrs r0, r0, #0x06
movs r2, #0x80
lsls r2, r2, #0x01
subs r0, r2, r0
ldr r1, _0800A4B4 @ =0x000003FF
ands r0, r1
lsls r0, r0, #0x02
adds r0, r0, r3
ldr r0, [r0, #0x00]
movs r1, #0x80
lsls r1, r1, #0x08
subs r1, r1, r0
lsls r0, r1, #0x03
subs r0, r0, r1
lsls r0, r0, #0x08
asrs r0, r0, #0x0F
adds r0, r0, r2
b _0800A554
_0800A4AC: .4byte 0x0000FFFF
_0800A4B0: .4byte 0x080E645C
_0800A4B4: .4byte 0x000003FF
_0800A4B8:
cmp r0, #0x7F
bgt _0800A4EC
subs r0, #0x40
ldr r1, _0800A4E8 @ =0x080E645C
lsls r0, r0, #0x18
asrs r0, r0, #0x10
cmp r0, #0x00
bge _0800A4CA
adds r0, #0x3F
_0800A4CA:
lsls r0, r0, #0x10
lsrs r0, r0, #0x16
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r1, [r0, #0x00]
lsls r0, r1, #0x03
subs r0, r0, r1
lsls r0, r0, #0x08
negs r0, r0
asrs r0, r0, #0x0F
movs r2, #0x80
lsls r2, r2, #0x04
adds r0, r0, r2
b _0800A554
.byte 0x00, 0x00
_0800A4E8: .4byte 0x080E645C
_0800A4EC:
cmp r0, #0xBF
bgt _0800A52C
subs r0, #0x80
ldr r3, _0800A524 @ =0x080E645C
lsls r0, r0, #0x18
asrs r0, r0, #0x10
cmp r0, #0x00
bge _0800A4FE
adds r0, #0x3F
_0800A4FE:
asrs r0, r0, #0x06
movs r2, #0x80
lsls r2, r2, #0x01
subs r0, r2, r0
ldr r1, _0800A528 @ =0x000003FF
ands r0, r1
lsls r0, r0, #0x02
adds r0, r0, r3
ldr r0, [r0, #0x00]
movs r1, #0x80
lsls r1, r1, #0x08
subs r1, r1, r0
lsls r0, r1, #0x03
subs r0, r0, r1
lsls r0, r0, #0x08
asrs r0, r0, #0x0F
adds r0, r0, r2
b _0800A554
.byte 0x00, 0x00
_0800A524: .4byte 0x080E645C
_0800A528: .4byte 0x000003FF
_0800A52C:
subs r0, #0xC0
ldr r1, _0800A674 @ =0x080E645C
lsls r0, r0, #0x18
asrs r0, r0, #0x10
cmp r0, #0x00
bge _0800A53A
adds r0, #0x3F
_0800A53A:
lsls r0, r0, #0x10
lsrs r0, r0, #0x16
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r1, [r0, #0x00]
lsls r0, r1, #0x03
subs r0, r0, r1
lsls r0, r0, #0x08
negs r0, r0
asrs r0, r0, #0x0F
movs r3, #0x80
lsls r3, r3, #0x04
adds r0, r0, r3
_0800A554:
strh r0, [r6, #0x08]
_0800A556:
movs r6, #0x01
add r8, r6
_0800A55A:
ldr r0, [r7, #0x14]
cmp r8, r0
bge _0800A562
b _0800A1BE
_0800A562:
ldr r1, [r7, #0x00]
lsls r0, r1, #0x01
adds r0, r0, r1
lsls r0, r0, #0x03
adds r0, #0x1C
adds r4, r7, r0
ldr r5, [r4, #0x00]
cmp r5, #0x00
beq _0800A5C8
movs r1, #0x08
ldsh r0, [r4, r1]
cmp r0, #0x00
beq _0800A5C8
movs r2, #0x0A
ldsh r0, [r4, r2]
cmp r0, #0x00
beq _0800A5C8
ldrh r0, [r4, #0x06]
lsls r0, r0, #0x10
ldrh r1, [r4, #0x04]
orrs r1, r0
str r1, [sp, #0x008]
add r0, sp, #0x008
movs r3, #0x00
ldsh r2, [r0, r3]
movs r0, #0x18
negs r0, r0
cmp r2, r0
blt _0800A5C8
asrs r1, r1, #0x10
cmp r1, r0
blt _0800A5C8
movs r0, #0x80
lsls r0, r0, #0x01
cmp r2, r0
bgt _0800A5C8
cmp r1, #0xC0
bgt _0800A5C8
movs r6, #0x08
ldsh r2, [r4, r6]
movs r0, #0x0A
ldsh r3, [r4, r0]
movs r1, #0x0C
ldsh r0, [r4, r1]
str r0, [sp, #0x000]
movs r0, #0x00
str r0, [sp, #0x004]
adds r0, r5, #0x0
add r1, sp, #0x008
bl oam_renderCellData
_0800A5C8:
movs r2, #0x00
mov r8, r2
ldr r0, [r7, #0x14]
cmp r8, r0
bge _0800A644
ldr r3, _0800A678 @ =0xFFE80000
mov r9, r3
adds r4, r7, #0x0
adds r4, #0x1C
_0800A5DA:
ldr r0, [r7, #0x00]
cmp r8, r0
beq _0800A638
ldr r5, [r4, #0x00]
cmp r5, #0x00
beq _0800A638
movs r6, #0x08
ldsh r0, [r4, r6]
cmp r0, #0x00
beq _0800A638
movs r1, #0x0A
ldsh r0, [r4, r1]
cmp r0, #0x00
beq _0800A638
ldrh r0, [r4, #0x06]
lsls r0, r0, #0x10
ldrh r2, [r4, #0x04]
orrs r2, r0
str r2, [sp, #0x00C]
add r1, sp, #0x00C
movs r6, #0x00
ldsh r3, [r1, r6]
mov r6, r9
asrs r0, r6, #0x10
cmp r3, r0
blt _0800A638
asrs r2, r2, #0x10
cmp r2, r0
blt _0800A638
movs r0, #0x80
lsls r0, r0, #0x01
cmp r3, r0
bgt _0800A638
cmp r2, #0xC0
bgt _0800A638
movs r0, #0x08
ldsh r2, [r4, r0]
movs r6, #0x0A
ldsh r3, [r4, r6]
movs r6, #0x0C
ldsh r0, [r4, r6]
str r0, [sp, #0x000]
movs r0, #0x00
str r0, [sp, #0x004]
adds r0, r5, #0x0
bl oam_renderCellData
_0800A638:
adds r4, #0x18
movs r0, #0x01
add r8, r0
ldr r0, [r7, #0x14]
cmp r8, r0
blt _0800A5DA
_0800A644:
bl sub_802DC88
cmp r0, #0x00
beq _0800A684
bl sub_802DCB4
cmp r0, #0x00
beq _0800A684
mov r1, r10
ldr r0, [r1, #0x4C]
movs r1, #0x2F
ands r0, r1
cmp r0, #0x0F
bgt _0800A6C2
ldr r0, _0800A67C @ =0x080C863C
ldr r1, _0800A680 @ =0x080D963C
movs r2, #0x00
str r2, [sp, #0x000]
str r2, [sp, #0x004]
movs r3, #0x00
bl oam_renderCellData
b _0800A6C2
.byte 0x00, 0x00
_0800A674: .4byte 0x080E645C
_0800A678: .4byte 0xFFE80000
_0800A67C: .4byte 0x080C863C
_0800A680: .4byte 0x080D963C
_0800A684:
adds r4, r7, #0x0
adds r4, #0x94
ldr r5, [r4, #0x00]
cmp r5, #0x00
beq _0800A6C2
movs r2, #0x08
ldsh r0, [r4, r2]
cmp r0, #0x00
beq _0800A6C2
movs r3, #0x0A
ldsh r0, [r4, r3]
cmp r0, #0x00
beq _0800A6C2
ldrh r1, [r4, #0x06]
lsls r1, r1, #0x10
ldrh r0, [r4, #0x04]
orrs r0, r1
str r0, [sp, #0x010]
add r1, sp, #0x010
movs r6, #0x08
ldsh r2, [r4, r6]
movs r0, #0x0A
ldsh r3, [r4, r0]
movs r6, #0x0C
ldsh r0, [r4, r6]
str r0, [sp, #0x000]
movs r0, #0x00
str r0, [sp, #0x004]
adds r0, r5, #0x0
bl oam_renderCellData
_0800A6C2:
ldr r0, _0800A6D8 @ =0x00000604
adds r4, r7, r0
ldr r2, [r4, #0x00]
cmp r2, #0x04
bgt _0800A6DC
cmp r2, #0x01
bge _0800A700
cmp r2, #0x00
beq _0800A6E2
b _0800A748
.byte 0x00, 0x00
_0800A6D8: .4byte 0x00000604
_0800A6DC:
cmp r2, #0x05
beq _0800A73C
b _0800A748
_0800A6E2:
movs r3, #0xC0
lsls r3, r3, #0x03
adds r1, r7, r3
ldr r0, [r1, #0x00]
cmp r0, #0x00
beq _0800A748
str r2, [r1, #0x00]
ldr r0, [r4, #0x00]
adds r0, #0x01
str r0, [r4, #0x00]
movs r6, #0xC1
lsls r6, r6, #0x03
adds r0, r7, r6
str r2, [r0, #0x00]
b _0800A748
_0800A700:
ldr r1, _0800A734 @ =0x080D9640
subs r0, r2, #0x1
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r0, [r0, #0x00]
ldr r1, _0800A738 @ =0x080D9650
movs r5, #0x00
str r5, [sp, #0x000]
str r5, [sp, #0x004]
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
movs r0, #0xC1
lsls r0, r0, #0x03
adds r1, r7, r0
ldr r0, [r1, #0x00]
adds r0, #0x01
str r0, [r1, #0x00]
cmp r0, #0x04
ble _0800A748
str r5, [r1, #0x00]
ldr r0, [r4, #0x00]
adds r0, #0x01
b _0800A746
.byte 0x00, 0x00
_0800A734: .4byte 0x080D9640
_0800A738: .4byte 0x080D9650
_0800A73C:
ldr r1, _0800A758 @ =0x000005FC
adds r0, r7, r1
ldr r0, [r0, #0x00]
cmp r0, #0x00
bne _0800A748
_0800A746:
str r0, [r4, #0x00]
_0800A748:
add sp, #0x018
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_0800A758: .4byte 0x000005FC
thumb_func_start sub_800A75C
sub_800A75C:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x00C
adds r7, r0, #0x0
adds r6, r1, #0x0
movs r0, #0xE7
lsls r0, r0, #0x03
adds r4, r7, r0
movs r0, #0x05
str r0, [r4, #0x14]
movs r5, #0x00
mov r8, r5
ldr r1, _0800A794 @ =0x080D94FC
ldr r3, _0800A798 @ =0x00000754
adds r2, r7, r3
movs r0, #0x88
lsls r0, r0, #0x01
mov r12, r0
_0800A786:
ldr r0, [r1, #0x00]
str r0, [r2, #0x00]
cmp r6, #0x00
bne _0800A79C
ldrh r0, [r1, #0x0C]
adds r0, #0xF0
b _0800A7A2
_0800A794: .4byte 0x080D94FC
_0800A798: .4byte 0x00000754
_0800A79C:
movs r3, #0x8F
lsls r3, r3, #0x01
adds r0, r3, #0x0
_0800A7A2:
strh r0, [r2, #0x04]
cmp r6, #0x00
beq _0800A7B4
ldr r0, [r7, #0x10]
movs r3, #0x50
cmp r0, #0x00
beq _0800A7B6
movs r3, #0x3C
b _0800A7B6
_0800A7B4:
ldrh r3, [r1, #0x0E]
_0800A7B6:
strh r3, [r2, #0x06]
mov r0, r12
strh r0, [r2, #0x0A]
strh r0, [r2, #0x08]
mov r3, r8
strh r3, [r2, #0x0C]
movs r0, #0x01
strb r0, [r2, #0x0E]
strh r3, [r2, #0x10]
adds r1, #0x14
adds r2, #0x18
adds r5, #0x01
ldr r0, [r4, #0x14]
cmp r5, r0
blt _0800A786
movs r5, #0x00
adds r6, r4, #0x0
adds r6, #0x94
movs r1, #0x98
adds r1, r1, r4
mov r8, r1
movs r2, #0x9A
adds r2, r2, r4
mov r9, r2
adds r3, r4, #0x0
adds r3, #0x9E
str r3, [sp, #0x000]
movs r1, #0x9C
adds r1, r1, r4
mov r10, r1
adds r2, r4, #0x0
adds r2, #0xA0
str r2, [sp, #0x004]
adds r3, #0x04
str r3, [sp, #0x008]
cmp r5, r0
bge _0800A810
_0800A800:
adds r0, r7, #0x0
adds r1, r5, #0x0
bl sub_800860C
adds r5, #0x01
ldr r0, [r4, #0x14]
cmp r5, r0
blt _0800A800
_0800A810:
ldr r2, _0800A848 @ =0x080D9574
ldr r0, [r2, #0x00]
str r0, [r6, #0x00]
ldrh r0, [r2, #0x0C]
movs r3, #0x00
movs r1, #0x00
mov r4, r8
strh r0, [r4, #0x00]
ldrh r0, [r2, #0x0E]
mov r2, r9
strh r0, [r2, #0x00]
ldr r4, [sp, #0x000]
strh r1, [r4, #0x00]
mov r0, r10
strh r1, [r0, #0x00]
ldr r2, [sp, #0x004]
strh r1, [r2, #0x00]
ldr r4, [sp, #0x008]
strb r3, [r4, #0x00]
add sp, #0x00C
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_0800A848: .4byte 0x080D9574
thumb_func_start sub_800A84C
sub_800A84C:
push {r4, r5, r6, r7, lr}
mov r7, r9
mov r6, r8
push {r6, r7}
movs r1, #0xE7
lsls r1, r1, #0x03
adds r1, r1, r0
mov r12, r1
movs r1, #0x01
mov r2, r12
str r1, [r2, #0x14]
movs r4, #0x00
ldr r3, _0800A8E4 @ =0x080D9574
mov r9, r3
ldr r1, _0800A8E8 @ =0x080D9560
movs r6, #0x00
movs r5, #0x88
lsls r5, r5, #0x01
adds r3, r1, #0x0
adds r3, #0x0C
ldr r7, _0800A8EC @ =0x00000754
adds r2, r0, r7
movs r0, #0x01
mov r8, r0
_0800A87C:
ldr r0, [r1, #0x00]
str r0, [r2, #0x00]
ldrh r0, [r3, #0x00]
adds r0, #0xF0
strh r0, [r2, #0x04]
ldrh r0, [r3, #0x02]
strh r0, [r2, #0x06]
strh r5, [r2, #0x0A]
strh r5, [r2, #0x08]
strh r6, [r2, #0x0C]
mov r7, r8
strb r7, [r2, #0x0E]
strh r6, [r2, #0x10]
adds r3, #0x14
adds r2, #0x18
adds r1, #0x14
adds r4, #0x01
mov r7, r12
ldr r0, [r7, #0x14]
cmp r4, r0
blt _0800A87C
movs r2, #0x00
mov r1, r12
adds r1, #0x94
mov r3, r9
ldr r0, [r3, #0x00]
str r0, [r1, #0x00]
ldrh r1, [r3, #0x0C]
mov r0, r12
adds r0, #0x98
movs r3, #0x00
strh r1, [r0, #0x00]
mov r7, r9
ldrh r0, [r7, #0x0E]
mov r1, r12
adds r1, #0x9A
strh r0, [r1, #0x00]
mov r0, r12
adds r0, #0x9E
strh r2, [r0, #0x00]
subs r0, #0x02
strh r2, [r0, #0x00]
adds r0, #0x04
strh r2, [r0, #0x00]
adds r0, #0x02
strb r3, [r0, #0x00]
pop {r3, r4}
mov r8, r3
mov r9, r4
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_0800A8E4: .4byte 0x080D9574
_0800A8E8: .4byte 0x080D9560
_0800A8EC: .4byte 0x00000754
thumb_func_start spm_loadBgGfx
spm_loadBgGfx:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x004
adds r7, r0, #0x0
mov r9, r1
movs r0, #0xE7
lsls r0, r0, #0x03
adds r0, r0, r7
mov r10, r0
cmp r1, #0x00
beq _0800A940
movs r5, #0xC0
lsls r5, r5, #0x13
movs r4, #0x07
_0800A912:
bl dmaq_getVBlankDmaQueue
ldr r1, _0800AA0C @ =0x0203EC04
adds r2, r5, #0x0
ldr r3, _0800AA10 @ =0x81000C00
bl dmaq_enqueue
bl main_frameProc
movs r1, #0xC0
lsls r1, r1, #0x05
adds r5, r5, r1
subs r4, #0x01
cmp r4, #0x00
bge _0800A912
mov r2, r9
cmp r2, #0x00
beq _0800A940
adds r0, r7, #0x0
bl sub_8002EA4
bl main_frameProc
_0800A940:
ldr r4, _0800AA14 @ =0x0807CD48
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0xE0
adds r0, r4, #0x0
movs r2, #0x10
bl CpuFastSet
ldr r4, _0800AA18 @ =0x080AE03C
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0xA0
adds r0, r4, #0x0
movs r2, #0x10
bl CpuFastSet
ldr r4, _0800AA1C @ =0x080B23B0
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
movs r0, #0xA0
lsls r0, r0, #0x01
adds r1, r1, r0
adds r0, r4, #0x0
movs r2, #0x10
bl CpuFastSet
subs r4, #0x20
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
movs r2, #0xC0
lsls r2, r2, #0x01
adds r1, r1, r2
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
ldr r4, _0800AA20 @ =0x080AACF0
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
movs r0, #0xE0
lsls r0, r0, #0x01
adds r1, r1, r0
adds r0, r4, #0x0
movs r2, #0x10
bl CpuFastSet
ldr r4, _0800AA24 @ =0x080AF2C0
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r0, r4, #0x0
movs r2, #0x10
bl CpuFastSet
ldr r4, _0800AA28 @ =0x080B06DC
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0xE0
adds r0, r4, #0x0
bl LZ77UnCompWram
ldr r4, _0800AA2C @ =0x080B07E4
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
movs r2, #0xD0
lsls r2, r2, #0x01
adds r1, r1, r2
adds r0, r4, #0x0
bl LZ77UnCompWram
ldr r0, [r7, #0x10]
cmp r0, #0x03
beq _0800AA58
ldr r1, _0800AA30 @ =0x000011E4
adds r0, r7, r1
ldr r0, [r0, #0x00]
cmp r0, #0x00
bne _0800AA38
ldr r4, _0800AA34 @ =0x080B75C0
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
movs r2, #0x80
lsls r2, r2, #0x01
adds r1, r1, r2
b _0800AA48
_0800AA0C: .4byte 0x0203EC04
_0800AA10: .4byte 0x81000C00
_0800AA14: .4byte 0x0807CD48
_0800AA18: .4byte 0x080AE03C
_0800AA1C: .4byte 0x080B23B0
_0800AA20: .4byte 0x080AACF0
_0800AA24: .4byte 0x080AF2C0
_0800AA28: .4byte 0x080B06DC
_0800AA2C: .4byte 0x080B07E4
_0800AA30: .4byte 0x000011E4
_0800AA34: .4byte 0x080B75C0
_0800AA38:
ldr r4, _0800AA54 @ =0x080BB5A0
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
movs r0, #0x80
lsls r0, r0, #0x01
adds r1, r1, r0
_0800AA48:
adds r0, r4, #0x0
movs r2, #0x28
bl CpuFastSet
b _0800AA70
.byte 0x00, 0x00
_0800AA54: .4byte 0x080BB5A0
_0800AA58:
ldr r4, _0800AB58 @ =0x080B164C
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
movs r2, #0x80
lsls r2, r2, #0x01
adds r1, r1, r2
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
_0800AA70:
ldr r1, _0800AB5C @ =0x080D94A0
mov r2, r10
ldr r0, [r2, #0x00]
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r4, [r0, #0x00]
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
movs r0, #0xF0
lsls r0, r0, #0x01
adds r1, r1, r0
adds r0, r4, #0x0
movs r2, #0x05
bl CpuSet
movs r0, #0x01
bl pltt_setDirtyFlag
adds r0, r7, #0x0
bl spm_loadOtherGfx
bl main_frameProc
mov r1, r9
cmp r1, #0x00
beq _0800AB3A
ldr r0, _0800AB60 @ =0x0807D1E8
ldr r4, _0800AB64 @ =0x02008400
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800AB68 @ =0x06008000
ldr r3, _0800AB6C @ =0x80000600
adds r1, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _0800AB70 @ =0x080AE180
movs r2, #0x80
lsls r2, r2, #0x07
adds r1, r4, r2
bl LZ77UnCompWram
bl main_frameProc
ldr r0, _0800AB74 @ =0x080AE7C8
movs r1, #0xC0
lsls r1, r1, #0x07
adds r4, r4, r1
adds r1, r4, #0x0
bl LZ77UnCompWram
bl main_frameProc
movs r5, #0x00
ldr r6, _0800AB78 @ =0x0600C000
_0800AAEA:
lsls r4, r5, #0x0D
ldr r0, _0800AB7C @ =0x0200C400
adds r4, r4, r0
bl dmaq_getVBlankDmaQueue
adds r1, r4, #0x0
adds r2, r6, #0x0
ldr r3, _0800AB80 @ =0x80001000
bl dmaq_enqueue
bl main_frameProc
movs r2, #0x80
lsls r2, r2, #0x06
adds r6, r6, r2
adds r5, #0x01
cmp r5, #0x01
ble _0800AAEA
ldr r0, _0800AB84 @ =0x080AF320
ldr r4, _0800AB88 @ =0x02010400
adds r1, r4, #0x0
bl LZ77UnCompWram
bl main_frameProc
ldr r0, _0800AB8C @ =0x080C2FA8
movs r2, #0x80
lsls r2, r2, #0x05
adds r1, r4, r2
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800AB90 @ =0x06010000
ldr r3, _0800AB94 @ =0x80001200
adds r1, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
_0800AB3A:
ldr r0, [r7, #0x10]
cmp r0, #0x03
beq _0800ABA8
ldr r0, _0800AB98 @ =0x080B7720
ldr r4, _0800AB9C @ =0x02014000
adds r1, r4, #0x0
bl LZ77UnCompWram
ldr r0, _0800ABA0 @ =0x080B9950
ldr r1, _0800ABA4 @ =0xFFFFFC00
adds r4, r4, r1
adds r1, r4, #0x0
bl LZ77UnCompWram
b _0800ABC0
_0800AB58: .4byte 0x080B164C
_0800AB5C: .4byte 0x080D94A0
_0800AB60: .4byte 0x0807D1E8
_0800AB64: .4byte 0x02008400
_0800AB68: .4byte 0x06008000
_0800AB6C: .4byte 0x80000600
_0800AB70: .4byte 0x080AE180
_0800AB74: .4byte 0x080AE7C8
_0800AB78: .4byte 0x0600C000
_0800AB7C: .4byte 0x0200C400
_0800AB80: .4byte 0x80001000
_0800AB84: .4byte 0x080AF320
_0800AB88: .4byte 0x02010400
_0800AB8C: .4byte 0x080C2FA8
_0800AB90: .4byte 0x06010000
_0800AB94: .4byte 0x80001200
_0800AB98: .4byte 0x080B7720
_0800AB9C: .4byte 0x02014000
_0800ABA0: .4byte 0x080B9950
_0800ABA4: .4byte 0xFFFFFC00
_0800ABA8:
ldr r0, _0800AC04 @ =0x080B99EC
ldr r4, _0800AC08 @ =0x02013C00
adds r1, r4, #0x0
bl LZ77UnCompWram
ldr r0, _0800AC0C @ =0x080B166C
movs r2, #0x80
lsls r2, r2, #0x03
adds r4, r4, r2
adds r1, r4, #0x0
bl LZ77UnCompWram
_0800ABC0:
ldr r0, _0800AC10 @ =0x080B3014
ldr r4, _0800AC14 @ =0x02017400
adds r1, r4, #0x0
bl LZ77UnCompWram
ldr r0, _0800AC18 @ =0x080B2470
movs r1, #0xC0
lsls r1, r1, #0x04
adds r5, r4, r1
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
movs r2, #0x80
lsls r2, r2, #0x03
adds r1, r4, r2
ldr r2, _0800AC1C @ =0x06017400
ldr r3, _0800AC20 @ =0x80000400
bl dmaq_enqueue
ldr r1, _0800AC24 @ =0x000011E4
adds r0, r7, r1
ldr r0, [r0, #0x00]
cmp r0, #0x00
beq _0800AC30
bl dmaq_getVBlankDmaQueue
ldr r2, _0800AC28 @ =0x06010A00
ldr r3, _0800AC2C @ =0x80000100
adds r1, r5, #0x0
bl dmaq_enqueue
b _0800AC42
_0800AC04: .4byte 0x080B99EC
_0800AC08: .4byte 0x02013C00
_0800AC0C: .4byte 0x080B166C
_0800AC10: .4byte 0x080B3014
_0800AC14: .4byte 0x02017400
_0800AC18: .4byte 0x080B2470
_0800AC1C: .4byte 0x06017400
_0800AC20: .4byte 0x80000400
_0800AC24: .4byte 0x000011E4
_0800AC28: .4byte 0x06010A00
_0800AC2C: .4byte 0x80000100
_0800AC30:
bl dmaq_getVBlankDmaQueue
movs r2, #0x80
lsls r2, r2, #0x04
adds r1, r4, r2
ldr r2, _0800AD40 @ =0x06010A00
ldr r3, _0800AD44 @ =0x80000100
bl dmaq_enqueue
_0800AC42:
adds r0, r7, #0x0
bl spm_loadOtherGfx
bl main_frameProc
ldr r0, _0800AD48 @ =0x080B0848
ldr r5, _0800AD4C @ =0x02016000
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800AD50 @ =0xFFFFDC00
adds r1, r5, r2
ldr r2, _0800AD54 @ =0x06013800
ldr r3, _0800AD58 @ =0x80001600
bl dmaq_enqueue
ldr r0, [r7, #0x10]
cmp r0, #0x00
bne _0800AC9C
ldr r0, _0800AD5C @ =0x080B0B40
movs r4, #0x84
lsls r4, r4, #0x01
add r4, r10
adds r1, r4, #0x0
bl LZ77UnCompWram
ldr r0, _0800AD60 @ =0x080B0EB0
adds r1, r4, #0x0
bl LZ77UnCompWram
ldr r0, _0800AD64 @ =0x080B0E28
ldr r1, _0800AD68 @ =0xFFFFF000
adds r4, r5, r1
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800AD6C @ =0x06014C00
ldr r3, _0800AD70 @ =0x80000080
adds r1, r4, #0x0
bl dmaq_enqueue
_0800AC9C:
adds r0, r7, #0x0
bl spm_loadOtherGfx
bl main_frameProc
ldr r0, _0800AD74 @ =0x080B9890
movs r2, #0x80
lsls r2, r2, #0x04
adds r4, r5, r2
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800AD78 @ =0x06016400
ldr r3, _0800AD44 @ =0x80000100
adds r1, r4, #0x0
bl dmaq_enqueue
ldr r0, _0800AD7C @ =0x080B0B00
movs r1, #0xDA
lsls r1, r1, #0x05
adds r4, r5, r1
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800AD80 @ =0x06017740
ldr r3, _0800AD84 @ =0x80000030
adds r1, r4, #0x0
bl dmaq_enqueue
bl dmaq_getVBlankDmaQueue
ldr r1, _0800AD88 @ =0x08063834
ldr r2, _0800AD8C @ =0x06006800
ldr r3, _0800AD90 @ =0x80000200
bl dmaq_enqueue
bl dmaq_getVBlankDmaQueue
ldr r1, _0800AD94 @ =0x080ABEFC
ldr r2, _0800AD98 @ =0x06006C00
ldr r3, _0800AD9C @ =0x80000400
bl dmaq_enqueue
bl dmaq_getVBlankDmaQueue
ldr r1, _0800ADA0 @ =0x080ACAFC
ldr r2, _0800ADA4 @ =0x06007400
ldr r3, _0800ADA8 @ =0x80000600
bl dmaq_enqueue
adds r0, r7, #0x0
bl spm_loadOtherGfx
bl main_frameProc
ldr r0, [r7, #0x10]
cmp r0, #0x03
beq _0800ADB0
movs r4, #0x00
ldr r2, _0800ADAC @ =0x000011F4
adds r5, r7, r2
_0800AD1E:
adds r0, r7, #0x0
adds r1, r4, #0x0
bl sub_800873C
adds r0, r7, #0x0
bl spm_loadOtherGfx
bl main_frameProc
ldr r0, [r5, #0x00]
adds r0, #0x01
str r0, [r5, #0x00]
adds r4, #0x01
cmp r4, #0x04
ble _0800AD1E
b _0800ADD8
.byte 0x00, 0x00
_0800AD40: .4byte 0x06010A00
_0800AD44: .4byte 0x80000100
_0800AD48: .4byte 0x080B0848
_0800AD4C: .4byte 0x02016000
_0800AD50: .4byte 0xFFFFDC00
_0800AD54: .4byte 0x06013800
_0800AD58: .4byte 0x80001600
_0800AD5C: .4byte 0x080B0B40
_0800AD60: .4byte 0x080B0EB0
_0800AD64: .4byte 0x080B0E28
_0800AD68: .4byte 0xFFFFF000
_0800AD6C: .4byte 0x06014C00
_0800AD70: .4byte 0x80000080
_0800AD74: .4byte 0x080B9890
_0800AD78: .4byte 0x06016400
_0800AD7C: .4byte 0x080B0B00
_0800AD80: .4byte 0x06017740
_0800AD84: .4byte 0x80000030
_0800AD88: .4byte 0x08063834
_0800AD8C: .4byte 0x06006800
_0800AD90: .4byte 0x80000200
_0800AD94: .4byte 0x080ABEFC
_0800AD98: .4byte 0x06006C00
_0800AD9C: .4byte 0x80000400
_0800ADA0: .4byte 0x080ACAFC
_0800ADA4: .4byte 0x06007400
_0800ADA8: .4byte 0x80000600
_0800ADAC: .4byte 0x000011F4
_0800ADB0:
ldr r0, _0800AE7C @ =0x080E7FEC
mov r8, r0
movs r5, #0x00
ldr r6, _0800AE80 @ =0x080D9490
movs r4, #0x03
_0800ADBA:
ldm r6!, {r0}
lsls r0, r0, #0x02
add r0, r8
ldr r0, [r0, #0x00]
ldr r0, [r0, #0x30]
ldr r1, _0800AE84 @ =0x02025400
adds r1, r5, r1
bl LZ77UnCompWram
movs r1, #0xC0
lsls r1, r1, #0x02
adds r5, r5, r1
subs r4, #0x01
cmp r4, #0x00
bge _0800ADBA
_0800ADD8:
adds r0, r7, #0x0
bl spm_loadOtherGfx
bl main_frameProc
mov r2, r9
cmp r2, #0x00
beq _0800AE1C
ldr r4, _0800AE88 @ =0x080AEE04
movs r0, #0x00
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
adds r4, r0, #0x0
movs r0, #0x00
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
ldr r2, _0800AE8C @ =0x06002000
ldr r3, _0800AE90 @ =0x80000400
adds r0, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
_0800AE1C:
movs r0, #0x00
str r0, [sp, #0x000]
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
ldr r2, _0800AE94 @ =0x01000140
mov r0, sp
bl CpuFastSet
bl dmaq_getVBlankDmaQueue
adds r4, r0, #0x0
ldr r5, _0800AE98 @ =0x080B1198
movs r0, #0x00
movs r1, #0x0F
movs r2, #0x0A
bl map_getBufferPtr2d
adds r2, r0, #0x0
ldr r3, _0800AE9C @ =0x80000100
adds r0, r4, #0x0
adds r1, r5, #0x0
bl dmaq_enqueue
adds r0, r7, #0x0
bl sub_8008850
mov r0, r10
ldr r1, [r0, #0x00]
adds r0, r7, #0x0
bl spm_loadCupGfx
ldr r1, _0800AEA0 @ =0x000011E4
adds r0, r7, r1
ldr r0, [r0, #0x00]
cmp r0, #0x00
beq _0800AE70
ldr r0, [r7, #0x10]
cmp r0, #0x03
bne _0800AEAC
_0800AE70:
ldr r2, _0800AEA4 @ =0x000011FE
adds r0, r7, r2
ldrh r1, [r0, #0x00]
ldr r1, _0800AEA8 @ =0x00004684
b _0800AEB4
.byte 0x00, 0x00
_0800AE7C: .4byte 0x080E7FEC
_0800AE80: .4byte 0x080D9490
_0800AE84: .4byte 0x02025400
_0800AE88: .4byte 0x080AEE04
_0800AE8C: .4byte 0x06002000
_0800AE90: .4byte 0x80000400
_0800AE94: .4byte 0x01000140
_0800AE98: .4byte 0x080B1198
_0800AE9C: .4byte 0x80000100
_0800AEA0: .4byte 0x000011E4
_0800AEA4: .4byte 0x000011FE
_0800AEA8: .4byte 0x00004684
_0800AEAC:
ldr r1, _0800AF0C @ =0x000011FE
adds r0, r7, r1
ldrh r1, [r0, #0x00]
ldr r1, _0800AF10 @ =0x00004604
_0800AEB4:
strh r1, [r0, #0x00]
ldr r2, _0800AF14 @ =0x00001204
adds r1, r7, r2
ldrh r0, [r1, #0x00]
ldr r0, _0800AF18 @ =0x0000020B
strh r0, [r1, #0x00]
ldr r0, _0800AF1C @ =0x0000120A
adds r1, r7, r0
ldrh r0, [r1, #0x00]
ldr r0, _0800AF20 @ =0x0000448E
strh r0, [r1, #0x00]
subs r2, #0x08
adds r1, r7, r2
ldrh r0, [r1, #0x00]
ldr r0, _0800AF24 @ =0x00001741
strh r0, [r1, #0x00]
mov r0, r9
cmp r0, #0x00
beq _0800AF30
adds r2, #0x1A
adds r1, r7, r2
ldrh r0, [r1, #0x00]
movs r0, #0xFF
strh r0, [r1, #0x00]
ldr r0, _0800AF28 @ =0x0000121A
adds r1, r7, r0
ldrh r0, [r1, #0x00]
movs r0, #0x10
strh r0, [r1, #0x00]
subs r2, #0x2E
adds r1, r7, r2
movs r0, #0xB4
lsls r0, r0, #0x01
str r0, [r1, #0x00]
ldr r0, _0800AF2C @ =0x000011EC
adds r1, r7, r0
movs r0, #0x50
str r0, [r1, #0x00]
adds r2, #0x08
adds r1, r7, r2
movs r0, #0x00
str r0, [r1, #0x00]
b _0800AF4C
.byte 0x00, 0x00
_0800AF0C: .4byte 0x000011FE
_0800AF10: .4byte 0x00004604
_0800AF14: .4byte 0x00001204
_0800AF18: .4byte 0x0000020B
_0800AF1C: .4byte 0x0000120A
_0800AF20: .4byte 0x0000448E
_0800AF24: .4byte 0x00001741
_0800AF28: .4byte 0x0000121A
_0800AF2C: .4byte 0x000011EC
_0800AF30:
ldr r0, [r7, #0x50]
cmp r0, #0x00
bne _0800AF4C
ldr r0, _0800AF7C @ =0x00001216
adds r1, r7, r0
ldrh r0, [r1, #0x00]
movs r0, #0xBD
lsls r0, r0, #0x06
strh r0, [r1, #0x00]
ldr r2, _0800AF80 @ =0x00001218
adds r1, r7, r2
ldrh r0, [r1, #0x00]
ldr r0, _0800AF84 @ =0x00000A06
strh r0, [r1, #0x00]
_0800AF4C:
ldr r0, _0800AF88 @ =0x000011F8
adds r1, r7, r0
movs r0, #0x01
str r0, [r1, #0x00]
movs r2, #0x90
lsls r2, r2, #0x05
adds r1, r7, r2
ldrh r0, [r1, #0x00]
movs r2, #0x00
ldr r0, _0800AF8C @ =0x0000FF60
strh r0, [r1, #0x00]
ldr r1, _0800AF90 @ =0x00001202
adds r0, r7, r1
ldrh r1, [r0, #0x00]
strh r2, [r0, #0x00]
add sp, #0x004
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_0800AF7C: .4byte 0x00001216
_0800AF80: .4byte 0x00001218
_0800AF84: .4byte 0x00000A06
_0800AF88: .4byte 0x000011F8
_0800AF8C: .4byte 0x0000FF60
_0800AF90: .4byte 0x00001202
thumb_func_start sub_800AF94
sub_800AF94:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x050
mov r8, r0
str r1, [sp, #0x018]
movs r7, #0xE7
lsls r7, r7, #0x03
add r7, r8
movs r0, #0x00
str r0, [sp, #0x01C]
movs r1, #0x00
str r1, [sp, #0x020]
movs r2, #0x00
str r2, [sp, #0x024]
str r1, [r7, #0x00]
str r1, [r7, #0x04]
subs r0, #0x01
str r0, [r7, #0x08]
str r1, [r7, #0x0C]
movs r0, #0x01
str r0, [r7, #0x10]
str r1, [r7, #0x14]
str r1, [r7, #0x18]
ldr r0, _0800B028 @ =0x000007E4
add r0, r8
str r1, [r0, #0x00]
movs r0, #0xFD
lsls r0, r0, #0x03
add r0, r8
str r1, [r0, #0x00]
ldr r0, _0800B02C @ =0x000007EC
add r0, r8
str r1, [r0, #0x00]
movs r2, #0xFE
lsls r2, r2, #0x03
add r2, r8
movs r0, #0xA0
strh r0, [r2, #0x00]
ldr r0, _0800B030 @ =0x000007F2
add r0, r8
strh r1, [r0, #0x00]
ldr r0, _0800B034 @ =0x000007F4
add r0, r8
str r1, [r0, #0x00]
movs r0, #0xFF
lsls r0, r0, #0x03
add r0, r8
str r1, [r0, #0x00]
movs r1, #0x60
ldr r3, [sp, #0x018]
cmp r3, #0x00
beq _0800B004
movs r1, #0x5E
_0800B004:
ldr r0, _0800B038 @ =0x000007FC
add r0, r8
strh r1, [r0, #0x00]
ldr r4, [sp, #0x018]
cmp r4, #0x00
beq _0800B054
mov r6, r8
ldr r0, [r6, #0x10]
cmp r0, #0x00
beq _0800B040
ldr r0, _0800B03C @ =0x000011E4
add r0, r8
ldr r0, [r0, #0x00]
movs r2, #0x41
cmp r0, #0x00
bne _0800B056
movs r2, #0x3C
b _0800B056
_0800B028: .4byte 0x000007E4
_0800B02C: .4byte 0x000007EC
_0800B030: .4byte 0x000007F2
_0800B034: .4byte 0x000007F4
_0800B038: .4byte 0x000007FC
_0800B03C: .4byte 0x000011E4
_0800B040:
ldr r0, _0800B050 @ =0x000011E4
add r0, r8
ldr r0, [r0, #0x00]
movs r2, #0x55
cmp r0, #0x00
bne _0800B056
movs r2, #0x50
b _0800B056
_0800B050: .4byte 0x000011E4
_0800B054:
movs r2, #0x30
_0800B056:
adds r3, r7, #0x0
adds r3, #0xC6
movs r1, #0x00
strh r2, [r3, #0x00]
adds r0, r7, #0x0
adds r0, #0xC8
str r1, [r0, #0x00]
adds r2, r7, #0x0
adds r2, #0xCC
str r1, [r2, #0x00]
adds r0, #0x08
str r1, [r0, #0x00]
movs r1, #0x70
str r3, [sp, #0x048]
str r2, [sp, #0x04C]
ldr r0, [sp, #0x018]
cmp r0, #0x00
beq _0800B07C
movs r1, #0x40
_0800B07C:
adds r0, r7, #0x0
adds r0, #0xD4
strh r1, [r0, #0x00]
str r0, [sp, #0x028]
ldr r1, [sp, #0x018]
cmp r1, #0x00
beq _0800B0A0
ldr r0, _0800B09C @ =0x000011E4
add r0, r8
ldr r0, [r0, #0x00]
movs r1, #0x6D
cmp r0, #0x00
bne _0800B0A2
movs r1, #0x68
b _0800B0A2
.byte 0x00, 0x00
_0800B09C: .4byte 0x000011E4
_0800B0A0:
movs r1, #0x58
_0800B0A2:
adds r3, r7, #0x0
adds r3, #0xD6
movs r2, #0x00
strh r1, [r3, #0x00]
adds r0, r7, #0x0
adds r0, #0xD8
str r2, [r0, #0x00]
adds r1, r7, #0x0
adds r1, #0xDC
movs r0, #0x01
negs r0, r0
str r0, [r1, #0x00]
adds r0, r7, #0x0
adds r0, #0xE0
str r2, [r0, #0x00]
adds r0, #0x04
str r2, [r0, #0x00]
adds r0, #0x04
str r2, [r0, #0x00]
adds r1, #0x10
movs r0, #0x05
str r0, [r1, #0x00]
adds r0, r7, #0x0
adds r0, #0xF0
str r2, [r0, #0x00]
movs r2, #0x64
str r3, [sp, #0x02C]
str r1, [sp, #0x030]
ldr r3, [sp, #0x018]
cmp r3, #0x00
beq _0800B0E2
movs r2, #0x68
_0800B0E2:
adds r0, r7, #0x0
adds r0, #0xF4
strh r2, [r0, #0x00]
str r0, [sp, #0x034]
ldr r4, [sp, #0x018]
cmp r4, #0x00
beq _0800B104
ldr r0, _0800B100 @ =0x000011E4
add r0, r8
ldr r0, [r0, #0x00]
movs r2, #0x65
cmp r0, #0x00
bne _0800B106
movs r2, #0x60
b _0800B106
_0800B100: .4byte 0x000011E4
_0800B104:
movs r2, #0x40
_0800B106:
adds r4, r7, #0x0
adds r4, #0xF6
movs r1, #0x00
strh r2, [r4, #0x00]
adds r0, r7, #0x0
adds r0, #0xF8
str r1, [r0, #0x00]
adds r0, #0x04
str r1, [r0, #0x00]
movs r6, #0x80
lsls r6, r6, #0x01
adds r2, r7, r6
movs r0, #0x05
str r0, [r2, #0x00]
movs r2, #0x82
lsls r2, r2, #0x01
adds r0, r7, r2
str r1, [r0, #0x00]
movs r3, #0xA1
lsls r3, r3, #0x03
adds r0, r7, r3
str r1, [r0, #0x00]
ldr r6, _0800B21C @ =0x0000050C
adds r0, r7, r6
str r1, [r0, #0x00]
movs r2, #0xA2
lsls r2, r2, #0x03
adds r0, r7, r2
str r1, [r0, #0x00]
adds r3, #0x0C
adds r0, r7, r3
movs r2, #0xA0
lsls r2, r2, #0x01
strh r2, [r0, #0x00]
adds r6, #0x0A
adds r0, r7, r6
strh r2, [r0, #0x00]
movs r2, #0xA3
lsls r2, r2, #0x03
adds r0, r7, r2
str r1, [r0, #0x00]
adds r3, #0x08
adds r0, r7, r3
str r1, [r0, #0x00]
adds r6, #0x0A
adds r0, r7, r6
str r1, [r0, #0x00]
adds r2, #0x0C
adds r0, r7, r2
str r1, [r0, #0x00]
adds r3, #0x0C
adds r0, r7, r3
str r1, [r0, #0x00]
adds r6, #0xDC
adds r0, r7, r6
str r1, [r0, #0x00]
adds r2, #0xDC
adds r0, r7, r2
str r1, [r0, #0x00]
adds r3, #0xDC
adds r0, r7, r3
str r1, [r0, #0x00]
adds r6, #0x0C
adds r0, r7, r6
str r1, [r0, #0x00]
subs r2, #0xD4
adds r0, r7, r2
str r1, [r0, #0x00]
subs r3, #0xD4
adds r0, r7, r3
str r1, [r0, #0x00]
subs r6, #0xD4
adds r0, r7, r6
str r1, [r0, #0x00]
adds r2, #0x0C
adds r0, r7, r2
str r1, [r0, #0x00]
mov r0, r8
bl sub_8001FC0
ldr r1, _0800B220 @ =0x06003000
movs r0, #0x00
bl map_setBufferDestination
ldr r1, _0800B224 @ =0x06001000
movs r0, #0x01
bl map_setBufferDestination
mov r0, r8
bl spm_getSavedCup
mov r3, r8
str r0, [r3, #0x1C]
str r0, [r7, #0x00]
mov r0, r8
bl spm_getSavedTrack
mov r6, r8
str r0, [r6, #0x20]
str r0, [r7, #0x04]
mov r0, r8
ldr r1, [sp, #0x018]
bl spm_loadBgGfx
mov r0, r8
bl spm_loadOtherGfx
ldr r1, [r6, #0x18]
movs r0, #0x07
str r0, [sp, #0x000]
mov r0, r8
movs r2, #0x00
movs r3, #0x01
bl renderCharacterSprites
ldr r1, [r6, #0x10]
str r4, [sp, #0x038]
cmp r1, #0x03
beq _0800B238
movs r0, #0x02
cmp r1, #0x01
beq _0800B1FC
ldr r0, [r6, #0x14]
_0800B1FC:
lsls r0, r0, #0x02
ldr r1, _0800B228 @ =0x0000111C
add r1, r8
adds r1, r1, r0
ldr r0, [r1, #0x00]
cmp r0, #0x00
beq _0800B246
bl dmaq_getVBlankDmaQueue
ldr r1, _0800B22C @ =0x0807D694
ldr r2, _0800B230 @ =0x06008660
ldr r3, _0800B234 @ =0x80000100
bl dmaq_enqueue
b _0800B246
.byte 0x00, 0x00
_0800B21C: .4byte 0x0000050C
_0800B220: .4byte 0x06003000
_0800B224: .4byte 0x06001000
_0800B228: .4byte 0x0000111C
_0800B22C: .4byte 0x0807D694
_0800B230: .4byte 0x06008660
_0800B234: .4byte 0x80000100
_0800B238:
bl dmaq_getVBlankDmaQueue
ldr r1, _0800B25C @ =0x0807D894
ldr r2, _0800B260 @ =0x06008660
ldr r3, _0800B264 @ =0x80000100
bl dmaq_enqueue
_0800B246:
mov r1, r8
ldr r0, [r1, #0x10]
cmp r0, #0x00
bne _0800B274
ldr r1, _0800B268 @ =0x03000040
movs r0, #0x0A
str r0, [r1, #0x00]
ldr r1, _0800B26C @ =0x03000044
ldr r0, _0800B270 @ =0x080D95BC
b _0800B27E
.byte 0x00, 0x00
_0800B25C: .4byte 0x0807D894
_0800B260: .4byte 0x06008660
_0800B264: .4byte 0x80000100
_0800B268: .4byte 0x03000040
_0800B26C: .4byte 0x03000044
_0800B270: .4byte 0x080D95BC
_0800B274:
ldr r1, _0800B2DC @ =0x03000040
movs r0, #0x0C
str r0, [r1, #0x00]
ldr r1, _0800B2E0 @ =0x03000044
ldr r0, _0800B2E4 @ =0x080D9588
_0800B27E:
str r0, [r1, #0x00]
ldr r2, _0800B2E8 @ =0x00000D88
add r2, r8
ldr r3, [r1, #0x00]
movs r0, #0x80
movs r1, #0x18
bl sub_8003FD0
mov r2, sp
adds r2, #0x10
str r2, [sp, #0x03C]
thumb_func_start sub_800B294
sub_800B294:
ldr r0, _0800B2EC @ =0x0203EBFC
ldr r0, [r0, #0x00]
cmp r0, #0x00
bne _0800B2A0
bl oam_update
_0800B2A0:
bl main_frameProc
movs r3, #0xA6
lsls r3, r3, #0x03
adds r0, r7, r3
movs r2, #0x00
str r2, [r0, #0x00]
ldr r4, _0800B2F0 @ =0x00000534
adds r0, r7, r4
str r2, [r0, #0x00]
movs r6, #0xA7
lsls r6, r6, #0x03
adds r0, r7, r6
str r2, [r0, #0x00]
ldr r1, _0800B2F4 @ =0x000011F4
add r1, r8
ldr r0, [r1, #0x00]
adds r0, #0x01
str r0, [r1, #0x00]
mov r1, r8
ldr r0, [r1, #0x4C]
adds r0, #0x01
str r0, [r1, #0x4C]
ldr r0, [r1, #0x10]
cmp r0, #0x00
bne _0800B2F8
movs r0, #0x01
str r0, [r7, #0x0C]
b _0800B2FA
.byte 0x00, 0x00
_0800B2DC: .4byte 0x03000040
_0800B2E0: .4byte 0x03000044
_0800B2E4: .4byte 0x080D9588
_0800B2E8: .4byte 0x00000D88
_0800B2EC: .4byte 0x0203EBFC
_0800B2F0: .4byte 0x00000534
_0800B2F4: .4byte 0x000011F4
_0800B2F8:
str r2, [r7, #0x0C]
_0800B2FA:
mov r0, r8
bl sub_8008938
cmp r0, #0x00
bne _0800B30C
mov r0, r8
bl sub_8003948
b sub_800B294
_0800B30C:
ldr r2, _0800B3C4 @ =0x000005FC
adds r0, r7, r2
ldr r0, [r0, #0x00]
cmp r0, #0x00
beq _0800B3F4
ldr r0, _0800B3C8 @ =0x0000112C
add r0, r8
ldr r0, [r0, #0x00]
cmp r0, #0x00
beq _0800B34C
mov r3, r8
ldr r0, [r3, #0x4C]
movs r1, #0x2F
ands r0, r1
cmp r0, #0x1F
bgt _0800B33C
ldr r0, _0800B3CC @ =0x080C9010
ldr r1, _0800B3D0 @ =0x080D9654
movs r2, #0x00
str r2, [sp, #0x000]
str r2, [sp, #0x004]
movs r3, #0x00
bl oam_renderCellData
_0800B33C:
ldr r0, _0800B3D4 @ =0x080C902C
ldr r1, _0800B3D8 @ =0x080D9658
movs r2, #0x00
str r2, [sp, #0x000]
str r2, [sp, #0x004]
movs r3, #0x00
bl oam_renderCellData
_0800B34C:
mov r0, r8
bl spm_loadOtherGfx
ldr r0, _0800B3DC @ =0x03000040
ldr r0, [r0, #0x00]
ldr r1, _0800B3E0 @ =0x00000D88
add r1, r8
bl sub_8005DAC
mov r0, r8
bl sub_8009590
mov r0, r8
bl sub_8009754
mov r0, r8
bl sub_800A1A4
mov r0, r8
bl sub_8009FAC
mov r0, r8
ldr r1, [sp, #0x018]
bl sub_8009124
mov r0, r8
bl sub_8003948
ldr r4, _0800B3E4 @ =0x00000534
adds r0, r7, r4
ldr r0, [r0, #0x00]
cmp r0, #0x00
beq _0800B394
movs r0, #0x01
bl map_setBufferDirty
_0800B394:
movs r6, #0xA7
lsls r6, r6, #0x03
adds r0, r7, r6
ldr r0, [r0, #0x00]
cmp r0, #0x00
beq _0800B3AE
bl dmaq_getVBlankDmaQueue
ldr r1, _0800B3E8 @ =0x02015400
ldr r2, _0800B3EC @ =0x06015000
ldr r3, _0800B3F0 @ =0x80000600
bl dmaq_enqueue
_0800B3AE:
adds r0, r7, #0x0
adds r0, #0xB0
ldr r1, [r0, #0x00]
cmp r1, #0x00
beq _0800B3BA
b sub_800B294
_0800B3BA:
ldr r2, _0800B3C4 @ =0x000005FC
adds r0, r7, r2
str r1, [r0, #0x00]
b sub_800B294
.byte 0x00, 0x00
_0800B3C4: .4byte 0x000005FC
_0800B3C8: .4byte 0x0000112C
_0800B3CC: .4byte 0x080C9010
_0800B3D0: .4byte 0x080D9654
_0800B3D4: .4byte 0x080C902C
_0800B3D8: .4byte 0x080D9658
_0800B3DC: .4byte 0x03000040
_0800B3E0: .4byte 0x00000D88
_0800B3E4: .4byte 0x00000534
_0800B3E8: .4byte 0x02015400
_0800B3EC: .4byte 0x06015000
_0800B3F0: .4byte 0x80000600
_0800B3F4:
ldr r0, _0800B470 @ =0x03004F48
ldrh r1, [r0, #0x00]
add r0, sp, #0x008
strh r1, [r0, #0x00]
ldr r0, _0800B474 @ =0x03004EA0
ldrh r0, [r0, #0x00]
ldr r3, [sp, #0x03C]
strh r0, [r3, #0x00]
mov r4, r8
ldr r3, [r4, #0x08]
ldr r5, [r4, #0x50]
cmp r3, #0x00
ble _0800B428
movs r2, #0x00
ldr r1, [sp, #0x03C]
adds r1, #0x02
mov r0, sp
adds r0, #0x0A
adds r4, r3, #0x0
_0800B41A:
strh r2, [r1, #0x00]
strh r2, [r0, #0x00]
adds r1, #0x02
adds r0, #0x02
subs r4, #0x01
cmp r4, #0x00
bne _0800B41A
_0800B428:
ldr r6, [sp, #0x01C]
cmp r6, #0x00
blt _0800B4A0
cmp r6, #0x02
ble _0800B43A
cmp r6, #0x12
bgt _0800B4A0
cmp r6, #0x0A
blt _0800B4A0
_0800B43A:
movs r4, #0x00
cmp r4, r3
bgt _0800B4A0
ldr r2, [sp, #0x03C]
_0800B442:
movs r1, #0x02
ldr r0, [sp, #0x01C]
cmp r0, #0x0D
bgt _0800B44C
movs r1, #0x01
_0800B44C:
ldrh r0, [r2, #0x00]
ands r1, r0
cmp r1, #0x00
beq _0800B498
ldr r1, [sp, #0x01C]
cmp r1, #0x02
bgt _0800B47E
mov r2, r8
ldr r0, [r2, #0x10]
cmp r0, #0x03
beq _0800B468
ldr r4, [sp, #0x018]
cmp r4, #0x00
beq _0800B478
_0800B468:
movs r6, #0x05
str r6, [sp, #0x024]
b _0800B48E
.byte 0x00, 0x00
_0800B470: .4byte 0x03004F48
_0800B474: .4byte 0x03004EA0
_0800B478:
movs r0, #0x03
str r0, [sp, #0x024]
b _0800B48E
_0800B47E:
movs r1, #0x01
negs r1, r1
str r1, [sp, #0x024]
ldr r2, [sp, #0x01C]
cmp r2, #0x0D
bgt _0800B48E
movs r4, #0x64
str r4, [sp, #0x024]
_0800B48E:
movs r6, #0x13
str r6, [sp, #0x01C]
movs r0, #0x00
str r0, [sp, #0x020]
b _0800B4A0
_0800B498:
adds r2, #0x02
adds r4, #0x01
cmp r4, r3
ble _0800B442
_0800B4A0:
cmp r5, #0x00
beq _0800B4BC
movs r0, #0x00
mov r1, r8
str r0, [r1, #0x50]
ldr r0, [r1, #0x10]
movs r2, #0x03
str r2, [sp, #0x024]
cmp r0, #0x03
bne _0800B4B8
movs r4, #0x05
str r4, [sp, #0x024]
_0800B4B8:
movs r6, #0x14
str r6, [sp, #0x01C]
_0800B4BC:
ldr r0, [sp, #0x01C]
cmp r0, #0x15
bls _0800B4C6
bl _0800C422
_0800B4C6:
lsls r0, r0, #0x02
ldr r1, _0800B4D0 @ =0x0800B4D4
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
_0800B4D0: .4byte 0x0800B4D4
.byte 0x2C, 0xB5, 0x00, 0x08, 0x54, 0xB5, 0x00, 0x08, 0xD8, 0xB5, 0x00, 0x08, 0x0C, 0xB7, 0x00, 0x08
.byte 0xA0, 0xB9, 0x00, 0x08, 0xBA, 0xBB, 0x00, 0x08, 0x8C, 0xBC, 0x00, 0x08, 0xE6, 0xBE, 0x00, 0x08
.byte 0x42, 0xBF, 0x00, 0x08, 0xA6, 0xBF, 0x00, 0x08, 0x14, 0xC0, 0x00, 0x08, 0x88, 0xC0, 0x00, 0x08
.byte 0xF2, 0xC0, 0x00, 0x08, 0xBC, 0xC1, 0x00, 0x08, 0x14, 0xC0, 0x00, 0x08, 0x1C, 0xC1, 0x00, 0x08
.byte 0x8E, 0xC1, 0x00, 0x08, 0x22, 0xC4, 0x00, 0x08, 0xBC, 0xC1, 0x00, 0x08, 0x3C, 0xC2, 0x00, 0x08
.byte 0x42, 0xC2, 0x00, 0x08, 0x08, 0xC4, 0x00, 0x08, 0x41, 0x46, 0x08, 0x69, 0x03, 0x28, 0x04, 0xD1
.byte 0x40, 0x46, 0x06, 0x99, 0xFF, 0xF7, 0x88, 0xF9, 0x03, 0xE0, 0x40, 0x46, 0x06, 0x99, 0xFF, 0xF7
.byte 0x0B, 0xF9, 0x02, 0x20, 0x04, 0x21, 0x57, 0xF0, 0x67, 0xF8, 0x01, 0x22, 0x00, 0xF0, 0xF3, 0xFC
.byte 0x08, 0x9C, 0x01, 0x34, 0x08, 0x94, 0x10, 0x2C, 0x28, 0xDC, 0x06, 0x9E, 0x00, 0x2E, 0x0F, 0xD0
.byte 0x0F, 0x49, 0x41, 0x44, 0x08, 0x88, 0xFF, 0x20, 0x08, 0x80, 0x20, 0x01, 0x40, 0x42, 0x00, 0x28
.byte 0x00, 0xDA, 0x0F, 0x30, 0x00, 0x11, 0x10, 0x30, 0x0A, 0x49, 0x41, 0x44, 0x0A, 0x88, 0x08, 0x80
.byte 0x09, 0x49, 0x41, 0x44, 0x08, 0x9A, 0x90, 0x00, 0x80, 0x18, 0x40, 0x01, 0x40, 0x42, 0x00, 0x28
.byte 0x00, 0xDA, 0x0F, 0x30, 0x00, 0x11, 0xB4, 0x23, 0x5B, 0x00, 0xC0, 0x18, 0x00, 0xF0, 0x28, 0xFE
.byte 0x16, 0x12, 0x00, 0x00, 0x1A, 0x12, 0x00, 0x00, 0xE8, 0x11, 0x00, 0x00, 0x06, 0x49, 0x41, 0x44
.byte 0x08, 0x88, 0xBD, 0x20, 0x80, 0x01, 0x08, 0x80, 0x04, 0x49, 0x41, 0x44, 0x08, 0x88, 0x04, 0x48
.byte 0x08, 0x80, 0x02, 0x26, 0x00, 0xF0, 0xDD, 0xFD, 0x16, 0x12, 0x00, 0x00, 0x18, 0x12, 0x00, 0x00
.byte 0x0A, 0x06, 0x00, 0x00, 0x41, 0x46, 0x08, 0x69, 0x03, 0x28, 0x03, 0xD0, 0x08, 0x9A, 0x14, 0x2A
.byte 0x07, 0xD1, 0x02, 0xE0, 0x08, 0x9B, 0x00, 0x2B, 0x03, 0xD1, 0x39, 0x1C, 0xAC, 0x31, 0x01, 0x20
.byte 0x08, 0x60, 0x08, 0x9C, 0x01, 0x34, 0x08, 0x94, 0x79, 0x69, 0x88, 0x00, 0x10, 0x30, 0x84, 0x42
.byte 0x43, 0xDC, 0x00, 0x24, 0x8C, 0x42, 0x01, 0xDB, 0x00, 0xF0, 0x09, 0xFF, 0x08, 0x9D, 0x0A, 0x4E
.byte 0xB1, 0x46, 0xA2, 0x46, 0x3E, 0x1C, 0x1C, 0x36, 0x00, 0x2D, 0x2B, 0xDB, 0x14, 0x2D, 0x29, 0xDC
.byte 0x41, 0x46, 0x08, 0x69, 0x03, 0x28, 0x0B, 0xD1, 0x04, 0x48, 0x50, 0x44, 0x0C, 0x22, 0x80, 0x5E
.byte 0x02, 0x1C, 0xF0, 0x32, 0x01, 0x1C, 0x15, 0xE0, 0xFC, 0x94, 0x0D, 0x08, 0x60, 0x95, 0x0D, 0x08
.byte 0x06, 0x9B, 0x00, 0x2B, 0x05, 0xD1, 0x49, 0x46, 0x0C, 0x22, 0x88, 0x5E, 0x02, 0x1C, 0xF0, 0x32
.byte 0x01, 0xE0, 0x8F, 0x22, 0x52, 0x00, 0x2E, 0x21, 0x06, 0x9B, 0x00, 0x2B, 0x02, 0xD1, 0x48, 0x46
.byte 0x0C, 0x23, 0xC1, 0x5E, 0x0A, 0x20, 0x00, 0x90, 0x10, 0x1C, 0x2A, 0x1C, 0x14, 0x23, 0x03, 0xF0
.byte 0x5D, 0xF9, 0xB0, 0x80, 0x04, 0x3D, 0x14, 0x20, 0x81, 0x44, 0x82, 0x44, 0x18, 0x36, 0x01, 0x34
.byte 0x78, 0x69, 0x84, 0x42, 0xC8, 0xDB, 0x00, 0xF0, 0xCA, 0xFE, 0x00, 0x20, 0x0C, 0x99, 0x08, 0x60
.byte 0x80, 0x22, 0x52, 0x00, 0xB9, 0x18, 0x08, 0x60, 0x00, 0x23, 0x08, 0x93, 0x44, 0x46, 0x20, 0x69
.byte 0x03, 0x28, 0x02, 0xD1, 0x05, 0x26, 0x00, 0xF0, 0xB9, 0xFE, 0x06, 0x98, 0x00, 0x28, 0x1D, 0xD0
.byte 0x00, 0x24, 0x78, 0x69, 0x08, 0x99, 0x81, 0x42, 0x0E, 0xDA, 0x00, 0x23, 0x00, 0x22, 0x39, 0x1C
.byte 0x24, 0x31, 0x38, 0x68, 0x84, 0x42, 0x02, 0xD0, 0x4A, 0x80, 0x0A, 0x80, 0x8B, 0x71, 0x18, 0x31
.byte 0x01, 0x34, 0x78, 0x69, 0x84, 0x42, 0xF4, 0xDB, 0x03, 0x4A, 0xB9, 0x18, 0x01, 0x20, 0x08, 0x60
.byte 0x05, 0x23, 0x07, 0x93, 0x00, 0xF0, 0x9B, 0xFE, 0x0C, 0x05, 0x00, 0x00, 0x03, 0x24, 0x07, 0x94
.byte 0x00, 0xF0, 0x95, 0xFE, 0x91, 0x20, 0x54, 0xF0, 0x11, 0xFC, 0x28, 0xE1, 0x90, 0x20, 0x54, 0xF0
.byte 0x0D, 0xFC, 0x0E, 0x26, 0x07, 0x96, 0x22, 0xE1, 0x00, 0x24, 0x0B, 0x48, 0x40, 0x44, 0x82, 0x46
.byte 0x9C, 0x42, 0x00, 0xDD, 0x1B, 0xE1, 0x09, 0x4A, 0x00, 0x25, 0xA9, 0x46, 0x01, 0x26, 0x3B, 0x68
.byte 0x68, 0x46, 0x40, 0x19, 0x08, 0x30, 0x00, 0x88, 0x20, 0x28, 0x18, 0xD0, 0x20, 0x28, 0x07, 0xDC
.byte 0x10, 0x28, 0x19, 0xD0, 0x21, 0xE0, 0x00, 0x00, 0x2C, 0x11, 0x00, 0x00, 0xB4, 0x94, 0x0D, 0x08
.byte 0x40, 0x28, 0x02, 0xD0, 0x80, 0x28, 0x05, 0xD0, 0x17, 0xE0, 0xD8, 0x00, 0x80, 0x18, 0x04, 0x21
.byte 0x41, 0x56, 0x0D, 0xE0, 0xD8, 0x00, 0x80, 0x18, 0x05, 0x21, 0x41, 0x56, 0x08, 0xE0, 0xD8, 0x00
.byte 0x80, 0x18, 0x06, 0x21, 0x41, 0x56, 0x03, 0xE0, 0xD8, 0x00, 0x80, 0x18, 0x07, 0x21, 0x41, 0x56
.byte 0x01, 0x20, 0x40, 0x42, 0x81, 0x42, 0x00, 0xD0, 0x39, 0x60, 0x38, 0x68, 0x83, 0x42, 0x34, 0xD0
.byte 0x8D, 0x20, 0x54, 0xF0, 0xCB, 0xFB, 0x39, 0x68, 0x40, 0x46, 0xFD, 0xF7, 0xE3, 0xF9, 0x41, 0x46
.byte 0x08, 0x69, 0x02, 0x21, 0x01, 0x28, 0x01, 0xD0, 0x42, 0x46, 0x51, 0x69, 0x88, 0x00, 0x06, 0x49
.byte 0x41, 0x44, 0x09, 0x18, 0x08, 0x68, 0x00, 0x28, 0x08, 0xD0, 0x38, 0x68, 0x04, 0x28, 0x05, 0xD1
.byte 0x03, 0x20, 0x13, 0x9B, 0x18, 0x60, 0x04, 0xE0, 0x1C, 0x11, 0x00, 0x00, 0x4C, 0x46, 0x13, 0x98
.byte 0x04, 0x60, 0x00, 0x21, 0x0C, 0x9A, 0x11, 0x60, 0x80, 0x23, 0x5B, 0x00, 0xF8, 0x18, 0x01, 0x60
.byte 0x44, 0x46, 0x20, 0x69, 0x00, 0x28, 0x04, 0xD0, 0xA5, 0x22, 0xD2, 0x00, 0xB8, 0x18, 0x01, 0x60
.byte 0x79, 0x60, 0x38, 0x1C, 0xAC, 0x30, 0x06, 0x60, 0xB1, 0xE0, 0x0F, 0x99, 0x48, 0x19, 0x01, 0x88
.byte 0x09, 0x20, 0x08, 0x40, 0x00, 0x28, 0x31, 0xD0, 0x00, 0x20, 0x44, 0x46, 0x22, 0x69, 0x02, 0x21
.byte 0x01, 0x2A, 0x00, 0xD0, 0x61, 0x69, 0x03, 0x2A, 0x17, 0xD0, 0x05, 0x48, 0x40, 0x44, 0x00, 0x68
.byte 0x00, 0x28, 0x09, 0xD1, 0x58, 0x00, 0xC0, 0x18, 0x40, 0x18, 0x80, 0x00, 0x01, 0x49, 0x09, 0xE0
.byte 0xE4, 0x11, 0x00, 0x00, 0xA4, 0x10, 0x00, 0x00, 0x58, 0x00, 0xC0, 0x18, 0x40, 0x18, 0x80, 0x00
.byte 0x87, 0x21, 0x49, 0x01, 0x41, 0x44, 0x09, 0x18, 0x08, 0x68, 0x00, 0x28, 0x00, 0xD0, 0x59, 0xE7
.byte 0x8E, 0x20, 0x54, 0xF0, 0x6B, 0xFB, 0x04, 0x49, 0x78, 0x18, 0x06, 0x60, 0x38, 0x68, 0x42, 0x46
.byte 0xD0, 0x61, 0x04, 0x23, 0x07, 0x93, 0x7A, 0xE0, 0x0C, 0x05, 0x00, 0x00, 0x02, 0x20, 0x08, 0x40
.byte 0x00, 0x28, 0x00, 0xD0, 0x4A, 0xE7, 0xC0, 0x23, 0x9B, 0x00, 0x18, 0x1C, 0x08, 0x40, 0x00, 0x28
.byte 0x66, 0xD0, 0x44, 0x46, 0x20, 0x69, 0x03, 0x28, 0x69, 0xD0, 0x19, 0x48, 0x40, 0x44, 0x00, 0x68
.byte 0x00, 0x28, 0x64, 0xD0, 0x78, 0x69, 0x41, 0x00, 0x09, 0x18, 0xC9, 0x00, 0xC9, 0x19, 0x12, 0x20
.byte 0x08, 0x56, 0x01, 0x28, 0x5B, 0xD1, 0x93, 0x20, 0x54, 0xF0, 0x40, 0xFB, 0x00, 0x22, 0x78, 0x69
.byte 0x3D, 0x1C, 0xB0, 0x35, 0x82, 0x42, 0x08, 0xDA, 0x05, 0x23, 0x39, 0x1C, 0x1C, 0x31, 0x8B, 0x73
.byte 0x18, 0x31, 0x01, 0x32, 0x78, 0x69, 0x82, 0x42, 0xF9, 0xDB, 0x08, 0x20, 0x28, 0x60, 0xC0, 0x21
.byte 0xC9, 0x00, 0x78, 0x18, 0x06, 0x60, 0x07, 0x48, 0x40, 0x44, 0x00, 0x68, 0x00, 0x28, 0x11, 0xD1
.byte 0x24, 0xF0, 0xAE, 0xFD, 0x04, 0x49, 0x05, 0x4A, 0x05, 0x4B, 0x24, 0xF0, 0x81, 0xFD, 0x10, 0xE0
.byte 0x2C, 0x11, 0x00, 0x00, 0xE4, 0x11, 0x00, 0x00, 0x00, 0x80, 0x01, 0x02, 0x00, 0x0A, 0x01, 0x06
.byte 0x00, 0x01, 0x00, 0x80, 0x24, 0xF0, 0x9C, 0xFD, 0x05, 0x49, 0x06, 0x4A, 0x06, 0x4B, 0x24, 0xF0
.byte 0x6F, 0xFD, 0x06, 0x49, 0x41, 0x44, 0x08, 0x68, 0x00, 0x28, 0x09, 0xD1, 0x0E, 0x60, 0x09, 0xE0
.byte 0x00, 0x7C, 0x01, 0x02, 0x00, 0x0A, 0x01, 0x06, 0x00, 0x01, 0x00, 0x80, 0xE4, 0x11, 0x00, 0x00
.byte 0x4A, 0x46, 0x0A, 0x60, 0x4B, 0x46, 0x0C, 0x9C, 0x23, 0x60, 0x80, 0x21, 0x49, 0x00, 0x78, 0x18
.byte 0x03, 0x60, 0x02, 0x4A, 0xB8, 0x18, 0x06, 0x60, 0x09, 0xE0, 0x00, 0x00, 0xFC, 0x05, 0x00, 0x00
.byte 0x02, 0x35, 0x01, 0x34, 0x43, 0x46, 0x98, 0x68, 0x84, 0x42, 0x00, 0xDC, 0xE7, 0xE6, 0x54, 0x46
.byte 0x20, 0x68, 0x00, 0x28, 0x01, 0xD1, 0x00, 0xF0, 0x62, 0xFD, 0x46, 0x46, 0xF0, 0x6C, 0x2F, 0x21
.byte 0x08, 0x40, 0x1F, 0x28, 0x07, 0xDC, 0x09, 0x48, 0x09, 0x49, 0x00, 0x22, 0x00, 0x92, 0x01, 0x92
.byte 0x00, 0x23, 0x24, 0xF0, 0x51, 0xF8, 0x07, 0x48, 0x07, 0x49, 0x00, 0x22, 0x00, 0x92, 0x01, 0x92
.byte 0x00, 0x23, 0x24, 0xF0, 0x49, 0xF8, 0x00, 0xF0, 0x4A, 0xFD, 0x00, 0x00, 0x10, 0x90, 0x0C, 0x08
.byte 0x54, 0x96, 0x0D, 0x08, 0x2C, 0x90, 0x0C, 0x08, 0x58, 0x96, 0x0D, 0x08, 0x41, 0x46, 0x08, 0x69
.byte 0x00, 0x28, 0x1F, 0xD1, 0x08, 0x9A, 0x08, 0x2A, 0x1C, 0xDC, 0xD0, 0x06, 0x00, 0x14, 0x00, 0x28
.byte 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x25, 0x4B, 0xC0, 0x18, 0x01, 0x68
.byte 0x48, 0x00, 0x40, 0x18, 0x00, 0x01, 0x40, 0x42, 0xC0, 0x13, 0x86, 0x24, 0x64, 0x00, 0x00, 0x19
.byte 0x39, 0x1C, 0x98, 0x31, 0x08, 0x80, 0x38, 0x1C, 0x9E, 0x30, 0x80, 0x21, 0x49, 0x00, 0x01, 0x80
.byte 0x02, 0x38, 0x01, 0x80, 0x08, 0x9E, 0x01, 0x36, 0x08, 0x96, 0x10, 0x2E, 0x00, 0xDD, 0xC9, 0xE0
.byte 0x00, 0x24, 0x78, 0x69, 0xB1, 0x06, 0x10, 0x91, 0x3A, 0x1C, 0xC4, 0x32, 0x11, 0x92, 0x84, 0x42
.byte 0x55, 0xDA, 0x89, 0x46, 0x20, 0x23, 0xDB, 0x19, 0x9C, 0x46, 0xA2, 0x46, 0x4E, 0x46, 0x35, 0x14
.byte 0x28, 0x1C, 0x00, 0x2D, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11, 0x0E, 0x49, 0x08, 0x40, 0x80, 0x00
.byte 0x0B, 0x4A, 0x86, 0x18, 0x33, 0x68, 0x0C, 0x4A, 0x52, 0x44, 0x0C, 0x20, 0x11, 0x5E, 0x2E, 0x20
.byte 0x40, 0x1A, 0x58, 0x43, 0xC0, 0x13, 0x91, 0x89, 0x40, 0x18, 0x63, 0x46, 0x18, 0x80, 0x0E, 0x20
.byte 0x11, 0x5E, 0x33, 0x68, 0x42, 0x46, 0x10, 0x69, 0x00, 0x28, 0x07, 0xD0, 0x3C, 0x20, 0x06, 0xE0
.byte 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x03, 0x00, 0x00, 0xFC, 0x94, 0x0D, 0x08, 0x50, 0x20, 0x40, 0x1A
.byte 0x58, 0x43, 0xC0, 0x13, 0x08, 0x18, 0x00, 0x22, 0x63, 0x46, 0x58, 0x80, 0x38, 0x68, 0x84, 0x42
.byte 0x15, 0xD0, 0x4E, 0x46, 0x30, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11, 0x1A, 0x49
.byte 0x08, 0x40, 0x80, 0x00, 0x19, 0x4B, 0xC0, 0x18, 0x01, 0x68, 0x62, 0x20, 0x48, 0x43, 0xC0, 0x13
.byte 0x88, 0x26, 0x76, 0x00, 0x80, 0x19, 0x61, 0x46, 0xC8, 0x80, 0x88, 0x80, 0x8A, 0x72, 0x18, 0x22
.byte 0x94, 0x44, 0x14, 0x23, 0x9A, 0x44, 0x01, 0x34, 0x78, 0x69, 0x84, 0x42, 0xAE, 0xDB, 0x10, 0x9C
.byte 0x20, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x0B, 0x4E
.byte 0x80, 0x19, 0x02, 0x68, 0x51, 0x00, 0x48, 0x42, 0xC0, 0x13, 0x60, 0x30, 0x11, 0x9B, 0x18, 0x80
.byte 0x44, 0x46, 0x20, 0x69, 0x00, 0x28, 0x0F, 0xD0, 0x05, 0x48, 0x40, 0x44, 0x00, 0x68, 0x00, 0x28
.byte 0x08, 0xD1, 0x88, 0x18, 0x80, 0x00, 0x15, 0xE0, 0xFF, 0x03, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08
.byte 0xE4, 0x11, 0x00, 0x00, 0x10, 0x01, 0x0C, 0xE0, 0x03, 0x48, 0x40, 0x44, 0x00, 0x68, 0x00, 0x28
.byte 0x04, 0xD1, 0x50, 0x01, 0x06, 0xE0, 0x00, 0x00, 0xE4, 0x11, 0x00, 0x00, 0xD0, 0x00, 0x80, 0x18
.byte 0x80, 0x00, 0x80, 0x18, 0xC0, 0x13, 0x30, 0x30, 0x12, 0x9E, 0x30, 0x80, 0x50, 0x00, 0x80, 0x18
.byte 0x00, 0x01, 0x40, 0x42, 0xC0, 0x13, 0x70, 0x30, 0x0A, 0x99, 0x08, 0x80, 0x04, 0x48, 0x40, 0x44
.byte 0x00, 0x68, 0x00, 0x28, 0x06, 0xD1, 0x10, 0x01, 0xC0, 0x13, 0x58, 0x30, 0x91, 0x00, 0x07, 0xE0
.byte 0xE4, 0x11, 0x00, 0x00, 0x91, 0x00, 0x88, 0x18, 0x80, 0x00, 0x80, 0x18, 0xC0, 0x13, 0x58, 0x30
.byte 0x0B, 0x9B, 0x18, 0x80, 0xC8, 0x13, 0x64, 0x30, 0x0D, 0x9C, 0x20, 0x80, 0x03, 0x48, 0x40, 0x44
.byte 0x00, 0x68, 0x00, 0x28, 0x04, 0xD1, 0x50, 0x01, 0x06, 0xE0, 0x00, 0x00, 0xE4, 0x11, 0x00, 0x00
.byte 0xD0, 0x00, 0x80, 0x18, 0x80, 0x00, 0x80, 0x18, 0xC0, 0x13, 0x40, 0x30, 0x0E, 0x9E, 0x30, 0x80
.byte 0x00, 0xF0, 0x4D, 0xFC, 0x00, 0x24, 0x78, 0x69, 0x84, 0x42, 0x09, 0xDA, 0x00, 0x22, 0x39, 0x1C
.byte 0x24, 0x31, 0x4A, 0x80, 0x0A, 0x80, 0x18, 0x31, 0x01, 0x34, 0x78, 0x69, 0x84, 0x42, 0xF8, 0xDB
.byte 0x41, 0x46, 0x08, 0x69, 0x05, 0x22, 0x07, 0x92, 0x00, 0x28, 0x01, 0xD0, 0x00, 0xF0, 0x24, 0xFC
.byte 0x08, 0x23, 0x00, 0xF0, 0x20, 0xFC, 0xA5, 0x26, 0xF6, 0x00, 0xB9, 0x19, 0x00, 0x20, 0x08, 0x60
.byte 0x01, 0x20, 0xF8, 0x60, 0x00, 0x24, 0x41, 0x46, 0x88, 0x68, 0x84, 0x42, 0x01, 0xDD, 0x00, 0xF0
.byte 0x26, 0xFC, 0x08, 0x4D, 0x01, 0x23, 0x5B, 0x42, 0x0F, 0x9A, 0x00, 0x26, 0x79, 0x68, 0x68, 0x46
.byte 0x80, 0x19, 0x08, 0x30, 0x00, 0x88, 0x20, 0x28, 0x17, 0xD0, 0x20, 0x28, 0x04, 0xDC, 0x10, 0x28
.byte 0x19, 0xD0, 0x20, 0xE0, 0xDC, 0x94, 0x0D, 0x08, 0x40, 0x28, 0x02, 0xD0, 0x80, 0x28, 0x06, 0xD0
.byte 0x19, 0xE0, 0xC8, 0x00, 0x40, 0x19, 0x00, 0x79, 0x00, 0x06, 0x00, 0x16, 0x10, 0xE0, 0xC8, 0x00
.byte 0x40, 0x19, 0x40, 0x79, 0x00, 0x06, 0x00, 0x16, 0x0A, 0xE0, 0xC8, 0x00, 0x40, 0x19, 0x80, 0x79
.byte 0x00, 0x06, 0x00, 0x16, 0x04, 0xE0, 0xC8, 0x00, 0x40, 0x19, 0xC0, 0x79, 0x00, 0x06, 0x00, 0x16
.byte 0x98, 0x42, 0x00, 0xD0, 0x78, 0x60, 0x78, 0x68, 0x81, 0x42, 0x00, 0xD0, 0xB2, 0xE3, 0x11, 0x88
.byte 0x09, 0x20, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD0, 0xC2, 0xE3, 0x02, 0x20, 0x08, 0x40, 0x00, 0x28
.byte 0x12, 0xD0, 0x90, 0x20, 0x54, 0xF0, 0x62, 0xF9, 0x06, 0x4A, 0xB8, 0x18, 0x04, 0x21, 0x01, 0x60
.byte 0x43, 0x46, 0x18, 0x69, 0x06, 0x24, 0x07, 0x94, 0x03, 0x28, 0x00, 0xD0, 0x8A, 0xE2, 0x0E, 0x26
.byte 0x87, 0xE2, 0x00, 0x00, 0x0C, 0x05, 0x00, 0x00, 0x02, 0x32, 0x02, 0x36, 0x01, 0x34, 0x41, 0x46
.byte 0x88, 0x68, 0x84, 0x42, 0xAA, 0xDD, 0xCA, 0xE3, 0x42, 0x46, 0x11, 0x69, 0x00, 0x29, 0x22, 0xD1
.byte 0x08, 0x9B, 0x08, 0x2B, 0x1A, 0xDC, 0xD8, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30
.byte 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x08, 0x4C, 0x00, 0x19, 0x01, 0x68, 0x48, 0x00, 0x40, 0x18
.byte 0x00, 0x01, 0xC0, 0x13, 0xDC, 0x30, 0x39, 0x1C, 0x98, 0x31, 0x08, 0x80, 0x38, 0x1C, 0x9E, 0x30
.byte 0x80, 0x21, 0x49, 0x00, 0x04, 0xE0, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0x38, 0x1C, 0x9E, 0x30
.byte 0x01, 0x80, 0x02, 0x38, 0x01, 0x80, 0x08, 0x9E, 0x01, 0x36, 0x08, 0x96, 0x10, 0x2E, 0x00, 0xDD
.byte 0xF0, 0xE0, 0x00, 0x24, 0x78, 0x69, 0xB1, 0x06, 0x10, 0x91, 0x3A, 0x1C, 0xC4, 0x32, 0x11, 0x92
.byte 0x84, 0x42, 0x58, 0xDA, 0x89, 0x46, 0x3E, 0x1C, 0x20, 0x36, 0xA2, 0x46, 0x12, 0x4B, 0x9C, 0x46
.byte 0x48, 0x46, 0x03, 0x14, 0x18, 0x1C, 0x00, 0x2B, 0x00, 0xDA, 0x3F, 0x30, 0x80, 0x11, 0x61, 0x46
.byte 0x08, 0x40, 0x80, 0x00, 0x0D, 0x4A, 0x85, 0x18, 0x0D, 0x49, 0x51, 0x44, 0x0C, 0x22, 0x88, 0x5E
.byte 0x2E, 0x38, 0x2A, 0x68, 0x50, 0x43, 0xC0, 0x13, 0x2E, 0x30, 0x30, 0x80, 0x0E, 0x22, 0x88, 0x5E
.byte 0x2A, 0x68, 0x43, 0x46, 0x19, 0x69, 0x50, 0x23, 0x00, 0x29, 0x0B, 0xD0, 0x3C, 0x23, 0x00, 0x29
.byte 0x08, 0xD0, 0x3C, 0x38, 0x07, 0xE0, 0x00, 0x00, 0xFF, 0x03, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08
.byte 0xFC, 0x94, 0x0D, 0x08, 0x50, 0x38, 0x50, 0x43, 0xC0, 0x13, 0x18, 0x18, 0x00, 0x22, 0x70, 0x80
.byte 0x38, 0x68, 0x84, 0x42, 0x18, 0xD0, 0x49, 0x46, 0x08, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30
.byte 0x80, 0x11, 0x63, 0x46, 0x18, 0x40, 0x80, 0x00, 0x19, 0x49, 0x40, 0x18, 0x01, 0x68, 0x48, 0x00
.byte 0x40, 0x18, 0x00, 0x01, 0x40, 0x18, 0x40, 0x00, 0x40, 0x42, 0xC0, 0x13, 0xB9, 0x23, 0x5B, 0x00
.byte 0xC0, 0x18, 0xF0, 0x80, 0xB0, 0x80, 0xB2, 0x72, 0x18, 0x36, 0x14, 0x20, 0x82, 0x44, 0x01, 0x34
.byte 0x78, 0x69, 0x84, 0x42, 0xAC, 0xDB, 0x10, 0x99, 0x08, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30
.byte 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x0A, 0x4A, 0x80, 0x18, 0x02, 0x68, 0x50, 0x00, 0xC0, 0x13
.byte 0x5E, 0x30, 0x11, 0x9B, 0x18, 0x80, 0x44, 0x46, 0x20, 0x69, 0x00, 0x28, 0x0C, 0xD0, 0x05, 0x48
.byte 0x40, 0x44, 0x00, 0x68, 0x41, 0x23, 0x00, 0x28, 0x0D, 0xD1, 0x3C, 0x23, 0x0B, 0xE0, 0x00, 0x00
.byte 0x5C, 0x64, 0x0E, 0x08, 0xE4, 0x11, 0x00, 0x00, 0x0B, 0x48, 0x40, 0x44, 0x00, 0x68, 0x55, 0x23
.byte 0x00, 0x28, 0x00, 0xD1, 0x50, 0x23, 0x46, 0x46, 0x30, 0x69, 0x00, 0x28, 0x10, 0xD0, 0x06, 0x48
.byte 0x40, 0x44, 0x00, 0x68, 0x00, 0x28, 0x09, 0xD1, 0x51, 0x00, 0x88, 0x18, 0x80, 0x00, 0x40, 0x42
.byte 0xC0, 0x13, 0x18, 0x18, 0x16, 0xE0, 0x00, 0x00, 0xE4, 0x11, 0x00, 0x00, 0x10, 0x01, 0x0C, 0xE0
.byte 0x03, 0x48, 0x40, 0x44, 0x00, 0x68, 0x00, 0x28, 0x04, 0xD1, 0x50, 0x01, 0x06, 0xE0, 0x00, 0x00
.byte 0xE4, 0x11, 0x00, 0x00, 0xD0, 0x00, 0x80, 0x18, 0x80, 0x00, 0x80, 0x18, 0x40, 0x42, 0xC0, 0x13
.byte 0x18, 0x18, 0x51, 0x00, 0x12, 0x9B, 0x18, 0x80, 0x88, 0x18, 0x00, 0x01, 0xC0, 0x13, 0x40, 0x30
.byte 0x0A, 0x9C, 0x20, 0x80, 0x07, 0x48, 0x40, 0x44, 0x00, 0x68, 0x6D, 0x23, 0x00, 0x28, 0x0B, 0xD1
.byte 0x68, 0x23, 0x00, 0x28, 0x08, 0xD1, 0x10, 0x01, 0x40, 0x42, 0xC0, 0x13, 0x18, 0x18, 0x91, 0x00
.byte 0x09, 0xE0, 0x00, 0x00, 0xE4, 0x11, 0x00, 0x00, 0x91, 0x00, 0x88, 0x18, 0x80, 0x00, 0x80, 0x18
.byte 0x40, 0x42, 0xC0, 0x13, 0x18, 0x18, 0x0B, 0x9E, 0x30, 0x80, 0x48, 0x42, 0xC0, 0x13, 0x68, 0x30
.byte 0x0D, 0x99, 0x08, 0x80, 0x05, 0x48, 0x40, 0x44, 0x00, 0x68, 0x65, 0x21, 0x00, 0x28, 0x07, 0xD1
.byte 0x60, 0x21, 0x00, 0x28, 0x04, 0xD1, 0x50, 0x01, 0x06, 0xE0, 0x00, 0x00, 0xE4, 0x11, 0x00, 0x00
.byte 0xD0, 0x00, 0x80, 0x18, 0x80, 0x00, 0x80, 0x18, 0x40, 0x42, 0xC0, 0x13, 0x08, 0x18, 0x0E, 0x9A
.byte 0x10, 0x80, 0xAC, 0xE2, 0x00, 0x24, 0x78, 0x69, 0x84, 0x42, 0x08, 0xDA, 0x01, 0x22, 0x39, 0x1C
.byte 0x1C, 0x31, 0x8A, 0x73, 0x18, 0x31, 0x01, 0x34, 0x78, 0x69, 0x84, 0x42, 0xF9, 0xDB, 0x03, 0x23
.byte 0x89, 0xE2, 0x08, 0x9E, 0x01, 0x36, 0x08, 0x96, 0x06, 0x2E, 0x23, 0xDC, 0x01, 0x20, 0xF8, 0x60
.byte 0x79, 0x68, 0x40, 0x46, 0x08, 0x9A, 0xFD, 0xF7, 0x53, 0xF8, 0x00, 0x20, 0xF8, 0x60, 0xB0, 0x03
.byte 0x06, 0x21, 0x55, 0xF0, 0xD3, 0xFF, 0x0A, 0x49, 0x00, 0x04, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA
.byte 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x01, 0x68, 0x48, 0x00, 0x40, 0x18
.byte 0x00, 0x01, 0x40, 0x42, 0xC0, 0x13, 0x86, 0x21, 0x49, 0x00, 0x40, 0x18, 0x58, 0xE0, 0x00, 0x00
.byte 0x5C, 0x64, 0x0E, 0x08, 0x08, 0x22, 0x07, 0x92, 0x00, 0x23, 0x08, 0x93, 0x6F, 0xE2, 0x44, 0x46
.byte 0xE0, 0x6C, 0x2F, 0x21, 0x08, 0x40, 0x0F, 0x28, 0x03, 0xDC, 0x38, 0x1C, 0x9E, 0x30, 0xD1, 0x31
.byte 0x02, 0xE0, 0x38, 0x1C, 0x9E, 0x30, 0x00, 0x21, 0x01, 0x80, 0x02, 0x38, 0x01, 0x80, 0x00, 0x24
.byte 0x46, 0x46, 0xB3, 0x68, 0x9C, 0x42, 0x00, 0xDD, 0x59, 0xE2, 0x0F, 0x9A, 0x11, 0x88, 0x09, 0x20
.byte 0x08, 0x40, 0x00, 0x28, 0x00, 0xD0, 0x36, 0xE2, 0x02, 0x20, 0x08, 0x40, 0x00, 0x28, 0x0B, 0xD0
.byte 0x90, 0x20, 0x53, 0xF0, 0xCB, 0xFF, 0x41, 0x46, 0x08, 0x69, 0x09, 0x22, 0x07, 0x92, 0x00, 0x28
.byte 0x00, 0xD0, 0x31, 0xE2, 0x06, 0x23, 0x2E, 0xE2, 0x02, 0x32, 0x01, 0x34, 0x9C, 0x42, 0xE5, 0xDD
.byte 0x3D, 0xE2, 0x08, 0x9E, 0x01, 0x36, 0x08, 0x96, 0x06, 0x2E, 0x27, 0xDC, 0x79, 0x68, 0x06, 0x22
.byte 0x92, 0x1B, 0x40, 0x46, 0xFC, 0xF7, 0xF4, 0xFF, 0xB0, 0x03, 0x06, 0x21, 0x55, 0xF0, 0x76, 0xFF
.byte 0x0D, 0x49, 0x00, 0x04, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D
.byte 0x80, 0x00, 0x40, 0x18, 0x01, 0x68, 0x48, 0x00, 0x40, 0x18, 0x00, 0x01, 0xC0, 0x13, 0xDC, 0x30
.byte 0x39, 0x1C, 0x98, 0x31, 0x08, 0x80, 0x38, 0x1C, 0x9E, 0x30, 0x80, 0x21, 0x49, 0x00, 0x01, 0x80
.byte 0x02, 0x38, 0x01, 0x80, 0x13, 0xE2, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0x38, 0x1C, 0x9E, 0x30
.byte 0x00, 0x21, 0x01, 0x80, 0x02, 0x38, 0x01, 0x80, 0x05, 0x20, 0x07, 0x90, 0x08, 0x91, 0x06, 0xE2
.byte 0x39, 0x1C, 0xB0, 0x31, 0x05, 0x20, 0x08, 0x60, 0x03, 0x21, 0x0C, 0x9A, 0x11, 0x60, 0x80, 0x23
.byte 0x5B, 0x00, 0xF8, 0x18, 0x01, 0x60, 0x13, 0x9C, 0x20, 0x68, 0x02, 0x28, 0x00, 0xDC, 0x21, 0x60
.byte 0x00, 0x22, 0x09, 0x4C, 0x20, 0x68, 0x82, 0x42, 0x08, 0xDA, 0x11, 0x23, 0x07, 0x49, 0x41, 0x44
.byte 0x0B, 0x70, 0x18, 0x31, 0x01, 0x32, 0x20, 0x68, 0x82, 0x42, 0xF9, 0xDB, 0x07, 0x9E, 0x0A, 0x2E
.byte 0x06, 0xD0, 0x0E, 0x2E, 0x07, 0xD0, 0xAC, 0xE0, 0x40, 0x00, 0x00, 0x03, 0x96, 0x0D, 0x00, 0x00
.byte 0x0B, 0x20, 0x07, 0x90, 0xA5, 0xE0, 0x00, 0x24, 0x78, 0x69, 0x84, 0x42, 0x08, 0xDA, 0x00, 0x22
.byte 0x39, 0x1C, 0x1C, 0x31, 0x8A, 0x73, 0x18, 0x31, 0x01, 0x34, 0x78, 0x69, 0x84, 0x42, 0xF9, 0xDB
.byte 0x0F, 0x21, 0x95, 0xE0, 0x08, 0x9B, 0x01, 0x33, 0x08, 0x93, 0x08, 0x2B, 0x12, 0xDC, 0x13, 0x49
.byte 0xD8, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00
.byte 0x40, 0x18, 0x01, 0x68, 0x48, 0x00, 0x40, 0x18, 0x00, 0x01, 0xC0, 0x13, 0xDC, 0x30, 0x39, 0x1C
.byte 0x98, 0x31, 0x08, 0x80, 0x38, 0x1C, 0xB0, 0x30, 0x00, 0x68, 0x07, 0x28, 0x00, 0xD0, 0xAE, 0xE1
.byte 0x08, 0x9C, 0x08, 0x2C, 0x00, 0xDC, 0xAA, 0xE1, 0x46, 0x46, 0x30, 0x69, 0x00, 0x28, 0x07, 0xD1
.byte 0xA4, 0x20, 0xC0, 0x00, 0x39, 0x18, 0x01, 0x20, 0x06, 0xE0, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08
.byte 0xA4, 0x22, 0xD2, 0x00, 0xB9, 0x18, 0x04, 0x20, 0x08, 0x60, 0x0C, 0x23, 0x83, 0xE1, 0x08, 0x9E
.byte 0x01, 0x36, 0x08, 0x96, 0x14, 0x2E, 0x00, 0xDC, 0x91, 0xE1, 0x00, 0x24, 0x78, 0x69, 0x84, 0x42
.byte 0x08, 0xDA, 0x02, 0x22, 0x39, 0x1C, 0x1C, 0x31, 0x8A, 0x73, 0x18, 0x31, 0x01, 0x34, 0x78, 0x69
.byte 0x84, 0x42, 0xF9, 0xDB, 0x0D, 0x20, 0x62, 0xE1, 0x08, 0x9A, 0x08, 0x2A, 0x12, 0xDC, 0x17, 0x49
.byte 0xD0, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00
.byte 0x40, 0x18, 0x01, 0x68, 0x48, 0x00, 0x40, 0x18, 0x00, 0x01, 0xC0, 0x13, 0xDC, 0x30, 0x39, 0x1C
.byte 0x98, 0x31, 0x08, 0x80, 0x08, 0x9B, 0x01, 0x33, 0x08, 0x93, 0x10, 0x2B, 0x18, 0xDC, 0x98, 0x00
.byte 0xC0, 0x18, 0x00, 0x01, 0x80, 0x24, 0x64, 0x00, 0x02, 0x19, 0x00, 0x24, 0x78, 0x69, 0x84, 0x42
.byte 0x00, 0xDB, 0x5C, 0xE1, 0x1B, 0x03, 0x39, 0x1C, 0x24, 0x31, 0x4A, 0x80, 0x0A, 0x80, 0x8B, 0x80
.byte 0x18, 0x31, 0x01, 0x34, 0x78, 0x69, 0x84, 0x42, 0xF7, 0xDB, 0x50, 0xE1, 0x5C, 0x64, 0x0E, 0x08
.byte 0x10, 0x26, 0x07, 0x96, 0x00, 0x20, 0x08, 0x90, 0x49, 0xE1, 0x79, 0x69, 0x3D, 0x1C, 0xB0, 0x35
.byte 0x00, 0x29, 0x08, 0xDD, 0x00, 0x22, 0x38, 0x1C, 0x1C, 0x30, 0x0C, 0x1C, 0x02, 0x60, 0x18, 0x30
.byte 0x01, 0x3C, 0x00, 0x2C, 0xFA, 0xD1, 0x28, 0x68, 0x07, 0x28, 0x00, 0xD0, 0x37, 0xE1, 0x12, 0x21
.byte 0x07, 0x91, 0x00, 0x22, 0x08, 0x92, 0x32, 0xE1, 0x08, 0x9B, 0x01, 0x33, 0x08, 0x93, 0x20, 0x2B
.byte 0x28, 0xDC, 0x0F, 0x49, 0x41, 0x44, 0x08, 0x88, 0xFF, 0x20, 0x08, 0x80, 0xD8, 0x0F, 0x18, 0x18
.byte 0x40, 0x10, 0x0C, 0x49, 0x41, 0x44, 0x0A, 0x88, 0x08, 0x80, 0x0B, 0x49, 0x41, 0x44, 0x58, 0x00
.byte 0xC0, 0x18, 0xC0, 0x01, 0x40, 0x42, 0x00, 0x28, 0x00, 0xDA, 0x1F, 0x30, 0x40, 0x11, 0xC8, 0x30
.byte 0x08, 0x60, 0x06, 0x49, 0x41, 0x44, 0x08, 0x68, 0x05, 0x4C, 0x00, 0x19, 0x08, 0x60, 0x0E, 0xE1
.byte 0x16, 0x12, 0x00, 0x00, 0x1A, 0x12, 0x00, 0x00, 0xE8, 0x11, 0x00, 0x00, 0xF0, 0x11, 0x00, 0x00
.byte 0x00, 0xF8, 0xFF, 0xFF, 0x05, 0x21, 0x49, 0x42, 0x01, 0x20, 0x56, 0xF0, 0xFD, 0xF9, 0x39, 0x68
.byte 0x40, 0x46, 0xF6, 0xF7, 0xEF, 0xFD, 0x79, 0x68, 0x40, 0x46, 0xF6, 0xF7, 0x0F, 0xFE, 0x07, 0x9E
.byte 0x0D, 0x2E, 0x38, 0xD1, 0x01, 0x20, 0x19, 0xE2, 0x14, 0x20, 0x07, 0x90, 0xEF, 0xE0, 0x39, 0x68
.byte 0x40, 0x46, 0xF6, 0xF7, 0xDF, 0xFD, 0x79, 0x68, 0x40, 0x46, 0xF6, 0xF7, 0xFF, 0xFD, 0x09, 0x99
.byte 0x03, 0x29, 0x09, 0xD0, 0x03, 0x29, 0x04, 0xDC, 0x01, 0x20, 0x40, 0x42, 0x81, 0x42, 0x10, 0xD0
.byte 0x28, 0xE0, 0x09, 0x9A, 0x05, 0x2A, 0x25, 0xD1, 0x02, 0x20, 0x04, 0x21, 0x56, 0xF0, 0xD4, 0xF9
.byte 0x43, 0x46, 0x18, 0x69, 0x03, 0x28, 0x33, 0xD1, 0x40, 0x46, 0x06, 0x99, 0xFE, 0xF7, 0xE4, 0xFA
.byte 0x32, 0xE0, 0x05, 0x21, 0x49, 0x42, 0x01, 0x20, 0x56, 0xF0, 0xC6, 0xF9, 0x07, 0x49, 0x41, 0x44
.byte 0x08, 0x88, 0xFF, 0x20, 0x08, 0x80, 0x06, 0x49, 0x41, 0x44, 0x08, 0x88, 0x10, 0x20, 0x08, 0x80
.byte 0x01, 0x20, 0x44, 0x46, 0x20, 0x65, 0x00, 0x20, 0xE0, 0xE1, 0x00, 0x00, 0x16, 0x12, 0x00, 0x00
.byte 0x1A, 0x12, 0x00, 0x00, 0x05, 0x21, 0x49, 0x42, 0x01, 0x20, 0x56, 0xF0, 0xAD, 0xF9, 0x06, 0x49
.byte 0x41, 0x44, 0x08, 0x88, 0xFF, 0x20, 0x08, 0x80, 0x04, 0x49, 0x41, 0x44, 0x08, 0x88, 0x10, 0x20
.byte 0x08, 0x80, 0x01, 0x20, 0xCA, 0xE1, 0x00, 0x00, 0x16, 0x12, 0x00, 0x00, 0x1A, 0x12, 0x00, 0x00
.byte 0x40, 0x46, 0x06, 0x99, 0xFE, 0xF7, 0x38, 0xFA, 0x00, 0x24, 0x78, 0x69, 0x3D, 0x1C, 0xB0, 0x35
.byte 0xB4, 0x26, 0xF6, 0x19, 0xB2, 0x46, 0xB8, 0x21, 0xC9, 0x19, 0x89, 0x46, 0x84, 0x42, 0x1A, 0xDA
.byte 0x39, 0x1C, 0x20, 0x31, 0x03, 0x4B, 0x04, 0x4A, 0x46, 0x46, 0x30, 0x69, 0x03, 0x28, 0x05, 0xD1
.byte 0x90, 0x89, 0x08, 0xE0, 0xFC, 0x94, 0x0D, 0x08, 0x60, 0x95, 0x0D, 0x08, 0x2E, 0x20, 0x06, 0x9E
.byte 0x00, 0x2E, 0x00, 0xD1, 0x98, 0x89, 0x08, 0x80, 0x18, 0x31, 0x14, 0x33, 0x14, 0x32, 0x01, 0x34
.byte 0x78, 0x69, 0x84, 0x42, 0xE8, 0xDB, 0x02, 0x20, 0x28, 0x60, 0x00, 0x21, 0x50, 0x46, 0x01, 0x60
.byte 0xA0, 0x20, 0x4A, 0x46, 0x10, 0x80, 0x0C, 0x9B, 0x19, 0x60, 0x80, 0x24, 0x64, 0x00, 0x38, 0x19
.byte 0x01, 0x60, 0x06, 0x9E, 0x00, 0x2E, 0x1A, 0xD0, 0x41, 0x46, 0x08, 0x69, 0x03, 0x28, 0x16, 0xD0
.byte 0x00, 0x24, 0x78, 0x69, 0x84, 0x42, 0x0E, 0xDA, 0x00, 0x23, 0x00, 0x22, 0x39, 0x1C, 0x24, 0x31
.byte 0x38, 0x68, 0x84, 0x42, 0x02, 0xD0, 0x4A, 0x80, 0x0A, 0x80, 0x8B, 0x71, 0x18, 0x31, 0x01, 0x34
.byte 0x78, 0x69, 0x84, 0x42, 0xF4, 0xDB, 0x05, 0x4A, 0xB9, 0x18, 0x01, 0x20, 0x08, 0x60, 0x04, 0x49
.byte 0x41, 0x44, 0xC8, 0x20, 0x08, 0x60, 0x15, 0x23, 0x07, 0x93, 0x40, 0xE0, 0x0C, 0x05, 0x00, 0x00
.byte 0xE8, 0x11, 0x00, 0x00, 0x3C, 0x68, 0xA4, 0x00, 0x24, 0x18, 0x8D, 0x20, 0x53, 0xF0, 0xB6, 0xFD
.byte 0x05, 0x49, 0x02, 0x20, 0x08, 0x60, 0x05, 0x48, 0x04, 0x60, 0xA6, 0x24, 0xE4, 0x00, 0x39, 0x19
.byte 0x01, 0x20, 0x08, 0x60, 0x2B, 0xE0, 0x00, 0x00, 0xFC, 0xEB, 0x03, 0x02, 0x00, 0xEC, 0x03, 0x02
.byte 0x8E, 0x20, 0x53, 0xF0, 0xA3, 0xFD, 0x78, 0x68, 0x46, 0x46, 0x30, 0x62, 0x07, 0x20, 0x07, 0x90
.byte 0x00, 0x21, 0x08, 0x91, 0x1B, 0xE0, 0x8F, 0x20, 0x53, 0xF0, 0x98, 0xFD, 0x04, 0x4A, 0xB9, 0x18
.byte 0x04, 0x20, 0x08, 0x60, 0x0A, 0x23, 0x07, 0x93, 0x00, 0x24, 0x08, 0x94, 0x0F, 0xE0, 0x00, 0x00
.byte 0x0C, 0x05, 0x00, 0x00, 0x75, 0x49, 0x41, 0x44, 0x08, 0x88, 0xBD, 0x20, 0x80, 0x01, 0x08, 0x80
.byte 0x73, 0x49, 0x41, 0x44, 0x08, 0x88, 0x73, 0x48, 0x08, 0x80, 0x09, 0x9E, 0x07, 0x96
_0800C422:
.byte 0x40, 0x46, 0xF6, 0xF7, 0xAA, 0xFE, 0x00, 0x28, 0x04, 0xD0, 0xA7, 0x20, 0xC0, 0x00, 0x39, 0x18
.byte 0x01, 0x20, 0x08, 0x60, 0x40, 0x46, 0xFC, 0xF7, 0x6C, 0xFC, 0x6B, 0x48, 0x00, 0x68, 0x6B, 0x49
.byte 0x41, 0x44, 0xF9, 0xF7, 0xB2, 0xFC, 0x40, 0x46, 0xFD, 0xF7, 0x1B, 0xFC, 0x40, 0x46, 0xFD, 0xF7
.byte 0x9E, 0xF8, 0x40, 0x46, 0xFD, 0xF7, 0x7D, 0xF9, 0x40, 0x46, 0xFD, 0xF7, 0xA2, 0xFE, 0x40, 0x46
.byte 0xFD, 0xF7, 0xA3, 0xFD, 0x40, 0x46, 0x06, 0x99, 0xFC, 0xF7, 0x5B, 0xFE, 0xE7, 0x22, 0xD2, 0x00
.byte 0x42, 0x44, 0x41, 0x46, 0x08, 0x69, 0x00, 0x28, 0x1B, 0xD1, 0xFD, 0x20, 0xC0, 0x00, 0x40, 0x44
.byte 0x03, 0x68, 0x00, 0x2B, 0x15, 0xD1, 0xC6, 0x21, 0x09, 0x01, 0x41, 0x44, 0x08, 0x68, 0x01, 0x30
.byte 0x08, 0x60, 0x40, 0x28, 0x0D, 0xDD, 0x0B, 0x60, 0x51, 0x68, 0x01, 0x31, 0x03, 0x20, 0x01, 0x40
.byte 0x51, 0x60, 0x12, 0x68, 0x92, 0x00, 0x52, 0x18, 0x52, 0x49, 0x02, 0x20, 0x08, 0x60, 0x51, 0x48
.byte 0x02, 0x60, 0xB8, 0x68, 0x7A, 0x68, 0x90, 0x42, 0x03, 0xD1, 0xF9, 0x68, 0x38, 0x69, 0x81, 0x42
.byte 0x08, 0xD0, 0x40, 0x46, 0x11, 0x1C, 0x00, 0x22, 0xFC, 0xF7, 0x6B, 0xFD, 0x78, 0x68, 0xB8, 0x60
.byte 0xF8, 0x68, 0x38, 0x61, 0x00, 0x20, 0x22, 0xF0, 0xAA, 0xF8, 0x02, 0x1C, 0xB0, 0x23, 0x5B, 0x00
.byte 0xD2, 0x18, 0x45, 0x48, 0x01, 0x1C, 0x20, 0x31, 0x44, 0x46, 0xE3, 0x6C, 0x10, 0x24, 0x00, 0x94
.byte 0xF9, 0xF7, 0x87, 0xFC, 0x42, 0x4D, 0x45, 0x44, 0x28, 0x88, 0x00, 0x26, 0x00, 0x20, 0x28, 0x80
.byte 0x40, 0x4C, 0x44, 0x44, 0x21, 0x88, 0x3F, 0x48, 0x08, 0x40, 0x21, 0x88, 0x20, 0x80, 0x40, 0x46
.byte 0x03, 0x69, 0x03, 0x2B, 0x1D, 0xD0, 0x3C, 0x48, 0x40, 0x44, 0x00, 0x68, 0x00, 0x28, 0x18, 0xD1
.byte 0x39, 0x68, 0x02, 0x22, 0x01, 0x2B, 0x01, 0xD0, 0x43, 0x46, 0x5A, 0x69, 0x48, 0x00, 0x40, 0x18
.byte 0x80, 0x18, 0x80, 0x00, 0x36, 0x49, 0x41, 0x44, 0x09, 0x18, 0x08, 0x68, 0x00, 0x28, 0x08, 0xD0
.byte 0x28, 0x88, 0x33, 0x48, 0x28, 0x80, 0x21, 0x88, 0x40, 0x20, 0x01, 0x43, 0x20, 0x88, 0x31, 0x43
.byte 0x21, 0x80, 0x46, 0x46, 0x34, 0x69, 0x01, 0x2C, 0x0F, 0xD1, 0xA6, 0x21, 0xC9, 0x00, 0x78, 0x18
.byte 0x00, 0x68, 0x00, 0x28, 0x09, 0xD0, 0x39, 0x68, 0x89, 0x00, 0x78, 0x68, 0x09, 0x18, 0x40, 0x46
.byte 0xFC, 0xF7, 0x4B, 0xFC, 0x28, 0x4A, 0xB8, 0x18, 0x04, 0x60, 0x40, 0x46, 0xFD, 0xF7, 0x0B, 0xFA
.byte 0x40, 0x46, 0xF7, 0xF7, 0xE0, 0xF9, 0x40, 0x46, 0xF7, 0xF7, 0xD1, 0xF9, 0x00, 0x28, 0x4C, 0xD0
.byte 0x22, 0x48, 0x22, 0x4D, 0x68, 0x60, 0x22, 0x48, 0x28, 0x60, 0x00, 0x24, 0xAC, 0x60, 0x01, 0x20
.byte 0xA8, 0x73, 0x24, 0xF0, 0x44, 0xF8, 0x00, 0x20, 0x22, 0xF0, 0x41, 0xF8, 0x04, 0x80, 0x01, 0x20
.byte 0x22, 0xF0, 0x59, 0xF8, 0x21, 0xF0, 0x31, 0xF8, 0x29, 0x7B, 0x02, 0x20, 0x08, 0x40, 0x00, 0x28
.byte 0x08, 0xD0, 0x2C, 0x1C, 0x02, 0x25, 0x21, 0xF0, 0x28, 0xF8, 0x21, 0x7B, 0x28, 0x1C, 0x08, 0x40
.byte 0x00, 0x28, 0xF8, 0xD1, 0x14, 0x49, 0x41, 0x44, 0x01, 0x20, 0x08, 0x60, 0x64, 0xE6, 0x16, 0x12
.byte 0x00, 0x00, 0x18, 0x12, 0x00, 0x00, 0x0A, 0x06, 0x00, 0x00, 0x40, 0x00, 0x00, 0x03, 0x88, 0x0D
.byte 0x00, 0x00, 0xFC, 0xEB, 0x03, 0x02, 0x00, 0xEC, 0x03, 0x02, 0xB0, 0x23, 0x0B, 0x08, 0x2C, 0x12
.byte 0x00, 0x00, 0xFE, 0x11, 0x00, 0x00, 0xBF, 0xFF, 0x00, 0x00, 0xE4, 0x11, 0x00, 0x00, 0xA4, 0x10
.byte 0x00, 0x00, 0x22, 0x22, 0x00, 0x00, 0x34, 0x05, 0x00, 0x00, 0xFD, 0x06, 0x03, 0x08, 0x70, 0x4F
.byte 0x00, 0x03, 0x39, 0x07, 0x03, 0x08, 0x9C, 0x10, 0x00, 0x00, 0x0C, 0x4B, 0xF8, 0x18, 0x00, 0x68
.byte 0x00, 0x28, 0x02, 0xD0, 0x01, 0x20, 0x22, 0xF0, 0x60, 0xF8, 0xA7, 0x24, 0xE4, 0x00, 0x38, 0x19
.byte 0x00, 0x68, 0x00, 0x28, 0x01, 0xD1, 0xFE, 0xF7, 0x24, 0xFE, 0x23, 0xF0, 0xF2, 0xFE, 0x04, 0x49
.byte 0x05, 0x4A, 0x05, 0x4B, 0x23, 0xF0, 0xC5, 0xFE, 0xFE, 0xF7, 0x1B, 0xFE, 0x00, 0x00, 0x34, 0x05
.byte 0x00, 0x00, 0x00, 0x54, 0x01, 0x02, 0x00, 0x50, 0x01, 0x06, 0x00, 0x06, 0x00, 0x80, 0x14, 0xB0
.byte 0x38, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xAA, 0x46, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47
thumb_func_start sub_800C680
sub_800C680:
add sp, #-0x004
mov r1, sp
movs r0, #0x00
strh r0, [r1, #0x00]
mov r0, sp
ldrh r0, [r0, #0x00]
cmp r0, #0x31
bhi _0800C69C
_0800C690:
ldrh r0, [r1, #0x00]
adds r0, #0x01
strh r0, [r1, #0x00]
ldrh r0, [r1, #0x00]
cmp r0, #0x31
bls _0800C690
_0800C69C:
ldr r2, _0800C6C4 @ =0x04000008
ldrh r1, [r2, #0x00]
ldr r0, _0800C6C8 @ =0x0000FF7F
ands r0, r1
strh r0, [r2, #0x00]
ldrh r0, [r2, #0x00]
strh r0, [r2, #0x00]
ldr r3, _0800C6CC @ =0x0400004C
ldrh r1, [r3, #0x00]
movs r0, #0xFF
lsls r0, r0, #0x08
ands r0, r1
strh r0, [r3, #0x00]
ldrh r1, [r2, #0x00]
ldr r0, _0800C6D0 @ =0x0000FFBF
ands r0, r1
strh r0, [r2, #0x00]
add sp, #0x004
bx lr
.byte 0x00, 0x00
_0800C6C4: .4byte 0x04000008
_0800C6C8: .4byte 0x0000FF7F
_0800C6CC: .4byte 0x0400004C
_0800C6D0: .4byte 0x0000FFBF
thumb_func_start sub_800C6D4
sub_800C6D4:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x010
adds r6, r1, #0x0
adds r4, r2, #0x0
lsls r0, r0, #0x10
lsrs r0, r0, #0x10
lsls r7, r3, #0x0C
add r2, sp, #0x004
add r3, sp, #0x008
mov r1, sp
bl sub_804EFBC
ldr r2, [sp, #0x000]
movs r0, #0x0F
mov r10, r0
movs r3, #0x0F
ands r2, r3
ldr r0, [sp, #0x004]
lsrs r1, r0, #0x04
mov r5, r10
ands r1, r5
ands r0, r3
movs r5, #0x0B
adds r5, r5, r4
mov r9, r5
adds r0, r0, r4
mov r8, r0
adds r1, r1, r4
mov r12, r1
adds r5, r4, #0x0
adds r5, #0x0A
adds r1, r4, r2
ldr r0, [sp, #0x008]
lsrs r2, r0, #0x04
mov r0, r10
ands r2, r0
ldr r0, [sp, #0x008]
ands r3, r0
str r3, [sp, #0x00C]
movs r3, #0x01
mov r10, r3
_0800C72E:
adds r0, r7, #0x0
orrs r0, r1
strh r0, [r6, #0x00]
adds r0, r7, #0x0
orrs r0, r5
strh r0, [r6, #0x02]
adds r0, r7, #0x0
mov r3, r12
orrs r0, r3
strh r0, [r6, #0x04]
adds r0, r7, #0x0
mov r3, r8
orrs r0, r3
strh r0, [r6, #0x06]
adds r0, r7, #0x0
mov r3, r9
orrs r0, r3
strh r0, [r6, #0x08]
adds r0, r4, r2
orrs r0, r7
strh r0, [r6, #0x0A]
ldr r3, [sp, #0x00C]
adds r0, r4, r3
orrs r0, r7
strh r0, [r6, #0x0C]
movs r0, #0x20
add r9, r0
add r8, r0
add r12, r0
adds r5, #0x20
adds r6, #0x40
adds r1, #0x20
adds r4, #0x20
movs r3, #0x01
negs r3, r3
add r10, r3
mov r0, r10
cmp r0, #0x00
bge _0800C72E
add sp, #0x010
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
thumb_func_start sub_800C78C
sub_800C78C:
push {r4, r5, r6, lr}
mov r6, r9
mov r5, r8
push {r5, r6}
adds r4, r0, #0x0
adds r5, r1, #0x0
ldr r0, _0800C934 @ =0x080A97F8
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r6, _0800C938 @ =0x80000C00
adds r1, r4, #0x0
adds r2, r5, #0x0
adds r3, r6, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _0800C93C @ =0x080A9E2C
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
movs r1, #0xC0
lsls r1, r1, #0x05
adds r2, r5, r1
adds r1, r4, #0x0
adds r3, r6, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _0800C940 @ =0x080AA56C
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
movs r3, #0xC0
lsls r3, r3, #0x06
adds r2, r5, r3
adds r1, r4, #0x0
adds r3, r6, #0x0
bl dmaq_enqueue
bl main_frameProc
bl dmaq_getVBlankDmaQueue
ldr r1, _0800C944 @ =0x080ACAFC
movs r3, #0xB0
lsls r3, r3, #0x07
adds r2, r5, r3
ldr r3, _0800C948 @ =0x80000600
mov r9, r3
bl dmaq_enqueue
bl dmaq_getVBlankDmaQueue
ldr r1, _0800C94C @ =0x080ABEFC
movs r3, #0xC8
lsls r3, r3, #0x07
adds r2, r5, r3
ldr r3, _0800C950 @ =0x80000400
mov r8, r3
bl dmaq_enqueue
bl dmaq_getVBlankDmaQueue
ldr r1, _0800C954 @ =0x08063834
movs r3, #0xD8
lsls r3, r3, #0x07
adds r2, r5, r3
ldr r6, _0800C958 @ =0x80000200
adds r3, r6, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _0800C95C @ =0x080776F8
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
movs r1, #0xE8
lsls r1, r1, #0x07
adds r2, r5, r1
adds r1, r4, #0x0
mov r3, r9
bl dmaq_enqueue
bl dmaq_getVBlankDmaQueue
ldr r1, _0800C960 @ =0x0806500C
movs r2, #0xF0
lsls r2, r2, #0x07
adds r5, r5, r2
ldr r3, _0800C964 @ =0x80000120
adds r2, r5, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _0800C968 @ =0x080B25A0
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800C96C @ =0x06015C00
adds r1, r4, #0x0
mov r3, r8
bl dmaq_enqueue
bl main_frameProc
ldr r0, _0800C970 @ =0x080B2770
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800C974 @ =0x06016400
adds r1, r4, #0x0
adds r3, r6, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _0800C978 @ =0x080B2858
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800C97C @ =0x06016C00
adds r1, r4, #0x0
adds r3, r6, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _0800C980 @ =0x080B29C4
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800C984 @ =0x06017000
adds r1, r4, #0x0
adds r3, r6, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _0800C988 @ =0x080B2BC8
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800C98C @ =0x06017800
ldr r3, _0800C990 @ =0x80000100
adds r1, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _0800C994 @ =0x080B2C38
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800C998 @ =0x06017C00
adds r1, r4, #0x0
adds r3, r6, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _0800C99C @ =0x080B3014
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800C9A0 @ =0x06015000
adds r1, r4, #0x0
mov r3, r9
bl dmaq_enqueue
bl main_frameProc
bl main_frameProc
ldr r0, _0800C9A4 @ =0x080B2F9C
ldr r1, _0800C9A8 @ =0x06014C00
bl LZ77UnCompVram
bl main_frameProc
pop {r3, r4}
mov r8, r3
mov r9, r4
pop {r4, r5, r6}
pop {r0}
bx r0
_0800C934: .4byte 0x080A97F8
_0800C938: .4byte 0x80000C00
_0800C93C: .4byte 0x080A9E2C
_0800C940: .4byte 0x080AA56C
_0800C944: .4byte 0x080ACAFC
_0800C948: .4byte 0x80000600
_0800C94C: .4byte 0x080ABEFC
_0800C950: .4byte 0x80000400
_0800C954: .4byte 0x08063834
_0800C958: .4byte 0x80000200
_0800C95C: .4byte 0x080776F8
_0800C960: .4byte 0x0806500C
_0800C964: .4byte 0x80000120
_0800C968: .4byte 0x080B25A0
_0800C96C: .4byte 0x06015C00
_0800C970: .4byte 0x080B2770
_0800C974: .4byte 0x06016400
_0800C978: .4byte 0x080B2858
_0800C97C: .4byte 0x06016C00
_0800C980: .4byte 0x080B29C4
_0800C984: .4byte 0x06017000
_0800C988: .4byte 0x080B2BC8
_0800C98C: .4byte 0x06017800
_0800C990: .4byte 0x80000100
_0800C994: .4byte 0x080B2C38
_0800C998: .4byte 0x06017C00
_0800C99C: .4byte 0x080B3014
_0800C9A0: .4byte 0x06015000
_0800C9A4: .4byte 0x080B2F9C
_0800C9A8: .4byte 0x06014C00
thumb_func_start sub_800C9AC
sub_800C9AC:
push {r4, r5, r6, r7, lr}
adds r4, r0, #0x0
ldr r0, _0800CA74 @ =0x00000D44
adds r7, r4, r0
adds r4, r7, #0x0
ldr r0, _0800CA78 @ =0x08079F18
ldr r5, _0800CA7C @ =0x0200EC00
adds r1, r5, #0x0
bl LZ77UnCompWram
ldr r0, [r4, #0x24]
cmp r0, #0x00
beq _0800C9EE
movs r2, #0x00
adds r1, r5, #0x0
adds r6, r1, #0x0
adds r6, #0x2E
_0800C9CE:
lsls r0, r2, #0x06
adds r5, r2, #0x1
adds r4, r0, r6
adds r0, r0, r1
adds r2, r0, #0x0
adds r2, #0x32
movs r3, #0x03
_0800C9DC:
ldrh r0, [r4, #0x00]
strh r0, [r2, #0x00]
adds r2, #0x02
subs r3, #0x01
cmp r3, #0x00
bge _0800C9DC
adds r2, r5, #0x0
cmp r2, #0x1F
ble _0800C9CE
_0800C9EE:
bl dmaq_getVBlankDmaQueue
ldr r4, _0800CA7C @ =0x0200EC00
adds r1, r4, #0x0
movs r2, #0xC0
lsls r2, r2, #0x13
ldr r3, _0800CA80 @ =0x80000400
bl dmaq_enqueue
ldr r0, [r7, #0x04]
movs r1, #0x01
ands r0, r1
cmp r0, #0x00
beq _0800CA6E
movs r0, #0x00
adds r6, r4, #0x0
adds r6, #0x80
_0800CA10:
lsls r1, r0, #0x07
adds r7, r0, #0x1
adds r0, r6, r1
adds r4, r0, #0x0
adds r4, #0xD8
adds r3, r0, #0x0
adds r3, #0x58
adds r2, r0, #0x0
adds r2, #0x98
adds r1, r1, r6
adds r1, #0x18
movs r5, #0x10
_0800CA28:
ldrh r0, [r2, #0x00]
strh r0, [r1, #0x00]
ldrh r0, [r4, #0x00]
strh r0, [r3, #0x00]
adds r4, #0x02
adds r3, #0x02
adds r2, #0x02
adds r1, #0x02
subs r5, #0x01
cmp r5, #0x00
bge _0800CA28
adds r0, r7, #0x0
cmp r0, #0x06
ble _0800CA10
ldr r0, _0800CA84 @ =0x0200F000
adds r4, r0, #0x0
subs r4, #0xA8
adds r3, r0, #0x0
adds r3, #0x58
adds r2, r0, #0x0
subs r2, #0xE8
adds r1, r0, #0x0
adds r1, #0x18
movs r5, #0x10
_0800CA58:
ldrh r0, [r2, #0x00]
strh r0, [r1, #0x00]
ldrh r0, [r4, #0x00]
strh r0, [r3, #0x00]
adds r4, #0x02
adds r3, #0x02
adds r2, #0x02
adds r1, #0x02
subs r5, #0x01
cmp r5, #0x00
bge _0800CA58
_0800CA6E:
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_0800CA74: .4byte 0x00000D44
_0800CA78: .4byte 0x08079F18
_0800CA7C: .4byte 0x0200EC00
_0800CA80: .4byte 0x80000400
_0800CA84: .4byte 0x0200F000
thumb_func_start sub_800CA88
sub_800CA88:
push {r4, r5, r6, r7, lr}
mov r7, r8
push {r7}
mov r8, r0
adds r4, r1, #0x0
lsls r5, r0, #0x06
ldr r6, _0800CAD0 @ =0x0200F402
adds r1, r5, r6
cmp r4, #0x04
bgt _0800CAB2
ldr r2, _0800CAD4 @ =0x00000321
adds r0, r4, r2
ldr r7, _0800CAD8 @ =0xFFFFF000
adds r2, r7, #0x0
orrs r0, r2
strh r0, [r1, #0x00]
adds r1, #0x40
ldr r7, _0800CADC @ =0x00000341
adds r0, r4, r7
orrs r0, r2
strh r0, [r1, #0x00]
_0800CAB2:
adds r0, r6, #0x2
adds r5, r5, r0
movs r6, #0xD8
lsls r6, r6, #0x02
movs r4, #0xC0
lsls r4, r4, #0x08
movs r0, #0x10
ands r0, r3
cmp r0, #0x00
beq _0800CAE0
movs r1, #0x00
subs r6, #0xA0
movs r4, #0xF0
lsls r4, r4, #0x08
b _0800CAF6
_0800CAD0: .4byte 0x0200F402
_0800CAD4: .4byte 0x00000321
_0800CAD8: .4byte 0xFFFFF000
_0800CADC: .4byte 0x00000341
_0800CAE0:
movs r0, #0x07
ands r0, r3
bl sub_800EDB0
movs r1, #0x02
cmp r0, #0x03
beq _0800CAF6
adds r1, r0, #0x0
cmp r1, #0x02
bne _0800CAF6
movs r1, #0x03
_0800CAF6:
lsls r1, r1, #0x02
adds r1, r6, r1
adds r0, r4, #0x0
orrs r0, r1
strh r0, [r5, #0x00]
adds r0, r1, #0x1
orrs r0, r4
strh r0, [r5, #0x02]
adds r2, r5, #0x0
adds r2, #0x40
adds r0, r1, #0x2
orrs r0, r4
strh r0, [r2, #0x00]
adds r0, r5, #0x0
adds r0, #0x42
adds r1, #0x03
orrs r4, r1
strh r4, [r0, #0x00]
ldr r0, [sp, #0x018]
lsls r0, r0, #0x10
lsrs r0, r0, #0x10
mov r2, r8
lsls r1, r2, #0x06
ldr r2, _0800CB3C @ =0x0200F408
adds r1, r1, r2
movs r2, #0xC8
lsls r2, r2, #0x02
movs r3, #0x0F
bl sub_800C6D4
pop {r3}
mov r8, r3
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_0800CB3C: .4byte 0x0200F408
thumb_func_start sub_800CB40
sub_800CB40:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x014
ldr r1, _0800CC54 @ =0x00000D44
adds r5, r0, r1
movs r0, #0x00
str r0, [sp, #0x004]
ldr r4, _0800CC58 @ =0x0200F400
ldr r2, _0800CC5C @ =0x01000200
add r0, sp, #0x004
adds r1, r4, #0x0
bl CpuFastSet
movs r6, #0x00
ldr r2, _0800CC60 @ =0x0000032D
adds r7, r2, #0x0
ldr r0, _0800CC64 @ =0xFFFFF000
adds r2, r0, #0x0
ldr r1, _0800CC68 @ =0x0000034D
adds r3, r1, #0x0
adds r1, r4, #0x0
adds r1, #0x82
adds r4, #0x42
_0800CB74:
adds r0, r6, r7
orrs r0, r2
strh r0, [r4, #0x00]
adds r0, r6, r3
orrs r0, r2
strh r0, [r1, #0x00]
adds r1, #0x02
adds r4, #0x02
adds r6, #0x01
cmp r6, #0x06
ble _0800CB74
ldr r0, _0800CC6C @ =0x0200F742
movs r6, #0x00
ldr r2, [r5, #0x00]
mov r9, r2
ldr r2, [r5, #0x04]
ldr r5, [r5, #0x24]
mov r10, r5
movs r7, #0xCD
lsls r7, r7, #0x02
mov r8, r7
ldr r1, _0800CC64 @ =0xFFFFF000
adds r4, r1, #0x0
adds r7, #0x20
adds r5, r7, #0x0
adds r3, r0, #0x0
adds r3, #0x40
adds r1, r0, #0x0
_0800CBAC:
mov r7, r8
adds r0, r6, r7
orrs r0, r4
strh r0, [r1, #0x00]
adds r0, r6, r5
orrs r0, r4
strh r0, [r3, #0x00]
adds r3, #0x02
adds r1, #0x02
adds r6, #0x01
cmp r6, #0x05
ble _0800CBAC
add r9, r2
mov r0, r9
cmp r0, #0x00
bge _0800CBCE
adds r0, #0x03
_0800CBCE:
asrs r1, r0, #0x02
movs r0, #0x03
mov r2, r9
ands r0, r2
mov r7, r10
cmp r7, #0x00
bne _0800CC70
movs r6, #0x00
lsls r0, r0, #0x05
str r0, [sp, #0x008]
lsls r1, r1, #0x07
mov r10, r1
mov r8, r0
mov r7, r10
movs r0, #0x03
str r0, [sp, #0x010]
_0800CBEE:
bl save_getSavePointer_805D9B0
lsls r4, r6, #0x02
adds r0, r7, r0
add r0, r8
adds r0, r4, r0
adds r0, #0x64
ldrb r5, [r0, #0x00]
bl save_getSavePointer_805D9B0
adds r0, r7, r0
add r0, r8
adds r4, r4, r0
adds r4, #0x64
ldrh r0, [r4, #0x02]
str r0, [sp, #0x000]
ldr r0, [sp, #0x010]
adds r1, r6, #0x0
mov r2, r9
adds r3, r5, #0x0
bl sub_800CA88
ldr r1, [sp, #0x010]
adds r1, #0x02
str r1, [sp, #0x010]
adds r6, #0x01
cmp r6, #0x04
ble _0800CBEE
bl save_getSavePointer_805D9B0
add r0, r10
ldr r2, [sp, #0x008]
adds r0, r2, r0
adds r0, #0x78
ldrb r4, [r0, #0x00]
bl save_getSavePointer_805D9B0
add r0, r10
ldr r7, [sp, #0x008]
adds r0, r7, r0
adds r0, #0x78
ldrh r0, [r0, #0x02]
str r0, [sp, #0x000]
movs r0, #0x0F
movs r1, #0x05
mov r2, r9
adds r3, r4, #0x0
bl sub_800CA88
b _0800CCF0
.byte 0x00, 0x00
_0800CC54: .4byte 0x00000D44
_0800CC58: .4byte 0x0200F400
_0800CC5C: .4byte 0x01000200
_0800CC60: .4byte 0x0000032D
_0800CC64: .4byte 0xFFFFF000
_0800CC68: .4byte 0x0000034D
_0800CC6C: .4byte 0x0200F742
_0800CC70:
movs r6, #0x00
lsls r0, r0, #0x05
str r0, [sp, #0x008]
lsls r1, r1, #0x07
mov r10, r1
mov r8, r0
mov r7, r10
movs r0, #0x03
str r0, [sp, #0x00C]
_0800CC82:
bl save_getSavePointer_805D9B0
lsls r4, r6, #0x02
adds r0, r7, r0
add r0, r8
adds r0, r4, r0
movs r1, #0xB9
lsls r1, r1, #0x02
adds r0, r0, r1
ldrb r5, [r0, #0x00]
bl save_getSavePointer_805D9B0
adds r0, r7, r0
add r0, r8
adds r4, r4, r0
movs r2, #0xB9
lsls r2, r2, #0x02
adds r4, r4, r2
ldrh r0, [r4, #0x02]
str r0, [sp, #0x000]
ldr r0, [sp, #0x00C]
adds r1, r6, #0x0
mov r2, r9
adds r3, r5, #0x0
bl sub_800CA88
ldr r0, [sp, #0x00C]
adds r0, #0x02
str r0, [sp, #0x00C]
adds r6, #0x01
cmp r6, #0x04
ble _0800CC82
bl save_getSavePointer_805D9B0
add r0, r10
ldr r1, [sp, #0x008]
adds r0, r1, r0
movs r4, #0xBE
lsls r4, r4, #0x02
adds r0, r0, r4
ldrb r5, [r0, #0x00]
bl save_getSavePointer_805D9B0
add r0, r10
ldr r2, [sp, #0x008]
adds r0, r2, r0
adds r0, r0, r4
ldrh r0, [r0, #0x02]
str r0, [sp, #0x000]
movs r0, #0x0F
movs r1, #0x05
mov r2, r9
adds r3, r5, #0x0
bl sub_800CA88
_0800CCF0:
add sp, #0x014
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
thumb_func_start sub_800CD00
sub_800CD00:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x01C
adds r4, r0, #0x0
str r1, [sp, #0x010]
str r2, [sp, #0x014]
ldr r0, _0800CF10 @ =0x00000D44
adds r4, r4, r0
movs r0, #0x00
str r0, [sp, #0x00C]
add r0, sp, #0x00C
ldr r5, _0800CF14 @ =0x0200F400
ldr r2, _0800CF18 @ =0x01000200
adds r1, r5, #0x0
bl CpuFastSet
ldr r1, [r4, #0x00]
ldr r0, [r4, #0x04]
adds r1, r1, r0
mov r10, r1
movs r2, #0x00
movs r1, #0xF0
lsls r1, r1, #0x02
adds r6, r1, #0x0
ldr r7, _0800CF1C @ =0xFFFFD000
adds r3, r7, #0x0
ldr r0, _0800CF20 @ =0x000003C9
adds r4, r0, #0x0
adds r1, r5, #0x0
adds r1, #0xC4
adds r5, #0x84
_0800CD44:
adds r0, r2, r6
orrs r0, r3
strh r0, [r5, #0x00]
adds r0, r2, r4
orrs r0, r3
strh r0, [r1, #0x00]
adds r1, #0x02
adds r5, #0x02
adds r2, #0x01
cmp r2, #0x08
ble _0800CD44
mov r0, r10
bl track_getMKSCTrack
lsls r0, r0, #0x18
lsrs r0, r0, #0x18
bl sub_805CE3C
lsls r0, r0, #0x18
asrs r0, r0, #0x18
mov r8, r0
movs r0, #0x01
negs r0, r0
cmp r8, r0
beq _0800CE28
mov r1, r8
lsls r4, r1, #0x18
lsrs r4, r4, #0x18
adds r0, r4, #0x0
bl sub_805DE90
lsls r0, r0, #0x18
asrs r0, r0, #0x18
mov r9, r0
adds r0, r4, #0x0
bl sub_805DEB8
lsls r0, r0, #0x10
asrs r0, r0, #0x10
str r0, [sp, #0x018]
add r0, sp, #0x004
bl sub_805DF90
ldr r7, _0800CF14 @ =0x0200F400
add r2, sp, #0x004
movs r6, #0xC2
lsls r6, r6, #0x01
adds r7, r7, r6
movs r4, #0x00
ldrb r0, [r2, #0x00]
cmp r0, #0x00
beq _0800CDE6
adds r5, r7, #0x0
adds r5, #0x40
adds r3, r7, #0x0
movs r0, #0x1F
mov r12, r0
_0800CDB6:
ldrb r0, [r2, #0x00]
lsrs r1, r0, #0x05
lsls r1, r1, #0x06
mov r6, r12
ands r0, r6
adds r1, r1, r0
movs r0, #0xF0
lsls r0, r0, #0x08
orrs r0, r1
strh r0, [r3, #0x00]
adds r1, #0x20
movs r0, #0xF0
lsls r0, r0, #0x08
orrs r1, r0
strh r1, [r5, #0x00]
adds r2, #0x01
adds r5, #0x02
adds r3, #0x02
adds r4, #0x01
cmp r4, #0x05
bge _0800CE0C
ldrb r0, [r2, #0x00]
cmp r0, #0x00
bne _0800CDB6
_0800CDE6:
cmp r4, #0x05
bge _0800CE0C
movs r1, #0x0F
lsls r3, r1, #0x0C
movs r0, #0x20
adds r2, r3, #0x0
orrs r2, r0
lsls r1, r4, #0x01
adds r0, r1, #0x0
adds r0, #0x40
adds r0, r0, r7
adds r1, r1, r7
_0800CDFE:
strh r3, [r1, #0x00]
strh r2, [r0, #0x00]
adds r0, #0x02
adds r1, #0x02
adds r4, #0x01
cmp r4, #0x05
blt _0800CDFE
_0800CE0C:
ldr r6, [sp, #0x018]
str r6, [sp, #0x000]
movs r0, #0x08
movs r1, #0x05
movs r2, #0x00
mov r3, r9
bl sub_800CA88
mov r7, r9
ldr r0, [sp, #0x010]
str r7, [r0, #0x00]
mov r1, r8
ldr r6, [sp, #0x014]
str r1, [r6, #0x00]
_0800CE28:
movs r6, #0x00
_0800CE2A:
lsls r0, r6, #0x18
lsrs r0, r0, #0x18
bl sub_805DC28
lsls r0, r0, #0x18
asrs r0, r0, #0x18
mov r8, r0
movs r0, #0x01
negs r0, r0
cmp r8, r0
beq _0800CF24
mov r7, r8
lsls r0, r7, #0x18
lsrs r5, r0, #0x18
adds r0, r5, #0x0
bl sub_805DF18
adds r4, r0, #0x0
lsls r4, r4, #0x18
asrs r4, r4, #0x18
mov r0, r10
bl track_getMKSCTrack
cmp r4, r0
bne _0800CF24
adds r0, r5, #0x0
bl sub_805DE90
lsls r0, r0, #0x18
asrs r0, r0, #0x18
mov r9, r0
adds r0, r5, #0x0
bl sub_805DEB8
lsls r0, r0, #0x10
asrs r0, r0, #0x10
str r0, [sp, #0x018]
adds r0, r5, #0x0
add r1, sp, #0x004
bl sub_805DEE0
ldr r6, _0800CF14 @ =0x0200F400
add r2, sp, #0x004
movs r0, #0x0F
mov r10, r0
movs r1, #0xB1
lsls r1, r1, #0x02
adds r6, r6, r1
movs r4, #0x00
ldrb r0, [r2, #0x00]
cmp r0, #0x00
beq _0800CECC
adds r5, r6, #0x0
adds r5, #0x40
adds r3, r6, #0x0
movs r7, #0x1F
mov r12, r7
_0800CE9C:
ldrb r0, [r2, #0x00]
lsrs r1, r0, #0x05
lsls r1, r1, #0x06
mov r7, r12
ands r0, r7
adds r1, r1, r0
movs r0, #0xF0
lsls r0, r0, #0x08
orrs r0, r1
strh r0, [r3, #0x00]
adds r1, #0x20
movs r0, #0xF0
lsls r0, r0, #0x08
orrs r1, r0
strh r1, [r5, #0x00]
adds r2, #0x01
adds r5, #0x02
adds r3, #0x02
adds r4, #0x01
cmp r4, #0x05
bge _0800CEF2
ldrb r0, [r2, #0x00]
cmp r0, #0x00
bne _0800CE9C
_0800CECC:
cmp r4, #0x05
bge _0800CEF2
mov r1, r10
lsls r3, r1, #0x0C
movs r0, #0x20
adds r2, r3, #0x0
orrs r2, r0
lsls r1, r4, #0x01
adds r0, r1, #0x0
adds r0, #0x40
adds r0, r0, r6
adds r1, r1, r6
_0800CEE4:
strh r3, [r1, #0x00]
strh r2, [r0, #0x00]
adds r0, #0x02
adds r1, #0x02
adds r4, #0x01
cmp r4, #0x05
blt _0800CEE4
_0800CEF2:
ldr r6, [sp, #0x018]
str r6, [sp, #0x000]
movs r0, #0x0D
movs r1, #0x05
movs r2, #0x00
mov r3, r9
bl sub_800CA88
mov r7, r9
ldr r0, [sp, #0x010]
str r7, [r0, #0x04]
mov r1, r8
ldr r6, [sp, #0x014]
str r1, [r6, #0x04]
b _0800CF2C
_0800CF10: .4byte 0x00000D44
_0800CF14: .4byte 0x0200F400
_0800CF18: .4byte 0x01000200
_0800CF1C: .4byte 0xFFFFD000
_0800CF20: .4byte 0x000003C9
_0800CF24:
adds r6, #0x01
cmp r6, #0x01
bgt _0800CF2C
b _0800CE2A
_0800CF2C:
add sp, #0x01C
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
thumb_func_start sub_800CF3C
sub_800CF3C:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x00C
mov r8, r0
ldr r0, _0800D0DC @ =0x00000D44
add r0, r8
str r0, [sp, #0x000]
movs r5, #0xC0
lsls r5, r5, #0x13
movs r4, #0x07
_0800CF56:
bl dmaq_getVBlankDmaQueue
ldr r1, _0800D0E0 @ =0x0203EC08
adds r2, r5, #0x0
ldr r3, _0800D0E4 @ =0x81000C00
bl dmaq_enqueue
bl main_frameProc
movs r1, #0xC0
lsls r1, r1, #0x05
adds r5, r5, r1
subs r4, #0x01
cmp r4, #0x00
bge _0800CF56
mov r0, r8
bl sub_80038B8
ldr r4, _0800D0E8 @ =0x08076FF4
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
ldr r4, _0800D0EC @ =0x080B2068
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
ldr r4, _0800D0F0 @ =0x0807CD48
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0xE0
adds r0, r4, #0x0
movs r2, #0x10
bl CpuFastSet
movs r0, #0x00
bl pltt_getBuffer
adds r4, r0, #0x0
movs r2, #0x90
lsls r2, r2, #0x01
adds r4, r4, r2
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
movs r0, #0xC0
lsls r0, r0, #0x01
adds r1, r1, r0
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
movs r0, #0x00
bl pltt_getBuffer
movs r1, #0x00
strh r1, [r0, #0x00]
movs r0, #0x01
bl pltt_setDirtyFlag
bl main_frameProc
ldr r5, _0800D0F4 @ =0x0200C400
ldr r1, _0800D0F8 @ =0x06008000
adds r0, r5, #0x0
bl sub_800C78C
ldr r0, _0800D0FC @ =0x080B3424
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r6, _0800D100 @ =0x06017400
ldr r7, _0800D104 @ =0x80000060
adds r1, r5, #0x0
adds r2, r6, #0x0
adds r3, r7, #0x0
bl dmaq_enqueue
ldr r4, _0800D108 @ =0x000011BC
add r4, r8
ldrb r0, [r4, #0x00]
cmp r0, #0x00
beq _0800D028
bl dmaq_getVBlankDmaQueue
ldrb r1, [r4, #0x00]
adds r1, #0x05
lsls r1, r1, #0x05
adds r1, r1, r5
ldr r3, _0800D10C @ =0x80000010
adds r2, r6, #0x0
bl dmaq_enqueue
_0800D028:
ldr r4, _0800D110 @ =0x000011E2
add r4, r8
ldrb r0, [r4, #0x00]
cmp r0, #0x00
beq _0800D046
bl dmaq_getVBlankDmaQueue
ldrb r1, [r4, #0x00]
adds r1, #0x0F
lsls r1, r1, #0x05
adds r1, r1, r5
ldr r2, _0800D114 @ =0x06017460
ldr r3, _0800D10C @ =0x80000010
bl dmaq_enqueue
_0800D046:
bl main_frameProc
ldr r0, _0800D118 @ =0x080B3718
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800D11C @ =0x06007C00
adds r1, r5, #0x0
adds r3, r7, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _0800D120 @ =0x0807D1E8
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800D124 @ =0x06004000
ldr r3, _0800D128 @ =0x80000600
adds r1, r5, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _0800D12C @ =0x00001128
add r0, r8
ldr r0, [r0, #0x00]
cmp r0, #0x00
beq _0800D096
bl dmaq_getVBlankDmaQueue
ldr r1, _0800D130 @ =0x0807D694
ldr r2, _0800D134 @ =0x06004660
ldr r3, _0800D138 @ =0x80000100
bl dmaq_enqueue
_0800D096:
bl main_frameProc
movs r7, #0x00
_0800D09C:
lsls r2, r7, #0x01
adds r1, r2, r7
lsls r1, r1, #0x02
ldr r0, _0800D13C @ =0x000010AC
add r0, r8
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov r10, r2
cmp r0, #0x00
beq _0800D148
lsls r6, r7, #0x02
adds r1, r7, #0x1
str r1, [sp, #0x004]
lsls r0, r7, #0x03
adds r0, r0, r6
lsls r4, r0, #0x08
ldr r2, _0800D140 @ =0x02025400
movs r5, #0x03
_0800D0C0:
adds r1, r4, r2
ldr r0, _0800D144 @ =0x080A28C8
str r2, [sp, #0x008]
bl LZ77UnCompWram
movs r0, #0xC0
lsls r0, r0, #0x02
adds r4, r4, r0
subs r5, #0x01
ldr r2, [sp, #0x008]
cmp r5, #0x00
bge _0800D0C0
b _0800D17C
.byte 0x00, 0x00
_0800D0DC: .4byte 0x00000D44
_0800D0E0: .4byte 0x0203EC08
_0800D0E4: .4byte 0x81000C00
_0800D0E8: .4byte 0x08076FF4
_0800D0EC: .4byte 0x080B2068
_0800D0F0: .4byte 0x0807CD48
_0800D0F4: .4byte 0x0200C400
_0800D0F8: .4byte 0x06008000
_0800D0FC: .4byte 0x080B3424
_0800D100: .4byte 0x06017400
_0800D104: .4byte 0x80000060
_0800D108: .4byte 0x000011BC
_0800D10C: .4byte 0x80000010
_0800D110: .4byte 0x000011E2
_0800D114: .4byte 0x06017460
_0800D118: .4byte 0x080B3718
_0800D11C: .4byte 0x06007C00
_0800D120: .4byte 0x0807D1E8
_0800D124: .4byte 0x06004000
_0800D128: .4byte 0x80000600
_0800D12C: .4byte 0x00001128
_0800D130: .4byte 0x0807D694
_0800D134: .4byte 0x06004660
_0800D138: .4byte 0x80000100
_0800D13C: .4byte 0x000010AC
_0800D140: .4byte 0x02025400
_0800D144: .4byte 0x080A28C8
_0800D148:
movs r5, #0x00
lsls r6, r7, #0x02
adds r1, r7, #0x1
str r1, [sp, #0x004]
ldr r2, _0800D1B4 @ =0x080E7FEC
mov r9, r2
lsls r0, r7, #0x03
adds r0, r0, r6
lsls r4, r0, #0x08
_0800D15A:
adds r0, r6, r5
bl track_getMKSCTrack
lsls r0, r0, #0x02
add r0, r9
ldr r0, [r0, #0x00]
ldr r0, [r0, #0x30]
ldr r1, _0800D1B8 @ =0x02025400
adds r1, r4, r1
bl LZ77UnCompWram
movs r0, #0xC0
lsls r0, r0, #0x02
adds r4, r4, r0
adds r5, #0x01
cmp r5, #0x03
ble _0800D15A
_0800D17C:
bl main_frameProc
mov r1, r10
adds r0, r1, r7
lsls r0, r0, #0x02
ldr r1, _0800D1BC @ =0x000010E8
add r1, r8
adds r1, r1, r0
ldr r0, [r1, #0x00]
cmp r0, #0x00
beq _0800D1C8
lsls r0, r6, #0x01
adds r0, r0, r6
lsls r4, r0, #0x08
ldr r6, _0800D1C0 @ =0x02008400
movs r5, #0x03
_0800D19C:
adds r1, r4, r6
ldr r0, _0800D1C4 @ =0x080A4A68
bl LZ77UnCompWram
movs r2, #0xC0
lsls r2, r2, #0x02
adds r4, r4, r2
subs r5, #0x01
cmp r5, #0x00
bge _0800D19C
b _0800D1F4
.byte 0x00, 0x00
_0800D1B4: .4byte 0x080E7FEC
_0800D1B8: .4byte 0x02025400
_0800D1BC: .4byte 0x000010E8
_0800D1C0: .4byte 0x02008400
_0800D1C4: .4byte 0x080A4A68
_0800D1C8:
movs r5, #0x00
ldr r7, _0800D2D0 @ =0x080E7FEC
lsls r0, r6, #0x01
adds r0, r0, r6
lsls r4, r0, #0x08
_0800D1D2:
adds r0, r6, r5
bl track_getRetroTrack
lsls r0, r0, #0x02
adds r0, r0, r7
ldr r0, [r0, #0x00]
ldr r0, [r0, #0x30]
ldr r1, _0800D2D4 @ =0x02008400
adds r1, r4, r1
bl LZ77UnCompWram
movs r0, #0xC0
lsls r0, r0, #0x02
adds r4, r4, r0
adds r5, #0x01
cmp r5, #0x03
ble _0800D1D2
_0800D1F4:
bl main_frameProc
ldr r7, [sp, #0x004]
cmp r7, #0x04
bgt _0800D200
b _0800D09C
_0800D200:
mov r0, r8
bl sub_800E548
bl main_frameProc
movs r0, #0x00
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
movs r1, #0x00
strh r1, [r0, #0x00]
ldr r4, _0800D2D8 @ =0x08079A68
movs r0, #0x00
movs r1, #0x01
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
movs r0, #0x00
movs r1, #0x0D
movs r2, #0x02
bl map_getBufferPtr2d
adds r7, r0, #0x0
movs r1, #0x00
ldr r6, _0800D2DC @ =0x00000FFF
movs r2, #0xB0
lsls r2, r2, #0x08
adds r5, r2, #0x0
_0800D242:
lsls r0, r1, #0x06
adds r4, r1, #0x1
adds r2, r7, r0
movs r3, #0x0B
_0800D24A:
ldrh r1, [r2, #0x00]
adds r0, r6, #0x0
ands r0, r1
orrs r0, r5
strh r0, [r2, #0x00]
adds r2, #0x02
subs r3, #0x01
cmp r3, #0x00
bge _0800D24A
adds r1, r4, #0x0
cmp r1, #0x01
ble _0800D242
movs r0, #0x01
bl map_setBufferDirty
ldr r4, _0800D2E0 @ =0x08079F18
movs r0, #0x01
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
mov r0, r8
bl sub_800C9AC
bl main_frameProc
ldr r0, [sp, #0x000]
ldr r1, [r0, #0x00]
ldr r0, [r0, #0x04]
adds r0, r1, r0
cmp r0, #0x00
bge _0800D294
adds r0, #0x03
_0800D294:
asrs r0, r0, #0x02
bl sub_800E658
bl main_frameProc
mov r0, r8
bl sub_800CB40
bl dmaq_getVBlankDmaQueue
ldr r1, _0800D2E4 @ =0x0200F400
ldr r2, _0800D2E8 @ =0x06003000
ldr r3, _0800D2EC @ =0x80000400
bl dmaq_enqueue
bl main_frameProc
mov r0, r8
bl sub_800E5CC
ldr r1, [sp, #0x000]
ldr r0, [r1, #0x24]
cmp r0, #0x00
bne _0800D2F8
ldr r0, _0800D2F0 @ =0x000011FE
add r0, r8
ldrh r1, [r0, #0x00]
ldr r1, _0800D2F4 @ =0x00004608
b _0800D300
.byte 0x00, 0x00
_0800D2D0: .4byte 0x080E7FEC
_0800D2D4: .4byte 0x02008400
_0800D2D8: .4byte 0x08079A68
_0800D2DC: .4byte 0x00000FFF
_0800D2E0: .4byte 0x08079F18
_0800D2E4: .4byte 0x0200F400
_0800D2E8: .4byte 0x06003000
_0800D2EC: .4byte 0x80000400
_0800D2F0: .4byte 0x000011FE
_0800D2F4: .4byte 0x00004608
_0800D2F8:
ldr r0, _0800D39C @ =0x000011FE
add r0, r8
ldrh r1, [r0, #0x00]
ldr r1, _0800D3A0 @ =0x00004604
_0800D300:
strh r1, [r0, #0x00]
ldr r1, _0800D3A4 @ =0x00001204
add r1, r8
ldrh r0, [r1, #0x00]
movs r2, #0x00
ldr r0, _0800D3A8 @ =0x00004404
strh r0, [r1, #0x00]
ldr r1, _0800D3AC @ =0x0000120A
add r1, r8
ldrh r0, [r1, #0x00]
ldr r0, _0800D3B0 @ =0x0000400A
strh r0, [r1, #0x00]
ldr r1, _0800D3B4 @ =0x00001210
add r1, r8
ldrh r0, [r1, #0x00]
ldr r0, _0800D3B8 @ =0x00000207
strh r0, [r1, #0x00]
ldr r1, _0800D3BC @ =0x00001216
add r1, r8
ldrh r0, [r1, #0x00]
movs r0, #0xFF
strh r0, [r1, #0x00]
ldr r1, _0800D3C0 @ =0x0000121A
add r1, r8
ldrh r0, [r1, #0x00]
movs r0, #0x10
strh r0, [r1, #0x00]
ldr r1, _0800D3C4 @ =0x000011FC
add r1, r8
ldrh r0, [r1, #0x00]
movs r0, #0xFA
lsls r0, r0, #0x05
strh r0, [r1, #0x00]
ldr r1, _0800D3C8 @ =0x000011F8
add r1, r8
movs r0, #0x03
str r0, [r1, #0x00]
movs r0, #0x90
lsls r0, r0, #0x05
add r0, r8
ldrh r1, [r0, #0x00]
strh r2, [r0, #0x00]
ldr r0, _0800D3CC @ =0x00001202
add r0, r8
ldrh r1, [r0, #0x00]
strh r2, [r0, #0x00]
ldr r0, _0800D3D0 @ =0x00001206
add r0, r8
ldrh r1, [r0, #0x00]
strh r2, [r0, #0x00]
ldr r0, _0800D3D4 @ =0x00001208
add r0, r8
ldrh r1, [r0, #0x00]
strh r2, [r0, #0x00]
ldr r0, _0800D3D8 @ =0x0000120C
add r0, r8
ldrh r1, [r0, #0x00]
strh r2, [r0, #0x00]
ldr r0, _0800D3DC @ =0x0000120E
add r0, r8
ldrh r1, [r0, #0x00]
strh r2, [r0, #0x00]
ldr r0, _0800D3E0 @ =0x00001212
add r0, r8
ldrh r1, [r0, #0x00]
strh r2, [r0, #0x00]
ldr r0, _0800D3E4 @ =0x00001214
add r0, r8
ldrh r1, [r0, #0x00]
strh r2, [r0, #0x00]
add sp, #0x00C
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_0800D39C: .4byte 0x000011FE
_0800D3A0: .4byte 0x00004604
_0800D3A4: .4byte 0x00001204
_0800D3A8: .4byte 0x00004404
_0800D3AC: .4byte 0x0000120A
_0800D3B0: .4byte 0x0000400A
_0800D3B4: .4byte 0x00001210
_0800D3B8: .4byte 0x00000207
_0800D3BC: .4byte 0x00001216
_0800D3C0: .4byte 0x0000121A
_0800D3C4: .4byte 0x000011FC
_0800D3C8: .4byte 0x000011F8
_0800D3CC: .4byte 0x00001202
_0800D3D0: .4byte 0x00001206
_0800D3D4: .4byte 0x00001208
_0800D3D8: .4byte 0x0000120C
_0800D3DC: .4byte 0x0000120E
_0800D3E0: .4byte 0x00001212
_0800D3E4: .4byte 0x00001214
thumb_func_start sub_800D3E8
sub_800D3E8:
push {r4, lr}
ldr r1, _0800D424 @ =0x00000D44
adds r2, r0, r1
ldr r0, [r2, #0x28]
adds r0, #0x01
str r0, [r2, #0x28]
cmp r0, #0x07
ble _0800D408
movs r1, #0x00
str r1, [r2, #0x28]
ldr r0, [r2, #0x2C]
adds r0, #0x01
str r0, [r2, #0x2C]
cmp r0, #0x06
ble _0800D408
str r1, [r2, #0x2C]
_0800D408:
ldr r1, [r2, #0x00]
ldr r0, [r2, #0x04]
adds r0, r1, r0
cmp r0, #0x00
bge _0800D414
adds r0, #0x03
_0800D414:
asrs r0, r0, #0x02
cmp r0, #0x04
bhi _0800D4A6
lsls r0, r0, #0x02
ldr r1, _0800D428 @ =0x0800D42C
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
_0800D424: .4byte 0x00000D44
_0800D428: .4byte 0x0800D42C
.byte 0x40, 0xD4, 0x00, 0x08, 0x4C, 0xD4, 0x00, 0x08, 0x58, 0xD4, 0x00, 0x08, 0x64, 0xD4, 0x00, 0x08
.byte 0x88, 0xD4, 0x00, 0x08, 0xD4, 0x6A, 0x64, 0x01, 0x00, 0x48, 0x10, 0xE0, 0x88, 0xCD, 0x07, 0x08
.byte 0xD4, 0x6A, 0x64, 0x01, 0x00, 0x48, 0x0A, 0xE0, 0x68, 0xCE, 0x07, 0x08, 0xD4, 0x6A, 0x64, 0x01
.byte 0x00, 0x48, 0x04, 0xE0, 0x48, 0xCF, 0x07, 0x08, 0xD4, 0x6A, 0x64, 0x01, 0x06, 0x48, 0x24, 0x18
.byte 0x00, 0x20, 0x21, 0xF0, 0xDF, 0xF8, 0x01, 0x1C, 0x90, 0x20, 0x40, 0x00, 0x09, 0x18, 0x20, 0x1C
.byte 0x08, 0x22, 0x53, 0xF0, 0x65, 0xFF, 0x10, 0xE0, 0x28, 0xD0, 0x07, 0x08, 0xD4, 0x6A, 0x64, 0x01
.byte 0x09, 0x48, 0x24, 0x18, 0x00, 0x20, 0x21, 0xF0, 0xCD, 0xF8, 0x01, 0x1C, 0x90, 0x20, 0x40, 0x00
.byte 0x09, 0x18, 0x20, 0x1C, 0x08, 0x22, 0x53, 0xF0, 0x53, 0xFF
_0800D4A6:
movs r0, #0x01
bl pltt_setDirtyFlag
pop {r4}
pop {r0}
bx r0
.byte 0x00, 0x00, 0x08, 0xD1, 0x07, 0x08
thumb_func_start sub_800D4B8
sub_800D4B8:
push {r4, r5, r6, r7, lr}
mov r7, r9
mov r6, r8
push {r6, r7}
add sp, #-0x00C
adds r4, r0, #0x0
ldr r0, _0800D5C0 @ =0x00000D44
adds r6, r4, r0
movs r0, #0xEE
mov r8, r0
movs r0, #0x60
mov r9, r0
ldr r5, [r6, #0x04]
cmp r5, #0x00
beq _0800D526
ldrh r0, [r6, #0x20]
adds r0, #0xEE
lsls r0, r0, #0x10
lsrs r0, r0, #0x10
ldr r1, _0800D5C4 @ =0xFFFF0000
ldr r2, [sp, #0x008]
ands r2, r1
orrs r2, r0
str r2, [sp, #0x008]
ldr r1, [r4, #0x4C]
lsls r0, r1, #0x02
adds r0, r0, r1
ldr r1, _0800D5C8 @ =0x080E645C
lsls r0, r0, #0x19
asrs r0, r0, #0x10
cmp r0, #0x00
bge _0800D4FA
adds r0, #0x3F
_0800D4FA:
lsls r0, r0, #0x10
lsrs r0, r0, #0x16
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r0, [r0, #0x00]
lsls r0, r0, #0x01
asrs r0, r0, #0x0F
adds r0, #0x60
lsls r0, r0, #0x10
ldr r1, _0800D5CC @ =0x0000FFFF
ands r2, r1
orrs r2, r0
str r2, [sp, #0x008]
ldr r0, _0800D5D0 @ =0x080C94F8
movs r1, #0x00
str r1, [sp, #0x000]
str r1, [sp, #0x004]
add r1, sp, #0x008
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
_0800D526:
movs r7, #0x0C
cmp r5, r7
beq _0800D56C
ldrh r0, [r6, #0x20]
add r0, r8
movs r2, #0x00
add r1, sp, #0x008
strh r0, [r1, #0x00]
ldr r1, [r4, #0x4C]
lsls r0, r1, #0x02
adds r0, r0, r1
ldr r1, _0800D5C8 @ =0x080E645C
lsls r0, r0, #0x19
asrs r0, r0, #0x10
cmp r0, #0x00
bge _0800D548
adds r0, #0x3F
_0800D548:
lsls r0, r0, #0x10
lsrs r0, r0, #0x16
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r0, [r0, #0x00]
lsls r0, r0, #0x01
negs r0, r0
asrs r0, r0, #0x0F
add r0, r9
add r1, sp, #0x008
strh r0, [r1, #0x02]
ldr r0, _0800D5D4 @ =0x080C9500
str r2, [sp, #0x000]
str r2, [sp, #0x004]
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
_0800D56C:
ldrh r0, [r6, #0x20]
add r0, r8
movs r4, #0x00
add r1, sp, #0x008
strh r0, [r1, #0x00]
movs r0, #0x2C
muls r0, r5
adds r1, r7, #0x0
bl __divsi3
subs r0, #0x16
add r0, r9
add r5, sp, #0x008
strh r0, [r5, #0x02]
ldr r0, _0800D5D8 @ =0x080C9318
str r4, [sp, #0x000]
str r4, [sp, #0x004]
adds r1, r5, #0x0
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
ldrh r0, [r6, #0x20]
add r0, r8
add r1, sp, #0x008
strh r0, [r1, #0x00]
mov r0, r9
strh r0, [r5, #0x02]
ldr r0, _0800D5DC @ =0x080C92E8
str r4, [sp, #0x000]
str r4, [sp, #0x004]
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
add sp, #0x00C
pop {r3, r4}
mov r8, r3
mov r9, r4
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_0800D5C0: .4byte 0x00000D44
_0800D5C4: .4byte 0xFFFF0000
_0800D5C8: .4byte 0x080E645C
_0800D5CC: .4byte 0x0000FFFF
_0800D5D0: .4byte 0x080C94F8
_0800D5D4: .4byte 0x080C9500
_0800D5D8: .4byte 0x080C9318
_0800D5DC: .4byte 0x080C92E8
thumb_func_start sub_800D5E0
sub_800D5E0:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x014
mov r9, r0
ldr r4, _0800D674 @ =0x00000D44
add r4, r9
movs r7, #0x00
mov r0, sp
adds r0, #0x08
str r0, [sp, #0x00C]
_0800D5FA:
ldr r0, [r4, #0x04]
adds r0, r0, r7
mov r10, r0
bl save_getSavePointer_805D9B0
mov r1, r10
lsls r2, r1, #0x02
adds r1, r2, r1
lsls r1, r1, #0x02
movs r3, #0xB2
lsls r3, r3, #0x03
adds r1, r1, r3
adds r0, r0, r1
ldrb r0, [r0, #0x0B]
movs r3, #0x01
ands r3, r0
ldr r0, _0800D678 @ =0x00001130
add r0, r9
adds r0, r0, r2
ldr r0, [r0, #0x00]
cmp r0, #0x00
beq _0800D6C2
ldr r2, [sp, #0x008]
ldr r0, _0800D67C @ =0xFFFF0000
ands r2, r0
movs r0, #0xD0
orrs r2, r0
lsls r0, r7, #0x14
movs r1, #0xC0
lsls r1, r1, #0x0D
adds r0, r0, r1
ldr r1, _0800D680 @ =0x0000FFFF
ands r2, r1
orrs r2, r0
str r2, [sp, #0x008]
ldr r0, [sp, #0x00C]
ldrh r1, [r0, #0x00]
ldrh r0, [r4, #0x20]
adds r1, r1, r0
lsls r1, r1, #0x10
lsrs r1, r1, #0x10
ldr r0, _0800D67C @ =0xFFFF0000
ands r0, r2
orrs r0, r1
asrs r1, r0, #0x10
ldrh r2, [r4, #0x22]
adds r1, r1, r2
lsls r1, r1, #0x10
ldr r2, _0800D680 @ =0x0000FFFF
ands r0, r2
orrs r0, r1
str r0, [sp, #0x008]
cmp r3, #0x00
beq _0800D694
ldr r0, [r4, #0x00]
cmp r7, r0
beq _0800D688
ldr r0, [r4, #0x30]
lsls r0, r0, #0x03
ldr r1, _0800D684 @ =0x080D9734
b _0800D6AE
_0800D674: .4byte 0x00000D44
_0800D678: .4byte 0x00001130
_0800D67C: .4byte 0xFFFF0000
_0800D680: .4byte 0x0000FFFF
_0800D684: .4byte 0x080D9734
_0800D688:
ldr r0, [r4, #0x38]
lsls r0, r0, #0x03
ldr r1, _0800D690 @ =0x080D9724
b _0800D6AE
_0800D690: .4byte 0x080D9724
_0800D694:
ldr r0, [r4, #0x00]
cmp r7, r0
beq _0800D6A8
ldr r0, [r4, #0x30]
lsls r0, r0, #0x03
ldr r1, _0800D6A4 @ =0x080D9694
b _0800D6AE
.byte 0x00, 0x00
_0800D6A4: .4byte 0x080D9694
_0800D6A8:
ldr r0, [r4, #0x38]
lsls r0, r0, #0x03
ldr r1, _0800D708 @ =0x080D9684
_0800D6AE:
adds r0, r0, r1
ldr r0, [r0, #0x00]
movs r1, #0x00
str r1, [sp, #0x000]
str r1, [sp, #0x004]
add r1, sp, #0x008
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
_0800D6C2:
movs r5, #0x00
adds r3, r7, #0x1
str r3, [sp, #0x010]
add r6, sp, #0x008
lsls r0, r7, #0x04
adds r0, #0x18
mov r8, r0
_0800D6D0:
lsls r0, r5, #0x02
movs r1, #0x8E
lsls r1, r1, #0x05
add r1, r9
adds r1, r1, r0
ldr r0, [r1, #0x00]
cmp r0, #0x00
beq _0800D72E
ldr r0, _0800D70C @ =0x000011C8
add r0, r9
adds r0, r0, r5
ldrb r0, [r0, #0x00]
cmp r0, r10
bne _0800D72E
ldrh r0, [r4, #0x20]
adds r0, #0xE0
strh r0, [r6, #0x00]
ldrh r0, [r4, #0x22]
add r0, r8
strh r0, [r6, #0x02]
ldr r0, [r4, #0x00]
cmp r7, r0
beq _0800D714
ldr r0, [r4, #0x30]
lsls r0, r0, #0x03
ldr r1, _0800D710 @ =0x080D96E4
b _0800D71A
.byte 0x00, 0x00
_0800D708: .4byte 0x080D9684
_0800D70C: .4byte 0x000011C8
_0800D710: .4byte 0x080D96E4
_0800D714:
ldr r0, [r4, #0x38]
lsls r0, r0, #0x03
ldr r1, _0800D74C @ =0x080D96D4
_0800D71A:
adds r0, r0, r1
ldr r0, [r0, #0x00]
movs r1, #0x00
str r1, [sp, #0x000]
str r1, [sp, #0x004]
add r1, sp, #0x008
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
_0800D72E:
adds r5, #0x01
cmp r5, #0x01
ble _0800D6D0
ldr r7, [sp, #0x010]
cmp r7, #0x07
bgt _0800D73C
b _0800D5FA
_0800D73C:
add sp, #0x014
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_0800D74C: .4byte 0x080D96D4
thumb_func_start sub_800D750
sub_800D750:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x050
mov r10, r0
ldr r7, _0800D798 @ =0x00000D44
add r7, r10
movs r0, #0x00
str r0, [sp, #0x028]
movs r1, #0x00
str r1, [sp, #0x02C]
movs r2, #0x00
str r2, [sp, #0x030]
movs r3, #0x00
str r3, [sp, #0x034]
movs r4, #0x00
str r4, [sp, #0x038]
str r0, [r7, #0x08]
ldr r0, _0800D79C @ =0x03002E20
ldr r6, _0800D7A0 @ =0x00000801
adds r0, r0, r6
ldrb r0, [r0, #0x00]
bl track_getTrackIndex
lsls r0, r0, #0x18
lsrs r1, r0, #0x18
cmp r1, #0x06
ble _0800D7AA
cmp r1, #0x13
bne _0800D7A4
movs r0, #0x07
str r0, [r7, #0x00]
b _0800D7AC
.byte 0x00, 0x00
_0800D798: .4byte 0x00000D44
_0800D79C: .4byte 0x03002E20
_0800D7A0: .4byte 0x00000801
_0800D7A4:
movs r0, #0x06
str r0, [r7, #0x00]
b _0800D7AC
_0800D7AA:
str r1, [r7, #0x00]
_0800D7AC:
ldr r0, [r7, #0x00]
subs r0, r1, r0
str r0, [r7, #0x04]
movs r0, #0x00
str r0, [r7, #0x10]
str r0, [r7, #0x14]
str r0, [r7, #0x18]
ldr r1, _0800D878 @ =0x0000FF90
strh r1, [r7, #0x1C]
strh r0, [r7, #0x1E]
strh r0, [r7, #0x20]
strh r0, [r7, #0x22]
str r0, [r7, #0x28]
str r0, [r7, #0x2C]
str r0, [r7, #0x30]
str r0, [r7, #0x34]
str r0, [r7, #0x38]
str r0, [r7, #0x3C]
str r0, [r7, #0x24]
mov r0, r10
bl sub_8001FC0
ldr r1, _0800D87C @ =0x06002000
movs r0, #0x00
bl map_setBufferDestination
ldr r1, _0800D880 @ =0x06001000
movs r0, #0x01
bl map_setBufferDestination
mov r0, r10
bl sub_800CF3C
ldr r0, [sp, #0x028]
lsls r0, r0, #0x02
str r0, [sp, #0x048]
thumb_func_start sub_800D7F4
sub_800D7F4:
ldr r0, _0800D884 @ =0x0203EC0C
ldr r0, [r0, #0x00]
cmp r0, #0x00
bne _0800D800
bl oam_update
_0800D800:
bl main_frameProc
ldr r1, _0800D888 @ =0x000011F4
add r1, r10
ldr r0, [r1, #0x00]
adds r0, #0x01
str r0, [r1, #0x00]
mov r1, r10
ldr r0, [r1, #0x4C]
adds r0, #0x01
str r0, [r1, #0x4C]
ldr r1, [r7, #0x34]
adds r1, #0x01
str r1, [r7, #0x34]
ldr r2, _0800D88C @ =0x080D9694
ldr r3, [r7, #0x30]
lsls r0, r3, #0x03
adds r0, r0, r2
ldrh r0, [r0, #0x04]
cmp r1, r0
ble _0800D838
movs r1, #0x00
str r1, [r7, #0x34]
adds r0, r3, #0x1
str r0, [r7, #0x30]
cmp r0, #0x07
bls _0800D838
str r1, [r7, #0x30]
_0800D838:
ldr r0, [r7, #0x3C]
adds r0, #0x01
str r0, [r7, #0x3C]
ldr r2, _0800D890 @ =0x080D9684
ldr r3, [r7, #0x38]
lsls r1, r3, #0x03
adds r1, r1, r2
ldrh r1, [r1, #0x04]
cmp r0, r1
ble _0800D85A
movs r1, #0x00
str r1, [r7, #0x3C]
adds r0, r3, #0x1
str r0, [r7, #0x38]
cmp r0, #0x01
bls _0800D85A
str r1, [r7, #0x38]
_0800D85A:
ldr r0, _0800D894 @ =0x03004F48
ldrh r3, [r0, #0x00]
ldr r0, _0800D898 @ =0x03004EA0
ldrh r4, [r0, #0x00]
ldr r2, [sp, #0x028]
cmp r2, #0x09
bls _0800D86C
bl _0800E158
_0800D86C:
ldr r0, _0800D89C @ =0x0800D8A0
ldr r6, [sp, #0x048]
adds r0, r6, r0
ldr r0, [r0, #0x00]
mov pc, r0
.byte 0x00, 0x00
_0800D878: .4byte 0x0000FF90
_0800D87C: .4byte 0x06002000
_0800D880: .4byte 0x06001000
_0800D884: .4byte 0x0203EC0C
_0800D888: .4byte 0x000011F4
_0800D88C: .4byte 0x080D9694
_0800D890: .4byte 0x080D9684
_0800D894: .4byte 0x03004F48
_0800D898: .4byte 0x03004EA0
_0800D89C: .4byte 0x0800D8A0
.byte 0xC8, 0xD8, 0x00, 0x08, 0x28, 0xD9, 0x00, 0x08, 0x24, 0xDD, 0x00, 0x08, 0x48, 0xDE, 0x00, 0x08
.byte 0x8A, 0xDE, 0x00, 0x08, 0xDE, 0xDE, 0x00, 0x08, 0x9E, 0xDF, 0x00, 0x08, 0xF8, 0xE0, 0x00, 0x08
.byte 0x08, 0xE1, 0x00, 0x08, 0x34, 0xE1, 0x00, 0x08, 0x0B, 0x98, 0x01, 0x30, 0x0B, 0x90, 0x10, 0x28
.byte 0x16, 0xDC, 0x09, 0x49, 0x51, 0x44, 0x08, 0x88, 0xFF, 0x20, 0x08, 0x80, 0x0B, 0x99, 0x08, 0x01
.byte 0x40, 0x42, 0x00, 0x28, 0x00, 0xDA, 0x0F, 0x30, 0x00, 0x11, 0x10, 0x30, 0x03, 0x49, 0x51, 0x44
.byte 0x0A, 0x88, 0x08, 0x80, 0x00, 0xF0, 0x30, 0xFC, 0x16, 0x12, 0x00, 0x00, 0x1A, 0x12, 0x00, 0x00
.byte 0x07, 0x48, 0x50, 0x44, 0x01, 0x88, 0x00, 0x22, 0x02, 0x80, 0x06, 0x48, 0x50, 0x44, 0x01, 0x88
.byte 0x02, 0x80, 0x01, 0x22, 0x0A, 0x92, 0x00, 0x23, 0x0B, 0x93, 0x3A, 0x61, 0x00, 0xF0, 0x1C, 0xFC
.byte 0x16, 0x12, 0x00, 0x00, 0x18, 0x12, 0x00, 0x00, 0x3D, 0x68, 0x7E, 0x68, 0x0F, 0x96, 0xB8, 0x68
.byte 0x80, 0x46, 0xA8, 0x19, 0x01, 0x1C, 0x00, 0x28, 0x00, 0xDA, 0xC1, 0x1C, 0x89, 0x10, 0x10, 0x91
.byte 0x3E, 0x1D, 0x01, 0x1C, 0x0F, 0x9A, 0x40, 0x20, 0x18, 0x40, 0x00, 0x28, 0x00, 0xD0, 0x01, 0x39
.byte 0x80, 0x20, 0x18, 0x40, 0x00, 0x28, 0x00, 0xD0, 0x01, 0x31, 0x20, 0x20, 0x18, 0x40, 0x00, 0x28
.byte 0x00, 0xD0, 0x08, 0x39, 0x10, 0x20, 0x03, 0x40, 0x00, 0x2B, 0x00, 0xD0, 0x08, 0x31, 0x00, 0x29
.byte 0x00, 0xDA, 0x00, 0x21, 0x13, 0x29, 0x00, 0xDD, 0x13, 0x21, 0x0F, 0x98, 0x01, 0x30, 0x81, 0x42
.byte 0x00, 0xDA, 0x4A, 0x1E, 0x90, 0x1D, 0x81, 0x42, 0x00, 0xDD, 0x8A, 0x1F, 0x00, 0x2A, 0x00, 0xDA
.byte 0x00, 0x22, 0x0C, 0x2A, 0x00, 0xDD, 0x0C, 0x22, 0x88, 0x1A, 0x38, 0x60, 0x32, 0x60, 0x39, 0x68
.byte 0x1A, 0x48, 0x50, 0x44, 0x00, 0x68, 0x00, 0x28, 0x0E, 0xD0, 0x8D, 0x42, 0x0C, 0xD1, 0x78, 0x68
.byte 0x0F, 0x99, 0x81, 0x42, 0x08, 0xD1, 0xC0, 0x20, 0x80, 0x00, 0x20, 0x40, 0x00, 0x28, 0x03, 0xD0
.byte 0xB9, 0x68, 0x01, 0x20, 0x40, 0x1A, 0xB8, 0x60, 0xB8, 0x68, 0x41, 0x42, 0x01, 0x43, 0xC9, 0x0F
.byte 0x79, 0x62, 0x7A, 0x68, 0x11, 0x01, 0xF9, 0x60, 0x80, 0x45, 0x57, 0xD0, 0x93, 0x20, 0x52, 0xF0
.byte 0x9F, 0xFA, 0x01, 0x20, 0x38, 0x61, 0x39, 0x68, 0x78, 0x68, 0x09, 0x18, 0x08, 0x1C, 0x00, 0x29
.byte 0x00, 0xDA, 0xC8, 0x1C, 0x80, 0x10, 0x10, 0x9A, 0x82, 0x42, 0x3F, 0xD0, 0x04, 0x28, 0x37, 0xD8
.byte 0x80, 0x00, 0x03, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00, 0x2C, 0x11, 0x00, 0x00
.byte 0x14, 0xDA, 0x00, 0x08, 0x28, 0xDA, 0x00, 0x08, 0x30, 0xDA, 0x00, 0x08, 0x38, 0xDA, 0x00, 0x08
.byte 0x40, 0xDA, 0x00, 0x08, 0x5C, 0xDA, 0x00, 0x08, 0x00, 0x4C, 0x0A, 0xE0, 0xB4, 0xDC, 0x07, 0x08
.byte 0x00, 0x4C, 0x06, 0xE0, 0xC8, 0xDD, 0x07, 0x08, 0x00, 0x4C, 0x02, 0xE0, 0xDC, 0xDE, 0x07, 0x08
.byte 0x05, 0x4C, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x20, 0xF0, 0x32, 0xFE, 0x01, 0x1C, 0x20, 0x1C
.byte 0x53, 0xF0, 0x88, 0xFC, 0x0C, 0xE0, 0x00, 0x00, 0xF8, 0xDF, 0x07, 0x08, 0x0A, 0x4C, 0x01, 0x20
.byte 0x00, 0x21, 0x00, 0x22, 0x20, 0xF0, 0x24, 0xFE, 0x01, 0x1C, 0x20, 0x1C, 0x53, 0xF0, 0x7A, 0xFC
.byte 0x01, 0x20, 0x20, 0xF0, 0xF9, 0xFD, 0x02, 0x20, 0x20, 0xF0, 0x40, 0xFE, 0x02, 0x23, 0x0A, 0x93
.byte 0x00, 0x24, 0x0B, 0x94, 0x68, 0xE3, 0x00, 0x00, 0x0C, 0xE1, 0x07, 0x08, 0x38, 0x68, 0x85, 0x42
.byte 0x03, 0xD1, 0x0F, 0x9E, 0x96, 0x42, 0x00, 0xD1, 0xE0, 0xE0, 0x8D, 0x20, 0x52, 0xF0, 0x40, 0xFA
.byte 0x01, 0x20, 0x38, 0x61, 0x0D, 0x4E, 0x56, 0x44, 0x70, 0x6A, 0xB0, 0x46, 0x00, 0x28, 0x1D, 0xD1
.byte 0x00, 0x24, 0x0B, 0x4D, 0x22, 0xF0, 0xBE, 0xFC, 0x72, 0x68, 0x12, 0x19, 0x51, 0x00, 0x89, 0x18
.byte 0x09, 0x02, 0x08, 0x4A, 0x89, 0x18, 0x2A, 0x1C, 0x07, 0x4B, 0x22, 0xF0, 0x8B, 0xFC, 0xC0, 0x20
.byte 0x80, 0x00, 0x2D, 0x18, 0x01, 0x34, 0x0B, 0x2C, 0xEC, 0xDD, 0x1C, 0xE0, 0x44, 0x0D, 0x00, 0x00
.byte 0x00, 0x58, 0x00, 0x06, 0x00, 0x54, 0x02, 0x02, 0x80, 0x01, 0x00, 0x80, 0x00, 0x24, 0x11, 0x4D
.byte 0x22, 0xF0, 0xA0, 0xFC, 0x72, 0x68, 0x12, 0x19, 0x51, 0x00, 0x89, 0x18, 0x09, 0x02, 0x0E, 0x4A
.byte 0x89, 0x18, 0x2A, 0x1C, 0x0D, 0x4B, 0x22, 0xF0, 0x6D, 0xFC, 0xC0, 0x21, 0x89, 0x00, 0x6D, 0x18
.byte 0x01, 0x34, 0x0B, 0x2C, 0xEC, 0xDD, 0x00, 0x24, 0x62, 0x00, 0x02, 0x32, 0x00, 0x20, 0x0D, 0x21
.byte 0x20, 0xF0, 0xC6, 0xFD, 0x81, 0x46, 0x42, 0x46, 0x10, 0x68, 0x84, 0x42, 0x08, 0xD1, 0xB0, 0x26
.byte 0x36, 0x02, 0x11, 0xE0, 0x00, 0x58, 0x00, 0x06, 0x00, 0x84, 0x00, 0x02, 0x80, 0x01, 0x00, 0x80
.byte 0x43, 0x46, 0x58, 0x68, 0x20, 0x18, 0x01, 0x21, 0x08, 0x40, 0xA0, 0x21, 0xC9, 0x01, 0x00, 0x28
.byte 0x01, 0xD0, 0xC0, 0x21, 0xC9, 0x01, 0x0E, 0x1C, 0x00, 0x21, 0x01, 0x34, 0xA4, 0x46, 0x15, 0x4A
.byte 0x88, 0x01, 0x4D, 0x1C, 0x4C, 0x46, 0x23, 0x18, 0x0B, 0x24, 0x19, 0x88, 0x10, 0x1C, 0x08, 0x40
.byte 0x30, 0x43, 0x18, 0x80, 0x02, 0x33, 0x01, 0x3C, 0x00, 0x2C, 0xF6, 0xDA, 0x29, 0x1C, 0x01, 0x29
.byte 0xEE, 0xDD, 0x64, 0x46, 0x07, 0x2C, 0xC7, 0xDD, 0x01, 0x20, 0x20, 0xF0, 0xB7, 0xFD, 0x39, 0x68
.byte 0x78, 0x68, 0x09, 0x18, 0x08, 0x1C, 0x00, 0x29, 0x00, 0xDA, 0xC8, 0x1C, 0x80, 0x10, 0x10, 0x9E
.byte 0x86, 0x42, 0x3F, 0xD0, 0x04, 0x28, 0x37, 0xD8, 0x80, 0x00, 0x03, 0x49, 0x40, 0x18, 0x00, 0x68
.byte 0x87, 0x46, 0x00, 0x00, 0xFF, 0x0F, 0x00, 0x00, 0xBC, 0xDB, 0x00, 0x08, 0xD0, 0xDB, 0x00, 0x08
.byte 0xD8, 0xDB, 0x00, 0x08, 0xE0, 0xDB, 0x00, 0x08, 0xE8, 0xDB, 0x00, 0x08, 0x04, 0xDC, 0x00, 0x08
.byte 0x00, 0x4C, 0x0A, 0xE0, 0xB4, 0xDC, 0x07, 0x08, 0x00, 0x4C, 0x06, 0xE0, 0xC8, 0xDD, 0x07, 0x08
.byte 0x00, 0x4C, 0x02, 0xE0, 0xDC, 0xDE, 0x07, 0x08, 0x05, 0x4C, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22
.byte 0x20, 0xF0, 0x5E, 0xFD, 0x01, 0x1C, 0x20, 0x1C, 0x53, 0xF0, 0xB4, 0xFB, 0x0C, 0xE0, 0x00, 0x00
.byte 0xF8, 0xDF, 0x07, 0x08, 0x11, 0x4C, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x20, 0xF0, 0x50, 0xFD
.byte 0x01, 0x1C, 0x20, 0x1C, 0x53, 0xF0, 0xA6, 0xFB, 0x01, 0x20, 0x20, 0xF0, 0x25, 0xFD, 0x02, 0x20
.byte 0x20, 0xF0, 0x6C, 0xFD, 0x50, 0x46, 0xFE, 0xF7, 0x8B, 0xFF, 0x22, 0xF0, 0x03, 0xFC, 0x08, 0x49
.byte 0x08, 0x4A, 0x09, 0x4B, 0x22, 0xF0, 0xD6, 0xFB, 0x78, 0x68, 0x0F, 0x99, 0x81, 0x42, 0x00, 0xD1
.byte 0x8A, 0xE2, 0x50, 0x46, 0xFE, 0xF7, 0xB2, 0xFE, 0x86, 0xE2, 0x00, 0x00, 0x0C, 0xE1, 0x07, 0x08
.byte 0x00, 0xF4, 0x00, 0x02, 0x00, 0x30, 0x00, 0x06, 0x00, 0x04, 0x00, 0x80, 0x09, 0x20, 0x20, 0x40
.byte 0x00, 0x28, 0x45, 0xD0, 0x1F, 0x4B, 0x53, 0x44, 0x00, 0x25, 0x58, 0x6A, 0x00, 0x28, 0x28, 0xD1
.byte 0x5A, 0x68, 0x1B, 0x68, 0xD4, 0x18, 0xA4, 0x46, 0xA1, 0x00, 0x1B, 0x48, 0x50, 0x44, 0x40, 0x18
.byte 0x01, 0x68, 0x48, 0x42, 0x08, 0x43, 0xC5, 0x0F, 0x00, 0x24, 0x8E, 0x20, 0x40, 0x01, 0x50, 0x44
.byte 0x01, 0x68, 0x06, 0x1C, 0x00, 0x29, 0x04, 0xD0, 0x14, 0x48, 0x50, 0x44, 0x00, 0x78, 0x60, 0x45
.byte 0x0E, 0xD0, 0x01, 0x34, 0x01, 0x2C, 0x0C, 0xDC, 0xA0, 0x00, 0x30, 0x18, 0x00, 0x68, 0x00, 0x28
.byte 0xF7, 0xD0, 0x0E, 0x48, 0x50, 0x44, 0x00, 0x19, 0x01, 0x78, 0xD0, 0x18, 0x81, 0x42, 0xF0, 0xD1
.byte 0x02, 0x35, 0x0E, 0x95, 0x00, 0x2D, 0x00, 0xD1, 0x54, 0xE1, 0xB8, 0x69, 0x00, 0x28, 0x02, 0xD0
.byte 0x02, 0x28, 0x00, 0xDC, 0x40, 0xE2, 0x8E, 0x20, 0x52, 0xF0, 0x22, 0xF9, 0x04, 0x26, 0x0A, 0x96
.byte 0x3A, 0xE2, 0x00, 0x00, 0x44, 0x0D, 0x00, 0x00, 0x30, 0x11, 0x00, 0x00, 0xC8, 0x11, 0x00, 0x00
.byte 0x02, 0x20, 0x04, 0x40, 0x00, 0x2C, 0x00, 0xD1, 0x2E, 0xE2, 0x90, 0x20, 0x52, 0xF0, 0x10, 0xF9
.byte 0x05, 0x20, 0xB8, 0x61, 0x00, 0x21, 0x11, 0x22, 0x05, 0x48, 0x50, 0x44, 0x02, 0x70, 0x18, 0x30
.byte 0x01, 0x31, 0x06, 0x29, 0xFA, 0xD9, 0x08, 0x20, 0x0A, 0x90, 0x00, 0x21, 0x0B, 0x91, 0x1B, 0xE2
.byte 0x96, 0x0D, 0x00, 0x00, 0x0B, 0x9A, 0x01, 0x32, 0x0B, 0x92, 0x10, 0x2A, 0x16, 0xDC, 0x0A, 0x49
.byte 0x90, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00
.byte 0x40, 0x18, 0x02, 0x68, 0x20, 0x23, 0xF9, 0x5E, 0x90, 0x20, 0x40, 0x1A, 0x50, 0x43, 0xC0, 0x13
.byte 0x3C, 0x8C, 0x00, 0x19, 0x38, 0x84, 0xFF, 0xE1, 0x5C, 0x64, 0x0E, 0x08, 0x0D, 0x4E, 0x56, 0x44
.byte 0x70, 0x6A, 0x00, 0x28, 0x1E, 0xD1, 0x00, 0x24, 0x0B, 0x4D, 0x22, 0xF0, 0x63, 0xFB, 0x72, 0x68
.byte 0x12, 0x19, 0x51, 0x00, 0x89, 0x18, 0x09, 0x02, 0x08, 0x4A, 0x89, 0x18, 0x2A, 0x1C, 0x08, 0x4B
.byte 0x22, 0xF0, 0x30, 0xFB, 0xC0, 0x20, 0x80, 0x00, 0x2D, 0x18, 0x01, 0x34, 0x0B, 0x2C, 0xEC, 0xDD
.byte 0x1D, 0xE0, 0x00, 0x00, 0x44, 0x0D, 0x00, 0x00, 0x00, 0x58, 0x00, 0x06, 0x00, 0x54, 0x02, 0x02
.byte 0x80, 0x01, 0x00, 0x80, 0x00, 0x24, 0x16, 0x4D, 0x22, 0xF0, 0x44, 0xFB, 0x72, 0x68, 0x12, 0x19
.byte 0x51, 0x00, 0x89, 0x18, 0x09, 0x02, 0x13, 0x4A, 0x89, 0x18, 0x2A, 0x1C, 0x12, 0x4B, 0x22, 0xF0
.byte 0x11, 0xFB, 0xC0, 0x21, 0x89, 0x00, 0x6D, 0x18, 0x01, 0x34, 0x0B, 0x2C, 0xEC, 0xDD, 0x50, 0x46
.byte 0xFE, 0xF7, 0xB6, 0xFE, 0x22, 0xF0, 0x2E, 0xFB, 0x0C, 0x4C, 0x0D, 0x4A, 0x0D, 0x4B, 0x21, 0x1C
.byte 0x22, 0xF0, 0x00, 0xFB, 0x50, 0x46, 0xFE, 0xF7, 0xE1, 0xFD, 0x7A, 0x6A, 0x0C, 0x92, 0x0A, 0x4B
.byte 0xE4, 0x18, 0x00, 0x2A, 0x14, 0xD1, 0x09, 0x48, 0x21, 0x1C, 0x53, 0xF0, 0xB3, 0xFA, 0x13, 0xE0
.byte 0x00, 0x58, 0x00, 0x06, 0x00, 0x84, 0x00, 0x02, 0x80, 0x01, 0x00, 0x80, 0x00, 0xF4, 0x00, 0x02
.byte 0x00, 0x30, 0x00, 0x06, 0x00, 0x04, 0x00, 0x80, 0x00, 0xD0, 0xFF, 0xFF, 0xF8, 0x34, 0x0B, 0x08
.byte 0x06, 0x48, 0x21, 0x1C, 0x53, 0xF0, 0x9E, 0xFA, 0x22, 0xF0, 0x04, 0xFB, 0x04, 0x4A, 0x05, 0x4B
.byte 0x21, 0x1C, 0x22, 0xF0, 0xD7, 0xFA, 0x03, 0x24, 0x23, 0xE0, 0x00, 0x00, 0xFC, 0x35, 0x0B, 0x08
.byte 0xC0, 0x54, 0x01, 0x06, 0x40, 0x01, 0x00, 0x80, 0x0B, 0x98, 0x01, 0x30, 0x0B, 0x90, 0x08, 0x28
.byte 0x16, 0xDC, 0x0A, 0x49, 0xC0, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04
.byte 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x01, 0x68, 0x20, 0x22, 0xB8, 0x5E, 0x40, 0x42, 0x48, 0x43
.byte 0xC0, 0x13, 0x3B, 0x8C, 0xC0, 0x18, 0x38, 0x84, 0x6E, 0xE1, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08
.byte 0x01, 0x24, 0x0A, 0x94, 0x00, 0x26, 0x0B, 0x96, 0x66, 0xE1, 0x04, 0xAA, 0x50, 0x46, 0x02, 0xA9
.byte 0xFE, 0xF7, 0x36, 0xFF, 0x22, 0xF0, 0xCE, 0xFA, 0x07, 0x49, 0x08, 0x4A, 0x08, 0x4B, 0x22, 0xF0
.byte 0xA1, 0xFA, 0x05, 0x20, 0x0A, 0x90, 0x0E, 0x99, 0x02, 0x29, 0x12, 0xD0, 0x02, 0x29, 0x09, 0xDC
.byte 0x01, 0x29, 0x0B, 0xD0, 0x50, 0xE1, 0x00, 0x00, 0x00, 0xF4, 0x00, 0x02, 0x00, 0x30, 0x00, 0x06
.byte 0x00, 0x04, 0x00, 0x80, 0x0E, 0x9A, 0x03, 0x2A, 0x06, 0xD0, 0x45, 0xE1, 0x00, 0x23, 0x0D, 0x93
.byte 0x42, 0xE1, 0x01, 0x24, 0x0D, 0x94, 0x3F, 0xE1, 0x00, 0x26, 0x0D, 0x96, 0x3C, 0xE1, 0x02, 0x20
.byte 0x20, 0x40, 0x00, 0x28, 0x05, 0xD0, 0x90, 0x20, 0x52, 0xF0, 0x1A, 0xF8, 0x06, 0x20, 0x0A, 0x90
.byte 0x32, 0xE1, 0x09, 0x20, 0x20, 0x40, 0x00, 0x28, 0x40, 0xD0, 0x39, 0x68, 0x78, 0x68, 0x08, 0x18
.byte 0x00, 0x28, 0x00, 0xDA, 0x03, 0x30, 0x80, 0x10, 0x41, 0x00, 0x09, 0x18, 0x89, 0x00, 0x18, 0x48
.byte 0x50, 0x44, 0x40, 0x18, 0x00, 0x68, 0x00, 0x28, 0x2C, 0xD1, 0x09, 0x21, 0x0A, 0x91, 0x00, 0x22
.byte 0x0B, 0x92, 0x8E, 0x20, 0x51, 0xF0, 0xFC, 0xFF, 0x0D, 0x9B, 0x9C, 0x00, 0x20, 0x1C, 0x68, 0x44
.byte 0x08, 0x30, 0x00, 0x68, 0x00, 0xF0, 0x3C, 0xFF, 0x56, 0x46, 0xB0, 0x61, 0x39, 0x68, 0x78, 0x68
.byte 0x08, 0x18, 0x00, 0x28, 0x00, 0xDA, 0x03, 0x30, 0x80, 0x10, 0x51, 0x46, 0xC8, 0x61, 0x39, 0x68
.byte 0x78, 0x68, 0x09, 0x18, 0x03, 0x20, 0x01, 0x40, 0x52, 0x46, 0x11, 0x62, 0x04, 0x20, 0x10, 0x61
.byte 0x04, 0xA8, 0x20, 0x18, 0x00, 0x78, 0x04, 0x21, 0x4F, 0xF0, 0xE2, 0xFD, 0xF4, 0xE0, 0x00, 0x00
.byte 0xAC, 0x10, 0x00, 0x00, 0x91, 0x20, 0x51, 0xF0, 0xD3, 0xFF, 0xED, 0xE0, 0xC0, 0x20, 0x04, 0x40
.byte 0x00, 0x2C, 0x00, 0xD1, 0xE8, 0xE0, 0x0E, 0x9B, 0x03, 0x2B, 0x00, 0xD0, 0xE4, 0xE0, 0x01, 0x20
.byte 0x0D, 0x9C, 0x44, 0x40, 0x0D, 0x94, 0x8D, 0x20, 0x51, 0xF0, 0xC2, 0xFF, 0xDC, 0xE0, 0x0A, 0x20
.byte 0xB8, 0x61, 0x13, 0x4C, 0x00, 0x20, 0x01, 0x21, 0x00, 0x22, 0x20, 0xF0, 0x81, 0xFB, 0x01, 0x1C
.byte 0x20, 0x1C, 0x53, 0xF0, 0xD7, 0xF9, 0x0F, 0x4E, 0x56, 0x44, 0x70, 0x6A, 0xB0, 0x46, 0x00, 0x28
.byte 0x20, 0xD1, 0x00, 0x24, 0x0C, 0x4D, 0x22, 0xF0, 0x35, 0xFA, 0x72, 0x68, 0x12, 0x19, 0x51, 0x00
.byte 0x89, 0x18, 0x09, 0x02, 0x09, 0x4A, 0x89, 0x18, 0x2A, 0x1C, 0x09, 0x4B, 0x22, 0xF0, 0x02, 0xFA
.byte 0xC0, 0x20, 0x80, 0x00, 0x2D, 0x18, 0x01, 0x34, 0x0B, 0x2C, 0xEC, 0xDD, 0x1F, 0xE0, 0x00, 0x00
.byte 0x68, 0x9A, 0x07, 0x08, 0x44, 0x0D, 0x00, 0x00, 0x00, 0x58, 0x00, 0x06, 0x00, 0x54, 0x02, 0x02
.byte 0x80, 0x01, 0x00, 0x80, 0x00, 0x24, 0x11, 0x4D, 0x22, 0xF0, 0x14, 0xFA, 0x72, 0x68, 0x12, 0x19
.byte 0x51, 0x00, 0x89, 0x18, 0x09, 0x02, 0x0E, 0x4A, 0x89, 0x18, 0x2A, 0x1C, 0x0D, 0x4B, 0x22, 0xF0
.byte 0xE1, 0xF9, 0xC0, 0x21, 0x89, 0x00, 0x6D, 0x18, 0x01, 0x34, 0x0B, 0x2C, 0xEC, 0xDD, 0x00, 0x24
.byte 0x62, 0x00, 0x02, 0x32, 0x00, 0x20, 0x0D, 0x21, 0x20, 0xF0, 0x3A, 0xFB, 0x81, 0x46, 0x42, 0x46
.byte 0x10, 0x68, 0x84, 0x42, 0x08, 0xD1, 0xB0, 0x26, 0x36, 0x02, 0x11, 0xE0, 0x00, 0x58, 0x00, 0x06
.byte 0x00, 0x84, 0x00, 0x02, 0x80, 0x01, 0x00, 0x80, 0x43, 0x46, 0x58, 0x68, 0x20, 0x18, 0x01, 0x21
.byte 0x08, 0x40, 0xA0, 0x21, 0xC9, 0x01, 0x00, 0x28, 0x01, 0xD0, 0xC0, 0x21, 0xC9, 0x01, 0x0E, 0x1C
.byte 0x00, 0x21, 0x01, 0x34, 0xA4, 0x46, 0x19, 0x4A, 0x88, 0x01, 0x4D, 0x1C, 0x4C, 0x46, 0x23, 0x18
.byte 0x0B, 0x24, 0x19, 0x88, 0x10, 0x1C, 0x08, 0x40, 0x30, 0x43, 0x18, 0x80, 0x02, 0x33, 0x01, 0x3C
.byte 0x00, 0x2C, 0xF6, 0xDA, 0x29, 0x1C, 0x01, 0x29, 0xEE, 0xDD, 0x64, 0x46, 0x07, 0x2C, 0xC7, 0xDD
.byte 0x01, 0x20, 0x20, 0xF0, 0x2B, 0xFB, 0x50, 0x46, 0xFE, 0xF7, 0x4A, 0xFD, 0x22, 0xF0, 0xC2, 0xF9
.byte 0x0B, 0x49, 0x0C, 0x4A, 0x0C, 0x4B, 0x22, 0xF0, 0x95, 0xF9, 0x0C, 0x49, 0x51, 0x44, 0x0B, 0x88
.byte 0x80, 0x26, 0xF6, 0x00, 0x30, 0x1C, 0x0A, 0x88, 0x18, 0x43, 0x08, 0x80, 0x08, 0x49, 0x51, 0x44
.byte 0x08, 0x88, 0x08, 0x48, 0x08, 0x80, 0x01, 0x20, 0x0A, 0x90, 0x3D, 0xE0, 0xFF, 0x0F, 0x00, 0x00
.byte 0x00, 0xF4, 0x00, 0x02, 0x00, 0x30, 0x00, 0x06, 0x00, 0x04, 0x00, 0x80, 0xFC, 0x11, 0x00, 0x00
.byte 0x04, 0x12, 0x00, 0x00, 0x04, 0x44, 0x00, 0x00, 0xB8, 0x69, 0x07, 0x28, 0x2C, 0xD1, 0x08, 0x21
.byte 0x0A, 0x91, 0x00, 0x22, 0x0B, 0x92, 0x27, 0xE0, 0x0B, 0x9B, 0x01, 0x33, 0x0B, 0x93, 0x10, 0x2B
.byte 0x0E, 0xDC, 0x05, 0x49, 0x51, 0x44, 0x08, 0x88, 0xFF, 0x20, 0x08, 0x80, 0x03, 0x48, 0x50, 0x44
.byte 0x01, 0x88, 0x03, 0x80, 0x18, 0xE0, 0x00, 0x00, 0x16, 0x12, 0x00, 0x00, 0x1A, 0x12, 0x00, 0x00
.byte 0x01, 0x20, 0xC5, 0xE1, 0x0B, 0x9E, 0x01, 0x36, 0x0B, 0x96, 0x10, 0x2E, 0x01, 0xDD, 0x00, 0x20
.byte 0xBE, 0xE1, 0x48, 0x49, 0x51, 0x44, 0x08, 0x88, 0xFF, 0x20, 0x08, 0x80, 0x46, 0x48, 0x50, 0x44
.byte 0x01, 0x88, 0x69, 0x46, 0x89, 0x8D, 0x01, 0x80
_0800E158:
.byte 0x3A, 0x8C, 0x90, 0x20, 0x40, 0x01, 0x50, 0x44, 0x01, 0x88, 0x00, 0x25, 0x02, 0x80, 0x38, 0x8C
.byte 0x40, 0x42, 0x40, 0x49, 0x51, 0x44, 0x0A, 0x88, 0x08, 0x80, 0x7A, 0x8C, 0x3E, 0x48, 0x50, 0x44
.byte 0x01, 0x88, 0x02, 0x80, 0x38, 0x8C, 0x40, 0x42, 0x3C, 0x49, 0x51, 0x44, 0x0A, 0x88, 0x08, 0x80
.byte 0x00, 0x20, 0x20, 0xF0, 0x51, 0xFA, 0x02, 0x1C, 0xB0, 0x23, 0x5B, 0x00, 0xD2, 0x18, 0x38, 0x48
.byte 0x01, 0x1C, 0x20, 0x31, 0x54, 0x46, 0xE3, 0x6C, 0x10, 0x24, 0x00, 0x94, 0xF7, 0xF7, 0x2E, 0xFE
.byte 0x50, 0x46, 0xFF, 0xF7, 0x1D, 0xF9, 0x50, 0x46, 0xFF, 0xF7, 0x82, 0xF9, 0x0A, 0x9E, 0x05, 0x2E
.byte 0x27, 0xD0, 0x09, 0x2E, 0x25, 0xD0, 0x2F, 0x48, 0x50, 0x44, 0x00, 0x68, 0x00, 0x28, 0x20, 0xD0
.byte 0x38, 0x8C, 0x9C, 0x30, 0x00, 0x04, 0x00, 0x0C, 0x98, 0x21, 0x09, 0x04, 0x08, 0x43, 0x06, 0x90
.byte 0x29, 0x48, 0x06, 0xAC, 0x00, 0x95, 0x01, 0x95, 0x21, 0x1C, 0x00, 0x22, 0x00, 0x23, 0x21, 0xF0
.byte 0x19, 0xFC, 0x0C, 0x98, 0x00, 0x28, 0x0C, 0xD0, 0x38, 0x8C, 0x80, 0x30, 0x20, 0x80, 0x09, 0x20
.byte 0x60, 0x80, 0x22, 0x48, 0x00, 0x95, 0x01, 0x95, 0x21, 0x1C, 0x00, 0x22, 0x00, 0x23, 0x21, 0xF0
.byte 0x09, 0xFC, 0x78, 0x6A, 0x00, 0x28, 0x05, 0xD1, 0x0A, 0x99, 0x02, 0x29, 0x02, 0xD0, 0x50, 0x46
.byte 0xFF, 0xF7, 0xE2, 0xF9, 0x0A, 0x9A, 0x05, 0x2A, 0x01, 0xD0, 0x09, 0x2A, 0x40, 0xD1, 0x18, 0x48
.byte 0x07, 0x99, 0x01, 0x40, 0x32, 0x20, 0x01, 0x43, 0x07, 0x91, 0x16, 0x4A, 0x0D, 0x9B, 0x58, 0x00
.byte 0x80, 0x18, 0x02, 0x88, 0x12, 0x04, 0x14, 0x48, 0x01, 0x40, 0x11, 0x43, 0x07, 0x91, 0x54, 0x46
.byte 0xE2, 0x6C, 0x10, 0x20, 0x02, 0x40, 0x00, 0x2A, 0x22, 0xD0, 0x10, 0x48, 0x07, 0xA9, 0x00, 0x22
.byte 0x00, 0x92, 0x01, 0x92, 0x00, 0x23, 0x21, 0xF0, 0xDD, 0xFB, 0x21, 0xE0, 0x16, 0x12, 0x00, 0x00
.byte 0x1A, 0x12, 0x00, 0x00, 0x06, 0x12, 0x00, 0x00, 0x08, 0x12, 0x00, 0x00, 0x0C, 0x12, 0x00, 0x00
.byte 0xB0, 0x23, 0x0B, 0x08, 0x2C, 0x11, 0x00, 0x00, 0xD0, 0x94, 0x0C, 0x08, 0x08, 0x95, 0x0C, 0x08
.byte 0x00, 0x00, 0xFF, 0xFF, 0x84, 0x97, 0x0D, 0x08, 0xFF, 0xFF, 0x00, 0x00, 0x2C, 0x96, 0x0C, 0x08
.byte 0x27, 0x48, 0x07, 0xA9, 0x00, 0x92, 0x01, 0x92, 0x00, 0x22, 0x00, 0x23, 0x21, 0xF0, 0xBA, 0xFB
.byte 0x0A, 0x9E, 0x05, 0x2E, 0x50, 0xD0, 0x09, 0x2E, 0x4E, 0xD0, 0x78, 0x6A, 0xB1, 0x00, 0x12, 0x91
.byte 0x00, 0x28, 0x6E, 0xD1, 0x1F, 0x4B, 0x53, 0x44, 0x00, 0x25, 0x58, 0x6A, 0x00, 0x28, 0x28, 0xD1
.byte 0x5A, 0x68, 0x1B, 0x68, 0xD4, 0x18, 0xA4, 0x46, 0xA1, 0x00, 0x1B, 0x48, 0x50, 0x44, 0x40, 0x18
.byte 0x01, 0x68, 0x48, 0x42, 0x08, 0x43, 0xC5, 0x0F, 0x00, 0x24, 0x8E, 0x20, 0x40, 0x01, 0x50, 0x44
.byte 0x01, 0x68, 0x06, 0x1C, 0x00, 0x29, 0x04, 0xD0, 0x14, 0x48, 0x50, 0x44, 0x00, 0x78, 0x60, 0x45
.byte 0x0E, 0xD0, 0x01, 0x34, 0x01, 0x2C, 0x0C, 0xDC, 0xA0, 0x00, 0x30, 0x18, 0x00, 0x68, 0x00, 0x28
.byte 0xF7, 0xD0, 0x0E, 0x48, 0x50, 0x44, 0x00, 0x19, 0x01, 0x78, 0xD0, 0x18, 0x81, 0x42, 0xF0, 0xD1
.byte 0x02, 0x35, 0x0E, 0x95, 0x00, 0x2D, 0x3C, 0xD0, 0x09, 0x48, 0x08, 0x90, 0x09, 0x48, 0x08, 0xA9
.byte 0x00, 0x22, 0x00, 0x92, 0x01, 0x92, 0x00, 0x23, 0x21, 0xF0, 0x74, 0xFB, 0x31, 0xE0, 0x00, 0x00
.byte 0x48, 0x96, 0x0C, 0x08, 0x44, 0x0D, 0x00, 0x00, 0x30, 0x11, 0x00, 0x00, 0xC8, 0x11, 0x00, 0x00
.byte 0x28, 0x00, 0x9A, 0x00, 0xF4, 0x95, 0x0C, 0x08, 0x53, 0x4C, 0x20, 0x88, 0x00, 0x28, 0x0B, 0xD0
.byte 0x00, 0x22, 0x32, 0x20, 0x08, 0xA9, 0x08, 0x80, 0x41, 0x20, 0x48, 0x80, 0x4F, 0x48, 0x00, 0x92
.byte 0x01, 0x92, 0x00, 0x23, 0x21, 0xF0, 0x56, 0xFB, 0xA0, 0x26, 0x76, 0x00, 0xA0, 0x19, 0x00, 0x88
.byte 0x0A, 0x99, 0x89, 0x00, 0x12, 0x91, 0x00, 0x28, 0x0B, 0xD0, 0x00, 0x22, 0x32, 0x20, 0x08, 0xA9
.byte 0x08, 0x80, 0x69, 0x20, 0x48, 0x80, 0x46, 0x48, 0x00, 0x92, 0x01, 0x92, 0x00, 0x23, 0x21, 0xF0
.byte 0x41, 0xFB, 0x52, 0x46, 0xD0, 0x6C, 0x43, 0x4A, 0xC0, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA
.byte 0x3F, 0x30, 0x81, 0x11, 0x80, 0x20, 0x40, 0x00, 0x40, 0x1A, 0x3F, 0x49, 0x08, 0x40, 0x80, 0x00
.byte 0x80, 0x18, 0x01, 0x68, 0x80, 0x20, 0x00, 0x02, 0x40, 0x1A, 0xC1, 0x0F, 0x40, 0x18, 0x40, 0x10
.byte 0x81, 0x46, 0x01, 0x20, 0x20, 0xF0, 0x30, 0xF9, 0x00, 0x23, 0x11, 0x93, 0x1F, 0x24, 0xA4, 0x46
.byte 0x1F, 0x26, 0xB0, 0x46, 0x8E, 0x21, 0x49, 0x00, 0x41, 0x18, 0x13, 0x91, 0x33, 0x48, 0x11, 0x9A
.byte 0x51, 0x00, 0x08, 0x18, 0x02, 0x88, 0x45, 0x46, 0x15, 0x40, 0x12, 0x04, 0x54, 0x0D, 0x63, 0x46
.byte 0x1C, 0x40, 0x92, 0x0E, 0x1A, 0x40, 0x2E, 0x48, 0x09, 0x18, 0x09, 0x88, 0x40, 0x46, 0x08, 0x40
.byte 0x09, 0x04, 0x4B, 0x0D, 0x66, 0x46, 0x33, 0x40, 0x89, 0x0E, 0x31, 0x40, 0x40, 0x1B, 0x4E, 0x46
.byte 0x46, 0x43, 0x30, 0x1C, 0xC0, 0x13, 0x2D, 0x18, 0x2D, 0x04, 0x2D, 0x0C, 0x1B, 0x1B, 0x48, 0x46
.byte 0x58, 0x43, 0xC0, 0x13, 0x24, 0x18, 0x24, 0x04, 0x24, 0x0C, 0x89, 0x1A, 0x48, 0x46, 0x48, 0x43
.byte 0xC0, 0x13, 0x12, 0x18, 0x12, 0x04, 0x12, 0x0C, 0x40, 0x46, 0x05, 0x40, 0x04, 0x40, 0x64, 0x01
.byte 0x25, 0x43, 0x02, 0x40, 0x92, 0x02, 0x15, 0x43, 0x13, 0x99, 0x0D, 0x80, 0x02, 0x31, 0x13, 0x91
.byte 0x11, 0x9A, 0x01, 0x32, 0x11, 0x92, 0x01, 0x2A, 0xC0, 0xDD, 0x01, 0x20, 0x20, 0xF0, 0x00, 0xF9
.byte 0x7A, 0x6A, 0x00, 0x2A, 0x01, 0xD0, 0xFF, 0xF7, 0xC1, 0xF9, 0x0A, 0x9B, 0x02, 0x2B, 0x01, 0xD1
.byte 0xFF, 0xF7, 0xBC, 0xF9, 0x38, 0x8C, 0xD8, 0x30, 0x00, 0x04, 0x00, 0x0C, 0xB0, 0x21, 0x09, 0x03
.byte 0x08, 0x43, 0x09, 0x90, 0x0B, 0x48, 0x09, 0xA9, 0x00, 0x92, 0x01, 0x92, 0x00, 0x22, 0x00, 0x23
.byte 0x21, 0xF0, 0xC0, 0xFA, 0xFF, 0xF7, 0xAA, 0xF9, 0x04, 0xF6, 0x00, 0x02, 0xBC, 0x95, 0x0C, 0x08
.byte 0xF8, 0x93, 0x0C, 0x08, 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x03, 0x00, 0x00, 0x88, 0x97, 0x0D, 0x08
.byte 0x8C, 0x97, 0x0D, 0x08, 0xD4, 0x96, 0x0C, 0x08, 0x14, 0xB0, 0x38, 0xBC, 0x98, 0x46, 0xA1, 0x46
.byte 0xAA, 0x46, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47
thumb_func_start sub_800E4D0
sub_800E4D0:
push {r4, r5, r6, r7, lr}
adds r7, r0, #0x0
adds r6, r1, #0x0
adds r5, r3, #0x0
lsls r2, r2, #0x10
lsrs r3, r2, #0x10
adds r4, r3, #0x0
ldr r1, [r7, #0x00]
ldr r0, [r6, #0x00]
adds r2, r1, r0
movs r0, #0x40
ands r0, r3
cmp r0, #0x00
beq _0800E4EE
subs r2, #0x01
_0800E4EE:
movs r0, #0x80
ands r0, r3
cmp r0, #0x00
beq _0800E4F8
adds r2, #0x01
_0800E4F8:
movs r0, #0x20
ands r0, r3
cmp r0, #0x00
beq _0800E502
subs r2, #0x08
_0800E502:
movs r0, #0x10
ands r4, r0
cmp r4, #0x00
beq _0800E50C
adds r2, #0x08
_0800E50C:
cmp r2, #0x00
bge _0800E512
movs r2, #0x00
_0800E512:
subs r0, r5, #0x1
cmp r2, r0
ble _0800E51A
adds r2, r0, #0x0
_0800E51A:
adds r0, r1, #0x1
cmp r2, r0
bge _0800E522
subs r1, r2, #0x1
_0800E522:
adds r0, r1, #0x6
cmp r2, r0
ble _0800E52A
subs r1, r2, #0x6
_0800E52A:
cmp r1, #0x00
bge _0800E530
movs r1, #0x00
_0800E530:
adds r3, r5, #0x0
subs r3, #0x08
cmp r1, r3
ble _0800E53A
adds r1, r3, #0x0
_0800E53A:
subs r0, r2, r1
str r0, [r6, #0x00]
str r1, [r7, #0x00]
adds r0, r0, r1
pop {r4, r5, r6, r7}
pop {r1}
bx r1
thumb_func_start sub_800E548
sub_800E548:
push {r4, r5, r6, lr}
ldr r1, _0800E580 @ =0x00000D44
adds r6, r0, r1
ldr r0, [r6, #0x24]
cmp r0, #0x00
bne _0800E590
movs r4, #0x00
ldr r5, _0800E584 @ =0x06005800
_0800E558:
bl dmaq_getVBlankDmaQueue
ldr r2, [r6, #0x04]
adds r2, r2, r4
lsls r1, r2, #0x01
adds r1, r1, r2
lsls r1, r1, #0x08
ldr r2, _0800E588 @ =0x02025400
adds r1, r1, r2
adds r2, r5, #0x0
ldr r3, _0800E58C @ =0x80000180
bl dmaq_enqueue
movs r0, #0xC0
lsls r0, r0, #0x02
adds r5, r5, r0
adds r4, #0x01
cmp r4, #0x0B
ble _0800E558
b _0800E5BA
_0800E580: .4byte 0x00000D44
_0800E584: .4byte 0x06005800
_0800E588: .4byte 0x02025400
_0800E58C: .4byte 0x80000180
_0800E590:
movs r4, #0x00
ldr r5, _0800E5C0 @ =0x06005800
_0800E594:
bl dmaq_getVBlankDmaQueue
ldr r2, [r6, #0x04]
adds r2, r2, r4
lsls r1, r2, #0x01
adds r1, r1, r2
lsls r1, r1, #0x08
ldr r2, _0800E5C4 @ =0x02008400
adds r1, r1, r2
adds r2, r5, #0x0
ldr r3, _0800E5C8 @ =0x80000180
bl dmaq_enqueue
movs r1, #0xC0
lsls r1, r1, #0x02
adds r5, r5, r1
adds r4, #0x01
cmp r4, #0x0B
ble _0800E594
_0800E5BA:
pop {r4, r5, r6}
pop {r0}
bx r0
_0800E5C0: .4byte 0x06005800
_0800E5C4: .4byte 0x02008400
_0800E5C8: .4byte 0x80000180
thumb_func_start sub_800E5CC
sub_800E5CC:
push {r4, r5, r6, r7, lr}
mov r7, r8
push {r7}
ldr r1, _0800E5F8 @ =0x00000D44
adds r1, r1, r0
mov r8, r1
movs r4, #0x00
_0800E5DA:
lsls r2, r4, #0x01
adds r2, #0x02
movs r0, #0x00
movs r1, #0x0D
bl map_getBufferPtr2d
mov r12, r0
mov r1, r8
ldr r0, [r1, #0x00]
cmp r4, r0
bne _0800E5FC
movs r5, #0xB0
lsls r5, r5, #0x08
b _0800E614
.byte 0x00, 0x00
_0800E5F8: .4byte 0x00000D44
_0800E5FC:
mov r0, r8
ldr r1, [r0, #0x04]
adds r1, r4, r1
movs r0, #0x01
ands r1, r0
movs r0, #0xA0
lsls r0, r0, #0x07
cmp r1, #0x00
beq _0800E612
movs r0, #0xC0
lsls r0, r0, #0x07
_0800E612:
adds r5, r0, #0x0
_0800E614:
movs r1, #0x00
adds r6, r4, #0x1
ldr r7, _0800E654 @ =0x00000FFF
_0800E61A:
lsls r0, r1, #0x06
adds r4, r1, #0x1
mov r1, r12
adds r3, r1, r0
movs r2, #0x0B
_0800E624:
ldrh r1, [r3, #0x00]
adds r0, r7, #0x0
ands r0, r1
orrs r0, r5
strh r0, [r3, #0x00]
adds r3, #0x02
subs r2, #0x01
cmp r2, #0x00
bge _0800E624
adds r1, r4, #0x0
cmp r1, #0x01
ble _0800E61A
adds r4, r6, #0x0
cmp r4, #0x07
ble _0800E5DA
movs r0, #0x01
bl map_setBufferDirty
pop {r3}
mov r8, r3
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_0800E654: .4byte 0x00000FFF
thumb_func_start sub_800E658
sub_800E658:
push {r4, lr}
cmp r0, #0x04
bhi _0800E6C8
lsls r0, r0, #0x02
ldr r1, _0800E668 @ =0x0800E66C
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
_0800E668: .4byte 0x0800E66C
.byte 0x80, 0xE6, 0x00, 0x08, 0x88, 0xE6, 0x00, 0x08, 0x90, 0xE6, 0x00, 0x08, 0x98, 0xE6, 0x00, 0x08
.byte 0xB4, 0xE6, 0x00, 0x08, 0x00, 0x4C, 0x0A, 0xE0, 0xB4, 0xDC, 0x07, 0x08, 0x00, 0x4C, 0x06, 0xE0
.byte 0xC8, 0xDD, 0x07, 0x08, 0x00, 0x4C, 0x02, 0xE0, 0xDC, 0xDE, 0x07, 0x08, 0x05, 0x4C, 0x01, 0x20
.byte 0x00, 0x21, 0x00, 0x22, 0x20, 0xF0, 0x06, 0xF8, 0x01, 0x1C, 0x20, 0x1C, 0x52, 0xF0, 0x5C, 0xFE
.byte 0x0C, 0xE0, 0x00, 0x00, 0xF8, 0xDF, 0x07, 0x08, 0x09, 0x4C, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22
.byte 0x1F, 0xF0, 0xF8, 0xFF, 0x01, 0x1C, 0x20, 0x1C, 0x52, 0xF0, 0x4E, 0xFE
_0800E6C8:
movs r0, #0x01
bl pltt_setDirtyFlag
movs r0, #0x02
bl map_setBufferDirty
pop {r4}
pop {r0}
bx r0
.byte 0x00, 0x00, 0x0C, 0xE1, 0x07, 0x08, 0xF0, 0xB5, 0x4F, 0x46, 0x46, 0x46, 0xC0, 0xB4, 0x81, 0x46
.byte 0x90, 0x46, 0x00, 0x26, 0x1F, 0x03, 0x0D, 0x1C, 0x40, 0x35, 0x0C, 0x1C, 0x49, 0x46, 0x88, 0x19
.byte 0x00, 0x78, 0x05, 0xF0, 0x68, 0xFE, 0x00, 0x04, 0x00, 0x0C, 0x40, 0x44, 0x39, 0x1C, 0x01, 0x43
.byte 0x21, 0x80, 0x20, 0x30, 0x38, 0x43, 0x28, 0x80, 0x02, 0x35, 0x02, 0x34, 0x01, 0x36, 0x04, 0x2E
.byte 0xEC, 0xDD, 0x18, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47
thumb_func_start sub_800E728
sub_800E728:
push {r4, r5, r6, r7, lr}
adds r5, r0, #0x0
adds r6, r1, #0x0
adds r7, r2, #0x0
lsls r4, r3, #0x0C
movs r0, #0x10
ands r0, r5
cmp r0, #0x00
beq _0800E744
movs r1, #0x00
ldr r7, [sp, #0x014]
ldr r0, [sp, #0x018]
lsls r4, r0, #0x0C
b _0800E75C
_0800E744:
movs r0, #0x07
ands r0, r5
bl sub_800EDB0
adds r5, r0, #0x0
movs r1, #0x02
cmp r5, #0x03
beq _0800E75C
adds r1, r5, #0x0
cmp r1, #0x02
bne _0800E75C
movs r1, #0x03
_0800E75C:
lsls r1, r1, #0x02
adds r1, r7, r1
adds r0, r4, #0x0
orrs r0, r1
strh r0, [r6, #0x00]
adds r0, r1, #0x1
orrs r0, r4
strh r0, [r6, #0x02]
adds r2, r6, #0x0
adds r2, #0x40
adds r0, r1, #0x2
orrs r0, r4
strh r0, [r2, #0x00]
adds r0, r6, #0x0
adds r0, #0x42
adds r1, #0x03
orrs r4, r1
strh r4, [r0, #0x00]
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
thumb_func_start sub_800E788
sub_800E788:
push {r4, r5, r6, r7, lr}
mov r7, r8
push {r7}
adds r4, r0, #0x0
mov r8, r1
adds r5, r2, #0x0
ldr r1, [sp, #0x018]
lsls r7, r3, #0x0C
movs r0, #0x10
ands r0, r4
cmp r0, #0x00
beq _0800E7C4
ldr r0, [sp, #0x01C]
lsls r0, r0, #0x0C
adds r3, r1, #0x0
adds r3, #0x1B
adds r1, #0x3B
orrs r3, r0
orrs r1, r0
adds r0, r5, #0x0
adds r0, #0x40
movs r4, #0x04
_0800E7B4:
strh r3, [r2, #0x00]
strh r1, [r0, #0x00]
adds r0, #0x02
adds r2, #0x02
subs r4, #0x01
cmp r4, #0x00
bge _0800E7B4
b _0800E810
_0800E7C4:
movs r0, #0x07
ands r0, r4
bl sub_800EDB0
adds r4, r0, #0x0
ldr r1, _0800E81C @ =0x080D9774
lsls r0, r4, #0x01
adds r2, r0, r1
adds r0, #0x01
adds r0, r0, r1
ldrb r0, [r0, #0x00]
adds r6, r5, #0x0
adds r6, #0x40
lsls r0, r0, #0x05
ldrb r2, [r2, #0x00]
adds r0, r0, r2
movs r4, #0x04
lsls r0, r0, #0x01
adds r1, r0, #0x0
adds r1, #0x40
mov r3, r8
adds r2, r1, r3
adds r3, r0, r3
_0800E7F2:
ldrh r1, [r3, #0x00]
adds r0, r7, #0x0
orrs r0, r1
strh r0, [r5, #0x00]
ldrh r1, [r2, #0x00]
adds r0, r7, #0x0
orrs r0, r1
strh r0, [r6, #0x00]
adds r6, #0x02
adds r2, #0x02
adds r3, #0x02
adds r5, #0x02
subs r4, #0x01
cmp r4, #0x00
bge _0800E7F2
_0800E810:
pop {r3}
mov r8, r3
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_0800E81C: .4byte 0x080D9774
.byte 0xF0, 0xB5, 0x4F, 0x46, 0x46, 0x46, 0xC0, 0xB4, 0x07, 0x1C, 0x0C, 0x1C, 0x94, 0x46, 0x07, 0x98
.byte 0x40, 0x01, 0x1B, 0x18, 0x5B, 0x00, 0xFF, 0x18, 0x00, 0x25, 0x65, 0x45, 0x35, 0xDA, 0x20, 0x78
.byte 0x00, 0x28, 0x1D, 0xD0, 0x08, 0x98, 0x00, 0x03, 0x81, 0x46, 0x3A, 0x1C, 0x40, 0x32, 0x3B, 0x1C
.byte 0x1F, 0x21, 0x88, 0x46, 0x20, 0x78, 0x41, 0x09, 0x89, 0x01, 0x46, 0x46, 0x30, 0x40, 0x09, 0x18
.byte 0x48, 0x46, 0x08, 0x43, 0x18, 0x80, 0x20, 0x31, 0x48, 0x46, 0x01, 0x43, 0x11, 0x80, 0x01, 0x34
.byte 0x02, 0x32, 0x02, 0x33, 0x01, 0x35, 0x65, 0x45, 0x17, 0xDA, 0x20, 0x78, 0x00, 0x28, 0xE9, 0xD1
.byte 0x65, 0x45, 0x12, 0xDA, 0x08, 0x99, 0x0C, 0x03, 0x20, 0x20, 0x22, 0x1C, 0x02, 0x43, 0x69, 0x00
.byte 0x08, 0x1C, 0x40, 0x30, 0xC3, 0x19, 0xC8, 0x19, 0x66, 0x46, 0x75, 0x1B, 0x04, 0x80, 0x1A, 0x80
.byte 0x02, 0x33, 0x02, 0x30, 0x01, 0x3D, 0x00, 0x2D, 0xF8, 0xD1, 0x18, 0xBC, 0x98, 0x46, 0xA1, 0x46
.byte 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0xF0, 0xB5, 0x04, 0x1C, 0x19, 0x48, 0x23, 0x18
.byte 0x00, 0x26, 0x58, 0x6A, 0x00, 0x28, 0x29, 0xD1, 0x5A, 0x68, 0x1B, 0x68, 0xD7, 0x18, 0xB9, 0x00
.byte 0x15, 0x4D, 0x60, 0x19, 0x40, 0x18, 0x01, 0x68, 0x48, 0x42, 0x08, 0x43, 0xC6, 0x0F, 0x00, 0x25
.byte 0x8E, 0x21, 0x49, 0x01, 0x60, 0x18, 0x00, 0x68, 0x00, 0x28, 0x04, 0xD0, 0x08, 0x31, 0x60, 0x18
.byte 0x00, 0x78, 0xB8, 0x42, 0x11, 0xD0, 0x01, 0x35, 0x01, 0x2D, 0x0F, 0xDC, 0xA8, 0x00, 0x8E, 0x27
.byte 0x7F, 0x01, 0xE1, 0x19, 0x09, 0x18, 0x08, 0x68, 0x00, 0x28, 0xF4, 0xD0, 0x07, 0x49, 0x60, 0x18
.byte 0x40, 0x19, 0x01, 0x78, 0xD0, 0x18, 0x81, 0x42, 0xED, 0xD1, 0x02, 0x36, 0x30, 0x1C, 0xF0, 0xBC
.byte 0x02, 0xBC, 0x08, 0x47, 0x44, 0x0D, 0x00, 0x00, 0x30, 0x11, 0x00, 0x00, 0xC8, 0x11, 0x00, 0x00
thumb_func_start sub_800E930
sub_800E930:
push {r4, r5, r6, r7, lr}
adds r6, r0, #0x0
adds r7, r1, #0x0
adds r4, r2, #0x0
adds r5, r3, #0x0
ldr r1, [sp, #0x014]
movs r0, #0x00
cmp r1, #0x0D
bls _0800E944
b _0800EB64
_0800E944:
lsls r0, r1, #0x02
ldr r1, _0800E950 @ =0x0800E954
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
.byte 0x00, 0x00
_0800E950: .4byte 0x0800E954
.byte 0x8C, 0xE9, 0x00, 0x08, 0x94, 0xE9, 0x00, 0x08, 0xA2, 0xE9, 0x00, 0x08, 0xB4, 0xE9, 0x00, 0x08
.byte 0xD2, 0xE9, 0x00, 0x08, 0xD8, 0xE9, 0x00, 0x08, 0x24, 0xEA, 0x00, 0x08, 0x36, 0xEA, 0x00, 0x08
.byte 0x4A, 0xEA, 0x00, 0x08, 0x6A, 0xEA, 0x00, 0x08, 0x76, 0xEA, 0x00, 0x08, 0xC8, 0xEA, 0x00, 0x08
.byte 0x08, 0xEB, 0x00, 0x08, 0x30, 0xEB, 0x00, 0x08, 0xB8, 0x1B, 0x60, 0x43, 0x29, 0x1C, 0x1A, 0xE0
.byte 0x21, 0x1C, 0x61, 0x43, 0xB8, 0x1B, 0x48, 0x43, 0x29, 0x1C, 0x69, 0x43, 0x13, 0xE0, 0x20, 0x1C
.byte 0x60, 0x43, 0x01, 0x1C, 0x61, 0x43, 0xB8, 0x1B, 0x48, 0x43, 0x29, 0x1C, 0x69, 0x43, 0x09, 0xE0
.byte 0x20, 0x1C, 0x60, 0x43, 0x60, 0x43, 0x01, 0x1C, 0x61, 0x43, 0xB8, 0x1B, 0x48, 0x43, 0x29, 0x1C
.byte 0x69, 0x43, 0x69, 0x43, 0x69, 0x43, 0x53, 0xF0, 0x71, 0xFA, 0x30, 0x18, 0xC8, 0xE0, 0x60, 0x04
.byte 0x29, 0x1C, 0x03, 0xE0, 0x60, 0x04, 0x60, 0x43, 0x29, 0x01, 0x49, 0x1B, 0x53, 0xF0, 0x66, 0xFA
.byte 0x0D, 0x4A, 0x00, 0x04, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x81, 0x11, 0x80, 0x20
.byte 0x40, 0x00, 0x40, 0x1A, 0x09, 0x49, 0x08, 0x40, 0x80, 0x00, 0x80, 0x18, 0x01, 0x68, 0xB8, 0x1B
.byte 0x48, 0x43, 0xC2, 0x13, 0x29, 0x1B, 0x10, 0x1C, 0x48, 0x43, 0x48, 0x43, 0x29, 0x1C, 0x69, 0x43
.byte 0x53, 0xF0, 0x4C, 0xFA, 0x38, 0x1A, 0xA3, 0xE0, 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x03, 0x00, 0x00
.byte 0x2A, 0x1B, 0xB9, 0x1B, 0x74, 0x18, 0x10, 0x1C, 0x50, 0x43, 0x48, 0x43, 0x29, 0x1C, 0x69, 0x43
.byte 0x15, 0xE0, 0x2A, 0x1B, 0xB9, 0x1B, 0x74, 0x18, 0x10, 0x1C, 0x50, 0x43, 0x50, 0x43, 0x48, 0x43
.byte 0x29, 0x1C, 0x69, 0x43, 0x0A, 0xE0, 0x2A, 0x1B, 0xB9, 0x1B, 0x74, 0x18, 0x10, 0x1C, 0x50, 0x43
.byte 0x50, 0x43, 0x50, 0x43, 0x48, 0x43, 0x29, 0x1C, 0x69, 0x43, 0x69, 0x43, 0x69, 0x43, 0x53, 0xF0
.byte 0x25, 0xFA, 0x20, 0x1A, 0x7C, 0xE0, 0x60, 0x04, 0x60, 0x43, 0xA9, 0x00, 0x49, 0x19, 0xC9, 0x00
.byte 0x03, 0xE0, 0x60, 0x04, 0x60, 0x43, 0x46, 0x21, 0x69, 0x43, 0x53, 0xF0, 0x17, 0xFA, 0x0F, 0x4A
.byte 0x00, 0x04, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x81, 0x11, 0x80, 0x20, 0x40, 0x00
.byte 0x40, 0x1A, 0x0B, 0x49, 0x08, 0x40, 0x80, 0x00, 0x80, 0x18, 0x00, 0x68, 0x29, 0x1B, 0x48, 0x43
.byte 0x48, 0x43, 0x29, 0x1C, 0x69, 0x43, 0x53, 0xF0, 0x01, 0xFA, 0x02, 0x1C, 0x00, 0x2A, 0x00, 0xDA
.byte 0x52, 0x42, 0xB8, 0x1B, 0x42, 0x43, 0xD2, 0x13, 0xB8, 0x1A, 0x51, 0xE0, 0x5C, 0x64, 0x0E, 0x08
.byte 0xFF, 0x03, 0x00, 0x00, 0xE0, 0x03, 0x29, 0x1C, 0x53, 0xF0, 0xF0, 0xF9, 0x0B, 0x4A, 0x00, 0x04
.byte 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x81, 0x11, 0x80, 0x20, 0x40, 0x00, 0x40, 0x1A
.byte 0x07, 0x49, 0x08, 0x40, 0x80, 0x00, 0x80, 0x18, 0x01, 0x68, 0xBA, 0x1B, 0x80, 0x20, 0x00, 0x02
.byte 0x40, 0x1A, 0x50, 0x43, 0xC1, 0x0F, 0x40, 0x18, 0x02, 0x14, 0x30, 0xE0, 0x5C, 0x64, 0x0E, 0x08
.byte 0xFF, 0x03, 0x00, 0x00, 0xA0, 0x03, 0x29, 0x1C, 0x53, 0xF0, 0xD0, 0xF9, 0x06, 0x49, 0x00, 0x04
.byte 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18
.byte 0x01, 0x68, 0xB8, 0x1B, 0x48, 0x43, 0x19, 0xE0, 0x5C, 0x64, 0x0E, 0x08, 0xA0, 0x03, 0x29, 0x1C
.byte 0x53, 0xF0, 0xBC, 0xF9, 0x0C, 0x4A, 0x00, 0x04, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30
.byte 0x81, 0x11, 0x80, 0x20, 0x40, 0x00, 0x40, 0x1A, 0x08, 0x49, 0x08, 0x40, 0x80, 0x00, 0x80, 0x18
.byte 0x01, 0x68, 0xBA, 0x1B, 0x80, 0x20, 0x00, 0x02, 0x40, 0x1A, 0x50, 0x43, 0xC2, 0x13, 0xB0, 0x18
_0800EB64:
pop {r4, r5, r6, r7}
pop {r1}
bx r1
.byte 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0xFF, 0x03, 0x00, 0x00
thumb_func_start sub_800EB74
sub_800EB74:
push {r4, r5, r6, r7, lr}
mov r7, r8
push {r7}
adds r4, r0, #0x0
mov r8, r1
ldr r2, _0800EBC4 @ =0x080D9CC8
ldrb r1, [r4, #0x00]
lsls r0, r1, #0x01
adds r0, r0, r1
ldrb r1, [r4, #0x01]
adds r0, r0, r1
lsls r0, r0, #0x02
adds r0, r0, r2
ldr r0, [r0, #0x00]
mov r12, r0
ldrb r0, [r4, #0x05]
lsls r0, r0, #0x03
add r0, r12
ldr r3, [r0, #0x00]
ldrh r1, [r4, #0x02]
movs r0, #0x80
lsls r0, r0, #0x01
ands r0, r1
lsls r0, r0, #0x10
asrs r0, r0, #0x10
cmp r0, #0x00
bne _0800EBF0
strb r0, [r4, #0x04]
ldr r0, _0800EBC8 @ =0xFFFFFCFF
ands r0, r1
lsls r0, r0, #0x10
asrs r0, r0, #0x10
cmp r0, #0x02
beq _0800EBD4
cmp r0, #0x02
bgt _0800EBCC
cmp r0, #0x00
blt _0800EBEA
b _0800EBD0
.byte 0x00, 0x00
_0800EBC4: .4byte 0x080D9CC8
_0800EBC8: .4byte 0xFFFFFCFF
_0800EBCC:
cmp r0, #0x03
bne _0800EBEA
_0800EBD0:
movs r0, #0x00
b _0800EBE8
_0800EBD4:
ldr r2, _0800EC1C @ =0x080D9C68
ldrb r1, [r4, #0x00]
lsls r0, r1, #0x01
adds r0, r0, r1
ldrb r1, [r4, #0x01]
adds r0, r0, r1
lsls r0, r0, #0x02
adds r0, r0, r2
ldr r0, [r0, #0x00]
subs r0, #0x02
_0800EBE8:
strb r0, [r4, #0x05]
_0800EBEA:
movs r0, #0x00
strb r0, [r4, #0x08]
strb r0, [r4, #0x09]
_0800EBF0:
ldrb r6, [r4, #0x05]
ldrb r0, [r4, #0x04]
adds r1, r0, #0x1
strb r1, [r4, #0x04]
lsls r0, r0, #0x18
lsrs r0, r0, #0x18
cmp r0, r3
ble _0800EC96
movs r0, #0x00
strb r0, [r4, #0x04]
ldrh r7, [r4, #0x02]
ldr r0, _0800EC20 @ =0xFFFFFCFF
ands r0, r7
lsls r0, r0, #0x10
asrs r5, r0, #0x10
cmp r5, #0x01
beq _0800EC50
cmp r5, #0x01
bgt _0800EC24
cmp r5, #0x00
beq _0800EC2A
b _0800EC96
_0800EC1C: .4byte 0x080D9C68
_0800EC20: .4byte 0xFFFFFCFF
_0800EC24:
cmp r5, #0x02
beq _0800EC80
b _0800EC96
_0800EC2A:
ldrb r0, [r4, #0x05]
adds r0, #0x01
strb r0, [r4, #0x05]
ldrb r3, [r4, #0x05]
ldr r2, _0800EC4C @ =0x080D9C68
ldrb r1, [r4, #0x00]
lsls r0, r1, #0x01
adds r0, r0, r1
ldrb r1, [r4, #0x01]
adds r0, r0, r1
lsls r0, r0, #0x02
adds r0, r0, r2
ldr r0, [r0, #0x00]
cmp r3, r0
blt _0800EC96
strb r5, [r4, #0x05]
b _0800EC96
_0800EC4C: .4byte 0x080D9C68
_0800EC50:
ldrb r3, [r4, #0x05]
ldr r2, _0800EC70 @ =0x080D9C68
ldrb r1, [r4, #0x00]
lsls r0, r1, #0x01
adds r0, r0, r1
ldrb r1, [r4, #0x01]
adds r0, r0, r1
lsls r0, r0, #0x02
adds r0, r0, r2
ldr r0, [r0, #0x00]
subs r0, #0x01
cmp r3, r0
bge _0800EC74
adds r0, r3, #0x1
b _0800EC94
.byte 0x00, 0x00
_0800EC70: .4byte 0x080D9C68
_0800EC74:
movs r2, #0x80
lsls r2, r2, #0x02
adds r0, r2, #0x0
orrs r0, r7
strh r0, [r4, #0x02]
b _0800EC96
_0800EC80:
ldrb r0, [r4, #0x05]
adds r1, r0, #0x0
cmp r1, #0x00
beq _0800EC8C
subs r0, #0x01
b _0800EC94
_0800EC8C:
strb r1, [r4, #0x01]
movs r0, #0x00
strh r1, [r4, #0x02]
strb r0, [r4, #0x04]
_0800EC94:
strb r0, [r4, #0x05]
_0800EC96:
ldrb r2, [r4, #0x05]
cmp r6, r2
bne _0800ECA8
ldrh r1, [r4, #0x02]
movs r0, #0x80
lsls r0, r0, #0x01
ands r0, r1
cmp r0, #0x00
bne _0800ECC8
_0800ECA8:
mov r0, r8
cmp r0, #0x00
beq _0800ECBC
lsls r0, r2, #0x03
add r0, r12
ldr r0, [r0, #0x04]
ldr r1, [r4, #0x10]
bl LZ77UnCompVram
b _0800ECC8
_0800ECBC:
lsls r0, r2, #0x03
add r0, r12
ldr r0, [r0, #0x04]
ldr r1, [r4, #0x10]
bl LZ77UnCompWram
_0800ECC8:
ldrb r6, [r4, #0x09]
movs r1, #0x06
ldsh r0, [r4, r1]
cmp r0, #0x02
beq _0800ECDC
cmp r0, #0x02
ble _0800ED0A
cmp r0, #0x03
beq _0800ECFC
b _0800ED0A
_0800ECDC:
ldr r0, _0800ECF4 @ =0x080D9D88
ldrb r1, [r4, #0x00]
lsls r1, r1, #0x02
adds r1, r1, r0
ldr r0, [r1, #0x00]
subs r0, #0x01
cmp r6, r0
bge _0800ECF8
adds r0, r6, #0x1
strb r0, [r4, #0x09]
b _0800ED0A
.byte 0x00, 0x00
_0800ECF4: .4byte 0x080D9D88
_0800ECF8:
movs r0, #0x03
b _0800ED08
_0800ECFC:
cmp r6, #0x00
beq _0800ED06
subs r0, r6, #0x1
strb r0, [r4, #0x09]
b _0800ED0A
_0800ED06:
movs r0, #0x02
_0800ED08:
strh r0, [r4, #0x06]
_0800ED0A:
ldrb r2, [r4, #0x09]
cmp r6, r2
bne _0800ED1C
ldrh r1, [r4, #0x02]
movs r0, #0x80
lsls r0, r0, #0x01
ands r0, r1
cmp r0, #0x00
bne _0800ED82
_0800ED1C:
movs r0, #0x06
ldsh r1, [r4, r0]
cmp r1, #0x00
blt _0800ED82
cmp r1, #0x01
bgt _0800ED4C
ldr r2, _0800ED48 @ =0x080D9D28
lsls r1, r1, #0x02
ldrb r0, [r4, #0x00]
lsls r0, r0, #0x03
adds r1, r1, r0
adds r1, r1, r2
ldr r0, [r1, #0x00]
ldr r1, [r4, #0x0C]
movs r2, #0x08
bl CpuFastSet
movs r0, #0x01
bl pltt_setDirtyFlag
b _0800ED82
.byte 0x00, 0x00
_0800ED48: .4byte 0x080D9D28
_0800ED4C:
cmp r1, #0x03
bgt _0800ED82
ldr r1, _0800ED98 @ =0x080D9D28
ldrb r0, [r4, #0x00]
lsls r0, r0, #0x03
adds r0, r0, r1
ldr r0, [r0, #0x00]
ldr r1, [r4, #0x0C]
movs r2, #0x0F
bl CpuSet
ldr r1, _0800ED9C @ =0x080D9D68
ldrb r0, [r4, #0x00]
lsls r0, r0, #0x02
adds r0, r0, r1
ldrb r1, [r4, #0x09]
lsls r1, r1, #0x01
ldr r0, [r0, #0x00]
adds r0, r0, r1
ldr r1, [r4, #0x0C]
adds r1, #0x1E
movs r2, #0x01
bl CpuSet
movs r0, #0x01
bl pltt_setDirtyFlag
_0800ED82:
ldrh r1, [r4, #0x02]
movs r2, #0x80
lsls r2, r2, #0x01
adds r0, r2, #0x0
orrs r0, r1
strh r0, [r4, #0x02]
pop {r3}
mov r8, r3
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_0800ED98: .4byte 0x080D9D28
_0800ED9C: .4byte 0x080D9D68
thumb_func_start spm_menuCharIdxToCharId
spm_menuCharIdxToCharId:
ldr r1, _0800EDAC @ =0x080D9790
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r0, [r0, #0x00]
bx lr
.byte 0x00, 0x00
_0800EDAC: .4byte 0x080D9790
thumb_func_start sub_800EDB0
sub_800EDB0:
ldr r2, _0800EDC0 @ =0x080D97B0
movs r1, #0x07
ands r1, r0
lsls r1, r1, #0x02
adds r1, r1, r2
ldr r0, [r1, #0x00]
bx lr
.byte 0x00, 0x00
_0800EDC0: .4byte 0x080D97B0
thumb_func_start sub_800EDC4
sub_800EDC4:
ldr r3, _0800EDD8 @ =0x03000048
movs r1, #0x00
movs r2, #0x00
_0800EDCA:
adds r0, r3, r1
strb r2, [r0, #0x00]
adds r1, #0x01
cmp r1, #0xB3
bls _0800EDCA
bx lr
.byte 0x00, 0x00
_0800EDD8: .4byte 0x03000048
thumb_func_start sub_800EDDC
sub_800EDDC:
ldr r0, _0800EDE0 @ =0x03000048
bx lr
_0800EDE0: .4byte 0x03000048
thumb_func_start sub_800EDE4
sub_800EDE4:
ldr r0, _0800EDE8 @ =0x03000048
bx lr
_0800EDE8: .4byte 0x03000048
thumb_func_start sub_800EDEC
sub_800EDEC:
ldr r0, _0800EDF0 @ =0x03000048
bx lr
_0800EDF0: .4byte 0x03000048
thumb_func_start sub_800EDF4
sub_800EDF4:
ldr r0, _0800EDF8 @ =0x03000048
bx lr
_0800EDF8: .4byte 0x03000048
thumb_func_start sub_800EDFC
sub_800EDFC:
push {r4, r5, r6, r7, lr}
add sp, #-0x00C
adds r7, r0, #0x0
movs r5, #0x00
movs r1, #0xA9
lsls r1, r1, #0x02
adds r0, r7, r1
ldr r0, [r0, #0x00]
cmp r5, r0
bge _0800EE26
adds r6, r7, r1
adds r4, r7, #0x0
adds r4, #0x4C
_0800EE16:
adds r0, r4, #0x0
bl sub_8003BB8
adds r4, #0x18
adds r5, #0x01
ldr r0, [r6, #0x00]
cmp r5, r0
blt _0800EE16
_0800EE26:
movs r5, #0x00
movs r3, #0xA9
lsls r3, r3, #0x02
adds r1, r7, r3
ldr r0, [r1, #0x00]
cmp r5, r0
bge _0800EE72
adds r6, r1, #0x0
_0800EE36:
adds r4, r5, #0x1
ldr r0, [r6, #0x00]
subs r0, r0, r4
lsls r1, r0, #0x01
adds r1, r1, r0
lsls r1, r1, #0x03
adds r1, #0x4C
adds r1, r7, r1
ldrh r2, [r1, #0x06]
lsls r2, r2, #0x10
ldrh r0, [r1, #0x04]
orrs r0, r2
str r0, [sp, #0x008]
ldr r0, [r1, #0x00]
movs r5, #0x08
ldsh r2, [r1, r5]
movs r5, #0x0A
ldsh r3, [r1, r5]
movs r5, #0x0C
ldsh r1, [r1, r5]
str r1, [sp, #0x000]
movs r1, #0x00
str r1, [sp, #0x004]
add r1, sp, #0x008
bl oam_renderCellData
adds r5, r4, #0x0
ldr r0, [r6, #0x00]
cmp r5, r0
blt _0800EE36
_0800EE72:
add sp, #0x00C
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
thumb_func_start sub_800EE7C
sub_800EE7C:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x01C
mov r8, r0
movs r7, #0x00
ldr r0, _0800EF00 @ =0x000004AC
add r0, r8
ldr r0, [r0, #0x00]
cmp r0, #0x00
beq _0800EE98
b _0800F12A
_0800EE98:
ldr r0, _0800EF04 @ =0x03000154
mov r2, r8
adds r2, #0x2C
movs r6, #0x03
_0800EEA0:
ldr r1, [r2, #0x00]
cmp r1, #0x01
beq _0800EEAA
cmp r1, #0x06
bne _0800EEAC
_0800EEAA:
adds r7, #0x01
_0800EEAC:
adds r2, #0x04
subs r6, #0x01
cmp r6, #0x00
bge _0800EEA0
ldr r0, [r0, #0x00]
cmp r0, #0xB4
bgt _0800EEBC
movs r7, #0x00
_0800EEBC:
ldr r1, _0800EF08 @ =0x000004A4
add r1, r8
ldr r0, [r1, #0x00]
cmp r0, r7
beq _0800EF36
movs r2, #0xFD
lsls r2, r2, #0x02
add r2, r8
str r7, [r1, #0x00]
ldrh r1, [r2, #0x04]
movs r0, #0x95
lsls r0, r0, #0x03
add r0, r8
movs r3, #0x00
strh r1, [r0, #0x00]
ldrh r1, [r2, #0x06]
ldr r0, _0800EF0C @ =0x000004AA
add r0, r8
strh r1, [r0, #0x00]
strh r3, [r2, #0x10]
cmp r7, #0x01
bgt _0800EF14
str r3, [sp, #0x008]
movs r0, #0x00
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
ldr r2, _0800EF10 @ =0x01000080
add r0, sp, #0x008
bl CpuFastSet
b _0800EF30
_0800EF00: .4byte 0x000004AC
_0800EF04: .4byte 0x03000154
_0800EF08: .4byte 0x000004A4
_0800EF0C: .4byte 0x000004AA
_0800EF10: .4byte 0x01000080
_0800EF14:
ldr r1, _0800EFE0 @ =0x080D9E44
subs r0, r7, #0x2
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r4, [r0, #0x00]
movs r0, #0x00
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
_0800EF30:
movs r0, #0x01
bl map_setBufferDirty
_0800EF36:
cmp r7, #0x01
bgt _0800EFF0
movs r7, #0xFD
lsls r7, r7, #0x02
add r7, r8
ldrh r0, [r7, #0x10]
adds r0, #0x01
strh r0, [r7, #0x10]
lsls r0, r0, #0x10
asrs r0, r0, #0x10
cmp r0, #0x10
bgt _0800EF84
movs r1, #0x10
ldsh r0, [r7, r1]
ldr r1, _0800EFE4 @ =0x080E645C
lsls r0, r0, #0x1A
asrs r0, r0, #0x10
cmp r0, #0x00
bge _0800EF5E
adds r0, #0x3F
_0800EF5E:
lsls r0, r0, #0x10
lsrs r0, r0, #0x16
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r3, [r0, #0x00]
movs r2, #0x95
lsls r2, r2, #0x03
add r2, r8
movs r5, #0x00
ldsh r1, [r2, r5]
movs r0, #0x78
subs r0, r0, r1
muls r0, r3
asrs r0, r0, #0x0F
ldrh r2, [r2, #0x00]
adds r0, r0, r2
strh r0, [r7, #0x04]
movs r0, #0x45
strh r0, [r7, #0x06]
_0800EF84:
movs r6, #0x80
lsls r6, r6, #0x01
movs r5, #0xFB
lsls r5, r5, #0x02
add r5, r8
ldr r2, [r5, #0x00]
movs r4, #0x0B
str r4, [sp, #0x000]
movs r0, #0x80
adds r1, r6, #0x0
movs r3, #0x10
bl sub_800E930
mov r9, r0
ldr r0, _0800EFE8 @ =0x00000484
add r0, r8
movs r2, #0x04
ldsh r1, [r7, r2]
movs r3, #0x06
ldsh r2, [r7, r3]
mov r3, r9
bl sub_801404C
ldr r2, [r5, #0x00]
str r4, [sp, #0x000]
movs r0, #0x80
adds r1, r6, #0x0
movs r3, #0x10
bl sub_800E930
adds r3, r0, #0x0
ldrh r1, [r7, #0x06]
lsls r1, r1, #0x10
ldrh r0, [r7, #0x04]
orrs r0, r1
str r0, [sp, #0x00C]
ldr r0, _0800EFEC @ =0x080CA6E8
add r1, sp, #0x00C
movs r2, #0x00
str r2, [sp, #0x000]
str r2, [sp, #0x004]
adds r2, r3, #0x0
bl oam_renderCellData
b _0800F12A
.byte 0x00, 0x00
_0800EFE0: .4byte 0x080D9E44
_0800EFE4: .4byte 0x080E645C
_0800EFE8: .4byte 0x00000484
_0800EFEC: .4byte 0x080CA6E8
_0800EFF0:
movs r6, #0x00
cmp r6, r7
blt _0800EFF8
b _0800F12A
_0800EFF8:
ldr r5, _0800F064 @ =0xFFFF0000
mov r10, r5
ldr r0, _0800F068 @ =0x0000FFFF
mov r9, r0
movs r4, #0xFE
lsls r4, r4, #0x02
add r4, r8
_0800F006:
ldr r0, _0800F06C @ =0x080D9E10
subs r1, r7, #0x2
adds r1, r1, r0
lsls r0, r6, #0x04
subs r0, r0, r6
lsls r0, r0, #0x02
ldrb r1, [r1, #0x00]
adds r3, r0, r1
movs r0, #0x0A
ldsb r0, [r4, r0]
cmp r0, #0x00
beq _0800F07A
cmp r6, #0x00
bne _0800F074
ldrh r0, [r4, #0x0C]
adds r0, #0x01
strh r0, [r4, #0x0C]
lsls r0, r0, #0x10
asrs r0, r0, #0x10
cmp r0, #0x10
bgt _0800F07A
movs r1, #0x0C
ldsh r0, [r4, r1]
ldr r1, _0800F070 @ =0x080E645C
lsls r0, r0, #0x1A
asrs r0, r0, #0x10
cmp r0, #0x00
bge _0800F040
adds r0, #0x3F
_0800F040:
lsls r0, r0, #0x10
lsrs r0, r0, #0x16
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r2, [r0, #0x00]
movs r1, #0x95
lsls r1, r1, #0x03
add r1, r8
movs r5, #0x00
ldsh r0, [r1, r5]
subs r0, r3, r0
muls r0, r2
asrs r0, r0, #0x0F
ldrh r1, [r1, #0x00]
adds r0, r0, r1
strh r0, [r4, #0x00]
b _0800F076
.byte 0x00, 0x00
_0800F064: .4byte 0xFFFF0000
_0800F068: .4byte 0x0000FFFF
_0800F06C: .4byte 0x080D9E10
_0800F070: .4byte 0x080E645C
_0800F074:
strh r3, [r4, #0x00]
_0800F076:
movs r0, #0x45
strh r0, [r4, #0x02]
_0800F07A:
cmp r6, #0x00
bne _0800F0A8
ldrh r1, [r4, #0x00]
ldr r0, [sp, #0x010]
mov r2, r10
ands r0, r2
orrs r0, r1
ldrh r1, [r4, #0x02]
adds r1, #0x10
lsls r1, r1, #0x10
mov r3, r9
ands r0, r3
orrs r0, r1
str r0, [sp, #0x010]
ldr r0, _0800F104 @ =0x080D9E14
ldr r0, [r0, #0x00]
str r6, [sp, #0x000]
str r6, [sp, #0x004]
add r1, sp, #0x010
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
_0800F0A8:
ldrh r0, [r4, #0x00]
subs r0, #0x01
lsls r0, r0, #0x10
lsrs r0, r0, #0x10
ldr r1, [sp, #0x014]
mov r5, r10
ands r1, r5
orrs r1, r0
ldrh r0, [r4, #0x02]
adds r0, #0x01
lsls r0, r0, #0x10
mov r2, r9
ands r1, r2
orrs r1, r0
str r1, [sp, #0x014]
movs r5, #0x00
str r5, [sp, #0x000]
str r5, [sp, #0x004]
ldr r0, _0800F108 @ =0x080D9E3C
add r1, sp, #0x014
movs r2, #0xAA
movs r3, #0xCC
bl oam_renderCellData
ldrh r1, [r4, #0x00]
ldr r0, [sp, #0x018]
mov r3, r10
ands r0, r3
orrs r0, r1
ldrh r1, [r4, #0x02]
lsls r1, r1, #0x10
mov r2, r9
ands r0, r2
orrs r0, r1
str r0, [sp, #0x018]
cmp r6, #0x00
bne _0800F110
str r6, [sp, #0x000]
str r6, [sp, #0x004]
ldr r0, _0800F10C @ =0x080D9E2C
add r1, sp, #0x018
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
b _0800F120
_0800F104: .4byte 0x080D9E14
_0800F108: .4byte 0x080D9E3C
_0800F10C: .4byte 0x080D9E2C
_0800F110:
str r5, [sp, #0x000]
str r5, [sp, #0x004]
ldr r0, _0800F13C @ =0x080D9E34
add r1, sp, #0x018
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
_0800F120:
adds r4, #0x18
adds r6, #0x01
cmp r6, r7
bge _0800F12A
b _0800F006
_0800F12A:
add sp, #0x01C
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_0800F13C: .4byte 0x080D9E34
thumb_func_start sub_800F140
sub_800F140:
push {lr}
add sp, #-0x00C
ldr r1, _0800F15C @ =0x00000454
adds r3, r0, r1
movs r0, #0x0E
ldsb r0, [r3, r0]
cmp r0, #0x07
bls _0800F152
b _0800F2A4
_0800F152:
lsls r0, r0, #0x02
ldr r1, _0800F160 @ =0x0800F164
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
_0800F15C: .4byte 0x00000454
_0800F160: .4byte 0x0800F164
.byte 0xA4, 0xF2, 0x00, 0x08, 0x84, 0xF1, 0x00, 0x08, 0x8C, 0xF1, 0x00, 0x08, 0xCA, 0xF1, 0x00, 0x08
.byte 0xEA, 0xF1, 0x00, 0x08, 0xF6, 0xF1, 0x00, 0x08, 0x40, 0xF2, 0x00, 0x08, 0x52, 0xF2, 0x00, 0x08
.byte 0x00, 0x20, 0x18, 0x82, 0x02, 0x20, 0x5C, 0xE0, 0x18, 0x8A, 0x01, 0x30, 0x18, 0x82, 0x00, 0x04
.byte 0x00, 0x14, 0x10, 0x28, 0x12, 0xDC, 0x10, 0x22, 0x98, 0x5E, 0x07, 0x49, 0x80, 0x06, 0x00, 0x14
.byte 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x02, 0x68
.byte 0x04, 0x20, 0x19, 0x5E, 0xF0, 0x20, 0x34, 0xE0, 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x20, 0x18, 0x82
.byte 0x03, 0x20, 0x98, 0x73, 0x6C, 0xE0, 0x18, 0x8A, 0x01, 0x30, 0x00, 0x21, 0x18, 0x82, 0x00, 0x04
.byte 0x00, 0x14, 0x1E, 0x28, 0x00, 0xDD, 0x19, 0x82, 0x10, 0x22, 0x98, 0x5E, 0x09, 0x28, 0x31, 0xDC
.byte 0x59, 0x81, 0x19, 0x81, 0x5C, 0xE0, 0x00, 0x20, 0x18, 0x82, 0x05, 0x20, 0x98, 0x73, 0xFB, 0x30
.byte 0x2A, 0xE0, 0x18, 0x8A, 0x01, 0x30, 0x18, 0x82, 0x00, 0x04, 0x00, 0x14, 0x10, 0x28, 0x19, 0xDC
.byte 0x10, 0x21, 0x58, 0x5E, 0x0A, 0x49, 0x80, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30
.byte 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x02, 0x68, 0x04, 0x20, 0x19, 0x5E, 0x94, 0x20
.byte 0x40, 0x00, 0x40, 0x1A, 0x50, 0x43, 0xC0, 0x13, 0x99, 0x88, 0x40, 0x18, 0x98, 0x80, 0x37, 0xE0
.byte 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x20, 0x18, 0x82, 0x98, 0x73, 0x31, 0xE0, 0x00, 0x20, 0x18, 0x82
.byte 0x07, 0x20, 0x98, 0x73, 0x80, 0x20, 0x40, 0x00, 0x58, 0x81, 0x18, 0x81, 0x28, 0xE0, 0x18, 0x8A
.byte 0x01, 0x30, 0x00, 0x21, 0x18, 0x82, 0x00, 0x04, 0x00, 0x14, 0x10, 0x28, 0x14, 0xDC, 0x10, 0x22
.byte 0x98, 0x5E, 0x08, 0x49, 0x80, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04
.byte 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0x00, 0x02, 0x40, 0x42, 0xC0, 0x13, 0xF0, 0x30
.byte 0x98, 0x80, 0x0D, 0xE0, 0x5C, 0x64, 0x0E, 0x08, 0x94, 0x20, 0x40, 0x00, 0x98, 0x80, 0x90, 0x20
.byte 0xD8, 0x80, 0x70, 0x30, 0x58, 0x81, 0x18, 0x81, 0x99, 0x81, 0x00, 0x20, 0x98, 0x73, 0x19, 0x82
_0800F2A4:
movs r1, #0x08
ldsh r0, [r3, r1]
cmp r0, #0x00
beq _0800F2D0
movs r2, #0x0A
ldsh r0, [r3, r2]
cmp r0, #0x00
beq _0800F2D0
ldrh r1, [r3, #0x06]
lsls r1, r1, #0x10
ldrh r0, [r3, #0x04]
orrs r0, r1
str r0, [sp, #0x008]
ldr r0, [r3, #0x00]
movs r1, #0x00
str r1, [sp, #0x000]
str r1, [sp, #0x004]
add r1, sp, #0x008
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
_0800F2D0:
add sp, #0x00C
pop {r0}
bx r0
.byte 0x00, 0x00
thumb_func_start sub_800F2D8
sub_800F2D8:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x00C
str r0, [sp, #0x000]
adds r7, r1, #0x0
adds r5, r2, #0x0
adds r4, r3, #0x0
ldr r0, [sp, #0x02C]
ldr r1, [sp, #0x030]
lsls r0, r0, #0x0F
bl __divsi3
ldr r2, _0800F3C0 @ =0x080E645C
lsls r0, r0, #0x10
asrs r0, r0, #0x10
cmp r0, #0x00
bge _0800F302
adds r0, #0x3F
_0800F302:
asrs r1, r0, #0x06
movs r0, #0x80
lsls r0, r0, #0x01
subs r0, r0, r1
ldr r1, _0800F3C4 @ =0x000003FF
ands r0, r1
lsls r0, r0, #0x02
adds r0, r0, r2
ldr r1, [r0, #0x00]
movs r0, #0x80
lsls r0, r0, #0x08
subs r0, r0, r1
lsrs r1, r0, #0x1F
adds r0, r0, r1
asrs r0, r0, #0x01
str r0, [sp, #0x004]
cmp r4, #0x00
ble _0800F3B0
movs r0, #0x1F
mov r10, r0
movs r6, #0x1F
mov r9, r5
mov r8, r7
ldr r5, [sp, #0x000]
str r5, [sp, #0x008]
mov r12, r4
_0800F336:
ldr r7, [sp, #0x008]
ldrh r1, [r7, #0x00]
adds r3, r6, #0x0
ands r3, r1
lsls r1, r1, #0x10
lsrs r4, r1, #0x15
mov r0, r10
ands r4, r0
lsrs r1, r1, #0x1A
ands r1, r0
mov r5, r8
ldrh r2, [r5, #0x00]
adds r0, r6, #0x0
ands r0, r2
lsls r2, r2, #0x10
lsrs r5, r2, #0x15
mov r7, r10
ands r5, r7
lsrs r2, r2, #0x1A
ands r2, r7
subs r0, r0, r3
ldr r7, [sp, #0x004]
muls r0, r7
asrs r0, r0, #0x0F
adds r3, r3, r0
lsls r3, r3, #0x10
lsrs r3, r3, #0x10
subs r0, r5, r4
muls r0, r7
asrs r0, r0, #0x0F
adds r4, r4, r0
lsls r4, r4, #0x10
lsrs r4, r4, #0x10
subs r2, r2, r1
adds r0, r2, #0x0
muls r0, r7
asrs r0, r0, #0x0F
adds r1, r1, r0
lsls r1, r1, #0x10
lsrs r1, r1, #0x10
ands r3, r6
ands r4, r6
lsls r4, r4, #0x05
orrs r3, r4
ands r1, r6
lsls r1, r1, #0x0A
orrs r3, r1
mov r0, r9
strh r3, [r0, #0x00]
movs r5, #0x02
add r9, r5
add r8, r5
ldr r7, [sp, #0x008]
adds r7, #0x02
str r7, [sp, #0x008]
movs r0, #0x01
negs r0, r0
add r12, r0
mov r5, r12
cmp r5, #0x00
bne _0800F336
_0800F3B0:
add sp, #0x00C
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_0800F3C0: .4byte 0x080E645C
_0800F3C4: .4byte 0x000003FF
thumb_func_start sub_800F3C8
sub_800F3C8:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x00C
adds r7, r0, #0x0
movs r0, #0x01
mov r10, r0
movs r0, #0xB1
lsls r0, r0, #0x01
mov r9, r0
ldr r0, _0800F414 @ =0x080C3D6A
str r0, [sp, #0x008]
movs r0, #0x00
mov r8, r0
_0800F3E8:
mov r0, r10
lsls r1, r0, #0x02
adds r0, r7, #0x0
adds r0, #0x2C
adds r0, r0, r1
ldr r0, [r0, #0x00]
cmp r0, #0x06
bne _0800F44C
adds r0, r7, #0x0
adds r0, #0x3C
adds r0, r0, r1
ldr r2, [r0, #0x00]
adds r1, r2, #0x1
str r1, [r0, #0x00]
cmp r1, #0x10
bgt _0800F41C
adds r5, r1, #0x0
ldr r6, _0800F414 @ =0x080C3D6A
add r6, r8
ldr r4, _0800F418 @ =0x080C3D7E
b _0800F426
.byte 0x00, 0x00
_0800F414: .4byte 0x080C3D6A
_0800F418: .4byte 0x080C3D7E
_0800F41C:
adds r5, r2, #0x0
subs r5, #0x0F
ldr r6, _0800F444 @ =0x080C3D7E
add r6, r8
ldr r4, _0800F448 @ =0x080C3D74
_0800F426:
add r4, r8
movs r0, #0x00
bl pltt_getBuffer
adds r2, r0, #0x0
add r2, r9
str r5, [sp, #0x000]
movs r0, #0x10
str r0, [sp, #0x004]
adds r0, r6, #0x0
adds r1, r4, #0x0
movs r3, #0x05
bl sub_800F2D8
b _0800F468
_0800F444: .4byte 0x080C3D7E
_0800F448: .4byte 0x080C3D74
_0800F44C:
adds r0, r7, #0x0
adds r0, #0x3C
adds r0, r0, r1
movs r1, #0x00
str r1, [r0, #0x00]
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
add r1, r9
ldr r0, [sp, #0x008]
movs r2, #0x05
bl CpuSet
_0800F468:
movs r0, #0x20
add r9, r0
ldr r0, [sp, #0x008]
adds r0, #0x20
str r0, [sp, #0x008]
movs r0, #0x20
add r8, r0
movs r0, #0x01
add r10, r0
mov r0, r10
cmp r0, #0x03
ble _0800F3E8
ldr r0, [r7, #0x30]
cmp r0, #0x06
bne _0800F4C8
ldr r0, [r7, #0x40]
cmp r0, #0x10
bgt _0800F49C
adds r4, r0, #0x0
ldr r6, _0800F494 @ =0x080C3DC8
ldr r5, _0800F498 @ =0x080C3DE8
b _0800F4A4
_0800F494: .4byte 0x080C3DC8
_0800F498: .4byte 0x080C3DE8
_0800F49C:
adds r4, r0, #0x0
subs r4, #0x10
ldr r6, _0800F4C0 @ =0x080C3DE8
ldr r5, _0800F4C4 @ =0x080C3DC8
_0800F4A4:
movs r0, #0x01
bl pltt_getBuffer
adds r2, r0, #0x0
adds r2, #0xC0
str r4, [sp, #0x000]
movs r0, #0x10
str r0, [sp, #0x004]
adds r0, r6, #0x0
adds r1, r5, #0x0
movs r3, #0x10
bl sub_800F2D8
b _0800F4DC
_0800F4C0: .4byte 0x080C3DE8
_0800F4C4: .4byte 0x080C3DC8
_0800F4C8:
ldr r4, _0800F4F4 @ =0x080C3DC8
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0xC0
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
_0800F4DC:
movs r0, #0x01
bl pltt_setDirtyFlag
add sp, #0x00C
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_0800F4F4: .4byte 0x080C3DC8
thumb_func_start sub_800F4F8
sub_800F4F8:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
adds r4, r0, #0x0
movs r5, #0x00
movs r1, #0xFA
lsls r1, r1, #0x02
adds r0, r4, r1
ldr r0, [r0, #0x00]
cmp r5, r0
bge _0800F606
movs r7, #0x01
movs r3, #0xFB
lsls r3, r3, #0x02
mov r9, r3
movs r0, #0x80
lsls r0, r0, #0x01
mov r8, r0
adds r1, r4, #0x0
add r1, r9
mov r10, r1
movs r6, #0x00
mov r12, r6
_0800F52A:
movs r0, #0xAA
lsls r0, r0, #0x02
add r0, r12
adds r2, r4, r0
ldr r0, [r2, #0x20]
cmp r0, #0x01
beq _0800F570
cmp r0, #0x01
bgt _0800F542
cmp r0, #0x00
beq _0800F54C
b _0800F5F2
_0800F542:
cmp r0, #0x02
beq _0800F580
cmp r0, #0x03
beq _0800F5C0
b _0800F5F2
_0800F54C:
ldr r0, _0800F56C @ =0x0000FFF0
strh r0, [r2, #0x00]
movs r0, #0x58
strh r0, [r2, #0x02]
movs r0, #0x60
str r0, [r2, #0x04]
subs r0, #0x61
str r0, [r2, #0x08]
str r7, [r2, #0x14]
str r5, [r2, #0x18]
str r7, [r2, #0x20]
str r6, [r2, #0x1C]
movs r0, #0x03
str r0, [r2, #0x24]
b _0800F5F2
.byte 0x00, 0x00
_0800F56C: .4byte 0x0000FFF0
_0800F570:
ldr r0, [r2, #0x1C]
subs r0, #0x01
str r0, [r2, #0x1C]
cmp r0, #0x00
bge _0800F5F2
movs r0, #0x00
str r0, [r2, #0x1C]
b _0800F5EE
_0800F580:
mov r3, r9
adds r1, r4, r3
ldr r0, [r1, #0x00]
movs r3, #0x01
ands r0, r3
cmp r0, #0x00
beq _0800F5A2
ldrh r0, [r2, #0x00]
adds r0, #0x01
strh r0, [r2, #0x00]
ldr r0, [r1, #0x00]
ands r0, r3
cmp r0, #0x00
beq _0800F5A2
ldrh r0, [r2, #0x02]
adds r0, #0x01
b _0800F5A6
_0800F5A2:
ldrh r0, [r2, #0x02]
subs r0, #0x01
_0800F5A6:
strh r0, [r2, #0x02]
ldrh r1, [r2, #0x00]
movs r3, #0x00
ldsh r0, [r2, r3]
cmp r0, r8
ble _0800F5F2
ldr r3, _0800F5BC @ =0xFFFFFEF0
adds r0, r1, r3
strh r0, [r2, #0x00]
movs r0, #0x03
b _0800F5F0
_0800F5BC: .4byte 0xFFFFFEF0
_0800F5C0:
mov r1, r10
ldr r0, [r1, #0x00]
ands r0, r7
cmp r0, #0x00
beq _0800F5D0
ldrh r0, [r2, #0x00]
adds r0, #0x01
strh r0, [r2, #0x00]
_0800F5D0:
ldr r0, [r2, #0x04]
adds r0, #0x02
movs r1, #0x7F
ands r0, r1
str r0, [r2, #0x04]
ldrh r1, [r2, #0x00]
movs r3, #0x00
ldsh r0, [r2, r3]
cmp r0, r8
ble _0800F5F2
ldr r3, _0800F614 @ =0xFFFFFEF0
adds r0, r1, r3
strh r0, [r2, #0x00]
movs r0, #0x60
str r0, [r2, #0x04]
_0800F5EE:
movs r0, #0x02
_0800F5F0:
str r0, [r2, #0x20]
_0800F5F2:
adds r6, #0x42
movs r0, #0x28
add r12, r0
adds r5, #0x01
movs r1, #0xFA
lsls r1, r1, #0x02
adds r0, r4, r1
ldr r0, [r0, #0x00]
cmp r5, r0
blt _0800F52A
_0800F606:
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_0800F614: .4byte 0xFFFFFEF0
thumb_func_start sub_800F618
sub_800F618:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x00C
mov r9, r0
bl sub_800F4F8
movs r0, #0x00
mov r8, r0
b _0800F756
_0800F630:
mov r1, r8
lsls r0, r1, #0x02
adds r1, r0, r1
lsls r1, r1, #0x03
movs r2, #0xAA
lsls r2, r2, #0x02
adds r1, r1, r2
mov r3, r9
adds r4, r3, r1
ldr r1, [r4, #0x08]
ldr r2, [r4, #0x04]
mov r10, r0
cmp r1, r2
beq _0800F6CA
ldr r1, _0800F658 @ =0x080D9E50
cmp r2, #0x3F
ble _0800F65C
movs r0, #0x7F
subs r0, r0, r2
b _0800F65E
_0800F658: .4byte 0x080D9E50
_0800F65C:
adds r0, r2, #0x0
_0800F65E:
adds r0, r1, r0
ldrb r3, [r0, #0x00]
ldr r0, _0800F690 @ =0x02037878
ldr r2, [r0, #0x00]
subs r0, #0x04
ldr r1, [r0, #0x00]
ldr r0, [r4, #0x14]
cmp r0, #0x01
bne _0800F698
ldr r0, [r4, #0x18]
muls r1, r0
adds r1, r2, r1
lsls r0, r3, #0x09
movs r2, #0x88
lsls r2, r2, #0x09
adds r0, r0, r2
adds r7, r1, r0
mov r3, r8
lsls r0, r3, #0x0A
ldr r1, _0800F694 @ =0x06014000
adds r6, r0, r1
movs r5, #0x80
lsls r5, r5, #0x02
b _0800F6B2
.byte 0x00, 0x00
_0800F690: .4byte 0x02037878
_0800F694: .4byte 0x06014000
_0800F698:
ldr r0, [r4, #0x18]
muls r1, r0
adds r1, r2, r1
lsls r0, r3, #0x07
movs r2, #0xA4
lsls r2, r2, #0x09
adds r0, r0, r2
adds r7, r1, r0
mov r3, r8
lsls r0, r3, #0x0A
ldr r1, _0800F708 @ =0x06014000
adds r6, r0, r1
movs r5, #0x80
_0800F6B2:
bl dmaq_getVBlankDmaQueue
lsrs r3, r5, #0x01
movs r1, #0x80
lsls r1, r1, #0x18
orrs r3, r1
adds r1, r7, #0x0
adds r2, r6, #0x0
bl dmaq_enqueue
ldr r0, [r4, #0x04]
str r0, [r4, #0x08]
_0800F6CA:
ldr r0, [r4, #0x14]
ldr r0, _0800F70C @ =0x080D9ED0
add r0, r10
ldr r0, [r0, #0x00]
adds r5, r4, #0x0
adds r5, #0x0C
ldr r6, [sp, #0x008]
mov r7, r8
adds r7, #0x01
adds r2, r0, #0x0
adds r1, r5, #0x0
movs r3, #0x03
_0800F6E2:
ldrh r0, [r2, #0x00]
strh r0, [r1, #0x00]
adds r2, #0x02
adds r1, #0x02
subs r3, #0x01
cmp r3, #0x00
bge _0800F6E2
ldr r0, [r4, #0x04]
movs r1, #0x40
ands r0, r1
cmp r0, #0x00
beq _0800F710
ldrh r1, [r4, #0x10]
movs r2, #0x80
lsls r2, r2, #0x05
adds r0, r2, #0x0
orrs r0, r1
b _0800F718
.byte 0x00, 0x00
_0800F708: .4byte 0x06014000
_0800F70C: .4byte 0x080D9ED0
_0800F710:
ldrh r0, [r4, #0x10]
ldr r3, _0800F774 @ =0x0000EFFF
adds r1, r3, #0x0
ands r0, r1
_0800F718:
strh r0, [r4, #0x10]
ldrh r1, [r4, #0x12]
ldr r2, _0800F778 @ =0x0000F3FF
adds r0, r2, #0x0
ands r1, r0
ldr r0, [r4, #0x24]
lsls r0, r0, #0x0A
orrs r1, r0
strh r1, [r4, #0x12]
ldrh r0, [r4, #0x00]
mov r3, r9
ldrh r1, [r3, #0x04]
subs r0, r0, r1
lsls r0, r0, #0x10
ldrh r2, [r4, #0x02]
ldrh r1, [r3, #0x06]
subs r2, r2, r1
lsls r2, r2, #0x10
lsrs r0, r0, #0x10
orrs r0, r2
str r0, [sp, #0x008]
movs r0, #0x00
str r0, [sp, #0x000]
str r0, [sp, #0x004]
adds r0, r5, #0x0
add r1, sp, #0x008
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
mov r8, r7
_0800F756:
movs r0, #0xFA
lsls r0, r0, #0x02
add r0, r9
ldr r0, [r0, #0x00]
cmp r8, r0
bge _0800F764
b _0800F630
_0800F764:
add sp, #0x00C
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_0800F774: .4byte 0x0000EFFF
_0800F778: .4byte 0x0000F3FF
thumb_func_start sub_800F77C
sub_800F77C:
ldr r0, _0800F824 @ =0x03000100
ldr r1, [r0, #0x00]
movs r0, #0xFC
lsls r0, r0, #0x02
adds r2, r1, r0
ldr r0, [r2, #0x00]
adds r0, #0x01
str r0, [r2, #0x00]
asrs r0, r0, #0x02
ldrh r3, [r1, #0x10]
strh r0, [r1, #0x10]
ldr r0, [r2, #0x00]
negs r0, r0
asrs r0, r0, #0x02
ldrh r2, [r1, #0x12]
strh r0, [r1, #0x12]
movs r2, #0x80
lsls r2, r2, #0x13
ldrh r0, [r1, #0x00]
strh r0, [r2, #0x00]
adds r2, #0x08
ldrh r0, [r1, #0x02]
strh r0, [r2, #0x00]
adds r2, #0x08
ldrh r0, [r1, #0x04]
strh r0, [r2, #0x00]
adds r2, #0x02
ldrh r0, [r1, #0x06]
strh r0, [r2, #0x00]
subs r2, #0x08
ldrh r0, [r1, #0x08]
strh r0, [r2, #0x00]
adds r2, #0x0A
ldrh r0, [r1, #0x0A]
strh r0, [r2, #0x00]
adds r2, #0x02
ldrh r0, [r1, #0x0C]
strh r0, [r2, #0x00]
subs r2, #0x0A
ldrh r0, [r1, #0x0E]
strh r0, [r2, #0x00]
adds r2, #0x0C
ldrh r0, [r1, #0x10]
strh r0, [r2, #0x00]
adds r2, #0x02
ldrh r0, [r1, #0x12]
strh r0, [r2, #0x00]
subs r2, #0x0C
ldrh r0, [r1, #0x14]
strh r0, [r2, #0x00]
adds r2, #0x0E
ldrh r0, [r1, #0x16]
strh r0, [r2, #0x00]
adds r2, #0x02
ldrh r0, [r1, #0x18]
strh r0, [r2, #0x00]
adds r2, #0x32
ldrh r0, [r1, #0x1A]
strh r0, [r2, #0x00]
adds r2, #0x02
ldrh r0, [r1, #0x1C]
strh r0, [r2, #0x00]
adds r2, #0x02
ldrh r0, [r1, #0x1E]
strh r0, [r2, #0x00]
subs r2, #0x14
ldrh r0, [r1, #0x20]
strh r0, [r2, #0x00]
adds r2, #0x04
ldrh r0, [r1, #0x22]
strh r0, [r2, #0x00]
subs r2, #0x02
ldrh r0, [r1, #0x24]
strh r0, [r2, #0x00]
adds r2, #0x04
ldrh r0, [r1, #0x26]
strh r0, [r2, #0x00]
adds r2, #0x02
ldrh r0, [r1, #0x28]
strh r0, [r2, #0x00]
adds r2, #0x02
ldrh r0, [r1, #0x2A]
strh r0, [r2, #0x00]
bx lr
_0800F824: .4byte 0x03000100
thumb_func_start sub_800F828
sub_800F828:
push {r4, r5, r6, lr}
add sp, #-0x004
ldr r0, _0800FA24 @ =0x020378D0
ldr r4, [r0, #0x00]
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
ldr r0, _0800FA28 @ =0x020378E4
ldr r4, [r0, #0x00]
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0xE0
adds r0, r4, #0x0
movs r2, #0x10
bl CpuFastSet
ldr r0, _0800FA2C @ =0x020378D4
ldr r4, [r0, #0x00]
movs r0, #0xA0
lsls r0, r0, #0x01
adds r4, r4, r0
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
movs r0, #0xE0
lsls r0, r0, #0x01
adds r1, r1, r0
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
movs r0, #0x00
bl pltt_getBuffer
movs r1, #0x00
strh r1, [r0, #0x00]
movs r0, #0x01
bl pltt_setDirtyFlag
ldr r0, _0800FA30 @ =0x020378FC
ldr r0, [r0, #0x00]
ldr r5, _0800FA34 @ =0x02037900
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800FA38 @ =0x06008000
ldr r4, _0800FA3C @ =0x80000C00
adds r1, r5, #0x0
adds r3, r4, #0x0
bl dmaq_enqueue
bl sub_8011424
ldr r0, _0800FA40 @ =0x020378F8
ldr r0, [r0, #0x00]
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800FA44 @ =0x06009800
adds r1, r5, #0x0
adds r3, r4, #0x0
bl dmaq_enqueue
bl sub_8011424
ldr r0, _0800FA48 @ =0x020378F4
ldr r0, [r0, #0x00]
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800FA4C @ =0x0600B000
adds r1, r5, #0x0
adds r3, r4, #0x0
bl dmaq_enqueue
bl sub_8011424
ldr r0, _0800FA50 @ =0x020378C4
ldr r0, [r0, #0x00]
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800FA54 @ =0x0600C800
ldr r4, _0800FA58 @ =0x80000400
adds r1, r5, #0x0
adds r3, r4, #0x0
bl dmaq_enqueue
bl sub_8011424
ldr r0, _0800FA5C @ =0x020378B8
ldr r0, [r0, #0x00]
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800FA60 @ =0x0600EC00
adds r1, r5, #0x0
adds r3, r4, #0x0
bl dmaq_enqueue
bl sub_8011424
ldr r0, _0800FA64 @ =0x020378B4
ldr r0, [r0, #0x00]
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800FA68 @ =0x0600F400
ldr r3, _0800FA6C @ =0x80000600
adds r1, r5, #0x0
bl dmaq_enqueue
bl sub_8011424
ldr r0, _0800FA70 @ =0x020378AC
ldr r4, [r0, #0x00]
movs r0, #0x00
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
movs r6, #0x00
str r6, [sp, #0x000]
movs r0, #0x00
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
ldr r2, _0800FA74 @ =0x01000080
mov r0, sp
bl CpuFastSet
movs r0, #0x01
bl map_setBufferDirty
bl sub_8011424
ldr r0, _0800FA78 @ =0x020378CC
ldr r4, [r0, #0x00]
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
movs r0, #0x01
bl pltt_getBuffer
strh r6, [r0, #0x00]
movs r0, #0x01
bl pltt_setDirtyFlag
ldr r0, _0800FA7C @ =0x020378C0
ldr r0, [r0, #0x00]
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800FA80 @ =0x06010000
ldr r3, _0800FA84 @ =0x80000A00
adds r1, r5, #0x0
bl dmaq_enqueue
bl sub_8011424
ldr r0, _0800FA88 @ =0x020378F0
ldr r0, [r0, #0x00]
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800FA8C @ =0x06011400
ldr r3, _0800FA90 @ =0x80000040
adds r1, r5, #0x0
bl dmaq_enqueue
bl sub_8011424
ldr r0, _0800FA94 @ =0x020378EC
ldr r0, [r0, #0x00]
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800FA98 @ =0x06011800
ldr r3, _0800FA9C @ =0x80000800
adds r1, r5, #0x0
bl dmaq_enqueue
bl sub_8011424
ldr r0, _0800FAA0 @ =0x02037870
movs r6, #0x80
lsls r6, r6, #0x01
ldr r4, [r0, #0x00]
movs r5, #0x07
_0800F9E8:
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, r1, r6
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
adds r6, #0x20
movs r0, #0x80
lsls r0, r0, #0x02
adds r4, r4, r0
subs r5, #0x01
cmp r5, #0x00
bge _0800F9E8
movs r0, #0x01
bl pltt_setDirtyFlag
bl dmaq_getVBlankDmaQueue
ldr r1, _0800FAA4 @ =0x0203EC10
ldr r2, _0800FAA8 @ =0x06013C00
ldr r3, _0800FAAC @ =0x81000040
bl dmaq_enqueue
add sp, #0x004
pop {r4, r5, r6}
pop {r0}
bx r0
_0800FA24: .4byte 0x020378D0
_0800FA28: .4byte 0x020378E4
_0800FA2C: .4byte 0x020378D4
_0800FA30: .4byte 0x020378FC
_0800FA34: .4byte 0x02037900
_0800FA38: .4byte 0x06008000
_0800FA3C: .4byte 0x80000C00
_0800FA40: .4byte 0x020378F8
_0800FA44: .4byte 0x06009800
_0800FA48: .4byte 0x020378F4
_0800FA4C: .4byte 0x0600B000
_0800FA50: .4byte 0x020378C4
_0800FA54: .4byte 0x0600C800
_0800FA58: .4byte 0x80000400
_0800FA5C: .4byte 0x020378B8
_0800FA60: .4byte 0x0600EC00
_0800FA64: .4byte 0x020378B4
_0800FA68: .4byte 0x0600F400
_0800FA6C: .4byte 0x80000600
_0800FA70: .4byte 0x020378AC
_0800FA74: .4byte 0x01000080
_0800FA78: .4byte 0x020378CC
_0800FA7C: .4byte 0x020378C0
_0800FA80: .4byte 0x06010000
_0800FA84: .4byte 0x80000A00
_0800FA88: .4byte 0x020378F0
_0800FA8C: .4byte 0x06011400
_0800FA90: .4byte 0x80000040
_0800FA94: .4byte 0x020378EC
_0800FA98: .4byte 0x06011800
_0800FA9C: .4byte 0x80000800
_0800FAA0: .4byte 0x02037870
_0800FAA4: .4byte 0x0203EC10
_0800FAA8: .4byte 0x06013C00
_0800FAAC: .4byte 0x81000040
thumb_func_start sub_800FAB0
sub_800FAB0:
push {r4, r5, r6, r7, lr}
mov r7, r8
push {r7}
ldr r0, _0800FC24 @ =0x03000100
ldr r7, [r0, #0x00]
movs r5, #0xC0
lsls r5, r5, #0x13
movs r4, #0x0F
_0800FAC0:
bl dmaq_getVBlankDmaQueue
ldr r1, _0800FC28 @ =0x0203EC12
adds r2, r5, #0x0
ldr r3, _0800FC2C @ =0x81000C00
bl dmaq_enqueue
bl sub_8011424
movs r0, #0xC0
lsls r0, r0, #0x05
adds r5, r5, r0
subs r4, #0x01
cmp r4, #0x00
bge _0800FAC0
movs r5, #0x00
bl sub_800F828
ldr r0, _0800FC30 @ =0x020378E4
ldr r4, [r0, #0x00]
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0xE0
adds r0, r4, #0x0
movs r2, #0x10
bl CpuFastSet
movs r0, #0x01
bl pltt_setDirtyFlag
ldr r0, _0800FC34 @ =0x020378E0
ldr r0, [r0, #0x00]
ldr r4, _0800FC38 @ =0x02037900
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800FC3C @ =0x06004000
ldr r3, _0800FC40 @ =0x80000600
adds r1, r4, #0x0
bl dmaq_enqueue
bl sub_8011424
ldr r0, _0800FC44 @ =0x020378DC
ldr r0, [r0, #0x00]
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
movs r2, #0xC0
lsls r2, r2, #0x13
ldr r1, _0800FC48 @ =0x80000400
mov r8, r1
adds r1, r4, #0x0
mov r3, r8
bl dmaq_enqueue
bl sub_8011424
ldr r0, _0800FC4C @ =0x020378D8
ldr r0, [r0, #0x00]
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800FC50 @ =0x06000800
ldr r6, _0800FC54 @ =0x80000280
adds r1, r4, #0x0
adds r3, r6, #0x0
bl dmaq_enqueue
bl sub_8011424
ldr r0, _0800FC58 @ =0x020378A4
ldr r0, [r0, #0x00]
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800FC5C @ =0x06002000
adds r1, r4, #0x0
adds r3, r6, #0x0
bl dmaq_enqueue
bl sub_8011424
ldr r0, _0800FC60 @ =0x080C53CC
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800FC64 @ =0x06017800
adds r1, r4, #0x0
mov r3, r8
bl dmaq_enqueue
bl sub_8011424
ldr r0, _0800FC68 @ =0x080C5130
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0800FC6C @ =0x06017000
adds r1, r4, #0x0
mov r3, r8
bl dmaq_enqueue
bl main_frameProc
ldrh r0, [r7, #0x02]
ldr r0, _0800FC70 @ =0x00004208
strh r0, [r7, #0x02]
ldrh r0, [r7, #0x08]
ldr r0, _0800FC74 @ =0x00004409
strh r0, [r7, #0x08]
ldrh r0, [r7, #0x0E]
movs r0, #0x06
strh r0, [r7, #0x0E]
ldrh r0, [r7, #0x14]
movs r0, #0x83
lsls r0, r0, #0x01
strh r0, [r7, #0x14]
ldrh r0, [r7, #0x00]
movs r0, #0xFA
lsls r0, r0, #0x05
strh r0, [r7, #0x00]
ldrh r0, [r7, #0x1A]
movs r0, #0xBF
strh r0, [r7, #0x1A]
ldrh r0, [r7, #0x1E]
movs r0, #0x10
strh r0, [r7, #0x1E]
ldrh r0, [r7, #0x04]
strh r5, [r7, #0x04]
ldrh r0, [r7, #0x06]
strh r5, [r7, #0x06]
ldrh r0, [r7, #0x0A]
strh r5, [r7, #0x0A]
ldrh r0, [r7, #0x0C]
strh r5, [r7, #0x0C]
ldrh r0, [r7, #0x10]
strh r5, [r7, #0x10]
ldrh r0, [r7, #0x12]
strh r5, [r7, #0x12]
ldrh r0, [r7, #0x16]
strh r5, [r7, #0x16]
ldrh r0, [r7, #0x18]
strh r5, [r7, #0x18]
movs r2, #0xFC
lsls r2, r2, #0x02
adds r0, r7, r2
str r5, [r0, #0x00]
ldrh r0, [r7, #0x2A]
ldr r0, _0800FC78 @ =0x0000303F
strh r0, [r7, #0x2A]
ldrh r1, [r7, #0x00]
movs r2, #0x80
lsls r2, r2, #0x08
adds r0, r2, #0x0
ldrh r2, [r7, #0x00]
orrs r0, r1
strh r0, [r7, #0x00]
pop {r3}
mov r8, r3
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_0800FC24: .4byte 0x03000100
_0800FC28: .4byte 0x0203EC12
_0800FC2C: .4byte 0x81000C00
_0800FC30: .4byte 0x020378E4
_0800FC34: .4byte 0x020378E0
_0800FC38: .4byte 0x02037900
_0800FC3C: .4byte 0x06004000
_0800FC40: .4byte 0x80000600
_0800FC44: .4byte 0x020378DC
_0800FC48: .4byte 0x80000400
_0800FC4C: .4byte 0x020378D8
_0800FC50: .4byte 0x06000800
_0800FC54: .4byte 0x80000280
_0800FC58: .4byte 0x020378A4
_0800FC5C: .4byte 0x06002000
_0800FC60: .4byte 0x080C53CC
_0800FC64: .4byte 0x06017800
_0800FC68: .4byte 0x080C5130
_0800FC6C: .4byte 0x06017000
_0800FC70: .4byte 0x00004208
_0800FC74: .4byte 0x00004409
_0800FC78: .4byte 0x0000303F
.byte 0x30, 0xB5, 0x84, 0xB0, 0x04, 0x1C, 0x01, 0x20, 0x00, 0x21, 0x00, 0x22, 0x1E, 0xF0, 0x12, 0xFD
.byte 0x05, 0x1C, 0x17, 0x48, 0x01, 0x68, 0x80, 0x20, 0x40, 0x01, 0x08, 0x40, 0x00, 0x28, 0x31, 0xD1
.byte 0x80, 0x23, 0x9B, 0x01, 0x0B, 0x40, 0x00, 0x2B, 0x2C, 0xD1, 0x00, 0x21, 0x01, 0x22, 0x20, 0x1C
.byte 0x10, 0x40, 0x00, 0x28, 0x01, 0xD0, 0x00, 0x92, 0x01, 0x21, 0x02, 0x20, 0x20, 0x40, 0x00, 0x28
.byte 0x01, 0xD0, 0x01, 0x92, 0x01, 0x31, 0x04, 0x20, 0x20, 0x40, 0x00, 0x28, 0x01, 0xD0, 0x02, 0x92
.byte 0x01, 0x31, 0x08, 0x20, 0x20, 0x40, 0x00, 0x28, 0x01, 0xD0, 0x03, 0x92, 0x01, 0x31, 0x96, 0x22
.byte 0xD2, 0x00, 0xA8, 0x18, 0x00, 0x68, 0x81, 0x42, 0x06, 0xD1, 0x02, 0x48, 0x03, 0x60, 0x0F, 0xE0
.byte 0xC0, 0x29, 0x00, 0x03, 0xB8, 0x29, 0x00, 0x03, 0x03, 0x49, 0x08, 0x68, 0x01, 0x30, 0x08, 0x60
.byte 0x3B, 0x28, 0x03, 0xDD, 0x00, 0x20, 0x04, 0xE0, 0xB8, 0x29, 0x00, 0x03, 0x02, 0xF0, 0x32, 0xFB
.byte 0x01, 0x20, 0x04, 0xB0, 0x30, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00
thumb_func_start singlelink_main
singlelink_main: @ 0800FD18
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x018
movs r0, #0x00
str r0, [sp, #0x00C]
mov r10, r0
movs r1, #0x00
str r1, [sp, #0x010]
ldr r0, _08010054 @ =0x030029C4
ldr r2, [sp, #0x00C]
str r2, [r0, #0x00]
ldr r0, _08010058 @ =0x03002C50
str r2, [r0, #0x00]
ldr r0, _0801005C @ =0x04000128
strh r2, [r0, #0x00]
ldr r1, _08010060 @ =0x020378FC
ldr r0, _08010064 @ =0x080A97F8
str r0, [r1, #0x00]
subs r1, #0x04
ldr r0, _08010068 @ =0x080A9E2C
str r0, [r1, #0x00]
subs r1, #0x04
ldr r0, _0801006C @ =0x080AA56C
str r0, [r1, #0x00]
subs r1, #0x04
ldr r0, _08010070 @ =0x080C3870
str r0, [r1, #0x00]
ldr r0, _08010074 @ =0x020378EC
ldr r2, _08010078 @ =0x080C2FA8
str r2, [r0, #0x00]
subs r1, #0x0C
ldr r0, _0801007C @ =0x0807CD48
str r0, [r1, #0x00]
subs r1, #0x04
ldr r0, _08010080 @ =0x0807D1E8
str r0, [r1, #0x00]
subs r1, #0x04
ldr r0, _08010084 @ =0x0807DA94
str r0, [r1, #0x00]
subs r1, #0x04
ldr r0, _08010088 @ =0x0807DB98
str r0, [r1, #0x00]
subs r1, #0x04
ldr r0, _0801008C @ =0x080B2270
str r0, [r1, #0x00]
subs r1, #0x04
ldr r0, _08010090 @ =0x080C3A8C
str r0, [r1, #0x00]
subs r1, #0x04
ldr r0, _08010094 @ =0x080C3B68
str r0, [r1, #0x00]
subs r1, #0x04
ldr r0, _08010098 @ =0x080C3C74
str r0, [r1, #0x00]
subs r1, #0x04
ldr r0, _0801009C @ =0x080C3E08
str r0, [r1, #0x00]
subs r1, #0x04
ldr r0, _080100A0 @ =0x080C41BC
str r0, [r1, #0x00]
subs r1, #0x04
ldr r0, _080100A4 @ =0x080C4784
str r0, [r1, #0x00]
subs r1, #0x04
ldr r0, _080100A8 @ =0x080C400C
str r0, [r1, #0x00]
subs r1, #0x04
ldr r0, _080100AC @ =0x080BB758
str r0, [r1, #0x00]
ldr r0, _080100B0 @ =0x020378B0
str r2, [r0, #0x00]
subs r1, #0x08
ldr r0, _080100B4 @ =0x080C499C
str r0, [r1, #0x00]
subs r1, #0x04
ldr r0, _080100B8 @ =0x080C4ED0
str r0, [r1, #0x00]
subs r1, #0x04
ldr r0, _080100BC @ =0x080C4DAC
str r0, [r1, #0x00]
subs r1, #0x04
ldr r0, _080100C0 @ =0x080324B5
str r0, [r1, #0x00]
subs r1, #0x04
ldr r0, _080100C4 @ =0x08032B95
str r0, [r1, #0x00]
subs r1, #0x24
ldr r0, _080100C8 @ =0x08345800
str r0, [r1, #0x00]
subs r1, #0x04
movs r0, #0xB0
lsls r0, r0, #0x09
str r0, [r1, #0x00]
subs r1, #0x04
ldr r0, _080100CC @ =0x08344600
str r0, [r1, #0x00]
subs r1, #0x04
ldr r0, _080100D0 @ =0x0806FABC
str r0, [r1, #0x00]
subs r1, #0x04
ldr r0, _080100D4 @ =0x0807CBC0
str r0, [r1, #0x00]
subs r1, #0x04
ldr r0, _080100D8 @ =0x080AAE3C
str r0, [r1, #0x00]
subs r1, #0x04
ldr r0, _080100DC @ =0x080AB63C
str r0, [r1, #0x00]
ldr r6, _080100E0 @ =0x0203788C
movs r4, #0x00
ldr r5, _080100E4 @ =0x080E7FEC
_0800FDFC:
adds r0, r4, #0x0
bl track_getRetroTrack
lsls r0, r0, #0x02
adds r0, r0, r5
ldr r0, [r0, #0x00]
ldr r0, [r0, #0x30]
stm r6!, {r0}
adds r4, #0x01
cmp r4, #0x03
ble _0800FDFC
ldr r6, _080100E8 @ =0x0203787C
movs r4, #0x00
ldr r7, _080100E4 @ =0x080E7FEC
ldr r5, _080100EC @ =courseData_bin
_0800FE1A:
adds r0, r4, #0x0
bl track_getRetroTrack
lsls r0, r0, #0x02
adds r0, r0, r7
ldr r0, [r0, #0x00]
ldr r0, [r0, #0x00]
lsls r0, r0, #0x02
adds r0, r0, r5
ldr r0, [r0, #0x00]
adds r1, r0, r5
ldr r2, _080100F0 @ =0x082580C4
adds r0, r0, r2
ldr r0, [r0, #0x00]
adds r1, r1, r0
stm r6!, {r1}
adds r4, #0x01
cmp r4, #0x03
ble _0800FE1A
ldr r1, _080100F4 @ =0x06001000
movs r0, #0x00
bl map_setBufferDestination
ldr r0, _080100F8 @ =0x030029B0
movs r4, #0x00
str r4, [r0, #0x00]
ldr r0, _080100FC @ =0x030029B8
str r4, [r0, #0x00]
ldr r5, _08010100 @ =0x03000100
movs r0, #0x01
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
str r0, [r5, #0x00]
adds r6, r0, #0x0
str r4, [sp, #0x008]
ldr r2, _08010104 @ =0x01000139
add r0, sp, #0x008
adds r1, r6, #0x0
bl CpuFastSet
bl oam_init
bl sub_800FAB0
adds r2, r6, #0x0
adds r2, #0x4C
ldr r3, _08010108 @ =0x080D9DD4
movs r0, #0x60
movs r1, #0x14
bl sub_8003FD0
movs r3, #0xA9
lsls r3, r3, #0x02
adds r1, r6, r3
movs r0, #0x0E
str r0, [r1, #0x00]
movs r1, #0x00
movs r2, #0xFE
lsls r2, r2, #0x02
adds r0, r6, r2
movs r3, #0x78
movs r5, #0x45
movs r4, #0x01
movs r2, #0x03
_0800FE9E:
strh r3, [r0, #0x00]
strh r5, [r0, #0x02]
strh r1, [r0, #0x06]
strh r1, [r0, #0x04]
strh r1, [r0, #0x08]
strb r4, [r0, #0x0A]
strh r1, [r0, #0x0C]
adds r0, #0x18
adds r3, #0x3C
subs r2, #0x01
cmp r2, #0x00
bge _0800FE9E
ldr r3, _0801010C @ =0x000004AC
adds r0, r6, r3
movs r4, #0x00
str r4, [r0, #0x00]
ldr r1, _08010110 @ =0x000004A4
adds r0, r6, r1
str r4, [r0, #0x00]
movs r2, #0xFE
lsls r2, r2, #0x02
adds r0, r6, r2
ldrh r1, [r0, #0x00]
subs r3, #0x04
adds r0, r6, r3
movs r5, #0x00
strh r1, [r0, #0x00]
ldr r1, _08010114 @ =0x000003FA
adds r0, r6, r1
ldrh r1, [r0, #0x00]
adds r2, #0xB2
adds r0, r6, r2
strh r1, [r0, #0x00]
subs r3, #0x24
adds r0, r6, r3
bl sub_8014044
ldr r1, _08010118 @ =0x00000454
adds r0, r6, r1
ldr r1, _0801011C @ =0x080CA728
str r1, [r0, #0x00]
movs r1, #0x94
lsls r1, r1, #0x01
strh r1, [r0, #0x04]
movs r1, #0x90
strh r1, [r0, #0x06]
adds r1, #0x70
strh r1, [r0, #0x0A]
strh r1, [r0, #0x08]
strh r4, [r0, #0x0C]
strb r5, [r0, #0x0E]
strh r4, [r0, #0x10]
ldr r2, _08010120 @ =0x0000046C
adds r0, r6, r2
adds r1, #0xB8
strh r1, [r0, #0x04]
movs r1, #0x50
strh r1, [r0, #0x06]
strh r4, [r0, #0x0A]
strh r4, [r0, #0x08]
strh r4, [r0, #0x0C]
strb r5, [r0, #0x0E]
strh r4, [r0, #0x10]
movs r3, #0xFA
lsls r3, r3, #0x02
adds r1, r6, r3
movs r0, #0x08
str r0, [r1, #0x00]
movs r3, #0x00
movs r0, #0x3C
adds r0, r0, r6
mov r8, r0
movs r0, #0xAA
lsls r0, r0, #0x02
adds r2, r6, r0
_0800FF34:
str r4, [r2, #0x20]
adds r2, #0x28
adds r3, #0x01
ldr r0, [r1, #0x00]
cmp r3, r0
blt _0800FF34
movs r0, #0x00
movs r1, #0xFB
lsls r1, r1, #0x02
adds r5, r6, r1
_0800FF48:
adds r7, r0, #0x1
movs r4, #0xFF
_0800FF4C:
ldr r0, [r5, #0x00]
adds r0, #0x01
str r0, [r5, #0x00]
adds r0, r6, #0x0
bl sub_800F4F8
subs r4, #0x01
cmp r4, #0x00
bge _0800FF4C
bl sub_8011424
adds r0, r7, #0x0
cmp r0, #0x01
ble _0800FF48
mov r1, r8
movs r2, #0x00
adds r0, r1, #0x0
adds r0, #0x0C
_0800FF70:
str r2, [r0, #0x00]
subs r0, #0x04
cmp r0, r1
bge _0800FF70
movs r2, #0x94
lsls r2, r2, #0x03
adds r0, r6, r2
movs r7, #0x00
str r7, [r0, #0x00]
ldr r3, _08010124 @ =0x0000049C
adds r0, r6, r3
str r7, [r0, #0x00]
movs r0, #0x28
bl m4aSongNumStart
ldr r4, _08010128 @ =0x08011475
adds r1, r4, #0x0
cmp r4, #0x00
bne _0800FF98
ldr r1, _0801012C @ =0x0802D5F1
_0800FF98:
movs r0, #0x06
bl irq_setHandler
adds r1, r4, #0x0
cmp r1, #0x00
bne _0800FFA6
ldr r1, _0801012C @ =0x0802D5F1
_0800FFA6:
movs r0, #0x07
bl irq_setHandler
ldr r5, _08010130 @ =0x0800F77D
ldr r4, _08010134 @ =0x03002E20
movs r0, #0x01
movs r1, #0x02
negs r1, r1
bl irq_updateMask
str r5, [r4, #0x0C]
movs r0, #0x02
ldr r1, _08010138 @ =0x00010001
bl irq_updateMask
ldr r1, _0801013C @ =0x08011385
cmp r1, #0x00
bne _0800FFCC
ldr r1, _0801012C @ =0x0802D5F1
_0800FFCC:
movs r0, #0x00
bl irq_setHandler
movs r1, #0x80
lsls r1, r1, #0x09
movs r0, #0x02
bl irq_updateMask
ldr r1, _08010140 @ =0x08340000
ldr r0, _08010144 @ =0x03000108
str r1, [r0, #0x28]
adds r1, r0, #0x0
adds r1, #0x4B
strb r7, [r1, #0x00]
bl sub_8011D5C
thumb_func_start sub_800FFEC
sub_800FFEC:
bl oam_update
bl VBlankIntrWait
bl m4aSoundMain
movs r0, #0xFB
lsls r0, r0, #0x02
adds r1, r6, r0
ldr r0, [r1, #0x00]
adds r0, #0x01
str r0, [r1, #0x00]
ldr r1, [sp, #0x00C]
cmp r1, #0x12
bgt _08010024
ldr r2, _0801005C @ =0x04000128
ldrh r1, [r2, #0x00]
movs r0, #0x08
ands r0, r1
cmp r0, #0x00
beq _08010024
ldrh r1, [r2, #0x00]
movs r0, #0x30
ands r0, r1
cmp r0, #0x00
beq _08010024
movs r2, #0x13
str r2, [sp, #0x00C]
_08010024:
ldr r3, [sp, #0x00C]
cmp r3, #0x10
blt _0801003A
cmp r3, #0x15
bgt _08010030
b _0801019A
_08010030:
cmp r3, #0x20
bgt _0801003A
cmp r3, #0x1C
blt _0801003A
b _0801019A
_0801003A:
movs r2, #0x01
ldr r4, _08010144 @ =0x03000108
movs r3, #0x01
adds r1, r6, #0x0
adds r1, #0x30
adds r5, r4, #0x0
_08010046:
ldrb r0, [r5, #0x1D]
asrs r0, r2
ands r0, r3
cmp r0, #0x00
bne _08010148
movs r0, #0x04
b _08010158
_08010054: .4byte 0x030029C4
_08010058: .4byte 0x03002C50
_0801005C: .4byte 0x04000128
_08010060: .4byte 0x020378FC
_08010064: .4byte 0x080A97F8
_08010068: .4byte 0x080A9E2C
_0801006C: .4byte 0x080AA56C
_08010070: .4byte 0x080C3870
_08010074: .4byte 0x020378EC
_08010078: .4byte 0x080C2FA8
_0801007C: .4byte 0x0807CD48
_08010080: .4byte 0x0807D1E8
_08010084: .4byte 0x0807DA94
_08010088: .4byte 0x0807DB98
_0801008C: .4byte 0x080B2270
_08010090: .4byte 0x080C3A8C
_08010094: .4byte 0x080C3B68
_08010098: .4byte 0x080C3C74
_0801009C: .4byte 0x080C3E08
_080100A0: .4byte 0x080C41BC
_080100A4: .4byte 0x080C4784
_080100A8: .4byte 0x080C400C
_080100AC: .4byte 0x080BB758
_080100B0: .4byte 0x020378B0
_080100B4: .4byte 0x080C499C
_080100B8: .4byte 0x080C4ED0
_080100BC: .4byte 0x080C4DAC
_080100C0: .4byte sub_80324B4
_080100C4: .4byte sub_8032B94
_080100C8: .4byte 0x08345800
_080100CC: .4byte 0x08344600
_080100D0: .4byte 0x0806FABC
_080100D4: .4byte 0x0807CBC0
_080100D8: .4byte 0x080AAE3C
_080100DC: .4byte 0x080AB63C
_080100E0: .4byte 0x0203788C
_080100E4: .4byte 0x080E7FEC
_080100E8: .4byte 0x0203787C
_080100EC: .4byte courseData_bin
_080100F0: .4byte 0x082580C4
_080100F4: .4byte 0x06001000
_080100F8: .4byte 0x030029B0
_080100FC: .4byte 0x030029B8
_08010100: .4byte 0x03000100
_08010104: .4byte 0x01000139
_08010108: .4byte 0x080D9DD4
_0801010C: .4byte 0x000004AC
_08010110: .4byte 0x000004A4
_08010114: .4byte 0x000003FA
_08010118: .4byte 0x00000454
_0801011C: .4byte 0x080CA728
_08010120: .4byte 0x0000046C
_08010124: .4byte 0x0000049C
_08010128: .4byte main_dummyIrqHandler5
_0801012C: .4byte main_dummyIrqHandler
_08010130: .4byte sub_800F77C
_08010134: .4byte 0x03002E20
_08010138: .4byte 0x00010001
_0801013C: .4byte sub_8011384
_08010140: .4byte 0x08340000
_08010144: .4byte 0x03000108
_08010148:
ldrb r0, [r4, #0x1E]
asrs r0, r2
ands r0, r3
cmp r0, #0x00
bne _08010156
movs r0, #0x05
b _08010158
_08010156:
movs r0, #0x06
_08010158:
str r0, [r1, #0x00]
adds r1, #0x04
adds r2, #0x01
cmp r2, #0x03
bgt _08010164
b _08010046
_08010164:
ldrb r0, [r4, #0x1E]
movs r1, #0x0E
ands r1, r0
cmp r1, #0x00
beq _08010190
ldrb r0, [r4, #0x18]
cmp r0, #0x00
beq _0801017C
cmp r0, #0xD1
beq _08010180
movs r0, #0x00
b _08010182
_0801017C:
movs r0, #0x01
b _08010182
_08010180:
movs r0, #0x02
_08010182:
str r0, [r6, #0x2C]
ldrb r0, [r4, #0x18]
cmp r0, #0xDF
bls _08010192
movs r0, #0x03
str r0, [r6, #0x2C]
b _08010192
_08010190:
str r1, [r6, #0x2C]
_08010192:
adds r0, r4, #0x0
bl sub_8011524
str r0, [sp, #0x010]
_0801019A:
ldr r0, [sp, #0x00C]
cmp r0, #0x2A
bls _080101A4
bl def_80101AC
_080101A4:
lsls r0, r0, #0x02
ldr r1, _080101B0 @ =0x080101B4
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
.byte 0x00, 0x00
_080101B0: .4byte 0x080101B4
.byte 0x60, 0x02, 0x01, 0x08, 0xA0, 0x02, 0x01, 0x08, 0x1C, 0x04, 0x01, 0x08, 0xB8, 0x05, 0x01, 0x08
.byte 0xD8, 0x04, 0x01, 0x08, 0xFC, 0x04, 0x01, 0x08, 0xFC, 0x05, 0x01, 0x08, 0x94, 0x06, 0x01, 0x08
.byte 0x3C, 0x07, 0x01, 0x08, 0x6C, 0x07, 0x01, 0x08, 0xC0, 0x07, 0x01, 0x08, 0xF8, 0x07, 0x01, 0x08
.byte 0x84, 0x08, 0x01, 0x08, 0x70, 0x11, 0x01, 0x08, 0xEC, 0x08, 0x01, 0x08, 0xA6, 0x09, 0x01, 0x08
.byte 0x6C, 0x0A, 0x01, 0x08, 0x2C, 0x0B, 0x01, 0x08, 0x64, 0x0E, 0x01, 0x08, 0xB4, 0x0F, 0x01, 0x08
.byte 0x08, 0x10, 0x01, 0x08, 0xB0, 0x10, 0x01, 0x08, 0x70, 0x11, 0x01, 0x08, 0x70, 0x11, 0x01, 0x08
.byte 0x70, 0x11, 0x01, 0x08, 0x70, 0x11, 0x01, 0x08, 0x70, 0x11, 0x01, 0x08, 0x70, 0x11, 0x01, 0x08
.byte 0x70, 0x11, 0x01, 0x08, 0x70, 0x11, 0x01, 0x08, 0x70, 0x11, 0x01, 0x08, 0x70, 0x11, 0x01, 0x08
.byte 0x70, 0x11, 0x01, 0x08, 0x70, 0x11, 0x01, 0x08, 0x70, 0x11, 0x01, 0x08, 0x70, 0x11, 0x01, 0x08
.byte 0x70, 0x11, 0x01, 0x08, 0xDC, 0x0E, 0x01, 0x08, 0x14, 0x0F, 0x01, 0x08, 0xB4, 0x0F, 0x01, 0x08
.byte 0x70, 0x11, 0x01, 0x08, 0x70, 0x11, 0x01, 0x08, 0xC8, 0x10, 0x01, 0x08, 0x01, 0x21, 0x8A, 0x44
.byte 0x52, 0x46, 0x10, 0x2A, 0x04, 0xDC, 0x70, 0x8B, 0xBF, 0x20, 0x70, 0x83, 0x00, 0xF0, 0xE7, 0xFE
.byte 0x70, 0x8B, 0x07, 0x48, 0x70, 0x83, 0xB0, 0x8B, 0x06, 0x48, 0xB0, 0x83, 0x01, 0x23, 0x03, 0x93
.byte 0x00, 0x20, 0x82, 0x46, 0x04, 0x48, 0x51, 0x46, 0x01, 0x60, 0x00, 0xF0, 0x6F, 0xFF, 0x00, 0x00
.byte 0x44, 0x08, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x54, 0x01, 0x00, 0x03, 0x96, 0x22, 0xD2, 0x00
.byte 0xB1, 0x18, 0x00, 0x20, 0x08, 0x60, 0x0B, 0x4C, 0x32, 0x1C, 0x30, 0x32, 0x02, 0x23, 0x10, 0x68
.byte 0x06, 0x28, 0x02, 0xD1, 0x08, 0x68, 0x01, 0x30, 0x08, 0x60, 0x04, 0x32, 0x01, 0x3B, 0x00, 0x2B
.byte 0xF5, 0xDA, 0xF0, 0x6A, 0x01, 0x28, 0x07, 0xD1, 0x20, 0x68, 0xB4, 0x28, 0x09, 0xDC, 0x01, 0x30
.byte 0x03, 0xE0, 0x00, 0x00, 0x54, 0x01, 0x00, 0x03, 0x00, 0x20, 0x20, 0x60, 0x20, 0x68, 0xB4, 0x28
.byte 0x0E, 0xDD, 0x06, 0x4B, 0xF1, 0x18, 0x0E, 0x20, 0x08, 0x56, 0x00, 0x28, 0x13, 0xD1, 0x01, 0x20
.byte 0x88, 0x73, 0x8E, 0x20, 0x4F, 0xF0, 0x12, 0xFE, 0x0D, 0xE0, 0x00, 0x00, 0x54, 0x04, 0x00, 0x00
.byte 0x10, 0x48, 0x31, 0x18, 0x0E, 0x20, 0x08, 0x56, 0x03, 0x28, 0x04, 0xD1, 0x04, 0x20, 0x88, 0x73
.byte 0x90, 0x20, 0x4F, 0xF0, 0x03, 0xFE, 0x0C, 0x48, 0x00, 0x88, 0x02, 0x28, 0x18, 0xD1, 0x00, 0x21
.byte 0x11, 0x22, 0x30, 0x1C, 0x4C, 0x30, 0x82, 0x73, 0x18, 0x30, 0x01, 0x31, 0x0D, 0x29, 0xFA, 0xD9
.byte 0x90, 0x20, 0x4F, 0xF0, 0xF3, 0xFD, 0x05, 0x48, 0x00, 0x68, 0x02, 0x21, 0x4F, 0xF0, 0xBA, 0xFE
.byte 0x2A, 0x21, 0xD4, 0xE0, 0x54, 0x04, 0x00, 0x00, 0xE0, 0x2A, 0x00, 0x03, 0x14, 0x24, 0x10, 0x08
.byte 0x01, 0x28, 0x01, 0xD0, 0x00, 0xF0, 0x0A, 0xFF, 0x26, 0x48, 0x00, 0x68, 0xB4, 0x28, 0x01, 0xDC
.byte 0x00, 0xF0, 0x04, 0xFF, 0x00, 0x21, 0x11, 0x22, 0x30, 0x1C, 0x5A, 0x30, 0x02, 0x70, 0x18, 0x30
.byte 0x01, 0x31, 0x0D, 0x29, 0xFA, 0xD9, 0x20, 0x4B, 0xF1, 0x18, 0x06, 0x20, 0x88, 0x73, 0x8F, 0x20
.byte 0x4F, 0xF0, 0xCC, 0xFD, 0x1D, 0x4A, 0x1E, 0x48, 0xA0, 0x21, 0x49, 0x00, 0x40, 0x18, 0x81, 0x88
.byte 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x80, 0x18, 0x00, 0x68, 0x02, 0x21, 0x4F, 0xF0, 0x8A, 0xFE
.byte 0x02, 0x22, 0x03, 0x92, 0x00, 0x23, 0x9A, 0x46, 0x00, 0x20, 0x00, 0x21, 0x0D, 0x22, 0x1E, 0xF0
.byte 0x7D, 0xF9, 0x00, 0x22, 0xBF, 0x21, 0x02, 0x80, 0x02, 0x30, 0x01, 0x39, 0x00, 0x29, 0xFA, 0xDA
.byte 0x01, 0x20, 0x1E, 0xF0, 0x99, 0xF9, 0x0F, 0x48, 0x00, 0x68, 0x0F, 0x4C, 0x21, 0x1C, 0x50, 0xF0
.byte 0xC7, 0xFF, 0x0E, 0x4D, 0x80, 0x22, 0x52, 0x00, 0x28, 0x1C, 0x21, 0x1C, 0x50, 0xF0, 0xB6, 0xFF
.byte 0x20, 0xF0, 0x26, 0xF8, 0x0A, 0x4A, 0x0B, 0x4B, 0x29, 0x1C, 0x1F, 0xF0, 0xF9, 0xFF, 0x00, 0xF0
.byte 0xBD, 0xFE, 0x00, 0x00, 0x54, 0x01, 0x00, 0x03, 0x54, 0x04, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08
.byte 0x98, 0x24, 0x10, 0x08, 0xA4, 0x78, 0x03, 0x02, 0x00, 0x79, 0x03, 0x02, 0x00, 0x7C, 0x03, 0x02
.byte 0x00, 0x23, 0x00, 0x06, 0x00, 0x01, 0x00, 0x80, 0x01, 0x20, 0x82, 0x44, 0x51, 0x46, 0x10, 0x29
.byte 0x50, 0xDC, 0x25, 0x49, 0x52, 0x46, 0x90, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30
.byte 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0x00, 0x02, 0xC0, 0x13, 0xB1, 0x88
.byte 0xB0, 0x80, 0x1E, 0x4A, 0x96, 0x23, 0xDB, 0x00, 0xF5, 0x18, 0x29, 0x68, 0x48, 0x1E, 0x80, 0x18
.byte 0x00, 0x78, 0x00, 0x24, 0x01, 0x31, 0x57, 0x46, 0x04, 0x3F, 0x8C, 0x42, 0x11, 0xDA, 0xA0, 0x46
.byte 0xFE, 0x21, 0x89, 0x00, 0x72, 0x18, 0x03, 0x1C, 0x29, 0x1C, 0x40, 0x46, 0x90, 0x72, 0xB0, 0x88
.byte 0x18, 0x1A, 0x10, 0x80, 0x18, 0x32, 0x3C, 0x33, 0x01, 0x34, 0x08, 0x68, 0x01, 0x30, 0x84, 0x42
.byte 0xF3, 0xDB, 0x0C, 0x2F, 0x01, 0xD9, 0x00, 0xF0, 0x71, 0xFE, 0x0D, 0x48, 0x00, 0x21, 0x05, 0x1C
.byte 0x40, 0x35, 0x4C, 0x1C, 0x82, 0x1C, 0x81, 0x1E, 0x0E, 0x23, 0x08, 0x88, 0x48, 0x80, 0x50, 0x88
.byte 0x10, 0x80, 0x02, 0x32, 0x02, 0x39, 0x01, 0x3B, 0x00, 0x2B, 0xF6, 0xDA, 0x28, 0x1C, 0x21, 0x1C
.byte 0x07, 0x29, 0xEC, 0xDD, 0x69, 0xE0, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0x10, 0x9E, 0x0D, 0x08
.byte 0x1C, 0x7C, 0x03, 0x02, 0x02, 0x4A, 0xB1, 0x18, 0x01, 0x20, 0x08, 0x60, 0x04, 0x23, 0x37, 0xE1
.byte 0xAC, 0x04, 0x00, 0x00, 0xB0, 0x89, 0x03, 0x30, 0xB1, 0x89, 0xB0, 0x81, 0xB0, 0x89, 0x2F, 0x28
.byte 0x01, 0xD8, 0x00, 0xF0, 0x43, 0xFE, 0xB0, 0x89, 0x30, 0x20, 0xB0, 0x81, 0x05, 0x21, 0x03, 0x91
.byte 0x00, 0x22, 0x92, 0x46, 0x00, 0xF0, 0x3A, 0xFE, 0x01, 0x23, 0x9A, 0x44, 0x50, 0x46, 0x0A, 0x28
.byte 0x20, 0xDD, 0x03, 0x21, 0x03, 0x91, 0x00, 0x20, 0x00, 0x21, 0x00, 0x22, 0x1E, 0xF0, 0xCE, 0xF8
.byte 0x00, 0x21, 0x80, 0x25, 0xAD, 0x00, 0x02, 0xC0, 0x01, 0x3D, 0x00, 0x2D, 0xFB, 0xD1, 0x08, 0x4C
.byte 0x00, 0x20, 0x00, 0x21, 0x09, 0x22, 0x1E, 0xF0, 0xC1, 0xF8, 0x01, 0x1C, 0x20, 0x1C, 0x50, 0xF0
.byte 0x17, 0xFF, 0x01, 0x20, 0x1E, 0xF0, 0xE0, 0xF8, 0xB0, 0x88, 0xB5, 0x80, 0x00, 0xF0, 0x16, 0xFE
.byte 0x90, 0x4E, 0x0C, 0x08, 0x15, 0x4B, 0x16, 0x4F, 0x54, 0x46, 0x02, 0x34, 0x52, 0x46, 0x52, 0x00
.byte 0x90, 0x46, 0x14, 0x48, 0x04, 0x40, 0x38, 0x20, 0x40, 0x42, 0x40, 0x44, 0x81, 0x46, 0x07, 0x25
.byte 0x41, 0x46, 0x02, 0x31, 0x79, 0x1A, 0x18, 0x1C, 0x22, 0x1C, 0x05, 0x93, 0x50, 0xF0, 0xEE, 0xFE
.byte 0x05, 0x9B, 0x49, 0x46, 0x58, 0x1A, 0xB9, 0x1C, 0x22, 0x1C, 0x50, 0xF0, 0xE7, 0xFE, 0x05, 0x9B
.byte 0x40, 0x33, 0x40, 0x37, 0x01, 0x3D, 0x00, 0x2D, 0xEA, 0xDA, 0x1F, 0xF0, 0x51, 0xFF, 0x06, 0x49
.byte 0x06, 0x4A, 0x07, 0x4B, 0x1F, 0xF0, 0x24, 0xFF, 0x00, 0xF0, 0xE8, 0xFD, 0x00, 0x79, 0x03, 0x02
.byte 0x1C, 0x7C, 0x03, 0x02, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x7C, 0x03, 0x02, 0x00, 0x23, 0x00, 0x06
.byte 0x00, 0x01, 0x00, 0x80, 0xC2, 0x22, 0x52, 0x00, 0xB0, 0x18, 0x80, 0x7B, 0x00, 0x06, 0x00, 0x16
.byte 0x14, 0x28, 0x01, 0xD0, 0x00, 0xF0, 0xD2, 0xFD, 0x08, 0x48, 0x00, 0x06, 0x00, 0x0E, 0x00, 0x28
.byte 0x0A, 0xD0, 0x07, 0x4D, 0x04, 0x1C, 0x28, 0x68, 0x06, 0x49, 0x89, 0x68, 0x50, 0xF0, 0x14, 0xF8
.byte 0x0C, 0x35, 0x01, 0x3C, 0x00, 0x2C, 0xF6, 0xD1, 0x07, 0x23, 0xA9, 0xE0, 0x0B, 0x00, 0x00, 0x00
.byte 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08, 0x01, 0x21, 0x8A, 0x44, 0x52, 0x46, 0x10, 0x2A
.byte 0x40, 0xDC, 0x1A, 0x49, 0x90, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04
.byte 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0x00, 0x02, 0xC0, 0x13, 0x14, 0x4B, 0xC0, 0x18
.byte 0x71, 0x89, 0x70, 0x81, 0x70, 0x89, 0xB1, 0x88, 0xB0, 0x80, 0x31, 0x88, 0x11, 0x48, 0x08, 0x40
.byte 0x31, 0x88, 0x30, 0x80, 0x50, 0x46, 0x01, 0x28, 0x0F, 0xD1, 0x0F, 0x48, 0x00, 0x06, 0x00, 0x0E
.byte 0x00, 0x28, 0x0A, 0xD0, 0x0D, 0x4D, 0x04, 0x1C, 0x28, 0x68, 0x0D, 0x49, 0x89, 0x68, 0x4F, 0xF0
.byte 0xDB, 0xFF, 0x0C, 0x35, 0x01, 0x3C, 0x00, 0x2C, 0xF6, 0xD1, 0x51, 0x46, 0x05, 0x29, 0x01, 0xD0
.byte 0x00, 0xF0, 0x84, 0xFD, 0x4F, 0xF0, 0x46, 0xFF, 0x00, 0xF0, 0x80, 0xFD, 0x5C, 0x64, 0x0E, 0x08
.byte 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08
.byte 0x98, 0x24, 0x10, 0x08, 0x00, 0x22, 0x92, 0x46, 0x07, 0x23, 0x03, 0x93, 0x00, 0xF0, 0x6E, 0xFD
.byte 0x1A, 0x48, 0x80, 0x46, 0x07, 0x7E, 0x00, 0x2F, 0x48, 0xD1, 0x80, 0x7F, 0x00, 0x28, 0x45, 0xD0
.byte 0x17, 0x4D, 0x18, 0x4C, 0x01, 0x20, 0x02, 0x21, 0x49, 0x42, 0x51, 0xF0, 0xB5, 0xFF, 0xE5, 0x60
.byte 0x02, 0x20, 0x15, 0x49, 0x51, 0xF0, 0xB0, 0xFF, 0x4F, 0xF0, 0x1C, 0xFF, 0x01, 0x20, 0x13, 0x49
.byte 0x51, 0xF0, 0xAA, 0xFF, 0x12, 0x48, 0x07, 0x80, 0x12, 0x49, 0x13, 0x4A, 0x10, 0x1C, 0x08, 0x80
.byte 0x12, 0x49, 0x13, 0x48, 0x08, 0x60, 0x80, 0x20, 0x80, 0x04, 0x48, 0x60, 0x11, 0x48, 0x88, 0x60
.byte 0x88, 0x68, 0x11, 0x49, 0xFD, 0x22, 0x92, 0x01, 0x01, 0x20, 0x00, 0x90, 0x40, 0x46, 0x04, 0x23
.byte 0x01, 0xF0, 0x0A, 0xFA, 0x08, 0x23, 0x03, 0x93, 0x00, 0xF0, 0x38, 0xFD, 0x08, 0x01, 0x00, 0x03
.byte 0x7D, 0xF7, 0x00, 0x08, 0x20, 0x2E, 0x00, 0x03, 0x01, 0x00, 0x01, 0x00, 0xFF, 0xFF, 0xFE, 0xFF
.byte 0x08, 0x02, 0x00, 0x04, 0x02, 0x02, 0x00, 0x04, 0xFF, 0xFF, 0x00, 0x00, 0xD4, 0x00, 0x00, 0x04
.byte 0x00, 0x00, 0x34, 0x08, 0x00, 0x10, 0x00, 0x84, 0xC0, 0x00, 0x00, 0x02, 0x0A, 0x20, 0x03, 0x90
.byte 0x00, 0x21, 0x8A, 0x46, 0x00, 0xF0, 0x1A, 0xFD, 0x04, 0x9A, 0x00, 0x2A, 0x05, 0xD0, 0x0A, 0x23
.byte 0x03, 0x93, 0x00, 0x20, 0x82, 0x46, 0x00, 0xF0, 0x11, 0xFD, 0x06, 0x48, 0x01, 0xF0, 0x22, 0xFB
.byte 0x00, 0x28, 0x01, 0xD1, 0x00, 0xF0, 0x0A, 0xFD, 0x00, 0x21, 0x8A, 0x46, 0x09, 0x22, 0x03, 0x92
.byte 0x00, 0xF0, 0x04, 0xFD, 0x08, 0x01, 0x00, 0x03, 0x01, 0x23, 0x9A, 0x44, 0x50, 0x46, 0x10, 0x28
.byte 0x18, 0xDC, 0x0B, 0x49, 0x80, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04
.byte 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0x00, 0x02, 0xC0, 0x13, 0x71, 0x89, 0x70, 0x81
.byte 0x70, 0x89, 0xB1, 0x88, 0xB0, 0x80, 0x70, 0x8B, 0xFF, 0x20, 0x00, 0xF0, 0x9A, 0xFC, 0x00, 0x00
.byte 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x22, 0x92, 0x46, 0x0E, 0x23, 0x03, 0x93, 0x70, 0x8B, 0xFF, 0x20
.byte 0x70, 0x83, 0xF0, 0x8B, 0x10, 0x20, 0xF0, 0x83, 0x00, 0xF0, 0xD8, 0xFC, 0x01, 0x20, 0x82, 0x44
.byte 0x51, 0x46, 0x10, 0x29, 0x10, 0xDC, 0x07, 0x49, 0x52, 0x46, 0x90, 0x06, 0x00, 0x14, 0x00, 0x28
.byte 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0x00, 0x02
.byte 0xC0, 0x13, 0x61, 0xE0, 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x23, 0x9A, 0x46, 0x0B, 0x20, 0x03, 0x90
.byte 0x00, 0xF0, 0xBC, 0xFC, 0x1A, 0x48, 0x1B, 0x49, 0x50, 0xF0, 0xB0, 0xFD, 0x1A, 0x4C, 0x00, 0x20
.byte 0x1D, 0xF0, 0x14, 0xFF, 0x01, 0x1C, 0x20, 0x1C, 0x50, 0xF0, 0xAA, 0xFD, 0x01, 0x20, 0x1D, 0xF0
.byte 0x29, 0xFF, 0x16, 0x48, 0x16, 0x4C, 0x21, 0x1C, 0x50, 0xF0, 0xA2, 0xFD, 0x15, 0x49, 0xA0, 0x25
.byte 0xAD, 0x00, 0x20, 0x1C, 0x2A, 0x1C, 0x50, 0xF0, 0x91, 0xFD, 0x13, 0x48, 0x21, 0x1C, 0x50, 0xF0
.byte 0x97, 0xFD, 0x12, 0x49, 0x20, 0x1C, 0x2A, 0x1C, 0x50, 0xF0, 0x88, 0xFD, 0x30, 0x88, 0xD4, 0x20
.byte 0x00, 0x01, 0x30, 0x80, 0xB0, 0x89, 0x30, 0x20, 0xB0, 0x81, 0x0C, 0x21, 0x03, 0x91, 0x00, 0x22
.byte 0x92, 0x46, 0x4F, 0xF0, 0x81, 0xFE, 0x92, 0x20, 0x4F, 0xF0, 0x60, 0xFB, 0x00, 0xF0, 0x86, 0xFC
.byte 0xF0, 0x5E, 0x0C, 0x08, 0x00, 0x80, 0x00, 0x06, 0x84, 0x56, 0x0C, 0x08, 0x34, 0x5C, 0x0C, 0x08
.byte 0x00, 0x79, 0x03, 0x02, 0x00, 0x10, 0x00, 0x06, 0xAC, 0x4D, 0x0C, 0x08, 0x00, 0x20, 0x00, 0x06
.byte 0x01, 0x23, 0x9A, 0x44, 0x50, 0x46, 0x10, 0x28, 0x1A, 0xDC, 0x0B, 0x49, 0x80, 0x06, 0x00, 0x14
.byte 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68
.byte 0x00, 0x02, 0xC0, 0x13, 0x05, 0x49, 0x40, 0x18, 0x71, 0x89, 0x70, 0x81, 0x70, 0x89, 0xB1, 0x88
.byte 0xB0, 0x80, 0x00, 0xF0, 0x5B, 0xFC, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0x00, 0xFF, 0xFF, 0xFF
.byte 0x00, 0x22, 0x92, 0x46, 0xB0, 0x8B, 0x06, 0x48, 0xB0, 0x83, 0x70, 0x8B, 0x05, 0x48, 0x70, 0x83
.byte 0xF0, 0x8B, 0x10, 0x20, 0xF0, 0x83, 0x0D, 0x23, 0x03, 0x93, 0x00, 0xF0, 0x47, 0xFC, 0x00, 0x00
.byte 0x08, 0x10, 0x00, 0x00, 0x44, 0x08, 0x00, 0x00, 0x0F, 0x20, 0x03, 0x90, 0x30, 0x88, 0x00, 0x25
.byte 0x35, 0x80, 0x3B, 0x48, 0x05, 0x80, 0x3B, 0x49, 0x3B, 0x4A, 0x10, 0x1C, 0x08, 0x80, 0x3B, 0x4C
.byte 0x00, 0x20, 0x1D, 0xF0, 0x93, 0xFE, 0x01, 0x1C, 0x20, 0x1C, 0x50, 0xF0, 0x27, 0xFD, 0x01, 0x20
.byte 0x1D, 0xF0, 0xA8, 0xFE, 0x00, 0xF0, 0x9A, 0xFD, 0x00, 0x20, 0x1D, 0xF0, 0x87, 0xFE, 0x05, 0x80
.byte 0x33, 0x48, 0x34, 0x49, 0x50, 0xF0, 0x1A, 0xFD, 0x33, 0x48, 0x34, 0x49, 0x50, 0xF0, 0x16, 0xFD
.byte 0x33, 0x48, 0xC0, 0x21, 0xC9, 0x04, 0x50, 0xF0, 0x11, 0xFD, 0x32, 0x48, 0x32, 0x49, 0x50, 0xF0
.byte 0x0D, 0xFD, 0x32, 0x48, 0x32, 0x49, 0x50, 0xF0, 0x09, 0xFD, 0x00, 0xF0, 0x6F, 0xFD, 0x31, 0x49
.byte 0x31, 0x48, 0x08, 0x60, 0x31, 0x48, 0x48, 0x60, 0x31, 0x48, 0x88, 0x60, 0x88, 0x68, 0x31, 0x49
.byte 0x96, 0x23, 0xDB, 0x00, 0xF0, 0x18, 0x00, 0x68, 0x01, 0x30, 0x08, 0x70, 0x70, 0x88, 0x82, 0x20
.byte 0x80, 0x00, 0x70, 0x80, 0x30, 0x89, 0x2C, 0x48, 0x30, 0x81, 0xF0, 0x89, 0x0A, 0x20, 0xF0, 0x81
.byte 0xB0, 0x8A, 0x2A, 0x48, 0xB0, 0x82, 0x30, 0x88, 0xF2, 0x20, 0x40, 0x01, 0x30, 0x80, 0x70, 0x8B
.byte 0x27, 0x48, 0x70, 0x83, 0xB0, 0x8B, 0x27, 0x48, 0xB0, 0x83, 0xF0, 0x8B, 0xF5, 0x83, 0xB0, 0x89
.byte 0xB5, 0x81, 0x01, 0x20, 0x82, 0x44, 0x51, 0x46, 0x10, 0x29, 0x4B, 0xDC, 0x22, 0x49, 0x52, 0x46
.byte 0x90, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00
.byte 0x40, 0x18, 0x00, 0x68, 0x00, 0x02, 0xC0, 0x13, 0x1C, 0x4B, 0xC0, 0x18, 0x71, 0x89, 0x70, 0x81
.byte 0x70, 0x8B, 0x1B, 0x48, 0x70, 0x83, 0x10, 0x20, 0x51, 0x46, 0x40, 0x1A, 0x36, 0xE3, 0x00, 0x00
.byte 0x08, 0x02, 0x00, 0x04, 0x02, 0x02, 0x00, 0x04, 0xFF, 0xFF, 0x00, 0x00, 0x84, 0x56, 0x0C, 0x08
.byte 0xF0, 0x5E, 0x0C, 0x08, 0x00, 0x80, 0x00, 0x06, 0x24, 0x59, 0x0C, 0x08, 0x00, 0x20, 0x00, 0x06
.byte 0x08, 0x57, 0x0C, 0x08, 0x0C, 0x58, 0x0C, 0x08, 0x00, 0x60, 0x00, 0x06, 0x9C, 0x6D, 0x0C, 0x08
.byte 0x00, 0x10, 0x00, 0x06, 0xD4, 0x00, 0x00, 0x04, 0x00, 0x80, 0x30, 0x08, 0x00, 0x20, 0x00, 0x02
.byte 0x00, 0xD6, 0x00, 0x84, 0xC8, 0x20, 0x00, 0x02, 0x09, 0x44, 0x00, 0x00, 0x0A, 0x0C, 0x00, 0x00
.byte 0x44, 0x08, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0x00, 0xFF, 0xFF, 0xFF
.byte 0xC4, 0x08, 0x00, 0x00, 0x00, 0x22, 0x92, 0x46, 0xB0, 0x8B, 0x05, 0x48, 0xB0, 0x83, 0x70, 0x8B
.byte 0x04, 0x48, 0x70, 0x83, 0xF0, 0x8B, 0x10, 0x20, 0xF0, 0x83, 0x10, 0x23, 0x03, 0x93, 0x85, 0xE3
.byte 0x08, 0x10, 0x00, 0x00, 0x44, 0x08, 0x00, 0x00, 0x11, 0x20, 0x03, 0x90, 0x1D, 0x49, 0x00, 0x29
.byte 0x00, 0xD1, 0x1D, 0x49, 0x00, 0x20, 0x51, 0xF0, 0xC7, 0xFD, 0x1C, 0x49, 0x1C, 0x4A, 0x10, 0x1C
.byte 0x08, 0x80, 0x1C, 0x4A, 0x01, 0x20, 0x10, 0x80, 0x1B, 0x48, 0x00, 0x78, 0x96, 0x28, 0x09, 0xD1
.byte 0x1A, 0x48, 0x00, 0x68, 0x00, 0x28, 0x05, 0xD1, 0x10, 0x88, 0x80, 0x23, 0x9B, 0x01, 0x19, 0x1C
.byte 0x08, 0x43, 0x10, 0x80, 0x16, 0x49, 0x08, 0x20, 0x08, 0x80, 0x16, 0x48, 0x01, 0x22, 0x02, 0x80
.byte 0x15, 0x49, 0x16, 0x4B, 0xF0, 0x18, 0x08, 0x60, 0x15, 0x49, 0x70, 0x18, 0x00, 0x23, 0x02, 0x70
.byte 0x14, 0x4A, 0xB1, 0x18, 0x01, 0x20, 0x40, 0x42, 0x08, 0x60, 0x13, 0x49, 0xD6, 0x20, 0xC0, 0x01
.byte 0x08, 0x60, 0x12, 0x48, 0x03, 0x60, 0x12, 0x48, 0x12, 0x49, 0x80, 0x22, 0x52, 0x01, 0x50, 0xF0
.byte 0x35, 0xFC, 0x43, 0xE3, 0xCD, 0x13, 0x01, 0x08, 0xF1, 0xD5, 0x02, 0x08, 0x02, 0x02, 0x00, 0x04
.byte 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x00, 0x04, 0xB2, 0x00, 0x00, 0x08, 0xAC, 0x00, 0x00, 0x08
.byte 0x04, 0x00, 0x00, 0x04, 0x08, 0x02, 0x00, 0x04, 0xD8, 0x29, 0x00, 0x03, 0xB9, 0x04, 0x00, 0x00
.byte 0xE1, 0x04, 0x00, 0x00, 0xDC, 0x04, 0x00, 0x00, 0xD0, 0x29, 0x00, 0x03, 0xC4, 0x29, 0x00, 0x03
.byte 0xBC, 0xFA, 0x06, 0x08, 0x00, 0x79, 0x03, 0x02, 0x05, 0x48, 0x01, 0x68, 0x02, 0x1C, 0x05, 0x29
.byte 0x00, 0xD9, 0x21, 0xE1, 0x88, 0x00, 0x03, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0x00, 0x00
.byte 0xC4, 0x29, 0x00, 0x03, 0x4C, 0x0B, 0x01, 0x08, 0x64, 0x0B, 0x01, 0x08, 0x64, 0x0B, 0x01, 0x08
.byte 0xE4, 0x0B, 0x01, 0x08, 0x06, 0x0C, 0x01, 0x08, 0xA0, 0x0C, 0x01, 0x08, 0x6C, 0x0D, 0x01, 0x08
.byte 0x16, 0x4B, 0x00, 0x25, 0x1D, 0x80, 0x16, 0x4A, 0x11, 0x88, 0x16, 0x48, 0x08, 0x40, 0x10, 0x80
.byte 0x01, 0x20, 0x18, 0x80, 0x14, 0x4C, 0x21, 0x1C, 0x00, 0x2C, 0x00, 0xD1, 0x13, 0x49, 0x07, 0x20
.byte 0x51, 0xF0, 0x42, 0xFD, 0x21, 0x1C, 0x00, 0x29, 0x00, 0xD1, 0x10, 0x49, 0x06, 0x20, 0x51, 0xF0
.byte 0x3B, 0xFD, 0x0F, 0x4C, 0x20, 0x68, 0xF0, 0x21, 0x09, 0x01, 0x08, 0x40, 0x00, 0x0A, 0x0D, 0x49
.byte 0x01, 0xF0, 0x24, 0xF9, 0x9C, 0x23, 0xDB, 0x00, 0xF0, 0x18, 0x00, 0x21, 0x05, 0x70, 0x21, 0x60
.byte 0x09, 0x49, 0x08, 0x68, 0x00, 0x28, 0x11, 0xD1, 0x03, 0x20, 0xDC, 0xE0, 0x08, 0x02, 0x00, 0x04
.byte 0x00, 0x02, 0x00, 0x04, 0x3F, 0xFF, 0x00, 0x00, 0x55, 0x22, 0x01, 0x08, 0xF1, 0xD5, 0x02, 0x08
.byte 0xC0, 0x29, 0x00, 0x03, 0xDD, 0x3E, 0x00, 0x00, 0xC4, 0x29, 0x00, 0x03, 0x02, 0x20, 0xCA, 0xE0
.byte 0x24, 0x48, 0x01, 0x68, 0x10, 0x20, 0x08, 0x40, 0x00, 0x28, 0x0A, 0xD0, 0x40, 0x20, 0x01, 0x40
.byte 0x00, 0x29, 0x04, 0xD0, 0x20, 0x48, 0x01, 0x68, 0x08, 0x78, 0x01, 0x30, 0x08, 0x70, 0x03, 0x20
.byte 0x10, 0x60, 0x01, 0xF0, 0xB3, 0xFB, 0x1B, 0x4A, 0x10, 0x68, 0x20, 0x21, 0x08, 0x40, 0x00, 0x28
.byte 0x02, 0xD0, 0x1A, 0x49, 0x04, 0x20, 0x08, 0x60, 0x19, 0x49, 0x70, 0x18, 0x00, 0x78, 0x00, 0x28
.byte 0x09, 0xD0, 0x10, 0x68, 0x10, 0x21, 0x08, 0x40, 0x00, 0x28, 0x04, 0xD0, 0x9C, 0x22, 0xD2, 0x00
.byte 0xB1, 0x18, 0x01, 0x20, 0x08, 0x70, 0x13, 0x4B, 0xF0, 0x18, 0x13, 0x49, 0x74, 0x18, 0x9C, 0x22
.byte 0xD2, 0x00, 0xB1, 0x18, 0x0A, 0x78, 0x21, 0x1C, 0x01, 0xF0, 0x48, 0xF9, 0x09, 0x49, 0x08, 0x60
.byte 0x0E, 0x4B, 0x61, 0x79, 0x18, 0x78, 0x88, 0x42, 0x03, 0xD0, 0x19, 0x70, 0x0C, 0x49, 0x00, 0x20
.byte 0x08, 0x60, 0x0C, 0x4A, 0x0C, 0x49, 0x18, 0x78, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0x10, 0x60
.byte 0x82, 0xE0, 0x00, 0x00, 0xC0, 0x29, 0x00, 0x03, 0xD8, 0x29, 0x00, 0x03, 0xC4, 0x29, 0x00, 0x03
.byte 0xE1, 0x04, 0x00, 0x00, 0xB4, 0x04, 0x00, 0x00, 0xBC, 0x04, 0x00, 0x00, 0xBC, 0x29, 0x00, 0x03
.byte 0x54, 0x2C, 0x00, 0x03, 0x50, 0x2C, 0x00, 0x03, 0xA8, 0x9D, 0x0D, 0x08, 0x01, 0xF0, 0x72, 0xFB
.byte 0x22, 0x48, 0x00, 0x78, 0x09, 0x28, 0x22, 0xD1, 0x21, 0x49, 0x22, 0x4B, 0x18, 0x1C, 0x08, 0x80
.byte 0x21, 0x4A, 0x01, 0x20, 0x10, 0x80, 0x21, 0x48, 0x00, 0x78, 0x96, 0x28, 0x09, 0xD1, 0x20, 0x48
.byte 0x00, 0x68, 0x00, 0x28, 0x05, 0xD1, 0x10, 0x88, 0x80, 0x23, 0x9B, 0x01, 0x19, 0x1C, 0x08, 0x43
.byte 0x10, 0x80, 0x1C, 0x49, 0x18, 0x20, 0x08, 0x80, 0x1B, 0x49, 0x01, 0x20, 0x08, 0x80, 0x1B, 0x49
.byte 0x70, 0x18, 0x00, 0x21, 0x01, 0x70, 0x9C, 0x22, 0xD2, 0x00, 0xB0, 0x18, 0x01, 0x70, 0x12, 0x4A
.byte 0x11, 0x88, 0x17, 0x48, 0x08, 0x40, 0x10, 0x80, 0x16, 0x4C, 0x21, 0x1C, 0x00, 0x2C, 0x00, 0xD1
.byte 0x15, 0x49, 0x07, 0x20, 0x51, 0xF0, 0x80, 0xFC, 0x21, 0x1C, 0x00, 0x29, 0x00, 0xD1, 0x12, 0x49
.byte 0x06, 0x20, 0x51, 0xF0, 0x79, 0xFC, 0x11, 0x48, 0x00, 0x68, 0x80, 0x21, 0x08, 0x40, 0x10, 0x49
.byte 0x09, 0x68, 0x01, 0xF0, 0xD3, 0xFD, 0x0F, 0x49, 0x05, 0x20, 0x24, 0xE0, 0xBC, 0x29, 0x00, 0x03
.byte 0x02, 0x02, 0x00, 0x04, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x00, 0x04, 0xB2, 0x00, 0x00, 0x08
.byte 0xAC, 0x00, 0x00, 0x08, 0x04, 0x00, 0x00, 0x04, 0x08, 0x02, 0x00, 0x04, 0xE1, 0x04, 0x00, 0x00
.byte 0x3F, 0xFF, 0x00, 0x00, 0xE5, 0x27, 0x01, 0x08, 0xF1, 0xD5, 0x02, 0x08, 0xC0, 0x29, 0x00, 0x03
.byte 0x50, 0x2C, 0x00, 0x03, 0xC4, 0x29, 0x00, 0x03, 0x2D, 0x48, 0x01, 0xF0, 0x2D, 0xFC, 0x00, 0x28
.byte 0x02, 0xD0, 0x2C, 0x49, 0x01, 0x20, 0x08, 0x60, 0x80, 0x23, 0x9B, 0x01, 0x98, 0x46, 0x2A, 0x4F
.byte 0x27, 0x4D, 0x2A, 0x48, 0x01, 0x78, 0x2A, 0x48, 0x04, 0x68, 0x22, 0x1C, 0x00, 0x2C, 0x00, 0xDA
.byte 0xE2, 0x1C, 0x93, 0x10, 0x59, 0x43, 0x28, 0x68, 0x41, 0x18, 0xDA, 0x00, 0xD2, 0x18, 0x00, 0x96
.byte 0x24, 0x4B, 0xF0, 0x18, 0x01, 0x90, 0x38, 0x1C, 0x43, 0x46, 0x00, 0xF0, 0x63, 0xFB, 0x22, 0x49
.byte 0x70, 0x18, 0x00, 0x78, 0x00, 0x28, 0x00, 0xD0, 0xD8, 0xE1, 0x00, 0x22, 0x92, 0x46, 0x12, 0x23
.byte 0x03, 0x93, 0x1E, 0x49, 0x1E, 0x4A, 0x10, 0x1C, 0x08, 0x80, 0x1E, 0x4A, 0x01, 0x20, 0x10, 0x80
.byte 0x1D, 0x48, 0x00, 0x78, 0x96, 0x28, 0x07, 0xD1, 0x1C, 0x48, 0x00, 0x68, 0x00, 0x28, 0x03, 0xD1
.byte 0x11, 0x88, 0x40, 0x46, 0x08, 0x43, 0x10, 0x80, 0x19, 0x49, 0x18, 0x20, 0x08, 0x80, 0x19, 0x49
.byte 0x01, 0x20, 0x08, 0x80, 0x0E, 0x49, 0x88, 0x20, 0xC0, 0x01, 0x08, 0x60, 0x16, 0x48, 0x17, 0x4B
.byte 0xF1, 0x18, 0x01, 0x60, 0x00, 0x20, 0x08, 0x70, 0x0B, 0x49, 0x70, 0x18, 0x00, 0x22, 0x02, 0x70
.byte 0x23, 0x33, 0xF1, 0x18, 0x01, 0x20, 0x40, 0x42, 0x08, 0x60, 0x02, 0x48, 0x02, 0x60, 0xA5, 0xE1
.byte 0x54, 0x2C, 0x00, 0x03, 0xC4, 0x29, 0x00, 0x03, 0x86, 0x23, 0x00, 0x06, 0xBC, 0x29, 0x00, 0x03
.byte 0xD0, 0x29, 0x00, 0x03, 0xDC, 0x04, 0x00, 0x00, 0xE1, 0x04, 0x00, 0x00, 0x02, 0x02, 0x00, 0x04
.byte 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x00, 0x04, 0xB2, 0x00, 0x00, 0x08, 0xAC, 0x00, 0x00, 0x08
.byte 0x04, 0x00, 0x00, 0x04, 0x08, 0x02, 0x00, 0x04, 0xD8, 0x29, 0x00, 0x03, 0xB9, 0x04, 0x00, 0x00
.byte 0x30, 0x88, 0x10, 0x49, 0x01, 0x40, 0x30, 0x88, 0x31, 0x80, 0x01, 0x20, 0x82, 0x44, 0x51, 0x46
.byte 0x10, 0x29, 0x1B, 0xDC, 0x0C, 0x49, 0x52, 0x46, 0x90, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA
.byte 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x00, 0x68, 0x00, 0x02, 0xC0, 0x13
.byte 0x71, 0x89, 0x70, 0x81, 0x70, 0x8B, 0xFF, 0x20, 0x70, 0x83, 0xF0, 0x8B, 0x53, 0x46, 0xF3, 0x83
.byte 0x64, 0xE1, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x20, 0x82, 0x46
.byte 0x16, 0x21, 0x03, 0x91, 0x70, 0x8B, 0xFF, 0x20, 0x70, 0x83, 0xF0, 0x8B, 0x10, 0x20, 0xF0, 0x83
.byte 0x01, 0x20, 0x03, 0x49, 0x51, 0xF0, 0xA8, 0xFB, 0x02, 0x48, 0x50, 0xF0, 0xD1, 0xFF, 0x4D, 0xE1
.byte 0xFF, 0xFF, 0xFE, 0xFF, 0x8C, 0x21, 0x00, 0x02, 0x26, 0x22, 0x03, 0x92, 0x00, 0x23, 0x9A, 0x46
.byte 0x08, 0x4A, 0x09, 0x48, 0x81, 0x8A, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x80, 0x18, 0x00, 0x68
.byte 0x01, 0x21, 0x4F, 0xF0, 0xDF, 0xF8, 0x31, 0x88, 0x04, 0x48, 0x08, 0x40, 0x31, 0x88, 0x30, 0x80
.byte 0x34, 0xE1, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08, 0xFF, 0xFE, 0x00, 0x00
.byte 0x01, 0x20, 0x82, 0x44, 0x51, 0x46, 0x10, 0x29, 0x20, 0xDC, 0x0E, 0x49, 0x52, 0x46, 0x90, 0x06
.byte 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18
.byte 0x00, 0x68, 0x00, 0x02, 0xC0, 0x13, 0x71, 0x89, 0x70, 0x81, 0x07, 0x4B, 0xF2, 0x18, 0x71, 0x89
.byte 0xB8, 0x20, 0x40, 0x1A, 0x90, 0x80, 0x70, 0x8B, 0xFF, 0x20, 0x70, 0x83, 0xF0, 0x8B, 0x50, 0x46
.byte 0xF0, 0x83, 0x0B, 0xE1, 0x5C, 0x64, 0x0E, 0x08, 0x6C, 0x04, 0x00, 0x00, 0x70, 0x8B, 0xFF, 0x20
.byte 0x70, 0x83, 0xF0, 0x8B, 0x10, 0x20, 0xF0, 0x83, 0x0C, 0x48, 0x00, 0x06, 0x00, 0x0E, 0x00, 0x28
.byte 0x0A, 0xD0, 0x0B, 0x4D, 0x04, 0x1C, 0x28, 0x68, 0x0A, 0x49, 0x89, 0x68, 0x4F, 0xF0, 0x44, 0xFB
.byte 0x0C, 0x35, 0x01, 0x3C, 0x00, 0x2C, 0xF6, 0xD1, 0x07, 0x48, 0x08, 0x4A, 0x10, 0x60, 0x10, 0x7A
.byte 0x01, 0x30, 0x07, 0x21, 0x08, 0x40, 0x10, 0x72, 0x01, 0x20, 0xFB, 0xE0, 0x0B, 0x00, 0x00, 0x00
.byte 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08, 0xA9, 0x11, 0x01, 0x08, 0x20, 0x2E, 0x00, 0x03
.byte 0x30, 0x88, 0x00, 0x20, 0x30, 0x80, 0x27, 0x49, 0x00, 0x29, 0x00, 0xD1, 0x26, 0x49, 0x00, 0x20
.byte 0x51, 0xF0, 0x22, 0xFB, 0x25, 0x48, 0x26, 0x4C, 0x21, 0x1C, 0x50, 0xF0, 0xC9, 0xF9, 0x25, 0x49
.byte 0xA0, 0x25, 0xAD, 0x00, 0x20, 0x1C, 0x2A, 0x1C, 0x50, 0xF0, 0xB8, 0xF9, 0x22, 0x48, 0x21, 0x1C
.byte 0x50, 0xF0, 0xBE, 0xF9, 0x21, 0x49, 0x20, 0x1C, 0x2A, 0x1C, 0x50, 0xF0, 0xAF, 0xF9, 0x30, 0x88
.byte 0xF4, 0x20, 0x00, 0x01, 0x30, 0x80, 0xB0, 0x89, 0x30, 0x20, 0xB0, 0x81, 0x14, 0x21, 0x03, 0x91
.byte 0x00, 0x22, 0x92, 0x46, 0x01, 0x23, 0x9A, 0x44, 0x50, 0x46, 0x10, 0x28, 0x34, 0xDC, 0x18, 0x49
.byte 0x80, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D, 0x80, 0x00
.byte 0x40, 0x18, 0x00, 0x68, 0x00, 0x02, 0xC0, 0x13, 0x12, 0x49, 0x40, 0x18, 0x71, 0x89, 0x70, 0x81
.byte 0x70, 0x89, 0xB1, 0x88, 0xB0, 0x80, 0x70, 0x8B, 0xBF, 0x20, 0x70, 0x83, 0x52, 0x46
non_word_aligned_thumb_func_start sub_8011042
sub_8011042:
lsls r0, r2, #0x04
negs r0, r0
cmp r0, #0x00
bge _0801104C
adds r0, #0x0F
_0801104C:
asrs r0, r0, #0x04
adds r0, #0x10
ldrh r1, [r6, #0x1E]
strh r0, [r6, #0x1E]
b def_80101AC
.byte 0x00, 0x00, 0xCD, 0x13, 0x01, 0x08, 0xF1, 0xD5, 0x02, 0x08, 0xCC, 0x4C, 0x0C, 0x08, 0x00, 0x79
.byte 0x03, 0x02, 0x00, 0x10, 0x00, 0x06, 0xAC, 0x4D, 0x0C, 0x08, 0x00, 0x20, 0x00, 0x06, 0x5C, 0x64
.byte 0x0E, 0x08, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x23, 0x9A, 0x46, 0xB0, 0x8B, 0x08, 0x48, 0xB0, 0x83
.byte 0x70, 0x8B, 0x07, 0x48, 0x70, 0x83, 0xF0, 0x8B, 0x10, 0x20, 0xF0, 0x83, 0x15, 0x20, 0x03, 0x90
.byte 0x05, 0x48, 0x51, 0x46, 0xC1, 0x82, 0x1C, 0xF0, 0xD2, 0xFD, 0x66, 0xE0, 0x00, 0x00, 0x08, 0x10
.byte 0x00, 0x00, 0x44, 0x08, 0x00, 0x00, 0x80, 0x2C, 0x00, 0x03, 0x04, 0x48, 0x01, 0x88, 0x09, 0x20
.byte 0x08, 0x40, 0x00, 0x28, 0x59, 0xD0, 0x2A, 0x22, 0x03, 0x92, 0x56, 0xE0, 0x00, 0x00, 0xE0, 0x2A
.byte 0x00, 0x03, 0x01, 0x23, 0x9A, 0x44, 0x50, 0x46, 0x10, 0x28, 0x06, 0xDC, 0x70, 0x8B, 0xBF, 0x20
non_word_aligned_thumb_func_start sub_80110D6
sub_80110D6:
strh r0, [r6, #0x1A]
ldrh r0, [r6, #0x1E]
mov r1, r10
strh r1, [r6, #0x1E]
b def_80101AC
.byte 0x52, 0x46, 0x28, 0x2A, 0x44, 0xDD, 0x70, 0x8B, 0x00, 0x25, 0xBF, 0x20, 0x70, 0x83, 0xF0, 0x8B
.byte 0x10, 0x20, 0xF0, 0x83, 0x4E, 0xF0, 0xAE, 0xFF, 0x4F, 0xF0, 0xFE, 0xF9, 0x16, 0x48, 0x17, 0x4C
.byte 0x20, 0x60, 0x20, 0x7A, 0x01, 0x30, 0x07, 0x21, 0x08, 0x40, 0x20, 0x72, 0x51, 0xF0, 0x60, 0xFA
.byte 0x13, 0x49, 0x00, 0x29, 0x00, 0xD1, 0x13, 0x49, 0x00, 0x20, 0x51, 0xF0, 0x77, 0xFA, 0x12, 0x49
.byte 0x00, 0x29, 0x00, 0xD1, 0x0F, 0x49, 0x02, 0x20, 0x51, 0xF0, 0x70, 0xFA, 0x01, 0x20, 0x02, 0x21
.byte 0x49, 0x42, 0x51, 0xF0, 0x73, 0xFA, 0xE5, 0x60, 0x02, 0x20, 0x0C, 0x49, 0x51, 0xF0, 0x6E, 0xFA
.byte 0x1F, 0xF0, 0x8A, 0xF9, 0x4F, 0xF0, 0x0A, 0xFA, 0x02, 0x20, 0x80, 0x21, 0x49, 0x02, 0x51, 0xF0
.byte 0x65, 0xFA, 0x01, 0x20, 0x20, 0xE0, 0x00, 0x00, 0x6D, 0x0E, 0x00, 0x08, 0x20, 0x2E, 0x00, 0x03
.byte 0xBD, 0xD2, 0x02, 0x08, 0xF1, 0xD5, 0x02, 0x08, 0x61, 0x05, 0x03, 0x08, 0x01, 0x00, 0x01, 0x00
thumb_func_start def_80101AC
def_80101AC: @ 08011170
adds r0, r6, #0x0
bl sub_800EDFC
adds r0, r6, #0x0
bl sub_800F140
adds r0, r6, #0x0
bl sub_800EE7C
ldr r3, [sp, #0x00C]
cmp r3, #0x0D
bgt _0801118E
adds r0, r6, #0x0
bl sub_800F618
_0801118E:
adds r0, r6, #0x0
bl sub_800F3C8
bl sub_800FFEC
add sp, #0x018
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r1}
bx r1
thumb_func_start sub_80111A8
sub_80111A8:
push {r4, r5, r6, r7, lr}
mov r7, r9
mov r6, r8
push {r6, r7}
movs r7, #0x00
movs r0, #0x00
mov r8, r0
ldr r1, _08011248 @ =0x04000200
movs r0, #0x01
strh r0, [r1, #0x00]
ldr r1, _0801124C @ =0x06001000
movs r0, #0x00
bl map_setBufferDestination
ldr r4, _08011250 @ =0x03000100
movs r0, #0x01
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
str r0, [r4, #0x00]
adds r6, r0, #0x0
movs r1, #0x00
ldr r3, _08011254 @ =0x000004E3
movs r2, #0x00
_080111DA:
strb r2, [r0, #0x00]
adds r0, #0x01
adds r1, #0x01
cmp r1, r3
bls _080111DA
bl oam_init
ldr r5, _08011258 @ =0x0800F77D
ldr r4, _0801125C @ =0x03002E20
movs r0, #0x01
movs r1, #0x02
negs r1, r1
bl irq_updateMask
str r5, [r4, #0x0C]
movs r0, #0x02
ldr r1, _08011260 @ =0x00010001
bl irq_updateMask
ldr r1, _08011264 @ =0x08011385
cmp r1, #0x00
bne _08011208
ldr r1, _08011268 @ =0x0802D5F1
_08011208:
movs r0, #0x00
bl irq_setHandler
movs r1, #0x80
lsls r1, r1, #0x09
movs r0, #0x02
bl irq_updateMask
movs r0, #0x92
bl m4aSongNumStart
ldr r1, _0801126C @ =0x00000844
mov r9, r1
ldr r5, _08011270 @ =0x00001008
_08011224:
bl oam_update
bl VBlankIntrWait
bl m4aSoundMain
movs r2, #0xFB
lsls r2, r2, #0x02
adds r1, r6, r2
ldr r0, [r1, #0x00]
adds r0, #0x01
str r0, [r1, #0x00]
cmp r7, #0x00
beq _08011274
cmp r7, #0x01
beq _080112E6
b _08011224
.byte 0x00, 0x00
_08011248: .4byte 0x04000200
_0801124C: .4byte 0x06001000
_08011250: .4byte 0x03000100
_08011254: .4byte 0x000004E3
_08011258: .4byte sub_800F77C
_0801125C: .4byte 0x03002E20
_08011260: .4byte 0x00010001
_08011264: .4byte sub_8011384
_08011268: .4byte main_dummyIrqHandler
_0801126C: .4byte 0x00000844
_08011270: .4byte 0x00001008
_08011274:
ldrh r0, [r6, #0x00]
movs r4, #0x00
strh r7, [r6, #0x00]
ldr r1, _08011334 @ =0x080113CD
cmp r1, #0x00
bne _08011282
ldr r1, _08011338 @ =0x0802D5F1
_08011282:
movs r0, #0x00
bl irq_setHandler
movs r4, #0xA0
lsls r4, r4, #0x13
ldr r0, _0801133C @ =0x080C5684
adds r1, r4, #0x0
bl LZ77UnCompVram
strh r7, [r4, #0x00]
ldr r0, _08011340 @ =0x080C5EF0
ldr r1, _08011344 @ =0x06008000
bl LZ77UnCompVram
ldr r0, _08011348 @ =0x080C5C34
ldr r1, _0801134C @ =0x06002000
bl LZ77UnCompVram
ldr r0, _08011350 @ =0x080C5708
movs r1, #0xC0
lsls r1, r1, #0x13
bl LZ77UnCompVram
ldr r0, _08011354 @ =0x080C580C
ldr r1, _08011358 @ =0x06006000
bl LZ77UnCompVram
ldrh r0, [r6, #0x02]
movs r0, #0x82
lsls r0, r0, #0x02
strh r0, [r6, #0x02]
ldrh r0, [r6, #0x08]
ldr r0, _0801135C @ =0x00004409
strh r0, [r6, #0x08]
ldrh r0, [r6, #0x0E]
movs r0, #0x0A
strh r0, [r6, #0x0E]
ldrh r0, [r6, #0x14]
ldr r0, _08011360 @ =0x00000C0A
strh r0, [r6, #0x14]
ldrh r0, [r6, #0x00]
movs r0, #0xE4
lsls r0, r0, #0x04
strh r0, [r6, #0x00]
ldrh r0, [r6, #0x1A]
mov r0, r9
strh r0, [r6, #0x1A]
ldrh r0, [r6, #0x1C]
strh r5, [r6, #0x1C]
movs r7, #0x01
_080112E6:
movs r1, #0x01
add r8, r1
mov r2, r8
cmp r2, #0x10
bgt _0801136C
ldr r1, _08011364 @ =0x080E645C
lsls r0, r2, #0x1A
asrs r0, r0, #0x10
cmp r0, #0x00
bge _080112FC
adds r0, #0x3F
_080112FC:
lsls r0, r0, #0x10
lsrs r0, r0, #0x16
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r0, [r0, #0x00]
lsls r0, r0, #0x08
asrs r0, r0, #0x0F
ldr r1, _08011368 @ =0xFFFFFF00
adds r0, r0, r1
ldrh r1, [r6, #0x0A]
strh r0, [r6, #0x0A]
ldrh r0, [r6, #0x0A]
ldrh r1, [r6, #0x04]
strh r0, [r6, #0x04]
ldrh r0, [r6, #0x1A]
movs r0, #0xBF
strh r0, [r6, #0x1A]
mov r2, r8
lsls r0, r2, #0x04
negs r0, r0
cmp r0, #0x00
bge _0801132A
adds r0, #0x0F
_0801132A:
asrs r0, r0, #0x04
adds r0, #0x10
ldrh r1, [r6, #0x1E]
strh r0, [r6, #0x1E]
b _08011224
_08011334: .4byte sub_80113CC
_08011338: .4byte main_dummyIrqHandler
_0801133C: .4byte 0x080C5684
_08011340: .4byte 0x080C5EF0
_08011344: .4byte 0x06008000
_08011348: .4byte 0x080C5C34
_0801134C: .4byte 0x06002000
_08011350: .4byte 0x080C5708
_08011354: .4byte 0x080C580C
_08011358: .4byte 0x06006000
_0801135C: .4byte 0x00004409
_08011360: .4byte 0x00000C0A
_08011364: .4byte 0x080E645C
_08011368: .4byte 0xFFFFFF00
_0801136C:
movs r0, #0x00
mov r8, r0
ldrh r0, [r6, #0x1C]
strh r5, [r6, #0x1C]
ldrh r0, [r6, #0x1A]
mov r1, r9
strh r1, [r6, #0x1A]
ldrh r0, [r6, #0x1E]
movs r0, #0x10
strh r0, [r6, #0x1E]
movs r7, #0x15
b _08011224
thumb_func_start sub_8011384
sub_8011384:
push {lr}
bl SoundVSync_rev01
bl main_increaseFrameCounter
ldr r1, _080113C4 @ =0x040000BA
movs r0, #0x00
strh r0, [r1, #0x00]
bl oam_cpuCopyToHw
bl dmaq_getVBlankDmaQueue
bl dmaq_process
bl pltt_copyBufferToHw
bl map_copyBuffersToHw
bl oam_reset
ldr r0, _080113C8 @ =0x03002E20
ldr r0, [r0, #0x0C]
cmp r0, #0x00
beq _080113B8
bl _call_via_r0
_080113B8:
bl sub_80113F4
bl main_setVBlankCheckFlag
pop {r0}
bx r0
_080113C4: .4byte 0x040000BA
_080113C8: .4byte 0x03002E20
thumb_func_start sub_80113CC
sub_80113CC:
push {lr}
bl SoundVSync_rev01
bl main_increaseFrameCounter
ldr r0, _080113F0 @ =0x03002E20
ldr r0, [r0, #0x0C]
cmp r0, #0x00
beq _080113E2
bl _call_via_r0
_080113E2:
bl sub_80113F4
bl main_setVBlankCheckFlag
pop {r0}
bx r0
.byte 0x00, 0x00
_080113F0: .4byte 0x03002E20
thumb_func_start sub_80113F4
sub_80113F4:
push {r4, lr}
ldr r0, _08011414 @ =0x04000130
ldrh r0, [r0, #0x00]
ldr r2, _08011418 @ =0x000003FF
adds r1, r2, #0x0
eors r1, r0
ldr r4, _0801141C @ =0x03002AE0
ldr r3, _08011420 @ =0x030029AC
ldrh r2, [r3, #0x00]
adds r0, r1, #0x0
bics r0, r2
strh r0, [r4, #0x00]
strh r1, [r3, #0x00]
pop {r4}
pop {r0}
bx r0
_08011414: .4byte 0x04000130
_08011418: .4byte 0x000003FF
_0801141C: .4byte 0x03002AE0
_08011420: .4byte 0x030029AC
thumb_func_start sub_8011424
sub_8011424:
push {lr}
bl main_frameProc
pop {r0}
bx r0
.byte 0x00, 0x00
thumb_func_start sub_8011430
sub_8011430:
ldr r1, _0801144C @ =0x06002478
movs r0, #0x52
strh r0, [r1, #0x00]
adds r1, #0x40
movs r0, #0x5D
strh r0, [r1, #0x00]
subs r1, #0x42
movs r0, #0x39
strh r0, [r1, #0x00]
adds r1, #0x40
movs r0, #0x3A
strh r0, [r1, #0x00]
bx lr
.byte 0x00, 0x00
_0801144C: .4byte 0x06002478
thumb_func_start sub_8011450
sub_8011450:
push {r4, lr}
ldr r4, _08011470 @ =0x080C6EAC
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
movs r0, #0x80
lsls r0, r0, #0x01
adds r1, r1, r0
adds r0, r4, #0x0
movs r2, #0x10
bl CpuSet
pop {r4}
pop {r0}
bx r0
_08011470: .4byte 0x080C6EAC
thumb_func_start main_dummyIrqHandler5
main_dummyIrqHandler5: @ 08011474
bx lr
.byte 0x00, 0x00
thumb_func_start sub_8011478
sub_8011478:
push {r4, r5, lr}
adds r3, r1, #0x0
adds r1, r2, #0x0
ldr r4, [sp, #0x00C]
ldr r5, [sp, #0x010]
movs r0, #0xB0
muls r0, r3
bl __divsi3
adds r3, r0, #0x0
cmp r3, #0xB0
ble _08011492
movs r3, #0x00
_08011492:
ldr r0, [r5, #0x00]
cmp r0, r3
bgt _080114AC
adds r0, #0x0A
cmp r0, r3
blt _080114AC
str r3, [r5, #0x00]
movs r1, #0x10
negs r1, r1
adds r0, r1, #0x0
subs r0, r0, r3
ldrh r1, [r4, #0x04]
strh r0, [r4, #0x04]
_080114AC:
ldr r0, _080114C4 @ =0x030029B0
ldr r1, [r0, #0x00]
adds r1, #0x01
str r1, [r0, #0x00]
movs r0, #0x04
ands r1, r0
cmp r1, #0x00
beq _080114CC
ldrh r0, [r4, #0x06]
ldr r0, _080114C8 @ =0x0000FF94
b _080114D0
.byte 0x00, 0x00
_080114C4: .4byte 0x030029B0
_080114C8: .4byte 0x0000FF94
_080114CC:
ldrh r0, [r4, #0x06]
ldr r0, _080114E8 @ =0x0000FF93
_080114D0:
strh r0, [r4, #0x06]
ldrh r0, [r4, #0x00]
movs r2, #0x80
lsls r2, r2, #0x01
adds r1, r2, #0x0
ldrh r2, [r4, #0x00]
orrs r1, r0
strh r1, [r4, #0x00]
pop {r4, r5}
pop {r0}
bx r0
.byte 0x00, 0x00
_080114E8: .4byte 0x0000FF93
.byte 0x10, 0xB5, 0x04, 0x1C, 0x12, 0x06, 0x12, 0x0E, 0x1B, 0x06, 0x1B, 0x0B, 0x08, 0x20, 0x80, 0x1A
.byte 0x80, 0x00, 0x84, 0x40, 0x00, 0x2A, 0x0C, 0xD0, 0x20, 0x0F, 0x09, 0x28, 0x01, 0xD8, 0x30, 0x30
.byte 0x00, 0xE0, 0x37, 0x30, 0x18, 0x43, 0x08, 0x80, 0x24, 0x01, 0x02, 0x31, 0x01, 0x3A, 0x00, 0x2A
.byte 0xF2, 0xD1, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47
thumb_func_start sub_8011524
sub_8011524:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x004
adds r7, r0, #0x0
bl sub_8011D98
cmp r0, #0x00
beq _0801153C
b _08011A2C
_0801153C:
adds r0, r7, #0x0
adds r0, #0x4A
ldrb r1, [r0, #0x00]
str r0, [sp, #0x000]
cmp r1, #0x0F
bls _08011550
subs r0, r1, #0x1
ldr r1, [sp, #0x000]
strb r0, [r1, #0x00]
b _08011A2C
_08011550:
adds r0, r7, #0x0
adds r0, #0x48
ldrb r1, [r0, #0x00]
mov r10, r0
cmp r1, #0x00
beq _080115A4
movs r1, #0x00
strb r1, [r0, #0x00]
ldr r2, _08011594 @ =0x04000128
ldrh r0, [r2, #0x00]
movs r5, #0xFC
ands r5, r0
cmp r5, #0x08
beq _080115A4
strb r1, [r7, #0x1E]
strb r1, [r7, #0x18]
strb r1, [r7, #0x1D]
movs r0, #0x0F
ldr r3, [sp, #0x000]
strb r0, [r3, #0x00]
mov r0, r10
strb r1, [r0, #0x00]
strh r1, [r7, #0x16]
ldr r0, _08011598 @ =0x04000134
strh r1, [r0, #0x00]
ldr r3, _0801159C @ =0x00002003
adds r0, r3, #0x0
strh r0, [r2, #0x00]
ldr r0, _080115A0 @ =0x0400012A
strh r1, [r0, #0x00]
movs r0, #0x08
eors r0, r5
b _08011A2E
.byte 0x00, 0x00
_08011594: .4byte 0x04000128
_08011598: .4byte 0x04000134
_0801159C: .4byte 0x00002003
_080115A0: .4byte 0x0400012A
_080115A4:
ldrb r0, [r7, #0x18]
cmp r0, #0xDF
bls _08011626
adds r0, r7, #0x0
bl sub_8011C40
adds r5, r0, #0x0
cmp r5, #0x00
beq _080115B8
b _08011A2E
_080115B8:
adds r0, r7, #0x0
adds r0, #0x4B
ldrb r0, [r0, #0x00]
cmp r0, #0x01
bne _080115D4
ldrb r0, [r7, #0x18]
cmp r0, #0xE1
bls _080115D4
adds r0, r7, #0x0
bl sub_8011D98
cmp r0, #0x00
bne _080115D4
b _080119B8
_080115D4:
adds r0, r7, #0x0
bl sub_8011D98
cmp r0, #0x00
beq _080115E0
b _08011A2C
_080115E0:
ldrh r0, [r7, #0x16]
adds r2, r0, #0x0
cmp r2, #0x00
bne _08011620
strb r2, [r7, #0x1E]
strb r2, [r7, #0x18]
strb r2, [r7, #0x1D]
movs r0, #0x0F
ldr r1, [sp, #0x000]
strb r0, [r1, #0x00]
mov r3, r10
strb r2, [r3, #0x00]
strh r2, [r7, #0x16]
ldr r0, _08011610 @ =0x04000134
strh r2, [r0, #0x00]
ldr r1, _08011614 @ =0x04000128
ldr r3, _08011618 @ =0x00002003
adds r0, r3, #0x0
strh r0, [r1, #0x00]
ldr r0, _0801161C @ =0x0400012A
strh r2, [r0, #0x00]
movs r0, #0x71
b _08011A2E
.byte 0x00, 0x00
_08011610: .4byte 0x04000134
_08011614: .4byte 0x04000128
_08011618: .4byte 0x00002003
_0801161C: .4byte 0x0400012A
_08011620:
subs r0, #0x01
strh r0, [r7, #0x16]
b _08011A2C
_08011626:
ldrb r0, [r7, #0x18]
cmp r0, #0x02
bne _0801162E
b _08011768
_0801162E:
cmp r0, #0x02
bgt _0801163C
cmp r0, #0x00
beq _0801164A
cmp r0, #0x01
beq _08011708
b _080118D8
_0801163C:
cmp r0, #0xD0
bne _08011642
b _080117B4
_08011642:
cmp r0, #0xD1
bne _08011648
b _08011854
_08011648:
b _080118D8
_0801164A:
movs r3, #0x0E
movs r5, #0x03
ldr r0, _08011690 @ =0x04000120
ldrh r0, [r0, #0x06]
adds r1, r0, #0x0
ldr r0, _08011694 @ =0x0000FFFF
ldrb r2, [r7, #0x1E]
adds r6, r2, #0x0
cmp r1, r0
bne _08011672
adds r4, r1, #0x0
ldr r1, _08011698 @ =0x04000126
_08011662:
asrs r3, r3, #0x01
subs r1, #0x02
subs r5, #0x01
cmp r5, #0x00
beq _08011672
ldrh r0, [r1, #0x00]
cmp r0, r4
beq _08011662
_08011672:
movs r0, #0x0E
ands r3, r0
strb r3, [r7, #0x1D]
movs r5, #0x03
ldr r0, _08011690 @ =0x04000120
ldrh r0, [r0, #0x06]
adds r4, r0, #0x0
asrs r0, r2, #0x03
movs r1, #0x01
ands r0, r1
cmp r0, #0x00
beq _080116A0
ldr r0, _0801169C @ =0x00007208
b _080116C6
.byte 0x00, 0x00
_08011690: .4byte 0x04000120
_08011694: .4byte 0x0000FFFF
_08011698: .4byte 0x04000126
_0801169C: .4byte 0x00007208
_080116A0:
subs r5, #0x01
cmp r5, #0x00
beq _080116CC
lsls r0, r5, #0x01
ldr r1, _080116F4 @ =0x04000120
adds r0, r0, r1
ldrh r0, [r0, #0x00]
adds r4, r0, #0x0
adds r0, r2, #0x0
asrs r0, r5
movs r1, #0x01
ands r0, r1
cmp r0, #0x00
beq _080116A0
adds r0, r1, #0x0
lsls r0, r5
movs r1, #0xE4
lsls r1, r1, #0x07
orrs r0, r1
_080116C6:
cmp r4, r0
beq _080116A0
movs r3, #0x00
_080116CC:
adds r0, r3, #0x0
ands r0, r6
strb r0, [r7, #0x1E]
cmp r3, #0x00
bne _080116DC
movs r0, #0x0F
ldr r2, [sp, #0x000]
strb r0, [r2, #0x00]
_080116DC:
ldr r3, [sp, #0x000]
ldrb r0, [r3, #0x00]
cmp r0, #0x00
bne _080116F8
ldrb r0, [r7, #0x1D]
ldrb r1, [r7, #0x1E]
cmp r0, r1
beq _080116FE
adds r0, r7, #0x0
bl sub_8011AB8
b _08011708
_080116F4: .4byte 0x04000120
_080116F8:
subs r0, #0x01
ldr r2, [sp, #0x000]
strb r0, [r2, #0x00]
_080116FE:
ldrb r1, [r7, #0x1E]
movs r3, #0xC4
lsls r3, r3, #0x07
adds r0, r3, #0x0
b _08011812
_08011708:
adds r1, r7, #0x0
adds r1, #0x49
movs r0, #0x00
strb r0, [r1, #0x00]
movs r5, #0x03
mov r12, r1
ldr r3, _08011760 @ =0x03000158
_08011716:
lsls r0, r5, #0x01
ldr r2, _08011764 @ =0x04000120
adds r0, r0, r2
ldrh r0, [r0, #0x00]
adds r4, r0, #0x0
asrs r0, r4, #0x08
subs r2, r5, #0x1
cmp r0, #0x72
bne _08011740
lsls r0, r2, #0x01
adds r0, r0, r3
strh r4, [r0, #0x00]
movs r0, #0xFF
ands r4, r0
movs r0, #0x01
lsls r0, r5
cmp r4, r0
bne _08011740
ldrb r0, [r1, #0x00]
orrs r4, r0
strb r4, [r1, #0x00]
_08011740:
adds r5, r2, #0x0
cmp r5, #0x00
bne _08011716
ldrb r0, [r7, #0x1D]
mov r3, r12
ldrb r3, [r3, #0x00]
cmp r0, r3
bne _080116FE
movs r0, #0x02
strb r0, [r7, #0x18]
mov r0, r12
ldrb r1, [r0, #0x00]
movs r2, #0xC2
lsls r2, r2, #0x07
b _08011810
.byte 0x00, 0x00
_08011760: .4byte 0x03000158
_08011764: .4byte 0x04000120
_08011768:
movs r5, #0x03
movs r3, #0x49
adds r3, r3, r7
mov r12, r3
mov r4, r12
movs r6, #0x01
ldr r0, _080117AC @ =0x03000158
mov r9, r0
ldr r1, _080117B0 @ =0x04000120
mov r8, r1
_0801177C:
ldrb r3, [r4, #0x00]
adds r0, r3, #0x0
asrs r0, r5
ands r0, r6
subs r2, r5, #0x1
cmp r0, #0x00
beq _080117A2
lsls r0, r5, #0x01
add r0, r8
ldrh r1, [r0, #0x00]
lsls r0, r2, #0x01
add r0, r9
ldrh r0, [r0, #0x00]
cmp r1, r0
beq _080117A2
adds r0, r6, #0x0
lsls r0, r5
eors r3, r0
strb r3, [r4, #0x00]
_080117A2:
adds r5, r2, #0x0
cmp r5, #0x00
bne _0801177C
b _08011940
.byte 0x00, 0x00
_080117AC: .4byte 0x03000158
_080117B0: .4byte 0x04000120
_080117B4:
movs r3, #0x01
movs r5, #0x03
movs r2, #0x49
adds r2, r2, r7
mov r12, r2
movs r0, #0x19
adds r0, r0, r7
mov r8, r0
movs r6, #0x00
ldr r1, _0801181C @ =0x03000158
mov r9, r1
_080117CA:
lsls r0, r5, #0x01
ldr r2, _08011820 @ =0x04000120
adds r0, r0, r2
ldrh r0, [r0, #0x00]
adds r4, r0, #0x0
subs r2, r5, #0x1
mov r1, r8
adds r0, r1, r2
strb r4, [r0, #0x00]
mov r0, r12
ldrb r1, [r0, #0x00]
asrs r1, r5
movs r0, #0x01
ands r1, r0
cmp r1, #0x00
beq _08011800
asrs r0, r4, #0x08
subs r0, #0x72
cmp r0, #0x01
bls _080117F4
b _080119BE
_080117F4:
lsls r0, r2, #0x01
add r0, r9
ldrh r0, [r0, #0x00]
cmp r4, r0
bne _08011800
movs r3, #0x00
_08011800:
adds r5, r2, #0x0
cmp r5, #0x00
bne _080117CA
cmp r3, #0x00
bne _08011824
ldrb r1, [r7, #0x1C]
movs r2, #0xC6
lsls r2, r2, #0x07
_08011810:
adds r0, r2, #0x0
_08011812:
orrs r1, r0
adds r0, r7, #0x0
bl sub_8011A40
b _08011A2E
_0801181C: .4byte 0x03000158
_08011820: .4byte 0x04000120
_08011824:
movs r0, #0xD1
strb r0, [r7, #0x18]
movs r3, #0x11
movs r5, #0x03
mov r1, r8
adds r1, #0x02
_08011830:
ldrb r0, [r1, #0x00]
adds r3, r3, r0
subs r1, #0x01
subs r5, #0x01
cmp r5, #0x00
bne _08011830
strb r3, [r7, #0x14]
movs r0, #0xFF
ands r3, r0
movs r1, #0xC8
lsls r1, r1, #0x07
adds r0, r1, #0x0
orrs r3, r0
adds r0, r7, #0x0
adds r1, r3, #0x0
bl sub_8011A40
b _08011A2E
_08011854:
movs r5, #0x03
movs r2, #0x49
ldrb r1, [r2, r7]
ldr r2, _08011894 @ =0x04000126
movs r3, #0x01
_0801185E:
ldrh r0, [r2, #0x00]
adds r4, r0, #0x0
adds r0, r1, #0x0
asrs r0, r5
ands r0, r3
cmp r0, #0x00
beq _08011874
asrs r0, r4, #0x08
cmp r0, #0x73
beq _08011874
b _080119F4
_08011874:
subs r2, #0x02
subs r5, #0x01
cmp r5, #0x00
bne _0801185E
adds r0, r7, #0x0
bl MultiBoot
adds r5, r0, #0x0
cmp r5, #0x00
bne _08011898
movs r0, #0xE0
strb r0, [r7, #0x18]
adds r0, #0xB0
strh r0, [r7, #0x16]
b _08011A2C
.byte 0x00, 0x00
_08011894: .4byte 0x04000126
_08011898:
movs r1, #0x00
strb r1, [r7, #0x1E]
strb r1, [r7, #0x18]
strb r1, [r7, #0x1D]
movs r0, #0x0F
ldr r3, [sp, #0x000]
strb r0, [r3, #0x00]
mov r0, r10
strb r1, [r0, #0x00]
strh r1, [r7, #0x16]
ldr r0, _080118C8 @ =0x04000134
strh r1, [r0, #0x00]
ldr r2, _080118CC @ =0x04000128
ldr r3, _080118D0 @ =0x00002003
adds r0, r3, #0x0
strh r0, [r2, #0x00]
ldr r0, _080118D4 @ =0x0400012A
strh r1, [r0, #0x00]
movs r0, #0x1E
ldr r1, [sp, #0x000]
strb r0, [r1, #0x00]
movs r0, #0x70
b _08011A2E
.byte 0x00, 0x00
_080118C8: .4byte 0x04000134
_080118CC: .4byte 0x04000128
_080118D0: .4byte 0x00002003
_080118D4: .4byte 0x0400012A
_080118D8:
movs r5, #0x03
movs r2, #0x49
adds r2, r2, r7
mov r12, r2
mov r8, r12
movs r3, #0x01
mov r9, r3
_080118E6:
mov r0, r8
ldrb r6, [r0, #0x00]
adds r0, r6, #0x0
asrs r0, r5
mov r1, r9
ands r0, r1
cmp r0, #0x00
beq _08011920
lsls r0, r5, #0x01
ldr r2, _0801193C @ =0x04000120
adds r0, r0, r2
ldrh r0, [r0, #0x00]
adds r4, r0, #0x0
asrs r2, r4, #0x08
ldrb r0, [r7, #0x18]
lsrs r0, r0, #0x01
movs r1, #0x62
subs r1, r1, r0
mov r3, r9
lsls r3, r5
cmp r2, r1
bne _0801191A
movs r0, #0xFF
ands r4, r0
cmp r4, r3
beq _08011920
_0801191A:
eors r6, r3
mov r3, r8
strb r6, [r3, #0x00]
_08011920:
subs r5, #0x01
cmp r5, #0x00
bne _080118E6
ldrb r0, [r7, #0x18]
cmp r0, #0xC4
bne _08011940
mov r0, r12
ldrb r1, [r0, #0x00]
movs r0, #0x0E
ands r0, r1
strb r0, [r7, #0x1E]
strb r5, [r7, #0x18]
b _080116FE
.byte 0x00, 0x00
_0801193C: .4byte 0x04000120
_08011940:
mov r1, r12
ldrb r2, [r1, #0x00]
cmp r2, #0x00
bne _08011980
strb r2, [r7, #0x1E]
strb r2, [r7, #0x18]
strb r2, [r7, #0x1D]
movs r0, #0x0F
ldr r3, [sp, #0x000]
strb r0, [r3, #0x00]
mov r0, r10
strb r2, [r0, #0x00]
strh r2, [r7, #0x16]
ldr r0, _08011970 @ =0x04000134
strh r2, [r0, #0x00]
ldr r1, _08011974 @ =0x04000128
ldr r3, _08011978 @ =0x00002003
adds r0, r3, #0x0
strh r0, [r1, #0x00]
ldr r0, _0801197C @ =0x0400012A
strh r2, [r0, #0x00]
movs r0, #0x50
b _08011A2E
.byte 0x00, 0x00
_08011970: .4byte 0x04000134
_08011974: .4byte 0x04000128
_08011978: .4byte 0x00002003
_0801197C: .4byte 0x0400012A
_08011980:
ldrb r0, [r7, #0x18]
adds r0, #0x02
strb r0, [r7, #0x18]
lsls r0, r0, #0x18
lsrs r0, r0, #0x18
cmp r0, #0xC4
bne _08011990
b _080116FE
_08011990:
ldrb r0, [r7, #0x18]
ldr r1, [r7, #0x28]
adds r0, r0, r1
subs r1, r0, #0x3
ldrb r2, [r1, #0x00]
lsls r2, r2, #0x08
subs r0, #0x04
ldrb r1, [r0, #0x00]
orrs r1, r2
adds r0, r7, #0x0
bl sub_8011A40
adds r5, r0, #0x0
cmp r5, #0x00
bne _08011A2E
adds r0, r7, #0x0
adds r0, #0x4B
ldrb r0, [r0, #0x00]
cmp r0, #0x01
bne _08011A2C
_080119B8:
bl sub_8011DA8
b _08011550
_080119BE:
strb r6, [r7, #0x1E]
strb r6, [r7, #0x18]
strb r6, [r7, #0x1D]
movs r0, #0x0F
ldr r1, [sp, #0x000]
strb r0, [r1, #0x00]
mov r2, r10
strb r6, [r2, #0x00]
strh r6, [r7, #0x16]
ldr r0, _080119E4 @ =0x04000134
strh r6, [r0, #0x00]
ldr r1, _080119E8 @ =0x04000128
ldr r3, _080119EC @ =0x00002003
adds r0, r3, #0x0
strh r0, [r1, #0x00]
ldr r0, _080119F0 @ =0x0400012A
strh r6, [r0, #0x00]
movs r0, #0x60
b _08011A2E
_080119E4: .4byte 0x04000134
_080119E8: .4byte 0x04000128
_080119EC: .4byte 0x00002003
_080119F0: .4byte 0x0400012A
_080119F4:
movs r1, #0x00
strb r1, [r7, #0x1E]
strb r1, [r7, #0x18]
strb r1, [r7, #0x1D]
movs r0, #0x0F
ldr r2, [sp, #0x000]
strb r0, [r2, #0x00]
mov r3, r10
strb r1, [r3, #0x00]
strh r1, [r7, #0x16]
ldr r0, _08011A1C @ =0x04000134
strh r1, [r0, #0x00]
ldr r2, _08011A20 @ =0x04000128
ldr r3, _08011A24 @ =0x00002003
adds r0, r3, #0x0
strh r0, [r2, #0x00]
ldr r0, _08011A28 @ =0x0400012A
strh r1, [r0, #0x00]
movs r0, #0x60
b _08011A2E
_08011A1C: .4byte 0x04000134
_08011A20: .4byte 0x04000128
_08011A24: .4byte 0x00002003
_08011A28: .4byte 0x0400012A
_08011A2C:
movs r0, #0x00
_08011A2E:
add sp, #0x004
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r1}
bx r1
.byte 0x00, 0x00
thumb_func_start sub_8011A40
sub_8011A40:
push {r4, r5, lr}
adds r2, r0, #0x0
lsls r1, r1, #0x10
lsrs r1, r1, #0x10
ldr r5, _08011A6C @ =0x04000128
ldrh r0, [r5, #0x00]
movs r4, #0x8C
ands r4, r0
cmp r4, #0x08
bne _08011A78
ldr r0, _08011A70 @ =0x0400012A
strh r1, [r0, #0x00]
ldr r1, _08011A74 @ =0x00002083
adds r0, r1, #0x0
strh r0, [r5, #0x00]
adds r1, r2, #0x0
adds r1, #0x48
movs r0, #0x01
strb r0, [r1, #0x00]
movs r0, #0x00
b _08011AA4
.byte 0x00, 0x00
_08011A6C: .4byte 0x04000128
_08011A70: .4byte 0x0400012A
_08011A74: .4byte 0x00002083
_08011A78:
movs r1, #0x00
strb r1, [r2, #0x1E]
strb r1, [r2, #0x18]
strb r1, [r2, #0x1D]
adds r3, r2, #0x0
adds r3, #0x4A
movs r0, #0x0F
strb r0, [r3, #0x00]
adds r0, r2, #0x0
adds r0, #0x48
strb r1, [r0, #0x00]
strh r1, [r2, #0x16]
ldr r0, _08011AAC @ =0x04000134
strh r1, [r0, #0x00]
ldr r2, _08011AB0 @ =0x00002003
adds r0, r2, #0x0
strh r0, [r5, #0x00]
ldr r0, _08011AB4 @ =0x0400012A
strh r1, [r0, #0x00]
movs r0, #0x08
eors r4, r0
adds r0, r4, #0x0
_08011AA4:
pop {r4, r5}
pop {r1}
bx r1
.byte 0x00, 0x00
_08011AAC: .4byte 0x04000134
_08011AB0: .4byte 0x00002003
_08011AB4: .4byte 0x0400012A
thumb_func_start sub_8011AB8
sub_8011AB8:
adds r2, r0, #0x0
ldrb r0, [r2, #0x18]
cmp r0, #0x00
beq _08011AFC
movs r1, #0x00
strb r1, [r2, #0x1E]
strb r1, [r2, #0x18]
strb r1, [r2, #0x1D]
adds r3, r2, #0x0
adds r3, #0x4A
movs r0, #0x0F
strb r0, [r3, #0x00]
adds r0, r2, #0x0
adds r0, #0x48
strb r1, [r0, #0x00]
strh r1, [r2, #0x16]
ldr r0, _08011AEC @ =0x04000134
strh r1, [r0, #0x00]
ldr r2, _08011AF0 @ =0x04000128
ldr r3, _08011AF4 @ =0x00002003
adds r0, r3, #0x0
strh r0, [r2, #0x00]
ldr r0, _08011AF8 @ =0x0400012A
strh r1, [r0, #0x00]
b _08011B08
.byte 0x00, 0x00
_08011AEC: .4byte 0x04000134
_08011AF0: .4byte 0x04000128
_08011AF4: .4byte 0x00002003
_08011AF8: .4byte 0x0400012A
_08011AFC:
adds r1, r2, #0x0
adds r1, #0x4A
strb r0, [r1, #0x00]
strb r0, [r2, #0x1E]
movs r0, #0x01
strb r0, [r2, #0x18]
_08011B08:
bx lr
.byte 0x00, 0x00
thumb_func_start sub_8011B0C
sub_8011B0C:
push {r4, r5, r6, r7, lr}
mov r12, r0
adds r6, r1, #0x0
adds r4, r2, #0x0
ldr r0, [sp, #0x014]
lsls r3, r3, #0x18
lsrs r3, r3, #0x18
lsls r0, r0, #0x18
lsrs r7, r0, #0x18
movs r2, #0x00
mov r1, r12
ldrb r0, [r1, #0x18]
cmp r0, #0x00
bne _08011B38
ldrb r0, [r1, #0x1E]
cmp r0, #0x00
beq _08011B38
mov r5, r12
adds r5, #0x4A
ldrb r0, [r5, #0x00]
cmp r0, #0x00
beq _08011B74
_08011B38:
movs r1, #0x00
mov r2, r12
strb r1, [r2, #0x1E]
strb r1, [r2, #0x18]
strb r1, [r2, #0x1D]
adds r2, #0x4A
movs r0, #0x0F
strb r0, [r2, #0x00]
mov r0, r12
adds r0, #0x48
strb r1, [r0, #0x00]
mov r3, r12
strh r1, [r3, #0x16]
ldr r0, _08011B64 @ =0x04000134
strh r1, [r0, #0x00]
ldr r2, _08011B68 @ =0x04000128
ldr r4, _08011B6C @ =0x00002003
adds r0, r4, #0x0
strh r0, [r2, #0x00]
ldr r0, _08011B70 @ =0x0400012A
strh r1, [r0, #0x00]
b _08011C3A
_08011B64: .4byte 0x04000134
_08011B68: .4byte 0x04000128
_08011B6C: .4byte 0x00002003
_08011B70: .4byte 0x0400012A
_08011B74:
mov r0, r12
str r6, [r0, #0x20]
adds r4, #0x0F
movs r0, #0x10
negs r0, r0
ands r4, r0
subs r0, #0xF0
adds r1, r4, r0
ldr r0, _08011BB0 @ =0x0003FF00
cmp r1, r0
bls _08011BC4
mov r1, r12
strb r2, [r1, #0x1E]
strb r2, [r1, #0x18]
strb r2, [r1, #0x1D]
movs r0, #0x0F
strb r0, [r5, #0x00]
mov r0, r12
adds r0, #0x48
strb r2, [r0, #0x00]
strh r2, [r1, #0x16]
ldr r0, _08011BB4 @ =0x04000134
strh r2, [r0, #0x00]
ldr r1, _08011BB8 @ =0x04000128
ldr r3, _08011BBC @ =0x00002003
adds r0, r3, #0x0
strh r0, [r1, #0x00]
ldr r0, _08011BC0 @ =0x0400012A
strh r2, [r0, #0x00]
b _08011C3A
_08011BB0: .4byte 0x0003FF00
_08011BB4: .4byte 0x04000134
_08011BB8: .4byte 0x04000128
_08011BBC: .4byte 0x00002003
_08011BC0: .4byte 0x0400012A
_08011BC4:
adds r0, r6, r4
mov r4, r12
str r0, [r4, #0x24]
lsls r1, r7, #0x18
movs r4, #0x80
lsls r4, r4, #0x13
adds r0, r1, r4
asrs r0, r0, #0x18
adds r4, r1, #0x0
cmp r0, #0x08
bhi _08011C24
lsls r0, r0, #0x02
ldr r1, _08011BE4 @ =0x08011BE8
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
_08011BE4: .4byte 0x08011BE8
.byte 0x0C, 0x1C, 0x01, 0x08, 0x0C, 0x1C, 0x01, 0x08, 0x0C, 0x1C, 0x01, 0x08, 0x0C, 0x1C, 0x01, 0x08
.byte 0x16, 0x1C, 0x01, 0x08, 0x1C, 0x1C, 0x01, 0x08, 0x1C, 0x1C, 0x01, 0x08, 0x1C, 0x1C, 0x01, 0x08
.byte 0x1C, 0x1C, 0x01, 0x08, 0xDA, 0x00, 0x21, 0x16, 0x03, 0x20, 0x40, 0x1A, 0x05, 0xE0, 0x38, 0x20
.byte 0x1A, 0x1C, 0x02, 0xE0, 0xDA, 0x00, 0x20, 0x16, 0x01, 0x38, 0x02, 0x43
_08011C24:
movs r0, #0x3F
ands r2, r0
lsls r0, r2, #0x01
movs r2, #0x7F
negs r2, r2
adds r1, r2, #0x0
orrs r0, r1
mov r3, r12
strb r0, [r3, #0x1C]
movs r0, #0xD0
strb r0, [r3, #0x18]
_08011C3A:
pop {r4, r5, r6, r7}
pop {r0}
bx r0
thumb_func_start sub_8011C40
sub_8011C40:
push {r4, r5, r6, lr}
adds r2, r0, #0x0
ldrb r0, [r2, #0x18]
cmp r0, #0xE0
beq _08011C5C
cmp r0, #0xE0
blt _08011C6C
cmp r0, #0xE8
bgt _08011C6C
cmp r0, #0xE7
blt _08011C6C
movs r4, #0x03
ldrb r5, [r2, #0x1E]
b _08011CCC
_08011C5C:
movs r1, #0x00
movs r0, #0xE1
strb r0, [r2, #0x18]
str r1, [r2, #0x04]
movs r0, #0x80
lsls r0, r0, #0x0D
str r0, [r2, #0x00]
b _08011CBE
_08011C6C:
movs r4, #0x03
ldrb r5, [r2, #0x1E]
movs r6, #0x01
ldr r1, _08011CC8 @ =0x04000126
_08011C74:
ldrh r0, [r1, #0x00]
adds r3, r0, #0x0
adds r0, r5, #0x0
asrs r0, r4
ands r0, r6
cmp r0, #0x00
beq _08011C88
ldr r0, [r2, #0x04]
cmp r3, r0
bne _08011C5C
_08011C88:
subs r1, #0x02
subs r4, #0x01
cmp r4, #0x00
bne _08011C74
ldrb r0, [r2, #0x18]
adds r0, #0x01
strb r0, [r2, #0x18]
ldr r1, [r2, #0x00]
ldrh r0, [r2, #0x00]
str r0, [r2, #0x04]
cmp r1, #0x00
bne _08011CB6
ldr r0, [r2, #0x28]
adds r1, r0, #0x0
adds r1, #0xAC
ldrb r1, [r1, #0x00]
adds r0, #0xAD
ldrb r0, [r0, #0x00]
lsls r0, r0, #0x08
orrs r1, r0
str r1, [r2, #0x04]
lsls r1, r1, #0x05
str r1, [r2, #0x00]
_08011CB6:
ldr r0, [r2, #0x00]
lsrs r0, r0, #0x05
str r0, [r2, #0x00]
_08011CBC:
ldrh r1, [r2, #0x00]
_08011CBE:
adds r0, r2, #0x0
bl sub_8011A40
b _08011D56
.byte 0x00, 0x00
_08011CC8: .4byte 0x04000126
_08011CCC:
lsls r0, r4, #0x01
ldr r1, _08011D14 @ =0x04000120
adds r0, r0, r1
ldrh r0, [r0, #0x00]
adds r3, r0, #0x0
adds r0, r5, #0x0
asrs r0, r4
movs r1, #0x01
ands r0, r1
cmp r0, #0x00
beq _08011CE8
ldr r0, [r2, #0x04]
cmp r3, r0
bne _08011D18
_08011CE8:
subs r4, #0x01
cmp r4, #0x00
bne _08011CCC
ldrb r0, [r2, #0x18]
adds r0, #0x01
strb r0, [r2, #0x18]
lsls r0, r0, #0x18
lsrs r0, r0, #0x18
cmp r0, #0xE9
beq _08011D54
ldr r0, [r2, #0x28]
adds r1, r0, #0x0
adds r1, #0xAE
ldrb r1, [r1, #0x00]
adds r0, #0xAF
ldrb r0, [r0, #0x00]
lsls r0, r0, #0x08
orrs r1, r0
str r1, [r2, #0x00]
str r1, [r2, #0x04]
b _08011CBC
.byte 0x00, 0x00
_08011D14: .4byte 0x04000120
_08011D18:
movs r1, #0x00
strb r1, [r2, #0x1E]
strb r1, [r2, #0x18]
strb r1, [r2, #0x1D]
adds r3, r2, #0x0
adds r3, #0x4A
movs r0, #0x0F
strb r0, [r3, #0x00]
adds r0, r2, #0x0
adds r0, #0x48
strb r1, [r0, #0x00]
strh r1, [r2, #0x16]
ldr r0, _08011D44 @ =0x04000134
strh r1, [r0, #0x00]
ldr r2, _08011D48 @ =0x04000128
ldr r3, _08011D4C @ =0x00002003
adds r0, r3, #0x0
strh r0, [r2, #0x00]
ldr r0, _08011D50 @ =0x0400012A
strh r1, [r0, #0x00]
movs r0, #0x71
b _08011D56
_08011D44: .4byte 0x04000134
_08011D48: .4byte 0x04000128
_08011D4C: .4byte 0x00002003
_08011D50: .4byte 0x0400012A
_08011D54:
movs r0, #0x00
_08011D56:
pop {r4, r5, r6}
pop {r1}
bx r1
thumb_func_start sub_8011D5C
sub_8011D5C:
adds r2, r0, #0x0
movs r1, #0x00
strb r1, [r2, #0x1E]
strb r1, [r2, #0x18]
strb r1, [r2, #0x1D]
adds r3, r2, #0x0
adds r3, #0x4A
movs r0, #0x0F
strb r0, [r3, #0x00]
adds r0, r2, #0x0
adds r0, #0x48
strb r1, [r0, #0x00]
strh r1, [r2, #0x16]
ldr r0, _08011D88 @ =0x04000134
strh r1, [r0, #0x00]
ldr r2, _08011D8C @ =0x04000128
ldr r3, _08011D90 @ =0x00002003
adds r0, r3, #0x0
strh r0, [r2, #0x00]
ldr r0, _08011D94 @ =0x0400012A
strh r1, [r0, #0x00]
bx lr
_08011D88: .4byte 0x04000134
_08011D8C: .4byte 0x04000128
_08011D90: .4byte 0x00002003
_08011D94: .4byte 0x0400012A
thumb_func_start sub_8011D98
sub_8011D98:
ldrb r0, [r0, #0x18]
cmp r0, #0xE9
beq _08011DA2
movs r0, #0x00
b _08011DA4
_08011DA2:
movs r0, #0x01
_08011DA4:
bx lr
.byte 0x00, 0x00
thumb_func_start sub_8011DA8
sub_8011DA8:
push {r4, r5, lr}
movs r2, #0x00
ldr r3, _08011DE8 @ =0x04000128
ldrh r1, [r3, #0x00]
movs r0, #0x80
ands r0, r1
cmp r0, #0x00
beq _08011DCC
ldr r5, _08011DEC @ =0x0000795C
movs r4, #0x80
_08011DBC:
adds r2, #0x01
cmp r2, r5
bgt _08011DCC
ldrh r1, [r3, #0x00]
adds r0, r4, #0x0
ands r0, r1
cmp r0, #0x00
bne _08011DBC
_08011DCC:
mov r2, pc
lsrs r2, r2, #0x18
movs r1, #0x0C
cmp r2, #0x02
beq _08011DDE
movs r1, #0x0D
cmp r2, #0x08
beq _08011DDE
movs r1, #0x04
_08011DDE:
subs r0, r0, r1
bgt _08011DDE
pop {r4, r5}
pop {r0}
bx r0
_08011DE8: .4byte 0x04000128
_08011DEC: .4byte 0x0000795C
thumb_func_start sub_8011DF0
sub_8011DF0:
push {r4, r5, r6, r7, lr}
mov r7, r9
mov r6, r8
push {r6, r7}
add sp, #-0x004
adds r6, r0, #0x0
lsls r5, r1, #0x10
lsrs r5, r5, #0x10
ldr r3, _08011EC4 @ =0x04000208
movs r4, #0x00
strh r4, [r3, #0x00]
ldr r2, _08011EC8 @ =0x04000200
ldrh r1, [r2, #0x00]
ldr r0, _08011ECC @ =0x0000FF3F
ands r0, r1
strh r0, [r2, #0x00]
movs r0, #0x01
strh r0, [r3, #0x00]
ldr r0, _08011ED0 @ =0x04000134
strh r4, [r0, #0x00]
subs r2, #0xD8
movs r0, #0x80
lsls r0, r0, #0x06
str r0, [r2, #0x00]
ldrh r0, [r2, #0x00]
ldr r3, _08011ED4 @ =0x00004003
adds r1, r3, #0x0
orrs r0, r1
strh r0, [r2, #0x00]
movs r0, #0x00
str r0, [sp, #0x000]
ldr r4, _08011ED8 @ =0x03002AF0
ldr r2, _08011EDC @ =0x05000051
mov r0, sp
adds r1, r4, #0x0
bl CpuSet
strb r6, [r4, #0x02]
movs r0, #0x01
negs r0, r0
str r0, [r4, #0x14]
movs r7, #0xA0
lsls r7, r7, #0x01
adds r0, r4, r7
strh r5, [r0, #0x00]
adds r0, r4, #0x0
adds r0, #0x60
str r0, [r4, #0x28]
adds r0, #0x10
str r0, [r4, #0x2C]
movs r5, #0x00
adds r2, r4, #0x0
adds r4, #0xA0
movs r3, #0x00
movs r0, #0x30
adds r0, r0, r2
mov r8, r0
movs r1, #0x80
adds r1, r1, r2
mov r12, r1
adds r6, r2, #0x0
adds r6, #0x90
movs r7, #0x40
adds r7, r7, r2
mov r9, r7
_08011E72:
lsls r1, r5, #0x02
mov r7, r12
adds r0, r3, r7
mov r7, r8
adds r7, #0x04
mov r8, r7
subs r7, #0x04
stm r7!, {r0}
adds r0, r3, r6
mov r7, r9
adds r7, #0x04
mov r9, r7
subs r7, #0x04
stm r7!, {r0}
adds r0, r2, #0x0
adds r0, #0x50
adds r1, r1, r0
str r4, [r1, #0x00]
adds r4, #0x30
adds r3, #0x30
adds r5, #0x01
cmp r5, #0x03
ble _08011E72
movs r0, #0x00
ldr r3, _08011EC4 @ =0x04000208
strh r0, [r3, #0x00]
ldr r2, _08011EC8 @ =0x04000200
ldrh r0, [r2, #0x00]
movs r1, #0x80
orrs r0, r1
strh r0, [r2, #0x00]
movs r0, #0x01
strh r0, [r3, #0x00]
add sp, #0x004
pop {r3, r4}
mov r8, r3
mov r9, r4
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_08011EC4: .4byte 0x04000208
_08011EC8: .4byte 0x04000200
_08011ECC: .4byte 0x0000FF3F
_08011ED0: .4byte 0x04000134
_08011ED4: .4byte 0x00004003
_08011ED8: .4byte 0x03002AF0
_08011EDC: .4byte 0x05000051
thumb_func_start sub_8011EE0
sub_8011EE0:
push {r4, r5, r6, r7, lr}
mov r7, r9
mov r6, r8
push {r6, r7}
mov r9, r0
mov r12, r1
mov r8, r2
ldr r5, _08011F00 @ =0x04000128
ldr r6, [r5, #0x00]
ldr r7, _08011F04 @ =0x03002AF0
ldrb r0, [r7, #0x01]
cmp r0, #0x00
beq _08011F08
cmp r0, #0x01
beq _08011F74
b _08011F82
_08011F00: .4byte 0x04000128
_08011F04: .4byte 0x03002AF0
_08011F08:
movs r1, #0x30
adds r0, r6, #0x0
ands r0, r1
cmp r0, #0x00
bne _08011F6E
movs r0, #0x88
adds r4, r6, #0x0
ands r4, r0
cmp r4, #0x08
bne _08011F82
movs r1, #0x04
adds r0, r6, #0x0
ands r0, r1
lsls r0, r0, #0x18
lsrs r2, r0, #0x18
cmp r2, #0x00
bne _08011F6E
ldr r1, [r7, #0x14]
movs r0, #0x01
negs r0, r0
cmp r1, r0
bne _08011F6E
ldr r3, _08011FB4 @ =0x04000208
strh r2, [r3, #0x00]
ldr r2, _08011FB8 @ =0x04000200
ldrh r1, [r2, #0x00]
ldr r0, _08011FBC @ =0x0000FF7F
ands r0, r1
strh r0, [r2, #0x00]
ldrh r0, [r2, #0x00]
movs r1, #0x40
orrs r0, r1
strh r0, [r2, #0x00]
movs r0, #0x01
strh r0, [r3, #0x00]
ldrb r1, [r5, #0x01]
movs r0, #0x41
negs r0, r0
ands r0, r1
strb r0, [r5, #0x01]
ldr r1, _08011FC0 @ =0x04000202
movs r0, #0xC0
strh r0, [r1, #0x00]
subs r1, #0xF6
ldr r0, _08011FC4 @ =0x000092C6
str r0, [r1, #0x00]
strb r4, [r7, #0x00]
ldrb r0, [r5, #0x00]
movs r1, #0x80
orrs r0, r1
strb r0, [r5, #0x00]
_08011F6E:
ldr r1, _08011FC8 @ =0x03002AF0
movs r0, #0x01
strb r0, [r1, #0x01]
_08011F74:
mov r0, r12
bl sub_80120CC
mov r0, r9
mov r1, r8
bl sub_8011FFC
_08011F82:
ldr r1, _08011FC8 @ =0x03002AF0
ldrb r0, [r1, #0x0B]
adds r0, #0x01
strb r0, [r1, #0x0B]
ldrb r3, [r1, #0x03]
ldrb r2, [r1, #0x08]
movs r0, #0x10
ands r0, r2
orrs r3, r0
movs r0, #0x20
ands r0, r2
orrs r3, r0
movs r0, #0x40
ands r0, r2
orrs r3, r0
ldrb r0, [r1, #0x02]
lsls r2, r0, #0x08
ldrb r0, [r1, #0x00]
cmp r0, #0x08
bne _08011FCC
movs r0, #0x80
orrs r0, r2
orrs r0, r3
b _08011FD0
.byte 0x00, 0x00
_08011FB4: .4byte 0x04000208
_08011FB8: .4byte 0x04000200
_08011FBC: .4byte 0x0000FF7F
_08011FC0: .4byte 0x04000202
_08011FC4: .4byte 0x000092C6
_08011FC8: .4byte 0x03002AF0
_08011FCC:
adds r0, r3, #0x0
orrs r0, r2
_08011FD0:
adds r2, r0, #0x0
ldrb r0, [r1, #0x09]
cmp r0, #0x00
beq _08011FDE
movs r0, #0x80
lsls r0, r0, #0x05
orrs r2, r0
_08011FDE:
adds r1, r2, #0x0
lsls r0, r6, #0x1A
lsrs r0, r0, #0x1E
cmp r0, #0x03
bls _08011FEE
movs r0, #0x80
lsls r0, r0, #0x06
orrs r1, r0
_08011FEE:
adds r0, r1, #0x0
pop {r3, r4}
mov r8, r3
mov r9, r4
pop {r4, r5, r6, r7}
pop {r1}
bx r1
thumb_func_start sub_8011FFC
sub_8011FFC:
push {r4, r5, r6, r7, lr}
movs r7, #0x00
ldr r5, _080120BC @ =0x03002AF0
ldr r4, [r5, #0x28]
movs r2, #0x01
ands r1, r2
lsls r1, r1, #0x04
ldrb r3, [r4, #0x01]
movs r2, #0x11
negs r2, r2
ands r2, r3
orrs r2, r1
strb r2, [r4, #0x01]
ldr r6, [r5, #0x28]
ldr r1, _080120C0 @ =0x03002990
ldrb r1, [r1, #0x03]
movs r3, #0x01
adds r2, r3, #0x0
ands r2, r1
lsls r2, r2, #0x05
ldrb r4, [r6, #0x01]
movs r1, #0x21
negs r1, r1
ands r1, r4
orrs r1, r2
strb r1, [r6, #0x01]
ldr r4, [r5, #0x28]
ldrb r1, [r5, #0x08]
lsls r1, r1, #0x19
lsrs r1, r1, #0x1F
ands r3, r1
lsls r3, r3, #0x06
ldrb r2, [r4, #0x01]
movs r1, #0x41
negs r1, r1
ands r1, r2
orrs r1, r3
strb r1, [r4, #0x01]
ldr r2, [r5, #0x28]
ldrb r1, [r5, #0x0B]
strb r1, [r2, #0x00]
ldr r4, [r5, #0x28]
ldrb r2, [r5, #0x02]
ldrb r1, [r5, #0x03]
eors r2, r1
movs r1, #0x0F
ands r2, r1
ldrb r3, [r4, #0x01]
movs r1, #0x10
negs r1, r1
ands r1, r3
orrs r1, r2
strb r1, [r4, #0x01]
ldr r1, [r5, #0x28]
strh r7, [r1, #0x02]
ldr r1, [r5, #0x28]
adds r1, #0x04
ldr r2, _080120C4 @ =0x04000002
bl CpuSet
movs r2, #0x00
ldr r1, [r5, #0x28]
_08012078:
ldrh r0, [r1, #0x00]
adds r7, r7, r0
adds r1, #0x02
adds r2, #0x01
cmp r2, #0x05
bls _08012078
adds r2, r5, #0x0
ldr r1, [r2, #0x28]
mvns r0, r7
strh r0, [r1, #0x02]
ldrb r0, [r2, #0x00]
cmp r0, #0x00
beq _08012098
ldr r1, _080120C8 @ =0x0400010E
movs r0, #0x00
strh r0, [r1, #0x00]
_08012098:
movs r0, #0x01
negs r0, r0
str r0, [r5, #0x14]
ldrb r0, [r5, #0x00]
cmp r0, #0x00
beq _080120B4
ldrb r1, [r5, #0x08]
movs r0, #0x80
ands r0, r1
cmp r0, #0x00
beq _080120B4
ldr r1, _080120C8 @ =0x0400010E
movs r0, #0xC0
strh r0, [r1, #0x00]
_080120B4:
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_080120BC: .4byte 0x03002AF0
_080120C0: .4byte 0x03002990
_080120C4: .4byte 0x04000002
_080120C8: .4byte 0x0400010E
thumb_func_start sub_80120CC
sub_80120CC:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x00C
str r0, [sp, #0x008]
ldr r1, _080121F4 @ =0x04000208
movs r0, #0x00
strh r0, [r1, #0x00]
ldr r6, _080121F8 @ =0x03002AF0
adds r3, r6, #0x4
add r0, sp, #0x004
mov r10, r0
adds r2, r6, #0x0
adds r2, #0x40
movs r5, #0x03
_080120EE:
ldr r1, [r2, #0x10]
ldr r0, [r2, #0x00]
str r0, [r2, #0x10]
stm r2!, {r1}
subs r5, #0x01
cmp r5, #0x00
bge _080120EE
ldr r0, [r3, #0x00]
str r0, [sp, #0x000]
movs r2, #0x00
str r2, [r3, #0x00]
ldr r1, _080121F4 @ =0x04000208
movs r0, #0x01
strh r0, [r1, #0x00]
subs r0, r3, #0x4
strb r2, [r0, #0x03]
movs r5, #0x00
adds r6, r0, #0x0
adds r7, r6, #0x0
movs r1, #0x50
adds r1, r1, r7
mov r9, r1
_0801211A:
movs r4, #0x00
movs r2, #0x00
lsls r6, r5, #0x02
adds r0, r5, #0x1
mov r8, r0
mov r1, sp
adds r3, r1, r5
mov r1, r9
adds r0, r6, r1
ldr r1, [r0, #0x00]
_0801212E:
ldrh r0, [r1, #0x00]
adds r4, r4, r0
adds r1, #0x02
adds r2, #0x01
cmp r2, #0x05
bls _0801212E
ldrb r0, [r3, #0x00]
cmp r0, #0x00
beq _0801218C
lsls r0, r4, #0x10
asrs r0, r0, #0x10
movs r2, #0x01
negs r2, r2
cmp r0, r2
bne _0801218C
movs r0, #0x01
lsls r0, r5
ldrb r1, [r7, #0x03]
orrs r0, r1
strb r0, [r7, #0x03]
ldrb r2, [r7, #0x08]
lsls r1, r2, #0x1C
lsrs r1, r1, #0x1C
mov r4, r9
adds r3, r6, r4
ldr r0, [r3, #0x00]
ldrb r0, [r0, #0x01]
lsls r0, r0, #0x1A
lsrs r0, r0, #0x1F
lsls r0, r5
orrs r0, r1
movs r1, #0x0F
ands r0, r1
movs r4, #0x10
negs r4, r4
adds r1, r4, #0x0
ands r2, r1
orrs r2, r0
strb r2, [r7, #0x08]
ldr r0, [r3, #0x00]
adds r0, #0x04
lsls r1, r5, #0x03
ldr r2, [sp, #0x008]
adds r1, r2, r1
ldr r2, _080121FC @ =0x04000002
bl CpuSet
_0801218C:
movs r0, #0x00
str r0, [sp, #0x004]
mov r4, r9
adds r0, r6, r4
ldr r1, [r0, #0x00]
adds r1, #0x04
mov r0, r10
ldr r2, _08012200 @ =0x05000002
bl CpuSet
mov r5, r8
cmp r5, #0x03
ble _0801211A
ldr r0, _080121F8 @ =0x03002AF0
ldrb r1, [r0, #0x02]
ldrb r2, [r0, #0x03]
adds r3, r1, #0x0
orrs r3, r2
strb r3, [r0, #0x02]
movs r1, #0x01
ands r1, r2
adds r6, r0, #0x0
cmp r1, #0x00
beq _08012240
ldrb r0, [r6, #0x00]
cmp r0, #0x08
bne _08012204
movs r0, #0x03
ands r0, r2
cmp r0, #0x00
beq _080121DA
lsls r0, r2, #0x18
lsrs r0, r0, #0x18
cmp r0, r3
bne _080121DA
ldrb r0, [r6, #0x08]
movs r1, #0x10
orrs r0, r1
strb r0, [r6, #0x08]
_080121DA:
ldrb r4, [r6, #0x08]
lsls r2, r4, #0x1C
lsrs r2, r2, #0x1C
movs r0, #0x0E
ldrb r3, [r6, #0x02]
adds r1, r0, #0x0
ands r1, r2
ands r0, r3
cmp r1, r0
bne _08012224
movs r0, #0x40
orrs r0, r4
b _08012222
_080121F4: .4byte 0x04000208
_080121F8: .4byte 0x03002AF0
_080121FC: .4byte 0x04000002
_08012200: .4byte 0x05000002
_08012204:
ldrb r2, [r6, #0x08]
lsls r1, r2, #0x19
lsrs r1, r1, #0x1F
ldr r0, [r6, #0x50]
ldrb r0, [r0, #0x01]
lsls r0, r0, #0x19
lsrs r0, r0, #0x1F
orrs r1, r0
movs r0, #0x01
ands r1, r0
lsls r1, r1, #0x06
movs r0, #0x41
negs r0, r0
ands r0, r2
orrs r0, r1
_08012222:
strb r0, [r6, #0x08]
_08012224:
ldrb r2, [r6, #0x08]
lsls r1, r2, #0x1A
lsrs r1, r1, #0x1F
ldr r0, [r6, #0x50]
ldrb r0, [r0, #0x01]
lsls r0, r0, #0x1B
lsrs r0, r0, #0x1F
orrs r0, r1
lsls r0, r0, #0x05
movs r1, #0x21
negs r1, r1
ands r1, r2
orrs r1, r0
strb r1, [r6, #0x08]
_08012240:
ldrb r0, [r6, #0x03]
add sp, #0x00C
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r1}
bx r1
.byte 0x00, 0x00
thumb_func_start sub_8012254
sub_8012254:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x008
ldr r0, _08012298 @ =0x04000120
ldr r1, [r0, #0x04]
ldr r0, [r0, #0x00]
str r0, [sp, #0x000]
str r1, [sp, #0x004]
ldr r2, _0801229C @ =0x03002AF0
ldr r3, _080122A0 @ =0x04000128
ldr r0, [r3, #0x00]
lsls r0, r0, #0x19
lsrs r0, r0, #0x1F
strb r0, [r2, #0x09]
ldr r1, [r2, #0x14]
movs r0, #0x01
negs r0, r0
mov r12, r2
cmp r1, r0
bne _080122A4
movs r0, #0xA0
lsls r0, r0, #0x01
add r0, r12
ldrh r0, [r0, #0x00]
strh r0, [r3, #0x02]
ldr r1, [r2, #0x2C]
ldr r0, [r2, #0x28]
str r0, [r2, #0x2C]
str r1, [r2, #0x28]
b _080122B4
.byte 0x00, 0x00
_08012298: .4byte 0x04000120
_0801229C: .4byte 0x03002AF0
_080122A0: .4byte 0x04000128
_080122A4:
cmp r1, #0x00
blt _080122B4
mov r2, r12
ldr r0, [r2, #0x2C]
lsls r1, r1, #0x01
adds r1, r1, r0
ldrh r0, [r1, #0x00]
strh r0, [r3, #0x02]
_080122B4:
mov r1, r12
ldr r0, [r1, #0x14]
cmp r0, #0x06
bgt _080122C0
adds r0, #0x01
str r0, [r1, #0x14]
_080122C0:
movs r2, #0x00
mov r8, r2
mov r10, r12
mov r9, r2
mov r6, r12
adds r6, #0x18
mov r5, sp
_080122CE:
ldrh r0, [r5, #0x00]
mov r1, r8
lsls r7, r1, #0x02
ldr r2, _080122EC @ =0x03002C30
ldrh r2, [r2, #0x00]
cmp r0, r2
bne _080122F0
ldr r0, [r6, #0x00]
cmp r0, #0x05
ble _080122F0
movs r0, #0x01
negs r0, r0
str r0, [r6, #0x00]
b _0801231E
.byte 0x00, 0x00
_080122EC: .4byte 0x03002C30
_080122F0:
mov r0, r10
adds r0, #0x30
mov r1, r9
adds r4, r1, r0
ldr r2, [r6, #0x00]
ldr r3, [r4, #0x00]
lsls r0, r2, #0x01
adds r0, r0, r3
ldrh r1, [r5, #0x00]
strh r1, [r0, #0x00]
cmp r2, #0x05
bne _0801231E
mov r0, r12
adds r0, #0x40
adds r0, r7, r0
ldr r1, [r0, #0x00]
str r3, [r0, #0x00]
str r1, [r4, #0x00]
mov r0, r12
adds r0, #0x04
add r0, r8
movs r1, #0x01
strb r1, [r0, #0x00]
_0801231E:
ldr r0, [r6, #0x00]
cmp r0, #0x06
bgt _08012328
adds r0, #0x01
str r0, [r6, #0x00]
_08012328:
movs r2, #0x04
add r9, r2
adds r6, #0x04
adds r5, #0x02
movs r0, #0x01
add r8, r0
mov r1, r8
cmp r1, #0x03
ble _080122CE
mov r2, r12
ldrb r0, [r2, #0x00]
cmp r0, #0x08
bne _08012356
ldr r3, _08012368 @ =0x0400010E
movs r0, #0x00
strh r0, [r3, #0x00]
ldr r2, _0801236C @ =0x04000128
ldrh r0, [r2, #0x00]
movs r1, #0x80
orrs r0, r1
strh r0, [r2, #0x00]
movs r0, #0xC0
strh r0, [r3, #0x00]
_08012356:
add sp, #0x008
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_08012368: .4byte 0x0400010E
_0801236C: .4byte 0x04000128
thumb_func_start sub_8012370
sub_8012370:
ldr r2, _08012384 @ =0x03002AF0
ldrb r0, [r2, #0x00]
cmp r0, #0x00
beq _08012380
ldrb r0, [r2, #0x08]
movs r1, #0x80
orrs r0, r1
strb r0, [r2, #0x08]
_08012380:
bx lr
.byte 0x00, 0x00
_08012384: .4byte 0x03002AF0
thumb_func_start sub_8012388
sub_8012388:
ldr r3, _080123BC @ =0x04000208
movs r0, #0x00
strh r0, [r3, #0x00]
ldr r2, _080123C0 @ =0x04000200
ldrh r1, [r2, #0x00]
ldr r0, _080123C4 @ =0x0000FF3F
ands r0, r1
strh r0, [r2, #0x00]
movs r0, #0x01
strh r0, [r3, #0x00]
ldr r1, _080123C8 @ =0x04000128
ldr r2, _080123CC @ =0x00002003
adds r0, r2, #0x0
strh r0, [r1, #0x00]
subs r1, #0x1C
ldr r0, _080123D0 @ =0x000092C6
str r0, [r1, #0x00]
adds r1, #0xF6
movs r0, #0xC0
strh r0, [r1, #0x00]
ldr r2, _080123D4 @ =0x03002AF0
ldrb r1, [r2, #0x08]
movs r0, #0x7F
ands r0, r1
strb r0, [r2, #0x08]
bx lr
_080123BC: .4byte 0x04000208
_080123C0: .4byte 0x04000200
_080123C4: .4byte 0x0000FF3F
_080123C8: .4byte 0x04000128
_080123CC: .4byte 0x00002003
_080123D0: .4byte 0x000092C6
_080123D4: .4byte 0x03002AF0
thumb_func_start sub_80123D8
sub_80123D8:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x028
movs r0, #0x00
str r0, [sp, #0x018]
movs r1, #0x00
str r1, [sp, #0x01C]
ldr r0, _080123F8 @ =0x030029CC
ldr r2, [r0, #0x00]
cmp r2, #0x00
bne _080123FC
movs r0, #0x01
b _08012558
_080123F8: .4byte 0x030029CC
_080123FC:
ldr r1, _08012510 @ =0x030029A8
ldr r0, _08012514 @ =0x030029DC
ldr r5, [r0, #0x00]
lsrs r0, r5, #0x01
lsls r0, r0, #0x01
ldr r1, [r1, #0x00]
adds r4, r1, r0
mov r3, sp
adds r3, #0x02
cmp r2, #0x06
ble _08012414
movs r2, #0x06
_08012414:
mov r1, sp
ldr r6, _08012518 @ =0xFFFFAB00
adds r0, r5, r6
strh r0, [r1, #0x00]
movs r5, #0x00
lsrs r1, r2, #0x01
mov r0, sp
adds r0, #0x08
str r0, [sp, #0x024]
ldr r2, [sp, #0x018]
cmp r2, r1
bcs _0801243A
_0801242C:
ldrh r0, [r4, #0x00]
strh r0, [r3, #0x00]
adds r4, #0x02
adds r3, #0x02
adds r5, #0x01
cmp r5, r1
bcc _0801242C
_0801243A:
mov r0, sp
ldr r1, [sp, #0x024]
movs r2, #0x00
bl sub_8011EE0
mov r8, r0
ldr r0, _0801251C @ =0x04000200
ldrh r0, [r0, #0x00]
movs r1, #0x80
lsls r1, r1, #0x09
orrs r1, r0
movs r0, #0x00
bl irq_updateMask
bl sub_8012370
movs r0, #0xC0
lsls r0, r0, #0x06
mov r3, r8
ands r0, r3
cmp r0, #0x00
bne _0801253A
ldr r0, _08012520 @ =0x04000128
ldr r0, [r0, #0x00]
lsls r0, r0, #0x1A
lsrs r0, r0, #0x1E
str r0, [sp, #0x020]
movs r5, #0x00
movs r6, #0x01
mov r10, r6
ldr r0, _08012524 @ =0x03000164
mov r9, r0
_0801247A:
mov r0, r10
lsls r0, r5
mov r1, r8
ands r0, r1
adds r2, r5, #0x1
mov r12, r2
cmp r0, #0x00
beq _080124E2
lsls r0, r5, #0x03
ldr r3, [sp, #0x024]
adds r2, r3, r0
ldrh r1, [r2, #0x00]
ldr r6, _08012514 @ =0x030029DC
ldr r0, [r6, #0x00]
movs r3, #0xAB
lsls r3, r3, #0x08
adds r0, r0, r3
cmp r1, r0
bne _080124E2
ldr r0, [sp, #0x020]
cmp r5, r0
beq _080124D6
ldr r0, _08012528 @ =0x030029CC
ldr r0, [r0, #0x00]
cmp r0, #0x06
ble _080124B0
movs r0, #0x06
_080124B0:
movs r3, #0x00
lsrs r4, r0, #0x01
cmp r3, r4
bcs _080124D6
adds r7, r6, #0x0
ldr r6, _0801252C @ =0x03002C34
adds r2, #0x02
_080124BE:
ldr r0, [r7, #0x00]
lsrs r0, r0, #0x01
adds r0, r0, r3
ldr r1, [r6, #0x00]
lsls r0, r0, #0x01
adds r0, r0, r1
ldrh r1, [r2, #0x00]
strh r1, [r0, #0x00]
adds r2, #0x02
adds r3, #0x01
cmp r3, r4
bcc _080124BE
_080124D6:
mov r1, r10
lsls r1, r5
mov r2, r9
ldr r0, [r2, #0x00]
orrs r0, r1
str r0, [r2, #0x00]
_080124E2:
mov r5, r12
cmp r5, #0x01
ble _0801247A
ldr r3, _08012524 @ =0x03000164
ldr r0, [r3, #0x00]
cmp r0, #0x03
bne _08012530
ldr r1, _08012528 @ =0x030029CC
ldr r2, [r1, #0x00]
cmp r2, #0x06
ble _080124FA
movs r2, #0x06
_080124FA:
movs r0, #0x00
ldr r6, _08012524 @ =0x03000164
str r0, [r6, #0x00]
ldr r0, [r1, #0x00]
subs r0, r0, r2
str r0, [r1, #0x00]
ldr r1, _08012514 @ =0x030029DC
ldr r0, [r1, #0x00]
adds r0, r0, r2
str r0, [r1, #0x00]
b _08012534
_08012510: .4byte 0x030029A8
_08012514: .4byte 0x030029DC
_08012518: .4byte 0xFFFFAB00
_0801251C: .4byte 0x04000200
_08012520: .4byte 0x04000128
_08012524: .4byte 0x03000164
_08012528: .4byte 0x030029CC
_0801252C: .4byte 0x03002C34
_08012530:
movs r0, #0x01
str r0, [sp, #0x01C]
_08012534:
ldr r1, [sp, #0x01C]
cmp r1, #0x00
beq _08012550
_0801253A:
ldr r2, _0801254C @ =0x03000160
ldr r0, [r2, #0x00]
adds r0, #0x01
str r0, [r2, #0x00]
cmp r0, #0x28
ble _08012556
movs r3, #0x02
str r3, [sp, #0x018]
b _08012556
_0801254C: .4byte 0x03000160
_08012550:
ldr r6, [sp, #0x01C]
ldr r0, _08012568 @ =0x03000160
str r6, [r0, #0x00]
_08012556:
ldr r0, [sp, #0x018]
_08012558:
add sp, #0x028
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r1}
bx r1
_08012568: .4byte 0x03000160
.byte 0x01, 0x48, 0x00, 0x68, 0x70, 0x47, 0x00, 0x00, 0xCC, 0x29, 0x00, 0x03
thumb_func_start sub_8012578
sub_8012578:
ldr r0, _08012580 @ =0x030029DC
ldr r0, [r0, #0x00]
bx lr
.byte 0x00, 0x00
_08012580: .4byte 0x030029DC
thumb_func_start sub_8012584
sub_8012584:
push {lr}
ldr r3, _080125B0 @ =0x030029A8
str r0, [r3, #0x00]
ldr r0, _080125B4 @ =0x03002C34
str r1, [r0, #0x00]
ldr r0, _080125B8 @ =0x030029CC
str r2, [r0, #0x00]
ldr r0, _080125BC @ =0x030029DC
movs r1, #0x00
str r1, [r0, #0x00]
ldr r0, _080125C0 @ =0x03000160
str r1, [r0, #0x00]
ldr r0, _080125C4 @ =0x03000164
str r1, [r0, #0x00]
bl sub_8012388
ldr r1, _080125C8 @ =0x00003EDC
movs r0, #0x00
bl sub_8011DF0
pop {r0}
bx r0
_080125B0: .4byte 0x030029A8
_080125B4: .4byte 0x03002C34
_080125B8: .4byte 0x030029CC
_080125BC: .4byte 0x030029DC
_080125C0: .4byte 0x03000160
_080125C4: .4byte 0x03000164
_080125C8: .4byte 0x00003EDC
thumb_func_start sub_80125CC
sub_80125CC:
push {r4, r5, r6, r7, lr}
adds r3, r0, #0x0
ldr r0, _080125E8 @ =0x03002990
ldrb r1, [r0, #0x01]
adds r6, r0, #0x0
cmp r1, #0x04
bls _080125DC
b _080127D6
_080125DC:
lsls r0, r1, #0x02
ldr r1, _080125EC @ =0x080125F0
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
.byte 0x00, 0x00
_080125E8: .4byte 0x03002990
_080125EC: .4byte 0x080125F0
.byte 0x04, 0x26, 0x01, 0x08, 0x1C, 0x26, 0x01, 0x08, 0xB8, 0x26, 0x01, 0x08, 0x60, 0x27, 0x01, 0x08
.byte 0xCC, 0x27, 0x01, 0x08, 0x30, 0x68, 0x04, 0x49, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD1, 0xE2, 0xE0
.byte 0x01, 0x20, 0x70, 0x70, 0xDF, 0xE0, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x30, 0x78, 0x01, 0x28
.byte 0x04, 0xD1, 0xB0, 0x78, 0x05, 0x28, 0x00, 0xD8, 0xD5, 0xE0, 0x04, 0xE0, 0x0F, 0x49, 0x80, 0x22
.byte 0x52, 0x01, 0x10, 0x1C, 0x08, 0x80, 0x0E, 0x48, 0x00, 0x25, 0x05, 0x60, 0x0D, 0x49, 0xC0, 0x20
.byte 0x08, 0x80, 0x34, 0x78, 0x01, 0x2C, 0x1D, 0xD1, 0x08, 0x4A, 0x10, 0x88, 0x80, 0x21, 0x08, 0x43
.byte 0x10, 0x80, 0x09, 0x49, 0x09, 0x48, 0x08, 0x60, 0x09, 0x4B, 0x1D, 0x80, 0xD8, 0x32, 0x10, 0x88
.byte 0x40, 0x21, 0x08, 0x43, 0x10, 0x80, 0x1C, 0x80, 0x1C, 0xE0, 0x00, 0x00, 0x28, 0x01, 0x00, 0x04
.byte 0x20, 0x01, 0x00, 0x04, 0x02, 0x02, 0x00, 0x04, 0x0C, 0x01, 0x00, 0x04, 0x18, 0xF3, 0xC0, 0x00
.byte 0x08, 0x02, 0x00, 0x04, 0x0A, 0x4A, 0x10, 0x88, 0x81, 0x23, 0xDB, 0x01, 0x19, 0x1C, 0x08, 0x43
.byte 0x10, 0x80, 0x08, 0x4B, 0x1D, 0x80, 0xD8, 0x32, 0x10, 0x88, 0x80, 0x21, 0x08, 0x43, 0x10, 0x80
.byte 0x01, 0x20, 0x18, 0x80, 0x00, 0x20, 0xB0, 0x70, 0x02, 0x20, 0x70, 0x70, 0x93, 0xE0, 0x00, 0x00
.byte 0x28, 0x01, 0x00, 0x04, 0x08, 0x02, 0x00, 0x04, 0xB7, 0x68, 0x3C, 0x1C, 0x05, 0x48, 0x01, 0x68
.byte 0x0A, 0x1C, 0x84, 0x46, 0x00, 0x29, 0x00, 0xDA, 0xCA, 0x1C, 0x90, 0x10, 0x87, 0x42, 0x03, 0xDD
.byte 0x04, 0x1C, 0x04, 0xE0, 0xD0, 0x29, 0x00, 0x03, 0x00, 0x2F, 0x00, 0xDA, 0x00, 0x24, 0x00, 0x2B
.byte 0x00, 0xD0, 0x1C, 0x60, 0x30, 0x78, 0x01, 0x28, 0x21, 0xD0, 0x70, 0x69, 0xA0, 0x42, 0x0C, 0xDA
.byte 0x33, 0x1C, 0x75, 0x68, 0x5A, 0x69, 0x90, 0x00, 0x40, 0x19, 0x19, 0x69, 0x00, 0x68, 0x09, 0x18
.byte 0x19, 0x61, 0x01, 0x32, 0x5A, 0x61, 0xA2, 0x42, 0xF4, 0xDB, 0x61, 0x46, 0x08, 0x68, 0x00, 0x28
.byte 0x00, 0xDA, 0x03, 0x30, 0x80, 0x10, 0x87, 0x42, 0x09, 0xDD, 0xF0, 0x68, 0x31, 0x69, 0x40, 0x18
.byte 0xF0, 0x60, 0x01, 0x21, 0x49, 0x42, 0x88, 0x42, 0x01, 0xD1, 0x01, 0x20, 0xF0, 0x70, 0x62, 0x46
.byte 0x10, 0x68, 0x01, 0x1C, 0x00, 0x28, 0x00, 0xDA, 0xC1, 0x1C, 0x89, 0x10, 0x8F, 0x42, 0x08, 0xDC
.byte 0xB4, 0x78, 0x05, 0x48, 0x48, 0x43, 0x05, 0x49, 0x4F, 0xF0, 0xB2, 0xFB, 0x08, 0x30, 0x84, 0x42
.byte 0x41, 0xD1, 0x03, 0x20, 0x70, 0x70, 0x3E, 0xE0, 0xD0, 0x11, 0x00, 0x00, 0x40, 0x49, 0x04, 0x00
.byte 0x14, 0x4B, 0x00, 0x24, 0x1C, 0x80, 0x14, 0x4A, 0x11, 0x88, 0x14, 0x48, 0x08, 0x40, 0x10, 0x80
.byte 0x01, 0x20, 0x18, 0x80, 0x12, 0x49, 0x80, 0x23, 0x5B, 0x01, 0x18, 0x1C, 0x08, 0x80, 0x80, 0x20
.byte 0x80, 0x01, 0x08, 0x60, 0x03, 0x30, 0x08, 0x60, 0xE0, 0x3A, 0x00, 0x20, 0x00, 0x21, 0x10, 0x60
.byte 0x51, 0x60, 0x30, 0x78, 0x00, 0x28, 0x02, 0xD0, 0x0A, 0x49, 0x00, 0x20, 0x08, 0x60, 0x0A, 0x48
.byte 0xC0, 0x21, 0x01, 0x80, 0x30, 0x78, 0x00, 0x28, 0x13, 0xD0, 0xB4, 0x70, 0x04, 0x20, 0x70, 0x70
.byte 0x11, 0xE0, 0x00, 0x00, 0x08, 0x02, 0x00, 0x04, 0x00, 0x02, 0x00, 0x04, 0x3F, 0xFF, 0x00, 0x00
.byte 0x28, 0x01, 0x00, 0x04, 0x0C, 0x01, 0x00, 0x04, 0x02, 0x02, 0x00, 0x04, 0xB0, 0x78, 0x02, 0x28
.byte 0x01, 0xD9, 0x01, 0x20, 0x03, 0xE0
_080127D6:
ldrb r0, [r6, #0x02]
adds r0, #0x01
strb r0, [r6, #0x02]
movs r0, #0x00
pop {r4, r5, r6, r7}
pop {r1}
bx r1
thumb_func_start sub_80127E4
sub_80127E4:
push {r4, r5, r6, r7, lr}
ldr r6, _08012808 @ =0x04000120
ldr r3, [r6, #0x00]
ldr r5, _0801280C @ =0x03002990
ldrb r0, [r5, #0x00]
adds r4, r5, #0x0
cmp r0, #0x01
beq _08012814
ldr r0, _08012810 @ =0x04000128
ldrh r1, [r0, #0x00]
movs r2, #0x80
orrs r1, r2
strh r1, [r0, #0x00]
ldr r2, [r4, #0x08]
cmp r2, #0x00
bge _08012874
b _0801285E
.byte 0x00, 0x00
_08012808: .4byte 0x04000120
_0801280C: .4byte 0x03002990
_08012810: .4byte 0x04000128
_08012814:
ldr r1, _08012828 @ =0x0400010E
movs r0, #0x00
strh r0, [r1, #0x00]
ldr r1, [r4, #0x08]
cmp r1, #0x00
bge _08012834
ldr r0, _0801282C @ =0xFEFEFEFE
str r0, [r6, #0x00]
ldr r7, _08012830 @ =0x030029D0
b _08012896
_08012828: .4byte 0x0400010E
_0801282C: .4byte 0xFEFEFEFE
_08012830: .4byte 0x030029D0
_08012834:
ldr r0, _08012854 @ =0x030029D0
ldr r2, [r0, #0x00]
adds r7, r0, #0x0
cmp r2, #0x00
bge _08012840
adds r2, #0x03
_08012840:
asrs r0, r2, #0x02
cmp r1, r0
bge _08012858
ldr r0, [r4, #0x04]
lsls r1, r1, #0x02
adds r1, r1, r0
ldr r0, [r1, #0x00]
str r0, [r6, #0x00]
b _08012896
.byte 0x00, 0x00
_08012854: .4byte 0x030029D0
_08012858:
ldr r0, [r4, #0x0C]
str r0, [r6, #0x00]
b _08012896
_0801285E:
ldr r0, _0801286C @ =0xFEFEFEFE
ldr r7, _08012870 @ =0x030029D0
cmp r3, r0
beq _08012896
subs r0, r2, #0x1
str r0, [r5, #0x08]
b _08012896
_0801286C: .4byte 0xFEFEFEFE
_08012870: .4byte 0x030029D0
_08012874:
ldr r0, _08012890 @ =0x030029D0
ldr r1, [r0, #0x00]
adds r7, r0, #0x0
cmp r1, #0x00
bge _08012880
adds r1, #0x03
_08012880:
asrs r0, r1, #0x02
cmp r2, r0
bge _08012894
ldr r1, [r4, #0x04]
lsls r0, r2, #0x02
adds r0, r0, r1
str r3, [r0, #0x00]
b _08012896
_08012890: .4byte 0x030029D0
_08012894:
str r3, [r4, #0x0C]
_08012896:
ldr r0, [r7, #0x00]
cmp r0, #0x00
bge _0801289E
adds r0, #0x03
_0801289E:
asrs r0, r0, #0x02
adds r0, #0x03
ldr r1, [r4, #0x08]
cmp r1, r0
bge _080128C2
adds r0, r1, #0x1
str r0, [r4, #0x08]
ldrb r0, [r4, #0x00]
cmp r0, #0x01
bne _080128C2
ldr r2, _080128C8 @ =0x04000128
ldrh r0, [r2, #0x00]
movs r1, #0x80
orrs r0, r1
strh r0, [r2, #0x00]
ldr r1, _080128CC @ =0x0400010E
movs r0, #0xC0
strh r0, [r1, #0x00]
_080128C2:
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_080128C8: .4byte 0x04000128
_080128CC: .4byte 0x0400010E
thumb_func_start sub_80128D0
sub_80128D0:
push {r4, r5, r6, r7, lr}
mov r7, r8
push {r7}
add sp, #-0x004
adds r5, r0, #0x0
adds r7, r1, #0x0
movs r6, #0x00
ldr r3, _08012920 @ =0x04000208
strh r6, [r3, #0x00]
ldr r2, _08012924 @ =0x04000200
ldrh r1, [r2, #0x00]
ldr r0, _08012928 @ =0x0000FF3F
ands r0, r1
strh r0, [r2, #0x00]
movs r0, #0x01
mov r8, r0
strh r0, [r3, #0x00]
str r6, [sp, #0x000]
ldr r4, _0801292C @ =0x03002990
ldr r2, _08012930 @ =0x05000006
mov r0, sp
adds r1, r4, #0x0
bl CpuSet
ldr r1, _08012934 @ =0x04000128
ldr r0, _08012938 @ =0x00002003
str r0, [r1, #0x00]
str r7, [r4, #0x04]
movs r0, #0x01
negs r0, r0
str r0, [r4, #0x08]
cmp r5, #0x00
beq _08012970
ldr r0, _0801293C @ =0x0400010C
str r6, [r0, #0x00]
mov r2, r8
strb r2, [r4, #0x00]
movs r1, #0x00
ldr r2, _08012940 @ =0x030029D0
b _0801294E
_08012920: .4byte 0x04000208
_08012924: .4byte 0x04000200
_08012928: .4byte 0x0000FF3F
_0801292C: .4byte 0x03002990
_08012930: .4byte 0x05000006
_08012934: .4byte 0x04000128
_08012938: .4byte 0x00002003
_0801293C: .4byte 0x0400010C
_08012940: .4byte 0x030029D0
_08012944:
lsls r0, r1, #0x02
adds r0, r0, r7
ldr r0, [r0, #0x00]
adds r6, r6, r0
adds r1, #0x01
_0801294E:
ldr r0, [r2, #0x00]
cmp r0, #0x00
bge _08012956
adds r0, #0x03
_08012956:
asrs r0, r0, #0x02
cmp r1, r0
blt _08012944
mvns r0, r6
str r0, [r4, #0x0C]
ldr r1, _0801297C @ =0x04000128
movs r2, #0x80
lsls r2, r2, #0x05
adds r0, r2, #0x0
strh r0, [r1, #0x00]
adds r2, #0x01
adds r0, r2, #0x0
strh r0, [r1, #0x00]
_08012970:
add sp, #0x004
pop {r3}
mov r8, r3
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_0801297C: .4byte 0x04000128
thumb_func_start sub_8012980
sub_8012980:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x01C
adds r6, r0, #0x0
movs r1, #0xF3
lsls r1, r1, #0x02
adds r0, r6, r1
ldr r0, [r0, #0x00]
mov r9, r0
movs r2, #0xF8
lsls r2, r2, #0x02
adds r0, r6, r2
ldr r0, [r0, #0x00]
cmp r0, r9
beq _08012A0E
mov r4, r9
cmp r4, #0x01
bgt _080129C8
movs r0, #0x00
str r0, [sp, #0x008]
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
ldr r2, _080129C4 @ =0x01000080
add r0, sp, #0x008
bl CpuFastSet
b _080129E6
.byte 0x00, 0x00
_080129C4: .4byte 0x01000080
_080129C8:
ldr r1, _08012B18 @ =0x080D9E44
mov r0, r9
subs r0, #0x02
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r4, [r0, #0x00]
movs r0, #0x00
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
_080129E6:
movs r0, #0x01
bl map_setBufferDirty
movs r5, #0xF8
lsls r5, r5, #0x02
adds r0, r6, r5
mov r1, r9
str r1, [r0, #0x00]
movs r2, #0xF7
lsls r2, r2, #0x02
adds r1, r6, r2
movs r0, #0x00
str r0, [r1, #0x00]
movs r4, #0xF6
lsls r4, r4, #0x02
adds r1, r6, r4
subs r5, #0x0C
adds r0, r6, r5
ldr r0, [r0, #0x00]
str r0, [r1, #0x00]
_08012A0E:
mov r0, r9
cmp r0, #0x01
ble _08012A16
b _08012B2C
_08012A16:
movs r2, #0xF7
lsls r2, r2, #0x02
adds r1, r6, r2
ldr r0, [r1, #0x00]
adds r0, #0x01
str r0, [r1, #0x00]
cmp r0, #0x10
bgt _08012A62
ldr r1, _08012B1C @ =0x080E645C
lsls r0, r0, #0x1A
asrs r0, r0, #0x10
cmp r0, #0x00
bge _08012A32
adds r0, #0x3F
_08012A32:
lsls r0, r0, #0x10
lsrs r0, r0, #0x16
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r3, [r0, #0x00]
movs r4, #0xF6
lsls r4, r4, #0x02
adds r2, r6, r4
movs r5, #0x00
ldsh r1, [r2, r5]
movs r0, #0x78
subs r0, r0, r1
muls r0, r3
asrs r0, r0, #0x0F
ldrh r2, [r2, #0x00]
adds r0, r0, r2
movs r2, #0xF5
lsls r2, r2, #0x02
adds r1, r6, r2
strh r0, [r1, #0x00]
subs r4, #0x02
adds r1, r6, r4
movs r0, #0x45
strh r0, [r1, #0x00]
_08012A62:
movs r1, #0x80
lsls r1, r1, #0x01
movs r5, #0xFF
lsls r5, r5, #0x02
adds r0, r6, r5
ldr r2, [r0, #0x00]
movs r0, #0x0B
str r0, [sp, #0x000]
movs r0, #0x80
movs r3, #0x10
bl sub_800E930
adds r3, r0, #0x0
movs r1, #0xF5
lsls r1, r1, #0x02
adds r0, r6, r1
ldr r2, _08012B20 @ =0x000003D6
adds r1, r6, r2
movs r4, #0xF9
lsls r4, r4, #0x02
adds r2, r6, r4
movs r5, #0x00
ldsh r4, [r0, r5]
movs r0, #0x00
ldsh r5, [r1, r0]
ldr r1, _08012B24 @ =0x080D9F70
movs r0, #0x0E
ldsb r0, [r2, r0]
lsls r0, r0, #0x03
adds r0, r0, r1
ldrb r1, [r0, #0x04]
ldrh r0, [r2, #0x10]
adds r0, #0x01
strh r0, [r2, #0x10]
lsls r0, r0, #0x10
asrs r0, r0, #0x10
cmp r0, r1
ble _08012AC4
movs r0, #0x00
strh r0, [r2, #0x10]
ldrb r0, [r2, #0x0E]
adds r0, #0x01
strb r0, [r2, #0x0E]
lsls r0, r0, #0x18
lsrs r0, r0, #0x18
cmp r0, #0x09
bls _08012AC4
movs r0, #0x00
strb r0, [r2, #0x0E]
_08012AC4:
lsls r1, r4, #0x10
adds r0, r5, #0x4
lsls r0, r0, #0x10
lsrs r1, r1, #0x10
orrs r1, r0
str r1, [sp, #0x00C]
ldr r1, _08012B24 @ =0x080D9F70
movs r0, #0x0E
ldsb r0, [r2, r0]
lsls r0, r0, #0x03
adds r0, r0, r1
ldr r0, [r0, #0x00]
add r1, sp, #0x00C
movs r4, #0x00
str r4, [sp, #0x000]
str r4, [sp, #0x004]
adds r2, r3, #0x0
bl oam_renderCellData
movs r1, #0x80
lsls r1, r1, #0x01
movs r2, #0xFF
lsls r2, r2, #0x02
adds r0, r6, r2
ldr r2, [r0, #0x00]
movs r0, #0x0B
str r0, [sp, #0x000]
movs r0, #0x80
movs r3, #0x10
bl sub_800E930
adds r3, r0, #0x0
ldr r0, _08012B28 @ =0x080CA6E8
movs r5, #0xF5
lsls r5, r5, #0x02
adds r1, r6, r5
str r4, [sp, #0x000]
str r4, [sp, #0x004]
adds r2, r3, #0x0
bl oam_renderCellData
b _08012C88
_08012B18: .4byte 0x080D9E44
_08012B1C: .4byte 0x080E645C
_08012B20: .4byte 0x000003D6
_08012B24: .4byte 0x080D9F70
_08012B28: .4byte 0x080CA6E8
_08012B2C:
movs r7, #0x00
cmp r7, r9
blt _08012B34
b _08012C88
_08012B34:
ldr r0, _08012BAC @ =0x0000FFFF
mov r10, r0
_08012B38:
ldr r0, _08012BB0 @ =0x080D9F5C
mov r1, r9
subs r1, #0x02
adds r1, r1, r0
lsls r0, r7, #0x04
subs r0, r0, r7
lsls r0, r0, #0x02
ldrb r1, [r1, #0x00]
adds r3, r0, r1
movs r1, #0xF4
lsls r1, r1, #0x02
adds r0, r6, r1
ldr r0, [r0, #0x00]
cmp r7, r0
bne _08012BB8
movs r2, #0xF7
lsls r2, r2, #0x02
adds r1, r6, r2
ldr r0, [r1, #0x00]
adds r0, #0x01
str r0, [r1, #0x00]
cmp r0, #0x10
bgt _08012BA0
ldr r1, _08012BB4 @ =0x080E645C
lsls r0, r0, #0x1A
asrs r0, r0, #0x10
cmp r0, #0x00
bge _08012B72
adds r0, #0x3F
_08012B72:
lsls r0, r0, #0x10
lsrs r0, r0, #0x16
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r2, [r0, #0x00]
movs r4, #0xF6
lsls r4, r4, #0x02
adds r1, r6, r4
movs r5, #0x00
ldsh r0, [r1, r5]
subs r0, r3, r0
muls r0, r2
asrs r0, r0, #0x0F
ldrh r1, [r1, #0x00]
adds r0, r0, r1
movs r2, #0xF5
lsls r2, r2, #0x02
adds r1, r6, r2
strh r0, [r1, #0x00]
subs r4, #0x02
adds r1, r6, r4
movs r0, #0x45
strh r0, [r1, #0x00]
_08012BA0:
movs r5, #0xF5
lsls r5, r5, #0x02
adds r0, r6, r5
ldr r0, [r0, #0x00]
str r0, [sp, #0x018]
b _08012BD0
_08012BAC: .4byte 0x0000FFFF
_08012BB0: .4byte 0x080D9F5C
_08012BB4: .4byte 0x080E645C
_08012BB8:
lsls r0, r3, #0x10
lsrs r0, r0, #0x10
ldr r1, [sp, #0x018]
ldr r2, _08012C60 @ =0xFFFF0000
ands r1, r2
orrs r1, r0
mov r4, r10
ands r1, r4
movs r0, #0x8A
lsls r0, r0, #0x0F
orrs r1, r0
str r1, [sp, #0x018]
_08012BD0:
movs r5, #0xF4
lsls r5, r5, #0x02
adds r5, r5, r6
mov r8, r5
ldr r0, [r5, #0x00]
add r5, sp, #0x018
cmp r7, r0
bne _08012C12
ldrh r0, [r5, #0x00]
ldr r1, [sp, #0x010]
ldr r2, _08012C60 @ =0xFFFF0000
ands r1, r2
orrs r1, r0
ldr r0, [sp, #0x018]
asrs r0, r0, #0x10
adds r0, #0x10
lsls r0, r0, #0x10
mov r4, r10
ands r1, r4
orrs r1, r0
str r1, [sp, #0x010]
ldr r1, _08012C64 @ =0x080D9F60
lsls r0, r7, #0x02
adds r0, r0, r1
ldr r0, [r0, #0x00]
movs r1, #0x00
str r1, [sp, #0x000]
str r1, [sp, #0x004]
add r1, sp, #0x010
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
_08012C12:
ldrh r0, [r5, #0x00]
subs r0, #0x01
lsls r0, r0, #0x10
lsrs r0, r0, #0x10
ldr r1, [sp, #0x014]
ldr r2, _08012C60 @ =0xFFFF0000
ands r1, r2
orrs r1, r0
ldr r0, [sp, #0x018]
asrs r0, r0, #0x10
adds r0, #0x01
lsls r0, r0, #0x10
mov r4, r10
ands r1, r4
orrs r1, r0
str r1, [sp, #0x014]
movs r4, #0x00
str r4, [sp, #0x000]
str r4, [sp, #0x004]
ldr r0, _08012C68 @ =0x080D9E3C
add r1, sp, #0x014
movs r2, #0xAA
movs r3, #0xCC
bl oam_renderCellData
mov r1, r8
ldr r0, [r1, #0x00]
cmp r7, r0
bne _08012C70
str r4, [sp, #0x000]
str r4, [sp, #0x004]
ldr r0, _08012C6C @ =0x080D9E2C
adds r1, r5, #0x0
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
b _08012C80
.byte 0x00, 0x00
_08012C60: .4byte 0xFFFF0000
_08012C64: .4byte 0x080D9F60
_08012C68: .4byte 0x080D9E3C
_08012C6C: .4byte 0x080D9E2C
_08012C70:
str r4, [sp, #0x000]
str r4, [sp, #0x004]
ldr r0, _08012C98 @ =0x080D9E34
adds r1, r5, #0x0
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
_08012C80:
adds r7, #0x01
cmp r7, r9
bge _08012C88
b _08012B38
_08012C88:
add sp, #0x01C
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_08012C98: .4byte 0x080D9E34
thumb_func_start sub_8012C9C
sub_8012C9C:
push {lr}
add sp, #-0x00C
movs r1, #0xED
lsls r1, r1, #0x02
adds r3, r0, r1
movs r0, #0x0E
ldsb r0, [r3, r0]
cmp r0, #0x05
bhi _08012D92
lsls r0, r0, #0x02
ldr r1, _08012CB8 @ =0x08012CBC
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
_08012CB8: .4byte 0x08012CBC
.byte 0x92, 0x2D, 0x01, 0x08, 0xD4, 0x2C, 0x01, 0x08, 0xDC, 0x2C, 0x01, 0x08, 0x18, 0x2D, 0x01, 0x08
.byte 0x38, 0x2D, 0x01, 0x08, 0x4A, 0x2D, 0x01, 0x08, 0x00, 0x20, 0x18, 0x82, 0x02, 0x20, 0x30, 0xE0
.byte 0x18, 0x8A, 0x01, 0x30, 0x18, 0x82, 0x00, 0x04, 0x00, 0x14, 0x10, 0x28, 0x12, 0xDC, 0x10, 0x22
.byte 0x98, 0x5E, 0x07, 0x49, 0x80, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04
.byte 0x80, 0x0D, 0x80, 0x00, 0x40, 0x18, 0x02, 0x68, 0x04, 0x20, 0x19, 0x5E, 0xF0, 0x20, 0x36, 0xE0
.byte 0x5C, 0x64, 0x0E, 0x08, 0x00, 0x20, 0x18, 0x82, 0x03, 0x20, 0x3B, 0xE0, 0x18, 0x8A, 0x01, 0x30
.byte 0x00, 0x21, 0x18, 0x82, 0x00, 0x04, 0x00, 0x14, 0x1E, 0x28, 0x00, 0xDD, 0x19, 0x82, 0x10, 0x22
.byte 0x98, 0x5E, 0x09, 0x28, 0x06, 0xDC, 0x59, 0x81, 0x19, 0x81, 0x2C, 0xE0, 0x00, 0x20, 0x18, 0x82
.byte 0x05, 0x20, 0x98, 0x73, 0x80, 0x20, 0x40, 0x00, 0x58, 0x81, 0x18, 0x81, 0x23, 0xE0, 0x18, 0x8A
.byte 0x01, 0x30, 0x18, 0x82, 0x00, 0x04, 0x00, 0x14, 0x10, 0x28, 0x19, 0xDC, 0x10, 0x21, 0x58, 0x5E
.byte 0x0A, 0x49, 0x80, 0x06, 0x00, 0x14, 0x00, 0x28, 0x00, 0xDA, 0x3F, 0x30, 0x00, 0x04, 0x80, 0x0D
.byte 0x80, 0x00, 0x40, 0x18, 0x02, 0x68, 0x04, 0x20, 0x19, 0x5E, 0x94, 0x20, 0x40, 0x00, 0x40, 0x1A
.byte 0x50, 0x43, 0xC0, 0x13, 0x99, 0x88, 0x40, 0x18, 0x98, 0x80, 0x04, 0xE0, 0x5C, 0x64, 0x0E, 0x08
.byte 0x00, 0x20, 0x18, 0x82, 0x98, 0x73
_08012D92:
movs r2, #0x08
ldsh r0, [r3, r2]
cmp r0, #0x00
beq _08012DBE
movs r1, #0x0A
ldsh r0, [r3, r1]
cmp r0, #0x00
beq _08012DBE
ldrh r1, [r3, #0x06]
lsls r1, r1, #0x10
ldrh r0, [r3, #0x04]
orrs r0, r1
str r0, [sp, #0x008]
ldr r0, [r3, #0x00]
movs r1, #0x00
str r1, [sp, #0x000]
str r1, [sp, #0x004]
add r1, sp, #0x008
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
_08012DBE:
add sp, #0x00C
pop {r0}
bx r0
thumb_func_start sub_8012DC4
sub_8012DC4:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
adds r5, r0, #0x0
movs r4, #0x00
movs r1, #0xFF
lsls r1, r1, #0x02
mov r8, r1
movs r7, #0x80
lsls r7, r7, #0x01
adds r3, r5, #0x0
add r3, r8
mov r9, r3
movs r6, #0x00
mov r12, r6
_08012DE6:
movs r0, #0xA5
lsls r0, r0, #0x02
add r0, r12
adds r2, r5, r0
ldr r0, [r2, #0x1C]
cmp r0, #0x01
beq _08012E2C
cmp r0, #0x01
bgt _08012DFE
cmp r0, #0x00
beq _08012E08
b _08012EB0
_08012DFE:
cmp r0, #0x02
beq _08012E3C
cmp r0, #0x03
beq _08012E7C
b _08012EB0
_08012E08:
ldr r0, _08012E28 @ =0x0000FFF0
strh r0, [r2, #0x00]
movs r0, #0x58
strh r0, [r2, #0x02]
movs r0, #0x60
str r0, [r2, #0x04]
subs r0, #0x61
str r0, [r2, #0x08]
str r4, [r2, #0x14]
movs r0, #0x01
str r0, [r2, #0x1C]
str r6, [r2, #0x18]
movs r0, #0x03
str r0, [r2, #0x20]
b _08012EB0
.byte 0x00, 0x00
_08012E28: .4byte 0x0000FFF0
_08012E2C:
ldr r0, [r2, #0x18]
subs r0, #0x01
str r0, [r2, #0x18]
cmp r0, #0x00
bge _08012EB0
movs r0, #0x00
str r0, [r2, #0x18]
b _08012EAC
_08012E3C:
mov r0, r8
adds r1, r5, r0
ldr r0, [r1, #0x00]
movs r3, #0x01
ands r0, r3
cmp r0, #0x00
beq _08012E5E
ldrh r0, [r2, #0x00]
adds r0, #0x01
strh r0, [r2, #0x00]
ldr r0, [r1, #0x00]
ands r0, r3
cmp r0, #0x00
beq _08012E5E
ldrh r0, [r2, #0x02]
adds r0, #0x01
b _08012E62
_08012E5E:
ldrh r0, [r2, #0x02]
subs r0, #0x01
_08012E62:
strh r0, [r2, #0x02]
ldrh r1, [r2, #0x00]
movs r3, #0x00
ldsh r0, [r2, r3]
cmp r0, r7
ble _08012EB0
ldr r3, _08012E78 @ =0xFFFFFEF0
adds r0, r1, r3
strh r0, [r2, #0x00]
movs r0, #0x03
b _08012EAE
_08012E78: .4byte 0xFFFFFEF0
_08012E7C:
mov r1, r9
ldr r0, [r1, #0x00]
movs r1, #0x01
ands r0, r1
cmp r0, #0x00
beq _08012E8E
ldrh r0, [r2, #0x00]
adds r0, #0x01
strh r0, [r2, #0x00]
_08012E8E:
ldr r0, [r2, #0x04]
adds r0, #0x02
movs r1, #0x7F
ands r0, r1
str r0, [r2, #0x04]
ldrh r1, [r2, #0x00]
movs r3, #0x00
ldsh r0, [r2, r3]
cmp r0, r7
ble _08012EB0
ldr r3, _08012ECC @ =0xFFFFFEF0
adds r0, r1, r3
strh r0, [r2, #0x00]
movs r0, #0x60
str r0, [r2, #0x04]
_08012EAC:
movs r0, #0x02
_08012EAE:
str r0, [r2, #0x1C]
_08012EB0:
adds r6, #0x42
movs r0, #0x24
add r12, r0
adds r4, #0x01
cmp r4, #0x07
ble _08012DE6
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_08012ECC: .4byte 0xFFFFFEF0
thumb_func_start sub_8012ED0
sub_8012ED0:
push {r4, r5, r6, r7, lr}
mov r7, r9
mov r6, r8
push {r6, r7}
add sp, #-0x00C
mov r8, r0
bl sub_8012DC4
movs r5, #0x00
mov r9, r5
_08012EE4:
lsls r0, r5, #0x03
adds r0, r0, r5
lsls r0, r0, #0x02
movs r1, #0xA5
lsls r1, r1, #0x02
adds r0, r0, r1
mov r2, r8
adds r4, r2, r0
ldr r0, [r4, #0x08]
ldr r1, [r4, #0x04]
cmp r0, r1
beq _08012F32
cmp r1, #0x3F
ble _08012F06
movs r0, #0x7F
subs r0, r0, r1
b _08012F08
_08012F06:
adds r0, r1, #0x0
_08012F08:
bl sub_8008600
adds r2, r0, #0x0
ldr r1, [r4, #0x14]
lsls r0, r1, #0x01
adds r0, r0, r1
lsls r0, r0, #0x02
subs r0, r0, r1
lsls r0, r0, #0x0D
lsls r2, r2, #0x09
ldr r1, _08012F6C @ =0x08356800
adds r2, r2, r1
adds r0, r0, r2
lsls r1, r5, #0x0A
ldr r2, _08012F70 @ =0x06014000
adds r1, r1, r2
movs r2, #0x80
bl CpuFastSet
ldr r0, [r4, #0x04]
str r0, [r4, #0x08]
_08012F32:
ldr r1, _08012F74 @ =0x080D9FC0
lsls r0, r5, #0x02
adds r0, r0, r1
adds r6, r4, #0x0
adds r6, #0x0C
ldr r7, [sp, #0x008]
adds r5, #0x01
ldr r2, [r0, #0x00]
adds r1, r6, #0x0
movs r3, #0x03
_08012F46:
ldrh r0, [r2, #0x00]
strh r0, [r1, #0x00]
adds r2, #0x02
adds r1, #0x02
subs r3, #0x01
cmp r3, #0x00
bge _08012F46
ldr r0, [r4, #0x04]
movs r1, #0x40
ands r0, r1
cmp r0, #0x00
beq _08012F78
ldrh r1, [r4, #0x10]
movs r2, #0x80
lsls r2, r2, #0x05
adds r0, r2, #0x0
orrs r0, r1
b _08012F80
.byte 0x00, 0x00
_08012F6C: .4byte 0x08356800
_08012F70: .4byte 0x06014000
_08012F74: .4byte 0x080D9FC0
_08012F78:
ldrh r0, [r4, #0x10]
ldr r2, _08012FC0 @ =0x0000EFFF
adds r1, r2, #0x0
ands r0, r1
_08012F80:
strh r0, [r4, #0x10]
ldrh r1, [r4, #0x12]
ldr r2, _08012FC4 @ =0x0000F3FF
adds r0, r2, #0x0
ands r1, r0
ldr r0, [r4, #0x20]
lsls r0, r0, #0x0A
orrs r1, r0
strh r1, [r4, #0x12]
ldrh r1, [r4, #0x02]
lsls r1, r1, #0x10
ldrh r0, [r4, #0x00]
orrs r0, r1
str r0, [sp, #0x008]
mov r0, r9
str r0, [sp, #0x000]
str r0, [sp, #0x004]
adds r0, r6, #0x0
add r1, sp, #0x008
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
cmp r5, #0x07
ble _08012EE4
add sp, #0x00C
pop {r3, r4}
mov r8, r3
mov r9, r4
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_08012FC0: .4byte 0x0000EFFF
_08012FC4: .4byte 0x0000F3FF
thumb_func_start sub_8012FC8
sub_8012FC8:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x010
adds r7, r0, #0x0
movs r0, #0x01
str r0, [sp, #0x008]
movs r1, #0xB1
lsls r1, r1, #0x01
mov r10, r1
ldr r0, _08013024 @ =0x080C3D6A
str r0, [sp, #0x00C]
movs r1, #0x00
mov r8, r1
movs r0, #0x04
mov r9, r0
_08012FEC:
movs r1, #0xF3
lsls r1, r1, #0x02
adds r0, r7, r1
ldr r0, [r0, #0x00]
ldr r1, [sp, #0x008]
cmp r1, r0
bge _0801305C
adds r0, r7, #0x0
adds r0, #0x2C
mov r1, r9
adds r4, r0, r1
ldr r0, [r4, #0x00]
cmp r0, #0x00
bne _0801300E
movs r0, #0x8E
bl m4aSongNumStart
_0801300E:
ldr r1, [r4, #0x00]
adds r0, r1, #0x1
str r0, [r4, #0x00]
cmp r0, #0x10
bgt _0801302C
adds r5, r0, #0x0
ldr r6, _08013024 @ =0x080C3D6A
add r6, r8
ldr r4, _08013028 @ =0x080C3D7E
b _08013036
.byte 0x00, 0x00
_08013024: .4byte 0x080C3D6A
_08013028: .4byte 0x080C3D7E
_0801302C:
adds r5, r1, #0x0
subs r5, #0x0F
ldr r6, _08013054 @ =0x080C3D7E
add r6, r8
ldr r4, _08013058 @ =0x080C3D74
_08013036:
add r4, r8
movs r0, #0x00
bl pltt_getBuffer
adds r2, r0, #0x0
add r2, r10
str r5, [sp, #0x000]
movs r0, #0x10
str r0, [sp, #0x004]
adds r0, r6, #0x0
adds r1, r4, #0x0
movs r3, #0x05
bl sub_800F2D8
b _08013084
_08013054: .4byte 0x080C3D7E
_08013058: .4byte 0x080C3D74
_0801305C:
adds r0, r7, #0x0
adds r0, #0x2C
mov r1, r9
adds r4, r0, r1
ldr r0, [r4, #0x00]
cmp r0, #0x00
ble _08013070
movs r0, #0x90
bl m4aSongNumStart
_08013070:
movs r0, #0x00
str r0, [r4, #0x00]
bl pltt_getBuffer
adds r1, r0, #0x0
add r1, r10
ldr r0, [sp, #0x00C]
movs r2, #0x05
bl CpuSet
_08013084:
movs r0, #0x20
add r10, r0
ldr r1, [sp, #0x00C]
adds r1, #0x20
str r1, [sp, #0x00C]
add r8, r0
movs r0, #0x04
add r9, r0
ldr r1, [sp, #0x008]
adds r1, #0x01
str r1, [sp, #0x008]
cmp r1, #0x03
ble _08012FEC
movs r1, #0xF3
lsls r1, r1, #0x02
adds r0, r7, r1
ldr r0, [r0, #0x00]
cmp r0, #0x01
ble _08013104
adds r1, #0x04
adds r0, r7, r1
ldr r0, [r0, #0x00]
cmp r0, #0x01
bgt _080130B8
ldr r0, [r7, #0x30]
b _080130C2
_080130B8:
cmp r0, #0x02
bgt _080130C0
ldr r0, [r7, #0x34]
b _080130C2
_080130C0:
ldr r0, [r7, #0x38]
_080130C2:
cmp r0, #0x10
bgt _080130D8
adds r4, r0, #0x0
ldr r6, _080130D0 @ =0x080C3DC8
ldr r5, _080130D4 @ =0x080C3DE8
b _080130E0
.byte 0x00, 0x00
_080130D0: .4byte 0x080C3DC8
_080130D4: .4byte 0x080C3DE8
_080130D8:
adds r4, r0, #0x0
subs r4, #0x10
ldr r6, _080130FC @ =0x080C3DE8
ldr r5, _08013100 @ =0x080C3DC8
_080130E0:
movs r0, #0x01
bl pltt_getBuffer
adds r2, r0, #0x0
adds r2, #0xC0
str r4, [sp, #0x000]
movs r0, #0x10
str r0, [sp, #0x004]
adds r0, r6, #0x0
adds r1, r5, #0x0
movs r3, #0x10
bl sub_800F2D8
b _08013118
_080130FC: .4byte 0x080C3DE8
_08013100: .4byte 0x080C3DC8
_08013104:
ldr r4, _08013130 @ =0x080C3DC8
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0xC0
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
_08013118:
movs r0, #0x01
bl pltt_setDirtyFlag
add sp, #0x010
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_08013130: .4byte 0x080C3DC8
thumb_func_start sub_8013134
sub_8013134:
ldr r0, _080131D8 @ =0x03000168
ldr r1, [r0, #0x00]
movs r0, #0x80
lsls r0, r0, #0x03
adds r2, r1, r0
ldr r0, [r2, #0x00]
asrs r0, r0, #0x02
ldrh r3, [r1, #0x10]
strh r0, [r1, #0x10]
ldr r0, [r2, #0x00]
negs r0, r0
asrs r0, r0, #0x02
ldrh r2, [r1, #0x12]
strh r0, [r1, #0x12]
movs r2, #0x80
lsls r2, r2, #0x13
ldrh r0, [r1, #0x00]
strh r0, [r2, #0x00]
adds r2, #0x08
ldrh r0, [r1, #0x02]
strh r0, [r2, #0x00]
adds r2, #0x08
ldrh r0, [r1, #0x04]
strh r0, [r2, #0x00]
adds r2, #0x02
ldrh r0, [r1, #0x06]
strh r0, [r2, #0x00]
subs r2, #0x08
ldrh r0, [r1, #0x08]
strh r0, [r2, #0x00]
adds r2, #0x0A
ldrh r0, [r1, #0x0A]
strh r0, [r2, #0x00]
adds r2, #0x02
ldrh r0, [r1, #0x0C]
strh r0, [r2, #0x00]
subs r2, #0x0A
ldrh r0, [r1, #0x0E]
strh r0, [r2, #0x00]
adds r2, #0x0C
ldrh r0, [r1, #0x10]
strh r0, [r2, #0x00]
adds r2, #0x02
ldrh r0, [r1, #0x12]
strh r0, [r2, #0x00]
subs r2, #0x0C
ldrh r0, [r1, #0x14]
strh r0, [r2, #0x00]
adds r2, #0x0E
ldrh r0, [r1, #0x16]
strh r0, [r2, #0x00]
adds r2, #0x02
ldrh r0, [r1, #0x18]
strh r0, [r2, #0x00]
adds r2, #0x32
ldrh r0, [r1, #0x1A]
strh r0, [r2, #0x00]
adds r2, #0x02
ldrh r0, [r1, #0x1C]
strh r0, [r2, #0x00]
adds r2, #0x02
ldrh r0, [r1, #0x1E]
strh r0, [r2, #0x00]
subs r2, #0x14
ldrh r0, [r1, #0x20]
strh r0, [r2, #0x00]
adds r2, #0x04
ldrh r0, [r1, #0x22]
strh r0, [r2, #0x00]
subs r2, #0x02
ldrh r0, [r1, #0x24]
strh r0, [r2, #0x00]
adds r2, #0x04
ldrh r0, [r1, #0x26]
strh r0, [r2, #0x00]
adds r2, #0x02
ldrh r0, [r1, #0x28]
strh r0, [r2, #0x00]
adds r2, #0x02
ldrh r0, [r1, #0x2A]
strh r0, [r2, #0x00]
bx lr
_080131D8: .4byte 0x03000168
thumb_func_start sub_80131DC
sub_80131DC:
push {r4, r5, r6, r7, lr}
add sp, #-0x004
adds r7, r0, #0x0
movs r5, #0xC0
lsls r5, r5, #0x13
movs r4, #0x0F
_080131E8:
bl dmaq_getVBlankDmaQueue
ldr r1, _080134D0 @ =0x0203EC14
adds r2, r5, #0x0
ldr r3, _080134D4 @ =0x81000C00
bl dmaq_enqueue
bl main_frameProc
movs r0, #0xC0
lsls r0, r0, #0x05
adds r5, r5, r0
subs r4, #0x01
cmp r4, #0x00
bge _080131E8
ldr r4, _080134D8 @ =0x080C3A8C
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
ldr r4, _080134DC @ =0x0807CD48
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0xE0
adds r0, r4, #0x0
movs r2, #0x10
bl CpuFastSet
ldr r0, _080134E0 @ =0x0807D1E8
ldr r4, _080134E4 @ =0x02010400
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _080134E8 @ =0x06004000
ldr r6, _080134EC @ =0x80000600
adds r1, r4, #0x0
adds r3, r6, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _080134F0 @ =0x080A97F8
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _080134F4 @ =0x06008000
ldr r5, _080134F8 @ =0x80000C00
adds r1, r4, #0x0
adds r3, r5, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _080134FC @ =0x080A9E2C
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _08013500 @ =0x06009800
adds r1, r4, #0x0
adds r3, r5, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08013504 @ =0x080AA56C
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _08013508 @ =0x0600B000
adds r1, r4, #0x0
adds r3, r5, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _0801350C @ =0x080C3E08
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _08013510 @ =0x0600C800
ldr r5, _08013514 @ =0x80000400
adds r1, r4, #0x0
adds r3, r5, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08013518 @ =0x080BB758
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0801351C @ =0x0600F400
adds r1, r4, #0x0
adds r3, r6, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08013520 @ =0x0807DA94
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
movs r2, #0xC0
lsls r2, r2, #0x13
adds r1, r4, #0x0
adds r3, r5, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08013524 @ =0x0807DB98
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _08013528 @ =0x06000800
ldr r5, _0801352C @ =0x80000280
adds r1, r4, #0x0
adds r3, r5, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08013530 @ =0x080C4DAC
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _08013534 @ =0x06001800
adds r1, r4, #0x0
adds r3, r5, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r4, _08013538 @ =0x080C499C
movs r0, #0x00
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
movs r5, #0x00
str r5, [sp, #0x000]
movs r0, #0x00
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
ldr r2, _0801353C @ =0x01000080
mov r0, sp
bl CpuFastSet
movs r0, #0x00
movs r1, #0x00
movs r2, #0x15
bl map_getBufferPtr2d
adds r4, r0, #0x0
movs r0, #0x00
movs r1, #0x00
movs r2, #0x0D
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
movs r2, #0x60
bl CpuFastSet
ldr r1, _08013540 @ =0x06001000
movs r0, #0x00
bl map_setBufferDestination
movs r0, #0x01
bl map_setBufferDirty
bl main_frameProc
ldr r4, _08013544 @ =0x080C3B68
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
movs r0, #0x01
bl pltt_getBuffer
strh r5, [r0, #0x00]
movs r6, #0x80
lsls r6, r6, #0x01
ldr r5, _08013548 @ =0x08344600
movs r4, #0x07
_0801339E:
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, r1, r6
adds r0, r5, #0x0
movs r2, #0x08
bl CpuFastSet
adds r6, #0x20
movs r2, #0x80
lsls r2, r2, #0x02
adds r5, r5, r2
subs r4, #0x01
cmp r4, #0x00
bge _0801339E
movs r0, #0x01
bl pltt_setDirtyFlag
ldr r0, _0801354C @ =0x080C41BC
ldr r4, _080134E4 @ =0x02010400
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _08013550 @ =0x06010000
ldr r3, _08013554 @ =0x80000A00
adds r1, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08013558 @ =0x080C3870
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0801355C @ =0x06011400
ldr r3, _08013560 @ =0x80000040
adds r1, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08013564 @ =0x080C2FA8
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _08013568 @ =0x06011800
ldr r3, _0801356C @ =0x80000800
adds r1, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08013570 @ =0x080C5130
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _08013574 @ =0x06017000
ldr r5, _08013514 @ =0x80000400
adds r1, r4, #0x0
adds r3, r5, #0x0
bl dmaq_enqueue
bl main_frameProc
bl dmaq_getVBlankDmaQueue
ldr r1, _08013578 @ =0x0203EC16
ldr r2, _0801357C @ =0x06013C00
ldr r3, _08013580 @ =0x81000040
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08013584 @ =0x080C53CC
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _08013588 @ =0x06017800
adds r1, r4, #0x0
adds r3, r5, #0x0
bl dmaq_enqueue
bl main_frameProc
ldrh r0, [r7, #0x02]
movs r1, #0x00
ldr r0, _0801358C @ =0x00004208
strh r0, [r7, #0x02]
ldrh r0, [r7, #0x08]
ldr r0, _08013590 @ =0x00004309
strh r0, [r7, #0x08]
ldrh r0, [r7, #0x0E]
movs r0, #0x06
strh r0, [r7, #0x0E]
ldrh r0, [r7, #0x14]
movs r0, #0x83
lsls r0, r0, #0x01
strh r0, [r7, #0x14]
ldrh r0, [r7, #0x00]
movs r0, #0xFA
lsls r0, r0, #0x05
strh r0, [r7, #0x00]
ldrh r0, [r7, #0x1A]
movs r0, #0xBF
strh r0, [r7, #0x1A]
ldrh r0, [r7, #0x1E]
movs r0, #0x10
strh r0, [r7, #0x1E]
ldrh r0, [r7, #0x04]
strh r1, [r7, #0x04]
ldrh r0, [r7, #0x06]
strh r1, [r7, #0x06]
ldrh r0, [r7, #0x0A]
strh r1, [r7, #0x0A]
ldrh r0, [r7, #0x0C]
strh r1, [r7, #0x0C]
ldrh r0, [r7, #0x10]
strh r1, [r7, #0x10]
ldrh r0, [r7, #0x12]
strh r1, [r7, #0x12]
ldrh r0, [r7, #0x16]
strh r1, [r7, #0x16]
ldrh r0, [r7, #0x18]
strh r1, [r7, #0x18]
movs r2, #0x80
lsls r2, r2, #0x03
adds r0, r7, r2
str r1, [r0, #0x00]
ldrh r0, [r7, #0x2A]
ldr r0, _08013594 @ =0x0000303F
strh r0, [r7, #0x2A]
ldrh r1, [r7, #0x00]
movs r2, #0x80
lsls r2, r2, #0x08
adds r0, r2, #0x0
ldrh r2, [r7, #0x00]
orrs r0, r1
strh r0, [r7, #0x00]
add sp, #0x004
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_080134D0: .4byte 0x0203EC14
_080134D4: .4byte 0x81000C00
_080134D8: .4byte 0x080C3A8C
_080134DC: .4byte 0x0807CD48
_080134E0: .4byte 0x0807D1E8
_080134E4: .4byte 0x02010400
_080134E8: .4byte 0x06004000
_080134EC: .4byte 0x80000600
_080134F0: .4byte 0x080A97F8
_080134F4: .4byte 0x06008000
_080134F8: .4byte 0x80000C00
_080134FC: .4byte 0x080A9E2C
_08013500: .4byte 0x06009800
_08013504: .4byte 0x080AA56C
_08013508: .4byte 0x0600B000
_0801350C: .4byte 0x080C3E08
_08013510: .4byte 0x0600C800
_08013514: .4byte 0x80000400
_08013518: .4byte 0x080BB758
_0801351C: .4byte 0x0600F400
_08013520: .4byte 0x0807DA94
_08013524: .4byte 0x0807DB98
_08013528: .4byte 0x06000800
_0801352C: .4byte 0x80000280
_08013530: .4byte 0x080C4DAC
_08013534: .4byte 0x06001800
_08013538: .4byte 0x080C499C
_0801353C: .4byte 0x01000080
_08013540: .4byte 0x06001000
_08013544: .4byte 0x080C3B68
_08013548: .4byte 0x08344600
_0801354C: .4byte 0x080C41BC
_08013550: .4byte 0x06010000
_08013554: .4byte 0x80000A00
_08013558: .4byte 0x080C3870
_0801355C: .4byte 0x06011400
_08013560: .4byte 0x80000040
_08013564: .4byte 0x080C2FA8
_08013568: .4byte 0x06011800
_0801356C: .4byte 0x80000800
_08013570: .4byte 0x080C5130
_08013574: .4byte 0x06017000
_08013578: .4byte 0x0203EC16
_0801357C: .4byte 0x06013C00
_08013580: .4byte 0x81000040
_08013584: .4byte 0x080C53CC
_08013588: .4byte 0x06017800
_0801358C: .4byte 0x00004208
_08013590: .4byte 0x00004309
_08013594: .4byte 0x0000303F
thumb_func_start multilink_main
multilink_main: @ 08013598
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x058
movs r0, #0x00
str r0, [sp, #0x034]
movs r1, #0x00
str r1, [sp, #0x038]
movs r3, #0x00
str r3, [sp, #0x03C]
movs r6, #0x00
str r6, [sp, #0x040]
str r0, [sp, #0x044]
mov r9, r0
str r1, [sp, #0x048]
str r3, [sp, #0x04C]
ldr r4, _08013754 @ =0x03002C80
ldr r5, _08013758 @ =0x03004F50
ldr r6, _0801375C @ =0x03002E20
mov r8, r6
ldr r1, _08013760 @ =0x0202A400
movs r2, #0x03
adds r0, r4, #0x0
adds r0, #0x08
_080135CC:
strh r3, [r0, #0x00]
subs r0, #0x02
subs r2, #0x01
cmp r2, #0x00
bge _080135CC
movs r6, #0x00
strh r6, [r5, #0x00]
ldr r4, _08013764 @ =0x00000704
add r4, r8
movs r2, #0x80
lsls r2, r2, #0x08
adds r0, r4, #0x0
bl frmheap_init
ldr r5, _08013768 @ =0x03000168
ldr r2, _0801376C @ =0x00000404
adds r0, r4, #0x0
movs r1, #0x01
bl frmheap_calloc
str r0, [r5, #0x00]
adds r7, r0, #0x0
bl oam_init
ldrh r0, [r7, #0x1A]
movs r5, #0x00
movs r0, #0xBF
strh r0, [r7, #0x1A]
ldrh r0, [r7, #0x1E]
movs r0, #0x10
strh r0, [r7, #0x1E]
movs r1, #0xF4
lsls r1, r1, #0x02
adds r0, r7, r1
str r5, [r0, #0x00]
movs r3, #0xF5
lsls r3, r3, #0x02
adds r2, r7, r3
movs r0, #0x78
strh r0, [r2, #0x00]
ldr r0, _08013770 @ =0x000003D6
adds r1, r7, r0
movs r0, #0x45
strh r0, [r1, #0x00]
adds r3, #0x04
adds r1, r7, r3
ldr r0, [r2, #0x00]
str r0, [r1, #0x00]
movs r1, #0xF7
lsls r1, r1, #0x02
adds r0, r7, r1
str r5, [r0, #0x00]
adds r3, #0x08
adds r0, r7, r3
str r5, [r0, #0x00]
ldr r4, _08013774 @ =0x08013135
movs r0, #0x01
movs r1, #0x02
negs r1, r1
bl irq_updateMask
mov r0, r8
str r4, [r0, #0x0C]
movs r0, #0x02
ldr r1, _08013778 @ =0x00010001
bl irq_updateMask
movs r0, #0x28
bl m4aSongNumStart
adds r0, r7, #0x0
bl sub_80131DC
adds r2, r7, #0x0
adds r2, #0x3C
ldr r3, _0801377C @ =0x080D9F24
movs r0, #0x70
movs r1, #0x14
bl sub_8003FD0
movs r1, #0xED
lsls r1, r1, #0x02
adds r0, r7, r1
ldr r1, _08013780 @ =0x080CA728
str r1, [r0, #0x00]
movs r1, #0x94
lsls r1, r1, #0x01
strh r1, [r0, #0x04]
movs r1, #0x90
strh r1, [r0, #0x06]
adds r1, #0x70
strh r1, [r0, #0x0A]
strh r1, [r0, #0x08]
strh r5, [r0, #0x0C]
strb r6, [r0, #0x0E]
strh r5, [r0, #0x10]
movs r3, #0xF9
lsls r3, r3, #0x02
adds r0, r7, r3
strb r6, [r0, #0x0E]
strh r5, [r0, #0x10]
ldr r6, [sp, #0x034]
lsls r6, r6, #0x02
str r6, [sp, #0x054]
ldr r0, [sp, #0x038]
adds r0, #0x01
str r0, [sp, #0x050]
movs r2, #0x00
movs r1, #0x07
subs r3, #0x54
adds r0, r7, r3
_080136AA:
str r2, [r0, #0x1C]
subs r0, #0x24
subs r1, #0x01
cmp r1, #0x00
bge _080136AA
movs r6, #0xF3
lsls r6, r6, #0x02
adds r1, r7, r6
movs r0, #0x00
str r0, [r1, #0x00]
movs r1, #0x2C
adds r1, r1, r7
mov r8, r1
movs r3, #0xFF
lsls r3, r3, #0x02
adds r5, r7, r3
_080136CA:
adds r6, r0, #0x1
movs r4, #0xFF
_080136CE:
ldr r0, [r5, #0x00]
adds r0, #0x01
str r0, [r5, #0x00]
adds r0, r7, #0x0
bl sub_8012DC4
subs r4, #0x01
cmp r4, #0x00
bge _080136CE
bl main_frameProc
adds r0, r6, #0x0
cmp r0, #0x01
ble _080136CA
ldr r4, _08013754 @ =0x03002C80
mov r1, r8
movs r2, #0x00
adds r0, r1, #0x0
adds r0, #0x0C
_080136F4:
str r2, [r0, #0x00]
subs r0, #0x04
cmp r0, r1
bge _080136F4
ldrh r1, [r4, #0x16]
movs r0, #0x80
lsls r0, r0, #0x08
ands r0, r1
cmp r0, #0x00
beq _0801370C
movs r0, #0x00
strh r0, [r4, #0x16]
_0801370C:
bl sub_8013E80
ldr r5, _08013774 @ =0x08013135
ldr r4, _0801375C @ =0x03002E20
movs r0, #0x01
movs r1, #0x02
negs r1, r1
bl irq_updateMask
str r5, [r4, #0x0C]
movs r0, #0x02
ldr r1, _08013778 @ =0x00010001
bl irq_updateMask
_08013728:
bl oam_update
bl main_frameProc
movs r6, #0x80
lsls r6, r6, #0x03
adds r1, r7, r6
ldr r0, [r1, #0x00]
adds r0, #0x01
str r0, [r1, #0x00]
movs r0, #0xFF
lsls r0, r0, #0x02
adds r1, r7, r0
ldr r0, [r1, #0x00]
adds r0, #0x01
str r0, [r1, #0x00]
ldr r1, [sp, #0x044]
cmp r1, #0x00
beq _08013784
subs r1, #0x01
str r1, [sp, #0x044]
b _080138DE
_08013754: .4byte 0x03002C80
_08013758: .4byte 0x03004F50
_0801375C: .4byte 0x03002E20
_08013760: .4byte 0x0202A400
_08013764: .4byte 0x00000704
_08013768: .4byte 0x03000168
_0801376C: .4byte 0x00000404
_08013770: .4byte 0x000003D6
_08013774: .4byte sub_8013134
_08013778: .4byte 0x00010001
_0801377C: .4byte 0x080D9F24
_08013780: .4byte 0x080CA728
_08013784:
ldr r3, [sp, #0x048]
cmp r3, #0x00
bne _08013792
bl main_getTriggerKeys
add r1, sp, #0x008
b _08013796
_08013792:
add r1, sp, #0x008
ldr r0, _08013804 @ =0x0000E3E3
_08013796:
strh r0, [r1, #0x00]
add r4, sp, #0x010
add r0, sp, #0x008
adds r1, r4, #0x0
movs r2, #0x00
bl sub_8011EE0
adds r5, r0, #0x0
ldr r0, _08013808 @ =0x04000200
ldrh r0, [r0, #0x00]
movs r1, #0x80
lsls r1, r1, #0x09
orrs r1, r0
movs r0, #0x00
bl irq_updateMask
bl sub_8012370
movs r6, #0x00
mov r8, r6
mov r10, r6
movs r0, #0xC0
lsls r0, r0, #0x06
ands r0, r5
cmp r0, #0x00
bne _08013834
movs r2, #0x00
mov r4, r9
adds r4, #0x01
ldr r0, _08013804 @ =0x0000E3E3
mov r9, r0
add r3, sp, #0x010
movs r1, #0x80
lsls r1, r1, #0x01
mov r12, r1
_080137DC:
mov r0, r12
lsls r0, r2
ands r0, r5
cmp r0, #0x00
beq _0801381A
adds r6, #0x01
movs r1, #0x01
lsls r1, r2
adds r0, r5, #0x0
ands r0, r1
cmp r0, #0x00
beq _08013812
movs r0, #0x01
add r8, r0
ldrh r0, [r3, #0x00]
cmp r0, r9
bne _0801380C
ldr r0, [sp, #0x04C]
orrs r0, r1
b _08013810
_08013804: .4byte 0x0000E3E3
_08013808: .4byte 0x04000200
_0801380C:
ldr r0, [sp, #0x04C]
bics r0, r1
_08013810:
str r0, [sp, #0x04C]
_08013812:
adds r3, #0x08
adds r2, #0x01
cmp r2, #0x03
ble _080137DC
_0801381A:
movs r2, #0x00
movs r1, #0x01
_0801381E:
ldr r0, [sp, #0x04C]
asrs r0, r2
ands r0, r1
cmp r0, #0x00
beq _0801382C
movs r3, #0x01
add r10, r3
_0801382C:
adds r2, #0x01
cmp r2, #0x03
ble _0801381E
b _08013848
_08013834:
bl sub_8012388
ldr r1, _080138C0 @ =0x00003EDE
movs r0, #0x00
bl sub_8011DF0
movs r0, #0x1E
str r0, [sp, #0x044]
mov r4, r9
adds r4, #0x01
_08013848:
movs r1, #0xF3
lsls r1, r1, #0x02
adds r2, r7, r1
str r6, [r2, #0x00]
movs r3, #0xF4
lsls r3, r3, #0x02
adds r1, r7, r3
ldr r0, _080138C4 @ =0x04000128
ldr r0, [r0, #0x00]
lsls r0, r0, #0x1A
lsrs r0, r0, #0x1E
str r0, [r1, #0x00]
movs r0, #0x00
str r0, [sp, #0x03C]
cmp r6, #0x01
ble _0801386C
movs r3, #0x01
str r3, [sp, #0x03C]
_0801386C:
mov r9, r4
cmp r6, r8
bne _08013876
movs r0, #0x00
mov r9, r0
_08013876:
mov r3, r9
cmp r3, #0x08
ble _080138A0
movs r0, #0x00
str r0, [r2, #0x00]
str r0, [r1, #0x00]
movs r6, #0x00
str r0, [sp, #0x03C]
movs r1, #0x00
str r1, [sp, #0x048]
movs r3, #0x00
str r3, [sp, #0x04C]
mov r10, r3
bl sub_8012388
ldr r1, _080138C0 @ =0x00003EDE
movs r0, #0x00
bl sub_8011DF0
movs r0, #0x1E
str r0, [sp, #0x044]
_080138A0:
movs r1, #0x00
str r1, [sp, #0x040]
ldr r3, [sp, #0x03C]
cmp r3, #0x00
beq _080138DE
movs r0, #0x80
ands r0, r5
cmp r0, #0x00
beq _080138C8
movs r0, #0x09
bl main_checkKeysTriggered
cmp r0, #0x00
beq _080138D6
b _080138D2
.byte 0x00, 0x00
_080138C0: .4byte 0x00003EDE
_080138C4: .4byte 0x04000128
_080138C8:
mov r3, sp
ldrh r1, [r3, #0x10]
ldr r0, _080138F0 @ =0x0000E3E3
cmp r1, r0
bne _080138D6
_080138D2:
movs r0, #0x01
str r0, [sp, #0x048]
_080138D6:
cmp r6, r10
bne _080138DE
movs r1, #0x09
str r1, [sp, #0x040]
_080138DE:
ldr r3, [sp, #0x034]
cmp r3, #0x07
bls _080138E6
b _08013A98
_080138E6:
ldr r0, _080138F4 @ =0x080138F8
ldr r6, [sp, #0x054]
adds r0, r6, r0
ldr r0, [r0, #0x00]
mov pc, r0
_080138F0: .4byte 0x0000E3E3
_080138F4: .4byte 0x080138F8
.byte 0x18, 0x39, 0x01, 0x08, 0x5C, 0x39, 0x01, 0x08, 0x98, 0x3A, 0x01, 0x08, 0x98, 0x3A, 0x01, 0x08
.byte 0x00, 0x3A, 0x01, 0x08, 0x2C, 0x3A, 0x01, 0x08, 0x00, 0x3A, 0x01, 0x08, 0x2C, 0x3A, 0x01, 0x08
.byte 0x0E, 0x98, 0x01, 0x30, 0x0E, 0x90, 0x10, 0x28, 0x0D, 0xDC, 0x78, 0x8B, 0xBF, 0x20, 0x78, 0x83
.byte 0x0E, 0x99, 0x08, 0x01, 0x40, 0x42, 0x00, 0x28, 0x00, 0xDA, 0x0F, 0x30, 0x00, 0x11, 0x10, 0x30
.byte 0xF9, 0x8B, 0xF8, 0x83, 0xAC, 0xE0, 0x78, 0x8B, 0x04, 0x48, 0x78, 0x83, 0xB8, 0x8B, 0x04, 0x48
.byte 0xB8, 0x83, 0x01, 0x23, 0x0D, 0x93, 0x00, 0x26, 0x0E, 0x96, 0xA1, 0xE0, 0x44, 0x08, 0x00, 0x00
.byte 0x08, 0x10, 0x00, 0x00, 0x0F, 0x98, 0x00, 0x28, 0x0A, 0xD0, 0x04, 0x4B, 0xF9, 0x18, 0x00, 0x20
.byte 0x08, 0x56, 0x00, 0x28, 0x0C, 0xD1, 0x01, 0x20, 0x09, 0xE0, 0x00, 0x00, 0xC2, 0x03, 0x00, 0x00
.byte 0x0C, 0x4E, 0xB9, 0x19, 0x00, 0x20, 0x08, 0x56, 0x03, 0x28, 0x01, 0xD1, 0x04, 0x20, 0x08, 0x70
.byte 0x10, 0x98, 0x00, 0x28, 0x10, 0xD0, 0x00, 0x21, 0x11, 0x22, 0x38, 0x1C, 0x3C, 0x30, 0x82, 0x73
.byte 0x18, 0x30, 0x01, 0x31, 0x0C, 0x29, 0xFA, 0xD9, 0x8F, 0x20, 0x4C, 0xF0, 0xBD, 0xFA, 0x04, 0x21
.byte 0x0D, 0x91, 0x75, 0xE0, 0xC2, 0x03, 0x00, 0x00, 0x02, 0x20, 0x19, 0xF0, 0x9B, 0xFD, 0x00, 0x28
.byte 0x6E, 0xD0, 0xFE, 0xF7, 0xE5, 0xFC, 0x0D, 0x4D, 0x0D, 0x4C, 0x01, 0x20, 0x02, 0x21, 0x49, 0x42
.byte 0x4E, 0xF0, 0x28, 0xFE, 0xE5, 0x60, 0x02, 0x20, 0x0A, 0x49, 0x4E, 0xF0, 0x23, 0xFE, 0x00, 0x21
.byte 0x11, 0x22, 0x38, 0x1C, 0x3C, 0x30, 0x82, 0x73, 0x18, 0x30, 0x01, 0x31, 0x0C, 0x29, 0xFA, 0xD9
.byte 0x90, 0x20, 0x4C, 0xF0, 0x99, 0xFA, 0x06, 0x23, 0x0D, 0x93, 0x51, 0xE0, 0x35, 0x31, 0x01, 0x08
.byte 0x20, 0x2E, 0x00, 0x03, 0x01, 0x00, 0x01, 0x00, 0x08, 0x4A, 0x09, 0x48, 0xA0, 0x26, 0x76, 0x00
.byte 0x80, 0x19, 0x81, 0x88, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x80, 0x18, 0x00, 0x68, 0x02, 0x21
.byte 0x4C, 0xF0, 0x4E, 0xFB, 0x0D, 0x98, 0x01, 0x30, 0x0D, 0x90, 0x39, 0xE0, 0x14, 0x24, 0x10, 0x08
.byte 0x98, 0x24, 0x10, 0x08, 0x14, 0x99, 0x0E, 0x91, 0x10, 0x29, 0x07, 0xDC, 0x78, 0x8B, 0xBF, 0x20
.byte 0x78, 0x83, 0xF8, 0x8B, 0x14, 0xAB, 0x1B, 0x88, 0xFB, 0x83, 0x29, 0xE0, 0x00, 0x24, 0x08, 0x4D
.byte 0x01, 0x20, 0x02, 0x21, 0x49, 0x42, 0x4E, 0xF0, 0xE5, 0xFD, 0xEC, 0x60, 0x02, 0x20, 0x05, 0x49
.byte 0x4E, 0xF0, 0xE0, 0xFD, 0x0D, 0x9E, 0x05, 0x2E, 0x06, 0xD0, 0x07, 0x2E, 0x0C, 0xD0, 0x17, 0xE0
.byte 0x20, 0x2E, 0x00, 0x03, 0x01, 0x00, 0x01, 0x00, 0x02, 0x48, 0x28, 0x60, 0x28, 0x7A, 0x01, 0x30
.byte 0x07, 0x21, 0x06, 0xE0, 0x39, 0x3B, 0x01, 0x08, 0x04, 0x48, 0x28, 0x60, 0x28, 0x7A, 0x01, 0x30
.byte 0x0D, 0x99, 0x08, 0x40, 0x28, 0x72, 0x01, 0x20, 0x4A, 0xE0, 0x00, 0x00, 0x6D, 0x0E, 0x00, 0x08
_08013A98:
movs r5, #0x00
ldr r3, [sp, #0x034]
lsls r3, r3, #0x02
str r3, [sp, #0x054]
ldr r6, [sp, #0x038]
adds r6, #0x01
str r6, [sp, #0x050]
add r0, sp, #0x030
mov r8, r0
adds r4, r7, #0x0
adds r4, #0x3C
_08013AAE:
adds r0, r4, #0x0
bl sub_8003BB8
adds r4, #0x18
adds r5, #0x01
cmp r5, #0x0C
bls _08013AAE
movs r5, #0x00
_08013ABE:
movs r0, #0x0C
subs r0, r0, r5
lsls r4, r0, #0x01
adds r4, r4, r0
lsls r4, r4, #0x03
adds r4, #0x3C
adds r4, r7, r4
ldrh r2, [r4, #0x04]
ldr r1, _08013B20 @ =0xFFFF0000
ldr r0, [sp, #0x030]
ands r0, r1
orrs r0, r2
str r0, [sp, #0x030]
ldrh r2, [r4, #0x06]
lsls r2, r2, #0x10
ldr r1, _08013B24 @ =0x0000FFFF
ands r0, r1
orrs r0, r2
str r0, [sp, #0x030]
ldr r0, [r4, #0x00]
movs r1, #0x08
ldsh r2, [r4, r1]
movs r6, #0x0A
ldsh r3, [r4, r6]
movs r6, #0x0C
ldsh r1, [r4, r6]
str r1, [sp, #0x000]
movs r1, #0x00
str r1, [sp, #0x004]
mov r1, r8
bl oam_renderCellData
adds r5, #0x01
cmp r5, #0x0C
bls _08013ABE
adds r0, r7, #0x0
bl sub_8012980
adds r0, r7, #0x0
bl sub_8012C9C
adds r0, r7, #0x0
bl sub_8012ED0
adds r0, r7, #0x0
bl sub_8012FC8
b _08013728
.byte 0x00, 0x00
_08013B20: .4byte 0xFFFF0000
_08013B24: .4byte 0x0000FFFF
.byte 0x16, 0xB0, 0x38, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xAA, 0x46, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47
thumb_func_start sub_8013B38
sub_8013B38:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x04C
ldr r0, _08013B98 @ =0x03000168
ldr r0, [r0, #0x00]
movs r1, #0xF3
lsls r1, r1, #0x02
adds r0, r0, r1
ldr r0, [r0, #0x00]
str r0, [sp, #0x028]
movs r2, #0x00
str r2, [sp, #0x030]
mov r10, r2
bl sub_8013F04
mov r0, sp
adds r0, #0x08
str r0, [sp, #0x03C]
mov r1, sp
str r1, [sp, #0x038]
_08013B66:
movs r2, #0x00
str r2, [sp, #0x034]
bl main_frameProc
movs r0, #0xFC
lsls r0, r0, #0x08
ldr r1, [sp, #0x038]
strh r0, [r1, #0x00]
mov r2, sp
ldrh r2, [r2, #0x34]
strh r2, [r1, #0x02]
movs r4, #0x00
_08013B7E:
ldr r0, [sp, #0x038]
ldrh r5, [r0, #0x02]
lsls r0, r4, #0x18
lsrs r0, r0, #0x18
bl sub_805DE68
cmp r0, #0x00
beq _08013B9C
movs r0, #0x01
lsls r0, r4
orrs r0, r5
b _08013B9E
.byte 0x00, 0x00
_08013B98: .4byte 0x03000168
_08013B9C:
adds r0, r5, #0x0
_08013B9E:
ldr r1, [sp, #0x038]
strh r0, [r1, #0x02]
adds r4, #0x01
cmp r4, #0x02
ble _08013B7E
movs r0, #0x00
strh r0, [r1, #0x04]
movs r6, #0x00
mov r2, sp
_08013BB0:
movs r4, #0x00
lsls r0, r6, #0x01
mov r8, r0
lsls r3, r6, #0x18
adds r1, r6, #0x1
mov r9, r1
_08013BBC:
mov r1, r8
adds r0, r1, r6
adds r7, r0, r4
ldrh r5, [r2, #0x04]
lsls r1, r4, #0x18
lsrs r1, r1, #0x18
lsrs r0, r3, #0x18
str r2, [sp, #0x044]
str r3, [sp, #0x048]
bl sub_805DE38
ldr r2, [sp, #0x044]
ldr r3, [sp, #0x048]
cmp r0, #0x00
beq _08013BE2
movs r0, #0x01
lsls r0, r7
orrs r0, r5
b _08013BE4
_08013BE2:
adds r0, r5, #0x0
_08013BE4:
strh r0, [r2, #0x04]
adds r4, #0x01
cmp r4, #0x02
ble _08013BBC
mov r6, r9
cmp r6, #0x04
ble _08013BB0
mov r0, sp
ldr r1, [sp, #0x03C]
movs r2, #0x00
bl sub_8011EE0
str r0, [sp, #0x034]
ldr r0, _08013CDC @ =0x04000200
ldrh r0, [r0, #0x00]
movs r1, #0x80
lsls r1, r1, #0x09
orrs r1, r0
movs r0, #0x00
bl irq_updateMask
bl sub_8012370
movs r2, #0x00
str r2, [sp, #0x02C]
movs r0, #0xC0
lsls r0, r0, #0x06
ldr r1, [sp, #0x034]
ands r0, r1
cmp r0, #0x00
bne _08013CE0
movs r5, #0x00
str r2, [sp, #0x040]
_08013C26:
movs r0, #0x80
lsls r0, r0, #0x01
lsls r0, r5
ldr r1, [sp, #0x034]
ands r0, r1
cmp r0, #0x00
beq _08013CAE
movs r0, #0x01
lsls r0, r5
ands r0, r1
cmp r0, #0x00
beq _08013CAE
ldr r2, [sp, #0x03C]
ldr r1, [sp, #0x040]
adds r0, r2, r1
ldrh r0, [r0, #0x00]
mov r10, r1
movs r2, #0xFC
lsls r2, r2, #0x08
cmp r0, r2
bne _08013CAE
movs r4, #0x00
mov r0, sp
adds r0, #0x0A
add r7, sp, #0x00C
adds r6, r0, r1
_08013C5A:
ldrh r2, [r6, #0x00]
asrs r2, r4
movs r0, #0x01
ands r2, r0
adds r0, r5, #0x0
adds r1, r4, #0x0
bl sub_8013F24
adds r4, #0x01
cmp r4, #0x02
ble _08013C5A
movs r6, #0x00
_08013C72:
movs r4, #0x00
lsls r1, r6, #0x01
mov r8, r1
adds r2, r6, #0x1
mov r9, r2
_08013C7C:
mov r1, r10
adds r0, r7, r1
ldrh r3, [r0, #0x00]
mov r2, r8
adds r0, r2, r6
adds r0, r0, r4
asrs r3, r0
movs r0, #0x01
ands r3, r0
adds r0, r5, #0x0
adds r1, r6, #0x0
adds r2, r4, #0x0
bl sub_8013F60
adds r4, #0x01
cmp r4, #0x02
ble _08013C7C
mov r6, r9
cmp r6, #0x04
ble _08013C72
movs r0, #0x01
lsls r0, r5
ldr r1, [sp, #0x030]
orrs r1, r0
str r1, [sp, #0x030]
_08013CAE:
ldr r2, [sp, #0x040]
adds r2, #0x08
str r2, [sp, #0x040]
adds r5, #0x01
cmp r5, #0x03
ble _08013C26
movs r5, #0x00
movs r1, #0x01
_08013CBE:
ldr r0, [sp, #0x030]
asrs r0, r5
ands r0, r1
cmp r0, #0x00
beq _08013CCE
ldr r0, [sp, #0x02C]
adds r0, #0x01
str r0, [sp, #0x02C]
_08013CCE:
adds r5, #0x01
cmp r5, #0x03
ble _08013CBE
movs r1, #0x00
mov r10, r1
b _08013D04
.byte 0x00, 0x00
_08013CDC: .4byte 0x04000200
_08013CE0:
bl sub_8012388
movs r0, #0x00
ldr r1, _08013CFC @ =0x00003EDE
bl sub_8011DF0
movs r2, #0x01
add r10, r2
mov r0, r10
cmp r0, #0x14
ble _08013D04
ldr r0, _08013D00 @ =0x08016B99
b _08013D18
.byte 0x00, 0x00
_08013CFC: .4byte 0x00003EDE
_08013D00: .4byte error_main
_08013D04:
ldr r1, [sp, #0x028]
ldr r2, [sp, #0x02C]
cmp r1, r2
beq _08013D0E
b _08013B66
_08013D0E:
bl sub_8001B4C
bl sub_8001ADC
ldr r0, _08013D38 @ =0x08013D41
_08013D18:
ldr r2, _08013D3C @ =0x03002E20
str r0, [r2, #0x00]
ldrb r0, [r2, #0x08]
adds r0, #0x01
movs r1, #0x07
ands r0, r1
strb r0, [r2, #0x08]
movs r0, #0x01
add sp, #0x04C
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r1}
bx r1
_08013D38: .4byte sub_8013D40
_08013D3C: .4byte 0x03002E20
thumb_func_start sub_8013D40
sub_8013D40:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
ldr r0, _08013DF0 @ =0x03000168
ldr r0, [r0, #0x00]
movs r1, #0xF3
lsls r1, r1, #0x02
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov r8, r0
movs r5, #0x00
movs r7, #0x00
ldr r0, _08013DF4 @ =0x03004F50
strh r7, [r0, #0x00]
bl main_frameProc
bl main_frameProc
bl sub_8012388
bl sub_802DC30
ldr r1, _08013DF8 @ =0x03002C80
ldrh r2, [r1, #0x16]
movs r3, #0x80
lsls r3, r3, #0x08
adds r0, r3, #0x0
orrs r0, r2
strh r0, [r1, #0x16]
adds r4, r1, #0x0
movs r6, #0xFF
_08013D82:
ldrh r1, [r4, #0x16]
adds r0, r6, #0x0
ands r0, r1
cmp r0, #0x01
beq _08013D98
bl main_frameProc
adds r5, #0x01
cmp r5, #0x3C
ble _08013D82
movs r7, #0x01
_08013D98:
ldrb r0, [r4, #0x01]
cmp r0, r8
beq _08013DA0
movs r7, #0x01
_08013DA0:
cmp r7, #0x00
bne _08013E48
movs r0, #0x01
mov r9, r0
movs r6, #0x00
ldr r1, _08013DF4 @ =0x03004F50
movs r2, #0xE0
lsls r2, r2, #0x05
adds r0, r2, #0x0
strh r0, [r1, #0x00]
ldr r3, _08013DF8 @ =0x03002C80
mov r8, r3
mov r10, r2
_08013DBA:
movs r4, #0xE0
lsls r4, r4, #0x05
mov r1, r8
ldrb r0, [r1, #0x01]
cmp r0, #0x00
beq _08013DDE
adds r5, r4, #0x0
mov r2, r8
adds r2, #0x02
adds r3, r0, #0x0
_08013DCE:
ldrh r1, [r2, #0x00]
adds r0, r5, #0x0
ands r0, r1
ands r4, r0
adds r2, #0x02
subs r3, #0x01
cmp r3, #0x00
bne _08013DCE
_08013DDE:
bl main_frameProc
cmp r4, r10
beq _08013DFC
adds r6, #0x01
cmp r6, #0x3C
ble _08013E00
movs r7, #0x01
b _08013E06
_08013DF0: .4byte 0x03000168
_08013DF4: .4byte 0x03004F50
_08013DF8: .4byte 0x03002C80
_08013DFC:
movs r2, #0x00
mov r9, r2
_08013E00:
mov r3, r9
cmp r3, #0x00
bne _08013DBA
_08013E06:
ldr r1, _08013E38 @ =0x03004F50
movs r0, #0x00
strh r0, [r1, #0x00]
cmp r7, #0x00
bne _08013E48
ldr r4, _08013E3C @ =0x03002E20
movs r0, #0x01
movs r1, #0x02
negs r1, r1
bl irq_updateMask
str r7, [r4, #0x0C]
movs r0, #0x02
ldr r1, _08013E40 @ =0x00010001
bl irq_updateMask
ldr r0, _08013E44 @ =0x080021CD
str r0, [r4, #0x00]
ldrb r0, [r4, #0x08]
adds r0, #0x01
movs r1, #0x07
ands r0, r1
strb r0, [r4, #0x08]
b _08013E62
.byte 0x00, 0x00
_08013E38: .4byte 0x03004F50
_08013E3C: .4byte 0x03002E20
_08013E40: .4byte 0x00010001
_08013E44: .4byte spm_main
_08013E48:
ldr r1, _08013E74 @ =0x03002C80
movs r0, #0x00
strh r0, [r1, #0x16]
bl sio2_stop
ldr r0, _08013E78 @ =0x08016B99
ldr r2, _08013E7C @ =0x03002E20
str r0, [r2, #0x00]
ldrb r0, [r2, #0x08]
adds r0, #0x01
movs r1, #0x07
ands r0, r1
strb r0, [r2, #0x08]
_08013E62:
movs r0, #0x01
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r1}
bx r1
.byte 0x00, 0x00
_08013E74: .4byte 0x03002C80
_08013E78: .4byte error_main
_08013E7C: .4byte 0x03002E20
thumb_func_start sub_8013E80
sub_8013E80:
push {r4, r5, lr}
movs r1, #0xC1
negs r1, r1
movs r0, #0x01
bl irq_updateMask
ldr r1, _08013EE8 @ =0x04000202
movs r0, #0xC0
strh r0, [r1, #0x00]
ldr r4, _08013EEC @ =0x08012255
adds r1, r4, #0x0
cmp r4, #0x00
bne _08013E9C
ldr r1, _08013EF0 @ =0x0802D5F1
_08013E9C:
movs r0, #0x06
bl irq_setHandler
adds r1, r4, #0x0
cmp r1, #0x00
bne _08013EAA
ldr r1, _08013EF0 @ =0x0802D5F1
_08013EAA:
movs r0, #0x07
bl irq_setHandler
movs r5, #0x00
ldr r4, _08013EF4 @ =0x03002E20
movs r0, #0x01
movs r1, #0x02
negs r1, r1
bl irq_updateMask
str r5, [r4, #0x0C]
movs r0, #0x02
ldr r1, _08013EF8 @ =0x00010001
bl irq_updateMask
ldr r1, _08013EFC @ =0x00003EDE
movs r0, #0x00
bl sub_8011DF0
ldr r0, _08013F00 @ =0x04000200
ldrh r0, [r0, #0x00]
movs r1, #0x80
lsls r1, r1, #0x09
orrs r1, r0
movs r0, #0x00
bl irq_updateMask
pop {r4, r5}
pop {r0}
bx r0
.byte 0x00, 0x00
_08013EE8: .4byte 0x04000202
_08013EEC: .4byte sub_8012254
_08013EF0: .4byte main_dummyIrqHandler
_08013EF4: .4byte 0x03002E20
_08013EF8: .4byte 0x00010001
_08013EFC: .4byte 0x00003EDE
_08013F00: .4byte 0x04000200
thumb_func_start sub_8013F04
sub_8013F04:
movs r3, #0x00
ldr r2, _08013F1C @ =0x03000178
ldr r1, _08013F20 @ =0x03000170
movs r0, #0x03
_08013F0C:
strh r3, [r1, #0x00]
strh r3, [r2, #0x00]
adds r2, #0x02
adds r1, #0x02
subs r0, #0x01
cmp r0, #0x00
bge _08013F0C
bx lr
_08013F1C: .4byte 0x03000178
_08013F20: .4byte 0x03000170
thumb_func_start sub_8013F24
sub_8013F24:
push {r4, lr}
adds r3, r0, #0x0
adds r4, r1, #0x0
cmp r2, #0x00
beq _08013F44
ldr r0, _08013F40 @ =0x03000170
lsls r2, r3, #0x01
adds r2, r2, r0
movs r0, #0x01
lsls r0, r4
ldrh r1, [r2, #0x00]
orrs r0, r1
b _08013F52
.byte 0x00, 0x00
_08013F40: .4byte 0x03000170
_08013F44:
ldr r0, _08013F5C @ =0x03000170
lsls r2, r3, #0x01
adds r2, r2, r0
movs r1, #0x01
lsls r1, r4
ldrh r0, [r2, #0x00]
bics r0, r1
_08013F52:
strh r0, [r2, #0x00]
pop {r4}
pop {r0}
bx r0
.byte 0x00, 0x00
_08013F5C: .4byte 0x03000170
thumb_func_start sub_8013F60
sub_8013F60:
push {r4, r5, lr}
adds r4, r0, #0x0
lsls r0, r1, #0x01
adds r0, r0, r1
adds r5, r0, r2
cmp r3, #0x00
beq _08013F84
ldr r0, _08013F80 @ =0x03000178
lsls r2, r4, #0x01
adds r2, r2, r0
movs r0, #0x01
lsls r0, r5
ldrh r1, [r2, #0x00]
orrs r0, r1
b _08013F92
.byte 0x00, 0x00
_08013F80: .4byte 0x03000178
_08013F84:
ldr r0, _08013F9C @ =0x03000178
lsls r2, r4, #0x01
adds r2, r2, r0
movs r1, #0x01
lsls r1, r5
ldrh r0, [r2, #0x00]
bics r0, r1
_08013F92:
strh r0, [r2, #0x00]
pop {r4, r5}
pop {r0}
bx r0
.byte 0x00, 0x00
_08013F9C: .4byte 0x03000178
thumb_func_start sub_8013FA0
sub_8013FA0:
push {r4, r5, r6, lr}
adds r3, r0, #0x0
movs r2, #0x00
ldr r0, _08013FE0 @ =0x03002C80
ldrb r4, [r0, #0x01]
adds r6, r0, #0x0
cmp r2, r4
bge _08013FD4
ldr r5, _08013FE4 @ =0x03000170
ldrh r0, [r5, #0x00]
asrs r0, r3
movs r1, #0x01
ands r0, r1
cmp r0, #0x00
beq _08013FD4
adds r1, r5, #0x0
movs r5, #0x01
_08013FC2:
adds r1, #0x02
adds r2, #0x01
cmp r2, r4
bge _08013FD4
ldrh r0, [r1, #0x00]
asrs r0, r3
ands r0, r5
cmp r0, #0x00
bne _08013FC2
_08013FD4:
ldrb r6, [r6, #0x01]
cmp r2, r6
bge _08013FE8
movs r0, #0x00
b _08013FEA
.byte 0x00, 0x00
_08013FE0: .4byte 0x03002C80
_08013FE4: .4byte 0x03000170
_08013FE8:
movs r0, #0x01
_08013FEA:
pop {r4, r5, r6}
pop {r1}
bx r1
thumb_func_start sub_8013FF0
sub_8013FF0:
push {r4, r5, r6, lr}
lsls r2, r0, #0x01
adds r2, r2, r0
adds r2, r2, r1
movs r3, #0x00
ldr r0, _08014034 @ =0x03002C80
ldrb r4, [r0, #0x01]
adds r6, r0, #0x0
cmp r3, r4
bge _08014028
ldr r5, _08014038 @ =0x03000178
ldrh r0, [r5, #0x00]
asrs r0, r2
movs r1, #0x01
ands r0, r1
cmp r0, #0x00
beq _08014028
adds r1, r5, #0x0
movs r5, #0x01
_08014016:
adds r1, #0x02
adds r3, #0x01
cmp r3, r4
bge _08014028
ldrh r0, [r1, #0x00]
asrs r0, r2
ands r0, r5
cmp r0, #0x00
bne _08014016
_08014028:
ldrb r6, [r6, #0x01]
cmp r3, r6
bge _0801403C
movs r0, #0x00
b _0801403E
.byte 0x00, 0x00
_08014034: .4byte 0x03002C80
_08014038: .4byte 0x03000178
_0801403C:
movs r0, #0x01
_0801403E:
pop {r4, r5, r6}
pop {r1}
bx r1
thumb_func_start sub_8014044
sub_8014044:
movs r1, #0x00
strb r1, [r0, #0x0E]
strh r1, [r0, #0x10]
bx lr
thumb_func_start sub_801404C
sub_801404C:
push {r4, r5, r6, r7, lr}
add sp, #-0x00C
adds r4, r0, #0x0
adds r5, r1, #0x0
adds r6, r2, #0x0
ldr r1, _080140B4 @ =0x080D9F70
movs r0, #0x0E
ldsb r0, [r4, r0]
lsls r0, r0, #0x03
adds r0, r0, r1
ldrb r2, [r0, #0x04]
ldrh r0, [r4, #0x10]
adds r0, #0x01
strh r0, [r4, #0x10]
lsls r0, r0, #0x10
asrs r0, r0, #0x10
adds r7, r1, #0x0
cmp r0, r2
ble _08014088
movs r0, #0x00
strh r0, [r4, #0x10]
ldrb r0, [r4, #0x0E]
adds r0, #0x01
strb r0, [r4, #0x0E]
lsls r0, r0, #0x18
lsrs r0, r0, #0x18
cmp r0, #0x09
bls _08014088
movs r0, #0x00
strb r0, [r4, #0x0E]
_08014088:
lsls r1, r5, #0x10
adds r0, r6, #0x4
lsls r0, r0, #0x10
lsrs r1, r1, #0x10
orrs r1, r0
str r1, [sp, #0x008]
movs r0, #0x0E
ldsb r0, [r4, r0]
lsls r0, r0, #0x03
adds r0, r0, r7
ldr r0, [r0, #0x00]
movs r1, #0x00
str r1, [sp, #0x000]
str r1, [sp, #0x004]
add r1, sp, #0x008
adds r2, r3, #0x0
bl oam_renderCellData
add sp, #0x00C
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_080140B4: .4byte 0x080D9F70
thumb_func_start sub_80140B8
sub_80140B8:
push {r4, r5, r6, lr}
ldrh r4, [r0, #0x00]
ldr r6, _080140F8 @ =0x080D9FE0
movs r3, #0x00
movs r5, #0x80
lsls r5, r5, #0x01
lsrs r0, r4, #0x08
lsls r1, r4, #0x08
orrs r0, r1
lsls r0, r0, #0x10
lsrs r4, r0, #0x10
_080140CE:
subs r0, r5, r3
lsrs r1, r0, #0x1F
adds r0, r0, r1
asrs r0, r0, #0x01
adds r2, r3, r0
lsls r0, r2, #0x01
adds r0, r0, r6
ldrh r1, [r0, #0x00]
lsrs r0, r1, #0x08
lsls r1, r1, #0x08
orrs r0, r1
lsls r0, r0, #0x10
lsrs r0, r0, #0x10
subs r0, r0, r4
cmp r0, #0x00
bne _08014100
ldr r0, _080140FC @ =0x080DA1E1
adds r0, r2, r0
ldrb r0, [r0, #0x00]
b _08014110
.byte 0x00, 0x00
_080140F8: .4byte 0x080D9FE0
_080140FC: .4byte 0x080DA1E1
_08014100:
cmp r0, #0x00
bge _08014108
adds r3, r2, #0x1
b _0801410A
_08014108:
adds r5, r2, #0x0
_0801410A:
cmp r5, r3
bgt _080140CE
movs r0, #0x00
_08014110:
lsls r2, r0, #0x18
lsrs r0, r2, #0x1D
movs r1, #0xF8
lsls r1, r1, #0x15
ands r1, r2
lsrs r1, r1, #0x18
lsls r0, r0, #0x06
orrs r0, r1
pop {r4, r5, r6}
pop {r1}
bx r1
.byte 0x00, 0x00
thumb_func_start sub_8014128
sub_8014128:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x02C
str r0, [sp, #0x00C]
str r1, [sp, #0x010]
str r3, [sp, #0x014]
ldr r0, [sp, #0x04C]
mov r10, r0
ldr r0, [sp, #0x058]
cmp r0, #0x00
beq _08014146
movs r0, #0x01
_08014146:
str r0, [sp, #0x018]
ldr r1, [sp, #0x010]
lsls r0, r1, #0x06
ldr r3, [sp, #0x014]
adds r0, r3, r0
ldr r3, [sp, #0x00C]
lsls r1, r3, #0x01
adds r0, r0, r1
str r0, [sp, #0x01C]
mov r9, r2
movs r0, #0x00
str r0, [sp, #0x020]
ldrb r0, [r2, #0x00]
cmp r0, #0x00
beq _08014184
cmp r0, #0x0A
beq _08014184
cmp r0, #0x0D
beq _08014184
mov r1, r9
_0801416E:
adds r1, #0x02
ldr r2, [sp, #0x020]
adds r2, #0x01
str r2, [sp, #0x020]
ldrb r0, [r1, #0x00]
cmp r0, #0x00
beq _08014184
cmp r0, #0x0A
beq _08014184
cmp r0, #0x0D
bne _0801416E
_08014184:
movs r3, #0x00
mov r8, r3
movs r7, #0x00
ldr r0, [sp, #0x020]
cmp r7, r0
blt _08014192
b _080142BA
_08014192:
movs r3, #0x00
movs r1, #0x00
ldr r2, [sp, #0x018]
cmp r2, #0x00
beq _08014206
lsls r0, r7, #0x01
movs r2, #0x01
negs r2, r2
movs r5, #0x00
ldr r6, _08014248 @ =0x030029C8
mov r1, r9
adds r4, r0, r1
_080141AA:
adds r0, r4, #0x0
str r2, [sp, #0x024]
str r3, [sp, #0x028]
bl sub_80140B8
lsls r0, r0, #0x10
lsrs r1, r0, #0x10
ldr r2, [sp, #0x024]
ldr r3, [sp, #0x028]
cmp r1, #0x00
ble _080141C2
add r1, r10
_080141C2:
ldr r0, _08014248 @ =0x030029C8
adds r0, r5, r0
strb r1, [r0, #0x00]
adds r4, #0x02
adds r5, #0x01
cmp r5, #0x03
ble _080141AA
ldrb r0, [r6, #0x00]
cmp r0, #0x40
bne _080141EC
ldrb r0, [r6, #0x03]
cmp r0, #0x40
bne _080141EC
ldrb r1, [r6, #0x01]
subs r1, #0x10
lsls r0, r1, #0x02
adds r0, r0, r1
lsls r0, r0, #0x01
subs r0, #0x10
ldrb r6, [r6, #0x02]
adds r2, r0, r6
_080141EC:
adds r1, r2, #0x0
cmp r1, #0x00
blt _08014206
cmp r1, #0x03
beq _08014206
cmp r1, #0x03
bgt _08014206
cmp r1, #0x00
blt _08014206
lsls r0, r1, #0x02
ldr r2, [sp, #0x058]
adds r0, r0, r2
ldr r3, [r0, #0x00]
_08014206:
cmp r3, #0x00
beq _0801426A
movs r4, #0x00
ldrb r0, [r3, #0x00]
ldr r2, [sp, #0x00C]
add r2, r8
adds r5, r7, #0x4
cmp r0, #0x00
beq _08014222
_08014218:
adds r4, #0x01
adds r0, r3, r4
ldrb r0, [r0, #0x00]
cmp r0, #0x00
bne _08014218
_08014222:
cmp r1, #0x02
beq _0801424C
lsrs r0, r4, #0x1F
adds r0, r4, r0
asrs r4, r0, #0x01
mov r0, r10
str r0, [sp, #0x000]
ldr r1, [sp, #0x050]
str r1, [sp, #0x004]
ldr r0, [sp, #0x054]
str r0, [sp, #0x008]
adds r0, r2, #0x0
ldr r1, [sp, #0x010]
adds r2, r3, #0x0
ldr r3, [sp, #0x014]
bl sub_801445C
b _08014264
.byte 0x00, 0x00
_08014248: .4byte 0x030029C8
_0801424C:
mov r1, r10
str r1, [sp, #0x000]
ldr r0, [sp, #0x050]
str r0, [sp, #0x004]
ldr r1, [sp, #0x054]
str r1, [sp, #0x008]
adds r0, r2, #0x0
ldr r1, [sp, #0x010]
adds r2, r3, #0x0
ldr r3, [sp, #0x014]
bl sub_8014480
_08014264:
adds r7, r5, #0x0
add r8, r4
b _080142B2
_0801426A:
mov r0, r8
ldr r1, [sp, #0x054]
bl __divsi3
adds r5, r0, #0x0
lsls r0, r7, #0x01
add r0, r9
bl sub_80140B8
lsls r0, r0, #0x10
lsrs r4, r0, #0x10
cmp r4, #0x00
ble _08014286
add r4, r10
_08014286:
mov r0, r8
ldr r1, [sp, #0x054]
bl __modsi3
lsls r1, r5, #0x06
adds r1, r1, r0
lsls r1, r1, #0x01
ldr r2, [sp, #0x01C]
adds r1, r1, r2
ldr r3, [sp, #0x050]
lsls r2, r3, #0x0C
adds r0, r2, #0x0
orrs r0, r4
strh r0, [r1, #0x00]
adds r1, #0x40
adds r0, r4, #0x0
adds r0, #0x20
orrs r2, r0
strh r2, [r1, #0x00]
adds r7, #0x01
movs r0, #0x01
add r8, r0
_080142B2:
ldr r1, [sp, #0x020]
cmp r7, r1
bge _080142BA
b _08014192
_080142BA:
add sp, #0x02C
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
thumb_func_start sub_80142CC
sub_80142CC:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x00C
mov r10, r0
adds r4, r1, #0x0
movs r0, #0x01
mov r1, r10
ands r0, r1
cmp r0, #0x00
beq _080143A2
movs r0, #0x00
bl map_clearBuffer
b _080143A2
_080142EE:
movs r0, #0x00
str r0, [sp, #0x000]
ldr r5, [r4, #0x00]
movs r0, #0x80
lsls r0, r0, #0x07
mov r1, r10
ands r0, r1
cmp r0, #0x00
beq _08014308
asrs r0, r1, #0x04
movs r1, #0x0F
ands r0, r1
adds r5, r5, r0
_08014308:
ldr r6, [r4, #0x04]
movs r0, #0x80
lsls r0, r0, #0x08
mov r1, r10
ands r0, r1
cmp r0, #0x00
beq _0801431E
asrs r0, r1, #0x08
movs r1, #0x0F
ands r0, r1
adds r6, r6, r0
_0801431E:
ldr r7, [r4, #0x0C]
ldr r0, [r4, #0x10]
mov r9, r0
ldr r1, [r4, #0x08]
mov r8, r1
movs r0, #0x00
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
lsls r1, r6, #0x06
adds r0, r0, r1
lsls r1, r5, #0x01
adds r0, r0, r1
str r0, [sp, #0x004]
mov r1, r8
ldrb r0, [r1, #0x00]
adds r4, #0x14
str r4, [sp, #0x008]
cmp r0, #0x00
beq _08014356
_08014348:
adds r1, #0x02
ldr r0, [sp, #0x000]
adds r0, #0x01
str r0, [sp, #0x000]
ldrb r0, [r1, #0x00]
cmp r0, #0x00
bne _08014348
_08014356:
movs r6, #0x00
ldr r1, [sp, #0x000]
cmp r6, r1
bge _080143A0
lsls r7, r7, #0x0C
_08014360:
lsls r0, r6, #0x01
add r0, r8
bl sub_80140B8
adds r5, r0, #0x0
lsls r5, r5, #0x10
lsrs r5, r5, #0x10
adds r0, r6, #0x0
mov r1, r9
bl __divsi3
adds r4, r0, #0x0
adds r0, r6, #0x0
mov r1, r9
bl __modsi3
lsls r4, r4, #0x06
adds r4, r4, r0
lsls r4, r4, #0x01
ldr r0, [sp, #0x004]
adds r4, r4, r0
adds r0, r7, #0x0
orrs r0, r5
strh r0, [r4, #0x00]
adds r4, #0x40
adds r5, #0x20
orrs r5, r7
strh r5, [r4, #0x00]
adds r6, #0x01
ldr r1, [sp, #0x000]
cmp r6, r1
blt _08014360
_080143A0:
ldr r4, [sp, #0x008]
_080143A2:
ldr r1, [r4, #0x00]
ldr r0, _080143CC @ =0x0000FFFF
cmp r1, r0
bne _080142EE
movs r0, #0x02
mov r1, r10
ands r0, r1
cmp r0, #0x00
beq _080143BA
movs r0, #0x01
bl map_setBufferDirty
_080143BA:
add sp, #0x00C
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_080143CC: .4byte 0x0000FFFF
thumb_func_start sub_80143D0
sub_80143D0:
lsls r0, r0, #0x18
lsrs r2, r0, #0x1D
movs r1, #0xF8
lsls r1, r1, #0x15
ands r1, r0
lsrs r1, r1, #0x18
lsls r2, r2, #0x06
orrs r2, r1
adds r0, r2, #0x0
bx lr
.byte 0x01, 0x1C, 0x09, 0x04, 0x88, 0x0D, 0xF8, 0x22, 0x52, 0x03, 0x0A, 0x40, 0x12, 0x0C, 0x40, 0x01
.byte 0x80, 0x18, 0x00, 0x06, 0x00, 0x0E, 0x70, 0x47, 0x70, 0xB5, 0x00, 0x04, 0x04, 0x0C, 0x0E, 0x4E
.byte 0x00, 0x23, 0x80, 0x25, 0x6D, 0x00, 0x20, 0x0A, 0x21, 0x02, 0x08, 0x43, 0x00, 0x04, 0x04, 0x0C
.byte 0xE8, 0x1A, 0xC1, 0x0F, 0x40, 0x18, 0x40, 0x10, 0x1A, 0x18, 0x50, 0x00, 0x80, 0x19, 0x01, 0x88
.byte 0x08, 0x0A, 0x09, 0x02, 0x08, 0x43, 0x00, 0x04, 0x00, 0x0C, 0x00, 0x1B, 0x00, 0x28, 0x07, 0xD1
.byte 0x02, 0x48, 0x10, 0x18, 0x00, 0x78, 0x0B, 0xE0, 0xE0, 0x9F, 0x0D, 0x08, 0xE1, 0xA1, 0x0D, 0x08
.byte 0x00, 0x28, 0x01, 0xDA, 0x53, 0x1C, 0x00, 0xE0, 0x15, 0x1C, 0x9D, 0x42, 0xE0, 0xDC, 0x00, 0x20
.byte 0x70, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00
thumb_func_start sub_801445C
sub_801445C:
push {r4, r5, r6, lr}
add sp, #-0x014
ldr r4, [sp, #0x024]
ldr r5, [sp, #0x028]
ldr r6, [sp, #0x02C]
str r4, [sp, #0x000]
str r5, [sp, #0x004]
str r6, [sp, #0x008]
movs r4, #0x00
str r4, [sp, #0x00C]
str r4, [sp, #0x010]
bl sub_8014128
add sp, #0x014
pop {r4, r5, r6}
pop {r0}
bx r0
.byte 0x00, 0x00
thumb_func_start sub_8014480
sub_8014480:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x004
mov r9, r2
ldr r2, [sp, #0x02C]
mov r10, r2
lsls r1, r1, #0x06
adds r3, r3, r1
lsls r0, r0, #0x01
adds r3, r3, r0
str r3, [sp, #0x000]
movs r7, #0x00
mov r1, r9
ldrb r0, [r1, #0x00]
cmp r0, #0x00
beq _080144B2
_080144A6:
adds r7, #0x01
mov r2, r9
adds r0, r2, r7
ldrb r0, [r0, #0x00]
cmp r0, #0x00
bne _080144A6
_080144B2:
movs r6, #0x00
cmp r6, r7
bge _0801450A
ldr r0, [sp, #0x028]
lsls r0, r0, #0x0C
mov r8, r0
_080144BE:
mov r1, r9
adds r0, r1, r6
ldrb r1, [r0, #0x00]
lsrs r2, r1, #0x05
movs r0, #0x1F
ands r1, r0
lsls r5, r2, #0x06
orrs r5, r1
cmp r5, #0x00
ble _080144D6
ldr r2, [sp, #0x024]
adds r5, r5, r2
_080144D6:
adds r0, r6, #0x0
mov r1, r10
bl __divsi3
adds r4, r0, #0x0
adds r0, r6, #0x0
mov r1, r10
bl __modsi3
lsls r4, r4, #0x06
adds r4, r4, r0
lsls r4, r4, #0x01
ldr r0, [sp, #0x000]
adds r4, r4, r0
mov r0, r8
orrs r0, r5
strh r0, [r4, #0x00]
adds r4, #0x40
adds r0, r5, #0x0
adds r0, #0x20
mov r1, r8
orrs r0, r1
strh r0, [r4, #0x00]
adds r6, #0x01
cmp r6, r7
blt _080144BE
_0801450A:
add sp, #0x004
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00, 0xF0, 0xB5, 0x57, 0x46, 0x4E, 0x46, 0x45, 0x46, 0xE0, 0xB4, 0x82, 0xB0, 0x00, 0x92
.byte 0x99, 0x46, 0x0A, 0x9A, 0x0D, 0x9B, 0x9A, 0x46, 0x89, 0x01, 0x52, 0x18, 0x40, 0x00, 0x12, 0x18
.byte 0x01, 0x92, 0x01, 0x27, 0x48, 0x46, 0x01, 0x28, 0x07, 0xDD, 0x4E, 0x46, 0x01, 0x3E, 0xB8, 0x00
.byte 0xC0, 0x19, 0x47, 0x00, 0x01, 0x3E, 0x00, 0x2E, 0xF9, 0xD1, 0x00, 0x26, 0x4E, 0x45, 0x2B, 0xDA
.byte 0x0C, 0x98, 0x00, 0x03, 0x80, 0x46, 0x30, 0x1C, 0x51, 0x46, 0x4D, 0xF0, 0xA4, 0xFC, 0x05, 0x1C
.byte 0x00, 0x98, 0x39, 0x1C, 0x4D, 0xF0, 0x9F, 0xFC, 0x0A, 0x21, 0x4D, 0xF0, 0x02, 0xFD, 0x04, 0x1C
.byte 0x10, 0x34, 0x24, 0x06, 0x24, 0x0E, 0x30, 0x1C, 0x51, 0x46, 0x4D, 0xF0, 0xFA, 0xFC, 0xAD, 0x01
.byte 0x2D, 0x18, 0x6D, 0x00, 0x01, 0x9B, 0xED, 0x18, 0x40, 0x46, 0x20, 0x43, 0x28, 0x80, 0x40, 0x35
.byte 0x20, 0x34, 0x40, 0x46, 0x04, 0x43, 0x2C, 0x80, 0x38, 0x1C, 0x0A, 0x21, 0x4D, 0xF0, 0x83, 0xFC
.byte 0x07, 0x1C, 0x01, 0x36, 0x4E, 0x45, 0xD6, 0xDB, 0x02, 0xB0, 0x38, 0xBC, 0x98, 0x46, 0xA1, 0x46
.byte 0xAA, 0x46, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0xF0, 0xB5, 0x47, 0x46, 0x80, 0xB4
.byte 0x0E, 0x1C, 0x01, 0x21, 0x49, 0x42, 0x88, 0x46, 0x00, 0x25, 0x12, 0x4F, 0x04, 0x1C, 0x20, 0x1C
.byte 0xFF, 0xF7, 0x6D, 0xFD, 0x00, 0x04, 0x01, 0x0C, 0x00, 0x29, 0x00, 0xDD, 0x89, 0x19, 0x0D, 0x48
.byte 0x28, 0x18, 0x01, 0x70, 0x02, 0x34, 0x01, 0x35, 0x03, 0x2D, 0xF0, 0xDD, 0x38, 0x78, 0x40, 0x28
.byte 0x0B, 0xD1, 0xF8, 0x78, 0x40, 0x28, 0x08, 0xD1, 0x79, 0x78, 0x10, 0x39, 0x88, 0x00, 0x40, 0x18
.byte 0x40, 0x00, 0x10, 0x38, 0xBF, 0x78, 0x3F, 0x18, 0xB8, 0x46, 0x40, 0x46, 0x08, 0xBC, 0x98, 0x46
.byte 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0xC8, 0x29, 0x00, 0x03
thumb_func_start sub_8014624
sub_8014624:
ldr r0, _080146A0 @ =0x03000184
ldr r2, [r0, #0x00]
movs r3, #0x80
lsls r3, r3, #0x13
ldrh r1, [r3, #0x00]
movs r0, #0xC0
lsls r0, r0, #0x07
ands r0, r1
strh r0, [r3, #0x00]
ldrh r1, [r2, #0x00]
ldr r0, _080146A4 @ =0x00009FFF
ands r0, r1
ldrh r1, [r3, #0x00]
orrs r0, r1
strh r0, [r3, #0x00]
ldr r1, _080146A8 @ =0x04000008
ldrh r0, [r2, #0x02]
strh r0, [r1, #0x00]
adds r1, #0x08
ldrh r0, [r2, #0x04]
strh r0, [r1, #0x00]
adds r1, #0x02
ldrh r0, [r2, #0x06]
strh r0, [r1, #0x00]
subs r1, #0x08
ldrh r0, [r2, #0x08]
strh r0, [r1, #0x00]
adds r1, #0x0A
ldrh r0, [r2, #0x0A]
strh r0, [r1, #0x00]
adds r1, #0x02
ldrh r0, [r2, #0x0C]
strh r0, [r1, #0x00]
subs r1, #0x0A
ldrh r0, [r2, #0x0E]
strh r0, [r1, #0x00]
adds r1, #0x0C
ldrh r0, [r2, #0x10]
strh r0, [r1, #0x00]
adds r1, #0x02
ldrh r0, [r2, #0x12]
strh r0, [r1, #0x00]
subs r1, #0x0C
ldrh r0, [r2, #0x14]
strh r0, [r1, #0x00]
adds r1, #0x0E
ldrh r0, [r2, #0x16]
strh r0, [r1, #0x00]
adds r1, #0x02
ldrh r0, [r2, #0x18]
strh r0, [r1, #0x00]
adds r1, #0x32
ldrh r0, [r2, #0x1A]
strh r0, [r1, #0x00]
adds r1, #0x02
ldrh r0, [r2, #0x1C]
strh r0, [r1, #0x00]
adds r1, #0x02
ldrh r0, [r2, #0x1E]
strh r0, [r1, #0x00]
bx lr
.byte 0x00, 0x00
_080146A0: .4byte 0x03000184
_080146A4: .4byte 0x00009FFF
_080146A8: .4byte 0x04000008
thumb_func_start sub_80146AC
sub_80146AC:
push {r4, r5, r6, lr}
adds r5, r0, #0x0
adds r6, r1, #0x0
ldr r4, _080146DC @ =0x080BB640
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
ldr r0, _080146E0 @ =0x0203EC18
ldrb r0, [r0, #0x00]
lsrs r4, r0, #0x02
movs r0, #0x01
ands r4, r0
cmp r4, #0x00
bne _080146E4
movs r0, #0x00
bl pltt_getBuffer
strh r4, [r0, #0x00]
b _080146F0
.byte 0x00, 0x00
_080146DC: .4byte 0x080BB640
_080146E0: .4byte 0x0203EC18
_080146E4:
movs r0, #0x00
bl pltt_getBuffer
ldr r2, _08014804 @ =0x0000FFFF
adds r1, r2, #0x0
strh r1, [r0, #0x00]
_080146F0:
ldr r4, _08014808 @ =0x0807CD48
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0xE0
adds r0, r4, #0x0
movs r2, #0x10
bl CpuFastSet
ldr r4, _0801480C @ =0x080B2068
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
movs r0, #0x01
bl pltt_setDirtyFlag
ldr r0, _08014810 @ =0x0807D1E8
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r3, _08014814 @ =0x80000150
adds r1, r5, #0x0
adds r2, r6, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08014818 @ =0x080A97F8
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
movs r1, #0x80
lsls r1, r1, #0x03
adds r2, r6, r1
ldr r4, _0801481C @ =0x80000C00
adds r1, r5, #0x0
adds r3, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08014820 @ =0x080A9E2C
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
movs r1, #0xE0
lsls r1, r1, #0x05
adds r2, r6, r1
adds r1, r5, #0x0
adds r3, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08014824 @ =0x080AA56C
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
movs r1, #0xD0
lsls r1, r1, #0x06
adds r2, r6, r1
adds r1, r5, #0x0
adds r3, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08014828 @ =0x080BB758
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
movs r1, #0xE8
lsls r1, r1, #0x07
adds r2, r6, r1
ldr r3, _0801482C @ =0x80000600
adds r1, r5, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08014830 @ =0x080B29C4
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _08014834 @ =0x06017000
ldr r4, _08014838 @ =0x80000200
adds r1, r5, #0x0
adds r3, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _0801483C @ =0x080B2EEC
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _08014840 @ =0x06017A00
ldr r3, _08014844 @ =0x80000100
adds r1, r5, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08014848 @ =0x080B2C38
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0801484C @ =0x06017C00
adds r1, r5, #0x0
adds r3, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
pop {r4, r5, r6}
pop {r0}
bx r0
_08014804: .4byte 0x0000FFFF
_08014808: .4byte 0x0807CD48
_0801480C: .4byte 0x080B2068
_08014810: .4byte 0x0807D1E8
_08014814: .4byte 0x80000150
_08014818: .4byte 0x080A97F8
_0801481C: .4byte 0x80000C00
_08014820: .4byte 0x080A9E2C
_08014824: .4byte 0x080AA56C
_08014828: .4byte 0x080BB758
_0801482C: .4byte 0x80000600
_08014830: .4byte 0x080B29C4
_08014834: .4byte 0x06017000
_08014838: .4byte 0x80000200
_0801483C: .4byte 0x080B2EEC
_08014840: .4byte 0x06017A00
_08014844: .4byte 0x80000100
_08014848: .4byte 0x080B2C38
_0801484C: .4byte 0x06017C00
thumb_func_start sub_8014850
sub_8014850:
push {r4, r5, lr}
add sp, #-0x004
adds r5, r0, #0x0
ldr r4, _080148E0 @ =0x02010400
ldr r1, _080148E4 @ =0x06008000
adds r0, r4, #0x0
bl sub_80146AC
movs r1, #0xC0
lsls r1, r1, #0x13
movs r0, #0x00
bl map_setBufferDestination
ldr r1, _080148E8 @ =0x06001000
movs r0, #0x01
bl map_setBufferDestination
ldr r0, _080148EC @ =0x0807DA94
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _080148F0 @ =0x06002000
ldr r3, _080148F4 @ =0x80000400
adds r1, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _080148F8 @ =0x0807DB98
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _080148FC @ =0x06003000
ldr r3, _08014900 @ =0x80000280
adds r1, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
movs r0, #0x00
str r0, [sp, #0x000]
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
ldr r2, _08014904 @ =0x01000140
mov r0, sp
bl CpuFastSet
ldr r0, _08014908 @ =0x0203EC18
ldrb r0, [r0, #0x00]
lsrs r0, r0, #0x02
movs r1, #0x01
ands r0, r1
cmp r0, #0x00
bne _08014910
ldr r4, _0801490C @ =0x080C6F2C
movs r0, #0x00
movs r1, #0x00
movs r2, #0x05
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
b _08014924
_080148E0: .4byte 0x02010400
_080148E4: .4byte 0x06008000
_080148E8: .4byte 0x06001000
_080148EC: .4byte 0x0807DA94
_080148F0: .4byte 0x06002000
_080148F4: .4byte 0x80000400
_080148F8: .4byte 0x0807DB98
_080148FC: .4byte 0x06003000
_08014900: .4byte 0x80000280
_08014904: .4byte 0x01000140
_08014908: .4byte 0x0203EC18
_0801490C: .4byte 0x080C6F2C
_08014910:
ldr r4, _08014998 @ =0x080C745C
movs r0, #0x00
movs r1, #0x00
movs r2, #0x08
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
_08014924:
movs r0, #0x01
bl map_setBufferDirty
bl main_frameProc
ldr r4, _0801499C @ =0x080C7374
movs r0, #0x01
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
movs r0, #0x02
bl map_setBufferDirty
bl main_frameProc
ldrh r0, [r5, #0x02]
movs r1, #0x00
movs r0, #0x08
strh r0, [r5, #0x02]
ldrh r0, [r5, #0x08]
ldr r0, _080149A0 @ =0x00000209
strh r0, [r5, #0x08]
ldrh r0, [r5, #0x0E]
ldr r0, _080149A4 @ =0x0000040A
strh r0, [r5, #0x0E]
ldrh r0, [r5, #0x14]
ldr r0, _080149A8 @ =0x0000060B
strh r0, [r5, #0x14]
ldrh r0, [r5, #0x00]
movs r0, #0xFA
lsls r0, r0, #0x05
strh r0, [r5, #0x00]
ldrh r0, [r5, #0x04]
strh r1, [r5, #0x04]
ldrh r0, [r5, #0x06]
strh r1, [r5, #0x06]
ldrh r0, [r5, #0x0A]
strh r1, [r5, #0x0A]
ldrh r0, [r5, #0x0C]
strh r1, [r5, #0x0C]
ldrh r0, [r5, #0x10]
strh r1, [r5, #0x10]
ldrh r0, [r5, #0x12]
strh r1, [r5, #0x12]
ldrh r0, [r5, #0x16]
strh r1, [r5, #0x16]
ldrh r0, [r5, #0x18]
strh r1, [r5, #0x18]
str r1, [r5, #0x3C]
add sp, #0x004
pop {r4, r5}
pop {r0}
bx r0
_08014998: .4byte 0x080C745C
_0801499C: .4byte 0x080C7374
_080149A0: .4byte 0x00000209
_080149A4: .4byte 0x0000040A
_080149A8: .4byte 0x0000060B
thumb_func_start sub_80149AC
sub_80149AC:
push {r4, r5, r6, r7, lr}
mov r7, r9
mov r6, r8
push {r6, r7}
movs r0, #0x00
mov r8, r0
mov r9, r0
ldr r7, _08014A58 @ =0x03002E20
ldr r1, _08014A5C @ =0x00000704
adds r4, r7, r1
ldr r1, _08014A60 @ =0x0202A400
movs r2, #0x80
lsls r2, r2, #0x08
adds r0, r4, #0x0
bl frmheap_init
ldr r5, _08014A64 @ =0x03000184
movs r2, #0xA2
lsls r2, r2, #0x01
adds r0, r4, #0x0
movs r1, #0x01
bl frmheap_calloc
str r0, [r5, #0x00]
adds r6, r0, #0x0
bl oam_init
mov r2, r8
str r2, [r6, #0x2C]
str r2, [r6, #0x40]
movs r1, #0x9C
lsls r1, r1, #0x01
adds r0, r6, r1
str r2, [r0, #0x00]
movs r4, #0x80
lsls r4, r4, #0x13
ldrh r0, [r4, #0x00]
movs r2, #0x80
lsls r2, r2, #0x06
adds r1, r2, #0x0
orrs r0, r1
strh r0, [r4, #0x00]
ldr r1, _08014A68 @ =0x04000040
movs r0, #0xF0
strh r0, [r1, #0x00]
adds r1, #0x04
movs r0, #0xA0
strh r0, [r1, #0x00]
ldr r0, _08014A6C @ =0x04000048
mov r1, r8
strh r1, [r0, #0x00]
adds r0, #0x02
strh r1, [r0, #0x00]
movs r0, #0x01
movs r1, #0x02
negs r1, r1
bl irq_updateMask
mov r2, r8
str r2, [r7, #0x0C]
movs r0, #0x02
ldr r1, _08014A70 @ =0x00010001
bl irq_updateMask
ldr r5, _08014A70 @ =0x00010001
movs r0, #0x02
adds r1, r5, #0x0
bl irq_updateMask
ldr r0, _08014A74 @ =0x0203EC18
ldrb r1, [r0, #0x00]
movs r0, #0x08
ands r0, r1
cmp r0, #0x00
beq _08014A7C
mov r0, r8
strh r0, [r4, #0x00]
ldr r0, _08014A78 @ =0x03000180
ldr r0, [r0, #0x00]
str r0, [r7, #0x00]
ldrb r0, [r7, #0x08]
adds r0, #0x01
movs r1, #0x07
ands r0, r1
strb r0, [r7, #0x08]
b _08014C72
_08014A58: .4byte 0x03002E20
_08014A5C: .4byte 0x00000704
_08014A60: .4byte 0x0202A400
_08014A64: .4byte 0x03000184
_08014A68: .4byte 0x04000040
_08014A6C: .4byte 0x04000048
_08014A70: .4byte 0x00010001
_08014A74: .4byte 0x0203EC18
_08014A78: .4byte 0x03000180
_08014A7C:
adds r0, r6, #0x0
bl sub_8014850
ldrh r0, [r6, #0x1A]
ldr r0, _08014AC0 @ =0x00000844
strh r0, [r6, #0x1A]
ldrh r0, [r6, #0x1C]
ldr r0, _08014AC4 @ =0x00001008
strh r0, [r6, #0x1C]
ldr r4, _08014AC8 @ =0x08014625
movs r0, #0x01
movs r1, #0x02
negs r1, r1
bl irq_updateMask
str r4, [r7, #0x0C]
movs r0, #0x02
adds r1, r5, #0x0
bl irq_updateMask
movs r0, #0x02
adds r1, r5, #0x0
bl irq_updateMask
_08014AAC:
ldr r0, [r6, #0x2C]
cmp r0, #0x07
bls _08014AB4
b _08014BB8
_08014AB4:
lsls r0, r0, #0x02
ldr r1, _08014ACC @ =0x08014AD0
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
.byte 0x00, 0x00
_08014AC0: .4byte 0x00000844
_08014AC4: .4byte 0x00001008
_08014AC8: .4byte sub_8014624
_08014ACC: .4byte 0x08014AD0
.byte 0xF0, 0x4A, 0x01, 0x08, 0xFC, 0x4A, 0x01, 0x08, 0x1C, 0x4B, 0x01, 0x08, 0x30, 0x4B, 0x01, 0x08
.byte 0x38, 0x4B, 0x01, 0x08, 0x44, 0x4B, 0x01, 0x08, 0x5A, 0x4B, 0x01, 0x08, 0x74, 0x4B, 0x01, 0x08
.byte 0x30, 0x1C, 0x00, 0xF0, 0xD3, 0xF8, 0x01, 0x20, 0xF0, 0x62, 0x5D, 0xE0, 0x30, 0x1C, 0x49, 0x46
.byte 0x00, 0xF0, 0x8C, 0xF9, 0x00, 0x28, 0x01, 0xD0, 0x04, 0x20, 0x2D, 0xE0, 0x02, 0x20, 0xF0, 0x62
.byte 0x00, 0x22, 0x91, 0x46, 0x30, 0x6B, 0x07, 0x28, 0x4E, 0xD1, 0x51, 0xE0, 0x1B, 0xF0, 0x0E, 0xF9
.byte 0x18, 0xF0, 0x7C, 0xFD, 0x30, 0x1C, 0x00, 0xF0, 0xE3, 0xFA, 0x03, 0x20, 0xF0, 0x62, 0x43, 0xE0
.byte 0x30, 0x1C, 0x00, 0xF0, 0x2D, 0xFB, 0x43, 0xE0, 0x30, 0x1C, 0x00, 0xF0, 0xF7, 0xFD, 0x05, 0x20
.byte 0xF0, 0x62, 0x39, 0xE0, 0x30, 0x1C, 0x49, 0x46, 0x00, 0xF0, 0xFC, 0xFE, 0x00, 0x28, 0x2B, 0xD0
.byte 0x06, 0x20, 0xF0, 0x62, 0x00, 0x20, 0x81, 0x46, 0x2E, 0xE0, 0x30, 0x1C, 0x49, 0x46, 0x01, 0xF0
.byte 0x55, 0xFA, 0x00, 0x28, 0x04, 0xD0, 0x07, 0x20, 0xF0, 0x62, 0x00, 0x21, 0x89, 0x46, 0x23, 0xE0
.byte 0x05, 0x20, 0x1E, 0xE0, 0x30, 0x1C, 0x49, 0x46, 0x01, 0xF0, 0xD2, 0xFB, 0x00, 0x28, 0x17, 0xD0
.byte 0x70, 0x6B, 0x00, 0x28, 0x0E, 0xD0, 0x02, 0x20, 0x30, 0x63, 0x9C, 0x21, 0x49, 0x00, 0x70, 0x18
.byte 0x00, 0x68, 0x81, 0x00, 0x09, 0x18, 0x89, 0x00, 0x30, 0x1C, 0x5C, 0x30, 0x40, 0x18, 0x00, 0x68
.byte 0xB0, 0x63, 0x01, 0xE0, 0x03, 0x20, 0x30, 0x63, 0x01, 0x20, 0xF0, 0x62, 0x81, 0x46, 0x03, 0xE0
.byte 0x06, 0x20, 0xF0, 0x62, 0x01, 0x22, 0x91, 0x46
_08014BB8:
mov r0, r8
cmp r0, #0x00
bne _08014BC0
b _08014AAC
_08014BC0:
ldr r0, _08014BDC @ =0x03000180
ldr r1, [r0, #0x00]
ldr r0, _08014BE0 @ =0x08000E6D
cmp r1, r0
beq _08014BD0
ldr r0, _08014BE4 @ =0x0800190D
cmp r1, r0
bne _08014BEC
_08014BD0:
movs r0, #0x00
bl pltt_getBuffer
ldr r2, _08014BE8 @ =0x0000FFFF
adds r1, r2, #0x0
b _08014BF4
_08014BDC: .4byte 0x03000180
_08014BE0: .4byte title_main
_08014BE4: .4byte gbm_main
_08014BE8: .4byte 0x0000FFFF
_08014BEC:
movs r0, #0x00
bl pltt_getBuffer
movs r1, #0x00
_08014BF4:
strh r1, [r0, #0x00]
movs r0, #0x01
bl pltt_setDirtyFlag
ldr r0, _08014C80 @ =0x080306FD
ldr r4, _08014C84 @ =0x03004F70
str r0, [r4, #0x04]
ldr r0, _08014C88 @ =0x08030739
str r0, [r4, #0x00]
movs r0, #0x00
str r0, [r4, #0x08]
movs r0, #0x01
strb r0, [r4, #0x0E]
bl trns_start
bl main_frameProc
ldrb r1, [r4, #0x0C]
movs r0, #0x02
ands r0, r1
cmp r0, #0x00
beq _08014C30
movs r5, #0x02
_08014C22:
bl main_frameProc
ldrb r1, [r4, #0x0C]
adds r0, r5, #0x0
ands r0, r1
cmp r0, #0x00
bne _08014C22
_08014C30:
ldrh r0, [r6, #0x00]
movs r5, #0x00
strh r5, [r6, #0x00]
bl main_frameProc
ldr r4, _08014C8C @ =0x03002E20
movs r0, #0x01
movs r1, #0x02
negs r1, r1
bl irq_updateMask
str r5, [r4, #0x0C]
movs r0, #0x02
ldr r1, _08014C90 @ =0x00010001
bl irq_updateMask
movs r1, #0x07
negs r1, r1
movs r0, #0x01
bl irq_updateMask
ldr r1, _08014C94 @ =0x0802D5F1
movs r0, #0x01
bl irq_setHandler
ldr r0, _08014C98 @ =0x03000180
ldr r0, [r0, #0x00]
str r0, [r4, #0x00]
ldrb r0, [r4, #0x08]
adds r0, #0x01
movs r1, #0x07
ands r0, r1
strb r0, [r4, #0x08]
_08014C72:
movs r0, #0x01
pop {r3, r4}
mov r8, r3
mov r9, r4
pop {r4, r5, r6, r7}
pop {r1}
bx r1
_08014C80: .4byte trns_initDefaultOutTransition
_08014C84: .4byte 0x03004F70
_08014C88: .4byte trns_applyDefaultOutTransition
_08014C8C: .4byte 0x03002E20
_08014C90: .4byte 0x00010001
_08014C94: .4byte main_dummyIrqHandler
_08014C98: .4byte 0x03000180
thumb_func_start sub_8014C9C
sub_8014C9C:
push {r4, r5, lr}
adds r4, r0, #0x0
ldr r0, _08014CB8 @ =0x02020400
adds r5, r0, #0x0
adds r5, #0x08
ldr r0, _08014CBC @ =0x0203EC18
ldrb r1, [r0, #0x00]
movs r0, #0x04
ands r0, r1
cmp r0, #0x00
beq _08014CC0
movs r0, #0x05
str r0, [r4, #0x30]
b _08014D2E
_08014CB8: .4byte 0x02020400
_08014CBC: .4byte 0x0203EC18
_08014CC0:
movs r0, #0x10
ands r0, r1
cmp r0, #0x00
beq _08014CCE
movs r0, #0x08
str r0, [r4, #0x30]
b _08014D2E
_08014CCE:
movs r0, #0x02
ands r0, r1
cmp r0, #0x00
beq _08014CE0
ldrb r0, [r5, #0x09]
bl track_isRetroTrack
cmp r0, #0x00
beq _08014CE6
_08014CE0:
movs r0, #0x03
str r0, [r4, #0x30]
b _08014D2E
_08014CE6:
ldr r0, _08014D18 @ =0x03002E20
ldr r1, _08014D1C @ =0x00000CAC
adds r0, r0, r1
ldr r0, [r0, #0x00]
cmp r0, #0x00
blt _08014D20
ldrb r0, [r5, #0x09]
bl sub_805CE3C
lsls r0, r0, #0x18
asrs r1, r0, #0x18
movs r5, #0x01
negs r5, r5
cmp r1, r5
bne _08014D28
bl sub_805DC60
lsls r0, r0, #0x18
asrs r1, r0, #0x18
cmp r1, r5
bne _08014D28
movs r0, #0x01
str r0, [r4, #0x30]
b _08014D2E
.byte 0x00, 0x00
_08014D18: .4byte 0x03002E20
_08014D1C: .4byte 0x00000CAC
_08014D20:
bl sub_805DCC8
lsls r0, r0, #0x18
asrs r1, r0, #0x18
_08014D28:
movs r0, #0x00
str r0, [r4, #0x30]
str r1, [r4, #0x38]
_08014D2E:
pop {r4, r5}
pop {r0}
bx r0
thumb_func_start sub_8014D34
sub_8014D34:
push {r4, lr}
add sp, #-0x010
ldr r0, [r0, #0x30]
cmp r0, #0x08
bhi _08014E08
lsls r0, r0, #0x02
ldr r1, _08014D48 @ =0x08014D4C
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
_08014D48: .4byte 0x08014D4C
.byte 0x70, 0x4D, 0x01, 0x08, 0x08, 0x4E, 0x01, 0x08, 0x70, 0x4D, 0x01, 0x08, 0x94, 0x4D, 0x01, 0x08
.byte 0x08, 0x4E, 0x01, 0x08, 0x08, 0x4E, 0x01, 0x08, 0xB8, 0x4D, 0x01, 0x08, 0xF0, 0x4D, 0x01, 0x08
.byte 0x70, 0x4D, 0x01, 0x08, 0x00, 0x20, 0x00, 0x90, 0x00, 0x21, 0x00, 0x22, 0x19, 0xF0, 0x9A, 0xFC
.byte 0x01, 0x1C, 0x03, 0x4A, 0x68, 0x46, 0x4C, 0xF0, 0xE3, 0xFA, 0x02, 0x4C, 0x23, 0xE0, 0x00, 0x00
.byte 0x40, 0x01, 0x00, 0x01, 0x34, 0x70, 0x0C, 0x08, 0x00, 0x20, 0x01, 0x90, 0x01, 0xAC, 0x00, 0x21
.byte 0x00, 0x22, 0x19, 0xF0, 0x87, 0xFC, 0x01, 0x1C, 0x02, 0x4A, 0x20, 0x1C, 0x4C, 0xF0, 0xD0, 0xFA
.byte 0x01, 0x4C, 0x10, 0xE0, 0x40, 0x01, 0x00, 0x01, 0x94, 0x71, 0x0C, 0x08, 0x00, 0x20, 0x02, 0x90
.byte 0x02, 0xAC, 0x00, 0x21, 0x00, 0x22, 0x19, 0xF0, 0x75, 0xFC, 0x01, 0x1C, 0x07, 0x4A, 0x20, 0x1C
.byte 0x4C, 0xF0, 0xBE, 0xFA, 0x06, 0x4C, 0x00, 0x20, 0x00, 0x21, 0x06, 0x22, 0x19, 0xF0, 0x6A, 0xFC
.byte 0x01, 0x1C, 0x20, 0x1C, 0x4C, 0xF0, 0xC0, 0xFA, 0x10, 0xE0, 0x00, 0x00, 0x40, 0x01, 0x00, 0x01
.byte 0xDC, 0x74, 0x0C, 0x08, 0x00, 0x20, 0x03, 0x90, 0x03, 0xAC, 0x00, 0x21, 0x00, 0x22, 0x19, 0xF0
.byte 0x59, 0xFC, 0x01, 0x1C, 0x05, 0x4A, 0x20, 0x1C, 0x4C, 0xF0, 0xA2, 0xFA
_08014E08:
movs r0, #0x01
bl map_setBufferDirty
add sp, #0x010
pop {r4}
pop {r0}
bx r0
.byte 0x00, 0x00, 0x40, 0x01, 0x00, 0x01
thumb_func_start sub_8014E1C
sub_8014E1C:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x00C
adds r4, r0, #0x0
str r1, [sp, #0x008]
movs r0, #0x00
mov r10, r0
mov r8, r0
ldr r0, [r4, #0x30]
movs r1, #0x01
mov r9, r1
cmp r0, #0x05
beq _08014E40
movs r2, #0x00
mov r9, r2
_08014E40:
bl oam_update
bl main_frameProc
ldr r0, [r4, #0x40]
adds r0, #0x01
str r0, [r4, #0x40]
ldr r0, [r4, #0x3C]
adds r0, #0x01
str r0, [r4, #0x3C]
asrs r1, r0, #0x02
ldrh r2, [r4, #0x10]
strh r1, [r4, #0x10]
negs r0, r0
asrs r0, r0, #0x02
ldrh r1, [r4, #0x12]
strh r0, [r4, #0x12]
mov r3, r10
cmp r3, #0x04
bls _08014E6A
b _08014FE6
_08014E6A:
lsls r0, r3, #0x02
ldr r1, _08014E74 @ =0x08014E78
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
_08014E74: .4byte 0x08014E78
.byte 0x8C, 0x4E, 0x01, 0x08, 0xD2, 0x4E, 0x01, 0x08, 0xF0, 0x4E, 0x01, 0x08, 0x38, 0x4F, 0x01, 0x08
.byte 0xCA, 0x4F, 0x01, 0x08, 0x20, 0x1C, 0xFF, 0xF7, 0xDF, 0xFC, 0x20, 0x1C, 0xFF, 0xF7, 0x4E, 0xFF
.byte 0x02, 0x98, 0x00, 0x28, 0x16, 0xD1, 0x07, 0x48, 0x07, 0x49, 0x48, 0x60, 0x07, 0x48, 0x08, 0x60
.byte 0x07, 0x48, 0x88, 0x60, 0x01, 0x20, 0x88, 0x73, 0x1B, 0xF0, 0xBE, 0xFB, 0x01, 0x21, 0x8A, 0x46
.byte 0x95, 0xE0, 0x00, 0x00, 0x61, 0x06, 0x03, 0x08, 0x70, 0x4F, 0x00, 0x03, 0x8D, 0x06, 0x03, 0x08
.byte 0xD9, 0x06, 0x03, 0x08, 0x02, 0x22, 0x92, 0x46, 0x89, 0xE0, 0x06, 0x48, 0x01, 0x7B, 0x02, 0x20
.byte 0x08, 0x40, 0x00, 0x28, 0x00, 0xD0, 0x82, 0xE0, 0x20, 0x6B, 0x01, 0x28, 0x21, 0xD0, 0x05, 0x28
.byte 0x1F, 0xD0, 0x61, 0xE0, 0x70, 0x4F, 0x00, 0x03, 0x01, 0x20, 0x80, 0x44, 0x41, 0x46, 0x08, 0x29
.byte 0x0A, 0xDC, 0x60, 0x8B, 0xFF, 0x20, 0x60, 0x83, 0x08, 0x01, 0x40, 0x42, 0x00, 0x28, 0x00, 0xDA
.byte 0x07, 0x30, 0xC0, 0x10, 0x10, 0x30, 0x68, 0xE0, 0x60, 0x8B, 0x07, 0x48, 0x60, 0x83, 0xA0, 0x8B
.byte 0x06, 0x48, 0xA0, 0x83, 0x00, 0x22, 0x90, 0x46, 0x20, 0x6B, 0x01, 0x28, 0x01, 0xD0, 0x05, 0x28
.byte 0x42, 0xD1, 0x03, 0x23, 0x9A, 0x46, 0x5A, 0xE0, 0x44, 0x08, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00
.byte 0x30, 0x20, 0x18, 0xF0, 0xD7, 0xFA, 0x00, 0x28, 0x07, 0xD0, 0x8D, 0x20, 0x4A, 0xF0, 0xEC, 0xFF
.byte 0x01, 0x20, 0x49, 0x46, 0x41, 0x1A, 0x89, 0x46, 0x49, 0xE0, 0x01, 0x20, 0x18, 0xF0, 0xCA, 0xFA
.byte 0x00, 0x28, 0x2B, 0xD0, 0x8E, 0x20, 0x4A, 0xF0, 0xDF, 0xFF, 0x4A, 0x46, 0x00, 0x2A, 0x0E, 0xD1
.byte 0x04, 0x48, 0x00, 0x78, 0x80, 0x08, 0x01, 0x21, 0x08, 0x40, 0x00, 0x28, 0x04, 0xD1, 0x04, 0x23
.byte 0x9A, 0x46, 0x34, 0xE0, 0x18, 0xEC, 0x03, 0x02, 0x06, 0x20, 0x20, 0x63, 0x11, 0xE0, 0x05, 0x4B
.byte 0x1A, 0x78, 0x90, 0x08, 0x01, 0x21, 0x08, 0x40, 0x00, 0x28, 0x05, 0xD1, 0x03, 0x20, 0x20, 0x63
.byte 0x07, 0xE0, 0x00, 0x00, 0x18, 0xEC, 0x03, 0x02, 0x07, 0x20, 0x20, 0x63, 0xFB, 0x20, 0x10, 0x40
.byte 0x18, 0x70, 0x20, 0x1C, 0xFF, 0xF7, 0xC2, 0xFE, 0x00, 0x20, 0x95, 0xE0, 0x02, 0x20, 0x18, 0xF0
.byte 0x99, 0xFA, 0x00, 0x28, 0x13, 0xD0, 0x90, 0x20, 0x4A, 0xF0, 0xAE, 0xFF, 0x01, 0x20, 0x81, 0x46
.byte 0x0D, 0xE0, 0x01, 0x21, 0x88, 0x44, 0x42, 0x46, 0x08, 0x2A, 0x01, 0xDD, 0x01, 0x20, 0x83, 0xE0
.byte 0x60, 0x8B, 0xFF, 0x20, 0x60, 0x83, 0x43, 0x46, 0x58, 0x00, 0xE1, 0x8B, 0xE0, 0x83
_08014FE6:
ldr r0, [r4, #0x30]
cmp r0, #0x01
beq _08014FF2
cmp r0, #0x05
beq _08014FF2
b _08014E40
_08014FF2:
ldr r0, _08015030 @ =0x080C9488
ldr r7, _08015034 @ =0x080DA2E4
movs r5, #0x00
str r5, [sp, #0x000]
str r5, [sp, #0x004]
adds r1, r7, #0x0
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
ldr r0, _08015038 @ =0x080C9490
ldr r6, _0801503C @ =0x080DA2E8
str r5, [sp, #0x000]
str r5, [sp, #0x004]
adds r1, r6, #0x0
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
ldr r1, [r4, #0x40]
movs r0, #0x1F
ands r0, r1
cmp r0, #0x13
bgt _08015044
ldr r0, _08015040 @ =0x080C9498
adds r1, r6, #0x0
mov r2, r9
cmp r2, #0x00
bne _08015058
b _08015056
.byte 0x00, 0x00
_08015030: .4byte 0x080C9488
_08015034: .4byte 0x080DA2E4
_08015038: .4byte 0x080C9490
_0801503C: .4byte 0x080DA2E8
_08015040: .4byte 0x080C9498
_08015044:
movs r2, #0x20
ands r2, r1
cmp r2, #0x00
beq _0801506C
ldr r0, _08015068 @ =0x080C94A8
adds r1, r6, #0x0
mov r3, r9
cmp r3, #0x00
bne _08015058
_08015056:
adds r1, r7, #0x0
_08015058:
str r5, [sp, #0x000]
str r5, [sp, #0x004]
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
b _08015084
.byte 0x00, 0x00
_08015068: .4byte 0x080C94A8
_0801506C:
ldr r0, _080150A8 @ =0x080C94B8
adds r1, r6, #0x0
mov r3, r9
cmp r3, #0x00
bne _08015078
adds r1, r7, #0x0
_08015078:
str r2, [sp, #0x000]
str r2, [sp, #0x004]
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
_08015084:
ldr r0, [r4, #0x30]
cmp r0, #0x01
bne _080150B8
ldr r1, [r4, #0x40]
movs r0, #0x2F
ands r1, r0
ldr r2, _080150AC @ =0x080C9328
cmp r1, #0x0F
bgt _08015098
ldr r2, _080150B0 @ =0x080C9308
_08015098:
ldr r1, _080150B4 @ =0x080DA2EC
movs r0, #0x00
str r0, [sp, #0x000]
str r0, [sp, #0x004]
adds r0, r2, #0x0
movs r2, #0x00
b _080150CE
.byte 0x00, 0x00
_080150A8: .4byte 0x080C94B8
_080150AC: .4byte 0x080C9328
_080150B0: .4byte 0x080C9308
_080150B4: .4byte 0x080DA2EC
_080150B8:
ldr r0, [r4, #0x40]
movs r1, #0x2F
ands r0, r1
cmp r0, #0x0F
ble _080150C4
b _08014E40
_080150C4:
ldr r0, _080150D8 @ =0x080C94C8
ldr r1, _080150DC @ =0x080DA2F0
movs r2, #0x00
str r2, [sp, #0x000]
str r2, [sp, #0x004]
_080150CE:
movs r3, #0x00
bl oam_renderCellData
b _08014E40
.byte 0x00, 0x00
_080150D8: .4byte 0x080C94C8
_080150DC: .4byte 0x080DA2F0
.byte 0x03, 0xB0, 0x38, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xAA, 0x46, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47
thumb_func_start sub_80150F0
sub_80150F0:
push {r4, r5, lr}
adds r5, r0, #0x0
ldr r0, [r5, #0x30]
cmp r0, #0x07
bhi _08015144
lsls r0, r0, #0x02
ldr r1, _08015104 @ =0x08015108
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
_08015104: .4byte 0x08015108
.byte 0x28, 0x51, 0x01, 0x08, 0x44, 0x51, 0x01, 0x08, 0x28, 0x51, 0x01, 0x08, 0x44, 0x51, 0x01, 0x08
.byte 0x44, 0x51, 0x01, 0x08, 0x44, 0x51, 0x01, 0x08, 0x34, 0x51, 0x01, 0x08, 0x44, 0x51, 0x01, 0x08
.byte 0xA8, 0x6B, 0x00, 0x06, 0x00, 0x0E, 0x48, 0xF0, 0x19, 0xFD, 0x07, 0xE0, 0x27, 0x24, 0x18, 0xF0
.byte 0x71, 0xFA, 0x01, 0x3C, 0x00, 0x2C, 0xFA, 0xDA, 0x48, 0xF0, 0xFE, 0xFA
_08015144:
ldr r0, [r5, #0x30]
cmp r0, #0x06
bne _0801514E
bl sub_805D30C
_0801514E:
bl sub_805DA68
bl save_getSavePointer_805D9B0
movs r1, #0xBF
lsls r1, r1, #0x04
adds r0, r0, r1
ldrh r2, [r0, #0x00]
movs r3, #0x80
lsls r3, r3, #0x08
adds r1, r3, #0x0
orrs r1, r2
strh r1, [r0, #0x00]
bl sub_805D12C
cmp r0, #0x00
bne _08015174
movs r0, #0x09
str r0, [r5, #0x30]
_08015174:
bl save_getSavePointer_805D9B0
movs r1, #0xBF
lsls r1, r1, #0x04
adds r0, r0, r1
ldrh r2, [r0, #0x00]
ldr r1, _0801518C @ =0x00007FFF
ands r1, r2
strh r1, [r0, #0x00]
pop {r4, r5}
pop {r0}
bx r0
_0801518C: .4byte 0x00007FFF
thumb_func_start sub_8015190
sub_8015190:
push {r4, r5, lr}
add sp, #-0x004
adds r5, r0, #0x0
bl main_frameProc
movs r0, #0x00
str r0, [sp, #0x000]
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
ldr r2, _080151C0 @ =0x01000140
mov r0, sp
bl CpuFastSet
ldr r0, [r5, #0x30]
cmp r0, #0x06
beq _080151CE
cmp r0, #0x06
bgt _080151C4
cmp r0, #0x03
beq _080151D8
b _080151FC
_080151C0: .4byte 0x01000140
_080151C4:
cmp r0, #0x07
beq _08015210
cmp r0, #0x09
beq _080151E0
b _080151FC
_080151CE:
ldr r4, _080151D4 @ =0x080C75A8
b _080151E2
.byte 0x00, 0x00
_080151D4: .4byte 0x080C75A8
_080151D8:
ldr r4, _080151DC @ =0x080C727C
b _080151E2
_080151DC: .4byte 0x080C727C
_080151E0:
ldr r4, _080151F8 @ =0x080C72F4
_080151E2:
movs r0, #0x00
movs r1, #0x00
movs r2, #0x08
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
b _08015210
.byte 0x00, 0x00
_080151F8: .4byte 0x080C72F4
_080151FC:
ldr r4, _08015254 @ =0x080C711C
movs r0, #0x00
movs r1, #0x00
movs r2, #0x08
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
_08015210:
movs r0, #0x01
bl map_setBufferDirty
ldr r2, _08015258 @ =0x0203EC18
ldrb r1, [r2, #0x00]
movs r0, #0xFB
ands r0, r1
strb r0, [r2, #0x00]
movs r4, #0x3B
_08015222:
bl oam_update
bl main_frameProc
ldr r0, [r5, #0x40]
adds r0, #0x01
str r0, [r5, #0x40]
ldr r0, [r5, #0x3C]
adds r0, #0x01
str r0, [r5, #0x3C]
asrs r1, r0, #0x02
ldrh r2, [r5, #0x10]
strh r1, [r5, #0x10]
negs r0, r0
asrs r0, r0, #0x02
ldrh r1, [r5, #0x12]
strh r0, [r5, #0x12]
subs r4, #0x01
cmp r4, #0x00
bge _08015222
add sp, #0x004
pop {r4, r5}
pop {r0}
bx r0
.byte 0x00, 0x00
_08015254: .4byte 0x080C711C
_08015258: .4byte 0x0203EC18
.byte 0x01, 0x48, 0x00, 0x68, 0x70, 0x47, 0x00, 0x00, 0x84, 0x01, 0x00, 0x03
thumb_func_start sub_8015268
sub_8015268:
cmp r0, #0x00
beq _0801527C
ldr r0, _08015278 @ =0x0203EC18
ldrb r1, [r0, #0x00]
movs r2, #0x01
orrs r1, r2
strb r1, [r0, #0x00]
b _08015286
_08015278: .4byte 0x0203EC18
_0801527C:
ldr r2, _08015288 @ =0x0203EC18
ldrb r1, [r2, #0x00]
movs r0, #0xFE
ands r0, r1
strb r0, [r2, #0x00]
_08015286:
bx lr
_08015288: .4byte 0x0203EC18
thumb_func_start sub_801528C
sub_801528C:
cmp r0, #0x00
beq _080152A0
ldr r0, _0801529C @ =0x0203EC18
ldrb r1, [r0, #0x00]
movs r2, #0x02
orrs r1, r2
strb r1, [r0, #0x00]
b _080152AA
_0801529C: .4byte 0x0203EC18
_080152A0:
ldr r2, _080152AC @ =0x0203EC18
ldrb r1, [r2, #0x00]
movs r0, #0xFD
ands r0, r1
strb r0, [r2, #0x00]
_080152AA:
bx lr
_080152AC: .4byte 0x0203EC18
thumb_func_start sub_80152B0
sub_80152B0:
cmp r0, #0x00
beq _080152C4
ldr r0, _080152C0 @ =0x0203EC18
ldrb r1, [r0, #0x00]
movs r2, #0x04
orrs r1, r2
strb r1, [r0, #0x00]
b _080152CE
_080152C0: .4byte 0x0203EC18
_080152C4:
ldr r2, _080152D0 @ =0x0203EC18
ldrb r1, [r2, #0x00]
movs r0, #0xFB
ands r0, r1
strb r0, [r2, #0x00]
_080152CE:
bx lr
_080152D0: .4byte 0x0203EC18
thumb_func_start sub_80152D4
sub_80152D4:
cmp r0, #0x00
beq _080152E8
ldr r0, _080152E4 @ =0x0203EC18
ldrb r1, [r0, #0x00]
movs r2, #0x10
orrs r1, r2
strb r1, [r0, #0x00]
b _080152F2
_080152E4: .4byte 0x0203EC18
_080152E8:
ldr r2, _080152F4 @ =0x0203EC18
ldrb r1, [r2, #0x00]
movs r0, #0xEF
ands r0, r1
strb r0, [r2, #0x00]
_080152F2:
bx lr
_080152F4: .4byte 0x0203EC18
thumb_func_start sub_80152F8
sub_80152F8:
cmp r0, #0x00
beq _0801530C
ldr r0, _08015308 @ =0x0203EC18
ldrb r1, [r0, #0x00]
movs r2, #0x08
orrs r1, r2
strb r1, [r0, #0x00]
b _08015316
_08015308: .4byte 0x0203EC18
_0801530C:
ldr r2, _08015318 @ =0x0203EC18
ldrb r1, [r2, #0x00]
movs r0, #0xF7
ands r0, r1
strb r0, [r2, #0x00]
_08015316:
bx lr
_08015318: .4byte 0x0203EC18
thumb_func_start sub_801531C
sub_801531C:
ldr r0, _0801532C @ =0x0203EC18
ldrb r0, [r0, #0x00]
movs r1, #0x03
ands r1, r0
negs r0, r1
orrs r0, r1
lsrs r0, r0, #0x1F
bx lr
_0801532C: .4byte 0x0203EC18
thumb_func_start sub_8015330
sub_8015330:
ldr r1, _08015338 @ =0x03000180
str r0, [r1, #0x00]
bx lr
.byte 0x00, 0x00
_08015338: .4byte 0x03000180
.byte 0x02, 0x48, 0x00, 0x78, 0x80, 0x08, 0x01, 0x21, 0x08, 0x40, 0x70, 0x47, 0x18, 0xEC, 0x03, 0x02
thumb_func_start sub_801534C
sub_801534C:
push {r4, r5, r6, lr}
mov r6, r9
mov r5, r8
push {r5, r6}
adds r4, r0, #0x0
adds r5, r1, #0x0
ldr r0, _080154FC @ =0x0807D1E8
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r1, _08015500 @ =0x80000600
mov r9, r1
adds r1, r4, #0x0
adds r2, r5, #0x0
mov r3, r9
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08015504 @ =0x080A97F8
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
movs r3, #0x80
lsls r3, r3, #0x05
adds r2, r5, r3
ldr r6, _08015508 @ =0x80000C00
adds r1, r4, #0x0
adds r3, r6, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _0801550C @ =0x080A9E2C
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
movs r1, #0xA0
lsls r1, r1, #0x06
adds r2, r5, r1
adds r1, r4, #0x0
adds r3, r6, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08015510 @ =0x080AA56C
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
movs r3, #0x80
lsls r3, r3, #0x07
adds r2, r5, r3
adds r1, r4, #0x0
adds r3, r6, #0x0
bl dmaq_enqueue
bl main_frameProc
bl dmaq_getVBlankDmaQueue
ldr r1, _08015514 @ =0x080ACAFC
movs r3, #0xB0
lsls r3, r3, #0x07
adds r2, r5, r3
mov r3, r9
bl dmaq_enqueue
bl dmaq_getVBlankDmaQueue
ldr r1, _08015518 @ =0x080ABEFC
movs r3, #0xC8
lsls r3, r3, #0x07
adds r2, r5, r3
ldr r3, _0801551C @ =0x80000400
mov r8, r3
bl dmaq_enqueue
bl dmaq_getVBlankDmaQueue
ldr r1, _08015520 @ =0x08063834
movs r3, #0xD8
lsls r3, r3, #0x07
adds r2, r5, r3
ldr r6, _08015524 @ =0x80000200
adds r3, r6, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08015528 @ =0x080B3718
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r1, _0801552C @ =0x00007340
adds r5, r5, r1
ldr r3, _08015530 @ =0x80000060
adds r1, r4, #0x0
adds r2, r5, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08015534 @ =0x080B25A0
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _08015538 @ =0x06015C00
adds r1, r4, #0x0
mov r3, r8
bl dmaq_enqueue
bl main_frameProc
ldr r0, _0801553C @ =0x080B2770
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _08015540 @ =0x06016400
adds r1, r4, #0x0
adds r3, r6, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08015544 @ =0x080B2858
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _08015548 @ =0x06016C00
adds r1, r4, #0x0
adds r3, r6, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _0801554C @ =0x080B29C4
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _08015550 @ =0x06017000
adds r1, r4, #0x0
adds r3, r6, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08015554 @ =0x080B2BC8
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _08015558 @ =0x06017800
ldr r3, _0801555C @ =0x80000100
adds r1, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08015560 @ =0x080B2C38
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _08015564 @ =0x06017C00
adds r1, r4, #0x0
adds r3, r6, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08015568 @ =0x080B3014
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0801556C @ =0x06015000
adds r1, r4, #0x0
mov r3, r9
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08015570 @ =0x080B2F9C
ldr r1, _08015574 @ =0x06014C00
bl LZ77UnCompVram
bl main_frameProc
pop {r3, r4}
mov r8, r3
mov r9, r4
pop {r4, r5, r6}
pop {r0}
bx r0
_080154FC: .4byte 0x0807D1E8
_08015500: .4byte 0x80000600
_08015504: .4byte 0x080A97F8
_08015508: .4byte 0x80000C00
_0801550C: .4byte 0x080A9E2C
_08015510: .4byte 0x080AA56C
_08015514: .4byte 0x080ACAFC
_08015518: .4byte 0x080ABEFC
_0801551C: .4byte 0x80000400
_08015520: .4byte 0x08063834
_08015524: .4byte 0x80000200
_08015528: .4byte 0x080B3718
_0801552C: .4byte 0x00007340
_08015530: .4byte 0x80000060
_08015534: .4byte 0x080B25A0
_08015538: .4byte 0x06015C00
_0801553C: .4byte 0x080B2770
_08015540: .4byte 0x06016400
_08015544: .4byte 0x080B2858
_08015548: .4byte 0x06016C00
_0801554C: .4byte 0x080B29C4
_08015550: .4byte 0x06017000
_08015554: .4byte 0x080B2BC8
_08015558: .4byte 0x06017800
_0801555C: .4byte 0x80000100
_08015560: .4byte 0x080B2C38
_08015564: .4byte 0x06017C00
_08015568: .4byte 0x080B3014
_0801556C: .4byte 0x06015000
_08015570: .4byte 0x080B2F9C
_08015574: .4byte 0x06014C00
thumb_func_start sub_8015578
sub_8015578:
push {r4, r5, r6, r7, lr}
mov r7, r9
mov r6, r8
push {r6, r7}
adds r6, r0, #0x0
ldr r4, _080156D8 @ =0x080B2270
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
adds r0, r4, #0x0
movs r2, #0x80
bl CpuFastSet
ldr r4, _080156DC @ =0x0807CD48
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
adds r1, #0xE0
adds r0, r4, #0x0
movs r2, #0x10
bl CpuFastSet
ldr r4, _080156E0 @ =0x080AAD10
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
movs r0, #0xF0
lsls r0, r0, #0x01
adds r1, r1, r0
adds r0, r4, #0x0
movs r2, #0x08
bl CpuFastSet
movs r0, #0x00
bl pltt_getBuffer
movs r1, #0x00
strh r1, [r0, #0x00]
ldr r4, _080156E4 @ =0x080B2068
movs r0, #0x01
bl pltt_getBuffer
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
movs r0, #0x01
bl pltt_setDirtyFlag
ldr r0, _080156E8 @ =0x02010400
ldr r1, _080156EC @ =0x06008000
bl sub_801534C
movs r0, #0x00
ldr r1, _080156F0 @ =0x080E7FEC
mov r9, r1
_080155EE:
movs r5, #0x00
lsls r7, r0, #0x02
adds r1, r0, #0x1
mov r8, r1
lsls r0, r0, #0x03
adds r0, r0, r7
lsls r4, r0, #0x08
_080155FC:
adds r0, r7, r5
bl track_getMKSCTrack
lsls r0, r0, #0x02
add r0, r9
ldr r0, [r0, #0x00]
ldr r0, [r0, #0x30]
ldr r1, _080156F4 @ =0x02025400
adds r1, r4, r1
bl LZ77UnCompWram
movs r0, #0xC0
lsls r0, r0, #0x02
adds r4, r4, r0
adds r5, #0x01
cmp r5, #0x03
ble _080155FC
bl main_frameProc
mov r0, r8
cmp r0, #0x04
ble _080155EE
movs r5, #0x00
movs r1, #0xC0
lsls r1, r1, #0x13
movs r0, #0x00
bl map_setBufferDestination
ldr r1, _080156F8 @ =0x06001000
movs r0, #0x01
bl map_setBufferDestination
ldr r0, _080156FC @ =0x0807DA94
ldr r4, _080156E8 @ =0x02010400
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _08015700 @ =0x06002000
ldr r3, _08015704 @ =0x80000400
adds r1, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08015708 @ =0x0807DB98
adds r1, r4, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _0801570C @ =0x06003000
ldr r3, _08015710 @ =0x80000280
adds r1, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r0, _08015714 @ =0x080C78AC
ldr r4, _08015718 @ =0x02004400
adds r1, r4, #0x0
bl LZ77UnCompWram
ldr r0, _0801571C @ =0x080C7AA0
movs r1, #0x80
lsls r1, r1, #0x07
adds r4, r4, r1
adds r1, r4, #0x0
bl LZ77UnCompWram
ldrh r0, [r6, #0x08]
ldr r0, _08015720 @ =0x00000209
strh r0, [r6, #0x08]
ldrh r0, [r6, #0x0E]
ldr r0, _08015724 @ =0x0000040A
strh r0, [r6, #0x0E]
ldrh r0, [r6, #0x14]
ldr r0, _08015728 @ =0x0000060B
strh r0, [r6, #0x14]
ldrh r0, [r6, #0x00]
movs r0, #0xFA
lsls r0, r0, #0x05
strh r0, [r6, #0x00]
ldrh r0, [r6, #0x1A]
movs r0, #0xFF
strh r0, [r6, #0x1A]
ldrh r0, [r6, #0x1E]
movs r0, #0x10
strh r0, [r6, #0x1E]
ldrh r0, [r6, #0x0A]
strh r5, [r6, #0x0A]
ldrh r0, [r6, #0x0C]
strh r5, [r6, #0x0C]
ldrh r0, [r6, #0x10]
strh r5, [r6, #0x10]
ldrh r0, [r6, #0x12]
strh r5, [r6, #0x12]
ldrh r0, [r6, #0x16]
strh r5, [r6, #0x16]
ldrh r0, [r6, #0x18]
strh r5, [r6, #0x18]
str r5, [r6, #0x3C]
pop {r3, r4}
mov r8, r3
mov r9, r4
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_080156D8: .4byte 0x080B2270
_080156DC: .4byte 0x0807CD48
_080156E0: .4byte 0x080AAD10
_080156E4: .4byte 0x080B2068
_080156E8: .4byte 0x02010400
_080156EC: .4byte 0x06008000
_080156F0: .4byte 0x080E7FEC
_080156F4: .4byte 0x02025400
_080156F8: .4byte 0x06001000
_080156FC: .4byte 0x0807DA94
_08015700: .4byte 0x06002000
_08015704: .4byte 0x80000400
_08015708: .4byte 0x0807DB98
_0801570C: .4byte 0x06003000
_08015710: .4byte 0x80000280
_08015714: .4byte 0x080C78AC
_08015718: .4byte 0x02004400
_0801571C: .4byte 0x080C7AA0
_08015720: .4byte 0x00000209
_08015724: .4byte 0x0000040A
_08015728: .4byte 0x0000060B
thumb_func_start sub_801572C
sub_801572C:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x020
str r0, [sp, #0x014]
movs r7, #0x00
adds r0, #0x60
str r0, [sp, #0x018]
ldr r6, [sp, #0x014]
adds r6, #0x5C
_08015744:
lsls r4, r7, #0x18
lsrs r4, r4, #0x18
adds r0, r4, #0x0
bl sub_805DF18
lsls r0, r0, #0x18
asrs r0, r0, #0x18
mov r8, r0
adds r0, r4, #0x0
bl sub_805DE90
lsls r0, r0, #0x18
lsrs r0, r0, #0x18
mov r10, r0
adds r0, r4, #0x0
bl sub_805DEB8
lsls r0, r0, #0x10
lsrs r0, r0, #0x10
mov r9, r0
bl save_getSavePointer_805D9B0
ldr r1, _08015784 @ =0x00000BE8
adds r0, r0, r1
adds r2, r7, #0x2
movs r1, #0x01
lsls r1, r2
ldr r5, [r0, #0x00]
ands r5, r1
movs r4, #0x00
b _0801578A
.byte 0x00, 0x00
_08015784: .4byte 0x00000BE8
_08015788:
adds r4, #0x01
_0801578A:
cmp r4, #0x13
bgt _08015798
adds r0, r4, #0x0
bl track_getMKSCTrack
cmp r0, r8
bne _08015788
_08015798:
str r7, [r6, #0x00]
str r4, [r6, #0x04]
mov r2, r10
strb r2, [r6, #0x08]
str r5, [r6, #0x0C]
mov r3, r9
strh r3, [r6, #0x10]
adds r6, #0x14
adds r7, #0x01
cmp r7, #0x09
ble _08015744
movs r7, #0x00
ldr r5, _08015830 @ =0x02020400
mov r10, r5
ldr r6, [sp, #0x018]
mov r8, r6
_080157B8:
adds r4, r7, #0x1
mov r9, r4
cmp r4, #0x09
bgt _0801581E
lsls r0, r7, #0x02
adds r0, r0, r7
lsls r0, r0, #0x02
mov r7, r8
adds r7, r7, r0
mov r12, r7
ldr r1, [sp, #0x014]
adds r0, r1, r0
str r0, [sp, #0x01C]
lsls r0, r4, #0x02
adds r0, r0, r4
lsls r0, r0, #0x02
adds r2, r0, r1
mov r5, r8
adds r3, r0, r5
_080157DE:
mov r6, r12
ldr r1, [r6, #0x00]
ldr r0, [r3, #0x00]
cmp r1, r0
ble _08015814
mov r1, sp
ldr r0, [sp, #0x01C]
adds r0, #0x5C
ldm r0!, {r5, r6, r7}
stm r1!, {r5, r6, r7}
ldm r0!, {r5, r7}
stm r1!, {r5, r7}
ldr r1, [sp, #0x01C]
adds r1, #0x5C
adds r0, r2, #0x0
adds r0, #0x5C
ldm r0!, {r5, r6, r7}
stm r1!, {r5, r6, r7}
ldm r0!, {r6, r7}
stm r1!, {r6, r7}
adds r1, r2, #0x0
adds r1, #0x5C
mov r0, sp
ldm r0!, {r5, r6, r7}
stm r1!, {r5, r6, r7}
ldm r0!, {r5, r6}
stm r1!, {r5, r6}
_08015814:
adds r2, #0x14
adds r3, #0x14
adds r4, #0x01
cmp r4, #0x09
ble _080157DE
_0801581E:
mov r7, r9
cmp r7, #0x08
ble _080157B8
mov r6, r10
adds r6, #0x08
ldrb r5, [r6, #0x09]
movs r4, #0x00
b _08015836
.byte 0x00, 0x00
_08015830: .4byte 0x02020400
_08015834:
adds r4, #0x01
_08015836:
cmp r4, #0x13
bgt _08015844
adds r0, r4, #0x0
bl track_getMKSCTrack
cmp r0, r5
bne _08015834
_08015844:
ldr r7, [sp, #0x014]
movs r1, #0x94
lsls r1, r1, #0x01
adds r0, r7, r1
str r4, [r0, #0x00]
ldrb r1, [r6, #0x00]
movs r2, #0x96
lsls r2, r2, #0x01
adds r0, r7, r2
strb r1, [r0, #0x00]
ldrh r1, [r6, #0x02]
movs r3, #0x9A
lsls r3, r3, #0x01
adds r0, r7, r3
strh r1, [r0, #0x00]
ldr r0, [sp, #0x014]
bl sub_8015578
add sp, #0x020
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
thumb_func_start sub_8015878
sub_8015878:
push {r4, r5, r6, r7, lr}
mov r7, r8
push {r7}
add sp, #-0x004
adds r6, r0, #0x0
ldr r4, _08015920 @ =0x080C761C
movs r0, #0x00
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
ldr r4, _08015924 @ =0x080C78AC
movs r0, #0x01
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
movs r0, #0x03
bl map_setBufferDirty
ldr r0, _08015928 @ =0x06005800
mov r8, r0
movs r7, #0x00
movs r5, #0x09
_080158B8:
adds r0, r6, #0x0
adds r0, #0x60
adds r0, r0, r7
ldr r0, [r0, #0x00]
lsls r4, r0, #0x01
adds r4, r4, r0
lsls r4, r4, #0x08
ldr r0, _0801592C @ =0x02025400
adds r4, r4, r0
bl dmaq_getVBlankDmaQueue
adds r1, r4, #0x0
mov r2, r8
ldr r3, _08015930 @ =0x80000180
bl dmaq_enqueue
movs r0, #0xC0
lsls r0, r0, #0x02
add r8, r0
adds r7, #0x14
subs r5, #0x01
cmp r5, #0x00
bge _080158B8
movs r4, #0x00
str r4, [sp, #0x000]
ldr r5, _08015934 @ =0x02010400
ldr r2, _08015938 @ =0x01000008
mov r0, sp
adds r1, r5, #0x0
bl CpuFastSet
bl dmaq_getVBlankDmaQueue
ldr r2, _0801593C @ =0x06004000
ldr r3, _08015940 @ =0x80000010
adds r1, r5, #0x0
bl dmaq_enqueue
ldrh r0, [r6, #0x02]
movs r0, #0x04
strh r0, [r6, #0x02]
ldrh r0, [r6, #0x04]
strh r4, [r6, #0x04]
ldrh r0, [r6, #0x06]
strh r4, [r6, #0x06]
add sp, #0x004
pop {r3}
mov r8, r3
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_08015920: .4byte 0x080C761C
_08015924: .4byte 0x080C78AC
_08015928: .4byte 0x06005800
_0801592C: .4byte 0x02025400
_08015930: .4byte 0x80000180
_08015934: .4byte 0x02010400
_08015938: .4byte 0x01000008
_0801593C: .4byte 0x06004000
_08015940: .4byte 0x80000010
thumb_func_start sub_8015944
sub_8015944:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x010
adds r7, r0, #0x0
movs r0, #0x00
str r0, [sp, #0x00C]
mov r10, r0
_08015958:
bl oam_update
bl main_frameProc
ldr r0, [r7, #0x40]
adds r0, #0x01
str r0, [r7, #0x40]
ldr r0, [r7, #0x3C]
adds r0, #0x01
str r0, [r7, #0x3C]
asrs r1, r0, #0x02
ldrh r2, [r7, #0x10]
strh r1, [r7, #0x10]
negs r0, r0
asrs r0, r0, #0x02
ldrh r1, [r7, #0x12]
strh r0, [r7, #0x12]
ldr r1, [sp, #0x00C]
cmp r1, #0x05
bls _08015982
b _08015CBC
_08015982:
lsls r0, r1, #0x02
ldr r1, _0801598C @ =0x08015990
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
_0801598C: .4byte 0x08015990
.byte 0xA8, 0x59, 0x01, 0x08, 0xFC, 0x5A, 0x01, 0x08, 0x40, 0x5B, 0x01, 0x08, 0x98, 0x5C, 0x01, 0x08
.byte 0xBC, 0x5C, 0x01, 0x08, 0x98, 0x5C, 0x01, 0x08, 0x38, 0x1C, 0xFF, 0xF7, 0x65, 0xFF, 0x9C, 0x20
.byte 0x40, 0x00, 0x3E, 0x18, 0x30, 0x68, 0x85, 0x00, 0x2D, 0x18, 0xAD, 0x00, 0x7C, 0x19, 0x20, 0x1C
.byte 0x64, 0x30, 0x02, 0x78, 0x04, 0x20, 0x08, 0x21, 0x00, 0xF0, 0xA0, 0xFE, 0x6C, 0x34, 0x22, 0x88
.byte 0x07, 0x20, 0x08, 0x21, 0x0F, 0x23, 0x00, 0xF0, 0x7F, 0xFE, 0x02, 0x20, 0x18, 0xF0, 0x8E, 0xFE
.byte 0x38, 0x1C, 0x60, 0x30, 0x40, 0x19, 0x00, 0x68, 0x44, 0x00, 0x24, 0x18, 0x24, 0x02, 0x20, 0x4D
.byte 0x64, 0x19, 0x1A, 0xF0, 0x1F, 0xFD, 0x21, 0x1C, 0x1E, 0x4A, 0x1F, 0x4B, 0x1A, 0xF0, 0xF2, 0xFC
.byte 0x96, 0x21, 0x49, 0x00, 0x78, 0x18, 0x02, 0x78, 0x04, 0x20, 0x0F, 0x21, 0x00, 0xF0, 0x7E, 0xFE
.byte 0x9A, 0x21, 0x49, 0x00, 0x78, 0x18, 0x02, 0x88, 0x07, 0x20, 0x0F, 0x21, 0x0F, 0x23, 0x00, 0xF0
.byte 0x5B, 0xFE, 0x02, 0x20, 0x18, 0xF0, 0x6A, 0xFE, 0x94, 0x21, 0x49, 0x00, 0x78, 0x18, 0x00, 0x68
.byte 0x44, 0x00, 0x24, 0x18, 0x24, 0x02, 0x64, 0x19, 0x1A, 0xF0, 0xFC, 0xFC, 0x21, 0x1C, 0x0F, 0x4A
.byte 0x0D, 0x4B, 0x1A, 0xF0, 0xCF, 0xFC, 0x00, 0x24, 0xB1, 0x46, 0x62, 0x00, 0x00, 0x20, 0x11, 0x21
.byte 0x18, 0xF0, 0x2E, 0xFE, 0x80, 0x46, 0x49, 0x46, 0x08, 0x68, 0xA0, 0x42, 0x10, 0xD0, 0x01, 0x20
.byte 0x20, 0x40, 0xA0, 0x21, 0xC9, 0x01, 0x00, 0x28, 0x0C, 0xD0, 0xC0, 0x21, 0xC9, 0x01, 0x09, 0xE0
.byte 0x00, 0x54, 0x02, 0x02, 0x00, 0xF4, 0x00, 0x06, 0x80, 0x01, 0x00, 0x80, 0x00, 0xF0, 0x00, 0x06
.byte 0xB0, 0x21, 0x09, 0x02, 0x0A, 0x1C, 0x00, 0x21, 0x01, 0x34, 0xA4, 0x46, 0x18, 0x4E, 0x88, 0x01
.byte 0x4D, 0x1C, 0x41, 0x46, 0x0B, 0x18, 0x0B, 0x24, 0x19, 0x88, 0x30, 0x1C, 0x08, 0x40, 0x10, 0x43
.byte 0x18, 0x80, 0x02, 0x33, 0x01, 0x3C, 0x00, 0x2C, 0xF6, 0xDA, 0x29, 0x1C, 0x01, 0x29, 0xEE, 0xDD
.byte 0x64, 0x46, 0x09, 0x2C, 0xC9, 0xDD, 0x01, 0x20, 0x18, 0xF0, 0x20, 0xFE, 0x00, 0x24, 0x0D, 0x4A
.byte 0x0D, 0x4B, 0x99, 0x8A, 0x48, 0x00, 0x40, 0x18, 0x80, 0x00, 0x80, 0x18, 0x01, 0x68, 0x88, 0x88
.byte 0x00, 0x28, 0x04, 0xD0, 0x09, 0x68, 0x18, 0x69, 0x81, 0x42, 0x00, 0xD1, 0x01, 0x24, 0x00, 0x2C
.byte 0x02, 0xD1, 0x02, 0x20, 0x4A, 0xF0, 0x1C, 0xFA, 0x01, 0x20, 0x03, 0x90, 0xE6, 0xE0, 0x00, 0x00
.byte 0xFF, 0x0F, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08, 0x98, 0x24, 0x10, 0x08, 0x01, 0x21, 0x8A, 0x44
.byte 0x50, 0x46, 0x08, 0x28, 0x0D, 0xDC, 0x78, 0x8B, 0xFF, 0x20, 0x78, 0x83, 0x51, 0x46, 0x08, 0x01
.byte 0x40, 0x42, 0x00, 0x28, 0x00, 0xDA, 0x07, 0x30, 0xC0, 0x10, 0x10, 0x30, 0xF9, 0x8B, 0xF8, 0x83
.byte 0xCC, 0xE0, 0x78, 0x8B, 0x04, 0x48, 0x78, 0x83, 0xB8, 0x8B, 0x04, 0x48, 0xB8, 0x83, 0x02, 0x20
.byte 0x03, 0x90, 0x00, 0x21, 0x8A, 0x46, 0xC1, 0xE0, 0x44, 0x08, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00
.byte 0x9C, 0x20, 0x40, 0x00, 0x3C, 0x18, 0x25, 0x68, 0x17, 0xF0, 0xAA, 0xFC, 0x40, 0x21, 0x01, 0x40
.byte 0x00, 0x29, 0x02, 0xD0, 0x20, 0x68, 0x01, 0x38, 0x20, 0x60, 0x17, 0xF0, 0xA1, 0xFC, 0x80, 0x21
.byte 0x01, 0x40, 0x00, 0x29, 0x02, 0xD0, 0x20, 0x68, 0x01, 0x30, 0x20, 0x60, 0x20, 0x68, 0x00, 0x28
.byte 0x01, 0xDA, 0x09, 0x20, 0x20, 0x60, 0x20, 0x68, 0x09, 0x28, 0x01, 0xDD, 0x00, 0x20, 0x20, 0x60
.byte 0x20, 0x68, 0x85, 0x42, 0x68, 0xD0, 0x8D, 0x20, 0x4A, 0xF0, 0xCA, 0xF9, 0x9C, 0x21, 0x49, 0x00
.byte 0x7E, 0x18, 0x30, 0x68, 0x85, 0x00, 0x2D, 0x18, 0xAD, 0x00, 0x7C, 0x19, 0x20, 0x1C, 0x64, 0x30
.byte 0x02, 0x78, 0x04, 0x20, 0x08, 0x21, 0x00, 0xF0, 0xB1, 0xFD, 0x6C, 0x34, 0x22, 0x88, 0x07, 0x20
.byte 0x08, 0x21, 0x0F, 0x23, 0x00, 0xF0, 0x90, 0xFD, 0x02, 0x20, 0x18, 0xF0, 0x9F, 0xFD, 0x38, 0x1C
.byte 0x60, 0x30, 0x40, 0x19, 0x00, 0x68, 0x44, 0x00, 0x24, 0x18, 0x24, 0x02, 0x0E, 0x48, 0x24, 0x18
.byte 0x1A, 0xF0, 0x30, 0xFC, 0x21, 0x1C, 0x0D, 0x4A, 0x0D, 0x4B, 0x1A, 0xF0, 0x03, 0xFC, 0x00, 0x24
.byte 0xB1, 0x46, 0x62, 0x00, 0x00, 0x20, 0x11, 0x21, 0x18, 0xF0, 0x62, 0xFD, 0x80, 0x46, 0x49, 0x46
.byte 0x08, 0x68, 0xA0, 0x42, 0x0E, 0xD0, 0x01, 0x20, 0x20, 0x40, 0xA0, 0x21, 0xC9, 0x01, 0x00, 0x28
.byte 0x0A, 0xD0, 0xC0, 0x21, 0xC9, 0x01, 0x07, 0xE0, 0x00, 0x54, 0x02, 0x02, 0x00, 0xF4, 0x00, 0x06
.byte 0x80, 0x01, 0x00, 0x80, 0xB0, 0x21, 0x09, 0x02, 0x0A, 0x1C, 0x00, 0x21, 0x01, 0x34, 0xA4, 0x46
.byte 0x0C, 0x4E, 0x88, 0x01, 0x4D, 0x1C, 0x41, 0x46, 0x0B, 0x18, 0x0B, 0x24, 0x19, 0x88, 0x30, 0x1C
.byte 0x08, 0x40, 0x10, 0x43, 0x18, 0x80, 0x02, 0x33, 0x01, 0x3C, 0x00, 0x2C, 0xF6, 0xDA, 0x29, 0x1C
.byte 0x01, 0x29, 0xEE, 0xDD, 0x64, 0x46, 0x09, 0x2C, 0xCB, 0xDD, 0x01, 0x20, 0x18, 0xF0, 0x56, 0xFD
.byte 0x34, 0xE0, 0x00, 0x00, 0xFF, 0x0F, 0x00, 0x00, 0x17, 0xF0, 0x10, 0xFC, 0x01, 0x21, 0x01, 0x40
.byte 0x00, 0x29, 0x05, 0xD0, 0x8E, 0x20, 0x4A, 0xF0, 0x5B, 0xF9, 0x03, 0x20, 0x03, 0x90, 0x25, 0xE0
.byte 0x17, 0xF0, 0x04, 0xFC, 0x02, 0x21, 0x01, 0x40, 0x00, 0x29, 0x1F, 0xD0, 0x90, 0x20, 0x4A, 0xF0
.byte 0x4F, 0xF9, 0x04, 0x48, 0x00, 0x68, 0x01, 0x21, 0x4A, 0xF0, 0x16, 0xFA, 0x05, 0x21, 0x03, 0x91
.byte 0x14, 0xE0, 0x00, 0x00, 0x14, 0x24, 0x10, 0x08, 0x01, 0x20, 0x82, 0x44, 0x51, 0x46, 0x10, 0x29
.byte 0x05, 0xDC, 0x78, 0x8B, 0xFF, 0x20, 0x78, 0x83, 0xF8, 0x8B, 0xF9, 0x83, 0x06, 0xE0, 0x03, 0x98
.byte 0x03, 0x28, 0x01, 0xD1, 0x01, 0x20, 0x47, 0xE0, 0x00, 0x20, 0x45, 0xE0
_08015CBC:
movs r0, #0x00
bl pltt_getBuffer
adds r2, r0, #0x0
movs r1, #0xB0
lsls r1, r1, #0x01
adds r2, r2, r1
ldr r0, _08015D40 @ =0x080B23B0
adds r1, r0, #0x0
adds r1, #0x20
ldr r3, [r7, #0x40]
movs r4, #0x10
str r4, [sp, #0x000]
bl sub_8005E04
adds r6, r7, #0x0
adds r6, #0x68
movs r5, #0xF8
lsls r5, r5, #0x0E
movs r4, #0x01
_08015CE4:
lsrs r0, r5, #0x10
lsls r0, r0, #0x10
movs r1, #0x40
orrs r1, r0
str r1, [sp, #0x008]
movs r0, #0x00
str r0, [sp, #0x000]
str r0, [sp, #0x004]
ldr r0, _08015D44 @ =0x080C922C
add r1, sp, #0x008
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
movs r0, #0xE0
lsls r0, r0, #0x0E
adds r5, r5, r0
subs r4, #0x01
cmp r4, #0x00
bge _08015CE4
movs r1, #0x9C
lsls r1, r1, #0x01
adds r0, r7, r1
ldr r1, [r0, #0x00]
lsls r0, r1, #0x02
adds r0, r0, r1
lsls r0, r0, #0x02
adds r0, r6, r0
ldr r0, [r0, #0x00]
movs r2, #0x00
cmp r0, #0x00
beq _08015D26
movs r2, #0x03
_08015D26:
ldr r3, [r7, #0x40]
movs r0, #0x18
movs r1, #0x48
bl sub_801661C
ldr r3, [r7, #0x40]
movs r0, #0x18
movs r1, #0x80
movs r2, #0x02
bl sub_801661C
b _08015958
.byte 0x00, 0x00
_08015D40: .4byte 0x080B23B0
_08015D44: .4byte 0x080C922C
.byte 0x04, 0xB0, 0x38, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xAA, 0x46, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47
thumb_func_start sub_8015D58
sub_8015D58:
push {r4, r5, r6, r7, lr}
mov r7, r8
push {r7}
add sp, #-0x008
adds r7, r0, #0x0
movs r1, #0x9C
lsls r1, r1, #0x01
adds r0, r7, r1
ldr r0, [r0, #0x00]
lsls r1, r0, #0x02
adds r1, r1, r0
lsls r1, r1, #0x02
adds r0, r7, #0x0
adds r0, #0x60
adds r0, r0, r1
ldr r6, [r0, #0x00]
movs r0, #0x00
mov r8, r0
str r0, [sp, #0x000]
ldr r5, _08015E5C @ =0x02010400
ldr r2, _08015E60 @ =0x01000400
mov r0, sp
adds r1, r5, #0x0
bl CpuFastSet
bl dmaq_getVBlankDmaQueue
movs r2, #0xC0
lsls r2, r2, #0x13
ldr r4, _08015E64 @ =0x80000800
adds r1, r5, #0x0
adds r3, r4, #0x0
bl dmaq_enqueue
bl dmaq_getVBlankDmaQueue
ldr r2, _08015E68 @ =0x06001000
adds r1, r5, #0x0
adds r3, r4, #0x0
bl dmaq_enqueue
bl main_frameProc
ldr r4, _08015E6C @ =0x080C7AA0
movs r0, #0x01
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
movs r0, #0x02
bl map_setBufferDirty
ldr r4, _08015E70 @ =0x080E7FEC
adds r0, r6, #0x0
bl track_getMKSCTrack
lsls r0, r0, #0x02
adds r0, r0, r4
ldr r4, [r0, #0x00]
ldr r0, [r4, #0x24]
adds r1, r5, #0x0
bl LZ77UnCompWram
bl dmaq_getVBlankDmaQueue
ldr r2, _08015E74 @ =0x06004000
ldr r3, _08015E78 @ =0x80000A20
adds r1, r5, #0x0
bl dmaq_enqueue
ldr r4, [r4, #0x28]
movs r0, #0x00
bl pltt_getBuffer
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
mov r1, r8
str r1, [sp, #0x004]
add r4, sp, #0x004
movs r0, #0x00
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
ldr r2, _08015E7C @ =0x01000200
adds r0, r4, #0x0
bl CpuFastSet
ldr r4, _08015E80 @ =0x0809A8CC
movs r0, #0x00
movs r1, #0x01
movs r2, #0x03
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
movs r0, #0x01
bl map_setBufferDirty
lsls r4, r6, #0x01
adds r4, r4, r6
lsls r4, r4, #0x08
ldr r0, _08015E84 @ =0x02025400
adds r4, r4, r0
ldr r5, _08015E88 @ =0x0600F000
bl dmaq_getVBlankDmaQueue
ldr r3, _08015E8C @ =0x80000180
adds r1, r4, #0x0
adds r2, r5, #0x0
bl dmaq_enqueue
ldrh r0, [r7, #0x02]
ldr r0, _08015E90 @ =0x00004084
strh r0, [r7, #0x02]
add sp, #0x008
pop {r3}
mov r8, r3
pop {r4, r5, r6, r7}
pop {r0}
bx r0
_08015E5C: .4byte 0x02010400
_08015E60: .4byte 0x01000400
_08015E64: .4byte 0x80000800
_08015E68: .4byte 0x06001000
_08015E6C: .4byte 0x080C7AA0
_08015E70: .4byte 0x080E7FEC
_08015E74: .4byte 0x06004000
_08015E78: .4byte 0x80000A20
_08015E7C: .4byte 0x01000200
_08015E80: .4byte 0x0809A8CC
_08015E84: .4byte 0x02025400
_08015E88: .4byte 0x0600F000
_08015E8C: .4byte 0x80000180
_08015E90: .4byte 0x00004084
thumb_func_start sub_8015E94
sub_8015E94:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x014
mov r8, r0
movs r0, #0x9C
lsls r0, r0, #0x01
add r0, r8
ldr r0, [r0, #0x00]
lsls r1, r0, #0x02
adds r1, r1, r0
lsls r1, r1, #0x02
mov r0, r8
adds r0, #0x60
adds r0, r0, r1
ldr r2, [r0, #0x00]
adds r1, r2, #0x0
cmp r2, #0x00
bge _08015EC0
adds r1, r2, #0x3
_08015EC0:
asrs r1, r1, #0x02
movs r0, #0x03
ands r2, r0
movs r0, #0x00
str r0, [sp, #0x000]
movs r7, #0x00
lsls r2, r2, #0x05
str r2, [sp, #0x00C]
str r2, [sp, #0x004]
lsls r1, r1, #0x07
str r1, [sp, #0x010]
str r1, [sp, #0x008]
_08015ED8:
bl save_getSavePointer_805D9B0
lsls r4, r7, #0x02
ldr r1, [sp, #0x008]
adds r0, r1, r0
ldr r1, [sp, #0x004]
adds r0, r1, r0
adds r0, r4, r0
adds r0, #0x64
ldrb r5, [r0, #0x00]
bl save_getSavePointer_805D9B0
ldr r1, [sp, #0x008]
adds r0, r1, r0
ldr r1, [sp, #0x004]
adds r0, r1, r0
adds r4, r4, r0
adds r4, #0x64
ldrh r6, [r4, #0x02]
lsls r0, r7, #0x01
mov r9, r0
mov r4, r9
adds r4, #0x05
movs r0, #0x0F
adds r1, r4, #0x0
adds r2, r5, #0x0
bl sub_801670C
movs r0, #0x11
adds r1, r4, #0x0
adds r2, r5, #0x0
bl sub_8016740
adds r2, r6, #0x0
movs r0, #0x16
adds r1, r4, #0x0
movs r3, #0x0F
bl sub_80166D8
adds r7, #0x01
mov r10, r7
ldr r1, [sp, #0x000]
cmp r1, #0x00
bne _08015FAC
movs r2, #0x9E
lsls r2, r2, #0x01
add r2, r8
movs r3, #0xA0
lsls r3, r3, #0x01
add r3, r8
str r1, [r3, #0x00]
str r1, [r2, #0x00]
movs r0, #0x9C
lsls r0, r0, #0x01
add r0, r8
ldr r1, [r0, #0x00]
lsls r0, r1, #0x02
adds r0, r0, r1
lsls r0, r0, #0x02
mov r7, r8
adds r1, r7, r0
adds r0, r1, #0x0
adds r0, #0x64
ldrb r0, [r0, #0x00]
cmp r0, r5
bne _08015FAC
adds r0, r1, #0x0
adds r0, #0x6C
ldrh r0, [r0, #0x00]
cmp r0, r6
bne _08015FAC
movs r0, #0x01
str r0, [sp, #0x000]
movs r0, #0x6C
str r0, [r2, #0x00]
mov r0, r9
adds r0, #0x06
lsls r0, r0, #0x03
str r0, [r3, #0x00]
movs r0, #0x01
movs r1, #0x11
adds r2, r4, #0x0
bl map_getBufferPtr2d
adds r5, r0, #0x0
movs r1, #0x00
ldr r7, _08016008 @ =0x00000FFF
movs r0, #0xE0
lsls r0, r0, #0x08
adds r6, r0, #0x0
_08015F8C:
lsls r0, r1, #0x06
adds r4, r1, #0x1
adds r2, r0, r5
movs r3, #0x0B
_08015F94:
ldrh r1, [r2, #0x00]
adds r0, r7, #0x0
ands r0, r1
orrs r0, r6
strh r0, [r2, #0x00]
adds r2, #0x02
subs r3, #0x01
cmp r3, #0x00
bge _08015F94
adds r1, r4, #0x0
cmp r1, #0x01
ble _08015F8C
_08015FAC:
mov r7, r10
cmp r7, #0x04
ble _08015ED8
bl save_getSavePointer_805D9B0
ldr r1, [sp, #0x010]
adds r0, r1, r0
ldr r7, [sp, #0x00C]
adds r0, r7, r0
adds r0, #0x78
ldrb r5, [r0, #0x00]
bl save_getSavePointer_805D9B0
ldr r1, [sp, #0x010]
adds r0, r1, r0
adds r0, r7, r0
adds r0, #0x78
ldrh r6, [r0, #0x02]
movs r0, #0x0F
movs r1, #0x11
adds r2, r5, #0x0
bl sub_801670C
movs r0, #0x11
movs r1, #0x11
adds r2, r5, #0x0
bl sub_8016740
adds r2, r6, #0x0
movs r0, #0x16
movs r1, #0x11
movs r3, #0x0F
bl sub_80166D8
movs r0, #0x02
bl map_setBufferDirty
add sp, #0x014
pop {r3, r4, r5}
mov r8, r3
mov r9, r4
mov r10, r5
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_08016008: .4byte 0x00000FFF
thumb_func_start sub_801600C
sub_801600C:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x01C
adds r5, r0, #0x0
movs r0, #0x00
mov r10, r0
mov r9, r0
movs r1, #0x00
str r1, [sp, #0x00C]
movs r2, #0x00
str r2, [sp, #0x010]
movs r0, #0x80
str r0, [sp, #0x014]
movs r1, #0x01
str r1, [sp, #0x018]
_08016030:
bl oam_update
bl main_frameProc
ldr r0, [r5, #0x40]
adds r0, #0x01
str r0, [r5, #0x40]
ldr r0, [r5, #0x3C]
adds r0, #0x01
str r0, [r5, #0x3C]
asrs r1, r0, #0x02
ldrh r2, [r5, #0x10]
strh r1, [r5, #0x10]
negs r0, r0
asrs r0, r0, #0x02
ldrh r1, [r5, #0x12]
strh r0, [r5, #0x12]
mov r2, r10
cmp r2, #0x04
bls _0801605A
b _08016152
_0801605A:
lsls r0, r2, #0x02
ldr r1, _08016064 @ =0x08016068
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
_08016064: .4byte 0x08016068
.byte 0x7C, 0x60, 0x01, 0x08, 0x8E, 0x60, 0x01, 0x08, 0xD0, 0x60, 0x01, 0x08, 0x2C, 0x61, 0x01, 0x08
.byte 0x2C, 0x61, 0x01, 0x08, 0x28, 0x1C, 0xFF, 0xF7, 0x6B, 0xFE, 0x28, 0x1C, 0xFF, 0xF7, 0x06, 0xFF
.byte 0x01, 0x20, 0x82, 0x46, 0x61, 0xE0, 0x01, 0x21, 0x89, 0x44, 0x4A, 0x46, 0x08, 0x2A, 0x0C, 0xDC
.byte 0x68, 0x8B, 0xFF, 0x20, 0x68, 0x83, 0x10, 0x01, 0x40, 0x42, 0x00, 0x28, 0x00, 0xDA, 0x07, 0x30
.byte 0xC0, 0x10, 0x10, 0x30, 0xE9, 0x8B, 0xE8, 0x83, 0x4F, 0xE0, 0x68, 0x8B, 0x04, 0x48, 0x68, 0x83
.byte 0xA8, 0x8B, 0x04, 0x48, 0xA8, 0x83, 0x02, 0x20, 0x82, 0x46, 0x00, 0x21, 0x89, 0x46, 0x44, 0xE0
.byte 0x44, 0x08, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x30, 0x20, 0x17, 0xF0, 0x0B, 0xFA, 0x00, 0x28
.byte 0x07, 0xD0, 0x8D, 0x20, 0x49, 0xF0, 0x20, 0xFF, 0x01, 0x20, 0x03, 0x9A, 0x82, 0x1A, 0x03, 0x92
.byte 0x33, 0xE0, 0x01, 0x20, 0x17, 0xF0, 0xFE, 0xF9, 0x00, 0x28, 0x0C, 0xD0, 0x00, 0x20, 0x06, 0x90
.byte 0x00, 0x21, 0x04, 0x91, 0x03, 0x9A, 0x00, 0x2A, 0x0E, 0xD1, 0x8E, 0x20, 0x49, 0xF0, 0x0C, 0xFF
.byte 0x03, 0x20, 0x82, 0x46, 0x21, 0xE0, 0x02, 0x20, 0x17, 0xF0, 0xEC, 0xF9, 0x00, 0x28, 0x1C, 0xD0
.byte 0x00, 0x22, 0x06, 0x92, 0x00, 0x20, 0x04, 0x90, 0x90, 0x20, 0x49, 0xF0, 0xFD, 0xFE, 0x04, 0x21
.byte 0x8A, 0x46, 0x12, 0xE0, 0x01, 0x22, 0x91, 0x44, 0x48, 0x46, 0x10, 0x28, 0x06, 0xDC, 0x68, 0x8B
.byte 0xFF, 0x20, 0x68, 0x83, 0xE8, 0x8B, 0x49, 0x46, 0xE9, 0x83, 0x06, 0xE0, 0x52, 0x46, 0x03, 0x2A
.byte 0x01, 0xD1, 0x01, 0x20, 0x92, 0xE0, 0x00, 0x20, 0x90, 0xE0
_08016152:
movs r0, #0x00
bl pltt_getBuffer
adds r2, r0, #0x0
movs r0, #0xE0
lsls r0, r0, #0x01
adds r2, r2, r0
ldr r0, _08016200 @ =0x080AAD3C
adds r1, r0, #0x0
adds r1, #0x40
ldr r3, [r5, #0x40]
movs r4, #0x10
str r4, [sp, #0x000]
bl sub_8005E04
movs r1, #0x9C
lsls r1, r1, #0x01
adds r1, r1, r5
mov r8, r1
ldr r1, [r1, #0x00]
lsls r0, r1, #0x02
adds r0, r0, r1
lsls r0, r0, #0x02
adds r7, r5, #0x0
adds r7, #0x68
adds r0, r7, r0
ldr r0, [r0, #0x00]
movs r2, #0x00
cmp r0, #0x00
beq _08016190
movs r2, #0x03
_08016190:
ldr r3, [r5, #0x40]
movs r0, #0x48
movs r1, #0x78
bl sub_801661C
movs r2, #0x9E
lsls r2, r2, #0x01
adds r0, r5, r2
ldr r6, [r0, #0x00]
cmp r6, #0x00
beq _080161D2
movs r1, #0xA0
lsls r1, r1, #0x01
adds r0, r5, r1
ldr r4, [r0, #0x00]
cmp r4, #0x00
beq _080161D2
mov r2, r8
ldr r0, [r2, #0x00]
lsls r1, r0, #0x02
adds r1, r1, r0
lsls r1, r1, #0x02
adds r1, r7, r1
ldr r0, [r1, #0x00]
movs r2, #0x00
cmp r0, #0x00
beq _080161C8
movs r2, #0x03
_080161C8:
ldr r3, [r5, #0x40]
adds r0, r6, #0x0
adds r1, r4, #0x0
bl sub_801661C
_080161D2:
ldr r0, [sp, #0x018]
cmp r0, #0x00
beq _08016208
ldr r1, [sp, #0x010]
adds r1, #0x01
str r1, [sp, #0x010]
cmp r1, #0x20
bgt _08016236
ldr r1, _08016204 @ =0x080E645C
ldr r2, [sp, #0x010]
lsls r0, r2, #0x19
asrs r0, r0, #0x10
cmp r0, #0x00
bge _080161F0
adds r0, #0x3F
_080161F0:
lsls r0, r0, #0x10
lsrs r0, r0, #0x16
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r1, [r0, #0x00]
ldr r2, [sp, #0x014]
negs r0, r2
b _0801622E
_08016200: .4byte 0x080AAD3C
_08016204: .4byte 0x080E645C
_08016208:
ldr r0, [sp, #0x010]
adds r0, #0x01
str r0, [sp, #0x010]
cmp r0, #0x20
bgt _08016236
ldr r1, _0801626C @ =0x080E645C
lsls r0, r0, #0x19
asrs r0, r0, #0x10
cmp r0, #0x00
bge _0801621E
adds r0, #0x3F
_0801621E:
lsls r0, r0, #0x10
lsrs r0, r0, #0x16
lsls r0, r0, #0x02
adds r0, r0, r1
ldr r1, [r0, #0x00]
movs r0, #0x80
ldr r2, [sp, #0x014]
subs r0, r0, r2
_0801622E:
muls r0, r1
asrs r0, r0, #0x0F
adds r2, r2, r0
str r2, [sp, #0x014]
_08016236:
ldrh r0, [r5, #0x04]
movs r2, #0x00
mov r0, sp
ldrh r0, [r0, #0x14]
strh r0, [r5, #0x04]
movs r0, #0x20
ldr r1, [sp, #0x014]
subs r0, r0, r1
lsls r0, r0, #0x10
lsrs r0, r0, #0x10
movs r1, #0xE0
lsls r1, r1, #0x0E
orrs r0, r1
str r0, [sp, #0x008]
ldr r0, _08016270 @ =0x080C9174
str r2, [sp, #0x000]
str r2, [sp, #0x004]
add r1, sp, #0x008
movs r3, #0x00
bl oam_renderCellData
ldr r1, [r5, #0x40]
ldr r0, [sp, #0x00C]
bl sub_8016778
b _08016030
.byte 0x00, 0x00
_0801626C: .4byte 0x080E645C
_08016270: .4byte 0x080C9174
.byte 0x07, 0xB0, 0x38, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xAA, 0x46, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47
thumb_func_start sub_8016284
sub_8016284:
push {r4, r5, r6, r7, lr}
mov r7, r8
push {r7}
adds r5, r0, #0x0
ldr r4, _0801630C @ =0x080C761C
movs r0, #0x00
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
ldr r4, _08016310 @ =0x080C7D80
movs r0, #0x01
movs r1, #0x00
movs r2, #0x00
bl map_getBufferPtr2d
adds r1, r0, #0x0
adds r0, r4, #0x0
bl LZ77UnCompWram
movs r0, #0x03
bl map_setBufferDirty
ldr r0, _08016314 @ =0x06005800
mov r8, r0
movs r7, #0x00
movs r6, #0x09
_080162C2:
adds r0, r5, #0x0
adds r0, #0x60
adds r0, r0, r7
ldr r0, [r0, #0x00]
lsls r4, r0, #0x01
adds r4, r4, r0
lsls r4, r4, #0x08
ldr r0, _08016318 @ =0x02025400
adds r4, r4, r0
bl dmaq_getVBlankDmaQueue
adds r1, r4, #0x0
mov r2, r8
ldr r3, _0801631C @ =0x80000180
bl dmaq_enqueue
movs r0, #0xC0
lsls r0, r0, #0x02
add r8, r0
adds r7, #0x14
subs r6, #0x01
cmp r6, #0x00
bge _080162C2
movs r1, #0x00
ldrh r0, [r5, #0x02]
movs r0, #0x04
strh r0, [r5, #0x02]
ldrh r0, [r5, #0x04]
strh r1, [r5, #0x04]
ldrh r0, [r5, #0x06]
strh r1, [r5, #0x06]
pop {r3}
mov r8, r3
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_0801630C: .4byte 0x080C761C
_08016310: .4byte 0x080C7D80
_08016314: .4byte 0x06005800
_08016318: .4byte 0x02025400
_0801631C: .4byte 0x80000180
thumb_func_start sub_8016320
sub_8016320:
push {r4, r5, r6, r7, lr}
mov r7, r10
mov r6, r9
mov r5, r8
push {r5, r6, r7}
add sp, #-0x010
adds r7, r0, #0x0
movs r0, #0x00
mov r8, r0
mov r10, r0
movs r1, #0x00
str r1, [sp, #0x00C]
_08016338:
bl oam_update
bl main_frameProc
ldr r0, [r7, #0x40]
adds r0, #0x01
str r0, [r7, #0x40]
ldr r0, [r7, #0x3C]
adds r0, #0x01
str r0, [r7, #0x3C]
asrs r1, r0, #0x02
ldrh r2, [r7, #0x10]
strh r1, [r7, #0x10]
negs r0, r0
asrs r0, r0, #0x02
ldrh r1, [r7, #0x12]
strh r0, [r7, #0x12]
mov r0, r8
cmp r0, #0x04
bls _08016362
b _0801657A
_08016362:
lsls r0, r0, #0x02
ldr r1, _0801636C @ =0x08016370
adds r0, r0, r1
ldr r0, [r0, #0x00]
mov pc, r0
_0801636C: .4byte 0x08016370
.byte 0x84, 0x63, 0x01, 0x08, 0xA4, 0x64, 0x01, 0x08, 0xE8, 0x64, 0x01, 0x08, 0x56, 0x65, 0x01, 0x08
.byte 0x56, 0x65, 0x01, 0x08, 0x38, 0x1C, 0xFF, 0xF7, 0x7D, 0xFF, 0x9C, 0x21, 0x49, 0x00, 0x7E, 0x18
.byte 0x30, 0x68, 0x85, 0x00, 0x2D, 0x18, 0xAD, 0x00, 0x7C, 0x19, 0x20, 0x1C, 0x64, 0x30, 0x02, 0x78
.byte 0x04, 0x20, 0x04, 0x21, 0x00, 0xF0, 0xB2, 0xF9, 0x6C, 0x34, 0x22, 0x88, 0x07, 0x20, 0x04, 0x21
.byte 0x0F, 0x23, 0x00, 0xF0, 0x91, 0xF9, 0x02, 0x20, 0x18, 0xF0, 0xA0, 0xF9, 0x38, 0x1C, 0x60, 0x30
.byte 0x40, 0x19, 0x00, 0x68, 0x44, 0x00, 0x24, 0x18, 0x24, 0x02, 0x20, 0x4D, 0x64, 0x19, 0x1A, 0xF0
.byte 0x31, 0xF8, 0x21, 0x1C, 0x1E, 0x4A, 0x1F, 0x4B, 0x1A, 0xF0, 0x04, 0xF8, 0x96, 0x21, 0x49, 0x00
.byte 0x78, 0x18, 0x02, 0x78, 0x04, 0x20, 0x0B, 0x21, 0x00, 0xF0, 0x90, 0xF9, 0x9A, 0x21, 0x49, 0x00
.byte 0x78, 0x18, 0x02, 0x88, 0x07, 0x20, 0x0B, 0x21, 0x0F, 0x23, 0x00, 0xF0, 0x6D, 0xF9, 0x02, 0x20
.byte 0x18, 0xF0, 0x7C, 0xF9, 0x94, 0x21, 0x49, 0x00, 0x78, 0x18, 0x00, 0x68, 0x44, 0x00, 0x24, 0x18
.byte 0x24, 0x02, 0x64, 0x19, 0x1A, 0xF0, 0x0E, 0xF8, 0x21, 0x1C, 0x0F, 0x4A, 0x0D, 0x4B, 0x19, 0xF0
.byte 0xE1, 0xFF, 0x00, 0x24, 0xB1, 0x46, 0x62, 0x00, 0x00, 0x20, 0x11, 0x21, 0x18, 0xF0, 0x40, 0xF9
.byte 0x80, 0x46, 0x49, 0x46, 0x08, 0x68, 0xA0, 0x42, 0x10, 0xD0, 0x01, 0x20, 0x20, 0x40, 0xA0, 0x21
.byte 0xC9, 0x01, 0x00, 0x28, 0x0C, 0xD0, 0xC0, 0x21, 0xC9, 0x01, 0x09, 0xE0, 0x00, 0x54, 0x02, 0x02
.byte 0x00, 0xF4, 0x00, 0x06, 0x80, 0x01, 0x00, 0x80, 0x00, 0xF0, 0x00, 0x06, 0xB0, 0x21, 0x09, 0x02
.byte 0x0A, 0x1C, 0x00, 0x21, 0x01, 0x34, 0xA4, 0x46, 0x0D, 0x4E, 0x88, 0x01, 0x4D, 0x1C, 0x41, 0x46
.byte 0x0B, 0x18, 0x0B, 0x24, 0x19, 0x88, 0x30, 0x1C, 0x08, 0x40, 0x10, 0x43, 0x18, 0x80, 0x02, 0x33
.byte 0x01, 0x3C, 0x00, 0x2C, 0xF6, 0xDA, 0x29, 0x1C, 0x01, 0x29, 0xEE, 0xDD, 0x64, 0x46, 0x09, 0x2C
.byte 0xC9, 0xDD, 0x01, 0x20, 0x18, 0xF0, 0x32, 0xF9, 0x01, 0x20, 0x80, 0x46, 0x6D, 0xE0, 0x00, 0x00
.byte 0xFF, 0x0F, 0x00, 0x00, 0x01, 0x21, 0x8A, 0x44, 0x50, 0x46, 0x08, 0x28, 0x0D, 0xDC, 0x78, 0x8B
.byte 0xFF, 0x20, 0x78, 0x83, 0x51, 0x46, 0x08, 0x01, 0x40, 0x42, 0x00, 0x28, 0x00, 0xDA, 0x07, 0x30
.byte 0xC0, 0x10, 0x10, 0x30, 0xF9, 0x8B, 0xF8, 0x83, 0x57, 0xE0, 0x78, 0x8B, 0x04, 0x48, 0x78, 0x83
.byte 0xB8, 0x8B, 0x04, 0x48, 0xB8, 0x83, 0x02, 0x20, 0x80, 0x46, 0x00, 0x21, 0x8A, 0x46, 0x4C, 0xE0
.byte 0x44, 0x08, 0x00, 0x00, 0x08, 0x10, 0x00, 0x00, 0x30, 0x20, 0x16, 0xF0, 0xFF, 0xFF, 0x04, 0x1C
.byte 0x00, 0x2C, 0x07, 0xD0, 0x8D, 0x20, 0x49, 0xF0, 0x13, 0xFD, 0x01, 0x20, 0x03, 0x99, 0x41, 0x1A
.byte 0x03, 0x91, 0x3A, 0xE0, 0x01, 0x20, 0x16, 0xF0, 0xF1, 0xFF, 0x00, 0x28, 0x18, 0xD0, 0x03, 0x98
.byte 0x00, 0x28, 0x07, 0xD1, 0x8E, 0x20, 0x49, 0xF0, 0x03, 0xFD, 0x03, 0x21, 0x88, 0x46, 0x01, 0x20
.byte 0x78, 0x63, 0x05, 0xE0, 0x8E, 0x20, 0x49, 0xF0, 0xFB, 0xFC, 0x03, 0x20, 0x80, 0x46, 0x7C, 0x63
.byte 0x02, 0x48, 0x00, 0x68, 0x01, 0x21, 0x49, 0xF0, 0xBF, 0xFD, 0x1E, 0xE0, 0x14, 0x24, 0x10, 0x08
.byte 0x02, 0x20, 0x16, 0xF0, 0xD3, 0xFF, 0x00, 0x28, 0x17, 0xD0, 0x90, 0x20, 0x49, 0xF0, 0xE8, 0xFC
.byte 0x04, 0x21, 0x88, 0x46, 0x11, 0xE0, 0x01, 0x20, 0x82, 0x44, 0x51, 0x46, 0x10, 0x29, 0x05, 0xDC
.byte 0x78, 0x8B, 0xFF, 0x20, 0x78, 0x83, 0xF8, 0x8B, 0xF9, 0x83, 0x06, 0xE0, 0x40, 0x46, 0x03, 0x28
.byte 0x01, 0xD1, 0x01, 0x20, 0x4A, 0xE0, 0x00, 0x20, 0x48, 0xE0
_0801657A:
movs r0, #0x00
bl pltt_getBuffer
adds r2, r0, #0x0
movs r1, #0xB0
lsls r1, r1, #0x01
adds r2, r2, r1
ldr r0, _08016604 @ =0x080B23B0
adds r1, r0, #0x0
adds r1, #0x20
ldr r3, [r7, #0x40]
movs r4, #0x10
str r4, [sp, #0x000]
bl sub_8005E04
adds r6, r7, #0x0
adds r6, #0x68
movs r5, #0xF0
lsls r5, r5, #0x0D
movs r4, #0x01
_080165A2:
lsrs r0, r5, #0x10
lsls r0, r0, #0x10
movs r1, #0x40
orrs r1, r0
str r1, [sp, #0x008]
movs r0, #0x00
str r0, [sp, #0x000]
str r0, [sp, #0x004]
ldr r0, _08016608 @ =0x080C922C
add r1, sp, #0x008
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
movs r0, #0xE0
lsls r0, r0, #0x0E
adds r5, r5, r0
subs r4, #0x01
cmp r4, #0x00
bge _080165A2
movs r1, #0x9C
lsls r1, r1, #0x01
adds r0, r7, r1
ldr r1, [r0, #0x00]
lsls r0, r1, #0x02
adds r0, r0, r1
lsls r0, r0, #0x02
adds r0, r6, r0
ldr r0, [r0, #0x00]
movs r2, #0x00
cmp r0, #0x00
beq _080165E4
movs r2, #0x03
_080165E4:
ldr r3, [r7, #0x40]
movs r0, #0x18
movs r1, #0x28
bl sub_801661C
ldr r3, [r7, #0x40]
movs r0, #0x18
movs r1, #0x60
movs r2, #0x02
bl sub_801661C
ldr r1, [r7, #0x40]
ldr r0, [sp, #0x00C]
bl sub_8016778
b _08016338
_08016604: .4byte 0x080B23B0
_08016608: .4byte 0x080C922C
.byte 0x04, 0xB0, 0x38, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xAA, 0x46, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47
thumb_func_start sub_801661C
sub_801661C:
push {lr}
add sp, #-0x00C
lsls r0, r0, #0x10
lsls r1, r1, #0x10
lsrs r0, r0, #0x10
orrs r0, r1
str r0, [sp, #0x008]
cmp r2, #0x01
beq _0801665C
cmp r2, #0x01
bgt _08016638
cmp r2, #0x00
beq _08016642
b _080166CA
_08016638:
cmp r2, #0x02
beq _08016674
cmp r2, #0x03
beq _080166AC
b _080166CA
_08016642:
movs r0, #0x2F
ands r0, r3
ldr r1, _08016654 @ =0x080C9328
cmp r0, #0x0F
bgt _0801664E
ldr r1, _08016658 @ =0x080C9308
_0801664E:
str r2, [sp, #0x000]
str r2, [sp, #0x004]
b _08016698
_08016654: .4byte 0x080C9328
_08016658: .4byte 0x080C9308
_0801665C:
movs r0, #0x2F
ands r0, r3
ldr r1, _0801666C @ =0x080C9330
cmp r0, #0x0F
bgt _08016692
ldr r1, _08016670 @ =0x080C9310
b _08016692
.byte 0x00, 0x00
_0801666C: .4byte 0x080C9330
_08016670: .4byte 0x080C9310
_08016674:
movs r0, #0x3F
ands r0, r3
cmp r0, #0x14
ble _08016690
ldr r1, _08016688 @ =0x080C9480
cmp r0, #0x29
bgt _08016692
ldr r1, _0801668C @ =0x080C9478
b _08016692
.byte 0x00, 0x00
_08016688: .4byte 0x080C9480
_0801668C: .4byte 0x080C9478
_08016690:
ldr r1, _080166A8 @ =0x080C9470
_08016692:
movs r0, #0x00
str r0, [sp, #0x000]
str r0, [sp, #0x004]
_08016698:
adds r0, r1, #0x0
add r1, sp, #0x008
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
b _080166CA
.byte 0x00, 0x00
_080166A8: .4byte 0x080C9470
_080166AC:
movs r0, #0x2F
ands r0, r3
ldr r1, _080166D0 @ =0x080C9748
cmp r0, #0x0F
bgt _080166B8
ldr r1, _080166D4 @ =0x080C9740
_080166B8:
movs r0, #0x00
str r0, [sp, #0x000]
str r0, [sp, #0x004]
adds r0, r1, #0x0
add r1, sp, #0x008
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
_080166CA:
add sp, #0x00C
pop {r0}
bx r0
_080166D0: .4byte 0x080C9748
_080166D4: .4byte 0x080C9740
thumb_func_start sub_80166D8
sub_80166D8:
push {r4, r5, r6, lr}
mov r6, r8
push {r6}
adds r5, r0, #0x0
adds r6, r1, #0x0
adds r4, r2, #0x0
mov r8, r3
lsls r4, r4, #0x10
lsrs r4, r4, #0x10
movs r0, #0x01
adds r1, r5, #0x0
adds r2, r6, #0x0
bl map_getBufferPtr2d
adds r1, r0, #0x0
movs r2, #0xC8
lsls r2, r2, #0x02
adds r0, r4, #0x0
mov r3, r8
bl sub_800C6D4
pop {r3}
mov r8, r3
pop {r4, r5, r6}
pop {r0}
bx r0
thumb_func_start sub_801670C
sub_801670C:
push {r4, r5, lr}
add sp, #-0x008
adds r3, r0, #0x0
adds r4, r1, #0x0
adds r5, r2, #0x0
movs r0, #0x01
adds r1, r3, #0x0
adds r2, r4, #0x0
bl map_getBufferPtr2d
adds r1, r0, #0x0
movs r2, #0xD8
lsls r2, r2, #0x02
movs r0, #0xB0
lsls r0, r0, #0x02
str r0, [sp, #0x000]
movs r0, #0x0F
str r0, [sp, #0x004]
adds r0, r5, #0x0
movs r3, #0x09
bl sub_800E728
add sp, #0x008
pop {r4, r5}
pop {r0}
bx r0
thumb_func_start sub_8016740
sub_8016740:
push {r4, r5, lr}
add sp, #-0x008
adds r3, r0, #0x0
adds r4, r1, #0x0
adds r5, r2, #0x0
movs r0, #0x01
adds r1, r3, #0x0
adds r2, r4, #0x0
bl map_getBufferPtr2d
adds r2, r0, #0x0
ldr r1, _08016774 @ =0x02008400
movs r0, #0xC8
lsls r0, r0, #0x02
str r0, [sp, #0x000]
movs r0, #0x0F
str r0, [sp, #0x004]
adds r0, r5, #0x0
movs r3, #0x0F
bl sub_800E788
add sp, #0x008
pop {r4, r5}
pop {r0}
bx r0
.byte 0x00, 0x00
_08016774: .4byte 0x02008400
thumb_func_start sub_8016778
sub_8016778:
push {r4, r5, r6, r7, lr}
mov r7, r8
push {r7}
add sp, #-0x008
adds r6, r0, #0x0
mov r8, r1
ldr r0, _080167B8 @ =0x080C9488
ldr r7, _080167BC @ =0x080DA2F4
movs r4, #0x00
str r4, [sp, #0x000]
str r4, [sp, #0x004]
adds r1, r7, #0x0
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
ldr r0, _080167C0 @ =0x080C9490
ldr r5, _080167C4 @ =0x080DA2F8
str r4, [sp, #0x000]
str r4, [sp, #0x004]
adds r1, r5, #0x0
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
movs r0, #0x1F
mov r1, r8
ands r0, r1
cmp r0, #0x13
bgt _080167CC
ldr r0, _080167C8 @ =0x080C9498
b _080167D8
_080167B8: .4byte 0x080C9488
_080167BC: .4byte 0x080DA2F4
_080167C0: .4byte 0x080C9490
_080167C4: .4byte 0x080DA2F8
_080167C8: .4byte 0x080C9498
_080167CC:
movs r2, #0x20
mov r0, r8
ands r2, r0
cmp r2, #0x00
beq _080167F4
ldr r0, _080167F0 @ =0x080C94A8
_080167D8:
adds r1, r5, #0x0
cmp r6, #0x00
bne _080167E0
adds r1, r7, #0x0
_080167E0:
str r4, [sp, #0x000]
str r4, [sp, #0x004]
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
b _0801680A
.byte 0x00, 0x00
_080167F0: .4byte 0x080C94A8
_080167F4:
ldr r0, _08016818 @ =0x080C94B8
adds r1, r5, #0x0
cmp r6, #0x00
bne _080167FE
adds r1, r7, #0x0
_080167FE:
str r2, [sp, #0x000]
str r2, [sp, #0x004]
movs r2, #0x00
movs r3, #0x00
bl oam_renderCellData
_0801680A:
add sp, #0x008
pop {r3}
mov r8, r3
pop {r4, r5, r6, r7}
pop {r0}
bx r0
.byte 0x00, 0x00
_08016818: .4byte 0x080C94B8
